; ModuleID = 'tree-sra.bc'
source_filename = "tree-sra.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.anon = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.processor_costs = type { i32, i32, i32, i32, [5 x i32], i32, [5 x i32], i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [3 x i32], [3 x i32], i32, [2 x i32], [2 x i32], i32, [3 x i32], [3 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x %struct.stringop_algs], [2 x %struct.stringop_algs], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.stringop_algs = type { i32, [4 x %struct.stringop_strategy] }
%struct.stringop_strategy = type { i32, i32 }
%struct.access = type { i64, i64, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.gimple_statement_d*, %struct.access*, %struct.access*, %struct.access*, %struct.access*, %struct.assign_link*, %struct.assign_link*, %struct.access*, %union.tree_node*, i16 }
%struct.assign_link = type { %struct.access*, %struct.access*, %struct.assign_link* }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.VEC_ipa_parm_adjustment_t_heap = type { %struct.VEC_ipa_parm_adjustment_t_base }
%struct.VEC_ipa_parm_adjustment_t_base = type { i32, i32, [1 x %struct.ipa_parm_adjustment] }
%struct.ipa_parm_adjustment = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, i32, i8 }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.referenced_var_iterator = type { %struct.htab_iterator }
%struct.htab_iterator = type { %struct.htab*, i8**, i8** }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.VEC_access_p_heap = type { %struct.VEC_access_p_base }
%struct.VEC_access_p_base = type { i32, i32, [1 x %struct.access*] }
%struct.gimple_statement_asm = type { %struct.gimple_statement_with_memory_ops_base, i8*, i8, i8, i8, i8, [1 x %union.tree_node*] }
%struct.gimple_statement_with_memory_ops_base = type { %struct.gimple_statement_with_ops_base, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_with_ops_base = type { %struct.gimple_statement_base, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.var_ann_d = type { i8, i32, %union.tree_node* }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.ao_ref_s = type { %union.tree_node*, %union.tree_node*, i64, i64, i64, i32, i32 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str = private unnamed_addr constant [5 x i8] c"esra\00", align 1
@pass_sra_early = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 ()* @gate_intra_sra, i32 ()* @early_intra_sra, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 63, i32 40, i32 0, i32 0, i32 0, i32 2055 } }, align 8, !dbg !0
@.str.1 = private unnamed_addr constant [4 x i8] c"sra\00", align 1
@pass_sra = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8 ()* @gate_intra_sra, i32 ()* @late_intra_sra, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 63, i32 40, i32 0, i32 0, i32 2097152, i32 2055 } }, align 8, !dbg !2078
@.str.2 = private unnamed_addr constant [9 x i8] c"eipa_sra\00", align 1
@pass_early_ipa_sra = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i8 ()* @ipa_early_sra_gate, i32 ()* @ipa_early_sra, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 129 } }, align 8, !dbg !2106
@.str.3 = private unnamed_addr constant [11 x i8] c"tree-sra.c\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@flag_tree_sra = external dso_local local_unnamed_addr global i32, align 4
@sra_mode = internal unnamed_addr global i32 0, align 4, !dbg !2108
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.5 = private unnamed_addr constant [28 x i8] c"Scalar replacements created\00", align 1
@sra_stats = internal global %struct.anon zeroinitializer, align 4, !dbg !2159
@.str.6 = private unnamed_addr constant [21 x i8] c"Modified expressions\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"Subtree copy stmts\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"Subreplacement stmts\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"Deleted stmts\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"Separate LHS and RHS handling\00", align 1
@candidate_bitmap = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2110
@should_scalarize_away_bitmap = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2112
@cannot_scalarize_away_bitmap = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2114
@name_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !2116
@.str.11 = private unnamed_addr constant [13 x i8] c"SRA accesses\00", align 1
@access_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2118
@.str.12 = private unnamed_addr constant [10 x i8] c"SRA links\00", align 1
@link_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2141
@base_access_vec = internal unnamed_addr global %struct.pointer_map_t* null, align 8, !dbg !2143
@encountered_apply_args = internal unnamed_addr global i1 false, align 1, !dbg !2175
@encountered_recursive_call = internal unnamed_addr global i1 false, align 1, !dbg !2176
@encountered_unchangable_recursive_call = internal unnamed_addr global i1 false, align 1, !dbg !2177
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.13 = private unnamed_addr constant [17 x i8] c"Candidate (%d): \00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@final_bbs = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2151
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.15 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@func_param_count = internal unnamed_addr global i32 0, align 4, !dbg !2153
@.str.16 = private unnamed_addr constant [24 x i8] c"LHS of a throwing stmt.\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"RHS of a throwing stmt.\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"! Disqualifying \00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c" - %s\0A\00", align 1
@.str.20 = private unnamed_addr constant [37 x i8] c"Non-scalarizable GIMPLE_ASM operand.\00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"V_C_E under a different handled component.\00", align 1
@.str.22 = private unnamed_addr constant [37 x i8] c"Encountered a variable sized access.\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"Encountered an acces not aligned to a byte.\00", align 1
@.str.24 = private unnamed_addr constant [37 x i8] c"Encountered an unconstrained access.\00", align 1
@bb_dereferences = internal unnamed_addr global i64* null, align 8, !dbg !2155
@ix86_cost = external dso_local local_unnamed_addr global %struct.processor_costs*, align 8
@.str.25 = private unnamed_addr constant [35 x i8] c"Will attempt to totally scalarize \00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c" (UID: %u): \0A\00", align 1
@.str.27 = private unnamed_addr constant [41 x i8] c"No or inhibitingly overlapping accesses.\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"\0AAccess trees for \00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"No scalar replacements to be created.\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"Scalarized aggregates\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@work_queue_head = internal unnamed_addr global %struct.access* null, align 8, !dbg !2157
@.str.31 = private unnamed_addr constant [9 x i8] c"Marking \00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c" offset: %u, size: %u: \00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c" to be replaced.\0A\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"* \00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"access { \00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"base = (%d)'\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"', offset = %ld\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c", size = %ld\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c", expr = \00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c", type = \00", align 1
@.str.41 = private unnamed_addr constant [264 x i8] c", grp_write = %d, total_scalarization = %d, grp_read = %d, grp_hint = %d, grp_covered = %d, grp_unscalarizable_region = %d, grp_unscalarized_data = %d, grp_partial_lhs = %d, grp_to_be_replaced = %d, grp_maybe_modified = %d, grp_not_necessarilly_dereferenced = %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [62 x i8] c", write = %d, total_scalarization = %d, grp_partial_lhs = %d\0A\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"SR\00", align 1
@.str.44 = private unnamed_addr constant [27 x i8] c"Created a replacement for \00", align 1
@.str.45 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"D%u\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@flag_ipa_sra = external dso_local local_unnamed_addr global i32, align 4
@.str.49 = private unnamed_addr constant [37 x i8] c"Function has no IPA-SRA candidates.\0A\00", align 1
@.str.50 = private unnamed_addr constant [58 x i8] c"There are callers with insufficient number of arguments.\0A\00", align 1
@.str.51 = private unnamed_addr constant [41 x i8] c"Function calls  __builtin_apply_args().\0A\00", align 1
@.str.52 = private unnamed_addr constant [62 x i8] c"Function calls itself with insufficient number of arguments.\0A\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"Unused parameters deleted\00", align 1
@.str.54 = private unnamed_addr constant [40 x i8] c"Scalar parameters converted to by-value\00", align 1
@.str.55 = private unnamed_addr constant [31 x i8] c"Aggregate parameters broken up\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"Aggregate parameter components created\00", align 1
@.str.57 = private unnamed_addr constant [46 x i8] c"Function not local to this compilation unit.\0A\00", align 1
@.str.58 = private unnamed_addr constant [31 x i8] c"Function is a virtual method.\0A\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.59 = private unnamed_addr constant [42 x i8] c"Function too big to be made truly local.\0A\00", align 1
@.str.60 = private unnamed_addr constant [51 x i8] c"Function has no callers in this compilation unit.\0A\00", align 1
@.str.61 = private unnamed_addr constant [24 x i8] c"Function uses stdarg. \0A\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.62 = private unnamed_addr constant [34 x i8] c"NOT proceeding to change params.\0A\00", align 1
@no_accesses_representant = internal global %struct.access zeroinitializer, align 8, !dbg !2173
@.str.63 = private unnamed_addr constant [39 x i8] c"Dereference table before propagation:\0A\00", align 1
@.str.64 = private unnamed_addr constant [38 x i8] c"Dereference table after propagation:\0A\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"%4i  %i   \00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c" %4ld\00", align 1
@.str.67 = private unnamed_addr constant [34 x i8] c"Evaluating PARAM group sizes for \00", align 1
@.str.68 = private unnamed_addr constant [42 x i8] c"    ....will be split into %i components\0A\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"ISRA\00", align 1
@.str.70 = private unnamed_addr constant [23 x i8] c"About to replace expr \00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c" with \00", align 1
@.str.72 = private unnamed_addr constant [42 x i8] c"replacing an SSA name of a removed param \00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"ISR\00", align 1
@.str.74 = private unnamed_addr constant [36 x i8] c"Adjusting call (%i -> %i) %s -> %s\0A\00", align 1
@.str.75 = private unnamed_addr constant [25 x i8] c"Adjusting recursive call\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2182 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2195, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2196, metadata !DIExpression()), !dbg !2197
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2198
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2199
  ret i32 %call, !dbg !2200
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2201 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2205
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2206
  ret i32 %call, !dbg !2207
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2208 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2263, metadata !DIExpression()), !dbg !2264
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2265
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2265
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2265
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2265
  %cmp = icmp uge i8* %0, %1, !dbg !2265
  %conv1 = zext i1 %cmp to i64, !dbg !2265
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2265
  %tobool = icmp eq i64 %expval, 0, !dbg !2265
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2265

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2265
  br label %cond.end, !dbg !2265

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2265
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2265
  %2 = load i8, i8* %0, align 1, !dbg !2265
  %conv3 = zext i8 %2 to i32, !dbg !2265
  br label %cond.end, !dbg !2265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2265
  ret i32 %cond, !dbg !2266
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2267 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2269, metadata !DIExpression()), !dbg !2270
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2271
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2271
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2271
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2271
  %cmp = icmp uge i8* %0, %1, !dbg !2271
  %conv1 = zext i1 %cmp to i64, !dbg !2271
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2271
  %tobool = icmp eq i64 %expval, 0, !dbg !2271
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2271

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2271
  br label %cond.end, !dbg !2271

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2271
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2271
  %2 = load i8, i8* %0, align 1, !dbg !2271
  %conv3 = zext i8 %2 to i32, !dbg !2271
  br label %cond.end, !dbg !2271

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2271
  ret i32 %cond, !dbg !2272
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2273 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2274
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2274
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2274
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2274
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2274
  %cmp = icmp uge i8* %1, %2, !dbg !2274
  %conv1 = zext i1 %cmp to i64, !dbg !2274
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2274
  %tobool = icmp eq i64 %expval, 0, !dbg !2274
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2274

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2274
  br label %cond.end, !dbg !2274

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2274
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2274
  %3 = load i8, i8* %1, align 1, !dbg !2274
  %conv3 = zext i8 %3 to i32, !dbg !2274
  br label %cond.end, !dbg !2274

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2274
  ret i32 %cond, !dbg !2275
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2276 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2280, metadata !DIExpression()), !dbg !2281
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2282
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2283
  ret i32 %call, !dbg !2284
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2285 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2289, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2290, metadata !DIExpression()), !dbg !2291
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2292
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2292
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2292
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2292
  %cmp = icmp uge i8* %0, %1, !dbg !2292
  %conv1 = zext i1 %cmp to i64, !dbg !2292
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2292
  %tobool = icmp eq i64 %expval, 0, !dbg !2292
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2292

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2292
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2292
  br label %cond.end, !dbg !2292

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2292
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2292
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2292
  store i8 %conv2, i8* %0, align 1, !dbg !2292
  %conv6 = and i32 %__c, 255, !dbg !2292
  br label %cond.end, !dbg !2292

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2292
  ret i32 %cond, !dbg !2293
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2294 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2296, metadata !DIExpression()), !dbg !2298
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2297, metadata !DIExpression()), !dbg !2298
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2299
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2299
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2299
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2299
  %cmp = icmp uge i8* %0, %1, !dbg !2299
  %conv1 = zext i1 %cmp to i64, !dbg !2299
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2299
  %tobool = icmp eq i64 %expval, 0, !dbg !2299
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2299

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2299
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2299
  br label %cond.end, !dbg !2299

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2299
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2299
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2299
  store i8 %conv2, i8* %0, align 1, !dbg !2299
  %conv6 = and i32 %__c, 255, !dbg !2299
  br label %cond.end, !dbg !2299

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2299
  ret i32 %cond, !dbg !2300
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2301 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2303, metadata !DIExpression()), !dbg !2304
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2305
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2305
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2305
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2305
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2305
  %cmp = icmp uge i8* %1, %2, !dbg !2305
  %conv1 = zext i1 %cmp to i64, !dbg !2305
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2305
  %tobool = icmp eq i64 %expval, 0, !dbg !2305
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2305

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2305
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2305
  br label %cond.end, !dbg !2305

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2305
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2305
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2305
  store i8 %conv4, i8* %1, align 1, !dbg !2305
  %conv6 = and i32 %__c, 255, !dbg !2305
  br label %cond.end, !dbg !2305

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2305
  ret i32 %cond, !dbg !2306
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2307 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2313, metadata !DIExpression()), !dbg !2316
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2314, metadata !DIExpression()), !dbg !2316
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2315, metadata !DIExpression()), !dbg !2316
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2317
  ret i64 %call, !dbg !2318
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2319 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2321, metadata !DIExpression()), !dbg !2322
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2323
  %0 = load i32, i32* %_flags, align 8, !dbg !2323
  %and = lshr i32 %0, 4, !dbg !2323
  %and.lobit = and i32 %and, 1, !dbg !2323
  ret i32 %and.lobit, !dbg !2324
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2325 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2327, metadata !DIExpression()), !dbg !2328
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2329
  %0 = load i32, i32* %_flags, align 8, !dbg !2329
  %and = lshr i32 %0, 5, !dbg !2329
  %and.lobit = and i32 %and, 1, !dbg !2329
  ret i32 %and.lobit, !dbg !2330
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2331 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2334, metadata !DIExpression()), !dbg !2335
  %__c.off = add i32 %__c, 128, !dbg !2336
  %0 = icmp ult i32 %__c.off, 384, !dbg !2336
  br i1 %0, label %cond.true, label %cond.end, !dbg !2336

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2337
  %1 = load i32*, i32** %call, align 8, !dbg !2338
  %idxprom = sext i32 %__c to i64, !dbg !2339
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2339
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2339
  br label %cond.end, !dbg !2340

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2340
  ret i32 %cond, !dbg !2341
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2344, metadata !DIExpression()), !dbg !2345
  %__c.off = add i32 %__c, 128, !dbg !2346
  %0 = icmp ult i32 %__c.off, 384, !dbg !2346
  br i1 %0, label %cond.true, label %cond.end, !dbg !2346

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2347
  %1 = load i32*, i32** %call, align 8, !dbg !2348
  %idxprom = sext i32 %__c to i64, !dbg !2349
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2349
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2349
  br label %cond.end, !dbg !2350

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2350
  ret i32 %cond, !dbg !2351
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2352 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2357, metadata !DIExpression()), !dbg !2358
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2359
  %conv = trunc i64 %call to i32, !dbg !2360
  ret i32 %conv, !dbg !2361
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2362 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2366, metadata !DIExpression()), !dbg !2367
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2368
  ret i64 %call, !dbg !2369
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2370 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2375, metadata !DIExpression()), !dbg !2376
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2377
  ret i64 %call, !dbg !2378
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2379 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2385, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2386, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2387, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2388, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2389, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i64 0, metadata !2390, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2391, metadata !DIExpression()), !dbg !2395
  br label %while.cond, !dbg !2396

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2397
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2395
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2391, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2390, metadata !DIExpression()), !dbg !2395
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2398
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2396

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2399
  %div = lshr i64 %add, 1, !dbg !2401
  call void @llvm.dbg.value(metadata i64 %div, metadata !2392, metadata !DIExpression()), !dbg !2395
  %mul = mul i64 %div, %__size, !dbg !2402
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2403
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2393, metadata !DIExpression()), !dbg !2395
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2404
  call void @llvm.dbg.value(metadata i32 %call, metadata !2394, metadata !DIExpression()), !dbg !2395
  %cmp1 = icmp slt i32 %call, 0, !dbg !2405
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2407

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2408
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2410

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2411
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2390, metadata !DIExpression()), !dbg !2395
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2395
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2395
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2391, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2390, metadata !DIExpression()), !dbg !2395
  br label %while.cond, !dbg !2396, !llvm.loop !2412

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2395
  ret i8* %retval.0, !dbg !2414
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2415 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2421, metadata !DIExpression()), !dbg !2422
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2423
  ret double %call, !dbg !2424
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2425 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2434, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2435, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata i32 %base, metadata !2436, metadata !DIExpression()), !dbg !2437
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2438
  ret i64 %call, !dbg !2439
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2440 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2446, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2447, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.value(metadata i32 %base, metadata !2448, metadata !DIExpression()), !dbg !2449
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2450
  ret i64 %call, !dbg !2451
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2452 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2463, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2464, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i32 %base, metadata !2465, metadata !DIExpression()), !dbg !2466
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2467
  ret i64 %call, !dbg !2468
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2469 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2473, metadata !DIExpression()), !dbg !2476
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2474, metadata !DIExpression()), !dbg !2476
  call void @llvm.dbg.value(metadata i32 %base, metadata !2475, metadata !DIExpression()), !dbg !2476
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2477
  ret i64 %call, !dbg !2478
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2479 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2519, metadata !DIExpression()), !dbg !2521
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2520, metadata !DIExpression()), !dbg !2521
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2522
  ret i32 %call, !dbg !2523
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2524 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2526, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2527, metadata !DIExpression()), !dbg !2528
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2529
  ret i32 %call, !dbg !2530
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2531 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2535, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2536, metadata !DIExpression()), !dbg !2537
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2538
  ret i32 %call, !dbg !2539
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2540 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2544, metadata !DIExpression()), !dbg !2548
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2545, metadata !DIExpression()), !dbg !2548
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2546, metadata !DIExpression()), !dbg !2548
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2547, metadata !DIExpression()), !dbg !2548
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2549
  ret i32 %call, !dbg !2550
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2551 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2555, metadata !DIExpression()), !dbg !2558
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2556, metadata !DIExpression()), !dbg !2558
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2557, metadata !DIExpression()), !dbg !2558
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2557, metadata !DIExpression(DW_OP_deref)), !dbg !2558
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2559
  ret i32 %call, !dbg !2560
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2561 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2565, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2566, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2567, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2568, metadata !DIExpression()), !dbg !2569
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2568, metadata !DIExpression(DW_OP_deref)), !dbg !2569
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2570
  ret i32 %call, !dbg !2571
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2572 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2596, metadata !DIExpression()), !dbg !2598
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2597, metadata !DIExpression()), !dbg !2598
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2599
  ret i32 %call, !dbg !2600
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2601 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2603, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2604, metadata !DIExpression()), !dbg !2605
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2606
  ret i32 %call, !dbg !2607
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2608 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2612, metadata !DIExpression()), !dbg !2614
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2613, metadata !DIExpression()), !dbg !2614
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2615
  ret i32 %call, !dbg !2616
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2617 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2621, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2622, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2623, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2624, metadata !DIExpression()), !dbg !2625
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2626
  ret i32 %call, !dbg !2627
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @build_ref_for_offset(%union.tree_node** %expr, %union.tree_node* %type, i64 %offset, %union.tree_node* %exp_type, i8 zeroext %allow_ptr) local_unnamed_addr #5 !dbg !2628 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !2632, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2633, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata i64 %offset, metadata !2634, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata %union.tree_node* %exp_type, metadata !2635, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.value(metadata i8 %allow_ptr, metadata !2636, metadata !DIExpression()), !dbg !2638
  %tobool = icmp eq %union.tree_node** %expr, null, !dbg !2639
  br i1 %tobool, label %cond.end10, label %cond.true, !dbg !2639

cond.true:                                        ; preds = %entry
  %0 = bitcast %union.tree_node** %expr to i64**, !dbg !2640
  %1 = load i64*, i64** %0, align 8, !dbg !2640
  %bf.load = load i64, i64* %1, align 8, !dbg !2640
  %bf.cast = and i64 %bf.load, 65535, !dbg !2640
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2640
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2640
  %cmp = icmp ugt i32 %2, 3, !dbg !2640
  br i1 %cmp, label %land.lhs.true, label %cond.end10, !dbg !2640

land.lhs.true:                                    ; preds = %cond.true
  %cmp7 = icmp ult i32 %2, 11, !dbg !2640
  br i1 %cmp7, label %cond.true8, label %cond.end10, !dbg !2640

cond.true8:                                       ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %1, i64 3, !dbg !2640
  %3 = bitcast i64* %locus to i32*, !dbg !2640
  %4 = load i32, i32* %3, align 8, !dbg !2640
  br label %cond.end10, !dbg !2640

cond.end10:                                       ; preds = %entry, %cond.true8, %land.lhs.true, %cond.true
  %cond11 = phi i32 [ %4, %cond.true8 ], [ 0, %land.lhs.true ], [ 0, %cond.true ], [ 0, %entry ], !dbg !2639
  call void @llvm.dbg.value(metadata i32 %cond11, metadata !2637, metadata !DIExpression()), !dbg !2638
  br i1 %tobool, label %if.end, label %if.then, !dbg !2641

if.then:                                          ; preds = %cond.end10
  %5 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !2642
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* %5) #6, !dbg !2644
  store %union.tree_node* %call, %union.tree_node** %expr, align 8, !dbg !2645
  br label %if.end, !dbg !2646

if.end:                                           ; preds = %cond.end10, %if.then
  %tobool13 = icmp eq i8 %allow_ptr, 0, !dbg !2647
  br i1 %tobool13, label %if.end33, label %land.lhs.true14, !dbg !2649

land.lhs.true14:                                  ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2650
  %bf.load16 = load i64, i64* %6, align 8, !dbg !2650
  %bf.cast181 = and i64 %bf.load16, 65535, !dbg !2650
  %cmp19 = icmp eq i64 %bf.cast181, 10, !dbg !2650
  br i1 %cmp19, label %if.then27, label %lor.lhs.false, !dbg !2650

lor.lhs.false:                                    ; preds = %land.lhs.true14
  %cmp25 = icmp eq i64 %bf.cast181, 12, !dbg !2650
  br i1 %cmp25, label %if.then27, label %if.end33, !dbg !2651

if.then27:                                        ; preds = %lor.lhs.false, %land.lhs.true14
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2652
  %7 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !2652
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !2633, metadata !DIExpression()), !dbg !2638
  br i1 %tobool, label %if.end33, label %if.then30, !dbg !2654

if.then30:                                        ; preds = %if.then27
  %8 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !2655
  %call31 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %cond11, i32 47, %union.tree_node* %7, %union.tree_node* %8) #6, !dbg !2655
  store %union.tree_node* %call31, %union.tree_node** %expr, align 8, !dbg !2657
  br label %if.end33, !dbg !2658

if.end33:                                         ; preds = %if.then27, %if.end, %if.then30, %lor.lhs.false
  %type.addr.0 = phi %union.tree_node* [ %type, %lor.lhs.false ], [ %type, %if.end ], [ %7, %if.then30 ], [ %7, %if.then27 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !2633, metadata !DIExpression()), !dbg !2638
  %call34 = tail call fastcc zeroext i8 @build_ref_for_offset_1(%union.tree_node** %expr, %union.tree_node* %type.addr.0, i64 %offset, %union.tree_node* %exp_type) #7, !dbg !2659
  ret i8 %call34, !dbg !2660
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @build_ref_for_offset_1(%union.tree_node** %res, %union.tree_node* %type, i64 %offset, %union.tree_node* %exp_type) unnamed_addr #5 !dbg !2661 {
entry:
  %expr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %res, metadata !2665, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2666, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata i64 %offset, metadata !2667, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %exp_type, metadata !2668, metadata !DIExpression()), !dbg !2683
  %tobool = icmp ne %union.tree_node* %exp_type, null, !dbg !2684
  %tobool90 = icmp eq %union.tree_node** %res, null, !dbg !2686
  %0 = bitcast %union.tree_node** %expr to i8*, !dbg !2688
  %1 = bitcast %union.tree_node** %expr to i64*, !dbg !2689
  %2 = bitcast %union.tree_node** %res to i64*, !dbg !2689
  %tobool110 = icmp eq %union.tree_node* %exp_type, null, !dbg !2693
  %. = zext i1 %tobool110 to i8, !dbg !2693
  br label %while.body, !dbg !2695

while.body:                                       ; preds = %cleanup113, %entry
  %offset.addr.0 = phi i64 [ %offset, %entry ], [ %offset.addr.1, %cleanup113 ]
  %type.addr.0 = phi %union.tree_node* [ %type, %entry ], [ %type.addr.1, %cleanup113 ]
  %retval.0 = phi i8 [ undef, %entry ], [ %retval.3, %cleanup113 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !2666, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata i64 %offset.addr.0, metadata !2667, metadata !DIExpression()), !dbg !2683
  %cmp = icmp eq i64 %offset.addr.0, 0, !dbg !2696
  %or.cond = and i1 %cmp, %tobool, !dbg !2697
  br i1 %or.cond, label %land.lhs.true1, label %if.end, !dbg !2697

land.lhs.true1:                                   ; preds = %while.body
  %call = call zeroext i8 @types_compatible_p(%union.tree_node* nonnull %exp_type, %union.tree_node* %type.addr.0) #6, !dbg !2698
  %tobool2 = icmp eq i8 %call, 0, !dbg !2698
  br i1 %tobool2, label %if.end, label %cleanup113, !dbg !2699

if.end:                                           ; preds = %land.lhs.true1, %while.body
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2700
  %bf.load = load i64, i64* %3, align 8, !dbg !2700
  %4 = trunc i64 %bf.load to i16, !dbg !2700
  switch i16 %4, label %sw.default [
    i16 17, label %sw.bb
    i16 18, label %sw.bb
    i16 16, label %sw.bb
    i16 15, label %sw.bb64
  ], !dbg !2701

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2702
  %5 = bitcast i32* %values to %union.tree_node**, !dbg !2702
  br i1 %tobool90, label %sw.bb.split.us, label %sw.bb.sw.bb.split_crit_edge, !dbg !2703

sw.bb.sw.bb.split_crit_edge:                      ; preds = %sw.bb
  br label %for.cond, !dbg !2703

sw.bb.split.us:                                   ; preds = %sw.bb
  br label %for.cond.us, !dbg !2703

for.cond.us:                                      ; preds = %for.inc.us, %sw.bb.split.us
  %fld.0.in.us = phi %union.tree_node** [ %5, %sw.bb.split.us ], [ %chain.us, %for.inc.us ]
  %retval.1.us = phi i8 [ %retval.0, %sw.bb.split.us ], [ %retval.2.us, %for.inc.us ]
  %fld.0.us = load %union.tree_node*, %union.tree_node** %fld.0.in.us, align 8, !dbg !2704
  call void @llvm.dbg.value(metadata %union.tree_node* %fld.0.us, metadata !2669, metadata !DIExpression()), !dbg !2705
  %tobool4.us = icmp eq %union.tree_node* %fld.0.us, null, !dbg !2706
  br i1 %tobool4.us, label %cleanup113.loopexit.us-lcssa.us, label %for.body.us, !dbg !2706

for.body.us:                                      ; preds = %for.cond.us
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2707
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2708
  %bf.load6.us = load i64, i64* %6, align 8, !dbg !2708
  %bf.cast85.us = and i64 %bf.load6.us, 65535, !dbg !2710
  %cmp9.us = icmp eq i64 %bf.cast85.us, 31, !dbg !2710
  br i1 %cmp9.us, label %if.end12.us, label %cleanup.us, !dbg !2711

if.end12.us:                                      ; preds = %for.body.us
  %call13.us = call i64 @int_bit_position(%union.tree_node* nonnull %fld.0.us) #6, !dbg !2712
  call void @llvm.dbg.value(metadata i64 %call13.us, metadata !2675, metadata !DIExpression()), !dbg !2688
  %bf.load15.us = load i64, i64* %3, align 8, !dbg !2713
  %bf.cast176.us = and i64 %bf.load15.us, 65535, !dbg !2713
  %cmp18.us = icmp eq i64 %bf.cast176.us, 16, !dbg !2713
  %cmp20.us = icmp eq i64 %call13.us, 0, !dbg !2713
  %or.cond1.us = or i1 %cmp18.us, %cmp20.us, !dbg !2713
  br i1 %or.cond1.us, label %cond.end.us, label %cond.true.us, !dbg !2713

cond.true.us:                                     ; preds = %if.end12.us
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1405, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2713
  br label %cond.end.us, !dbg !2713

cond.end.us:                                      ; preds = %cond.true.us, %if.end12.us
  %size22.us = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2714
  %7 = load %union.tree_node*, %union.tree_node** %size22.us, align 8, !dbg !2714
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !2671, metadata !DIExpression()), !dbg !2705
  %tobool23.us = icmp eq %union.tree_node* %7, null, !dbg !2715
  br i1 %tobool23.us, label %cleanup.us, label %lor.lhs.false24.us, !dbg !2717

lor.lhs.false24.us:                               ; preds = %cond.end.us
  %call25.us = call i32 @host_integerp(%union.tree_node* nonnull %7, i32 1) #6, !dbg !2718
  %tobool26.us = icmp eq i32 %call25.us, 0, !dbg !2718
  br i1 %tobool26.us, label %cleanup.us, label %if.end28.us, !dbg !2719

if.end28.us:                                      ; preds = %lor.lhs.false24.us
  %call29.us = call i64 @tree_low_cst(%union.tree_node* nonnull %7, i32 1) #6, !dbg !2720
  call void @llvm.dbg.value(metadata i64 %call29.us, metadata !2680, metadata !DIExpression()), !dbg !2688
  %cmp30.us = icmp eq i64 %call29.us, 0, !dbg !2721
  br i1 %cmp30.us, label %if.then32.us, label %if.else.us, !dbg !2723

if.else.us:                                       ; preds = %if.end28.us
  %cmp37.us = icmp slt i64 %offset.addr.0, %call13.us, !dbg !2724
  %add.us = add nsw i64 %call13.us, %call29.us, !dbg !2726
  %cmp40.us = icmp sle i64 %add.us, %offset.addr.0, !dbg !2727
  %or.cond2.us = or i1 %cmp37.us, %cmp40.us, !dbg !2728
  br i1 %or.cond2.us, label %cleanup.us, label %if.end44.us, !dbg !2728

if.then32.us:                                     ; preds = %if.end28.us
  %cmp33.us = icmp eq i64 %offset.addr.0, %call13.us, !dbg !2729
  br i1 %cmp33.us, label %if.end44.us, label %cleanup.us, !dbg !2732

if.end44.us:                                      ; preds = %if.then32.us, %if.else.us
  call void @llvm.dbg.value(metadata %union.tree_node** null, metadata !2682, metadata !DIExpression()), !dbg !2688
  %type52.us = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2733
  %8 = load %union.tree_node*, %union.tree_node** %type52.us, align 8, !dbg !2733
  %sub.us = sub nsw i64 %offset.addr.0, %call13.us, !dbg !2734
  %call53.us = call fastcc zeroext i8 @build_ref_for_offset_1(%union.tree_node** null, %union.tree_node* %8, i64 %sub.us, %union.tree_node* %exp_type) #7, !dbg !2735
  %tobool54.us = icmp eq i8 %call53.us, 0, !dbg !2735
  br i1 %tobool54.us, label %cleanup.us, label %if.then55.us, !dbg !2736

if.then55.us:                                     ; preds = %if.end44.us
  br i1 true, label %cleanup.us, label %if.then57.us, !dbg !2737

if.then57.us:                                     ; preds = %if.then55.us
  br label %cleanup.us, !dbg !2738

cleanup.us:                                       ; preds = %if.then57.us, %if.then55.us, %if.end44.us, %if.then32.us, %if.else.us, %lor.lhs.false24.us, %cond.end.us, %for.body.us
  %cleanup.dest.slot.0.us = phi i32 [ 7, %for.body.us ], [ 7, %lor.lhs.false24.us ], [ 7, %cond.end.us ], [ 7, %if.then32.us ], [ 7, %if.else.us ], [ undef, %if.then57.us ], [ 1, %if.then55.us ], [ 0, %if.end44.us ]
  %retval.2.us = phi i8 [ %retval.1.us, %for.body.us ], [ %retval.1.us, %lor.lhs.false24.us ], [ %retval.1.us, %cond.end.us ], [ %retval.1.us, %if.then32.us ], [ %retval.1.us, %if.else.us ], [ undef, %if.then57.us ], [ 1, %if.then55.us ], [ %retval.1.us, %if.end44.us ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2739
  switch i32 %cleanup.dest.slot.0.us, label %cleanup113.loopexit.us-lcssa.us [
    i32 0, label %for.inc.us
    i32 7, label %for.inc.us
  ]

for.inc.us:                                       ; preds = %cleanup.us, %cleanup.us
  %chain.us = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2740
  br label %for.cond.us, !dbg !2741, !llvm.loop !2742

cleanup113.loopexit.us-lcssa.us:                  ; preds = %cleanup.us, %for.cond.us
  %cleanup.dest.slot.1.ph.ph.us = phi i32 [ %cleanup.dest.slot.0.us, %cleanup.us ], [ 1, %for.cond.us ]
  %retval.3.ph.ph.us = phi i8 [ %retval.2.us, %cleanup.us ], [ 0, %for.cond.us ]
  br label %cleanup113.loopexit

for.cond:                                         ; preds = %for.inc, %sw.bb.sw.bb.split_crit_edge
  %fld.0.in = phi %union.tree_node** [ %5, %sw.bb.sw.bb.split_crit_edge ], [ %chain, %for.inc ]
  %retval.1 = phi i8 [ %retval.0, %sw.bb.sw.bb.split_crit_edge ], [ %retval.2, %for.inc ]
  %fld.0 = load %union.tree_node*, %union.tree_node** %fld.0.in, align 8, !dbg !2704
  call void @llvm.dbg.value(metadata %union.tree_node* %fld.0, metadata !2669, metadata !DIExpression()), !dbg !2705
  %tobool4 = icmp eq %union.tree_node* %fld.0, null, !dbg !2706
  br i1 %tobool4, label %cleanup113.loopexit.us-lcssa, label %for.body, !dbg !2706

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2707
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2708
  %bf.load6 = load i64, i64* %9, align 8, !dbg !2708
  %bf.cast85 = and i64 %bf.load6, 65535, !dbg !2710
  %cmp9 = icmp eq i64 %bf.cast85, 31, !dbg !2710
  br i1 %cmp9, label %if.end12, label %cleanup, !dbg !2711

if.end12:                                         ; preds = %for.body
  %call13 = call i64 @int_bit_position(%union.tree_node* nonnull %fld.0) #6, !dbg !2712
  call void @llvm.dbg.value(metadata i64 %call13, metadata !2675, metadata !DIExpression()), !dbg !2688
  %bf.load15 = load i64, i64* %3, align 8, !dbg !2713
  %bf.cast176 = and i64 %bf.load15, 65535, !dbg !2713
  %cmp18 = icmp eq i64 %bf.cast176, 16, !dbg !2713
  %cmp20 = icmp eq i64 %call13, 0, !dbg !2713
  %or.cond1 = or i1 %cmp18, %cmp20, !dbg !2713
  br i1 %or.cond1, label %cond.end, label %cond.true, !dbg !2713

cond.true:                                        ; preds = %if.end12
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1405, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2713
  br label %cond.end, !dbg !2713

cond.end:                                         ; preds = %if.end12, %cond.true
  %size22 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2714
  %10 = load %union.tree_node*, %union.tree_node** %size22, align 8, !dbg !2714
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !2671, metadata !DIExpression()), !dbg !2705
  %tobool23 = icmp eq %union.tree_node* %10, null, !dbg !2715
  br i1 %tobool23, label %cleanup, label %lor.lhs.false24, !dbg !2717

lor.lhs.false24:                                  ; preds = %cond.end
  %call25 = call i32 @host_integerp(%union.tree_node* nonnull %10, i32 1) #6, !dbg !2718
  %tobool26 = icmp eq i32 %call25, 0, !dbg !2718
  br i1 %tobool26, label %cleanup, label %if.end28, !dbg !2719

if.end28:                                         ; preds = %lor.lhs.false24
  %call29 = call i64 @tree_low_cst(%union.tree_node* nonnull %10, i32 1) #6, !dbg !2720
  call void @llvm.dbg.value(metadata i64 %call29, metadata !2680, metadata !DIExpression()), !dbg !2688
  %cmp30 = icmp eq i64 %call29, 0, !dbg !2721
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !2723

if.then32:                                        ; preds = %if.end28
  %cmp33 = icmp eq i64 %offset.addr.0, %call13, !dbg !2729
  br i1 %cmp33, label %if.end44, label %cleanup, !dbg !2732

if.else:                                          ; preds = %if.end28
  %cmp37 = icmp slt i64 %offset.addr.0, %call13, !dbg !2724
  %add = add nsw i64 %call13, %call29, !dbg !2726
  %cmp40 = icmp sle i64 %add, %offset.addr.0, !dbg !2727
  %or.cond2 = or i1 %cmp37, %cmp40, !dbg !2728
  br i1 %or.cond2, label %cleanup, label %if.end44, !dbg !2728

if.end44:                                         ; preds = %if.then32, %if.else
  %type47 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2744
  %11 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !2744
  %12 = load %union.tree_node*, %union.tree_node** %res, align 8, !dbg !2744
  %call48 = call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %11, %union.tree_node* %12, %union.tree_node* nonnull %fld.0, %union.tree_node* null) #6, !dbg !2744
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !2681, metadata !DIExpression()), !dbg !2688
  store %union.tree_node* %call48, %union.tree_node** %expr, align 8, !dbg !2747
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !2682, metadata !DIExpression()), !dbg !2688
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !2682, metadata !DIExpression()), !dbg !2688
  %13 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !2733
  %sub = sub nsw i64 %offset.addr.0, %call13, !dbg !2734
  %call53 = call fastcc zeroext i8 @build_ref_for_offset_1(%union.tree_node** nonnull %expr, %union.tree_node* %13, i64 %sub, %union.tree_node* %exp_type) #7, !dbg !2735
  %tobool54 = icmp eq i8 %call53, 0, !dbg !2735
  br i1 %tobool54, label %cleanup, label %if.then55, !dbg !2736

if.then55:                                        ; preds = %if.end44
  br i1 false, label %if.then55.cleanup_crit_edge, label %if.then57, !dbg !2737

if.then55.cleanup_crit_edge:                      ; preds = %if.then55
  br label %cleanup, !dbg !2737

if.then57:                                        ; preds = %if.then55
  %14 = load i64, i64* %1, align 8, !dbg !2748
  store i64 %14, i64* %2, align 8, !dbg !2749
  br label %cleanup, !dbg !2738

cleanup:                                          ; preds = %if.then55.cleanup_crit_edge, %if.then32, %if.end44, %lor.lhs.false24, %cond.end, %for.body, %if.then57, %if.else
  %cleanup.dest.slot.0 = phi i32 [ 7, %for.body ], [ 7, %lor.lhs.false24 ], [ 7, %cond.end ], [ 7, %if.then32 ], [ 7, %if.else ], [ 1, %if.then57 ], [ undef, %if.then55.cleanup_crit_edge ], [ 0, %if.end44 ]
  %retval.2 = phi i8 [ %retval.1, %for.body ], [ %retval.1, %lor.lhs.false24 ], [ %retval.1, %cond.end ], [ %retval.1, %if.then32 ], [ %retval.1, %if.else ], [ 1, %if.then57 ], [ undef, %if.then55.cleanup_crit_edge ], [ %retval.1, %if.end44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2739
  switch i32 %cleanup.dest.slot.0, label %cleanup113.loopexit.us-lcssa [
    i32 0, label %for.inc
    i32 7, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2740
  br label %for.cond, !dbg !2741, !llvm.loop !2742

sw.bb64:                                          ; preds = %if.end
  %type66 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2750
  %15 = bitcast %union.tree_node** %type66 to %struct.tree_type**, !dbg !2750
  %16 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !2750
  %size68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %16, i64 0, i32 2, !dbg !2750
  %17 = load %union.tree_node*, %union.tree_node** %size68, align 8, !dbg !2750
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !2671, metadata !DIExpression()), !dbg !2705
  %tobool69 = icmp eq %union.tree_node* %17, null, !dbg !2751
  br i1 %tobool69, label %cleanup113, label %lor.lhs.false70, !dbg !2753

lor.lhs.false70:                                  ; preds = %sw.bb64
  %call71 = call i32 @host_integerp(%union.tree_node* nonnull %17, i32 1) #6, !dbg !2754
  %tobool72 = icmp eq i32 %call71, 0, !dbg !2754
  br i1 %tobool72, label %cleanup113, label %if.end74, !dbg !2755

if.end74:                                         ; preds = %lor.lhs.false70
  %call75 = call i64 @tree_low_cst(%union.tree_node* nonnull %17, i32 1) #6, !dbg !2756
  call void @llvm.dbg.value(metadata i64 %call75, metadata !2674, metadata !DIExpression()), !dbg !2705
  %values77 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2757
  %18 = bitcast i32* %values77 to %struct.tree_type**, !dbg !2757
  %19 = load %struct.tree_type*, %struct.tree_type** %18, align 8, !dbg !2757
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %19, i64 0, i32 13, !dbg !2757
  %20 = load %union.tree_node*, %union.tree_node** %minval, align 8, !dbg !2757
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !2673, metadata !DIExpression()), !dbg !2705
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2758
  %bf.load80 = load i64, i64* %21, align 8, !dbg !2758
  %bf.cast824 = and i64 %bf.load80, 65535, !dbg !2760
  %cmp83 = icmp ne i64 %bf.cast824, 23, !dbg !2760
  %cmp86 = icmp eq i64 %call75, 0, !dbg !2761
  %or.cond3 = or i1 %cmp83, %cmp86, !dbg !2762
  %22 = bitcast %struct.tree_type* %19 to %union.tree_node*, !dbg !2762
  br i1 %or.cond3, label %cleanup113, label %if.end89, !dbg !2762

if.end89:                                         ; preds = %if.end74
  br i1 %tobool90, label %if.end103, label %if.then91, !dbg !2763

if.then91:                                        ; preds = %if.end89
  %div = sdiv i64 %offset.addr.0, %call75, !dbg !2764
  %call94 = call %union.tree_node* @build_int_cst(%union.tree_node* %22, i64 %div) #6, !dbg !2766
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !2672, metadata !DIExpression()), !dbg !2705
  %call95 = call i32 @integer_zerop(%union.tree_node* %20) #6, !dbg !2767
  %tobool96 = icmp eq i32 %call95, 0, !dbg !2767
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !2769

if.then97:                                        ; preds = %if.then91
  %call98 = call %union.tree_node* @int_const_binop(i32 63, %union.tree_node* %call94, %union.tree_node* %20, i32 0) #6, !dbg !2770
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !2672, metadata !DIExpression()), !dbg !2705
  br label %if.end99, !dbg !2771

if.end99:                                         ; preds = %if.then91, %if.then97
  %index.0 = phi %union.tree_node* [ %call94, %if.then91 ], [ %call98, %if.then97 ], !dbg !2772
  call void @llvm.dbg.value(metadata %union.tree_node* %index.0, metadata !2672, metadata !DIExpression()), !dbg !2705
  %23 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !2773
  %24 = load %union.tree_node*, %union.tree_node** %res, align 8, !dbg !2773
  %call102 = call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %23, %union.tree_node* %24, %union.tree_node* %index.0, %union.tree_node* null, %union.tree_node* null) #6, !dbg !2773
  store %union.tree_node* %call102, %union.tree_node** %res, align 8, !dbg !2774
  br label %if.end103, !dbg !2775

if.end103:                                        ; preds = %if.end89, %if.end99
  %rem = srem i64 %offset.addr.0, %call75, !dbg !2776
  call void @llvm.dbg.value(metadata i64 %rem, metadata !2667, metadata !DIExpression()), !dbg !2683
  %25 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !2777
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !2666, metadata !DIExpression()), !dbg !2683
  br label %cleanup113, !dbg !2778

sw.default:                                       ; preds = %if.end
  br i1 %cmp, label %if.end109, label %cleanup113, !dbg !2779

if.end109:                                        ; preds = %sw.default
  br label %cleanup113, !dbg !2693

cleanup113.loopexit.us-lcssa:                     ; preds = %for.cond, %cleanup
  %cleanup.dest.slot.1.ph.ph = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 1, %for.cond ]
  %retval.3.ph.ph = phi i8 [ %retval.2, %cleanup ], [ 0, %for.cond ]
  br label %cleanup113.loopexit

cleanup113.loopexit:                              ; preds = %cleanup113.loopexit.us-lcssa.us, %cleanup113.loopexit.us-lcssa
  %cleanup.dest.slot.1.ph = phi i32 [ %cleanup.dest.slot.1.ph.ph, %cleanup113.loopexit.us-lcssa ], [ %cleanup.dest.slot.1.ph.ph.us, %cleanup113.loopexit.us-lcssa.us ]
  %retval.3.ph = phi i8 [ %retval.3.ph.ph, %cleanup113.loopexit.us-lcssa ], [ %retval.3.ph.ph.us, %cleanup113.loopexit.us-lcssa.us ]
  br label %cleanup113

cleanup113:                                       ; preds = %cleanup113.loopexit, %land.lhs.true1, %sw.default, %lor.lhs.false70, %sw.bb64, %if.end109, %if.end74, %if.end103
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end103 ], [ 1, %land.lhs.true1 ], [ 1, %lor.lhs.false70 ], [ 1, %sw.bb64 ], [ 1, %if.end74 ], [ 1, %sw.default ], [ 1, %if.end109 ], [ %cleanup.dest.slot.1.ph, %cleanup113.loopexit ]
  %offset.addr.1 = phi i64 [ %rem, %if.end103 ], [ 0, %land.lhs.true1 ], [ %offset.addr.0, %lor.lhs.false70 ], [ %offset.addr.0, %sw.bb64 ], [ %offset.addr.0, %if.end74 ], [ %offset.addr.0, %sw.default ], [ 0, %if.end109 ], [ %offset.addr.0, %cleanup113.loopexit ]
  %type.addr.1 = phi %union.tree_node* [ %25, %if.end103 ], [ %type.addr.0, %land.lhs.true1 ], [ %type.addr.0, %lor.lhs.false70 ], [ %type.addr.0, %sw.bb64 ], [ %type.addr.0, %if.end74 ], [ %type.addr.0, %sw.default ], [ %type.addr.0, %if.end109 ], [ %type.addr.0, %cleanup113.loopexit ]
  %retval.3 = phi i8 [ %retval.0, %if.end103 ], [ 1, %land.lhs.true1 ], [ 0, %lor.lhs.false70 ], [ 0, %sw.bb64 ], [ 0, %if.end74 ], [ 0, %sw.default ], [ %., %if.end109 ], [ %retval.3.ph, %cleanup113.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.1, metadata !2666, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata i64 %offset.addr.1, metadata !2667, metadata !DIExpression()), !dbg !2683
  %switch = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch, label %while.body, label %return, !llvm.loop !2780

return:                                           ; preds = %cleanup113
  %retval.3.lcssa = phi i8 [ %retval.3, %cleanup113 ]
  ret i8 %retval.3.lcssa, !dbg !2781
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_intra_sra() #5 !dbg !2782 {
entry:
  %0 = load i32, i32* @flag_tree_sra, align 4, !dbg !2783
  %cmp = icmp ne i32 %0, 0, !dbg !2784
  %conv1 = zext i1 %cmp to i8, !dbg !2783
  ret i8 %conv1, !dbg !2785
}

; Function Attrs: nounwind uwtable
define internal i32 @early_intra_sra() #5 !dbg !2786 {
entry:
  store i32 1, i32* @sra_mode, align 4, !dbg !2787
  %call = tail call fastcc i32 @perform_intra_sra() #7, !dbg !2788
  ret i32 %call, !dbg !2789
}

; Function Attrs: nounwind uwtable
define internal i32 @late_intra_sra() #5 !dbg !2790 {
entry:
  store i32 2, i32* @sra_mode, align 4, !dbg !2791
  %call = tail call fastcc i32 @perform_intra_sra() #7, !dbg !2792
  ret i32 %call, !dbg !2793
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @ipa_early_sra_gate() #5 !dbg !2794 {
entry:
  %0 = load i32, i32* @flag_ipa_sra, align 4, !dbg !2795
  %conv = trunc i32 %0 to i8, !dbg !2795
  ret i8 %conv, !dbg !2796
}

; Function Attrs: nounwind uwtable
define internal i32 @ipa_early_sra() #5 !dbg !2797 {
entry:
  %adjustments = alloca %struct.VEC_ipa_parm_adjustment_t_heap*, align 8
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3010
  %call = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %0) #6, !dbg !3011
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !2799, metadata !DIExpression()), !dbg !3012
  %1 = bitcast %struct.VEC_ipa_parm_adjustment_t_heap** %adjustments to i8*, !dbg !3013
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3013
  call void @llvm.dbg.value(metadata i32 0, metadata !3007, metadata !DIExpression()), !dbg !3012
  %call1 = tail call fastcc zeroext i8 @ipa_sra_preliminary_function_checks(%struct.cgraph_node* %call) #7, !dbg !3014
  %tobool = icmp eq i8 %call1, 0, !dbg !3014
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3016

if.end:                                           ; preds = %entry
  tail call fastcc void @sra_initialize() #7, !dbg !3017
  store i32 0, i32* @sra_mode, align 4, !dbg !3018
  %call2 = tail call fastcc zeroext i8 @find_param_candidates() #7, !dbg !3019
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3019
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !3021

if.then4:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3022
  %tobool5 = icmp eq %struct._IO_FILE* %2, null, !dbg !3022
  br i1 %tobool5, label %simple_out, label %if.then6, !dbg !3025

if.then6:                                         ; preds = %if.then4
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !3026
  br label %simple_out, !dbg !3026

if.end9:                                          ; preds = %if.end
  %call10 = tail call fastcc zeroext i8 @all_callers_have_enough_arguments_p(%struct.cgraph_node* %call) #7, !dbg !3027
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3027
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !3029

if.then12:                                        ; preds = %if.end9
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3030
  %tobool13 = icmp eq %struct._IO_FILE* %3, null, !dbg !3030
  br i1 %tobool13, label %simple_out, label %if.then14, !dbg !3033

if.then14:                                        ; preds = %if.then12
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.50, i64 0, i64 0)) #6, !dbg !3034
  br label %simple_out, !dbg !3034

if.end17:                                         ; preds = %if.end9
  %4 = load i32, i32* @func_param_count, align 4, !dbg !3035
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3035
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !3035
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3035
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 5, !dbg !3035
  %7 = load i32, i32* %x_last_basic_block, align 8, !dbg !3035
  %mul = mul nsw i32 %4, %7, !dbg !3035
  %conv = sext i32 %mul to i64, !dbg !3035
  %call18 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !3035
  store i8* %call18, i8** bitcast (i64** @bb_dereferences to i8**), align 8, !dbg !3036
  %call19 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3037
  store %struct.bitmap_head_def* %call19, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !3038
  %call20 = tail call fastcc zeroext i8 @scan_function(i8 (%union.tree_node**, %struct.gimple_stmt_iterator*, i8, i8*)* nonnull @build_access_from_expr, i32 (%union.gimple_statement_d**, %struct.gimple_stmt_iterator*, i8*)* nonnull @build_accesses_from_assign, i8 (%union.gimple_statement_d*, i8*)* null, i8 zeroext 1, i8* null) #7, !dbg !3039
  %.b = load i1, i1* @encountered_apply_args, align 1, !dbg !3040
  br i1 %.b, label %if.then22, label %if.end27, !dbg !3042

if.then22:                                        ; preds = %if.end17
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3043
  %tobool23 = icmp eq %struct._IO_FILE* %8, null, !dbg !3043
  br i1 %tobool23, label %out, label %if.then24, !dbg !3046

if.then24:                                        ; preds = %if.then22
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !3047
  br label %out, !dbg !3047

if.end27:                                         ; preds = %if.end17
  %.b1 = load i1, i1* @encountered_unchangable_recursive_call, align 1, !dbg !3048
  br i1 %.b1, label %if.then29, label %if.end34, !dbg !3050

if.then29:                                        ; preds = %if.end27
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3051
  %tobool30 = icmp eq %struct._IO_FILE* %9, null, !dbg !3051
  br i1 %tobool30, label %out, label %if.then31, !dbg !3054

if.then31:                                        ; preds = %if.then29
  %call32 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !3055
  br label %out, !dbg !3055

if.end34:                                         ; preds = %if.end27
  %call35 = tail call fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @analyze_all_param_acesses() #7, !dbg !3056
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call35, metadata !3005, metadata !DIExpression()), !dbg !3012
  store %struct.VEC_ipa_parm_adjustment_t_heap* %call35, %struct.VEC_ipa_parm_adjustment_t_heap** %adjustments, align 8, !dbg !3057
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call35, metadata !3005, metadata !DIExpression()), !dbg !3012
  %tobool36 = icmp eq %struct.VEC_ipa_parm_adjustment_t_heap* %call35, null, !dbg !3058
  br i1 %tobool36, label %out, label %if.end38, !dbg !3060

if.end38:                                         ; preds = %if.end34
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3061
  %tobool39 = icmp eq %struct._IO_FILE* %10, null, !dbg !3061
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !3063

if.then40:                                        ; preds = %if.end38
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call35, metadata !3005, metadata !DIExpression()), !dbg !3012
  %11 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3064
  tail call void @ipa_dump_param_adjustments(%struct._IO_FILE* nonnull %10, %struct.VEC_ipa_parm_adjustment_t_heap* nonnull %call35, %union.tree_node* %11) #6, !dbg !3065
  br label %if.end41, !dbg !3065

if.end41:                                         ; preds = %if.end38, %if.then40
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call35, metadata !3005, metadata !DIExpression()), !dbg !3012
  tail call fastcc void @modify_function(%struct.cgraph_node* %call, %struct.VEC_ipa_parm_adjustment_t_heap* nonnull %call35) #7, !dbg !3066
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap** %adjustments, metadata !3005, metadata !DIExpression(DW_OP_deref)), !dbg !3012
  call fastcc void @VEC_ipa_parm_adjustment_t_heap_free(%struct.VEC_ipa_parm_adjustment_t_heap** nonnull %adjustments) #7, !dbg !3067
  call void @llvm.dbg.value(metadata i32 2048, metadata !3007, metadata !DIExpression()), !dbg !3012
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3068
  %13 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 6), align 4, !dbg !3069
  call void @statistics_counter_event(%struct.function* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0), i32 %13) #6, !dbg !3070
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3071
  %15 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 7), align 4, !dbg !3072
  call void @statistics_counter_event(%struct.function* %14, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.54, i64 0, i64 0), i32 %15) #6, !dbg !3073
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3074
  %17 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 8), align 4, !dbg !3075
  call void @statistics_counter_event(%struct.function* %16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.55, i64 0, i64 0), i32 %17) #6, !dbg !3076
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3077
  %19 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 9), align 4, !dbg !3078
  call void @statistics_counter_event(%struct.function* %18, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0), i32 %19) #6, !dbg !3079
  br label %out, !dbg !3079

out:                                              ; preds = %if.then22, %if.then29, %if.end34, %if.then31, %if.then24, %if.end41
  %ret.0 = phi i32 [ 2048, %if.end41 ], [ 0, %if.then24 ], [ 0, %if.then22 ], [ 0, %if.then31 ], [ 0, %if.then29 ], [ 0, %if.end34 ], !dbg !3012
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !3007, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.label(metadata !3008), !dbg !3080
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !3081
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %20) #6, !dbg !3081
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !3081
  %21 = load i8*, i8** bitcast (i64** @bb_dereferences to i8**), align 8, !dbg !3082
  call void @free(i8* %21) #6, !dbg !3083
  br label %simple_out, !dbg !3083

simple_out:                                       ; preds = %if.then12, %if.then4, %if.then14, %if.then6, %out
  %ret.1 = phi i32 [ %ret.0, %out ], [ 0, %if.then6 ], [ 0, %if.then4 ], [ 0, %if.then14 ], [ 0, %if.then12 ], !dbg !3084
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !3007, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.label(metadata !3009), !dbg !3085
  call fastcc void @sra_deinitialize() #7, !dbg !3086
  br label %cleanup, !dbg !3087

cleanup:                                          ; preds = %entry, %simple_out
  %retval.0 = phi i32 [ %ret.1, %simple_out ], [ 0, %entry ], !dbg !3012
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3088
  ret i32 %retval.0, !dbg !3088
}

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @int_bit_position(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @int_const_binop(i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @perform_intra_sra() unnamed_addr #5 !dbg !3089 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3091, metadata !DIExpression()), !dbg !3093
  tail call fastcc void @sra_initialize() #7, !dbg !3094
  %call = tail call fastcc zeroext i8 @find_var_candidates() #7, !dbg !3095
  %tobool = icmp eq i8 %call, 0, !dbg !3095
  br i1 %tobool, label %out, label %if.end, !dbg !3097

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @scan_function(i8 (%union.tree_node**, %struct.gimple_stmt_iterator*, i8, i8*)* nonnull @build_access_from_expr, i32 (%union.gimple_statement_d**, %struct.gimple_stmt_iterator*, i8*)* nonnull @build_accesses_from_assign, i8 (%union.gimple_statement_d*, i8*)* null, i8 zeroext 1, i8* null) #7, !dbg !3098
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3098
  br i1 %tobool2, label %out, label %if.end4, !dbg !3100

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc zeroext i8 @analyze_all_variable_accesses() #7, !dbg !3101
  %tobool6 = icmp eq i8 %call5, 0, !dbg !3101
  br i1 %tobool6, label %out, label %if.end8, !dbg !3103

if.end8:                                          ; preds = %if.end4
  %call9 = tail call fastcc zeroext i8 @scan_function(i8 (%union.tree_node**, %struct.gimple_stmt_iterator*, i8, i8*)* nonnull @sra_modify_expr, i32 (%union.gimple_statement_d**, %struct.gimple_stmt_iterator*, i8*)* nonnull @sra_modify_assign, i8 (%union.gimple_statement_d*, i8*)* null, i8 zeroext 0, i8* null) #7, !dbg !3104
  tail call fastcc void @initialize_parameter_reductions() #7, !dbg !3105
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3106
  %1 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 0), align 4, !dbg !3107
  tail call void @statistics_counter_event(%struct.function* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 %1) #6, !dbg !3108
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3109
  %3 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 1), align 4, !dbg !3110
  tail call void @statistics_counter_event(%struct.function* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 %3) #6, !dbg !3111
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3112
  %5 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 2), align 4, !dbg !3113
  tail call void @statistics_counter_event(%struct.function* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i32 %5) #6, !dbg !3114
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3115
  %7 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 3), align 4, !dbg !3116
  tail call void @statistics_counter_event(%struct.function* %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 %7) #6, !dbg !3117
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3118
  %9 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 4), align 4, !dbg !3119
  tail call void @statistics_counter_event(%struct.function* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i32 %9) #6, !dbg !3120
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3121
  %11 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 5), align 4, !dbg !3122
  tail call void @statistics_counter_event(%struct.function* %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i32 %11) #6, !dbg !3123
  call void @llvm.dbg.value(metadata i32 2048, metadata !3091, metadata !DIExpression()), !dbg !3093
  br label %out, !dbg !3124

out:                                              ; preds = %if.end4, %if.end, %entry, %if.end8
  %ret.0 = phi i32 [ 2048, %if.end8 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end4 ], !dbg !3093
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !3091, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.label(metadata !3092), !dbg !3125
  tail call fastcc void @sra_deinitialize() #7, !dbg !3126
  ret i32 %ret.0, !dbg !3127
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sra_initialize() unnamed_addr #5 !dbg !3128 {
entry:
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3129
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !3130
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3131
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** @should_scalarize_away_bitmap, align 8, !dbg !3132
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3133
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** @cannot_scalarize_away_bitmap, align 8, !dbg !3134
  %call3 = tail call i32 @_obstack_begin(%struct.obstack* nonnull @name_obstack, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !3135
  %call4 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i64 120, i64 16) #6, !dbg !3136
  store %struct.alloc_pool_def* %call4, %struct.alloc_pool_def** @access_pool, align 8, !dbg !3137
  %call5 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i64 24, i64 16) #6, !dbg !3138
  store %struct.alloc_pool_def* %call5, %struct.alloc_pool_def** @link_pool, align 8, !dbg !3139
  %call6 = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !3140
  store %struct.pointer_map_t* %call6, %struct.pointer_map_t** @base_access_vec, align 8, !dbg !3141
  %call7 = tail call i8* @memset(i8* bitcast (%struct.anon* @sra_stats to i8*), i32 0, i64 40) #6, !dbg !3142
  store i1 false, i1* @encountered_apply_args, align 1, !dbg !3143
  store i1 false, i1* @encountered_recursive_call, align 1, !dbg !3144
  store i1 false, i1* @encountered_unchangable_recursive_call, align 1, !dbg !3145
  ret void, !dbg !3146
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_var_candidates() unnamed_addr #5 !dbg !3147 {
entry:
  %rvi = alloca %struct.referenced_var_iterator, align 8
  %0 = bitcast %struct.referenced_var_iterator* %rvi to i8*, !dbg !3163
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3163
  call void @llvm.dbg.value(metadata i8 0, metadata !3162, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !3151, metadata !DIExpression(DW_OP_deref)), !dbg !3164
  %call = call fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !3165
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3149, metadata !DIExpression()), !dbg !3164
  br label %for.cond, !dbg !3165

for.cond:                                         ; preds = %for.inc, %entry
  %ret.0 = phi i8 [ 0, %entry ], [ %ret.1, %for.inc ], !dbg !3167
  %var.0 = phi %union.tree_node* [ %call, %entry ], [ %call77, %for.inc ], !dbg !3168
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !3149, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !3162, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !3151, metadata !DIExpression(DW_OP_deref)), !dbg !3164
  %call1 = call fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !3169
  %tobool = icmp eq i8 %call1, 0, !dbg !3169
  br i1 %tobool, label %for.body, label %for.end, !dbg !3165

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3171
  %bf.load = load i64, i64* %1, align 8, !dbg !3171
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3174
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3174
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !3175

land.lhs.true:                                    ; preds = %for.body
  %cmp6 = icmp eq i64 %bf.cast1, 34, !dbg !3176
  br i1 %cmp6, label %if.end, label %for.inc, !dbg !3177

if.end:                                           ; preds = %land.lhs.true, %for.body
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3178
  %2 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !3178
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3150, metadata !DIExpression()), !dbg !3164
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3179
  %bf.load9 = load i64, i64* %3, align 8, !dbg !3179
  %bf.cast112 = and i64 %bf.load9, 65535, !dbg !3179
  %cmp12 = icmp eq i64 %bf.cast112, 15, !dbg !3179
  br i1 %cmp12, label %lor.lhs.false30, label %lor.lhs.false, !dbg !3179

lor.lhs.false:                                    ; preds = %if.end
  %cmp17 = icmp eq i64 %bf.cast112, 16, !dbg !3179
  br i1 %cmp17, label %lor.lhs.false30, label %lor.lhs.false18, !dbg !3179

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp23 = icmp eq i64 %bf.cast112, 17, !dbg !3179
  br i1 %cmp23, label %lor.lhs.false30, label %lor.lhs.false24, !dbg !3179

lor.lhs.false24:                                  ; preds = %lor.lhs.false18
  %cmp29 = icmp eq i64 %bf.cast112, 18, !dbg !3179
  br i1 %cmp29, label %lor.lhs.false30, label %for.inc, !dbg !3181

lor.lhs.false30:                                  ; preds = %lor.lhs.false24, %lor.lhs.false18, %lor.lhs.false, %if.end
  %call31 = call zeroext i8 @needs_to_live_in_memory(%union.tree_node* %var.0) #6, !dbg !3182
  %tobool32 = icmp eq i8 %call31, 0, !dbg !3182
  br i1 %tobool32, label %lor.lhs.false33, label %for.inc, !dbg !3183

lor.lhs.false33:                                  ; preds = %lor.lhs.false30
  %bf.load35 = load i64, i64* %1, align 8, !dbg !3184
  %bf.cast376 = and i64 %bf.load35, 524288, !dbg !3184
  %tobool38 = icmp eq i64 %bf.cast376, 0, !dbg !3184
  br i1 %tobool38, label %lor.lhs.false39, label %for.inc, !dbg !3185

lor.lhs.false39:                                  ; preds = %lor.lhs.false33
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3186
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3186
  %cmp41 = icmp eq %union.tree_node* %5, null, !dbg !3186
  br i1 %cmp41, label %for.inc, label %lor.lhs.false43, !dbg !3187

lor.lhs.false43:                                  ; preds = %lor.lhs.false39
  %call46 = call i32 @host_integerp(%union.tree_node* nonnull %5, i32 1) #6, !dbg !3188
  %tobool47 = icmp eq i32 %call46, 0, !dbg !3188
  br i1 %tobool47, label %for.inc, label %lor.lhs.false48, !dbg !3189

lor.lhs.false48:                                  ; preds = %lor.lhs.false43
  %6 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3190
  %call51 = call i64 @tree_low_cst(%union.tree_node* %6, i32 1) #6, !dbg !3191
  %cmp52 = icmp eq i64 %call51, 0, !dbg !3192
  br i1 %cmp52, label %for.inc, label %lor.lhs.false54, !dbg !3193

lor.lhs.false54:                                  ; preds = %lor.lhs.false48
  %call55 = call fastcc zeroext i8 @type_internals_preclude_sra_p(%union.tree_node* %2) #7, !dbg !3194
  %tobool57 = icmp eq i8 %call55, 0, !dbg !3194
  br i1 %tobool57, label %lor.lhs.false58, label %for.inc, !dbg !3195

lor.lhs.false58:                                  ; preds = %lor.lhs.false54
  %7 = load i32, i32* @sra_mode, align 4, !dbg !3196
  %cmp59 = icmp eq i32 %7, 1, !dbg !3197
  br i1 %cmp59, label %land.lhs.true61, label %if.end66, !dbg !3198

land.lhs.true61:                                  ; preds = %lor.lhs.false58
  %call62 = call fastcc zeroext i8 @is_va_list_type(%union.tree_node* %2) #7, !dbg !3199
  %tobool64 = icmp eq i8 %call62, 0, !dbg !3199
  br i1 %tobool64, label %if.end66, label %for.inc, !dbg !3200

if.end66:                                         ; preds = %land.lhs.true61, %lor.lhs.false58
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !3201
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3202
  %9 = load i32, i32* %uid, align 4, !dbg !3202
  %call67 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !3203
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3204
  %tobool68 = icmp eq %struct._IO_FILE* %10, null, !dbg !3204
  br i1 %tobool68, label %for.inc, label %land.lhs.true69, !dbg !3206

land.lhs.true69:                                  ; preds = %if.end66
  %11 = load i32, i32* @dump_flags, align 4, !dbg !3207
  %and = and i32 %11, 8, !dbg !3208
  %tobool70 = icmp eq i32 %and, 0, !dbg !3208
  br i1 %tobool70, label %for.inc, label %if.then71, !dbg !3209

if.then71:                                        ; preds = %land.lhs.true69
  %12 = load i32, i32* %uid, align 4, !dbg !3210
  %call74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %12) #6, !dbg !3212
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3213
  call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %var.0, i32 0) #6, !dbg !3214
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3215
  %call75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3216
  br label %for.inc, !dbg !3217

for.inc:                                          ; preds = %land.lhs.true, %land.lhs.true61, %land.lhs.true69, %if.end66, %lor.lhs.false54, %lor.lhs.false43, %lor.lhs.false39, %lor.lhs.false33, %lor.lhs.false30, %if.then71, %lor.lhs.false24, %lor.lhs.false48
  %ret.1 = phi i8 [ %ret.0, %land.lhs.true ], [ %ret.0, %land.lhs.true61 ], [ %ret.0, %lor.lhs.false54 ], [ %ret.0, %lor.lhs.false48 ], [ %ret.0, %lor.lhs.false43 ], [ %ret.0, %lor.lhs.false39 ], [ %ret.0, %lor.lhs.false33 ], [ %ret.0, %lor.lhs.false30 ], [ %ret.0, %lor.lhs.false24 ], [ 1, %if.then71 ], [ 1, %land.lhs.true69 ], [ 1, %if.end66 ], !dbg !3164
  call void @llvm.dbg.value(metadata i8 %ret.1, metadata !3162, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !3151, metadata !DIExpression(DW_OP_deref)), !dbg !3164
  %call77 = call fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !3169
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !3149, metadata !DIExpression()), !dbg !3164
  br label %for.cond, !dbg !3169, !llvm.loop !3218

for.end:                                          ; preds = %for.cond
  %ret.0.lcssa = phi i8 [ %ret.0, %for.cond ], !dbg !3167
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !3162, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !3162, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !3162, metadata !DIExpression()), !dbg !3164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3220
  ret i8 %ret.0.lcssa, !dbg !3221
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @scan_function(i8 (%union.tree_node**, %struct.gimple_stmt_iterator*, i8, i8*)* %scan_expr, i32 (%union.gimple_statement_d**, %struct.gimple_stmt_iterator*, i8*)* %scan_assign, i8 (%union.gimple_statement_d*, i8*)* %handle_ssa_defs, i8 zeroext %analysis_stage, i8* %data) unnamed_addr #5 !dbg !3222 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp10 = alloca %struct.gimple_stmt_iterator, align 8
  %stmt = alloca %union.gimple_statement_d*, align 8
  call void @llvm.dbg.value(metadata i8 (%union.tree_node**, %struct.gimple_stmt_iterator*, i8, i8*)* %scan_expr, metadata !3242, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i32 (%union.gimple_statement_d**, %struct.gimple_stmt_iterator*, i8*)* %scan_assign, metadata !3243, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 (%union.gimple_statement_d*, i8*)* %handle_ssa_defs, metadata !3244, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 %analysis_stage, metadata !3245, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8* %data, metadata !3246, metadata !DIExpression()), !dbg !3281
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3282
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3282
  call void @llvm.dbg.value(metadata i8 0, metadata !3251, metadata !DIExpression()), !dbg !3281
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3283
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !3283
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3283
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !3283
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3283
  %tobool = icmp eq i8 (%union.gimple_statement_d*, i8*)* %handle_ssa_defs, null, !dbg !3284
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3286
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp10 to i8*, !dbg !3288
  %6 = bitcast %union.gimple_statement_d** %stmt to i8*, !dbg !3289
  %tobool16 = icmp ne i8 %analysis_stage, 0, !dbg !3290
  %tobool143 = icmp eq i8 %analysis_stage, 0, !dbg !3292
  %tobool54 = icmp ne i8 (%union.gimple_statement_d*, i8*)* %handle_ssa_defs, null, !dbg !3294
  br label %for.cond, !dbg !3283

for.cond:                                         ; preds = %for.inc203, %entry
  %7 = phi %struct.control_flow_graph* [ %2, %entry ], [ %.pre13, %for.inc203 ], !dbg !3296
  %.pn = phi %struct.basic_block_def* [ %3, %entry ], [ %bb.0, %for.inc203 ]
  %ret.0 = phi i8 [ 0, %entry ], [ %ret.3.lcssa, %for.inc203 ], !dbg !3297
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3298
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3298
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3248, metadata !DIExpression()), !dbg !3281
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 1, !dbg !3296
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3296
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %8, !dbg !3296
  br i1 %cmp, label %for.end205, label %for.body, !dbg !3283

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !3252, metadata !DIExpression()), !dbg !3288
  br i1 %tobool, label %if.end, label %if.then, !dbg !3299

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !3300
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #6, !dbg !3300
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !3300
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !3300
  br label %for.cond3, !dbg !3301

for.cond3:                                        ; preds = %for.body5, %if.then
  %ret.1 = phi i8 [ %ret.0, %if.then ], [ %or12, %for.body5 ], !dbg !3281
  call void @llvm.dbg.value(metadata i8 %ret.1, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3302
  %tobool4 = icmp eq i8 %call, 0, !dbg !3304
  br i1 %tobool4, label %for.body5, label %if.end.loopexit, !dbg !3305

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3306
  %call7 = call zeroext i8 %handle_ssa_defs(%union.gimple_statement_d* %call6, i8* %data) #6, !dbg !3307
  %or12 = or i8 %ret.1, %call7, !dbg !3308
  call void @llvm.dbg.value(metadata i8 %or12, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3309
  br label %for.cond3, !dbg !3310, !llvm.loop !3311

if.end.loopexit:                                  ; preds = %for.cond3
  %ret.1.lcssa = phi i8 [ %ret.1, %for.cond3 ], !dbg !3281
  call void @llvm.dbg.value(metadata i8 %ret.1.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 %ret.1.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 %ret.1.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  br label %if.end, !dbg !3313

if.end:                                           ; preds = %if.end.loopexit, %for.body
  %ret.2 = phi i8 [ %ret.0, %for.body ], [ %ret.1.lcssa, %if.end.loopexit ], !dbg !3297
  call void @llvm.dbg.value(metadata i8 %ret.2, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !3313
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp10, %struct.basic_block_def* %bb.0) #7, !dbg !3313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !3313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !3313
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3290
  br label %while.cond, !dbg !3314

while.cond:                                       ; preds = %if.end192, %if.end
  %ret.3 = phi i8 [ %ret.2, %if.end ], [ %ret.5, %if.end192 ], !dbg !3281
  %bb_changed.0 = phi i8 [ 0, %if.end ], [ %bb_changed.3, %if.end192 ], !dbg !3288
  call void @llvm.dbg.value(metadata i8 %bb_changed.0, metadata !3252, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i8 %ret.3, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call11 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3315
  %tobool12 = icmp eq i8 %call11, 0, !dbg !3316
  br i1 %tobool12, label %while.body, label %while.end, !dbg !3314

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !3317
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call14 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3318
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call14, metadata !3256, metadata !DIExpression()), !dbg !3289
  store %union.gimple_statement_d* %call14, %union.gimple_statement_d** %stmt, align 8, !dbg !3319
  call void @llvm.dbg.value(metadata i8 0, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i8 0, metadata !3260, metadata !DIExpression()), !dbg !3289
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !3320
  %tobool17 = icmp ne %struct.bitmap_head_def* %9, null, !dbg !3320
  %or.cond = and i1 %tobool16, %tobool17, !dbg !3321
  br i1 %or.cond, label %land.lhs.true18, label %if.end24, !dbg !3321

land.lhs.true18:                                  ; preds = %while.body
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call14, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call19 = call zeroext i8 @stmt_can_throw_external(%union.gimple_statement_d* %call14) #6, !dbg !3322
  %tobool21 = icmp eq i8 %call19, 0, !dbg !3322
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !3323

if.then22:                                        ; preds = %land.lhs.true18
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !3324
  %11 = load i32, i32* %index, align 8, !dbg !3325
  %call23 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %10, i32 %11) #6, !dbg !3326
  br label %if.end24, !dbg !3326

if.end24:                                         ; preds = %land.lhs.true18, %if.then22, %while.body
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3327
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %12, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call25 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %12) #7, !dbg !3328
  switch i32 %call25, label %sw.epilog [
    i32 9, label %sw.bb
    i32 6, label %sw.bb44
    i32 8, label %for.cond66.preheader
    i32 7, label %sw.bb142
  ], !dbg !3329

for.cond66.preheader:                             ; preds = %if.end24
  br label %for.cond66, !dbg !3330

sw.bb:                                            ; preds = %if.end24
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3331
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %13, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call26 = call fastcc %union.tree_node** @gimple_return_retval_ptr(%union.gimple_statement_d* %13) #7, !dbg !3332
  call void @llvm.dbg.value(metadata %union.tree_node** %call26, metadata !3250, metadata !DIExpression()), !dbg !3281
  %14 = load %union.tree_node*, %union.tree_node** %call26, align 8, !dbg !3333
  %cmp27 = icmp eq %union.tree_node* %14, null, !dbg !3335
  br i1 %cmp27, label %if.end35, label %if.then29, !dbg !3336

if.then29:                                        ; preds = %sw.bb
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call30 = call zeroext i8 %scan_expr(%union.tree_node** %call26, %struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0, i8* %data) #6, !dbg !3337
  call void @llvm.dbg.value(metadata i8 %call30, metadata !3259, metadata !DIExpression()), !dbg !3289
  br label %if.end35, !dbg !3338

if.end35:                                         ; preds = %sw.bb, %if.then29
  %any.0 = phi i8 [ %call30, %if.then29 ], [ 0, %sw.bb ], !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.0, metadata !3259, metadata !DIExpression()), !dbg !3289
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !3339
  %tobool39 = icmp ne %struct.bitmap_head_def* %15, null, !dbg !3339
  %or.cond1 = and i1 %tobool16, %tobool39, !dbg !3341
  br i1 %or.cond1, label %if.then40, label %sw.epilog, !dbg !3341

if.then40:                                        ; preds = %if.end35
  %16 = load i32, i32* %index, align 8, !dbg !3342
  %call42 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %15, i32 %16) #6, !dbg !3343
  br label %sw.epilog, !dbg !3343

sw.bb44:                                          ; preds = %if.end24
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !3256, metadata !DIExpression(DW_OP_deref)), !dbg !3289
  %call45 = call i32 %scan_assign(%union.gimple_statement_d** nonnull %stmt, %struct.gimple_stmt_iterator* nonnull %gsi, i8* %data) #6, !dbg !3344
  call void @llvm.dbg.value(metadata i32 %call45, metadata !3258, metadata !DIExpression()), !dbg !3289
  %cmp46 = icmp eq i32 %call45, 1, !dbg !3345
  %conv50 = zext i1 %cmp46 to i8, !dbg !3346
  call void @llvm.dbg.value(metadata i8 %conv50, metadata !3259, metadata !DIExpression()), !dbg !3289
  %cmp51 = icmp eq i32 %call45, 2, !dbg !3347
  %conv53 = zext i1 %cmp51 to i8, !dbg !3348
  call void @llvm.dbg.value(metadata i8 %conv53, metadata !3260, metadata !DIExpression()), !dbg !3289
  %cmp56 = icmp ne i32 %call45, 2, !dbg !3349
  %or.cond2 = and i1 %tobool54, %cmp56, !dbg !3350
  br i1 %or.cond2, label %if.then58, label %sw.epilog, !dbg !3350

if.then58:                                        ; preds = %sw.bb44
  %17 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3351
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %17, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call59 = call zeroext i8 %handle_ssa_defs(%union.gimple_statement_d* %17, i8* %data) #6, !dbg !3352
  %or62 = or i8 %call59, %conv50, !dbg !3353
  call void @llvm.dbg.value(metadata i8 %or62, metadata !3259, metadata !DIExpression()), !dbg !3289
  br label %sw.epilog, !dbg !3354

for.cond66:                                       ; preds = %for.cond66.preheader, %for.body70
  %i.0 = phi i32 [ %inc, %for.body70 ], [ 0, %for.cond66.preheader ], !dbg !3355
  %any.2 = phi i8 [ %or7511, %for.body70 ], [ 0, %for.cond66.preheader ], !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.2, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3249, metadata !DIExpression()), !dbg !3281
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3356
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %18, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call67 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %18) #7, !dbg !3357
  %cmp68 = icmp ult i32 %i.0, %call67, !dbg !3358
  br i1 %cmp68, label %for.body70, label %for.end78, !dbg !3330

for.body70:                                       ; preds = %for.cond66
  %19 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3359
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %19, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call71 = call fastcc %union.tree_node** @gimple_call_arg_ptr(%union.gimple_statement_d* %19, i32 %i.0) #7, !dbg !3360
  call void @llvm.dbg.value(metadata %union.tree_node** %call71, metadata !3261, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call72 = call zeroext i8 %scan_expr(%union.tree_node** %call71, %struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0, i8* %data) #6, !dbg !3362
  %or7511 = or i8 %any.2, %call72, !dbg !3363
  call void @llvm.dbg.value(metadata i8 %or7511, metadata !3259, metadata !DIExpression()), !dbg !3289
  %inc = add i32 %i.0, 1, !dbg !3364
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3249, metadata !DIExpression()), !dbg !3281
  br label %for.cond66, !dbg !3365, !llvm.loop !3366

for.end78:                                        ; preds = %for.cond66
  %any.2.lcssa = phi i8 [ %any.2, %for.cond66 ], !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.2.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.2.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.2.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  %20 = load i32, i32* @sra_mode, align 4, !dbg !3368
  %cmp82 = icmp eq i32 %20, 0, !dbg !3369
  %or.cond3 = and i1 %tobool16, %cmp82, !dbg !3370
  br i1 %or.cond3, label %if.then84, label %if.end118, !dbg !3370

if.then84:                                        ; preds = %for.end78
  %21 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3371
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %21, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call85 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %21) #7, !dbg !3372
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !3266, metadata !DIExpression()), !dbg !3373
  %22 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3374
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %22, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call86 = call i32 @gimple_call_flags(%union.gimple_statement_d* %22) #6, !dbg !3375
  call void @llvm.dbg.value(metadata i32 %call86, metadata !3269, metadata !DIExpression()), !dbg !3373
  %tobool87 = icmp eq %union.tree_node* %call85, null, !dbg !3376
  br i1 %tobool87, label %if.end109, label %if.then88, !dbg !3378

if.then88:                                        ; preds = %if.then84
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call85, i64 0, i32 0, i32 5, !dbg !3379
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !3379
  %bf.clear = and i32 %bf.load, 6144, !dbg !3379
  %cmp89 = icmp eq i32 %bf.clear, 6144, !dbg !3382
  br i1 %cmp89, label %land.lhs.true91, label %if.end98, !dbg !3383

land.lhs.true91:                                  ; preds = %if.then88
  %bf.clear94 = and i32 %bf.load, 2047, !dbg !3384
  %cmp95 = icmp eq i32 %bf.clear94, 417, !dbg !3385
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !3386

if.then97:                                        ; preds = %land.lhs.true91
  store i1 true, i1* @encountered_apply_args, align 1, !dbg !3387
  br label %if.end98, !dbg !3388

if.end98:                                         ; preds = %if.then97, %land.lhs.true91, %if.then88
  %call99 = call %struct.cgraph_node* @cgraph_get_node(%union.tree_node* nonnull %call85) #6, !dbg !3389
  %23 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3391
  %call100 = call %struct.cgraph_node* @cgraph_get_node(%union.tree_node* %23) #6, !dbg !3392
  %cmp101 = icmp eq %struct.cgraph_node* %call99, %call100, !dbg !3393
  br i1 %cmp101, label %if.then103, label %if.end109, !dbg !3394

if.then103:                                       ; preds = %if.end98
  store i1 true, i1* @encountered_recursive_call, align 1, !dbg !3395
  %24 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3397
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %24, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call104 = call fastcc zeroext i8 @callsite_has_enough_arguments_p(%union.gimple_statement_d* %24) #7, !dbg !3399
  %tobool105 = icmp eq i8 %call104, 0, !dbg !3399
  br i1 %tobool105, label %if.then106, label %if.end109, !dbg !3400

if.then106:                                       ; preds = %if.then103
  store i1 true, i1* @encountered_unchangable_recursive_call, align 1, !dbg !3401
  br label %if.end109, !dbg !3402

if.end109:                                        ; preds = %if.then103, %if.then84, %if.end98, %if.then106
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !3403
  %tobool110 = icmp ne %struct.bitmap_head_def* %25, null, !dbg !3403
  %and = and i32 %call86, 3, !dbg !3405
  %cmp112 = icmp eq i32 %and, 0, !dbg !3406
  %or.cond4 = and i1 %tobool110, %cmp112, !dbg !3407
  br i1 %or.cond4, label %if.then114, label %if.end118, !dbg !3407

if.then114:                                       ; preds = %if.end109
  %26 = load i32, i32* %index, align 8, !dbg !3408
  %call116 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %25, i32 %26) #6, !dbg !3409
  br label %if.end118, !dbg !3409

if.end118:                                        ; preds = %if.end109, %if.then114, %for.end78
  %27 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3410
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %27, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call119 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %27) #7, !dbg !3411
  %tobool120 = icmp eq %union.tree_node* %call119, null, !dbg !3411
  br i1 %tobool120, label %sw.epilog, label %if.then121, !dbg !3412

if.then121:                                       ; preds = %if.end118
  %28 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3413
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %28, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call122 = call fastcc %union.tree_node** @gimple_call_lhs_ptr(%union.gimple_statement_d* %28) #7, !dbg !3414
  call void @llvm.dbg.value(metadata %union.tree_node** %call122, metadata !3270, metadata !DIExpression()), !dbg !3415
  br i1 %tobool143, label %if.then126, label %lor.lhs.false, !dbg !3416

lor.lhs.false:                                    ; preds = %if.then121
  %29 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3418
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %29, metadata !3256, metadata !DIExpression()), !dbg !3289
  %30 = load %union.tree_node*, %union.tree_node** %call122, align 8, !dbg !3419
  %call124 = call fastcc zeroext i8 @disqualify_ops_if_throwing_stmt(%union.gimple_statement_d* %29, %union.tree_node* %30, %union.tree_node* null) #7, !dbg !3420
  %tobool125 = icmp eq i8 %call124, 0, !dbg !3420
  br i1 %tobool125, label %if.then126, label %sw.epilog, !dbg !3421

if.then126:                                       ; preds = %lor.lhs.false, %if.then121
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call127 = call zeroext i8 %scan_expr(%union.tree_node** %call122, %struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1, i8* %data) #6, !dbg !3422
  %or1309 = or i8 %any.2.lcssa, %call127, !dbg !3424
  call void @llvm.dbg.value(metadata i8 %or1309, metadata !3259, metadata !DIExpression()), !dbg !3289
  br i1 %tobool, label %sw.epilog, label %if.then133, !dbg !3425

if.then133:                                       ; preds = %if.then126
  %31 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3426
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %31, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call134 = call zeroext i8 %handle_ssa_defs(%union.gimple_statement_d* %31, i8* %data) #6, !dbg !3428
  %or13710 = or i8 %or1309, %call134, !dbg !3429
  call void @llvm.dbg.value(metadata i8 %or13710, metadata !3259, metadata !DIExpression()), !dbg !3289
  br label %sw.epilog, !dbg !3430

sw.bb142:                                         ; preds = %if.end24
  br i1 %tobool143, label %if.end151, label %if.then144, !dbg !3431

if.then144:                                       ; preds = %sw.bb142
  %32 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3432
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %32, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call145 = call zeroext i8 @walk_stmt_load_store_addr_ops(%union.gimple_statement_d* %32, i8* null, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)* null, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)* null, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)* nonnull @asm_visit_addr) #6, !dbg !3434
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !3435
  %tobool146 = icmp eq %struct.bitmap_head_def* %33, null, !dbg !3435
  br i1 %tobool146, label %if.end151, label %if.then147, !dbg !3437

if.then147:                                       ; preds = %if.then144
  %34 = load i32, i32* %index, align 8, !dbg !3438
  %call149 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %33, i32 %34) #6, !dbg !3439
  br label %if.end151, !dbg !3439

if.end151:                                        ; preds = %if.then144, %sw.bb142, %if.then147
  call void @llvm.dbg.value(metadata i32 0, metadata !3249, metadata !DIExpression()), !dbg !3281
  br label %for.cond152, !dbg !3440

for.cond152:                                      ; preds = %for.body156, %if.end151
  %i.1 = phi i32 [ 0, %if.end151 ], [ %inc164, %for.body156 ], !dbg !3441
  %any.6 = phi i8 [ 0, %if.end151 ], [ %or1618, %for.body156 ], !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.6, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3249, metadata !DIExpression()), !dbg !3281
  %35 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3442
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %35, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call153 = call fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %35) #7, !dbg !3443
  %cmp154 = icmp ult i32 %i.1, %call153, !dbg !3444
  br i1 %cmp154, label %for.body156, label %for.cond166.preheader, !dbg !3445

for.cond166.preheader:                            ; preds = %for.cond152
  %any.6.lcssa = phi i8 [ %any.6, %for.cond152 ], !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.6.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.6.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.6.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  br label %for.cond166, !dbg !3446

for.body156:                                      ; preds = %for.cond152
  %36 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3447
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %36, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call157 = call fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %36, i32 %i.1) #7, !dbg !3447
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %call157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3447
  call void @llvm.dbg.value(metadata %union.tree_node** %37, metadata !3273, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call158 = call zeroext i8 %scan_expr(%union.tree_node** nonnull %37, %struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0, i8* %data) #6, !dbg !3449
  %or1618 = or i8 %any.6, %call158, !dbg !3450
  call void @llvm.dbg.value(metadata i8 %or1618, metadata !3259, metadata !DIExpression()), !dbg !3289
  %inc164 = add i32 %i.1, 1, !dbg !3451
  call void @llvm.dbg.value(metadata i32 %inc164, metadata !3249, metadata !DIExpression()), !dbg !3281
  br label %for.cond152, !dbg !3452, !llvm.loop !3453

for.cond166:                                      ; preds = %for.cond166.preheader, %for.body170
  %i.2 = phi i32 [ %inc181, %for.body170 ], [ 0, %for.cond166.preheader ], !dbg !3455
  %any.7 = phi i8 [ %or1787, %for.body170 ], [ %any.6.lcssa, %for.cond166.preheader ], !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.7, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !3249, metadata !DIExpression()), !dbg !3281
  %38 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3456
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %38, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call167 = call fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %38) #7, !dbg !3457
  %cmp168 = icmp ult i32 %i.2, %call167, !dbg !3458
  br i1 %cmp168, label %for.body170, label %sw.epilog.loopexit, !dbg !3446

for.body170:                                      ; preds = %for.cond166
  %39 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3459
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %39, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call172 = call fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %39, i32 %i.2) #7, !dbg !3459
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3459
  call void @llvm.dbg.value(metadata %union.tree_node** %40, metadata !3277, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call175 = call zeroext i8 %scan_expr(%union.tree_node** nonnull %40, %struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1, i8* %data) #6, !dbg !3461
  %or1787 = or i8 %any.7, %call175, !dbg !3462
  call void @llvm.dbg.value(metadata i8 %or1787, metadata !3259, metadata !DIExpression()), !dbg !3289
  %inc181 = add i32 %i.2, 1, !dbg !3463
  call void @llvm.dbg.value(metadata i32 %inc181, metadata !3249, metadata !DIExpression()), !dbg !3281
  br label %for.cond166, !dbg !3464, !llvm.loop !3465

sw.epilog.loopexit:                               ; preds = %for.cond166
  %any.7.lcssa = phi i8 [ %any.7, %for.cond166 ], !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.7.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.7.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.7.lcssa, metadata !3259, metadata !DIExpression()), !dbg !3289
  br label %sw.epilog, !dbg !3467

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %lor.lhs.false, %if.then126, %if.end118, %if.end24, %if.then133, %sw.bb44, %if.then58, %if.end35, %if.then40
  %any.8 = phi i8 [ %any.0, %if.then40 ], [ %any.0, %if.end35 ], [ %or62, %if.then58 ], [ %conv50, %sw.bb44 ], [ %any.2.lcssa, %if.end118 ], [ %any.2.lcssa, %lor.lhs.false ], [ %or13710, %if.then133 ], [ %or1309, %if.then126 ], [ 0, %if.end24 ], [ %any.7.lcssa, %sw.epilog.loopexit ], !dbg !3289
  %deleted.0 = phi i8 [ 0, %if.then40 ], [ 0, %if.end35 ], [ %conv53, %if.then58 ], [ %conv53, %sw.bb44 ], [ 0, %if.end118 ], [ 0, %lor.lhs.false ], [ 0, %if.then133 ], [ 0, %if.then126 ], [ 0, %if.end24 ], [ 0, %sw.epilog.loopexit ], !dbg !3289
  call void @llvm.dbg.value(metadata i8 %deleted.0, metadata !3260, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i8 %any.8, metadata !3259, metadata !DIExpression()), !dbg !3289
  %tobool183 = icmp eq i8 %any.8, 0, !dbg !3467
  br i1 %tobool183, label %if.end189, label %if.then184, !dbg !3469

if.then184:                                       ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata i8 1, metadata !3251, metadata !DIExpression()), !dbg !3281
  br i1 %tobool143, label %if.then186, label %if.end189, !dbg !3470

if.then186:                                       ; preds = %if.then184
  call void @llvm.dbg.value(metadata i8 1, metadata !3252, metadata !DIExpression()), !dbg !3288
  %41 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3472
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %41, metadata !3256, metadata !DIExpression()), !dbg !3289
  call fastcc void @update_stmt(%union.gimple_statement_d* %41) #7, !dbg !3475
  %42 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3476
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %42, metadata !3256, metadata !DIExpression()), !dbg !3289
  %call187 = call zeroext i8 @maybe_clean_eh_stmt(%union.gimple_statement_d* %42) #6, !dbg !3477
  br label %if.end189, !dbg !3478

if.end189:                                        ; preds = %if.then184, %sw.epilog, %if.then186
  %ret.4 = phi i8 [ %ret.3, %sw.epilog ], [ 1, %if.then186 ], [ 1, %if.then184 ], !dbg !3281
  %bb_changed.2 = phi i8 [ %bb_changed.0, %sw.epilog ], [ 1, %if.then186 ], [ %bb_changed.0, %if.then184 ], !dbg !3479
  call void @llvm.dbg.value(metadata i8 %bb_changed.2, metadata !3252, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i8 %ret.4, metadata !3251, metadata !DIExpression()), !dbg !3281
  %tobool190 = icmp eq i8 %deleted.0, 0, !dbg !3480
  br i1 %tobool190, label %if.else, label %if.end192, !dbg !3482

if.else:                                          ; preds = %if.end189
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3247, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3483
  call void @llvm.dbg.value(metadata i8 1, metadata !3251, metadata !DIExpression()), !dbg !3281
  br label %if.end192

if.end192:                                        ; preds = %if.end189, %if.else
  %ret.5 = phi i8 [ 1, %if.else ], [ %ret.4, %if.end189 ], !dbg !3289
  %bb_changed.3 = phi i8 [ %bb_changed.2, %if.else ], [ 1, %if.end189 ], !dbg !3288
  call void @llvm.dbg.value(metadata i8 %bb_changed.3, metadata !3252, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i8 %ret.5, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !3485
  br label %while.cond, !dbg !3314, !llvm.loop !3486

while.end:                                        ; preds = %while.cond
  %ret.3.lcssa = phi i8 [ %ret.3, %while.cond ], !dbg !3281
  %bb_changed.0.lcssa = phi i8 [ %bb_changed.0, %while.cond ], !dbg !3288
  call void @llvm.dbg.value(metadata i8 %ret.3.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 %bb_changed.0.lcssa, metadata !3252, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i8 %ret.3.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 %bb_changed.0.lcssa, metadata !3252, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i8 %ret.3.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 %bb_changed.0.lcssa, metadata !3252, metadata !DIExpression()), !dbg !3288
  %tobool196 = icmp ne i8 %bb_changed.0.lcssa, 0, !dbg !3487
  %or.cond5 = and i1 %tobool143, %tobool196, !dbg !3489
  %43 = load i32, i32* @sra_mode, align 4, !dbg !3490
  %cmp198 = icmp eq i32 %43, 0, !dbg !3491
  %or.cond6 = and i1 %or.cond5, %cmp198, !dbg !3489
  br i1 %or.cond6, label %if.then200, label %for.inc203, !dbg !3489

if.then200:                                       ; preds = %while.end
  %call201 = call zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def* %bb.0) #6, !dbg !3492
  br label %for.inc203, !dbg !3492

for.inc203:                                       ; preds = %if.then200, %while.end
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3296
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3493
  %.pre13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3296
  br label %for.cond, !dbg !3296, !llvm.loop !3494

for.end205:                                       ; preds = %for.cond
  %ret.0.lcssa = phi i8 [ %ret.0, %for.cond ], !dbg !3297
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3281
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3496
  ret i8 %ret.0.lcssa, !dbg !3497
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @build_access_from_expr(%union.tree_node** %expr_ptr, %struct.gimple_stmt_iterator* %gsi, i8 zeroext %write, i8* %data) #5 !dbg !3498 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_ptr, metadata !3500, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3501, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 %write, metadata !3502, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %data, metadata !3503, metadata !DIExpression()), !dbg !3505
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3506
  %call1 = tail call fastcc %struct.access* @build_access_from_expr_1(%union.tree_node** %expr_ptr, %union.gimple_statement_d* %call, i8 zeroext %write) #7, !dbg !3507
  call void @llvm.dbg.value(metadata %struct.access* %call1, metadata !3504, metadata !DIExpression()), !dbg !3505
  %tobool = icmp eq %struct.access* %call1, null, !dbg !3508
  br i1 %tobool, label %cleanup, label %if.then, !dbg !3510

if.then:                                          ; preds = %entry
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cannot_scalarize_away_bitmap, align 8, !dbg !3511
  %tobool2 = icmp eq %struct.bitmap_head_def* %0, null, !dbg !3511
  br i1 %tobool2, label %cleanup, label %if.then3, !dbg !3514

if.then3:                                         ; preds = %if.then
  %base = getelementptr inbounds %struct.access, %struct.access* %call1, i64 0, i32 2, !dbg !3515
  %1 = bitcast %union.tree_node** %base to %struct.tree_decl_minimal**, !dbg !3515
  %2 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %1, align 8, !dbg !3515
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %2, i64 0, i32 2, !dbg !3515
  %3 = load i32, i32* %uid, align 4, !dbg !3515
  %call4 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %0, i32 %3) #6, !dbg !3516
  br label %cleanup, !dbg !3516

cleanup:                                          ; preds = %if.then, %entry, %if.then3
  %retval.0 = phi i8 [ 1, %if.then3 ], [ 1, %if.then ], [ 0, %entry ], !dbg !3505
  ret i8 %retval.0, !dbg !3517
}

; Function Attrs: nounwind uwtable
define internal i32 @build_accesses_from_assign(%union.gimple_statement_d** %stmt_ptr, %struct.gimple_stmt_iterator* %gsi, i8* %data) #5 !dbg !3518 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt_ptr, metadata !3520, metadata !DIExpression()), !dbg !3531
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3521, metadata !DIExpression()), !dbg !3531
  call void @llvm.dbg.value(metadata i8* %data, metadata !3522, metadata !DIExpression()), !dbg !3531
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt_ptr, align 8, !dbg !3532
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !3523, metadata !DIExpression()), !dbg !3531
  %call = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %0) #6, !dbg !3533
  %tobool = icmp eq i8 %call, 0, !dbg !3533
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3535

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %0) #7, !dbg !3536
  call void @llvm.dbg.value(metadata %union.tree_node** %call1, metadata !3524, metadata !DIExpression()), !dbg !3531
  %call2 = tail call fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %0) #7, !dbg !3537
  call void @llvm.dbg.value(metadata %union.tree_node** %call2, metadata !3525, metadata !DIExpression()), !dbg !3531
  %1 = load %union.tree_node*, %union.tree_node** %call1, align 8, !dbg !3538
  %2 = load %union.tree_node*, %union.tree_node** %call2, align 8, !dbg !3540
  %call3 = tail call fastcc zeroext i8 @disqualify_ops_if_throwing_stmt(%union.gimple_statement_d* %0, %union.tree_node* %1, %union.tree_node* %2) #7, !dbg !3541
  %tobool4 = icmp eq i8 %call3, 0, !dbg !3541
  br i1 %tobool4, label %if.end6, label %cleanup, !dbg !3542

if.end6:                                          ; preds = %if.end
  %call7 = tail call fastcc %struct.access* @build_access_from_expr_1(%union.tree_node** %call2, %union.gimple_statement_d* %0, i8 zeroext 0) #7, !dbg !3543
  call void @llvm.dbg.value(metadata %struct.access* %call7, metadata !3527, metadata !DIExpression()), !dbg !3531
  %call8 = tail call fastcc %struct.access* @build_access_from_expr_1(%union.tree_node** %call1, %union.gimple_statement_d* %0, i8 zeroext 1) #7, !dbg !3544
  call void @llvm.dbg.value(metadata %struct.access* %call8, metadata !3526, metadata !DIExpression()), !dbg !3531
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @should_scalarize_away_bitmap, align 8, !dbg !3545
  %tobool9 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !3545
  br i1 %tobool9, label %if.end19, label %land.lhs.true, !dbg !3547

land.lhs.true:                                    ; preds = %if.end6
  %call10 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %0) #7, !dbg !3548
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3548
  %tobool13 = icmp ne %struct.access* %call7, null, !dbg !3549
  %or.cond = and i1 %tobool11, %tobool13, !dbg !3550
  br i1 %or.cond, label %land.lhs.true14, label %if.end19, !dbg !3550

land.lhs.true14:                                  ; preds = %land.lhs.true
  %type = getelementptr inbounds %struct.access, %struct.access* %call7, i64 0, i32 4, !dbg !3551
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3551
  %call15 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %4) #6, !dbg !3552
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3552
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !3553

if.then17:                                        ; preds = %land.lhs.true14
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @should_scalarize_away_bitmap, align 8, !dbg !3554
  %base = getelementptr inbounds %struct.access, %struct.access* %call7, i64 0, i32 2, !dbg !3555
  %6 = bitcast %union.tree_node** %base to %struct.tree_decl_minimal**, !dbg !3555
  %7 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %6, align 8, !dbg !3555
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %7, i64 0, i32 2, !dbg !3555
  %8 = load i32, i32* %uid, align 4, !dbg !3555
  %call18 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 %8) #6, !dbg !3556
  br label %if.end19, !dbg !3556

if.end19:                                         ; preds = %land.lhs.true14, %if.end6, %land.lhs.true, %if.then17
  %tobool20 = icmp ne %struct.access* %call8, null, !dbg !3557
  %tobool22 = icmp ne %struct.access* %call7, null, !dbg !3558
  %or.cond1 = and i1 %tobool20, %tobool22, !dbg !3559
  br i1 %or.cond1, label %land.lhs.true23, label %if.end78, !dbg !3559

land.lhs.true23:                                  ; preds = %if.end19
  %9 = load i32, i32* @sra_mode, align 4, !dbg !3560
  %10 = add i32 %9, -1, !dbg !3561
  %11 = icmp ult i32 %10, 2, !dbg !3561
  br i1 %11, label %land.lhs.true25, label %if.end78, !dbg !3561

land.lhs.true25:                                  ; preds = %land.lhs.true23
  %grp_unscalarizable_region = getelementptr inbounds %struct.access, %struct.access* %call8, i64 0, i32 14, !dbg !3562
  %bf.load = load i16, i16* %grp_unscalarizable_region, align 8, !dbg !3562
  %12 = trunc i16 %bf.load to i8, !dbg !3563
  %tobool26 = icmp slt i8 %12, 0, !dbg !3563
  br i1 %tobool26, label %if.end78, label %land.lhs.true27, !dbg !3564

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %grp_unscalarizable_region28 = getelementptr inbounds %struct.access, %struct.access* %call7, i64 0, i32 14, !dbg !3565
  %bf.load29 = load i16, i16* %grp_unscalarizable_region28, align 8, !dbg !3565
  %13 = trunc i16 %bf.load29 to i8, !dbg !3566
  %tobool33 = icmp slt i8 %13, 0, !dbg !3566
  br i1 %tobool33, label %if.end78, label %land.lhs.true34, !dbg !3567

land.lhs.true34:                                  ; preds = %land.lhs.true27
  %14 = bitcast %union.tree_node** %call1 to %struct.tree_common**, !dbg !3568
  %15 = load %struct.tree_common*, %struct.tree_common** %14, align 8, !dbg !3568
  %type35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !3568
  %16 = bitcast %union.tree_node** %type35 to i64**, !dbg !3568
  %17 = load i64*, i64** %16, align 8, !dbg !3568
  %bf.load37 = load i64, i64* %17, align 8, !dbg !3568
  %bf.cast393 = and i64 %bf.load37, 65535, !dbg !3568
  %cmp40 = icmp eq i64 %bf.cast393, 15, !dbg !3568
  br i1 %cmp40, label %land.lhs.true65, label %lor.lhs.false41, !dbg !3568

lor.lhs.false41:                                  ; preds = %land.lhs.true34
  %cmp48 = icmp eq i64 %bf.cast393, 16, !dbg !3568
  br i1 %cmp48, label %land.lhs.true65, label %lor.lhs.false49, !dbg !3568

lor.lhs.false49:                                  ; preds = %lor.lhs.false41
  %cmp56 = icmp eq i64 %bf.cast393, 17, !dbg !3568
  br i1 %cmp56, label %land.lhs.true65, label %lor.lhs.false57, !dbg !3568

lor.lhs.false57:                                  ; preds = %lor.lhs.false49
  %cmp64 = icmp eq i64 %bf.cast393, 18, !dbg !3568
  br i1 %cmp64, label %land.lhs.true65, label %if.end78, !dbg !3569

land.lhs.true65:                                  ; preds = %lor.lhs.false57, %lor.lhs.false49, %lor.lhs.false41, %land.lhs.true34
  %size = getelementptr inbounds %struct.access, %struct.access* %call8, i64 0, i32 1, !dbg !3570
  %18 = load i64, i64* %size, align 8, !dbg !3570
  %size66 = getelementptr inbounds %struct.access, %struct.access* %call7, i64 0, i32 1, !dbg !3571
  %19 = load i64, i64* %size66, align 8, !dbg !3571
  %cmp67 = icmp eq i64 %18, %19, !dbg !3572
  br i1 %cmp67, label %land.lhs.true68, label %if.end78, !dbg !3573

land.lhs.true68:                                  ; preds = %land.lhs.true65
  %type69 = getelementptr inbounds %struct.access, %struct.access* %call8, i64 0, i32 4, !dbg !3574
  %20 = load %union.tree_node*, %union.tree_node** %type69, align 8, !dbg !3574
  %type70 = getelementptr inbounds %struct.access, %struct.access* %call7, i64 0, i32 4, !dbg !3575
  %21 = load %union.tree_node*, %union.tree_node** %type70, align 8, !dbg !3575
  %call71 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %20, %union.tree_node* %21) #6, !dbg !3576
  %tobool72 = icmp eq i8 %call71, 0, !dbg !3576
  br i1 %tobool72, label %if.end78, label %if.then73, !dbg !3577

if.then73:                                        ; preds = %land.lhs.true68
  %22 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @link_pool, align 8, !dbg !3578
  %call74 = tail call i8* @pool_alloc(%struct.alloc_pool_def* %22) #6, !dbg !3579
  %23 = bitcast i8* %call74 to %struct.assign_link*, !dbg !3580
  call void @llvm.dbg.value(metadata %struct.assign_link* %23, metadata !3528, metadata !DIExpression()), !dbg !3581
  %call75 = tail call i8* @memset(i8* %call74, i32 0, i64 24) #6, !dbg !3582
  %lacc76 = bitcast i8* %call74 to %struct.access**, !dbg !3583
  store %struct.access* %call8, %struct.access** %lacc76, align 8, !dbg !3584
  %racc77 = getelementptr inbounds i8, i8* %call74, i64 8, !dbg !3585
  %24 = bitcast i8* %racc77 to %struct.access**, !dbg !3585
  store %struct.access* %call7, %struct.access** %24, align 8, !dbg !3586
  tail call fastcc void @add_link_to_rhs(%struct.access* nonnull %call7, %struct.assign_link* %23) #7, !dbg !3587
  br label %if.end78, !dbg !3588

if.end78:                                         ; preds = %land.lhs.true68, %land.lhs.true23, %if.then73, %land.lhs.true65, %lor.lhs.false57, %land.lhs.true27, %land.lhs.true25, %if.end19
  %spec.select = or i1 %tobool22, %tobool20, !dbg !3589
  %cond = zext i1 %spec.select to i32, !dbg !3590
  br label %cleanup, !dbg !3591

cleanup:                                          ; preds = %if.end, %entry, %if.end78
  %retval.0 = phi i32 [ %cond, %if.end78 ], [ 0, %entry ], [ 0, %if.end ], !dbg !3531
  ret i32 %retval.0, !dbg !3592
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @analyze_all_variable_accesses() unnamed_addr #5 !dbg !3593 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !3595, metadata !DIExpression()), !dbg !3622
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3623
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !3596, metadata !DIExpression()), !dbg !3622
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3624
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3624
  %1 = bitcast i32* %i to i8*, !dbg !3625
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3625
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3626
  %call1 = tail call zeroext i8 @optimize_function_for_speed_p(%struct.function* %2) #6, !dbg !3626
  %tobool = icmp eq i8 %call1, 0, !dbg !3626
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3626

cond.true:                                        ; preds = %entry
  %3 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !3626
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %3, i64 0, i32 10, !dbg !3626
  %4 = load i32, i32* %move_ratio, align 4, !dbg !3626
  %phitmp = shl i32 %4, 5, !dbg !3626
  br label %cond.end, !dbg !3626

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %phitmp, %cond.true ], [ 96, %entry ]
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3606, metadata !DIExpression()), !dbg !3622
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !3627
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %5, i32 0, i32* nonnull %i) #7, !dbg !3627
  br label %for.cond, !dbg !3627

for.cond:                                         ; preds = %for.inc, %cond.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  %call2 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3628
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3627
  br i1 %tobool3, label %for.end, label %for.body, !dbg !3627

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @should_scalarize_away_bitmap, align 8, !dbg !3629
  %7 = load i32, i32* %i, align 4, !dbg !3630
  call void @llvm.dbg.value(metadata i32 %7, metadata !3605, metadata !DIExpression()), !dbg !3622
  %call4 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %7) #6, !dbg !3631
  %tobool5 = icmp eq i32 %call4, 0, !dbg !3631
  br i1 %tobool5, label %for.inc, label %land.lhs.true, !dbg !3632

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cannot_scalarize_away_bitmap, align 8, !dbg !3633
  %9 = load i32, i32* %i, align 4, !dbg !3634
  call void @llvm.dbg.value(metadata i32 %9, metadata !3605, metadata !DIExpression()), !dbg !3622
  %call6 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !3635
  %tobool7 = icmp eq i32 %call6, 0, !dbg !3635
  br i1 %tobool7, label %if.then, label %for.inc, !dbg !3636

if.then:                                          ; preds = %land.lhs.true
  %10 = load i32, i32* %i, align 4, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %10, metadata !3605, metadata !DIExpression()), !dbg !3622
  %call8 = call %union.tree_node* @referenced_var_lookup(i32 %10) #6, !dbg !3637
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !3607, metadata !DIExpression()), !dbg !3638
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3639
  %bf.load = load i64, i64* %11, align 8, !dbg !3639
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3641
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3641
  br i1 %cmp, label %land.lhs.true10, label %for.inc, !dbg !3642

land.lhs.true10:                                  ; preds = %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3643
  %12 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !3643
  %13 = load %struct.tree_type*, %struct.tree_type** %12, align 8, !dbg !3643
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 2, !dbg !3643
  %14 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !3643
  %call12 = call i64 @tree_low_cst(%union.tree_node* %14, i32 1) #6, !dbg !3644
  %conv13 = trunc i64 %call12 to i32, !dbg !3645
  %cmp14 = icmp ult i32 %cond, %conv13, !dbg !3646
  br i1 %cmp14, label %for.inc, label %land.lhs.true16, !dbg !3647

land.lhs.true16:                                  ; preds = %land.lhs.true10
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3648
  %call19 = call fastcc zeroext i8 @type_consists_of_records_p(%union.tree_node* %15) #7, !dbg !3649
  %tobool21 = icmp eq i8 %call19, 0, !dbg !3649
  br i1 %tobool21, label %for.inc, label %if.then22, !dbg !3650

if.then22:                                        ; preds = %land.lhs.true16
  call fastcc void @completely_scalarize_record(%union.tree_node* %call8, %union.tree_node* %call8, i64 0) #7, !dbg !3651
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3653
  %tobool23 = icmp eq %struct._IO_FILE* %16, null, !dbg !3653
  br i1 %tobool23, label %for.inc, label %land.lhs.true24, !dbg !3655

land.lhs.true24:                                  ; preds = %if.then22
  %17 = load i32, i32* @dump_flags, align 4, !dbg !3656
  %and = and i32 %17, 8, !dbg !3657
  %tobool25 = icmp eq i32 %and, 0, !dbg !3657
  br i1 %tobool25, label %for.inc, label %if.then26, !dbg !3658

if.then26:                                        ; preds = %land.lhs.true24
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !3659
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3661
  call void @print_generic_expr(%struct._IO_FILE* %18, %union.tree_node* %call8, i32 0) #6, !dbg !3662
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3663
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3664
  %20 = load i32, i32* %uid, align 4, !dbg !3664
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), i32 %20) #6, !dbg !3665
  br label %for.inc, !dbg !3666

for.inc:                                          ; preds = %land.lhs.true24, %if.then22, %land.lhs.true16, %land.lhs.true10, %land.lhs.true, %for.body, %if.then26, %if.then
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3628
  br label %for.cond, !dbg !3628, !llvm.loop !3667

for.end:                                          ; preds = %for.cond
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !3669
  call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %21) #6, !dbg !3670
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, i32 0, i32* nonnull %i) #7, !dbg !3671
  br label %for.cond31, !dbg !3671

for.cond31:                                       ; preds = %for.inc41, %for.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  %call32 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3672
  %tobool33 = icmp eq i8 %call32, 0, !dbg !3671
  br i1 %tobool33, label %for.end42, label %for.body34, !dbg !3671

for.body34:                                       ; preds = %for.cond31
  %22 = load i32, i32* %i, align 4, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %22, metadata !3605, metadata !DIExpression()), !dbg !3622
  %call36 = call %union.tree_node* @referenced_var_lookup(i32 %22) #6, !dbg !3673
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !3612, metadata !DIExpression()), !dbg !3674
  %call37 = call fastcc %struct.access* @sort_and_splice_var_accesses(%union.tree_node* %call36) #7, !dbg !3675
  call void @llvm.dbg.value(metadata %struct.access* %call37, metadata !3616, metadata !DIExpression()), !dbg !3674
  %tobool38 = icmp eq %struct.access* %call37, null, !dbg !3676
  br i1 %tobool38, label %if.else, label %if.then39, !dbg !3678

if.then39:                                        ; preds = %for.body34
  call fastcc void @build_access_trees(%struct.access* nonnull %call37) #7, !dbg !3679
  br label %for.inc41, !dbg !3679

if.else:                                          ; preds = %for.body34
  call fastcc void @disqualify_candidate(%union.tree_node* %call36, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.27, i64 0, i64 0)) #7, !dbg !3680
  br label %for.inc41

for.inc41:                                        ; preds = %if.then39, %if.else
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3672
  br label %for.cond31, !dbg !3672, !llvm.loop !3681

for.end42:                                        ; preds = %for.cond31
  call fastcc void @propagate_all_subaccesses() #7, !dbg !3683
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !3684
  call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %23) #6, !dbg !3685
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, i32 0, i32* nonnull %i) #7, !dbg !3686
  br label %for.cond43, !dbg !3686

for.cond43:                                       ; preds = %for.inc67, %for.end42
  %res.0 = phi i32 [ 0, %for.end42 ], [ %res.1, %for.inc67 ], !dbg !3622
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !3595, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  %call44 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3687
  %tobool45 = icmp eq i8 %call44, 0, !dbg !3686
  br i1 %tobool45, label %for.end68, label %for.body46, !dbg !3686

for.body46:                                       ; preds = %for.cond43
  %24 = load i32, i32* %i, align 4, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %24, metadata !3605, metadata !DIExpression()), !dbg !3622
  %call48 = call %union.tree_node* @referenced_var_lookup(i32 %24) #6, !dbg !3688
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !3617, metadata !DIExpression()), !dbg !3689
  %call50 = call fastcc %struct.access* @get_first_repr_for_decl(%union.tree_node* %call48) #7, !dbg !3690
  call void @llvm.dbg.value(metadata %struct.access* %call50, metadata !3621, metadata !DIExpression()), !dbg !3689
  %call51 = call fastcc zeroext i8 @analyze_access_trees(%struct.access* %call50) #7, !dbg !3691
  %tobool52 = icmp eq i8 %call51, 0, !dbg !3691
  br i1 %tobool52, label %if.else65, label %if.then53, !dbg !3693

if.then53:                                        ; preds = %for.body46
  %inc = add nsw i32 %res.0, 1, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3595, metadata !DIExpression()), !dbg !3622
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3696
  %tobool54 = icmp eq %struct._IO_FILE* %25, null, !dbg !3696
  br i1 %tobool54, label %for.inc67, label %land.lhs.true55, !dbg !3698

land.lhs.true55:                                  ; preds = %if.then53
  %26 = load i32, i32* @dump_flags, align 4, !dbg !3699
  %and56 = and i32 %26, 8, !dbg !3700
  %tobool57 = icmp eq i32 %and56, 0, !dbg !3700
  br i1 %tobool57, label %for.inc67, label %if.then58, !dbg !3701

if.then58:                                        ; preds = %land.lhs.true55
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !3702
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3704
  call void @print_generic_expr(%struct._IO_FILE* %27, %union.tree_node* %call48, i32 0) #6, !dbg !3705
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3706
  %uid61 = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3707
  %29 = load i32, i32* %uid61, align 4, !dbg !3707
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), i32 %29) #6, !dbg !3708
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3709
  call fastcc void @dump_access_tree(%struct._IO_FILE* %30, %struct.access* %call50) #7, !dbg !3710
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3711
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3712
  br label %for.inc67, !dbg !3713

if.else65:                                        ; preds = %for.body46
  call fastcc void @disqualify_candidate(%union.tree_node* %call48, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0)) #7, !dbg !3714
  br label %for.inc67

for.inc67:                                        ; preds = %land.lhs.true55, %if.then53, %if.else65, %if.then58
  %res.1 = phi i32 [ %res.0, %if.else65 ], [ %inc, %if.then58 ], [ %inc, %land.lhs.true55 ], [ %inc, %if.then53 ], !dbg !3622
  call void @llvm.dbg.value(metadata i32 %res.1, metadata !3595, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %i, metadata !3605, metadata !DIExpression(DW_OP_deref)), !dbg !3622
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3687
  br label %for.cond43, !dbg !3687, !llvm.loop !3715

for.end68:                                        ; preds = %for.cond43
  %res.0.lcssa = phi i32 [ %res.0, %for.cond43 ], !dbg !3622
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !3595, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !3595, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !3595, metadata !DIExpression()), !dbg !3622
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !3717
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3596, metadata !DIExpression()), !dbg !3622
  %tobool69 = icmp eq i32 %res.0.lcssa, 0, !dbg !3718
  br i1 %tobool69, label %cleanup, label %if.then70, !dbg !3720

if.then70:                                        ; preds = %for.end68
  %32 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3721
  call void @statistics_counter_event(%struct.function* %32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i64 0, i64 0), i32 %res.0.lcssa) #6, !dbg !3723
  br label %cleanup, !dbg !3724

cleanup:                                          ; preds = %for.end68, %if.then70
  %retval.0 = phi i8 [ 1, %if.then70 ], [ 0, %for.end68 ], !dbg !3725
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3726
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3726
  ret i8 %retval.0, !dbg !3726
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @sra_modify_expr(%union.tree_node** %expr, %struct.gimple_stmt_iterator* %gsi, i8 zeroext %write, i8* %data) #5 !dbg !3727 {
entry:
  %ref = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !3729, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3730, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.value(metadata i8 %write, metadata !3731, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.value(metadata i8* %data, metadata !3732, metadata !DIExpression()), !dbg !3752
  %0 = bitcast %union.tree_node** %expr to i64**, !dbg !3753
  %1 = load i64*, i64** %0, align 8, !dbg !3753
  %bf.load = load i64, i64* %1, align 8, !dbg !3753
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3755
  %cmp = icmp eq i64 %bf.cast1, 42, !dbg !3755
  %2 = bitcast i64* %1 to %union.tree_node*, !dbg !3756
  br i1 %cmp, label %if.then, label %if.end, !dbg !3756

if.then:                                          ; preds = %entry
  %3 = bitcast i64* %1 to %struct.tree_exp*, !dbg !3752
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3735, metadata !DIExpression()), !dbg !3752
  %operands = getelementptr inbounds i64, i64* %1, i64 5, !dbg !3757
  %4 = bitcast i64* %operands to %union.tree_node**, !dbg !3757
  call void @llvm.dbg.value(metadata %union.tree_node** %4, metadata !3729, metadata !DIExpression()), !dbg !3752
  %.phi.trans.insert = bitcast i64* %operands to i64**, !dbg !3759
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !3761
  %bf.load2.pre = load i64, i64* %.pre, align 8, !dbg !3761
  %5 = bitcast i64* %.pre to %union.tree_node*, !dbg !3762
  %.pre8 = and i64 %bf.load2.pre, 65535, !dbg !3763
  br label %if.end, !dbg !3762

if.end:                                           ; preds = %entry, %if.then
  %bf.cast42.pre-phi = phi i64 [ %bf.cast1, %entry ], [ %.pre8, %if.then ], !dbg !3763
  %6 = phi %union.tree_node* [ %2, %entry ], [ %5, %if.then ]
  %7 = phi %struct.tree_exp* [ null, %entry ], [ %3, %if.then ], !dbg !3764
  %bfr.0 = phi %union.tree_node* [ null, %entry ], [ %2, %if.then ], !dbg !3764
  %expr.addr.0 = phi %union.tree_node** [ %expr, %entry ], [ %4, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr.0, metadata !3729, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.value(metadata %union.tree_node* %bfr.0, metadata !3735, metadata !DIExpression()), !dbg !3752
  %cmp5 = icmp eq i64 %bf.cast42.pre-phi, 43, !dbg !3763
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !3765

lor.lhs.false:                                    ; preds = %if.end
  %cmp10 = icmp eq i64 %bf.cast42.pre-phi, 44, !dbg !3766
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !3767

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  %8 = bitcast %union.tree_node** %expr.addr.0 to %struct.tree_exp**, !dbg !3768
  %9 = load %struct.tree_exp*, %struct.tree_exp** %8, align 8, !dbg !3768
  %arrayidx14 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %9, i64 0, i32 3, i64 0, !dbg !3768
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx14, metadata !3729, metadata !DIExpression()), !dbg !3752
  %.pre6 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !3769
  br label %if.end15, !dbg !3770

if.end15:                                         ; preds = %if.then11, %lor.lhs.false
  %10 = phi %union.tree_node* [ %.pre6, %if.then11 ], [ %6, %lor.lhs.false ], !dbg !3769
  %expr.addr.1 = phi %union.tree_node** [ %arrayidx14, %if.then11 ], [ %expr.addr.0, %lor.lhs.false ], !dbg !3752
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr.1, metadata !3729, metadata !DIExpression()), !dbg !3752
  %call = tail call fastcc %struct.access* @get_access_for_expr(%union.tree_node* %10) #7, !dbg !3771
  call void @llvm.dbg.value(metadata %struct.access* %call, metadata !3733, metadata !DIExpression()), !dbg !3752
  %tobool = icmp eq %struct.access* %call, null, !dbg !3772
  br i1 %tobool, label %cleanup, label %if.end17, !dbg !3774

if.end17:                                         ; preds = %if.end15
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !3734, metadata !DIExpression()), !dbg !3752
  %grp_to_be_replaced = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 14, !dbg !3775
  %bf.load19 = load i16, i16* %grp_to_be_replaced, align 8, !dbg !3775
  %bf.clear20 = and i16 %bf.load19, 1024, !dbg !3775
  %tobool22 = icmp eq i16 %bf.clear20, 0, !dbg !3776
  br i1 %tobool22, label %if.end61, label %if.then23, !dbg !3777

if.then23:                                        ; preds = %if.end17
  %11 = bitcast %union.tree_node** %expr.addr.1 to %struct.tree_common**, !dbg !3778
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !3778
  %type18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !3778
  %13 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !3778
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3734, metadata !DIExpression()), !dbg !3752
  %call24 = tail call fastcc %union.tree_node* @get_access_replacement(%struct.access* nonnull %call) #7, !dbg !3779
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !3736, metadata !DIExpression()), !dbg !3780
  %type25 = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 4, !dbg !3781
  %14 = load %union.tree_node*, %union.tree_node** %type25, align 8, !dbg !3781
  %call26 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %13, %union.tree_node* %14) #6, !dbg !3782
  %tobool27 = icmp eq i8 %call26, 0, !dbg !3782
  br i1 %tobool27, label %if.then28, label %if.else59, !dbg !3783

if.then28:                                        ; preds = %if.then23
  %15 = bitcast %union.tree_node** %ref to i8*, !dbg !3784
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8, !dbg !3784
  %base29 = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 2, !dbg !3785
  %16 = bitcast %union.tree_node** %base29 to i64*, !dbg !3785
  %17 = load i64, i64* %16, align 8, !dbg !3785
  %18 = bitcast %union.tree_node** %ref to i64*, !dbg !3786
  store i64 %17, i64* %18, align 8, !dbg !3786
  %.cast = inttoptr i64 %17 to %struct.tree_common*, !dbg !3787
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.cast, i64 0, i32 2, !dbg !3787
  %19 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !3787
  %offset = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 0, !dbg !3788
  %20 = load i64, i64* %offset, align 8, !dbg !3788
  %21 = load %union.tree_node*, %union.tree_node** %type25, align 8, !dbg !3789
  call void @llvm.dbg.value(metadata %union.tree_node** %ref, metadata !3739, metadata !DIExpression(DW_OP_deref)), !dbg !3790
  %call33 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %ref, %union.tree_node* %19, i64 %20, %union.tree_node* %21, i8 zeroext 0) #7, !dbg !3791
  call void @llvm.dbg.value(metadata i8 %call33, metadata !3742, metadata !DIExpression()), !dbg !3790
  %tobool34 = icmp eq i8 %call33, 0, !dbg !3792
  br i1 %tobool34, label %cond.true, label %cond.end, !dbg !3792

cond.true:                                        ; preds = %if.then28
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 2333, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3792
  br label %cond.end, !dbg !3792

cond.end:                                         ; preds = %if.then28, %cond.true
  %tobool35 = icmp eq i8 %write, 0, !dbg !3793
  %bf.load37 = load i16, i16* %grp_to_be_replaced, align 8, !dbg !3794
  %bf.clear39 = and i16 %bf.load37, 512, !dbg !3794
  %tobool41 = icmp ne i16 %bf.clear39, 0, !dbg !3794
  br i1 %tobool35, label %if.else46, label %if.then36, !dbg !3795

if.then36:                                        ; preds = %cond.end
  br i1 %tobool41, label %if.then42, label %if.then36.if.end44_crit_edge, !dbg !3796

if.then36.if.end44_crit_edge:                     ; preds = %if.then36
  %.pre7 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !3797
  br label %if.end44, !dbg !3796

if.then42:                                        ; preds = %if.then36
  %22 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !3798
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3739, metadata !DIExpression()), !dbg !3790
  %call43 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %22, i8 zeroext 1, %union.tree_node* null, i8 zeroext 0, i32 0) #6, !dbg !3800
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !3739, metadata !DIExpression()), !dbg !3790
  store %union.tree_node* %call43, %union.tree_node** %ref, align 8, !dbg !3801
  br label %if.end44, !dbg !3802

if.end44:                                         ; preds = %if.then36.if.end44_crit_edge, %if.then42
  %23 = phi %union.tree_node* [ %.pre7, %if.then36.if.end44_crit_edge ], [ %call43, %if.then42 ], !dbg !3797
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !3739, metadata !DIExpression()), !dbg !3790
  %call45 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call24, %union.tree_node* %23) #6, !dbg !3797
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call45, metadata !3743, metadata !DIExpression()), !dbg !3803
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call45, i32 0) #6, !dbg !3804
  br label %if.end58, !dbg !3805

if.else46:                                        ; preds = %cond.end
  br i1 %tobool41, label %if.then54, label %if.end56, !dbg !3806

if.then54:                                        ; preds = %if.else46
  %call55 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call24, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !3807
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !3736, metadata !DIExpression()), !dbg !3780
  br label %if.end56, !dbg !3809

if.end56:                                         ; preds = %if.then54, %if.else46
  %repl.0 = phi %union.tree_node* [ %call55, %if.then54 ], [ %call24, %if.else46 ], !dbg !3780
  call void @llvm.dbg.value(metadata %union.tree_node* %repl.0, metadata !3736, metadata !DIExpression()), !dbg !3780
  %24 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !3810
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !3739, metadata !DIExpression()), !dbg !3790
  %call57 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %24, %union.tree_node* %repl.0) #6, !dbg !3810
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call57, metadata !3746, metadata !DIExpression()), !dbg !3811
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call57, i32 1) #6, !dbg !3812
  br label %if.end58

if.end58:                                         ; preds = %if.end56, %if.end44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8, !dbg !3813
  br label %if.end60, !dbg !3814

if.else59:                                        ; preds = %if.then23
  store %union.tree_node* %call24, %union.tree_node** %expr.addr.1, align 8, !dbg !3815
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.end58
  %25 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 1), align 4, !dbg !3816
  %inc = add nsw i32 %25, 1, !dbg !3816
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 1), align 4, !dbg !3816
  br label %if.end61, !dbg !3817

if.end61:                                         ; preds = %if.end17, %if.end60
  %first_child = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 8, !dbg !3818
  %26 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !3818
  %tobool62 = icmp eq %struct.access* %26, null, !dbg !3819
  br i1 %tobool62, label %cleanup, label %if.then63, !dbg !3820

if.then63:                                        ; preds = %if.end61
  %tobool64 = icmp eq %union.tree_node* %bfr.0, null, !dbg !3821
  br i1 %tobool64, label %if.end87, label %land.lhs.true, !dbg !3823

land.lhs.true:                                    ; preds = %if.then63
  %arrayidx67 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %7, i64 0, i32 3, i64 1, !dbg !3824
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx67, align 8, !dbg !3824
  %call68 = call i32 @host_integerp(%union.tree_node* %27, i32 1) #6, !dbg !3825
  %tobool69 = icmp eq i32 %call68, 0, !dbg !3825
  br i1 %tobool69, label %if.end87, label %land.lhs.true70, !dbg !3826

land.lhs.true70:                                  ; preds = %land.lhs.true
  %arrayidx73 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %7, i64 0, i32 3, i64 2, !dbg !3827
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx73, align 8, !dbg !3827
  %call74 = call i32 @host_integerp(%union.tree_node* %28, i32 1) #6, !dbg !3828
  %tobool75 = icmp eq i32 %call74, 0, !dbg !3828
  br i1 %tobool75, label %if.end87, label %if.then76, !dbg !3829

if.then76:                                        ; preds = %land.lhs.true70
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx67, align 8, !dbg !3830
  %call80 = call i64 @tree_low_cst(%union.tree_node* %29, i32 1) #6, !dbg !3832
  call void @llvm.dbg.value(metadata i64 %call80, metadata !3751, metadata !DIExpression()), !dbg !3833
  %offset81 = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 0, !dbg !3834
  %30 = load i64, i64* %offset81, align 8, !dbg !3834
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx73, align 8, !dbg !3835
  %call85 = call i64 @tree_low_cst(%union.tree_node* %31, i32 1) #6, !dbg !3836
  %add = add nsw i64 %30, %call85, !dbg !3837
  call void @llvm.dbg.value(metadata i64 %add, metadata !3748, metadata !DIExpression()), !dbg !3833
  br label %if.end87, !dbg !3838

if.end87:                                         ; preds = %land.lhs.true70, %land.lhs.true, %if.then63, %if.then76
  %start_offset.0 = phi i64 [ %add, %if.then76 ], [ 0, %land.lhs.true70 ], [ 0, %land.lhs.true ], [ 0, %if.then63 ], !dbg !3839
  %chunk_size.0 = phi i64 [ %call80, %if.then76 ], [ 0, %land.lhs.true70 ], [ 0, %land.lhs.true ], [ 0, %if.then63 ], !dbg !3839
  call void @llvm.dbg.value(metadata i64 %chunk_size.0, metadata !3751, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i64 %start_offset.0, metadata !3748, metadata !DIExpression()), !dbg !3833
  %32 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !3840
  %base89 = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 2, !dbg !3841
  %33 = load %union.tree_node*, %union.tree_node** %base89, align 8, !dbg !3841
  call fastcc void @generate_subtree_copies(%struct.access* %32, %union.tree_node* %33, i64 0, i64 %start_offset.0, i64 %chunk_size.0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext %write, i8 zeroext %write) #7, !dbg !3842
  br label %cleanup, !dbg !3843

cleanup:                                          ; preds = %if.end61, %if.end15, %if.end87
  %retval.0 = phi i8 [ 0, %if.end15 ], [ 1, %if.end87 ], [ 1, %if.end61 ], !dbg !3752
  ret i8 %retval.0, !dbg !3844
}

; Function Attrs: nounwind uwtable
define internal i32 @sra_modify_assign(%union.gimple_statement_d** %stmt, %struct.gimple_stmt_iterator* %gsi, i8* %data) #5 !dbg !3845 {
entry:
  %orig_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %expr = alloca %union.tree_node*, align 8
  %expr186 = alloca %union.tree_node*, align 8
  %orig_gsi272 = alloca %struct.gimple_stmt_iterator, align 8
  %refreshed = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !3847, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3848, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %data, metadata !3849, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 0, metadata !3854, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 0, metadata !3855, metadata !DIExpression()), !dbg !3874
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3875
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %0) #7, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %call, metadata !3856, metadata !DIExpression()), !dbg !3874
  %1 = bitcast %struct.gimple_stmt_iterator* %orig_gsi to i8*, !dbg !3877
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3877
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !3878
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3879
  %call1 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %3) #6, !dbg !3881
  %tobool = icmp eq i8 %call1, 0, !dbg !3881
  br i1 %tobool, label %cleanup359, label %if.end, !dbg !3882

if.end:                                           ; preds = %entry
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3883
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %4) #7, !dbg !3884
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3852, metadata !DIExpression()), !dbg !3874
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3885
  %call3 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %5) #7, !dbg !3886
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3853, metadata !DIExpression()), !dbg !3874
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3887
  %bf.load = load i64, i64* %6, align 8, !dbg !3887
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !3889
  %cmp = icmp eq i64 %bf.cast5, 51, !dbg !3889
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !3890

if.then4:                                         ; preds = %if.end
  %call5 = tail call fastcc i32 @sra_modify_constructor_assign(%union.gimple_statement_d** %stmt, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !3891
  br label %cleanup359, !dbg !3892

if.end6:                                          ; preds = %if.end
  %cmp11 = icmp eq i64 %bf.cast5, 43, !dbg !3893
  br i1 %cmp11, label %if.then41, label %lor.lhs.false, !dbg !3895

lor.lhs.false:                                    ; preds = %if.end6
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3896
  %bf.load13 = load i64, i64* %7, align 8, !dbg !3896
  %bf.cast157 = and i64 %bf.load13, 65535, !dbg !3897
  %cmp16 = icmp eq i64 %bf.cast157, 43, !dbg !3897
  br i1 %cmp16, label %if.then41, label %lor.lhs.false17, !dbg !3898

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %cmp22 = icmp eq i64 %bf.cast5, 44, !dbg !3899
  br i1 %cmp22, label %if.then41, label %lor.lhs.false23, !dbg !3900

lor.lhs.false23:                                  ; preds = %lor.lhs.false17
  %cmp28 = icmp eq i64 %bf.cast157, 44, !dbg !3901
  br i1 %cmp28, label %if.then41, label %lor.lhs.false29, !dbg !3902

lor.lhs.false29:                                  ; preds = %lor.lhs.false23
  %cmp34 = icmp eq i64 %bf.cast5, 42, !dbg !3903
  br i1 %cmp34, label %if.then41, label %lor.lhs.false35, !dbg !3904

lor.lhs.false35:                                  ; preds = %lor.lhs.false29
  %cmp40 = icmp eq i64 %bf.cast157, 42, !dbg !3905
  br i1 %cmp40, label %if.then41, label %if.end50, !dbg !3906

if.then41:                                        ; preds = %lor.lhs.false35, %lor.lhs.false29, %lor.lhs.false23, %lor.lhs.false17, %lor.lhs.false, %if.end6
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3907
  %call42 = tail call fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %8) #7, !dbg !3909
  %call43 = tail call zeroext i8 @sra_modify_expr(%union.tree_node** %call42, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 0, i8* %data) #7, !dbg !3910
  call void @llvm.dbg.value(metadata i8 %call43, metadata !3854, metadata !DIExpression()), !dbg !3874
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3911
  %call44 = tail call fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %9) #7, !dbg !3912
  %call45 = tail call zeroext i8 @sra_modify_expr(%union.tree_node** %call44, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 1, i8* %data) #7, !dbg !3913
  %or22 = or i8 %call43, %call45, !dbg !3914
  call void @llvm.dbg.value(metadata i8 %or22, metadata !3854, metadata !DIExpression()), !dbg !3874
  %tobool49 = icmp ne i8 %or22, 0, !dbg !3915
  %cond = zext i1 %tobool49 to i32, !dbg !3915
  br label %cleanup359, !dbg !3916

if.end50:                                         ; preds = %lor.lhs.false35
  %call51 = tail call fastcc %struct.access* @get_access_for_expr(%union.tree_node* %call2) #7, !dbg !3917
  call void @llvm.dbg.value(metadata %struct.access* %call51, metadata !3850, metadata !DIExpression()), !dbg !3874
  %call52 = tail call fastcc %struct.access* @get_access_for_expr(%union.tree_node* %call3) #7, !dbg !3918
  call void @llvm.dbg.value(metadata %struct.access* %call52, metadata !3851, metadata !DIExpression()), !dbg !3874
  %tobool53 = icmp ne %struct.access* %call51, null, !dbg !3919
  %tobool54 = icmp ne %struct.access* %call52, null, !dbg !3921
  %or.cond = or i1 %tobool53, %tobool54, !dbg !3922
  br i1 %or.cond, label %if.end56, label %cleanup359, !dbg !3922

if.end56:                                         ; preds = %if.end50
  %tobool57 = icmp eq %struct.access* %call51, null, !dbg !3923
  br i1 %tobool57, label %if.end72, label %land.lhs.true58, !dbg !3925

land.lhs.true58:                                  ; preds = %if.end56
  %grp_to_be_replaced = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 14, !dbg !3926
  %bf.load59 = load i16, i16* %grp_to_be_replaced, align 8, !dbg !3926
  %bf.clear60 = and i16 %bf.load59, 1024, !dbg !3926
  %tobool62 = icmp eq i16 %bf.clear60, 0, !dbg !3927
  br i1 %tobool62, label %if.end72, label %if.then63, !dbg !3928

if.then63:                                        ; preds = %land.lhs.true58
  %call64 = tail call fastcc %union.tree_node* @get_access_replacement(%struct.access* nonnull %call51) #7, !dbg !3929
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !3852, metadata !DIExpression()), !dbg !3874
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3931
  tail call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %10, %union.tree_node* %call64) #7, !dbg !3932
  call void @llvm.dbg.value(metadata i8 1, metadata !3854, metadata !DIExpression()), !dbg !3874
  %bf.load65 = load i16, i16* %grp_to_be_replaced, align 8, !dbg !3933
  %bf.clear67 = lshr i16 %bf.load65, 9, !dbg !3935
  %11 = trunc i16 %bf.clear67 to i8, !dbg !3935
  %12 = and i8 %11, 1, !dbg !3935
  call void @llvm.dbg.value(metadata i8 %12, metadata !3855, metadata !DIExpression()), !dbg !3874
  %13 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 1), align 4, !dbg !3936
  %inc = add nsw i32 %13, 1, !dbg !3936
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 1), align 4, !dbg !3936
  br label %if.end72, !dbg !3937

if.end72:                                         ; preds = %land.lhs.true58, %if.end56, %if.then63
  %lhs.0 = phi %union.tree_node* [ %call64, %if.then63 ], [ %call2, %land.lhs.true58 ], [ %call2, %if.end56 ], !dbg !3874
  %modify_this_stmt.0 = phi i8 [ 1, %if.then63 ], [ 0, %land.lhs.true58 ], [ 0, %if.end56 ], !dbg !3874
  %force_gimple_rhs.1 = phi i8 [ %12, %if.then63 ], [ 0, %land.lhs.true58 ], [ 0, %if.end56 ], !dbg !3874
  call void @llvm.dbg.value(metadata i8 %force_gimple_rhs.1, metadata !3855, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 %modify_this_stmt.0, metadata !3854, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0, metadata !3852, metadata !DIExpression()), !dbg !3874
  %tobool73 = icmp eq %struct.access* %call52, null, !dbg !3938
  br i1 %tobool73, label %if.end92, label %land.lhs.true74, !dbg !3940

land.lhs.true74:                                  ; preds = %if.end72
  %grp_to_be_replaced75 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 14, !dbg !3941
  %bf.load76 = load i16, i16* %grp_to_be_replaced75, align 8, !dbg !3941
  %bf.clear78 = and i16 %bf.load76, 1024, !dbg !3941
  %tobool80 = icmp eq i16 %bf.clear78, 0, !dbg !3942
  br i1 %tobool80, label %if.end92, label %if.then81, !dbg !3943

if.then81:                                        ; preds = %land.lhs.true74
  %call82 = tail call fastcc %union.tree_node* @get_access_replacement(%struct.access* nonnull %call52) #7, !dbg !3944
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !3853, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 1, metadata !3854, metadata !DIExpression()), !dbg !3874
  %bf.load84 = load i16, i16* %grp_to_be_replaced75, align 8, !dbg !3946
  %bf.clear86 = and i16 %bf.load84, 512, !dbg !3946
  %tobool88 = icmp eq i16 %bf.clear86, 0, !dbg !3948
  %spec.select2 = select i1 %tobool88, i8 %force_gimple_rhs.1, i8 1, !dbg !3949
  call void @llvm.dbg.value(metadata i8 %spec.select2, metadata !3855, metadata !DIExpression()), !dbg !3874
  %14 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 1), align 4, !dbg !3950
  %inc91 = add nsw i32 %14, 1, !dbg !3950
  store i32 %inc91, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 1), align 4, !dbg !3950
  br label %if.end92, !dbg !3951

if.end92:                                         ; preds = %land.lhs.true74, %if.end72, %if.then81
  %rhs.0 = phi %union.tree_node* [ %call82, %if.then81 ], [ %call3, %land.lhs.true74 ], [ %call3, %if.end72 ], !dbg !3874
  %modify_this_stmt.1 = phi i8 [ 1, %if.then81 ], [ %modify_this_stmt.0, %land.lhs.true74 ], [ %modify_this_stmt.0, %if.end72 ], !dbg !3874
  %force_gimple_rhs.3 = phi i8 [ %spec.select2, %if.then81 ], [ %force_gimple_rhs.1, %land.lhs.true74 ], [ %force_gimple_rhs.1, %if.end72 ], !dbg !3874
  call void @llvm.dbg.value(metadata i8 %force_gimple_rhs.3, metadata !3855, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 %modify_this_stmt.1, metadata !3854, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !3853, metadata !DIExpression()), !dbg !3874
  %tobool93 = icmp eq i8 %modify_this_stmt.1, 0, !dbg !3952
  br i1 %tobool93, label %if.end223, label %if.then94, !dbg !3953

if.then94:                                        ; preds = %if.end92
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3954
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3954
  %type96 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3955
  %16 = load %union.tree_node*, %union.tree_node** %type96, align 8, !dbg !3955
  %call97 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %15, %union.tree_node* %16) #6, !dbg !3956
  %tobool98 = icmp eq i8 %call97, 0, !dbg !3956
  br i1 %tobool98, label %if.then99, label %if.end223, !dbg !3957

if.then99:                                        ; preds = %if.then94
  %17 = bitcast %union.tree_node** %type to i64**, !dbg !3958
  %18 = load i64*, i64** %17, align 8, !dbg !3958
  %bf.load103 = load i64, i64* %18, align 8, !dbg !3958
  %bf.cast10513 = and i64 %bf.load103, 65535, !dbg !3958
  %cmp106 = icmp eq i64 %bf.cast10513, 15, !dbg !3958
  br i1 %cmp106, label %land.lhs.true135, label %lor.lhs.false108, !dbg !3958

lor.lhs.false108:                                 ; preds = %if.then99
  %cmp115 = icmp eq i64 %bf.cast10513, 16, !dbg !3958
  br i1 %cmp115, label %land.lhs.true135, label %lor.lhs.false117, !dbg !3958

lor.lhs.false117:                                 ; preds = %lor.lhs.false108
  %cmp124 = icmp eq i64 %bf.cast10513, 17, !dbg !3958
  br i1 %cmp124, label %land.lhs.true135, label %lor.lhs.false126, !dbg !3958

lor.lhs.false126:                                 ; preds = %lor.lhs.false117
  %cmp133 = icmp eq i64 %bf.cast10513, 18, !dbg !3958
  br i1 %cmp133, label %land.lhs.true135, label %if.else, !dbg !3959

land.lhs.true135:                                 ; preds = %lor.lhs.false126, %lor.lhs.false117, %lor.lhs.false108, %if.then99
  %call136 = tail call fastcc zeroext i8 @access_has_children_p(%struct.access* %call51) #7, !dbg !3960
  %tobool137 = icmp eq i8 %call136, 0, !dbg !3960
  br i1 %tobool137, label %if.then138, label %if.else, !dbg !3961

if.then138:                                       ; preds = %land.lhs.true135
  %19 = bitcast %union.tree_node** %expr to i8*, !dbg !3962
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8, !dbg !3962
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0, metadata !3858, metadata !DIExpression()), !dbg !3963
  store %union.tree_node* %lhs.0, %union.tree_node** %expr, align 8, !dbg !3964
  %20 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3965
  %21 = load %union.tree_node*, %union.tree_node** %type96, align 8, !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !3858, metadata !DIExpression(DW_OP_deref)), !dbg !3963
  %call143 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %expr, %union.tree_node* %20, i64 0, %union.tree_node* %21, i8 zeroext 0) #7, !dbg !3968
  %tobool144 = icmp eq i8 %call143, 0, !dbg !3968
  br i1 %tobool144, label %if.end146, label %if.then145, !dbg !3969

if.then145:                                       ; preds = %if.then138
  %22 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !3970
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3858, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3852, metadata !DIExpression()), !dbg !3874
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3972
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3858, metadata !DIExpression()), !dbg !3963
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %23, %union.tree_node* %22) #7, !dbg !3973
  br label %if.end146, !dbg !3974

if.end146:                                        ; preds = %if.then138, %if.then145
  %lhs.1 = phi %union.tree_node* [ %22, %if.then145 ], [ %lhs.0, %if.then138 ], !dbg !3874
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.1, metadata !3852, metadata !DIExpression()), !dbg !3874
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8, !dbg !3975
  br label %if.end196, !dbg !3976

if.else:                                          ; preds = %land.lhs.true135, %lor.lhs.false126
  %24 = bitcast %union.tree_node** %type96 to i64**, !dbg !3977
  %25 = load i64*, i64** %24, align 8, !dbg !3977
  %bf.load150 = load i64, i64* %25, align 8, !dbg !3977
  %bf.cast15217 = and i64 %bf.load150, 65535, !dbg !3977
  %cmp153 = icmp eq i64 %bf.cast15217, 15, !dbg !3977
  br i1 %cmp153, label %land.lhs.true182, label %lor.lhs.false155, !dbg !3977

lor.lhs.false155:                                 ; preds = %if.else
  %cmp162 = icmp eq i64 %bf.cast15217, 16, !dbg !3977
  br i1 %cmp162, label %land.lhs.true182, label %lor.lhs.false164, !dbg !3977

lor.lhs.false164:                                 ; preds = %lor.lhs.false155
  %cmp171 = icmp eq i64 %bf.cast15217, 17, !dbg !3977
  br i1 %cmp171, label %land.lhs.true182, label %lor.lhs.false173, !dbg !3977

lor.lhs.false173:                                 ; preds = %lor.lhs.false164
  %cmp180 = icmp eq i64 %bf.cast15217, 18, !dbg !3977
  br i1 %cmp180, label %land.lhs.true182, label %if.end196, !dbg !3978

land.lhs.true182:                                 ; preds = %lor.lhs.false173, %lor.lhs.false164, %lor.lhs.false155, %if.else
  %call183 = tail call fastcc zeroext i8 @access_has_children_p(%struct.access* %call52) #7, !dbg !3979
  %tobool184 = icmp eq i8 %call183, 0, !dbg !3979
  br i1 %tobool184, label %if.then185, label %if.end196, !dbg !3980

if.then185:                                       ; preds = %land.lhs.true182
  %26 = bitcast %union.tree_node** %expr186 to i8*, !dbg !3981
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8, !dbg !3981
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !3865, metadata !DIExpression()), !dbg !3982
  store %union.tree_node* %rhs.0, %union.tree_node** %expr186, align 8, !dbg !3983
  %27 = load %union.tree_node*, %union.tree_node** %type96, align 8, !dbg !3984
  %28 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3986
  call void @llvm.dbg.value(metadata %union.tree_node** %expr186, metadata !3865, metadata !DIExpression(DW_OP_deref)), !dbg !3982
  %call191 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %expr186, %union.tree_node* %27, i64 0, %union.tree_node* %28, i8 zeroext 0) #7, !dbg !3987
  %tobool192 = icmp eq i8 %call191, 0, !dbg !3987
  %29 = load %union.tree_node*, %union.tree_node** %expr186, align 8, !dbg !3988
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !3865, metadata !DIExpression()), !dbg !3982
  %spec.select3 = select i1 %tobool192, %union.tree_node* %rhs.0, %union.tree_node* %29, !dbg !3989
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select3, metadata !3853, metadata !DIExpression()), !dbg !3874
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8, !dbg !3990
  br label %if.end196, !dbg !3991

if.end196:                                        ; preds = %land.lhs.true182, %lor.lhs.false173, %if.then185, %if.end146
  %lhs.2 = phi %union.tree_node* [ %lhs.1, %if.end146 ], [ %lhs.0, %if.then185 ], [ %lhs.0, %land.lhs.true182 ], [ %lhs.0, %lor.lhs.false173 ], !dbg !3874
  %rhs.3 = phi %union.tree_node* [ %rhs.0, %if.end146 ], [ %spec.select3, %if.then185 ], [ %rhs.0, %land.lhs.true182 ], [ %rhs.0, %lor.lhs.false173 ], !dbg !3992
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.3, metadata !3853, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.2, metadata !3852, metadata !DIExpression()), !dbg !3874
  %type198 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3993
  %30 = load %union.tree_node*, %union.tree_node** %type198, align 8, !dbg !3993
  %type200 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3995
  %31 = load %union.tree_node*, %union.tree_node** %type200, align 8, !dbg !3995
  %call201 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %30, %union.tree_node* %31) #6, !dbg !3996
  %tobool202 = icmp eq i8 %call201, 0, !dbg !3996
  br i1 %tobool202, label %if.then203, label %if.end223, !dbg !3997

if.then203:                                       ; preds = %if.end196
  %32 = load %union.tree_node*, %union.tree_node** %type198, align 8, !dbg !3998
  %call206 = call %union.tree_node* @fold_build1_stat_loc(i32 %call, i32 118, %union.tree_node* %32, %union.tree_node* %rhs.3) #6, !dbg !3998
  call void @llvm.dbg.value(metadata %union.tree_node* %call206, metadata !3853, metadata !DIExpression()), !dbg !3874
  %33 = load %union.tree_node*, %union.tree_node** %type198, align 8, !dbg !4000
  %call209 = call zeroext i8 @is_gimple_reg_type(%union.tree_node* %33) #6, !dbg !4002
  %tobool211 = icmp eq i8 %call209, 0, !dbg !4002
  br i1 %tobool211, label %if.end223, label %land.lhs.true212, !dbg !4003

land.lhs.true212:                                 ; preds = %if.then203
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4004
  %bf.load214 = load i64, i64* %34, align 8, !dbg !4004
  %bf.cast21621 = and i64 %bf.load214, 65535, !dbg !4005
  %cmp217 = icmp eq i64 %bf.cast21621, 141, !dbg !4005
  %spec.select4 = select i1 %cmp217, i8 %force_gimple_rhs.3, i8 1, !dbg !4006
  br label %if.end223, !dbg !4006

if.end223:                                        ; preds = %if.then203, %if.end196, %if.then94, %if.end92, %land.lhs.true212
  %lhs.4 = phi %union.tree_node* [ %lhs.0, %if.end92 ], [ %lhs.0, %if.then94 ], [ %lhs.2, %if.then203 ], [ %lhs.2, %land.lhs.true212 ], [ %lhs.2, %if.end196 ], !dbg !4007
  %rhs.6 = phi %union.tree_node* [ %rhs.0, %if.end92 ], [ %rhs.0, %if.then94 ], [ %call206, %if.then203 ], [ %call206, %land.lhs.true212 ], [ %rhs.3, %if.end196 ], !dbg !3992
  %force_gimple_rhs.7 = phi i8 [ %force_gimple_rhs.3, %if.end92 ], [ %force_gimple_rhs.3, %if.then94 ], [ %force_gimple_rhs.3, %if.then203 ], [ %spec.select4, %land.lhs.true212 ], [ %force_gimple_rhs.3, %if.end196 ], !dbg !4008
  call void @llvm.dbg.value(metadata i8 %force_gimple_rhs.7, metadata !3855, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.6, metadata !3853, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.4, metadata !3852, metadata !DIExpression()), !dbg !3874
  %35 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4009
  %call224 = call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %35) #7, !dbg !4010
  %tobool226 = icmp eq i8 %call224, 0, !dbg !4010
  br i1 %tobool226, label %lor.lhs.false227, label %if.then250, !dbg !4011

lor.lhs.false227:                                 ; preds = %if.end223
  %call228 = call fastcc zeroext i8 @contains_view_convert_expr_p(%union.tree_node* %rhs.6) #7, !dbg !4012
  %tobool230 = icmp eq i8 %call228, 0, !dbg !4012
  br i1 %tobool230, label %lor.lhs.false231, label %if.then250, !dbg !4013

lor.lhs.false231:                                 ; preds = %lor.lhs.false227
  %call232 = call fastcc zeroext i8 @contains_view_convert_expr_p(%union.tree_node* %lhs.4) #7, !dbg !4014
  %tobool234 = icmp eq i8 %call232, 0, !dbg !4014
  br i1 %tobool234, label %lor.lhs.false235, label %if.then250, !dbg !4015

lor.lhs.false235:                                 ; preds = %lor.lhs.false231
  %call236 = call fastcc zeroext i8 @access_has_children_p(%struct.access* %call52) #7, !dbg !4016
  %tobool238 = icmp eq i8 %call236, 0, !dbg !4016
  br i1 %tobool238, label %lor.lhs.false242, label %land.lhs.true239, !dbg !4017

land.lhs.true239:                                 ; preds = %lor.lhs.false235
  %offset = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 0, !dbg !4018
  %36 = load i64, i64* %offset, align 8, !dbg !4018
  %call240 = call fastcc zeroext i8 @ref_expr_for_all_replacements_p(%struct.access* %call52, %union.tree_node* %lhs.4, i64 %36) #7, !dbg !4019
  %tobool241 = icmp eq i8 %call240, 0, !dbg !4019
  br i1 %tobool241, label %if.then250, label %lor.lhs.false242, !dbg !4020

lor.lhs.false242:                                 ; preds = %land.lhs.true239, %lor.lhs.false235
  %call243 = call fastcc zeroext i8 @access_has_children_p(%struct.access* %call51) #7, !dbg !4021
  %tobool245 = icmp eq i8 %call243, 0, !dbg !4021
  br i1 %tobool245, label %if.else263, label %land.lhs.true246, !dbg !4022

land.lhs.true246:                                 ; preds = %lor.lhs.false242
  %offset247 = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 0, !dbg !4023
  %37 = load i64, i64* %offset247, align 8, !dbg !4023
  %call248 = call fastcc zeroext i8 @ref_expr_for_all_replacements_p(%struct.access* %call51, %union.tree_node* %rhs.6, i64 %37) #7, !dbg !4024
  %tobool249 = icmp eq i8 %call248, 0, !dbg !4024
  br i1 %tobool249, label %if.then250, label %if.else263, !dbg !4025

if.then250:                                       ; preds = %land.lhs.true239, %land.lhs.true246, %lor.lhs.false231, %lor.lhs.false227, %if.end223
  %call251 = call fastcc zeroext i8 @access_has_children_p(%struct.access* %call52) #7, !dbg !4026
  %tobool252 = icmp eq i8 %call251, 0, !dbg !4026
  br i1 %tobool252, label %if.end255, label %if.then253, !dbg !4029

if.then253:                                       ; preds = %if.then250
  %first_child = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 8, !dbg !4030
  %38 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !4030
  %base254 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 2, !dbg !4031
  %39 = load %union.tree_node*, %union.tree_node** %base254, align 8, !dbg !4031
  call fastcc void @generate_subtree_copies(%struct.access* %38, %union.tree_node* %39, i64 0, i64 0, i64 0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 0, i8 zeroext 0) #7, !dbg !4032
  br label %if.end255, !dbg !4032

if.end255:                                        ; preds = %if.then250, %if.then253
  %call256 = call fastcc zeroext i8 @access_has_children_p(%struct.access* %call51) #7, !dbg !4033
  %tobool257 = icmp eq i8 %call256, 0, !dbg !4033
  br i1 %tobool257, label %if.end261, label %if.then258, !dbg !4035

if.then258:                                       ; preds = %if.end255
  %first_child259 = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 8, !dbg !4036
  %40 = load %struct.access*, %struct.access** %first_child259, align 8, !dbg !4036
  %base260 = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 2, !dbg !4037
  %41 = load %union.tree_node*, %union.tree_node** %base260, align 8, !dbg !4037
  call fastcc void @generate_subtree_copies(%struct.access* %40, %union.tree_node* %41, i64 0, i64 0, i64 0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 1, i8 zeroext 1) #7, !dbg !4038
  br label %if.end261, !dbg !4038

if.end261:                                        ; preds = %if.end255, %if.then258
  %42 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 5), align 4, !dbg !4039
  %inc262 = add nsw i32 %42, 1, !dbg !4039
  store i32 %inc262, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 5), align 4, !dbg !4039
  br label %if.end339, !dbg !4040

if.else263:                                       ; preds = %land.lhs.true246, %lor.lhs.false242
  %call264 = call fastcc zeroext i8 @access_has_children_p(%struct.access* %call51) #7, !dbg !4041
  %tobool266 = icmp eq i8 %call264, 0, !dbg !4041
  br i1 %tobool266, label %if.else302, label %land.lhs.true267, !dbg !4042

land.lhs.true267:                                 ; preds = %if.else263
  %call268 = call fastcc zeroext i8 @access_has_children_p(%struct.access* %call52) #7, !dbg !4043
  %tobool270 = icmp eq i8 %call268, 0, !dbg !4043
  br i1 %tobool270, label %if.else302, label %if.then271, !dbg !4044

if.then271:                                       ; preds = %land.lhs.true267
  %43 = bitcast %struct.gimple_stmt_iterator* %orig_gsi272 to i8*, !dbg !4045
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8, !dbg !4045
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %2, i64 24, i1 false), !dbg !4046
  %44 = bitcast i32* %refreshed to i8*, !dbg !4047
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #8, !dbg !4047
  %grp_read = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 14, !dbg !4048
  %bf.load273 = load i16, i16* %grp_read, align 8, !dbg !4048
  %bf.clear275 = and i16 %bf.load273, 16, !dbg !4048
  %tobool277 = icmp eq i16 %bf.clear275, 0, !dbg !4050
  br i1 %tobool277, label %if.else286, label %land.lhs.true278, !dbg !4051

land.lhs.true278:                                 ; preds = %if.then271
  %bf.clear281 = and i16 %bf.load273, 64, !dbg !4052
  %tobool283 = icmp eq i16 %bf.clear281, 0, !dbg !4053
  br i1 %tobool283, label %if.then284, label %if.else286, !dbg !4054

if.then284:                                       ; preds = %land.lhs.true278
  %call285 = call fastcc i32 @handle_unscalarized_data_in_subtree(%struct.access* %call52, %union.tree_node* %lhs.4, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %call285, metadata !3873, metadata !DIExpression()), !dbg !4056
  br label %if.end287, !dbg !4057

if.else286:                                       ; preds = %land.lhs.true278, %if.then271
  call void @llvm.dbg.value(metadata i32 0, metadata !3873, metadata !DIExpression()), !dbg !4056
  br label %if.end287

if.end287:                                        ; preds = %if.else286, %if.then284
  %storemerge = phi i32 [ 0, %if.else286 ], [ %call285, %if.then284 ], !dbg !4058
  store i32 %storemerge, i32* %refreshed, align 4, !dbg !4058
  %first_child288 = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 8, !dbg !4059
  %45 = load %struct.access*, %struct.access** %first_child288, align 8, !dbg !4059
  %offset289 = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 0, !dbg !4060
  %46 = load i64, i64* %offset289, align 8, !dbg !4060
  %offset290 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 0, !dbg !4061
  %47 = load i64, i64* %offset290, align 8, !dbg !4061
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %orig_gsi272, metadata !3868, metadata !DIExpression(DW_OP_deref)), !dbg !4056
  call void @llvm.dbg.value(metadata i32* %refreshed, metadata !3873, metadata !DIExpression(DW_OP_deref)), !dbg !4056
  call fastcc void @load_assign_lhs_subreplacements(%struct.access* %45, %struct.access* %call52, i64 %46, i64 %47, %struct.gimple_stmt_iterator* nonnull %orig_gsi272, %struct.gimple_stmt_iterator* %gsi, i32* nonnull %refreshed, %union.tree_node* %lhs.4) #7, !dbg !4062
  %48 = load i32, i32* %refreshed, align 4, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %48, metadata !3873, metadata !DIExpression()), !dbg !4056
  %cmp291 = icmp eq i32 %48, 1, !dbg !4065
  br i1 %cmp291, label %cleanup, label %if.then293, !dbg !4066

if.then293:                                       ; preds = %if.end287
  %49 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4067
  %call294 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4070
  %cmp295 = icmp eq %union.gimple_statement_d* %49, %call294, !dbg !4071
  br i1 %cmp295, label %if.then297, label %if.end298, !dbg !4072

if.then297:                                       ; preds = %if.then293
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %gsi) #7, !dbg !4073
  br label %if.end298, !dbg !4073

if.end298:                                        ; preds = %if.then297, %if.then293
  %50 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4074
  call void @unlink_stmt_vdef(%union.gimple_statement_d* %50) #6, !dbg !4075
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %orig_gsi272, metadata !3868, metadata !DIExpression(DW_OP_deref)), !dbg !4056
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %orig_gsi272, i8 zeroext 1) #6, !dbg !4076
  %51 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 4), align 4, !dbg !4077
  %inc299 = add nsw i32 %51, 1, !dbg !4077
  store i32 %inc299, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 4), align 4, !dbg !4077
  br label %cleanup, !dbg !4078

cleanup:                                          ; preds = %if.end287, %if.end298
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end298 ], [ true, %if.end287 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #8, !dbg !4079
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8, !dbg !4079
  br i1 %cleanup.dest.slot.0, label %if.end339, label %cleanup359

if.else302:                                       ; preds = %land.lhs.true267, %if.else263
  %call303 = call fastcc zeroext i8 @access_has_children_p(%struct.access* %call52) #7, !dbg !4080
  %tobool304 = icmp eq i8 %call303, 0, !dbg !4080
  br i1 %tobool304, label %if.else330, label %if.then305, !dbg !4083

if.then305:                                       ; preds = %if.else302
  %grp_unscalarized_data = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 14, !dbg !4084
  %bf.load306 = load i16, i16* %grp_unscalarized_data, align 8, !dbg !4084
  %bf.clear308 = and i16 %bf.load306, 256, !dbg !4084
  %tobool310 = icmp eq i16 %bf.clear308, 0, !dbg !4087
  br i1 %tobool310, label %land.lhs.true311, label %if.else326, !dbg !4088

land.lhs.true311:                                 ; preds = %if.then305
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4089
  %bf.load313 = load i64, i64* %52, align 8, !dbg !4089
  %bf.cast31512 = and i64 %bf.load313, 65535, !dbg !4090
  %cmp316 = icmp eq i64 %bf.cast31512, 141, !dbg !4090
  br i1 %cmp316, label %if.else326, label %if.then318, !dbg !4091

if.then318:                                       ; preds = %land.lhs.true311
  %first_child319 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 8, !dbg !4092
  %53 = load %struct.access*, %struct.access** %first_child319, align 8, !dbg !4092
  %offset320 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 0, !dbg !4094
  %54 = load i64, i64* %offset320, align 8, !dbg !4094
  call fastcc void @generate_subtree_copies(%struct.access* %53, %union.tree_node* %lhs.4, i64 %54, i64 0, i64 0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 0, i8 zeroext 0) #7, !dbg !4095
  %55 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4096
  %call321 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4096
  %cmp322 = icmp eq %union.gimple_statement_d* %55, %call321, !dbg !4096
  br i1 %cmp322, label %cond.end, label %cond.true, !dbg !4096

cond.true:                                        ; preds = %if.then318
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 2718, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4096
  br label %cond.end, !dbg !4096

cond.end:                                         ; preds = %if.then318, %cond.true
  %56 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4097
  call void @unlink_stmt_vdef(%union.gimple_statement_d* %56) #6, !dbg !4098
  call void @gsi_remove(%struct.gimple_stmt_iterator* %gsi, i8 zeroext 1) #6, !dbg !4099
  %57 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 4), align 4, !dbg !4100
  %inc325 = add nsw i32 %57, 1, !dbg !4100
  store i32 %inc325, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 4), align 4, !dbg !4100
  br label %cleanup359, !dbg !4101

if.else326:                                       ; preds = %land.lhs.true311, %if.then305
  %first_child327 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 8, !dbg !4102
  %58 = load %struct.access*, %struct.access** %first_child327, align 8, !dbg !4102
  %offset328 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 0, !dbg !4103
  %59 = load i64, i64* %offset328, align 8, !dbg !4103
  call fastcc void @generate_subtree_copies(%struct.access* %58, %union.tree_node* %lhs.4, i64 %59, i64 0, i64 0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 0, i8 zeroext 1) #7, !dbg !4104
  br label %if.end339, !dbg !4105

if.else330:                                       ; preds = %if.else302
  %call331 = call fastcc zeroext i8 @access_has_children_p(%struct.access* %call51) #7, !dbg !4106
  %tobool332 = icmp eq i8 %call331, 0, !dbg !4106
  br i1 %tobool332, label %if.end339, label %if.then333, !dbg !4108

if.then333:                                       ; preds = %if.else330
  %first_child334 = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 8, !dbg !4109
  %60 = load %struct.access*, %struct.access** %first_child334, align 8, !dbg !4109
  %offset335 = getelementptr inbounds %struct.access, %struct.access* %call51, i64 0, i32 0, !dbg !4110
  %61 = load i64, i64* %offset335, align 8, !dbg !4110
  call fastcc void @generate_subtree_copies(%struct.access* %60, %union.tree_node* %rhs.6, i64 %61, i64 0, i64 0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 1, i8 zeroext 1) #7, !dbg !4111
  br label %if.end339, !dbg !4111

if.end339:                                        ; preds = %if.else330, %cleanup, %if.then333, %if.else326, %if.end261
  %tobool340 = icmp eq i8 %force_gimple_rhs.7, 0, !dbg !4112
  br i1 %tobool340, label %if.end343, label %if.then341, !dbg !4114

if.then341:                                       ; preds = %if.end339
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %orig_gsi, metadata !3857, metadata !DIExpression(DW_OP_deref)), !dbg !3874
  %call342 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %orig_gsi, %union.tree_node* %rhs.6, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !4115
  call void @llvm.dbg.value(metadata %union.tree_node* %call342, metadata !3853, metadata !DIExpression()), !dbg !3874
  br label %if.end343, !dbg !4116

if.end343:                                        ; preds = %if.end339, %if.then341
  %rhs.7 = phi %union.tree_node* [ %call342, %if.then341 ], [ %rhs.6, %if.end339 ], !dbg !3874
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.7, metadata !3853, metadata !DIExpression()), !dbg !3874
  %62 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4117
  %call344 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %62) #7, !dbg !4119
  %cmp345 = icmp eq %union.tree_node* %call344, %rhs.7, !dbg !4120
  br i1 %cmp345, label %if.end355, label %if.then347, !dbg !4121

if.then347:                                       ; preds = %if.end343
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %orig_gsi, metadata !3857, metadata !DIExpression(DW_OP_deref)), !dbg !3874
  call void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator* nonnull %orig_gsi, %union.tree_node* %rhs.7) #6, !dbg !4122
  %63 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4124
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %orig_gsi, metadata !3857, metadata !DIExpression(DW_OP_deref)), !dbg !3874
  %call348 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %orig_gsi) #7, !dbg !4124
  %cmp349 = icmp eq %union.gimple_statement_d* %63, %call348, !dbg !4124
  br i1 %cmp349, label %if.end355, label %cond.true351, !dbg !4124

cond.true351:                                     ; preds = %if.then347
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 2742, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4124
  br label %if.end355, !dbg !4124

if.end355:                                        ; preds = %if.end343, %cond.true351, %if.then347
  %tobool357 = icmp ne i8 %modify_this_stmt.1, 0, !dbg !4125
  %cond358 = zext i1 %tobool357 to i32, !dbg !4125
  br label %cleanup359, !dbg !4126

cleanup359:                                       ; preds = %entry, %if.end50, %cleanup, %if.end355, %cond.end, %if.then41, %if.then4
  %retval.1 = phi i32 [ %call5, %if.then4 ], [ %cond, %if.then41 ], [ %cond358, %if.end355 ], [ 2, %cleanup ], [ 2, %cond.end ], [ 0, %entry ], [ 0, %if.end50 ], !dbg !3874
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4127
  ret i32 %retval.1, !dbg !4127
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_parameter_reductions() unnamed_addr #5 !dbg !4128 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4138
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4131, metadata !DIExpression()), !dbg !4139
  %1 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !4140
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %1, i64 0, i32 2, !dbg !4140
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4141
  br label %for.cond, !dbg !4144

for.cond:                                         ; preds = %cleanup, %entry
  %parm.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %cleanup ]
  %seq.0 = phi %struct.gimple_seq_d* [ null, %entry ], [ %seq.2, %cleanup ], !dbg !4145
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !4146
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.0, metadata !4131, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !4132, metadata !DIExpression()), !dbg !4139
  %tobool = icmp eq %union.tree_node* %parm.0, null, !dbg !4147
  br i1 %tobool, label %for.end17, label %for.body, !dbg !4147

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !4148
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4150
  %4 = load i32, i32* %uid, align 4, !dbg !4150
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %3, i32 %4) #6, !dbg !4151
  %tobool1 = icmp eq i32 %call, 0, !dbg !4151
  br i1 %tobool1, label %cleanup, label %if.end, !dbg !4152

if.end:                                           ; preds = %for.body
  %call2 = call fastcc %struct.VEC_access_p_heap* @get_base_access_vector(%union.tree_node* nonnull %parm.0) #7, !dbg !4153
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %call2, metadata !4133, metadata !DIExpression()), !dbg !4154
  %tobool3 = icmp eq %struct.VEC_access_p_heap* %call2, null, !dbg !4155
  br i1 %tobool3, label %cleanup, label %if.end5, !dbg !4157

if.end5:                                          ; preds = %if.end
  %tobool6 = icmp eq %struct.gimple_seq_d* %seq.0, null, !dbg !4158
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !4159

if.then7:                                         ; preds = %if.end5
  %call8 = call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !4160
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call8, metadata !4131, metadata !DIExpression()), !dbg !4139
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4161
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %call8) #7, !dbg !4161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4161
  br label %if.end9, !dbg !4162

if.end9:                                          ; preds = %if.end5, %if.then7
  %seq.1 = phi %struct.gimple_seq_d* [ %seq.0, %if.end5 ], [ %call8, %if.then7 ], !dbg !4139
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.1, metadata !4131, metadata !DIExpression()), !dbg !4139
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %call2, i64 0, i32 0, !dbg !4163
  %call11 = call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* nonnull %base, i32 0) #7, !dbg !4163
  call void @llvm.dbg.value(metadata %struct.access* %call11, metadata !4137, metadata !DIExpression()), !dbg !4154
  br label %for.cond12, !dbg !4165

for.cond12:                                       ; preds = %for.body14, %if.end9
  %access.0 = phi %struct.access* [ %call11, %if.end9 ], [ %5, %for.body14 ], !dbg !4166
  call void @llvm.dbg.value(metadata %struct.access* %access.0, metadata !4137, metadata !DIExpression()), !dbg !4154
  %tobool13 = icmp eq %struct.access* %access.0, null, !dbg !4167
  br i1 %tobool13, label %cleanup.loopexit, label %for.body14, !dbg !4167

for.body14:                                       ; preds = %for.cond12
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4130, metadata !DIExpression(DW_OP_deref)), !dbg !4139
  call fastcc void @generate_subtree_copies(%struct.access* nonnull %access.0, %union.tree_node* nonnull %parm.0, i64 0, i64 0, i64 0, %struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1, i8 zeroext 1) #7, !dbg !4168
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %access.0, i64 0, i32 6, !dbg !4170
  %5 = load %struct.access*, %struct.access** %next_grp, align 8, !dbg !4170
  call void @llvm.dbg.value(metadata %struct.access* %5, metadata !4137, metadata !DIExpression()), !dbg !4154
  br label %for.cond12, !dbg !4171, !llvm.loop !4172

cleanup.loopexit:                                 ; preds = %for.cond12
  br label %cleanup, !dbg !4174

cleanup:                                          ; preds = %cleanup.loopexit, %if.end, %for.body
  %seq.2 = phi %struct.gimple_seq_d* [ %seq.0, %for.body ], [ %seq.0, %if.end ], [ %seq.1, %cleanup.loopexit ], !dbg !4145
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.2, metadata !4131, metadata !DIExpression()), !dbg !4139
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4174
  br label %for.cond, !dbg !4175, !llvm.loop !4176

for.end17:                                        ; preds = %for.cond
  %seq.0.lcssa = phi %struct.gimple_seq_d* [ %seq.0, %for.cond ], !dbg !4145
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.0.lcssa, metadata !4131, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.0.lcssa, metadata !4131, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.0.lcssa, metadata !4131, metadata !DIExpression()), !dbg !4139
  %tobool18 = icmp eq %struct.gimple_seq_d* %seq.0.lcssa, null, !dbg !4178
  br i1 %tobool18, label %if.end22, label %if.then19, !dbg !4180

if.then19:                                        ; preds = %for.end17
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4181
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !4181
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4181
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 0, !dbg !4181
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4181
  %call20 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %8) #7, !dbg !4182
  %call21 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call20, %struct.gimple_seq_d* nonnull %seq.0.lcssa) #6, !dbg !4183
  br label %if.end22, !dbg !4183

if.end22:                                         ; preds = %for.end17, %if.then19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4184
  ret void, !dbg !4184
}

declare dso_local void @statistics_counter_event(%struct.function*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @sra_deinitialize() unnamed_addr #5 !dbg !4185 {
entry:
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !4186
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %0) #6, !dbg !4186
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !4186
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @should_scalarize_away_bitmap, align 8, !dbg !4187
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !4187
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @should_scalarize_away_bitmap, align 8, !dbg !4187
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cannot_scalarize_away_bitmap, align 8, !dbg !4188
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !4188
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @cannot_scalarize_away_bitmap, align 8, !dbg !4188
  %3 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @access_pool, align 8, !dbg !4189
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %3) #6, !dbg !4190
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @link_pool, align 8, !dbg !4191
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %4) #6, !dbg !4192
  %5 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 1) to i64*), align 8, !dbg !4193
  %sub.ptr.sub = sub i64 0, %5, !dbg !4193
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !4193
  %cmp = icmp sgt i64 %sub.ptr.sub, 0, !dbg !4193
  %6 = inttoptr i64 %5 to i8*, !dbg !4193
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !4193

land.lhs.true:                                    ; preds = %entry
  %7 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4) to i64*), align 8, !dbg !4193
  %sub.ptr.sub2 = sub i64 %7, %5, !dbg !4193
  %cmp3 = icmp sgt i64 %sub.ptr.sub2, %sub.ptr.sub, !dbg !4193
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !4193

cond.true:                                        ; preds = %land.lhs.true
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %sub.ptr.sub, !dbg !4193
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 2), align 8, !dbg !4193
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !4193
  br label %cond.end, !dbg !4193

cond.false:                                       ; preds = %land.lhs.true, %entry
  %add.ptr4 = getelementptr inbounds i8, i8* %6, i64 %sub.ptr.sub, !dbg !4193
  tail call void @obstack_free(%struct.obstack* nonnull @name_obstack, i8* %add.ptr4) #6, !dbg !4193
  br label %cond.end, !dbg !4193

cond.end:                                         ; preds = %cond.false, %cond.true
  %8 = load %struct.pointer_map_t*, %struct.pointer_map_t** @base_access_vec, align 8, !dbg !4194
  tail call void @pointer_map_traverse(%struct.pointer_map_t* %8, i8 (i8*, i8**, i8*)* nonnull @delete_base_accesses, i8* null) #6, !dbg !4195
  %9 = load %struct.pointer_map_t*, %struct.pointer_map_t** @base_access_vec, align 8, !dbg !4196
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %9) #6, !dbg !4197
  ret void, !dbg !4198
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) #2

declare dso_local void @free(i8*) #2

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !4199 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !4205, metadata !DIExpression()), !dbg !4206
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !4207
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4208
  %call = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %0) #7, !dbg !4209
  %call1 = tail call fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %call) #7, !dbg !4210
  %1 = bitcast i8* %call1 to %union.tree_node*, !dbg !4211
  ret %union.tree_node* %1, !dbg !4212
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !4213 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !4219, metadata !DIExpression()), !dbg !4220
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !4221
  %call = tail call fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) #7, !dbg !4222
  ret i8 %call, !dbg !4223
}

declare dso_local zeroext i8 @needs_to_live_in_memory(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @type_internals_preclude_sra_p(%union.tree_node* %type) unnamed_addr #5 !dbg !4224 {
entry:
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4237
  %bf.load.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4238
  br label %tailrecurse, !dbg !4239

tailrecurse:                                      ; preds = %if.then84, %entry
  %bf.load = phi i64 [ %bf.load.pre, %entry ], [ %bf.load58, %if.then84 ], !dbg !4238
  %type.tr = phi %union.tree_node* [ %type, %entry ], [ %9, %if.then84 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr, metadata !4228, metadata !DIExpression()), !dbg !4237
  %0 = trunc i64 %bf.load to i16, !dbg !4238
  switch i16 %0, label %cleanup86.loopexit11 [
    i16 16, label %sw.bb
    i16 17, label %sw.bb
    i16 18, label %sw.bb
    i16 15, label %sw.bb54
  ], !dbg !4241

sw.bb:                                            ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %type.tr.lcssa16 = phi %union.tree_node* [ %type.tr, %tailrecurse ], [ %type.tr, %tailrecurse ], [ %type.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa16, metadata !4228, metadata !DIExpression()), !dbg !4237
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr.lcssa16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4242
  %1 = bitcast i32* %values to %union.tree_node**, !dbg !4242
  br label %for.cond, !dbg !4243

for.cond:                                         ; preds = %for.inc, %sw.bb
  %fld.0.in = phi %union.tree_node** [ %1, %sw.bb ], [ %chain, %for.inc ]
  %fld.0 = load %union.tree_node*, %union.tree_node** %fld.0.in, align 8, !dbg !4244
  call void @llvm.dbg.value(metadata %union.tree_node* %fld.0, metadata !4229, metadata !DIExpression()), !dbg !4237
  %tobool = icmp eq %union.tree_node* %fld.0, null, !dbg !4245
  br i1 %tobool, label %cleanup86.loopexit, label %for.body, !dbg !4245

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4246
  %bf.load3 = load i64, i64* %2, align 8, !dbg !4246
  %bf.cast55 = and i64 %bf.load3, 65535, !dbg !4247
  %cmp = icmp eq i64 %bf.cast55, 31, !dbg !4247
  br i1 %cmp, label %if.then, label %for.inc, !dbg !4248

if.then:                                          ; preds = %for.body
  %type6 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4249
  %3 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !4249
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4231, metadata !DIExpression()), !dbg !4250
  %bf.cast106 = and i64 %bf.load3, 524288, !dbg !4251
  %tobool11 = icmp eq i64 %bf.cast106, 0, !dbg !4251
  br i1 %tobool11, label %lor.lhs.false, label %cleanup, !dbg !4253

lor.lhs.false:                                    ; preds = %if.then
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4254
  %4 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !4254
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4254
  %tobool12 = icmp eq %union.tree_node* %5, null, !dbg !4254
  br i1 %tobool12, label %cleanup, label %lor.lhs.false13, !dbg !4255

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4256
  %6 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4256
  %tobool14 = icmp eq %union.tree_node* %6, null, !dbg !4256
  br i1 %tobool14, label %cleanup, label %lor.lhs.false15, !dbg !4257

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %5, i32 1) #6, !dbg !4258
  %tobool18 = icmp eq i32 %call, 0, !dbg !4258
  br i1 %tobool18, label %cleanup, label %lor.lhs.false19, !dbg !4259

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %7 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4260
  %call22 = tail call i32 @host_integerp(%union.tree_node* %7, i32 1) #6, !dbg !4261
  %tobool23 = icmp eq i32 %call22, 0, !dbg !4261
  br i1 %tobool23, label %cleanup, label %if.end, !dbg !4262

if.end:                                           ; preds = %lor.lhs.false19
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4263
  %bf.load26 = load i64, i64* %8, align 8, !dbg !4263
  %bf.cast287 = and i64 %bf.load26, 65535, !dbg !4263
  %cmp29 = icmp eq i64 %bf.cast287, 15, !dbg !4263
  br i1 %cmp29, label %land.lhs.true, label %lor.lhs.false30, !dbg !4263

lor.lhs.false30:                                  ; preds = %if.end
  %cmp35 = icmp eq i64 %bf.cast287, 16, !dbg !4263
  br i1 %cmp35, label %land.lhs.true, label %lor.lhs.false36, !dbg !4263

lor.lhs.false36:                                  ; preds = %lor.lhs.false30
  %cmp41 = icmp eq i64 %bf.cast287, 17, !dbg !4263
  br i1 %cmp41, label %land.lhs.true, label %lor.lhs.false42, !dbg !4263

lor.lhs.false42:                                  ; preds = %lor.lhs.false36
  %cmp47 = icmp eq i64 %bf.cast287, 18, !dbg !4263
  br i1 %cmp47, label %land.lhs.true, label %if.end51, !dbg !4265

land.lhs.true:                                    ; preds = %lor.lhs.false42, %lor.lhs.false36, %lor.lhs.false30, %if.end
  %call48 = tail call fastcc zeroext i8 @type_internals_preclude_sra_p(%union.tree_node* %3) #7, !dbg !4266
  %tobool49 = icmp eq i8 %call48, 0, !dbg !4266
  br i1 %tobool49, label %if.end51, label %cleanup, !dbg !4267

if.end51:                                         ; preds = %land.lhs.true, %lor.lhs.false42
  br label %cleanup, !dbg !4268

cleanup:                                          ; preds = %land.lhs.true, %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false, %if.then, %if.end51
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end51 ], [ false, %lor.lhs.false19 ], [ false, %lor.lhs.false15 ], [ false, %lor.lhs.false13 ], [ false, %lor.lhs.false ], [ false, %if.then ], [ false, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup86.loopexit

for.inc:                                          ; preds = %for.body, %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4269
  br label %for.cond, !dbg !4270, !llvm.loop !4271

sw.bb54:                                          ; preds = %tailrecurse
  %type56 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4273
  %9 = load %union.tree_node*, %union.tree_node** %type56, align 8, !dbg !4273
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4230, metadata !DIExpression()), !dbg !4237
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4274
  %bf.load58 = load i64, i64* %10, align 8, !dbg !4274
  %bf.cast601 = and i64 %bf.load58, 65535, !dbg !4274
  %cmp61 = icmp eq i64 %bf.cast601, 15, !dbg !4274
  br i1 %cmp61, label %if.then84, label %lor.lhs.false63, !dbg !4274

lor.lhs.false63:                                  ; preds = %sw.bb54
  %cmp68 = icmp eq i64 %bf.cast601, 16, !dbg !4274
  br i1 %cmp68, label %if.then84, label %lor.lhs.false70, !dbg !4274

lor.lhs.false70:                                  ; preds = %lor.lhs.false63
  %cmp75 = icmp eq i64 %bf.cast601, 17, !dbg !4274
  br i1 %cmp75, label %if.then84, label %lor.lhs.false77, !dbg !4274

lor.lhs.false77:                                  ; preds = %lor.lhs.false70
  %cmp82 = icmp eq i64 %bf.cast601, 18, !dbg !4274
  br i1 %cmp82, label %if.then84, label %cleanup86.loopexit11, !dbg !4275

if.then84:                                        ; preds = %lor.lhs.false77, %lor.lhs.false70, %lor.lhs.false63, %sw.bb54
  br label %tailrecurse, !dbg !4239

cleanup86.loopexit:                               ; preds = %cleanup, %for.cond
  %retval.3.ph = phi i8 [ 0, %for.cond ], [ 1, %cleanup ]
  br label %cleanup86, !dbg !4276

cleanup86.loopexit11:                             ; preds = %lor.lhs.false77, %tailrecurse
  br label %cleanup86, !dbg !4276

cleanup86:                                        ; preds = %cleanup86.loopexit11, %cleanup86.loopexit
  %retval.3 = phi i8 [ %retval.3.ph, %cleanup86.loopexit ], [ 0, %cleanup86.loopexit11 ], !dbg !4277
  ret i8 %retval.3, !dbg !4276
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_va_list_type(%union.tree_node* %type) unnamed_addr #0 !dbg !4278 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4280, metadata !DIExpression()), !dbg !4281
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4282
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4282
  %2 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 44) to %struct.tree_type**), align 16, !dbg !4283
  %main_variant3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 16, !dbg !4283
  %3 = load %union.tree_node*, %union.tree_node** %main_variant3, align 8, !dbg !4283
  %cmp = icmp eq %union.tree_node* %1, %3, !dbg !4284
  %conv4 = zext i1 %cmp to i8, !dbg !4282
  ret i8 %conv4, !dbg !4285
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !4286 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !4288, metadata !DIExpression()), !dbg !4289
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !4290
  %call = tail call fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) #7, !dbg !4291
  %0 = bitcast i8* %call to %union.tree_node*, !dbg !4292
  ret %union.tree_node* %0, !dbg !4293
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %table) unnamed_addr #0 !dbg !4294 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !4299, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata %struct.htab* %table, metadata !4300, metadata !DIExpression()), !dbg !4303
  %htab = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 0, !dbg !4304
  store %struct.htab* %table, %struct.htab** %htab, align 8, !dbg !4305
  %entries = getelementptr inbounds %struct.htab, %struct.htab* %table, i64 0, i32 3, !dbg !4306
  %0 = bitcast i8*** %entries to i64*, !dbg !4306
  %1 = load i64, i64* %0, align 8, !dbg !4306
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !4307
  %2 = bitcast i8*** %slot to i64*, !dbg !4308
  store i64 %1, i64* %2, align 8, !dbg !4308
  %.cast = inttoptr i64 %1 to i8**, !dbg !4309
  %call = tail call i64 @htab_size(%struct.htab* %table) #6, !dbg !4310
  %add.ptr = getelementptr inbounds i8*, i8** %.cast, i64 %call, !dbg !4311
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !4312
  store i8** %add.ptr, i8*** %limit, align 8, !dbg !4313
  %.pre3 = load i8**, i8*** %slot, align 8, !dbg !4314
  br label %do.body, !dbg !4315

do.body:                                          ; preds = %do.cond, %entry
  %3 = phi i8** [ %incdec.ptr, %do.cond ], [ %.pre3, %entry ]
  %indvars2 = bitcast i8** %3 to i64*, !dbg !4314
  %4 = load i64, i64* %indvars2, align 8, !dbg !4316
  %switch1 = icmp ult i64 %4, 2, !dbg !4317
  br i1 %switch1, label %do.cond, label %do.end

do.cond:                                          ; preds = %do.body
  %incdec.ptr = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !4319
  store i8** %incdec.ptr, i8*** %slot, align 8, !dbg !4319
  %cmp6 = icmp ult i8** %incdec.ptr, %add.ptr, !dbg !4320
  br i1 %cmp6, label %do.body, label %do.end, !dbg !4321, !llvm.loop !4322

do.end:                                           ; preds = %do.body, %do.cond
  %5 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ]
  %6 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ], !dbg !4324
  %cmp9 = icmp ult i8** %6, %add.ptr, !dbg !4326
  br i1 %cmp9, label %if.then10, label %return, !dbg !4327

if.then10:                                        ; preds = %do.end
  %7 = load i8*, i8** %5, align 8, !dbg !4328
  br label %return, !dbg !4329

return:                                           ; preds = %do.end, %if.then10
  %retval.0 = phi i8* [ %7, %if.then10 ], [ null, %do.end ], !dbg !4303
  ret i8* %retval.0, !dbg !4330
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %fun) unnamed_addr #0 !dbg !4331 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !4337, metadata !DIExpression()), !dbg !4338
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !4339
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4339
  %tobool = icmp eq %struct.gimple_df* %0, null, !dbg !4341
  br i1 %tobool, label %return, label %if.end, !dbg !4342

if.end:                                           ; preds = %entry
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 0, !dbg !4343
  %1 = load %struct.htab*, %struct.htab** %referenced_vars, align 8, !dbg !4343
  br label %return, !dbg !4344

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.htab* [ %1, %if.end ], [ null, %entry ], !dbg !4338
  ret %struct.htab* %retval.0, !dbg !4345
}

declare dso_local i64 @htab_size(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !4346 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !4352, metadata !DIExpression()), !dbg !4353
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !4354
  %0 = load i8**, i8*** %slot, align 8, !dbg !4354
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !4356
  %1 = load i8**, i8*** %limit, align 8, !dbg !4356
  %cmp = icmp uge i8** %0, %1, !dbg !4357
  %. = zext i1 %cmp to i8, !dbg !4353
  ret i8 %., !dbg !4358
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !4359 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !4363, metadata !DIExpression()), !dbg !4366
  %slot1 = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !4367
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !4366
  %.pre = load i8**, i8*** %slot1, align 8, !dbg !4368
  %.pre3 = load i8**, i8*** %limit, align 8, !dbg !4369
  br label %while.cond, !dbg !4370

while.cond:                                       ; preds = %while.body, %entry
  %0 = phi i8** [ %.pre, %entry ], [ %incdec.ptr, %while.body ], !dbg !4368
  %retval.0 = phi i8* [ undef, %entry ], [ %spec.select2, %while.body ]
  %incdec.ptr = getelementptr inbounds i8*, i8** %0, i64 1, !dbg !4368
  store i8** %incdec.ptr, i8*** %slot1, align 8, !dbg !4368
  %cmp = icmp ult i8** %incdec.ptr, %.pre3, !dbg !4371
  br i1 %cmp, label %while.body, label %return, !dbg !4370

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %incdec.ptr, align 8, !dbg !4372
  call void @llvm.dbg.value(metadata i8* %1, metadata !4364, metadata !DIExpression()), !dbg !4373
  %switch1 = icmp ult i8* %1, inttoptr (i64 2 to i8*), !dbg !4374
  %spec.select2 = select i1 %switch1, i8* %retval.0, i8* %1, !dbg !4374
  br i1 %switch1, label %while.cond, label %return, !llvm.loop !4376

return:                                           ; preds = %while.cond, %while.body
  %retval.2 = phi i8* [ %spec.select2, %while.body ], [ null, %while.cond ], !dbg !4366
  ret i8* %retval.2, !dbg !4378
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4379 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4383, metadata !DIExpression()), !dbg !4384
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4385
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4385
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4386
  %conv1 = zext i1 %cmp to i8, !dbg !4387
  ret i8 %conv1, !dbg !4388
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4389 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4393, metadata !DIExpression()), !dbg !4394
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4395
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4395
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4396
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4396
  ret %union.gimple_statement_d* %1, !dbg !4397
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4398 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4402, metadata !DIExpression()), !dbg !4403
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4404
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4404
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !4405
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !4405
  %2 = load i64, i64* %1, align 8, !dbg !4405
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4406
  store i64 %2, i64* %3, align 8, !dbg !4406
  ret void, !dbg !4407
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4408 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4412, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4413, metadata !DIExpression()), !dbg !4416
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !4417
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4414, metadata !DIExpression()), !dbg !4415
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !4418
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4419
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4420
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4421
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4422
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4423
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4424
  ret void, !dbg !4425
}

declare dso_local zeroext i8 @stmt_can_throw_external(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4426 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4431, metadata !DIExpression()), !dbg !4432
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4433
  %bf.load = load i32, i32* %0, align 8, !dbg !4433
  %bf.clear = and i32 %bf.load, 255, !dbg !4433
  ret i32 %bf.clear, !dbg !4434
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_return_retval_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4435 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4439, metadata !DIExpression()), !dbg !4440
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4441
  ret %union.tree_node** %call, !dbg !4442
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4443 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4447, metadata !DIExpression()), !dbg !4449
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %call, metadata !4448, metadata !DIExpression()), !dbg !4449
  %sub = add i32 %call, -3, !dbg !4451
  ret i32 %sub, !dbg !4452
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_call_arg_ptr(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4453 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4457, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.value(metadata i32 %index, metadata !4458, metadata !DIExpression()), !dbg !4459
  %add = add i32 %index, 3, !dbg !4460
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !4461
  ret %union.tree_node** %call, !dbg !4462
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4463 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4467, metadata !DIExpression()), !dbg !4469
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !4470
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4468, metadata !DIExpression()), !dbg !4469
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4471
  %bf.load = load i64, i64* %0, align 8, !dbg !4471
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4473
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !4473
  br i1 %cmp, label %if.then, label %cleanup, !dbg !4474

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4475
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4475
  br label %cleanup, !dbg !4476

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !4469
  ret %union.tree_node* %retval.0, !dbg !4477
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %struct.cgraph_node* @cgraph_get_node(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @callsite_has_enough_arguments_p(%union.gimple_statement_d* %call) unnamed_addr #0 !dbg !4478 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !4482, metadata !DIExpression()), !dbg !4483
  %call1 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #7, !dbg !4484
  %0 = load i32, i32* @func_param_count, align 4, !dbg !4485
  %cmp = icmp uge i32 %call1, %0, !dbg !4486
  %conv2 = zext i1 %cmp to i8, !dbg !4484
  ret i8 %conv2, !dbg !4487
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4488 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4490, metadata !DIExpression()), !dbg !4491
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4492
  ret %union.tree_node* %call, !dbg !4493
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_call_lhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4494 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4496, metadata !DIExpression()), !dbg !4497
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4498
  ret %union.tree_node** %call, !dbg !4499
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @disqualify_ops_if_throwing_stmt(%union.gimple_statement_d* %stmt, %union.tree_node* %lhs, %union.tree_node* %rhs) unnamed_addr #5 !dbg !4500 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4504, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !4505, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !4506, metadata !DIExpression()), !dbg !4507
  %0 = load i32, i32* @sra_mode, align 4, !dbg !4508
  %1 = add i32 %0, -1, !dbg !4510
  %2 = icmp ult i32 %1, 2, !dbg !4510
  br i1 %2, label %land.lhs.true, label %return, !dbg !4510

land.lhs.true:                                    ; preds = %entry
  %call = tail call zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d* %stmt) #6, !dbg !4511
  %tobool = icmp eq i8 %call, 0, !dbg !4511
  br i1 %tobool, label %lor.lhs.false2, label %if.then, !dbg !4512

lor.lhs.false2:                                   ; preds = %land.lhs.true
  %call3 = tail call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %stmt) #6, !dbg !4513
  %tobool5 = icmp eq i8 %call3, 0, !dbg !4513
  br i1 %tobool5, label %return, label %if.then, !dbg !4514

if.then:                                          ; preds = %lor.lhs.false2, %land.lhs.true
  tail call fastcc void @disqualify_base_of_expr(%union.tree_node* %lhs, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #7, !dbg !4515
  %tobool6 = icmp eq %union.tree_node* %rhs, null, !dbg !4517
  br i1 %tobool6, label %return, label %if.then7, !dbg !4519

if.then7:                                         ; preds = %if.then
  tail call fastcc void @disqualify_base_of_expr(%union.tree_node* nonnull %rhs, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0)) #7, !dbg !4520
  br label %return, !dbg !4520

return:                                           ; preds = %if.then, %lor.lhs.false2, %entry, %if.then7
  %retval.0 = phi i8 [ 1, %if.then7 ], [ 1, %if.then ], [ 0, %entry ], [ 0, %lor.lhs.false2 ], !dbg !4507
  ret i8 %retval.0, !dbg !4521
}

declare dso_local zeroext i8 @walk_stmt_load_store_addr_ops(%union.gimple_statement_d*, i8*, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)*, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)*, i8 (%union.gimple_statement_d*, %union.tree_node*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @asm_visit_addr(%union.gimple_statement_d* %stmt, %union.tree_node* %op, i8* %data) #5 !dbg !4522 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4526, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !4527, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %data, metadata !4528, metadata !DIExpression()), !dbg !4529
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4530
  %bf.load = load i64, i64* %0, align 8, !dbg !4530
  %bf.cast = and i64 %bf.load, 65535, !dbg !4530
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4530
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4530
  %cmp = icmp eq i32 %1, 3, !dbg !4530
  br i1 %cmp, label %if.then, label %if.end, !dbg !4532

if.then:                                          ; preds = %entry
  tail call fastcc void @disqualify_candidate(%union.tree_node* %op, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20, i64 0, i64 0)) #7, !dbg !4533
  br label %if.end, !dbg !4533

if.end:                                           ; preds = %if.then, %entry
  ret i8 0, !dbg !4534
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4535 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4537, metadata !DIExpression()), !dbg !4538
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !4539
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !4539
  %1 = load i8, i8* %0, align 8, !dbg !4539
  %conv = zext i8 %1 to i32, !dbg !4540
  ret i32 %conv, !dbg !4541
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4542 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4546, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %index, metadata !4547, metadata !DIExpression()), !dbg !4548
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !4549
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !4549
  %1 = load i8, i8* %0, align 8, !dbg !4549
  %conv = zext i8 %1 to i32, !dbg !4549
  %cmp = icmp ult i32 %conv, %index, !dbg !4549
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4549

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32 2622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4549
  br label %cond.end, !dbg !4549

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %index) #7, !dbg !4550
  ret %union.tree_node* %call, !dbg !4551
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4552 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4554, metadata !DIExpression()), !dbg !4555
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !4556
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !4557
  %0 = load i8, i8* %no, align 1, !dbg !4557
  %conv = zext i8 %0 to i32, !dbg !4558
  ret i32 %conv, !dbg !4559
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4560 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4562, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i32 %index, metadata !4563, metadata !DIExpression()), !dbg !4564
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !4565
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !4565
  %0 = load i8, i8* %no, align 1, !dbg !4565
  %conv = zext i8 %0 to i32, !dbg !4565
  %cmp = icmp ult i32 %conv, %index, !dbg !4565
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4565

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32 2655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4565
  br label %cond.end, !dbg !4565

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !4566
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !4566
  %2 = load i8, i8* %1, align 8, !dbg !4566
  %conv3 = zext i8 %2 to i32, !dbg !4567
  %add = add i32 %conv3, %index, !dbg !4568
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !4569
  ret %union.tree_node* %call, !dbg !4570
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !4571 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !4575, metadata !DIExpression()), !dbg !4576
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !4577
  %tobool = icmp eq i8 %call, 0, !dbg !4577
  br i1 %tobool, label %if.end, label %if.then, !dbg !4579

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !4580
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !4582
  br label %if.end, !dbg !4583

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4584
}

declare dso_local zeroext i8 @maybe_clean_eh_stmt(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4585 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4592, metadata !DIExpression()), !dbg !4593
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4594
  %0 = load i32, i32* %flags, align 8, !dbg !4594
  %and = and i32 %0, 512, !dbg !4595
  %tobool = icmp eq i32 %and, 0, !dbg !4595
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !4596

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !4597
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !4597
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !4598
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !4599

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !4600
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !4600
  br label %cond.end, !dbg !4599

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4599
  ret %struct.gimple_seq_d* %cond, !dbg !4601
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4602 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4609, metadata !DIExpression()), !dbg !4610
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4611
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4611

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !4612
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !4612
  br label %cond.end, !dbg !4611

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4611
  ret %struct.gimple_seq_node_d* %cond, !dbg !4613
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4614 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4616, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.value(metadata i32 %i, metadata !4617, metadata !DIExpression()), !dbg !4618
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4619
  %tobool = icmp eq i8 %call, 0, !dbg !4619
  br i1 %tobool, label %return, label %if.then, !dbg !4621

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4622
  %idx.ext = zext i32 %i to i64, !dbg !4624
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idx.ext, !dbg !4624
  br label %return, !dbg !4625

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node** [ %add.ptr, %if.then ], [ null, %entry ], !dbg !4626
  ret %union.tree_node** %retval.0, !dbg !4627
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4628 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4632, metadata !DIExpression()), !dbg !4633
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4634
  %cmp = icmp eq i32 %call, 0, !dbg !4635
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4636

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4637
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4638
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4639
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4640 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4644, metadata !DIExpression()), !dbg !4646
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4647
  %idxprom = zext i32 %call to i64, !dbg !4648
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4648
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4648
  call void @llvm.dbg.value(metadata i64 %0, metadata !4645, metadata !DIExpression()), !dbg !4646
  %cmp = icmp eq i64 %0, 0, !dbg !4649
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4649

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4649
  br label %cond.end, !dbg !4649

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4650
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4651
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4652
  ret %union.tree_node** %2, !dbg !4653
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4654 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4658, metadata !DIExpression()), !dbg !4659
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4660
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4661
  ret i32 %call1, !dbg !4662
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4663 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4667, metadata !DIExpression()), !dbg !4668
  %idxprom = zext i32 %code to i64, !dbg !4669
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4669
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4669
  ret i32 %0, !dbg !4670
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4671 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4673, metadata !DIExpression()), !dbg !4674
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !4675
  %0 = load i32, i32* %num_ops, align 4, !dbg !4675
  ret i32 %0, !dbg !4676
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4677 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4679, metadata !DIExpression()), !dbg !4680
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4681
  ret %union.tree_node* %call, !dbg !4682
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4683 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4685, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i32 %i, metadata !4686, metadata !DIExpression()), !dbg !4687
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4688
  %tobool = icmp eq i8 %call, 0, !dbg !4688
  br i1 %tobool, label %return, label %if.then, !dbg !4690

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4691
  %idxprom = zext i32 %i to i64, !dbg !4691
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4691
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4691
  br label %return, !dbg !4693

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4694
  ret %union.tree_node* %retval.0, !dbg !4695
}

declare dso_local zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @disqualify_base_of_expr(%union.tree_node* %t, i8* %reason) unnamed_addr #5 !dbg !4696 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4700, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i8* %reason, metadata !4701, metadata !DIExpression()), !dbg !4702
  br label %while.cond, !dbg !4703

while.cond:                                       ; preds = %while.body, %entry
  %t.addr.0 = phi %union.tree_node* [ %t, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !4700, metadata !DIExpression()), !dbg !4702
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %t.addr.0) #7, !dbg !4704
  %tobool = icmp eq i8 %call, 0, !dbg !4703
  br i1 %tobool, label %while.end, label %while.body, !dbg !4703

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4705
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4705
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4700, metadata !DIExpression()), !dbg !4702
  br label %while.cond, !dbg !4703, !llvm.loop !4706

while.end:                                        ; preds = %while.cond
  %t.addr.0.lcssa = phi %union.tree_node* [ %t.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4700, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4700, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4700, metadata !DIExpression()), !dbg !4702
  %1 = load i32, i32* @sra_mode, align 4, !dbg !4707
  %cmp = icmp eq i32 %1, 0, !dbg !4709
  br i1 %cmp, label %if.then, label %if.end18, !dbg !4710

if.then:                                          ; preds = %while.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4711
  %bf.load = load i64, i64* %2, align 8, !dbg !4711
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4711
  %cmp1 = icmp eq i64 %bf.cast1, 47, !dbg !4711
  br i1 %cmp1, label %if.then13, label %lor.lhs.false, !dbg !4711

lor.lhs.false:                                    ; preds = %if.then
  %cmp6 = icmp eq i64 %bf.cast1, 48, !dbg !4711
  br i1 %cmp6, label %if.then13, label %lor.lhs.false7, !dbg !4711

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i64 %bf.cast1, 49, !dbg !4711
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !4714

if.then13:                                        ; preds = %lor.lhs.false7, %lor.lhs.false, %if.then
  %operands15 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4715
  %3 = load %union.tree_node*, %union.tree_node** %operands15, align 8, !dbg !4715
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4700, metadata !DIExpression()), !dbg !4702
  br label %if.end, !dbg !4716

if.end:                                           ; preds = %if.then13, %lor.lhs.false7
  %t.addr.1 = phi %union.tree_node* [ %3, %if.then13 ], [ %t.addr.0.lcssa, %lor.lhs.false7 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.1, metadata !4700, metadata !DIExpression()), !dbg !4702
  %call17 = tail call fastcc %union.tree_node* @get_ssa_base_param(%union.tree_node* %t.addr.1) #7, !dbg !4717
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !4700, metadata !DIExpression()), !dbg !4702
  br label %if.end18, !dbg !4718

if.end18:                                         ; preds = %if.end, %while.end
  %t.addr.2 = phi %union.tree_node* [ %call17, %if.end ], [ %t.addr.0.lcssa, %while.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.2, metadata !4700, metadata !DIExpression()), !dbg !4702
  %tobool19 = icmp eq %union.tree_node* %t.addr.2, null, !dbg !4719
  br i1 %tobool19, label %if.end27, label %land.lhs.true, !dbg !4721

land.lhs.true:                                    ; preds = %if.end18
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4722
  %bf.load21 = load i64, i64* %4, align 8, !dbg !4722
  %bf.cast23 = and i64 %bf.load21, 65535, !dbg !4722
  %arrayidx24 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast23, !dbg !4722
  %5 = load i32, i32* %arrayidx24, align 4, !dbg !4722
  %cmp25 = icmp eq i32 %5, 3, !dbg !4722
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !4723

if.then26:                                        ; preds = %land.lhs.true
  tail call fastcc void @disqualify_candidate(%union.tree_node* nonnull %t.addr.2, i8* %reason) #7, !dbg !4724
  br label %if.end27, !dbg !4724

if.end27:                                         ; preds = %if.end18, %if.then26, %land.lhs.true
  ret void, !dbg !4725
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !4726 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4733, metadata !DIExpression()), !dbg !4734
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4735
  %bf.load = load i64, i64* %0, align 8, !dbg !4735
  %1 = trunc i64 %bf.load to i16, !dbg !4735
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !4736

sw.default:                                       ; preds = %entry
  br label %return, !dbg !4737

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !4739
  ret i8 %retval.0, !dbg !4740
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_ssa_base_param(%union.tree_node* %t) unnamed_addr #5 !dbg !4741 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4745, metadata !DIExpression()), !dbg !4746
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4747
  %bf.load = load i64, i64* %0, align 8, !dbg !4747
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4749
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4749
  br i1 %cmp, label %if.then, label %return, !dbg !4750

if.then:                                          ; preds = %entry
  %bf.cast42 = and i64 %bf.load, 4294967296, !dbg !4751
  %tobool = icmp eq i64 %bf.cast42, 0, !dbg !4751
  br i1 %tobool, label %return, label %if.then5, !dbg !4754

if.then5:                                         ; preds = %if.then
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4755
  %1 = bitcast i32* %var to %union.tree_node**, !dbg !4755
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4755
  br label %return, !dbg !4756

return:                                           ; preds = %if.then, %entry, %if.then5
  %retval.0 = phi %union.tree_node* [ %2, %if.then5 ], [ null, %if.then ], [ %t, %entry ], !dbg !4746
  ret %union.tree_node* %retval.0, !dbg !4757
}

; Function Attrs: nounwind uwtable
define internal fastcc void @disqualify_candidate(%union.tree_node* %decl, i8* %reason) unnamed_addr #5 !dbg !4758 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4760, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.value(metadata i8* %reason, metadata !4761, metadata !DIExpression()), !dbg !4762
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !4763
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4764
  %1 = load i32, i32* %uid, align 4, !dbg !4764
  %call = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !4765
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4766
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !4766
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4768

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* @dump_flags, align 4, !dbg !4769
  %and = and i32 %3, 8, !dbg !4770
  %tobool1 = icmp eq i32 %and, 0, !dbg !4770
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4771

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4772
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4774
  tail call void @print_generic_expr(%struct._IO_FILE* %4, %union.tree_node* %decl, i32 0) #6, !dbg !4775
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4776
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8* %reason) #6, !dbg !4777
  br label %if.end, !dbg !4778

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  ret void, !dbg !4779
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @build_access_from_expr_1(%union.tree_node** %expr_ptr, %union.gimple_statement_d* %stmt, i8 zeroext %write) unnamed_addr #5 !dbg !4780 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_ptr, metadata !4784, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4785, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i8 %write, metadata !4786, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata %struct.access* null, metadata !4787, metadata !DIExpression()), !dbg !4790
  %0 = load %union.tree_node*, %union.tree_node** %expr_ptr, align 8, !dbg !4791
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4788, metadata !DIExpression()), !dbg !4790
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4792
  %bf.load = load i64, i64* %1, align 8, !dbg !4792
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4794
  %cmp = icmp eq i64 %bf.cast2, 42, !dbg !4794
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4795

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast2, 44, !dbg !4796
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !4797

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast2, 43, !dbg !4798
  br i1 %cmp11, label %if.then, label %if.end, !dbg !4799

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4800
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4800
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4788, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i8 1, metadata !4789, metadata !DIExpression()), !dbg !4790
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4802
  %bf.load13.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4804
  br label %if.end, !dbg !4805

if.end:                                           ; preds = %lor.lhs.false6, %if.then
  %bf.load13 = phi i64 [ %bf.load13.pre, %if.then ], [ %bf.load, %lor.lhs.false6 ], !dbg !4804
  %expr.0 = phi %union.tree_node* [ %2, %if.then ], [ %0, %lor.lhs.false6 ], !dbg !4790
  %partial_ref.0 = phi i32 [ 1, %if.then ], [ 0, %lor.lhs.false6 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !4788, metadata !DIExpression()), !dbg !4790
  %bf.cast155 = and i64 %bf.load13, 65535, !dbg !4806
  %cmp16 = icmp eq i64 %bf.cast155, 118, !dbg !4806
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !4807

if.then17:                                        ; preds = %if.end
  %operands19 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4808
  %3 = load %union.tree_node*, %union.tree_node** %operands19, align 8, !dbg !4808
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4788, metadata !DIExpression()), !dbg !4790
  br label %if.end21, !dbg !4809

if.end21:                                         ; preds = %if.then17, %if.end
  %expr.1 = phi %union.tree_node* [ %3, %if.then17 ], [ %expr.0, %if.end ], !dbg !4790
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1, metadata !4788, metadata !DIExpression()), !dbg !4790
  %call = tail call fastcc zeroext i8 @contains_view_convert_expr_p(%union.tree_node* %expr.1) #7, !dbg !4810
  %tobool = icmp eq i8 %call, 0, !dbg !4810
  br i1 %tobool, label %if.end23, label %if.then22, !dbg !4812

if.then22:                                        ; preds = %if.end21
  tail call fastcc void @disqualify_base_of_expr(%union.tree_node* %expr.1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0)) #7, !dbg !4813
  br label %cleanup, !dbg !4815

if.end23:                                         ; preds = %if.end21
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4816
  %bf.load25 = load i64, i64* %4, align 8, !dbg !4816
  %5 = trunc i64 %bf.load25 to i16, !dbg !4816
  switch i16 %5, label %sw.epilog [
    i16 47, label %sw.bb
    i16 32, label %sw.bb31
    i16 34, label %sw.bb31
    i16 36, label %sw.bb31
    i16 41, label %sw.bb31
    i16 45, label %sw.bb31
    i16 46, label %sw.bb31
  ], !dbg !4817

sw.bb:                                            ; preds = %if.end23
  %6 = load i32, i32* @sra_mode, align 4, !dbg !4818
  %cmp28 = icmp eq i32 %6, 0, !dbg !4821
  br i1 %cmp28, label %sw.bb31, label %cleanup, !dbg !4822

sw.bb31:                                          ; preds = %sw.bb, %if.end23, %if.end23, %if.end23, %if.end23, %if.end23, %if.end23
  %call32 = tail call fastcc %struct.access* @create_access(%union.tree_node* %expr.1, %union.gimple_statement_d* %stmt, i8 zeroext %write) #7, !dbg !4823
  call void @llvm.dbg.value(metadata %struct.access* %call32, metadata !4787, metadata !DIExpression()), !dbg !4790
  br label %sw.epilog, !dbg !4824

sw.epilog:                                        ; preds = %if.end23, %sw.bb31
  %ret.0 = phi %struct.access* [ %call32, %sw.bb31 ], [ null, %if.end23 ], !dbg !4790
  call void @llvm.dbg.value(metadata %struct.access* %ret.0, metadata !4787, metadata !DIExpression()), !dbg !4790
  %tobool33 = icmp ne i8 %write, 0, !dbg !4825
  %tobool35 = icmp ne i32 %partial_ref.0, 0, !dbg !4827
  %or.cond = and i1 %tobool33, %tobool35, !dbg !4828
  %tobool37 = icmp ne %struct.access* %ret.0, null, !dbg !4829
  %or.cond1 = and i1 %or.cond, %tobool37, !dbg !4828
  br i1 %or.cond1, label %if.then38, label %cleanup, !dbg !4828

if.then38:                                        ; preds = %sw.epilog
  %grp_partial_lhs = getelementptr inbounds %struct.access, %struct.access* %ret.0, i64 0, i32 14, !dbg !4830
  %bf.load39 = load i16, i16* %grp_partial_lhs, align 8, !dbg !4831
  %bf.set = or i16 %bf.load39, 512, !dbg !4831
  store i16 %bf.set, i16* %grp_partial_lhs, align 8, !dbg !4831
  br label %cleanup, !dbg !4832

cleanup:                                          ; preds = %sw.bb, %sw.epilog, %if.then38, %if.then22
  %retval.0 = phi %struct.access* [ null, %if.then22 ], [ null, %sw.bb ], [ %ret.0, %if.then38 ], [ %ret.0, %sw.epilog ], !dbg !4790
  ret %struct.access* %retval.0, !dbg !4833
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @contains_view_convert_expr_p(%union.tree_node* %ref) unnamed_addr #0 !dbg !4834 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !4836, metadata !DIExpression()), !dbg !4837
  br label %while.cond, !dbg !4838

while.cond:                                       ; preds = %if.end, %entry
  %ref.addr.0 = phi %union.tree_node* [ %ref, %entry ], [ %1, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.addr.0, metadata !4836, metadata !DIExpression()), !dbg !4837
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %ref.addr.0) #7, !dbg !4839
  %tobool = icmp eq i8 %call, 0, !dbg !4838
  br i1 %tobool, label %return, label %while.body, !dbg !4838

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4840
  %bf.load = load i64, i64* %0, align 8, !dbg !4840
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4843
  %cmp = icmp eq i64 %bf.cast1, 118, !dbg !4843
  br i1 %cmp, label %return, label %if.end, !dbg !4844

if.end:                                           ; preds = %while.body
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4845
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4845
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4836, metadata !DIExpression()), !dbg !4837
  br label %while.cond, !dbg !4838, !llvm.loop !4846

return:                                           ; preds = %while.cond, %while.body
  %retval.0 = phi i8 [ 1, %while.body ], [ 0, %while.cond ], !dbg !4837
  ret i8 %retval.0, !dbg !4848
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @create_access(%union.tree_node* %expr, %union.gimple_statement_d* %stmt, i8 zeroext %write) unnamed_addr #5 !dbg !4849 {
entry:
  %offset = alloca i64, align 8
  %size = alloca i64, align 8
  %max_size = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4853, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4854, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata i8 %write, metadata !4855, metadata !DIExpression()), !dbg !4863
  %0 = bitcast i64* %offset to i8*, !dbg !4864
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4864
  %1 = bitcast i64* %size to i8*, !dbg !4864
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4864
  %2 = bitcast i64* %max_size to i8*, !dbg !4864
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4864
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4860, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata i8 0, metadata !4862, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata i64* %offset, metadata !4857, metadata !DIExpression(DW_OP_deref)), !dbg !4863
  call void @llvm.dbg.value(metadata i64* %size, metadata !4858, metadata !DIExpression(DW_OP_deref)), !dbg !4863
  call void @llvm.dbg.value(metadata i64* %max_size, metadata !4859, metadata !DIExpression(DW_OP_deref)), !dbg !4863
  %call = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %expr, i64* nonnull %offset, i64* nonnull %size, i64* nonnull %max_size) #6, !dbg !4865
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4860, metadata !DIExpression()), !dbg !4863
  %3 = load i32, i32* @sra_mode, align 4, !dbg !4866
  %cmp = icmp eq i32 %3, 0, !dbg !4868
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !4869

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4870
  %bf.load = load i64, i64* %4, align 8, !dbg !4870
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !4870
  %cmp2 = icmp eq i64 %bf.cast3, 47, !dbg !4870
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !4870

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp7 = icmp eq i64 %bf.cast3, 48, !dbg !4870
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !4870

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp13 = icmp eq i64 %bf.cast3, 49, !dbg !4870
  br i1 %cmp13, label %if.then, label %if.end16, !dbg !4871

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false, %land.lhs.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4872
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4872
  %call14 = call fastcc %union.tree_node* @get_ssa_base_param(%union.tree_node* %5) #7, !dbg !4874
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !4860, metadata !DIExpression()), !dbg !4863
  %tobool = icmp eq %union.tree_node* %call14, null, !dbg !4875
  br i1 %tobool, label %cleanup, label %if.end16, !dbg !4877

if.end16:                                         ; preds = %if.then, %entry, %lor.lhs.false8
  %base.0 = phi %union.tree_node* [ %call14, %if.then ], [ %call, %lor.lhs.false8 ], [ %call, %entry ], !dbg !4863
  %ptr.0 = phi i8 [ 1, %if.then ], [ 0, %lor.lhs.false8 ], [ 0, %entry ], !dbg !4878
  call void @llvm.dbg.value(metadata i8 %ptr.0, metadata !4861, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata %union.tree_node* %base.0, metadata !4860, metadata !DIExpression()), !dbg !4863
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4879
  %bf.load18 = load i64, i64* %6, align 8, !dbg !4879
  %bf.cast20 = and i64 %bf.load18, 65535, !dbg !4879
  %arrayidx21 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast20, !dbg !4879
  %7 = load i32, i32* %arrayidx21, align 4, !dbg !4879
  %cmp22 = icmp eq i32 %7, 3, !dbg !4879
  br i1 %cmp22, label %lor.lhs.false23, label %cleanup, !dbg !4881

lor.lhs.false23:                                  ; preds = %if.end16
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !4882
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4883
  %9 = load i32, i32* %uid, align 4, !dbg !4883
  %call24 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !4884
  %tobool25 = icmp eq i32 %call24, 0, !dbg !4884
  br i1 %tobool25, label %cleanup, label %if.end27, !dbg !4885

if.end27:                                         ; preds = %lor.lhs.false23
  %10 = load i32, i32* @sra_mode, align 4, !dbg !4886
  %cmp28 = icmp eq i32 %10, 0, !dbg !4888
  %11 = load i64, i64* %size, align 8, !dbg !4889
  call void @llvm.dbg.value(metadata i64 %11, metadata !4858, metadata !DIExpression()), !dbg !4863
  br i1 %cmp28, label %if.then29, label %if.else44, !dbg !4890

if.then29:                                        ; preds = %if.end27
  %cmp30 = icmp slt i64 %11, 0, !dbg !4891
  br i1 %cmp30, label %if.then33, label %lor.lhs.false31, !dbg !4894

lor.lhs.false31:                                  ; preds = %if.then29
  call void @llvm.dbg.value(metadata i64 %11, metadata !4858, metadata !DIExpression()), !dbg !4863
  %12 = load i64, i64* %max_size, align 8, !dbg !4895
  call void @llvm.dbg.value(metadata i64 %12, metadata !4859, metadata !DIExpression()), !dbg !4863
  %cmp32 = icmp eq i64 %11, %12, !dbg !4896
  br i1 %cmp32, label %if.end34, label %if.then33, !dbg !4897

if.then33:                                        ; preds = %lor.lhs.false31, %if.then29
  call fastcc void @disqualify_candidate(%union.tree_node* %base.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !4898
  br label %cleanup, !dbg !4900

if.end34:                                         ; preds = %lor.lhs.false31
  %13 = load i64, i64* %offset, align 8, !dbg !4901
  call void @llvm.dbg.value(metadata i64 %13, metadata !4857, metadata !DIExpression()), !dbg !4863
  %rem1 = and i64 %13, 7, !dbg !4903
  %cmp35 = icmp eq i64 %rem1, 0, !dbg !4903
  br i1 %cmp35, label %lor.lhs.false36, label %if.then39, !dbg !4904

lor.lhs.false36:                                  ; preds = %if.end34
  call void @llvm.dbg.value(metadata i64 %11, metadata !4858, metadata !DIExpression()), !dbg !4863
  %rem372 = and i64 %11, 7, !dbg !4905
  %cmp38 = icmp eq i64 %rem372, 0, !dbg !4905
  br i1 %cmp38, label %if.end40, label %if.then39, !dbg !4906

if.then39:                                        ; preds = %lor.lhs.false36, %if.end34
  call fastcc void @disqualify_candidate(%union.tree_node* %base.0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i64 0, i64 0)) #7, !dbg !4907
  br label %cleanup, !dbg !4909

if.end40:                                         ; preds = %lor.lhs.false36
  %tobool41 = icmp eq i8 %ptr.0, 0, !dbg !4910
  br i1 %tobool41, label %if.end51, label %if.then42, !dbg !4912

if.then42:                                        ; preds = %if.end40
  call void @llvm.dbg.value(metadata i64 %13, metadata !4857, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata i64 %11, metadata !4858, metadata !DIExpression()), !dbg !4863
  %add = add nsw i64 %13, %11, !dbg !4913
  call fastcc void @mark_parm_dereference(%union.tree_node* %base.0, i64 %add, %union.gimple_statement_d* %stmt) #7, !dbg !4914
  %.pre = load i64, i64* %size, align 8, !dbg !4915
  br label %if.end51, !dbg !4914

if.else44:                                        ; preds = %if.end27
  %14 = load i64, i64* %max_size, align 8, !dbg !4916
  call void @llvm.dbg.value(metadata i64 %14, metadata !4859, metadata !DIExpression()), !dbg !4863
  %cmp45 = icmp eq i64 %11, %14, !dbg !4919
  br i1 %cmp45, label %if.end47, label %if.then46, !dbg !4920

if.then46:                                        ; preds = %if.else44
  call void @llvm.dbg.value(metadata i64 %14, metadata !4859, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata i64 %14, metadata !4858, metadata !DIExpression()), !dbg !4863
  store i64 %14, i64* %size, align 8, !dbg !4921
  call void @llvm.dbg.value(metadata i8 1, metadata !4862, metadata !DIExpression()), !dbg !4863
  br label %if.end47, !dbg !4923

if.end47:                                         ; preds = %if.else44, %if.then46
  %15 = phi i64 [ %14, %if.then46 ], [ %11, %if.else44 ], !dbg !4924
  %unscalarizable_region.0 = phi i16 [ 128, %if.then46 ], [ 0, %if.else44 ], !dbg !4863
  call void @llvm.dbg.value(metadata i64 %15, metadata !4858, metadata !DIExpression()), !dbg !4863
  %cmp48 = icmp slt i64 %15, 0, !dbg !4926
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !4927

if.then49:                                        ; preds = %if.end47
  call fastcc void @disqualify_candidate(%union.tree_node* %base.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.24, i64 0, i64 0)) #7, !dbg !4928
  br label %cleanup, !dbg !4930

if.end51:                                         ; preds = %if.end40, %if.end47, %if.then42
  %16 = phi i64 [ %.pre, %if.then42 ], [ %11, %if.end40 ], [ %15, %if.end47 ], !dbg !4915
  %unscalarizable_region.1 = phi i16 [ 0, %if.then42 ], [ 0, %if.end40 ], [ %unscalarizable_region.0, %if.end47 ], !dbg !4863
  %17 = load i64, i64* %offset, align 8, !dbg !4931
  call void @llvm.dbg.value(metadata i64 %17, metadata !4857, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata i64 %16, metadata !4858, metadata !DIExpression()), !dbg !4863
  %call52 = call fastcc %struct.access* @create_access_1(%union.tree_node* %base.0, i64 %17, i64 %16) #7, !dbg !4932
  call void @llvm.dbg.value(metadata %struct.access* %call52, metadata !4856, metadata !DIExpression()), !dbg !4863
  %expr53 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 3, !dbg !4933
  store %union.tree_node* %expr, %union.tree_node** %expr53, align 8, !dbg !4934
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4935
  %18 = bitcast %union.tree_node** %type to i64*, !dbg !4935
  %19 = load i64, i64* %18, align 8, !dbg !4935
  %type54 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 4, !dbg !4936
  %20 = bitcast %union.tree_node** %type54 to i64*, !dbg !4937
  store i64 %19, i64* %20, align 8, !dbg !4937
  %write55 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 14, !dbg !4938
  %bf.load56 = load i16, i16* %write55, align 8, !dbg !4939
  %21 = and i8 %write, 1, !dbg !4939
  %bf.value = zext i8 %21 to i16, !dbg !4939
  %bf.clear57 = and i16 %bf.load56, -130, !dbg !4939
  %bf.set = or i16 %bf.clear57, %bf.value, !dbg !4939
  %bf.shl = and i16 %unscalarizable_region.1, 128, !dbg !4940
  %bf.set62 = or i16 %bf.set, %bf.shl, !dbg !4940
  store i16 %bf.set62, i16* %write55, align 8, !dbg !4940
  %stmt64 = getelementptr inbounds %struct.access, %struct.access* %call52, i64 0, i32 5, !dbg !4941
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt64, align 8, !dbg !4942
  br label %cleanup, !dbg !4943

cleanup:                                          ; preds = %if.then, %lor.lhs.false23, %if.end16, %if.end51, %if.then49, %if.then39, %if.then33
  %retval.0 = phi %struct.access* [ null, %if.then33 ], [ null, %if.then39 ], [ %call52, %if.end51 ], [ null, %if.then49 ], [ null, %if.then ], [ null, %lor.lhs.false23 ], [ null, %if.end16 ], !dbg !4863
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4944
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4944
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4944
  ret %struct.access* %retval.0, !dbg !4944
}

declare dso_local %union.tree_node* @get_ref_base_and_extent(%union.tree_node*, i64*, i64*, i64*) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_parm_dereference(%union.tree_node* %base, i64 %dist, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !4945 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !4949, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i64 %dist, metadata !4950, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4951, metadata !DIExpression()), !dbg !4956
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !4957
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4952, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i32 0, metadata !4954, metadata !DIExpression()), !dbg !4956
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !4958
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !4960
  %1 = load i32, i32* %index, align 8, !dbg !4960
  %call1 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !4961
  %tobool = icmp eq i32 %call1, 0, !dbg !4961
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !4962

if.end:                                           ; preds = %entry
  %2 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !4963
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %2, i64 0, i32 2, !dbg !4963
  br label %for.cond, !dbg !4965

for.cond:                                         ; preds = %for.body, %if.end
  %parm_index.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !4956
  %parm.0.in = phi %union.tree_node** [ %arguments, %if.end ], [ %chain, %for.body ]
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !4966
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !4955, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i32 %parm_index.0, metadata !4954, metadata !DIExpression()), !dbg !4956
  %tobool2 = icmp ne %union.tree_node* %parm.0, null, !dbg !4967
  %cmp = icmp ne %union.tree_node* %parm.0, %base, !dbg !4969
  %spec.select = and i1 %cmp, %tobool2, !dbg !4970
  br i1 %spec.select, label %for.body, label %for.end, !dbg !4971

for.body:                                         ; preds = %for.cond
  %inc = add nuw nsw i32 %parm_index.0, 1, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4954, metadata !DIExpression()), !dbg !4956
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4973
  br label %for.cond, !dbg !4974, !llvm.loop !4975

for.end:                                          ; preds = %for.cond
  %parm_index.0.lcssa = phi i32 [ %parm_index.0, %for.cond ], !dbg !4956
  call void @llvm.dbg.value(metadata i32 %parm_index.0.lcssa, metadata !4954, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i32 %parm_index.0.lcssa, metadata !4954, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i32 %parm_index.0.lcssa, metadata !4954, metadata !DIExpression()), !dbg !4956
  %3 = load i32, i32* @func_param_count, align 4, !dbg !4977
  %cmp3 = icmp slt i32 %parm_index.0.lcssa, %3, !dbg !4977
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !4977

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 698, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4977
  %.pre = load i32, i32* @func_param_count, align 4, !dbg !4978
  br label %cond.end, !dbg !4977

cond.end:                                         ; preds = %for.end, %cond.true
  %4 = phi i32 [ %3, %for.end ], [ %.pre, %cond.true ], !dbg !4978
  %5 = load i32, i32* %index, align 8, !dbg !4979
  %mul = mul nsw i32 %5, %4, !dbg !4980
  %add = add nsw i32 %mul, %parm_index.0.lcssa, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %add, metadata !4953, metadata !DIExpression()), !dbg !4956
  %6 = load i64*, i64** @bb_dereferences, align 8, !dbg !4982
  %idxprom = sext i32 %add to i64, !dbg !4982
  %arrayidx = getelementptr inbounds i64, i64* %6, i64 %idxprom, !dbg !4982
  %7 = load i64, i64* %arrayidx, align 8, !dbg !4982
  %cmp5 = icmp slt i64 %7, %dist, !dbg !4984
  br i1 %cmp5, label %if.then6, label %cleanup.cont, !dbg !4985

if.then6:                                         ; preds = %cond.end
  store i64 %dist, i64* %arrayidx, align 8, !dbg !4986
  br label %cleanup.cont, !dbg !4987

cleanup.cont:                                     ; preds = %entry, %if.then6, %cond.end
  ret void, !dbg !4988
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @create_access_1(%union.tree_node* %base, i64 %offset, i64 %size) unnamed_addr #5 !dbg !4989 {
entry:
  %vec = alloca %struct.VEC_access_p_heap*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !4993, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.value(metadata i64 %offset, metadata !4994, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.value(metadata i64 %size, metadata !4995, metadata !DIExpression()), !dbg !4999
  %0 = bitcast %struct.VEC_access_p_heap** %vec to i8*, !dbg !5000
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5000
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @access_pool, align 8, !dbg !5001
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %1) #6, !dbg !5002
  %2 = bitcast i8* %call to %struct.access*, !dbg !5003
  call void @llvm.dbg.value(metadata %struct.access* %2, metadata !4997, metadata !DIExpression()), !dbg !4999
  %call1 = tail call i8* @memset(i8* %call, i32 0, i64 120) #6, !dbg !5004
  %base2 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !5005
  %3 = bitcast i8* %base2 to %union.tree_node**, !dbg !5005
  store %union.tree_node* %base, %union.tree_node** %3, align 8, !dbg !5006
  %offset3 = bitcast i8* %call to i64*, !dbg !5007
  store i64 %offset, i64* %offset3, align 8, !dbg !5008
  %size4 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5009
  %4 = bitcast i8* %size4 to i64*, !dbg !5009
  store i64 %size, i64* %4, align 8, !dbg !5010
  %5 = load %struct.pointer_map_t*, %struct.pointer_map_t** @base_access_vec, align 8, !dbg !5011
  %6 = bitcast %union.tree_node* %base to i8*, !dbg !5012
  %call5 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %5, i8* %6) #6, !dbg !5013
  call void @llvm.dbg.value(metadata i8** %call5, metadata !4998, metadata !DIExpression()), !dbg !4999
  %tobool = icmp eq i8** %call5, null, !dbg !5014
  br i1 %tobool, label %if.else, label %if.then, !dbg !5016

if.then:                                          ; preds = %entry
  %7 = bitcast i8** %call5 to %struct.VEC_access_p_heap**, !dbg !5017
  %8 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %7, align 8, !dbg !5017
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %8, metadata !4996, metadata !DIExpression()), !dbg !4999
  br label %if.end, !dbg !5018

if.else:                                          ; preds = %entry
  %call6 = tail call fastcc %struct.VEC_access_p_heap* @VEC_access_p_heap_alloc(i32 32) #7, !dbg !5019
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %call6, metadata !4996, metadata !DIExpression()), !dbg !4999
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.VEC_access_p_heap* [ %call6, %if.else ], [ %8, %if.then ], !dbg !5020
  store %struct.VEC_access_p_heap* %storemerge, %struct.VEC_access_p_heap** %vec, align 8, !dbg !5020
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap** %vec, metadata !4996, metadata !DIExpression(DW_OP_deref)), !dbg !4999
  %call7 = call fastcc %struct.access** @VEC_access_p_heap_safe_push(%struct.VEC_access_p_heap** nonnull %vec, %struct.access* %2) #7, !dbg !5021
  %9 = bitcast %struct.VEC_access_p_heap** %vec to i64*, !dbg !5022
  %10 = load i64, i64* %9, align 8, !dbg !5022
  %11 = load %struct.pointer_map_t*, %struct.pointer_map_t** @base_access_vec, align 8, !dbg !5023
  %call8 = call i8** @pointer_map_insert(%struct.pointer_map_t* %11, i8* %6) #6, !dbg !5024
  %12 = bitcast i8** %call8 to i64*, !dbg !5025
  store i64 %10, i64* %12, align 8, !dbg !5025
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5026
  ret %struct.access* %2, !dbg !5027
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5028 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5032, metadata !DIExpression()), !dbg !5033
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5034
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5034
  ret %struct.basic_block_def* %0, !dbg !5035
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_access_p_heap* @VEC_access_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5036 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5040, metadata !DIExpression()), !dbg !5041
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5042
  %0 = bitcast i8* %call to %struct.VEC_access_p_heap*, !dbg !5042
  ret %struct.VEC_access_p_heap* %0, !dbg !5042
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.access** @VEC_access_p_heap_safe_push(%struct.VEC_access_p_heap** %vec_, %struct.access* %obj_) unnamed_addr #0 !dbg !5043 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap** %vec_, metadata !5048, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata %struct.access* %obj_, metadata !5049, metadata !DIExpression()), !dbg !5050
  %call = tail call fastcc i32 @VEC_access_p_heap_reserve(%struct.VEC_access_p_heap** %vec_, i32 1) #7, !dbg !5051
  %0 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %vec_, align 8, !dbg !5051
  %tobool = icmp eq %struct.VEC_access_p_heap* %0, null, !dbg !5051
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5051

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %0, i64 0, i32 0, !dbg !5051
  br label %cond.end, !dbg !5051

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_access_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5051
  %call1 = tail call fastcc %struct.access** @VEC_access_p_base_quick_push(%struct.VEC_access_p_base* %cond, %struct.access* %obj_) #7, !dbg !5051
  ret %struct.access** %call1, !dbg !5051
}

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_access_p_heap_reserve(%struct.VEC_access_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5052 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap** %vec_, metadata !5056, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i32 1, metadata !5057, metadata !DIExpression()), !dbg !5059
  %0 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %vec_, align 8, !dbg !5060
  %tobool = icmp eq %struct.VEC_access_p_heap* %0, null, !dbg !5060
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5060

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %0, i64 0, i32 0, !dbg !5060
  br label %cond.end, !dbg !5060

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_access_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5060
  %call = tail call fastcc i32 @VEC_access_p_base_space(%struct.VEC_access_p_base* %cond, i32 1) #7, !dbg !5060
  %tobool1 = icmp eq i32 %call, 0, !dbg !5060
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5060
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5058, metadata !DIExpression()), !dbg !5059
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5060

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_access_p_heap** %vec_ to i8**, !dbg !5061
  %2 = load i8*, i8** %1, align 8, !dbg !5061
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !5061
  store i8* %call3, i8** %1, align 8, !dbg !5061
  br label %if.end, !dbg !5061

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5060
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.access** @VEC_access_p_base_quick_push(%struct.VEC_access_p_base* %vec_, %struct.access* %obj_) unnamed_addr #0 !dbg !5063 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_base* %vec_, metadata !5068, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.value(metadata %struct.access* %obj_, metadata !5069, metadata !DIExpression()), !dbg !5071
  %num1 = getelementptr inbounds %struct.VEC_access_p_base, %struct.VEC_access_p_base* %vec_, i64 0, i32 0, !dbg !5072
  %0 = load i32, i32* %num1, align 8, !dbg !5072
  %inc = add i32 %0, 1, !dbg !5072
  store i32 %inc, i32* %num1, align 8, !dbg !5072
  %idxprom = zext i32 %0 to i64, !dbg !5072
  %arrayidx = getelementptr inbounds %struct.VEC_access_p_base, %struct.VEC_access_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5072
  call void @llvm.dbg.value(metadata %struct.access** %arrayidx, metadata !5070, metadata !DIExpression()), !dbg !5071
  store %struct.access* %obj_, %struct.access** %arrayidx, align 8, !dbg !5072
  ret %struct.access** %arrayidx, !dbg !5072
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_access_p_base_space(%struct.VEC_access_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5073 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_base* %vec_, metadata !5077, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i32 1, metadata !5078, metadata !DIExpression()), !dbg !5079
  %tobool = icmp eq %struct.VEC_access_p_base* %vec_, null, !dbg !5080
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5080

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_access_p_base, %struct.VEC_access_p_base* %vec_, i64 0, i32 1, !dbg !5080
  %0 = load i32, i32* %alloc, align 4, !dbg !5080
  %num = getelementptr inbounds %struct.VEC_access_p_base, %struct.VEC_access_p_base* %vec_, i64 0, i32 0, !dbg !5080
  %1 = load i32, i32* %num, align 8, !dbg !5080
  %cmp1 = icmp ne i32 %0, %1, !dbg !5080
  %phitmp = zext i1 %cmp1 to i32, !dbg !5080
  br label %cond.end, !dbg !5080

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5080

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5080
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5081 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5083, metadata !DIExpression()), !dbg !5084
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5085
  ret %union.tree_node** %call, !dbg !5086
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5087 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5089, metadata !DIExpression()), !dbg !5090
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5091
  ret %union.tree_node** %call, !dbg !5092
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5093 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5095, metadata !DIExpression()), !dbg !5096
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5097
  %tobool = icmp eq i8 %call, 0, !dbg !5097
  br i1 %tobool, label %return, label %if.then, !dbg !5099

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5100
  %bf.load = load i32, i32* %0, align 8, !dbg !5100
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !5100
  %1 = trunc i32 %bf.lshr to i8, !dbg !5101
  %conv = and i8 %1, 1, !dbg !5101
  br label %return, !dbg !5102

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !5103
  ret i8 %retval.0, !dbg !5104
}

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_link_to_rhs(%struct.access* %racc, %struct.assign_link* %link) unnamed_addr #5 !dbg !5105 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %racc, metadata !5109, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata %struct.assign_link* %link, metadata !5110, metadata !DIExpression()), !dbg !5111
  %racc1 = getelementptr inbounds %struct.assign_link, %struct.assign_link* %link, i64 0, i32 1, !dbg !5112
  %0 = load %struct.access*, %struct.access** %racc1, align 8, !dbg !5112
  %cmp = icmp eq %struct.access* %0, %racc, !dbg !5112
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5112

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 485, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5112
  br label %cond.end, !dbg !5112

cond.end:                                         ; preds = %entry, %cond.true
  %first_link = getelementptr inbounds %struct.access, %struct.access* %racc, i64 0, i32 10, !dbg !5113
  %1 = load %struct.assign_link*, %struct.assign_link** %first_link, align 8, !dbg !5113
  %tobool = icmp eq %struct.assign_link* %1, null, !dbg !5115
  %last_link8 = getelementptr inbounds %struct.access, %struct.access* %racc, i64 0, i32 11, !dbg !5116
  %2 = load %struct.assign_link*, %struct.assign_link** %last_link8, align 8, !dbg !5116
  br i1 %tobool, label %if.then, label %if.else, !dbg !5117

if.then:                                          ; preds = %cond.end
  %tobool2 = icmp eq %struct.assign_link* %2, null, !dbg !5118
  br i1 %tobool2, label %cond.end5, label %cond.true3, !dbg !5118

cond.true3:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 489, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5118
  br label %cond.end5, !dbg !5118

cond.end5:                                        ; preds = %if.then, %cond.true3
  store %struct.assign_link* %link, %struct.assign_link** %first_link, align 8, !dbg !5120
  br label %if.end, !dbg !5121

if.else:                                          ; preds = %cond.end
  %next = getelementptr inbounds %struct.assign_link, %struct.assign_link* %2, i64 0, i32 2, !dbg !5122
  store %struct.assign_link* %link, %struct.assign_link** %next, align 8, !dbg !5123
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end5
  store %struct.assign_link* %link, %struct.assign_link** %last_link8, align 8, !dbg !5124
  %next10 = getelementptr inbounds %struct.assign_link, %struct.assign_link* %link, i64 0, i32 2, !dbg !5125
  store %struct.assign_link* null, %struct.assign_link** %next10, align 8, !dbg !5126
  ret void, !dbg !5127
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5128 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5130, metadata !DIExpression()), !dbg !5131
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5132
  %cmp = icmp ugt i32 %call, 5, !dbg !5133
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5134

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5135
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5136
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5137
}

declare dso_local zeroext i8 @optimize_function_for_speed_p(%struct.function*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !5138 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5147, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !5148, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i32 0, metadata !5149, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5150, metadata !DIExpression()), !dbg !5151
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !5152
  %1 = load i64, i64* %0, align 8, !dbg !5152
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !5153
  store i64 %1, i64* %2, align 8, !dbg !5153
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !5154
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !5155
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !5156
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !5159
  br label %while.body, !dbg !5159

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !5160
  br i1 %tobool, label %if.then, label %if.end, !dbg !5161

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !5162
  br label %while.end, !dbg !5164

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !5165

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !5159, !llvm.loop !5166

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !5168

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !5168
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !5170
  %7 = load i32, i32* %indx9, align 8, !dbg !5170
  %cmp11 = icmp eq i32 %7, 0, !dbg !5171
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !5172

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !5173
  %8 = load i32, i32* %indx14, align 8, !dbg !5173
  %mul = shl i32 %8, 7, !dbg !5174
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5149, metadata !DIExpression()), !dbg !5151
  br label %if.end15, !dbg !5175

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !5149, metadata !DIExpression()), !dbg !5151
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !5176
  store i32 0, i32* %word_no, align 8, !dbg !5177
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !5178
  %9 = load i64, i64* %arrayidx, align 8, !dbg !5178
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5179
  store i64 %9, i64* %bits21, align 8, !dbg !5180
  %tobool23 = icmp eq i64 %9, 0, !dbg !5181
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !5181
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !5182
  call void @llvm.dbg.value(metadata i32 %add, metadata !5149, metadata !DIExpression()), !dbg !5151
  store i32 %add, i32* %bit_no, align 4, !dbg !5183
  ret void, !dbg !5184
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !5185 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5189, metadata !DIExpression()), !dbg !5194
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5190, metadata !DIExpression()), !dbg !5194
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5195
  %0 = load i64, i64* %bits, align 8, !dbg !5195
  %tobool = icmp eq i64 %0, 0, !dbg !5196
  br i1 %tobool, label %if.end, label %next_bit, !dbg !5197

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !5198
  br label %next_bit, !dbg !5201

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !5191), !dbg !5202
  br label %while.cond, !dbg !5201

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !5203
  %and = and i64 %2, 1, !dbg !5204
  %tobool2 = icmp eq i64 %and, 0, !dbg !5205
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !5201

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !5206
  store i64 %shr, i64* %bits, align 8, !dbg !5206
  %3 = load i32, i32* %bit_no, align 4, !dbg !5208
  %add = add i32 %3, 1, !dbg !5208
  store i32 %add, i32* %bit_no, align 4, !dbg !5208
  %.pre = load i64, i64* %bits, align 8, !dbg !5203
  br label %while.cond, !dbg !5201, !llvm.loop !5209

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !5211
  %sub = add i32 %4, 63, !dbg !5212
  %div = and i32 %sub, -64, !dbg !5213
  store i32 %div, i32* %bit_no, align 4, !dbg !5214
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !5215
  %5 = load i32, i32* %word_no, align 8, !dbg !5216
  %inc = add i32 %5, 1, !dbg !5216
  store i32 %inc, i32* %word_no, align 8, !dbg !5216
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !5217
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !5217
  br label %while.body6, !dbg !5218

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !5219

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !5220
  %cmp = icmp eq i32 %8, 2, !dbg !5221
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !5217
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !5219

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !5198
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !5198
  %10 = load i64, i64* %arrayidx, align 8, !dbg !5198
  store i64 %10, i64* %bits, align 8, !dbg !5222
  %tobool14 = icmp eq i64 %10, 0, !dbg !5223
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !5225

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !5226
  %add17 = add i32 %11, 64, !dbg !5226
  store i32 %add17, i32* %bit_no, align 4, !dbg !5226
  %12 = load i32, i32* %word_no, align 8, !dbg !5227
  %inc19 = add i32 %12, 1, !dbg !5227
  store i32 %inc19, i32* %word_no, align 8, !dbg !5227
  br label %while.cond7, !dbg !5219, !llvm.loop !5228

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !5217
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !5230
  %14 = load i64, i64* %13, align 8, !dbg !5230
  store i64 %14, i64* %6, align 8, !dbg !5231
  %tobool24 = icmp eq i64 %14, 0, !dbg !5232
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !5234

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !5234
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !5235
  %16 = load i32, i32* %indx, align 8, !dbg !5235
  %mul28 = shl i32 %16, 7, !dbg !5236
  store i32 %mul28, i32* %bit_no, align 4, !dbg !5237
  store i32 0, i32* %word_no, align 8, !dbg !5238
  br label %while.body6, !dbg !5218, !llvm.loop !5239

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !5241

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !5241

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !5194
  ret i8 %retval.0, !dbg !5241
}

declare dso_local %union.tree_node* @referenced_var_lookup(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @type_consists_of_records_p(%union.tree_node* %type) unnamed_addr #5 !dbg !5242 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5244, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i8 0, metadata !5246, metadata !DIExpression()), !dbg !5252
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5253
  %bf.load = load i64, i64* %0, align 8, !dbg !5253
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5255
  %cmp = icmp eq i64 %bf.cast1, 16, !dbg !5255
  br i1 %cmp, label %if.end, label %cleanup22, !dbg !5256

if.end:                                           ; preds = %entry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5257
  %1 = bitcast i32* %values to %union.tree_node**, !dbg !5257
  br label %for.cond, !dbg !5258

for.cond:                                         ; preds = %for.inc, %if.end
  %last_fld_has_zero_size.0 = phi i8 [ 0, %if.end ], [ %last_fld_has_zero_size.2, %for.inc ], !dbg !5252
  %fld.0.in = phi %union.tree_node** [ %1, %if.end ], [ %chain, %for.inc ]
  %fld.0 = load %union.tree_node*, %union.tree_node** %fld.0.in, align 8, !dbg !5259
  call void @llvm.dbg.value(metadata %union.tree_node* %fld.0, metadata !5245, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i8 %last_fld_has_zero_size.0, metadata !5246, metadata !DIExpression()), !dbg !5252
  %tobool = icmp eq %union.tree_node* %fld.0, null, !dbg !5260
  br i1 %tobool, label %for.end, label %for.body, !dbg !5260

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5261
  %bf.load3 = load i64, i64* %2, align 8, !dbg !5261
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !5262
  %cmp6 = icmp eq i64 %bf.cast52, 31, !dbg !5262
  br i1 %cmp6, label %if.then7, label %for.inc, !dbg !5263

if.then7:                                         ; preds = %for.body
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5264
  %3 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5264
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5247, metadata !DIExpression()), !dbg !5265
  %call = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %3) #6, !dbg !5266
  %tobool9 = icmp eq i8 %call, 0, !dbg !5266
  br i1 %tobool9, label %land.lhs.true, label %if.end13, !dbg !5268

land.lhs.true:                                    ; preds = %if.then7
  %call10 = tail call fastcc zeroext i8 @type_consists_of_records_p(%union.tree_node* %3) #7, !dbg !5269
  %tobool11 = icmp eq i8 %call10, 0, !dbg !5269
  br i1 %tobool11, label %cleanup, label %if.end13, !dbg !5270

if.end13:                                         ; preds = %land.lhs.true, %if.then7
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5271
  %4 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !5271
  %call14 = tail call i64 @tree_low_cst(%union.tree_node* %4, i32 1) #6, !dbg !5272
  %cmp15 = icmp eq i64 %call14, 0, !dbg !5273
  %conv16 = zext i1 %cmp15 to i8, !dbg !5272
  call void @llvm.dbg.value(metadata i8 %conv16, metadata !5246, metadata !DIExpression()), !dbg !5252
  br label %cleanup, !dbg !5274

cleanup:                                          ; preds = %land.lhs.true, %if.end13
  %last_fld_has_zero_size.1 = phi i8 [ %conv16, %if.end13 ], [ %last_fld_has_zero_size.0, %land.lhs.true ], !dbg !5252
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end13 ], [ false, %land.lhs.true ]
  call void @llvm.dbg.value(metadata i8 %last_fld_has_zero_size.1, metadata !5246, metadata !DIExpression()), !dbg !5252
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup22.loopexit

for.inc:                                          ; preds = %for.body, %cleanup
  %last_fld_has_zero_size.2 = phi i8 [ %last_fld_has_zero_size.0, %for.body ], [ %last_fld_has_zero_size.1, %cleanup ], !dbg !5252
  call void @llvm.dbg.value(metadata i8 %last_fld_has_zero_size.2, metadata !5246, metadata !DIExpression()), !dbg !5252
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5275
  br label %for.cond, !dbg !5276, !llvm.loop !5277

for.end:                                          ; preds = %for.cond
  %last_fld_has_zero_size.0.lcssa = phi i8 [ %last_fld_has_zero_size.0, %for.cond ], !dbg !5252
  call void @llvm.dbg.value(metadata i8 %last_fld_has_zero_size.0.lcssa, metadata !5246, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i8 %last_fld_has_zero_size.0.lcssa, metadata !5246, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i8 %last_fld_has_zero_size.0.lcssa, metadata !5246, metadata !DIExpression()), !dbg !5252
  %tobool19 = icmp eq i8 %last_fld_has_zero_size.0.lcssa, 0, !dbg !5279
  %. = zext i1 %tobool19 to i8, !dbg !5252
  br label %cleanup22, !dbg !5252

cleanup22.loopexit:                               ; preds = %cleanup
  br label %cleanup22, !dbg !5281

cleanup22:                                        ; preds = %cleanup22.loopexit, %entry, %for.end
  %retval.3 = phi i8 [ 0, %entry ], [ %., %for.end ], [ 0, %cleanup22.loopexit ]
  ret i8 %retval.3, !dbg !5281
}

; Function Attrs: nounwind uwtable
define internal fastcc void @completely_scalarize_record(%union.tree_node* %base, %union.tree_node* %decl, i64 %offset) unnamed_addr #5 !dbg !5282 {
entry:
  %expr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !5286, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5287, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata i64 %offset, metadata !5288, metadata !DIExpression()), !dbg !5303
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5304
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5304
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !5304
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !5305
  %2 = bitcast %union.tree_node** %expr to i8*, !dbg !5306
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5306
  %3 = bitcast %union.tree_node** %expr to i64*, !dbg !5306
  br label %for.cond, !dbg !5307

for.cond:                                         ; preds = %for.inc, %entry
  %fld.0.in = phi %union.tree_node** [ %values, %entry ], [ %chain, %for.inc ]
  %fld.0 = load %union.tree_node*, %union.tree_node** %fld.0.in, align 8, !dbg !5308
  call void @llvm.dbg.value(metadata %union.tree_node* %fld.0, metadata !5289, metadata !DIExpression()), !dbg !5303
  %tobool = icmp eq %union.tree_node* %fld.0, null, !dbg !5309
  br i1 %tobool, label %for.end, label %for.body, !dbg !5309

for.body:                                         ; preds = %for.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5310
  %bf.load = load i64, i64* %4, align 8, !dbg !5310
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5311
  %cmp = icmp eq i64 %bf.cast1, 31, !dbg !5311
  br i1 %cmp, label %if.then, label %for.inc, !dbg !5312

if.then:                                          ; preds = %for.body
  %call = call i64 @int_bit_position(%union.tree_node* nonnull %fld.0) #6, !dbg !5313
  %add = add nsw i64 %call, %offset, !dbg !5314
  call void @llvm.dbg.value(metadata i64 %add, metadata !5291, metadata !DIExpression()), !dbg !5315
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5316
  %5 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !5316
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5296, metadata !DIExpression()), !dbg !5315
  %call5 = call zeroext i8 @is_gimple_reg_type(%union.tree_node* %5) #6, !dbg !5317
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5317
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !5318

if.then7:                                         ; preds = %if.then
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5319
  %size8 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5320
  %6 = load %union.tree_node*, %union.tree_node** %size8, align 8, !dbg !5320
  %call9 = call i64 @tree_low_cst(%union.tree_node* %6, i32 1) #6, !dbg !5321
  call void @llvm.dbg.value(metadata i64 %call9, metadata !5300, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !5301, metadata !DIExpression()), !dbg !5306
  store %union.tree_node* %base, %union.tree_node** %expr, align 8, !dbg !5322
  %7 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !5323
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !5301, metadata !DIExpression(DW_OP_deref)), !dbg !5306
  %call12 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %expr, %union.tree_node* %7, i64 %add, %union.tree_node* %5, i8 zeroext 0) #7, !dbg !5324
  call void @llvm.dbg.value(metadata i8 %call12, metadata !5302, metadata !DIExpression()), !dbg !5306
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5325
  br i1 %tobool13, label %cond.true, label %cond.end, !dbg !5325

cond.true:                                        ; preds = %if.then7
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 863, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5325
  br label %cond.end, !dbg !5325

cond.end:                                         ; preds = %if.then7, %cond.true
  %call14 = call fastcc %struct.access* @create_access_1(%union.tree_node* %base, i64 %add, i64 %call9) #7, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.access* %call14, metadata !5297, metadata !DIExpression()), !dbg !5306
  %8 = load i64, i64* %3, align 8, !dbg !5327
  %expr15 = getelementptr inbounds %struct.access, %struct.access* %call14, i64 0, i32 3, !dbg !5328
  %9 = bitcast %union.tree_node** %expr15 to i64*, !dbg !5329
  store i64 %8, i64* %9, align 8, !dbg !5329
  %type16 = getelementptr inbounds %struct.access, %struct.access* %call14, i64 0, i32 4, !dbg !5330
  store %union.tree_node* %5, %union.tree_node** %type16, align 8, !dbg !5331
  %total_scalarization = getelementptr inbounds %struct.access, %struct.access* %call14, i64 0, i32 14, !dbg !5332
  %bf.load17 = load i16, i16* %total_scalarization, align 8, !dbg !5333
  %bf.set = or i16 %bf.load17, 2, !dbg !5333
  store i16 %bf.set, i16* %total_scalarization, align 8, !dbg !5333
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5334
  br label %for.inc, !dbg !5335

if.else:                                          ; preds = %if.then
  call fastcc void @completely_scalarize_record(%union.tree_node* %base, %union.tree_node* nonnull %fld.0, i64 %add) #7, !dbg !5336
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else, %cond.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %fld.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5337
  br label %for.cond, !dbg !5338, !llvm.loop !5339

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5341
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !5342 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5346, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5347, metadata !DIExpression()), !dbg !5348
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5349
  %0 = load i64, i64* %bits, align 8, !dbg !5350
  %shr = lshr i64 %0, 1, !dbg !5350
  store i64 %shr, i64* %bits, align 8, !dbg !5350
  %1 = load i32, i32* %bit_no, align 4, !dbg !5351
  %add = add i32 %1, 1, !dbg !5351
  store i32 %add, i32* %bit_no, align 4, !dbg !5351
  ret void, !dbg !5352
}

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @sort_and_splice_var_accesses(%union.tree_node* %var) unnamed_addr #5 !dbg !5353 {
entry:
  %res = alloca %struct.access*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5357, metadata !DIExpression()), !dbg !5379
  %0 = bitcast %struct.access** %res to i8*, !dbg !5380
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5380
  call void @llvm.dbg.value(metadata %struct.access** %res, metadata !5362, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 1, metadata !5365, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 -1, metadata !5366, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 0, metadata !5367, metadata !DIExpression()), !dbg !5379
  %call = tail call fastcc %struct.VEC_access_p_heap* @get_base_access_vector(%union.tree_node* %var) #7, !dbg !5381
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %call, metadata !5364, metadata !DIExpression()), !dbg !5379
  %tobool = icmp eq %struct.VEC_access_p_heap* %call, null, !dbg !5382
  br i1 %tobool, label %cleanup208, label %cond.true, !dbg !5384

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %call, i64 0, i32 0, !dbg !5385
  %call2 = tail call fastcc i32 @VEC_access_p_base_length(%struct.VEC_access_p_base* nonnull %base) #7, !dbg !5385
  call void @llvm.dbg.value(metadata i32 %call2, metadata !5360, metadata !DIExpression()), !dbg !5379
  %call9 = tail call fastcc %struct.access** @VEC_access_p_base_address(%struct.VEC_access_p_base* nonnull %base) #7, !dbg !5386
  %1 = bitcast %struct.access** %call9 to i8*, !dbg !5386
  %conv = sext i32 %call2 to i64, !dbg !5387
  tail call void @spec_qsort(i8* %1, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @compare_access_positions) #6, !dbg !5388
  call void @llvm.dbg.value(metadata i32 0, metadata !5358, metadata !DIExpression()), !dbg !5379
  br label %while.cond, !dbg !5389

while.cond:                                       ; preds = %cleanup184, %cond.true
  %high.0 = phi i64 [ 0, %cond.true ], [ %high.2, %cleanup184 ], !dbg !5379
  %low.0 = phi i64 [ -1, %cond.true ], [ %low.2, %cleanup184 ], !dbg !5379
  %first.0 = phi i8 [ 1, %cond.true ], [ 0, %cleanup184 ], !dbg !5379
  %prev_acc_ptr.0 = phi %struct.access** [ %res, %cond.true ], [ %prev_acc_ptr.1, %cleanup184 ], !dbg !5379
  %i.0 = phi i32 [ 0, %cond.true ], [ %i.1, %cleanup184 ], !dbg !5379
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5358, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata %struct.access** %prev_acc_ptr.0, metadata !5362, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !5365, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 %low.0, metadata !5366, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 %high.0, metadata !5367, metadata !DIExpression()), !dbg !5379
  %cmp = icmp slt i32 %i.0, %call2, !dbg !5390
  br i1 %cmp, label %while.body, label %while.end194, !dbg !5389

while.body:                                       ; preds = %while.cond
  %call17 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* nonnull %base, i32 %i.0) #7, !dbg !5391
  call void @llvm.dbg.value(metadata %struct.access* %call17, metadata !5368, metadata !DIExpression()), !dbg !5392
  %write = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 14, !dbg !5393
  %bf.load = load i16, i16* %write, align 8, !dbg !5393
  %2 = trunc i16 %bf.load to i8, !dbg !5394
  %conv18 = and i8 %2, 1, !dbg !5394
  call void @llvm.dbg.value(metadata i8 %conv18, metadata !5370, metadata !DIExpression()), !dbg !5392
  %3 = xor i8 %conv18, 1, !dbg !5395
  call void @llvm.dbg.value(metadata i8 %3, metadata !5371, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 0, metadata !5372, metadata !DIExpression()), !dbg !5392
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !5396
  %4 = trunc i16 %bf.lshr to i8, !dbg !5397
  %conv29 = and i8 %4, 1, !dbg !5397
  call void @llvm.dbg.value(metadata i8 %conv29, metadata !5373, metadata !DIExpression()), !dbg !5392
  %bf.lshr32 = lshr i16 %bf.load, 9, !dbg !5398
  %5 = trunc i16 %bf.lshr32 to i8, !dbg !5399
  %conv35 = and i8 %5, 1, !dbg !5399
  call void @llvm.dbg.value(metadata i8 %conv35, metadata !5374, metadata !DIExpression()), !dbg !5392
  %type = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 4, !dbg !5400
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5400
  %call36 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %6) #6, !dbg !5401
  call void @llvm.dbg.value(metadata i8 %call36, metadata !5375, metadata !DIExpression()), !dbg !5392
  %bf.load37 = load i16, i16* %write, align 8, !dbg !5402
  %bf.lshr38 = lshr i16 %bf.load37, 7, !dbg !5402
  %7 = trunc i16 %bf.lshr38 to i8, !dbg !5403
  %conv41 = and i8 %7, 1, !dbg !5403
  call void @llvm.dbg.value(metadata i8 %conv41, metadata !5376, metadata !DIExpression()), !dbg !5392
  %tobool43 = icmp eq i8 %first.0, 0, !dbg !5404
  br i1 %tobool43, label %lor.lhs.false, label %while.body.if.then46_crit_edge, !dbg !5406

while.body.if.then46_crit_edge:                   ; preds = %while.body
  %offset47.phi.trans.insert = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 0, !dbg !5407
  %.pre = load i64, i64* %offset47.phi.trans.insert, align 8, !dbg !5409
  br label %if.then46, !dbg !5406

lor.lhs.false:                                    ; preds = %while.body
  %offset = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 0, !dbg !5410
  %8 = load i64, i64* %offset, align 8, !dbg !5410
  %cmp44 = icmp slt i64 %8, %high.0, !dbg !5411
  br i1 %cmp44, label %if.else, label %if.then46, !dbg !5412

if.then46:                                        ; preds = %while.body.if.then46_crit_edge, %lor.lhs.false
  %9 = phi i64 [ %.pre, %while.body.if.then46_crit_edge ], [ %8, %lor.lhs.false ], !dbg !5409
  call void @llvm.dbg.value(metadata i8 0, metadata !5365, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 %9, metadata !5366, metadata !DIExpression()), !dbg !5379
  %size = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 1, !dbg !5413
  %10 = load i64, i64* %size, align 8, !dbg !5413
  %add = add nsw i64 %9, %10, !dbg !5414
  call void @llvm.dbg.value(metadata i64 %add, metadata !5367, metadata !DIExpression()), !dbg !5379
  br label %if.end73, !dbg !5415

if.else:                                          ; preds = %lor.lhs.false
  %cmp50 = icmp sgt i64 %8, %low.0, !dbg !5416
  br i1 %cmp50, label %land.lhs.true, label %if.else58, !dbg !5418

land.lhs.true:                                    ; preds = %if.else
  %size53 = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 1, !dbg !5419
  %11 = load i64, i64* %size53, align 8, !dbg !5419
  %add54 = add nsw i64 %8, %11, !dbg !5420
  %cmp55 = icmp sgt i64 %add54, %high.0, !dbg !5421
  br i1 %cmp55, label %cleanup184, label %if.else58, !dbg !5422

if.else58:                                        ; preds = %land.lhs.true, %if.else
  %cmp60 = icmp slt i64 %8, %low.0, !dbg !5423
  br i1 %cmp60, label %cond.true68, label %land.lhs.true62, !dbg !5423

land.lhs.true62:                                  ; preds = %if.else58
  %size64 = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 1, !dbg !5423
  %12 = load i64, i64* %size64, align 8, !dbg !5423
  %add65 = add nsw i64 %8, %12, !dbg !5423
  %cmp66 = icmp sgt i64 %add65, %high.0, !dbg !5423
  br i1 %cmp66, label %cond.true68, label %if.end73, !dbg !5423

cond.true68:                                      ; preds = %land.lhs.true62, %if.else58
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1602, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5423
  br label %if.end73, !dbg !5423

if.end73:                                         ; preds = %land.lhs.true62, %cond.true68, %if.then46
  %high.1 = phi i64 [ %add, %if.then46 ], [ %high.0, %cond.true68 ], [ %high.0, %land.lhs.true62 ], !dbg !5379
  %low.1 = phi i64 [ %9, %if.then46 ], [ %low.0, %cond.true68 ], [ %low.0, %land.lhs.true62 ], !dbg !5379
  call void @llvm.dbg.value(metadata i8 0, metadata !5365, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 %low.1, metadata !5366, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 %high.1, metadata !5367, metadata !DIExpression()), !dbg !5379
  %add74 = add nsw i32 %i.0, 1, !dbg !5424
  call void @llvm.dbg.value(metadata i32 %add74, metadata !5359, metadata !DIExpression()), !dbg !5379
  %offset87 = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 0, !dbg !5425
  %size92 = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 1, !dbg !5425
  %tobool133 = icmp eq i8 %call36, 0, !dbg !5427
  br i1 %tobool133, label %if.end73.split.us, label %if.end73.if.end73.split_crit_edge, !dbg !5428

if.end73.if.end73.split_crit_edge:                ; preds = %if.end73
  br label %while.cond75, !dbg !5428

if.end73.split.us:                                ; preds = %if.end73
  br label %while.cond75.us, !dbg !5428

while.cond75.us:                                  ; preds = %cleanup.us, %if.end73.split.us
  %grp_read.0.us = phi i8 [ %3, %if.end73.split.us ], [ %grp_read.3.us, %cleanup.us ], !dbg !5429
  %grp_write.0.us = phi i8 [ %conv18, %if.end73.split.us ], [ %grp_write.2.us, %cleanup.us ], !dbg !5430
  %multiple_reads.0.us = phi i8 [ 0, %if.end73.split.us ], [ %multiple_reads.3.us, %cleanup.us ], !dbg !5431
  %total_scalarization.0.us = phi i8 [ %conv29, %if.end73.split.us ], [ %total_scalarization.1.us, %cleanup.us ], !dbg !5432
  %grp_partial_lhs.0.us = phi i8 [ %conv35, %if.end73.split.us ], [ %grp_partial_lhs.1.us, %cleanup.us ], !dbg !5433
  %j.0.us = phi i32 [ %add74, %if.end73.split.us ], [ %j.1.us, %cleanup.us ], !dbg !5434
  %unscalarizable_region.0.us = phi i8 [ %conv41, %if.end73.split.us ], [ %unscalarizable_region.1.us, %cleanup.us ], !dbg !5435
  call void @llvm.dbg.value(metadata i8 %unscalarizable_region.0.us, metadata !5376, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !5359, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %grp_partial_lhs.0.us, metadata !5374, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %total_scalarization.0.us, metadata !5373, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %multiple_reads.0.us, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_write.0.us, metadata !5370, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.0.us, metadata !5371, metadata !DIExpression()), !dbg !5392
  %cmp76.us = icmp slt i32 %j.0.us, %call2, !dbg !5436
  br i1 %cmp76.us, label %while.body78.us, label %while.end.us-lcssa.us, !dbg !5428

while.body78.us:                                  ; preds = %while.cond75.us
  %call85.us = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* nonnull %base, i32 %j.0.us) #7, !dbg !5437
  call void @llvm.dbg.value(metadata %struct.access* %call85.us, metadata !5377, metadata !DIExpression()), !dbg !5427
  %offset86.us = getelementptr inbounds %struct.access, %struct.access* %call85.us, i64 0, i32 0, !dbg !5438
  %13 = load i64, i64* %offset86.us, align 8, !dbg !5438
  %14 = load i64, i64* %offset87, align 8, !dbg !5439
  %cmp88.us = icmp eq i64 %13, %14, !dbg !5440
  br i1 %cmp88.us, label %lor.lhs.false90.us, label %cleanup.us, !dbg !5441

lor.lhs.false90.us:                               ; preds = %while.body78.us
  %size91.us = getelementptr inbounds %struct.access, %struct.access* %call85.us, i64 0, i32 1, !dbg !5442
  %15 = load i64, i64* %size91.us, align 8, !dbg !5442
  %16 = load i64, i64* %size92, align 8, !dbg !5443
  %cmp93.us = icmp eq i64 %15, %16, !dbg !5444
  br i1 %cmp93.us, label %if.end96.us, label %cleanup.us, !dbg !5445

if.end96.us:                                      ; preds = %lor.lhs.false90.us
  %write97.us = getelementptr inbounds %struct.access, %struct.access* %call85.us, i64 0, i32 14, !dbg !5446
  %bf.load98.us = load i16, i16* %write97.us, align 8, !dbg !5446
  %bf.clear99.us = and i16 %bf.load98.us, 1, !dbg !5446
  %tobool101.us = icmp eq i16 %bf.clear99.us, 0, !dbg !5448
  br i1 %tobool101.us, label %if.else103.us, label %if.end108.us, !dbg !5449

if.else103.us:                                    ; preds = %if.end96.us
  %tobool104.us = icmp ne i8 %grp_read.0.us, 0, !dbg !5450
  %grp_read.0..us = select i1 %tobool104.us, i8 %grp_read.0.us, i8 1
  %.multiple_reads.0.us = select i1 %tobool104.us, i8 1, i8 %multiple_reads.0.us
  call void @llvm.dbg.value(metadata i8 %.multiple_reads.0.us, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.0..us, metadata !5371, metadata !DIExpression()), !dbg !5392
  br label %if.end108.us

if.end108.us:                                     ; preds = %if.else103.us, %if.end96.us
  %grp_read.2.us = phi i8 [ %grp_read.0..us, %if.else103.us ], [ %grp_read.0.us, %if.end96.us ], !dbg !5429
  %grp_write.1.us = phi i8 [ %grp_write.0.us, %if.else103.us ], [ 1, %if.end96.us ], !dbg !5392
  %multiple_reads.2.us = phi i8 [ %.multiple_reads.0.us, %if.else103.us ], [ %multiple_reads.0.us, %if.end96.us ], !dbg !5392
  call void @llvm.dbg.value(metadata i8 %multiple_reads.2.us, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_write.1.us, metadata !5370, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.2.us, metadata !5371, metadata !DIExpression()), !dbg !5392
  %bf.lshr111.us = lshr i16 %bf.load98.us, 9, !dbg !5453
  %17 = trunc i16 %bf.lshr111.us to i8, !dbg !5453
  %bf.cast113.us = and i8 %17, 1, !dbg !5453
  %or.us = or i8 %grp_partial_lhs.0.us, %bf.cast113.us, !dbg !5454
  call void @llvm.dbg.value(metadata i8 %or.us, metadata !5374, metadata !DIExpression()), !dbg !5392
  %bf.lshr118.us = lshr i16 %bf.load98.us, 7, !dbg !5455
  %18 = trunc i16 %bf.lshr118.us to i8, !dbg !5455
  %bf.cast120.us = and i8 %18, 1, !dbg !5455
  %or122.us = or i8 %unscalarizable_region.0.us, %bf.cast120.us, !dbg !5456
  call void @llvm.dbg.value(metadata i8 %or122.us, metadata !5376, metadata !DIExpression()), !dbg !5392
  %bf.lshr126.us = lshr i16 %bf.load98.us, 1, !dbg !5457
  %19 = trunc i16 %bf.lshr126.us to i8, !dbg !5457
  %bf.cast128.us = and i8 %19, 1, !dbg !5457
  %or130.us = or i8 %total_scalarization.0.us, %bf.cast128.us, !dbg !5458
  call void @llvm.dbg.value(metadata i8 %or130.us, metadata !5373, metadata !DIExpression()), !dbg !5392
  tail call fastcc void @relink_to_new_repr(%struct.access* %call17, %struct.access* %call85.us) #7, !dbg !5459
  %type135.us = getelementptr inbounds %struct.access, %struct.access* %call85.us, i64 0, i32 4, !dbg !5460
  %20 = load %union.tree_node*, %union.tree_node** %type135.us, align 8, !dbg !5460
  %call136.us = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %20) #6, !dbg !5460
  %tobool137.us = icmp eq i8 %call136.us, 0, !dbg !5460
  br i1 %tobool137.us, label %cond.end140.us, label %cond.true138.us, !dbg !5460

cond.true138.us:                                  ; preds = %if.end108.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1627, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5460
  br label %cond.end140.us, !dbg !5460

cond.end140.us:                                   ; preds = %cond.true138.us, %if.end108.us
  %group_representative.us = getelementptr inbounds %struct.access, %struct.access* %call85.us, i64 0, i32 7, !dbg !5461
  store %struct.access* %call17, %struct.access** %group_representative.us, align 8, !dbg !5462
  %inc.us = add nsw i32 %j.0.us, 1, !dbg !5463
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !5359, metadata !DIExpression()), !dbg !5379
  br label %cleanup.us, !dbg !5464

cleanup.us:                                       ; preds = %cond.end140.us, %lor.lhs.false90.us, %while.body78.us
  %grp_read.3.us = phi i8 [ %grp_read.2.us, %cond.end140.us ], [ %grp_read.0.us, %lor.lhs.false90.us ], [ %grp_read.0.us, %while.body78.us ], !dbg !5429
  %grp_write.2.us = phi i8 [ %grp_write.1.us, %cond.end140.us ], [ %grp_write.0.us, %lor.lhs.false90.us ], [ %grp_write.0.us, %while.body78.us ], !dbg !5392
  %multiple_reads.3.us = phi i8 [ %multiple_reads.2.us, %cond.end140.us ], [ %multiple_reads.0.us, %lor.lhs.false90.us ], [ %multiple_reads.0.us, %while.body78.us ], !dbg !5431
  %cleanup.dest.slot.0.us = phi i1 [ true, %cond.end140.us ], [ false, %lor.lhs.false90.us ], [ false, %while.body78.us ]
  %total_scalarization.1.us = phi i8 [ %or130.us, %cond.end140.us ], [ %total_scalarization.0.us, %lor.lhs.false90.us ], [ %total_scalarization.0.us, %while.body78.us ], !dbg !5392
  %grp_partial_lhs.1.us = phi i8 [ %or.us, %cond.end140.us ], [ %grp_partial_lhs.0.us, %lor.lhs.false90.us ], [ %grp_partial_lhs.0.us, %while.body78.us ], !dbg !5392
  %j.1.us = phi i32 [ %inc.us, %cond.end140.us ], [ %j.0.us, %lor.lhs.false90.us ], [ %j.0.us, %while.body78.us ], !dbg !5392
  %unscalarizable_region.1.us = phi i8 [ %or122.us, %cond.end140.us ], [ %unscalarizable_region.0.us, %lor.lhs.false90.us ], [ %unscalarizable_region.0.us, %while.body78.us ], !dbg !5392
  call void @llvm.dbg.value(metadata i8 %unscalarizable_region.1.us, metadata !5376, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %j.1.us, metadata !5359, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %grp_partial_lhs.1.us, metadata !5374, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %total_scalarization.1.us, metadata !5373, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %multiple_reads.3.us, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_write.2.us, metadata !5370, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.3.us, metadata !5371, metadata !DIExpression()), !dbg !5392
  br i1 %cleanup.dest.slot.0.us, label %while.cond75.us, label %while.end.us-lcssa.us, !llvm.loop !5465

while.end.us-lcssa.us:                            ; preds = %cleanup.us, %while.cond75.us
  %grp_read.4.ph.us = phi i8 [ %grp_read.0.us, %while.cond75.us ], [ %grp_read.3.us, %cleanup.us ]
  %grp_write.3.ph.us = phi i8 [ %grp_write.0.us, %while.cond75.us ], [ %grp_write.2.us, %cleanup.us ]
  %multiple_reads.4.ph.us = phi i8 [ %multiple_reads.0.us, %while.cond75.us ], [ %multiple_reads.3.us, %cleanup.us ]
  %total_scalarization.2.ph.us = phi i8 [ %total_scalarization.0.us, %while.cond75.us ], [ %total_scalarization.1.us, %cleanup.us ]
  %grp_partial_lhs.2.ph.us = phi i8 [ %grp_partial_lhs.0.us, %while.cond75.us ], [ %grp_partial_lhs.1.us, %cleanup.us ]
  %j.2.ph.us = phi i32 [ %j.0.us, %while.cond75.us ], [ %j.1.us, %cleanup.us ]
  %unscalarizable_region.2.ph.us = phi i8 [ %unscalarizable_region.0.us, %while.cond75.us ], [ %unscalarizable_region.1.us, %cleanup.us ]
  br label %while.end, !dbg !5466

while.cond75:                                     ; preds = %cleanup, %if.end73.if.end73.split_crit_edge
  %grp_read.0 = phi i8 [ %3, %if.end73.if.end73.split_crit_edge ], [ %grp_read.3, %cleanup ], !dbg !5429
  %grp_write.0 = phi i8 [ %conv18, %if.end73.if.end73.split_crit_edge ], [ %grp_write.2, %cleanup ], !dbg !5430
  %multiple_reads.0 = phi i8 [ 0, %if.end73.if.end73.split_crit_edge ], [ %multiple_reads.3, %cleanup ], !dbg !5431
  %total_scalarization.0 = phi i8 [ %conv29, %if.end73.if.end73.split_crit_edge ], [ %total_scalarization.1, %cleanup ], !dbg !5432
  %grp_partial_lhs.0 = phi i8 [ %conv35, %if.end73.if.end73.split_crit_edge ], [ %grp_partial_lhs.1, %cleanup ], !dbg !5433
  %j.0 = phi i32 [ %add74, %if.end73.if.end73.split_crit_edge ], [ %j.1, %cleanup ], !dbg !5434
  %unscalarizable_region.0 = phi i8 [ %conv41, %if.end73.if.end73.split_crit_edge ], [ %unscalarizable_region.1, %cleanup ], !dbg !5435
  call void @llvm.dbg.value(metadata i8 %unscalarizable_region.0, metadata !5376, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5359, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %grp_partial_lhs.0, metadata !5374, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %total_scalarization.0, metadata !5373, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %multiple_reads.0, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_write.0, metadata !5370, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.0, metadata !5371, metadata !DIExpression()), !dbg !5392
  %cmp76 = icmp slt i32 %j.0, %call2, !dbg !5436
  br i1 %cmp76, label %while.body78, label %while.end.us-lcssa, !dbg !5428

while.body78:                                     ; preds = %while.cond75
  %call85 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* nonnull %base, i32 %j.0) #7, !dbg !5437
  call void @llvm.dbg.value(metadata %struct.access* %call85, metadata !5377, metadata !DIExpression()), !dbg !5427
  %offset86 = getelementptr inbounds %struct.access, %struct.access* %call85, i64 0, i32 0, !dbg !5438
  %21 = load i64, i64* %offset86, align 8, !dbg !5438
  %22 = load i64, i64* %offset87, align 8, !dbg !5439
  %cmp88 = icmp eq i64 %21, %22, !dbg !5440
  br i1 %cmp88, label %lor.lhs.false90, label %cleanup, !dbg !5441

lor.lhs.false90:                                  ; preds = %while.body78
  %size91 = getelementptr inbounds %struct.access, %struct.access* %call85, i64 0, i32 1, !dbg !5442
  %23 = load i64, i64* %size91, align 8, !dbg !5442
  %24 = load i64, i64* %size92, align 8, !dbg !5443
  %cmp93 = icmp eq i64 %23, %24, !dbg !5444
  br i1 %cmp93, label %if.end96, label %cleanup, !dbg !5445

if.end96:                                         ; preds = %lor.lhs.false90
  %write97 = getelementptr inbounds %struct.access, %struct.access* %call85, i64 0, i32 14, !dbg !5446
  %bf.load98 = load i16, i16* %write97, align 8, !dbg !5446
  %bf.clear99 = and i16 %bf.load98, 1, !dbg !5446
  %tobool101 = icmp eq i16 %bf.clear99, 0, !dbg !5448
  br i1 %tobool101, label %if.else103, label %if.end108, !dbg !5449

if.else103:                                       ; preds = %if.end96
  %tobool104 = icmp ne i8 %grp_read.0, 0, !dbg !5450
  %grp_read.0. = select i1 %tobool104, i8 %grp_read.0, i8 1
  %.multiple_reads.0 = select i1 %tobool104, i8 1, i8 %multiple_reads.0
  call void @llvm.dbg.value(metadata i8 %.multiple_reads.0, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.0., metadata !5371, metadata !DIExpression()), !dbg !5392
  br label %if.end108

if.end108:                                        ; preds = %if.end96, %if.else103
  %grp_read.2 = phi i8 [ %grp_read.0., %if.else103 ], [ %grp_read.0, %if.end96 ], !dbg !5429
  %grp_write.1 = phi i8 [ %grp_write.0, %if.else103 ], [ 1, %if.end96 ], !dbg !5392
  %multiple_reads.2 = phi i8 [ %.multiple_reads.0, %if.else103 ], [ %multiple_reads.0, %if.end96 ], !dbg !5392
  call void @llvm.dbg.value(metadata i8 %multiple_reads.2, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_write.1, metadata !5370, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.2, metadata !5371, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 undef, metadata !5374, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 undef, metadata !5376, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 undef, metadata !5373, metadata !DIExpression()), !dbg !5392
  tail call fastcc void @relink_to_new_repr(%struct.access* %call17, %struct.access* %call85) #7, !dbg !5459
  %bf.lshr126 = lshr i16 %bf.load98, 1, !dbg !5457
  %25 = trunc i16 %bf.lshr126 to i8, !dbg !5457
  %bf.cast128 = and i8 %25, 1, !dbg !5457
  %or130 = or i8 %total_scalarization.0, %bf.cast128, !dbg !5458
  call void @llvm.dbg.value(metadata i8 %or130, metadata !5373, metadata !DIExpression()), !dbg !5392
  %bf.lshr118 = lshr i16 %bf.load98, 7, !dbg !5455
  %26 = trunc i16 %bf.lshr118 to i8, !dbg !5455
  %bf.cast120 = and i8 %26, 1, !dbg !5455
  %or122 = or i8 %unscalarizable_region.0, %bf.cast120, !dbg !5456
  call void @llvm.dbg.value(metadata i8 %or122, metadata !5376, metadata !DIExpression()), !dbg !5392
  %bf.lshr111 = lshr i16 %bf.load98, 9, !dbg !5453
  %27 = trunc i16 %bf.lshr111 to i8, !dbg !5453
  %bf.cast113 = and i8 %27, 1, !dbg !5453
  %or = or i8 %grp_partial_lhs.0, %bf.cast113, !dbg !5454
  call void @llvm.dbg.value(metadata i8 %or, metadata !5374, metadata !DIExpression()), !dbg !5392
  %group_representative = getelementptr inbounds %struct.access, %struct.access* %call85, i64 0, i32 7, !dbg !5461
  store %struct.access* %call17, %struct.access** %group_representative, align 8, !dbg !5462
  %inc = add nsw i32 %j.0, 1, !dbg !5463
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5359, metadata !DIExpression()), !dbg !5379
  br label %cleanup, !dbg !5464

cleanup:                                          ; preds = %lor.lhs.false90, %while.body78, %if.end108
  %grp_read.3 = phi i8 [ %grp_read.2, %if.end108 ], [ %grp_read.0, %lor.lhs.false90 ], [ %grp_read.0, %while.body78 ], !dbg !5429
  %grp_write.2 = phi i8 [ %grp_write.1, %if.end108 ], [ %grp_write.0, %lor.lhs.false90 ], [ %grp_write.0, %while.body78 ], !dbg !5392
  %multiple_reads.3 = phi i8 [ %multiple_reads.2, %if.end108 ], [ %multiple_reads.0, %lor.lhs.false90 ], [ %multiple_reads.0, %while.body78 ], !dbg !5431
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end108 ], [ false, %lor.lhs.false90 ], [ false, %while.body78 ]
  %total_scalarization.1 = phi i8 [ %or130, %if.end108 ], [ %total_scalarization.0, %lor.lhs.false90 ], [ %total_scalarization.0, %while.body78 ], !dbg !5392
  %grp_partial_lhs.1 = phi i8 [ %or, %if.end108 ], [ %grp_partial_lhs.0, %lor.lhs.false90 ], [ %grp_partial_lhs.0, %while.body78 ], !dbg !5392
  %j.1 = phi i32 [ %inc, %if.end108 ], [ %j.0, %lor.lhs.false90 ], [ %j.0, %while.body78 ], !dbg !5392
  %unscalarizable_region.1 = phi i8 [ %or122, %if.end108 ], [ %unscalarizable_region.0, %lor.lhs.false90 ], [ %unscalarizable_region.0, %while.body78 ], !dbg !5392
  call void @llvm.dbg.value(metadata i8 %unscalarizable_region.1, metadata !5376, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !5359, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %grp_partial_lhs.1, metadata !5374, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %total_scalarization.1, metadata !5373, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %multiple_reads.3, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_write.2, metadata !5370, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.3, metadata !5371, metadata !DIExpression()), !dbg !5392
  br i1 %cleanup.dest.slot.0, label %while.cond75, label %while.end.us-lcssa, !llvm.loop !5465

while.end.us-lcssa:                               ; preds = %while.cond75, %cleanup
  %grp_read.4.ph = phi i8 [ %grp_read.0, %while.cond75 ], [ %grp_read.3, %cleanup ]
  %grp_write.3.ph = phi i8 [ %grp_write.0, %while.cond75 ], [ %grp_write.2, %cleanup ]
  %multiple_reads.4.ph = phi i8 [ %multiple_reads.0, %while.cond75 ], [ %multiple_reads.3, %cleanup ]
  %total_scalarization.2.ph = phi i8 [ %total_scalarization.0, %while.cond75 ], [ %total_scalarization.1, %cleanup ]
  %grp_partial_lhs.2.ph = phi i8 [ %grp_partial_lhs.0, %while.cond75 ], [ %grp_partial_lhs.1, %cleanup ]
  %j.2.ph = phi i32 [ %j.0, %while.cond75 ], [ %j.1, %cleanup ]
  %unscalarizable_region.2.ph = phi i8 [ %unscalarizable_region.0, %while.cond75 ], [ %unscalarizable_region.1, %cleanup ]
  br label %while.end, !dbg !5466

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %grp_read.4 = phi i8 [ %grp_read.4.ph, %while.end.us-lcssa ], [ %grp_read.4.ph.us, %while.end.us-lcssa.us ], !dbg !5429
  %grp_write.3 = phi i8 [ %grp_write.3.ph, %while.end.us-lcssa ], [ %grp_write.3.ph.us, %while.end.us-lcssa.us ], !dbg !5430
  %multiple_reads.4 = phi i8 [ %multiple_reads.4.ph, %while.end.us-lcssa ], [ %multiple_reads.4.ph.us, %while.end.us-lcssa.us ], !dbg !5431
  %total_scalarization.2 = phi i8 [ %total_scalarization.2.ph, %while.end.us-lcssa ], [ %total_scalarization.2.ph.us, %while.end.us-lcssa.us ], !dbg !5432
  %grp_partial_lhs.2 = phi i8 [ %grp_partial_lhs.2.ph, %while.end.us-lcssa ], [ %grp_partial_lhs.2.ph.us, %while.end.us-lcssa.us ], !dbg !5433
  %j.2 = phi i32 [ %j.2.ph, %while.end.us-lcssa ], [ %j.2.ph.us, %while.end.us-lcssa.us ], !dbg !5434
  %unscalarizable_region.2 = phi i8 [ %unscalarizable_region.2.ph, %while.end.us-lcssa ], [ %unscalarizable_region.2.ph.us, %while.end.us-lcssa.us ], !dbg !5435
  call void @llvm.dbg.value(metadata i8 %unscalarizable_region.2, metadata !5376, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !5359, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 %grp_partial_lhs.2, metadata !5374, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %total_scalarization.2, metadata !5373, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %multiple_reads.4, metadata !5372, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_write.3, metadata !5370, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8 %grp_read.4, metadata !5371, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !5358, metadata !DIExpression()), !dbg !5379
  %group_representative142 = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 7, !dbg !5466
  store %struct.access* %call17, %struct.access** %group_representative142, align 8, !dbg !5467
  %bf.load145 = load i16, i16* %write, align 8, !dbg !5468
  %28 = shl i8 %grp_write.3, 3, !dbg !5468
  %29 = and i8 %28, 8, !dbg !5468
  %bf.shl = zext i8 %29 to i16, !dbg !5468
  %bf.clear146 = and i16 %bf.load145, -697, !dbg !5468
  %bf.set = or i16 %bf.clear146, %bf.shl, !dbg !5468
  %30 = shl i8 %grp_read.4, 4, !dbg !5469
  %31 = and i8 %30, 16, !dbg !5469
  %bf.shl151 = zext i8 %31 to i16, !dbg !5469
  %bf.set153 = or i16 %bf.set, %bf.shl151, !dbg !5469
  %32 = or i8 %total_scalarization.2, %multiple_reads.4, !dbg !5470
  %33 = icmp ne i8 %32, 0, !dbg !5470
  %34 = zext i1 %33 to i16, !dbg !5471
  %bf.shl161 = shl nuw nsw i16 %34, 5, !dbg !5471
  %bf.set163 = or i16 %bf.set153, %bf.shl161, !dbg !5471
  %35 = and i8 %grp_partial_lhs.2, 1, !dbg !5472
  %bf.value168 = zext i8 %35 to i16, !dbg !5472
  %bf.shl169 = shl nuw nsw i16 %bf.value168, 9, !dbg !5472
  %bf.set171 = or i16 %bf.set163, %bf.shl169, !dbg !5472
  %36 = shl i8 %unscalarizable_region.2, 7, !dbg !5473
  %bf.shl177 = zext i8 %36 to i16, !dbg !5473
  %bf.set179 = or i16 %bf.set171, %bf.shl177, !dbg !5473
  store i16 %bf.set179, i16* %write, align 8, !dbg !5473
  %first_link = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 10, !dbg !5474
  %37 = load %struct.assign_link*, %struct.assign_link** %first_link, align 8, !dbg !5474
  %tobool181 = icmp eq %struct.assign_link* %37, null, !dbg !5476
  br i1 %tobool181, label %if.end183, label %if.then182, !dbg !5477

if.then182:                                       ; preds = %while.end
  tail call fastcc void @add_access_to_work_queue(%struct.access* %call17) #7, !dbg !5478
  br label %if.end183, !dbg !5478

if.end183:                                        ; preds = %while.end, %if.then182
  store %struct.access* %call17, %struct.access** %prev_acc_ptr.0, align 8, !dbg !5479
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 6, !dbg !5480
  call void @llvm.dbg.value(metadata %struct.access** %next_grp, metadata !5362, metadata !DIExpression()), !dbg !5379
  br label %cleanup184, !dbg !5481

cleanup184:                                       ; preds = %land.lhs.true, %if.end183
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end183 ], [ false, %land.lhs.true ]
  %high.2 = phi i64 [ %high.1, %if.end183 ], [ %high.0, %land.lhs.true ], !dbg !5379
  %low.2 = phi i64 [ %low.1, %if.end183 ], [ %low.0, %land.lhs.true ], !dbg !5379
  %prev_acc_ptr.1 = phi %struct.access** [ %next_grp, %if.end183 ], [ %prev_acc_ptr.0, %land.lhs.true ], !dbg !5379
  %i.1 = phi i32 [ %j.2, %if.end183 ], [ %i.0, %land.lhs.true ], !dbg !5379
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5358, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata %struct.access** %prev_acc_ptr.1, metadata !5362, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8 0, metadata !5365, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 %low.2, metadata !5366, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i64 %high.2, metadata !5367, metadata !DIExpression()), !dbg !5379
  br i1 %cleanup.dest.slot.1, label %while.cond, label %cleanup208.loopexit, !llvm.loop !5482

while.end194:                                     ; preds = %while.cond
  %38 = load %struct.access*, %struct.access** %res, align 8, !dbg !5483
  call void @llvm.dbg.value(metadata %struct.access* %38, metadata !5361, metadata !DIExpression()), !dbg !5379
  %call201 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* nonnull %base, i32 0) #7, !dbg !5483
  %cmp202 = icmp eq %struct.access* %38, %call201, !dbg !5483
  br i1 %cmp202, label %cond.end206, label %cond.true204, !dbg !5483

cond.true204:                                     ; preds = %while.end194
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5483
  br label %cond.end206, !dbg !5483

cond.end206:                                      ; preds = %while.end194, %cond.true204
  call void @llvm.dbg.value(metadata %struct.access* %38, metadata !5361, metadata !DIExpression()), !dbg !5379
  br label %cleanup208, !dbg !5484

cleanup208.loopexit:                              ; preds = %cleanup184
  br label %cleanup208, !dbg !5485

cleanup208:                                       ; preds = %cleanup208.loopexit, %entry, %cond.end206
  %retval.2 = phi %struct.access* [ %38, %cond.end206 ], [ null, %entry ], [ null, %cleanup208.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5485
  ret %struct.access* %retval.2, !dbg !5485
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_access_trees(%struct.access* %access) unnamed_addr #5 !dbg !5486 {
entry:
  %access.addr = alloca %struct.access*, align 8
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !5490, metadata !DIExpression()), !dbg !5493
  store %struct.access* %access, %struct.access** %access.addr, align 8
  %0 = bitcast %struct.access** %access.addr to i64*, !dbg !5494
  br label %while.cond, !dbg !5495

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi %struct.access* [ %5, %while.body ], [ %access, %entry ]
  %2 = phi %struct.access* [ %5, %while.body ], [ %access, %entry ], !dbg !5496
  call void @llvm.dbg.value(metadata %struct.access* %2, metadata !5490, metadata !DIExpression()), !dbg !5493
  %tobool = icmp eq %struct.access* %2, null, !dbg !5495
  br i1 %tobool, label %while.end, label %while.body, !dbg !5495

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.access* %1, metadata !5490, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.access* %1, metadata !5491, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata %struct.access** %access.addr, metadata !5490, metadata !DIExpression(DW_OP_deref)), !dbg !5493
  call fastcc void @build_access_subtree(%struct.access** nonnull %access.addr) #7, !dbg !5497
  %3 = load i64, i64* %0, align 8, !dbg !5498
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %1, i64 0, i32 6, !dbg !5499
  %4 = bitcast %struct.access** %next_grp to i64*, !dbg !5500
  store i64 %3, i64* %4, align 8, !dbg !5500
  %5 = inttoptr i64 %3 to %struct.access*, !dbg !5495
  br label %while.cond, !dbg !5495, !llvm.loop !5501

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5503
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_all_subaccesses() unnamed_addr #5 !dbg !5504 {
entry:
  br label %while.cond, !dbg !5513

while.cond.loopexit:                              ; preds = %for.cond
  br label %while.cond, !dbg !5513

while.cond:                                       ; preds = %while.cond.loopexit, %entry
  %0 = load %struct.access*, %struct.access** @work_queue_head, align 8, !dbg !5514
  %tobool = icmp eq %struct.access* %0, null, !dbg !5513
  br i1 %tobool, label %while.end, label %while.body, !dbg !5513

while.body:                                       ; preds = %while.cond
  %call = tail call fastcc %struct.access* @pop_access_from_work_queue() #7, !dbg !5515
  call void @llvm.dbg.value(metadata %struct.access* %call, metadata !5506, metadata !DIExpression()), !dbg !5516
  %first_link = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 10, !dbg !5517
  %1 = load %struct.assign_link*, %struct.assign_link** %first_link, align 8, !dbg !5517
  %tobool1 = icmp eq %struct.assign_link* %1, null, !dbg !5517
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !5517

cond.true:                                        ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 2020, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5517
  br label %cond.end, !dbg !5517

cond.end:                                         ; preds = %while.body, %cond.true
  br label %for.cond, !dbg !5518

for.cond:                                         ; preds = %cleanup, %cond.end
  %link.0.in = phi %struct.assign_link** [ %first_link, %cond.end ], [ %next, %cleanup ]
  %link.0 = load %struct.assign_link*, %struct.assign_link** %link.0.in, align 8, !dbg !5519
  call void @llvm.dbg.value(metadata %struct.assign_link* %link.0, metadata !5508, metadata !DIExpression()), !dbg !5516
  %tobool3 = icmp eq %struct.assign_link* %link.0, null, !dbg !5520
  br i1 %tobool3, label %while.cond.loopexit, label %for.body, !dbg !5520, !llvm.loop !5521

for.body:                                         ; preds = %for.cond
  %lacc4 = getelementptr inbounds %struct.assign_link, %struct.assign_link* %link.0, i64 0, i32 0, !dbg !5523
  %2 = load %struct.access*, %struct.access** %lacc4, align 8, !dbg !5523
  call void @llvm.dbg.value(metadata %struct.access* %2, metadata !5509, metadata !DIExpression()), !dbg !5524
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !5525
  %base = getelementptr inbounds %struct.access, %struct.access* %2, i64 0, i32 2, !dbg !5527
  %4 = bitcast %union.tree_node** %base to %struct.tree_decl_minimal**, !dbg !5527
  %5 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %4, align 8, !dbg !5527
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %5, i64 0, i32 2, !dbg !5527
  %6 = load i32, i32* %uid, align 4, !dbg !5527
  %call5 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %3, i32 %6) #6, !dbg !5528
  %tobool6 = icmp eq i32 %call5, 0, !dbg !5528
  br i1 %tobool6, label %cleanup, label %if.end, !dbg !5529

if.end:                                           ; preds = %for.body
  %group_representative = getelementptr inbounds %struct.access, %struct.access* %2, i64 0, i32 7, !dbg !5530
  %7 = load %struct.access*, %struct.access** %group_representative, align 8, !dbg !5530
  call void @llvm.dbg.value(metadata %struct.access* %7, metadata !5509, metadata !DIExpression()), !dbg !5524
  %call7 = tail call fastcc zeroext i8 @propagate_subaccesses_across_link(%struct.access* %7, %struct.access* %call) #7, !dbg !5531
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5531
  br i1 %tobool8, label %cleanup, label %land.lhs.true, !dbg !5533

land.lhs.true:                                    ; preds = %if.end
  %first_link9 = getelementptr inbounds %struct.access, %struct.access* %7, i64 0, i32 10, !dbg !5534
  %8 = load %struct.assign_link*, %struct.assign_link** %first_link9, align 8, !dbg !5534
  %tobool10 = icmp eq %struct.assign_link* %8, null, !dbg !5535
  br i1 %tobool10, label %cleanup, label %if.then11, !dbg !5536

if.then11:                                        ; preds = %land.lhs.true
  tail call fastcc void @add_access_to_work_queue(%struct.access* %7) #7, !dbg !5537
  br label %cleanup, !dbg !5537

cleanup:                                          ; preds = %land.lhs.true, %if.end, %for.body, %if.then11
  %next = getelementptr inbounds %struct.assign_link, %struct.assign_link* %link.0, i64 0, i32 2, !dbg !5538
  br label %for.cond, !dbg !5539, !llvm.loop !5540

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5542
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @get_first_repr_for_decl(%union.tree_node* %base) unnamed_addr #5 !dbg !5543 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !5545, metadata !DIExpression()), !dbg !5547
  %call = tail call fastcc %struct.VEC_access_p_heap* @get_base_access_vector(%union.tree_node* %base) #7, !dbg !5548
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %call, metadata !5546, metadata !DIExpression()), !dbg !5547
  %tobool = icmp eq %struct.VEC_access_p_heap* %call, null, !dbg !5549
  br i1 %tobool, label %cleanup, label %cond.true, !dbg !5551

cond.true:                                        ; preds = %entry
  %base2 = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %call, i64 0, i32 0, !dbg !5552
  %call3 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* nonnull %base2, i32 0) #7, !dbg !5552
  br label %cleanup, !dbg !5553

cleanup:                                          ; preds = %entry, %cond.true
  %retval.0 = phi %struct.access* [ %call3, %cond.true ], [ null, %entry ], !dbg !5547
  ret %struct.access* %retval.0, !dbg !5554
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @analyze_access_trees(%struct.access* %access) unnamed_addr #5 !dbg !5555 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !5559, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i8 0, metadata !5560, metadata !DIExpression()), !dbg !5561
  br label %while.cond, !dbg !5562

while.cond:                                       ; preds = %while.body, %entry
  %ret.0 = phi i8 [ 0, %entry ], [ %spec.select, %while.body ], !dbg !5561
  %access.addr.0 = phi %struct.access* [ %access, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0, metadata !5559, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !5560, metadata !DIExpression()), !dbg !5561
  %tobool = icmp eq %struct.access* %access.addr.0, null, !dbg !5562
  br i1 %tobool, label %while.end, label %while.body, !dbg !5562

while.body:                                       ; preds = %while.cond
  %call = tail call fastcc zeroext i8 @analyze_access_subtree(%struct.access* nonnull %access.addr.0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #7, !dbg !5563
  %tobool1 = icmp eq i8 %call, 0, !dbg !5563
  %spec.select = select i1 %tobool1, i8 %ret.0, i8 1, !dbg !5566
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !5560, metadata !DIExpression()), !dbg !5561
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 6, !dbg !5567
  %0 = load %struct.access*, %struct.access** %next_grp, align 8, !dbg !5567
  call void @llvm.dbg.value(metadata %struct.access* %0, metadata !5559, metadata !DIExpression()), !dbg !5561
  br label %while.cond, !dbg !5562, !llvm.loop !5568

while.end:                                        ; preds = %while.cond
  %ret.0.lcssa = phi i8 [ %ret.0, %while.cond ], !dbg !5561
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !5560, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !5560, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !5560, metadata !DIExpression()), !dbg !5561
  ret i8 %ret.0.lcssa, !dbg !5570
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_access_tree(%struct._IO_FILE* %f, %struct.access* %access) unnamed_addr #5 !dbg !5571 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !5575, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !5576, metadata !DIExpression()), !dbg !5577
  br label %for.cond, !dbg !5578

for.cond:                                         ; preds = %for.body, %entry
  %access.addr.0 = phi %struct.access* [ %access, %entry ], [ %0, %for.body ]
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0, metadata !5576, metadata !DIExpression()), !dbg !5577
  %tobool = icmp eq %struct.access* %access.addr.0, null, !dbg !5579
  br i1 %tobool, label %for.end, label %for.body, !dbg !5579

for.body:                                         ; preds = %for.cond
  tail call fastcc void @dump_access_tree_1(%struct._IO_FILE* %f, %struct.access* nonnull %access.addr.0, i32 0) #7, !dbg !5581
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 6, !dbg !5583
  %0 = load %struct.access*, %struct.access** %next_grp, align 8, !dbg !5583
  call void @llvm.dbg.value(metadata %struct.access* %0, metadata !5576, metadata !DIExpression()), !dbg !5577
  br label %for.cond, !dbg !5584, !llvm.loop !5585

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5587
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_access_p_heap* @get_base_access_vector(%union.tree_node* %base) unnamed_addr #5 !dbg !5588 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !5592, metadata !DIExpression()), !dbg !5594
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @base_access_vec, align 8, !dbg !5595
  %1 = bitcast %union.tree_node* %base to i8*, !dbg !5596
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !5597
  call void @llvm.dbg.value(metadata i8** %call, metadata !5593, metadata !DIExpression()), !dbg !5594
  %tobool = icmp eq i8** %call, null, !dbg !5598
  br i1 %tobool, label %cleanup, label %if.else, !dbg !5600

if.else:                                          ; preds = %entry
  %2 = bitcast i8** %call to %struct.VEC_access_p_heap**, !dbg !5601
  %3 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %2, align 8, !dbg !5601
  br label %cleanup, !dbg !5602

cleanup:                                          ; preds = %entry, %if.else
  %retval.0 = phi %struct.VEC_access_p_heap* [ %3, %if.else ], [ null, %entry ], !dbg !5603
  ret %struct.VEC_access_p_heap* %retval.0, !dbg !5604
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_access_p_base_length(%struct.VEC_access_p_base* %vec_) unnamed_addr #0 !dbg !5605 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_base* %vec_, metadata !5611, metadata !DIExpression()), !dbg !5612
  %tobool = icmp eq %struct.VEC_access_p_base* %vec_, null, !dbg !5613
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5613

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_access_p_base, %struct.VEC_access_p_base* %vec_, i64 0, i32 0, !dbg !5613
  %0 = load i32, i32* %num, align 8, !dbg !5613
  br label %cond.end, !dbg !5613

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5613
  ret i32 %cond, !dbg !5613
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.access** @VEC_access_p_base_address(%struct.VEC_access_p_base* %vec_) unnamed_addr #0 !dbg !5614 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_base* %vec_, metadata !5618, metadata !DIExpression()), !dbg !5619
  %tobool = icmp eq %struct.VEC_access_p_base* %vec_, null, !dbg !5620
  %arraydecay = getelementptr inbounds %struct.VEC_access_p_base, %struct.VEC_access_p_base* %vec_, i64 0, i32 2, i64 0, !dbg !5620
  %cond = select i1 %tobool, %struct.access** null, %struct.access** %arraydecay, !dbg !5620
  ret %struct.access** %cond, !dbg !5620
}

; Function Attrs: nounwind uwtable
define internal i32 @compare_access_positions(i8* %a, i8* %b) #5 !dbg !5621 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !5623, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i8* %b, metadata !5624, metadata !DIExpression()), !dbg !5629
  %0 = bitcast i8* %a to %struct.access**, !dbg !5630
  call void @llvm.dbg.value(metadata %struct.access** %0, metadata !5625, metadata !DIExpression()), !dbg !5629
  %1 = bitcast i8* %b to %struct.access**, !dbg !5631
  call void @llvm.dbg.value(metadata %struct.access** %1, metadata !5626, metadata !DIExpression()), !dbg !5629
  %2 = load %struct.access*, %struct.access** %0, align 8, !dbg !5632
  call void @llvm.dbg.value(metadata %struct.access* %2, metadata !5627, metadata !DIExpression()), !dbg !5629
  %3 = load %struct.access*, %struct.access** %1, align 8, !dbg !5633
  call void @llvm.dbg.value(metadata %struct.access* %3, metadata !5628, metadata !DIExpression()), !dbg !5629
  %offset = getelementptr inbounds %struct.access, %struct.access* %2, i64 0, i32 0, !dbg !5634
  %4 = load i64, i64* %offset, align 8, !dbg !5634
  %offset1 = getelementptr inbounds %struct.access, %struct.access* %3, i64 0, i32 0, !dbg !5636
  %5 = load i64, i64* %offset1, align 8, !dbg !5636
  %cmp = icmp eq i64 %4, %5, !dbg !5637
  br i1 %cmp, label %if.end, label %if.then, !dbg !5638

if.then:                                          ; preds = %entry
  %cmp4 = icmp slt i64 %4, %5, !dbg !5639
  %cond = select i1 %cmp4, i32 -1, i32 1, !dbg !5640
  br label %cleanup, !dbg !5641

if.end:                                           ; preds = %entry
  %size = getelementptr inbounds %struct.access, %struct.access* %2, i64 0, i32 1, !dbg !5642
  %6 = load i64, i64* %size, align 8, !dbg !5642
  %size5 = getelementptr inbounds %struct.access, %struct.access* %3, i64 0, i32 1, !dbg !5644
  %7 = load i64, i64* %size5, align 8, !dbg !5644
  %cmp6 = icmp eq i64 %6, %7, !dbg !5645
  br i1 %cmp6, label %if.then7, label %if.end237, !dbg !5646

if.then7:                                         ; preds = %if.end
  %type = getelementptr inbounds %struct.access, %struct.access* %2, i64 0, i32 4, !dbg !5647
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5647
  %type8 = getelementptr inbounds %struct.access, %struct.access* %3, i64 0, i32 4, !dbg !5650
  %9 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5650
  %cmp9 = icmp eq %union.tree_node* %8, %9, !dbg !5651
  br i1 %cmp9, label %cleanup, label %if.else, !dbg !5652

if.else:                                          ; preds = %if.then7
  %call = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %8) #6, !dbg !5653
  %tobool = icmp eq i8 %call, 0, !dbg !5653
  br i1 %tobool, label %land.lhs.true, label %if.else16, !dbg !5655

land.lhs.true:                                    ; preds = %if.else
  %10 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5656
  %call13 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %10) #6, !dbg !5657
  %tobool14 = icmp eq i8 %call13, 0, !dbg !5657
  br i1 %tobool14, label %if.else16, label %cleanup, !dbg !5658

if.else16:                                        ; preds = %land.lhs.true, %if.else
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5659
  %call18 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %11) #6, !dbg !5661
  %tobool20 = icmp eq i8 %call18, 0, !dbg !5661
  br i1 %tobool20, label %if.else26, label %land.lhs.true21, !dbg !5662

land.lhs.true21:                                  ; preds = %if.else16
  %12 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5663
  %call23 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %12) #6, !dbg !5664
  %tobool24 = icmp eq i8 %call23, 0, !dbg !5664
  br i1 %tobool24, label %cleanup, label %if.else26, !dbg !5665

if.else26:                                        ; preds = %land.lhs.true21, %if.else16
  %13 = bitcast %union.tree_node** %type to i64**, !dbg !5666
  %14 = load i64*, i64** %13, align 8, !dbg !5666
  %bf.load = load i64, i64* %14, align 8, !dbg !5666
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5668
  %cmp28 = icmp eq i64 %bf.cast1, 13, !dbg !5668
  %15 = bitcast i64* %14 to %struct.tree_type*, !dbg !5669
  br i1 %cmp28, label %if.else54, label %land.lhs.true30, !dbg !5669

land.lhs.true30:                                  ; preds = %if.else26
  %cmp36 = icmp eq i64 %bf.cast1, 14, !dbg !5670
  br i1 %cmp36, label %if.else54, label %land.lhs.true38, !dbg !5671

land.lhs.true38:                                  ; preds = %land.lhs.true30
  %16 = bitcast %union.tree_node** %type8 to i64**, !dbg !5672
  %17 = load i64*, i64** %16, align 8, !dbg !5672
  %bf.load41 = load i64, i64* %17, align 8, !dbg !5672
  %bf.cast4319 = and i64 %bf.load41, 65535, !dbg !5673
  %cmp44 = icmp eq i64 %bf.cast4319, 13, !dbg !5673
  br i1 %cmp44, label %cleanup, label %lor.lhs.false, !dbg !5674

lor.lhs.false:                                    ; preds = %land.lhs.true38
  %cmp51 = icmp eq i64 %bf.cast4319, 14, !dbg !5675
  br i1 %cmp51, label %cleanup, label %if.else54, !dbg !5676

if.else54:                                        ; preds = %land.lhs.true30, %if.else26, %lor.lhs.false
  br i1 %cmp28, label %land.lhs.true70, label %lor.lhs.false62, !dbg !5677

lor.lhs.false62:                                  ; preds = %if.else54
  %cmp68 = icmp eq i64 %bf.cast1, 14, !dbg !5679
  br i1 %cmp68, label %land.lhs.true70, label %if.else87, !dbg !5680

land.lhs.true70:                                  ; preds = %lor.lhs.false62, %if.else54
  %18 = bitcast %union.tree_node** %type8 to i64**, !dbg !5681
  %19 = load i64*, i64** %18, align 8, !dbg !5681
  %bf.load73 = load i64, i64* %19, align 8, !dbg !5681
  %bf.cast7516 = and i64 %bf.load73, 65535, !dbg !5682
  %cmp76 = icmp eq i64 %bf.cast7516, 13, !dbg !5682
  br i1 %cmp76, label %if.else87, label %land.lhs.true78, !dbg !5683

land.lhs.true78:                                  ; preds = %land.lhs.true70
  %cmp84 = icmp eq i64 %bf.cast7516, 14, !dbg !5684
  br i1 %cmp84, label %if.else87, label %cleanup, !dbg !5685

if.else87:                                        ; preds = %land.lhs.true78, %land.lhs.true70, %lor.lhs.false62
  %cmp93 = icmp eq i64 %bf.cast1, 6, !dbg !5686
  br i1 %cmp93, label %land.lhs.true111, label %lor.lhs.false95, !dbg !5686

lor.lhs.false95:                                  ; preds = %if.else87
  %cmp101 = icmp eq i64 %bf.cast1, 7, !dbg !5686
  br i1 %cmp101, label %land.lhs.true111, label %lor.lhs.false103, !dbg !5686

lor.lhs.false103:                                 ; preds = %lor.lhs.false95
  %cmp109 = icmp eq i64 %bf.cast1, 8, !dbg !5686
  br i1 %cmp109, label %land.lhs.true111, label %if.else145, !dbg !5688

land.lhs.true111:                                 ; preds = %lor.lhs.false103, %lor.lhs.false95, %if.else87
  %20 = bitcast %union.tree_node** %type8 to i64**, !dbg !5689
  %21 = load i64*, i64** %20, align 8, !dbg !5689
  %bf.load114 = load i64, i64* %21, align 8, !dbg !5689
  %bf.cast11613 = and i64 %bf.load114, 65535, !dbg !5689
  %cmp117 = icmp eq i64 %bf.cast11613, 6, !dbg !5689
  %22 = bitcast i64* %21 to %struct.tree_type*, !dbg !5689
  br i1 %cmp117, label %if.then135, label %lor.lhs.false119, !dbg !5689

lor.lhs.false119:                                 ; preds = %land.lhs.true111
  %cmp125 = icmp eq i64 %bf.cast11613, 7, !dbg !5689
  br i1 %cmp125, label %if.then135, label %lor.lhs.false127, !dbg !5689

lor.lhs.false127:                                 ; preds = %lor.lhs.false119
  %cmp133 = icmp eq i64 %bf.cast11613, 8, !dbg !5689
  br i1 %cmp133, label %if.then135, label %if.else145, !dbg !5690

if.then135:                                       ; preds = %lor.lhs.false127, %lor.lhs.false119, %land.lhs.true111
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 6, !dbg !5691
  %bf.load138 = load i32, i32* %precision, align 4, !dbg !5691
  %bf.clear139 = and i32 %bf.load138, 1023, !dbg !5691
  %precision142 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 6, !dbg !5692
  %bf.load143 = load i32, i32* %precision142, align 4, !dbg !5692
  %bf.clear144 = and i32 %bf.load143, 1023, !dbg !5692
  %sub = sub nsw i32 %bf.clear139, %bf.clear144, !dbg !5693
  br label %cleanup, !dbg !5694

if.else145:                                       ; preds = %lor.lhs.false127, %lor.lhs.false103
  br i1 %cmp93, label %land.lhs.true169, label %lor.lhs.false153, !dbg !5695

lor.lhs.false153:                                 ; preds = %if.else145
  %cmp159 = icmp eq i64 %bf.cast1, 7, !dbg !5695
  br i1 %cmp159, label %land.lhs.true169, label %lor.lhs.false161, !dbg !5695

lor.lhs.false161:                                 ; preds = %lor.lhs.false153
  %cmp167 = icmp eq i64 %bf.cast1, 8, !dbg !5695
  br i1 %cmp167, label %land.lhs.true169, label %if.else183, !dbg !5697

land.lhs.true169:                                 ; preds = %lor.lhs.false161, %lor.lhs.false153, %if.else145
  %size172 = getelementptr inbounds i64, i64* %14, i64 4, !dbg !5698
  %23 = bitcast i64* %size172 to %struct.tree_int_cst**, !dbg !5698
  %24 = load %struct.tree_int_cst*, %struct.tree_int_cst** %23, align 8, !dbg !5698
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %24, i64 0, i32 1, i32 0, !dbg !5698
  %25 = load i64, i64* %low, align 8, !dbg !5698
  %precision176 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 6, !dbg !5699
  %bf.load177 = load i32, i32* %precision176, align 4, !dbg !5699
  %bf.clear178 = and i32 %bf.load177, 1023, !dbg !5699
  %conv179 = zext i32 %bf.clear178 to i64, !dbg !5699
  %cmp180 = icmp eq i64 %25, %conv179, !dbg !5700
  br i1 %cmp180, label %if.else183, label %cleanup, !dbg !5701

if.else183:                                       ; preds = %land.lhs.true169, %lor.lhs.false161
  %26 = bitcast %union.tree_node** %type8 to i64**, !dbg !5702
  %27 = load i64*, i64** %26, align 8, !dbg !5702
  %bf.load186 = load i64, i64* %27, align 8, !dbg !5702
  %bf.cast18810 = and i64 %bf.load186, 65535, !dbg !5702
  %cmp189 = icmp eq i64 %bf.cast18810, 6, !dbg !5702
  %28 = bitcast i64* %27 to %struct.tree_type*, !dbg !5702
  br i1 %cmp189, label %land.lhs.true207, label %lor.lhs.false191, !dbg !5702

lor.lhs.false191:                                 ; preds = %if.else183
  %cmp197 = icmp eq i64 %bf.cast18810, 7, !dbg !5702
  br i1 %cmp197, label %land.lhs.true207, label %lor.lhs.false199, !dbg !5702

lor.lhs.false199:                                 ; preds = %lor.lhs.false191
  %cmp205 = icmp eq i64 %bf.cast18810, 8, !dbg !5702
  br i1 %cmp205, label %land.lhs.true207, label %lor.lhs.false199.if.end230_crit_edge, !dbg !5704

lor.lhs.false199.if.end230_crit_edge:             ; preds = %lor.lhs.false199
  br label %if.end230, !dbg !5704

land.lhs.true207:                                 ; preds = %lor.lhs.false199, %lor.lhs.false191, %if.else183
  %size210 = getelementptr inbounds i64, i64* %27, i64 4, !dbg !5705
  %29 = bitcast i64* %size210 to %struct.tree_int_cst**, !dbg !5705
  %30 = load %struct.tree_int_cst*, %struct.tree_int_cst** %29, align 8, !dbg !5705
  %low213 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %30, i64 0, i32 1, i32 0, !dbg !5705
  %31 = load i64, i64* %low213, align 8, !dbg !5705
  %precision216 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %28, i64 0, i32 6, !dbg !5706
  %bf.load217 = load i32, i32* %precision216, align 4, !dbg !5706
  %bf.clear218 = and i32 %bf.load217, 1023, !dbg !5706
  %conv219 = zext i32 %bf.clear218 to i64, !dbg !5706
  %cmp220 = icmp eq i64 %31, %conv219, !dbg !5707
  br i1 %cmp220, label %if.end230, label %cleanup, !dbg !5708

if.end230:                                        ; preds = %lor.lhs.false199.if.end230_crit_edge, %land.lhs.true207
  %uid = getelementptr inbounds i64, i64* %14, i64 7, !dbg !5709
  %32 = bitcast i64* %uid to i32*, !dbg !5709
  %33 = load i32, i32* %32, align 8, !dbg !5709
  %uid235 = getelementptr inbounds i64, i64* %27, i64 7, !dbg !5710
  %34 = bitcast i64* %uid235 to i32*, !dbg !5710
  %35 = load i32, i32* %34, align 8, !dbg !5710
  %sub236 = sub i32 %33, %35, !dbg !5711
  br label %cleanup, !dbg !5712

if.end237:                                        ; preds = %if.end
  %cmp240 = icmp sgt i64 %6, %7, !dbg !5713
  %cond242 = select i1 %cmp240, i32 -1, i32 1, !dbg !5714
  br label %cleanup, !dbg !5715

cleanup:                                          ; preds = %land.lhs.true21, %land.lhs.true78, %land.lhs.true169, %land.lhs.true207, %land.lhs.true, %land.lhs.true38, %lor.lhs.false, %if.then7, %if.end237, %if.end230, %if.then135, %if.then
  %retval.0 = phi i32 [ %cond, %if.then ], [ %sub, %if.then135 ], [ %sub236, %if.end230 ], [ %cond242, %if.end237 ], [ 0, %if.then7 ], [ 1, %land.lhs.true ], [ -1, %land.lhs.true21 ], [ 1, %lor.lhs.false ], [ 1, %land.lhs.true38 ], [ -1, %land.lhs.true78 ], [ 1, %land.lhs.true169 ], [ -1, %land.lhs.true207 ], !dbg !5629
  ret i32 %retval.0, !dbg !5716
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5717 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_base* %vec_, metadata !5721, metadata !DIExpression()), !dbg !5723
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5722, metadata !DIExpression()), !dbg !5723
  br label %land.end, !dbg !5724

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5724
  %arrayidx = getelementptr inbounds %struct.VEC_access_p_base, %struct.VEC_access_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5724
  %0 = load %struct.access*, %struct.access** %arrayidx, align 8, !dbg !5724
  ret %struct.access* %0, !dbg !5724
}

; Function Attrs: nounwind uwtable
define internal fastcc void @relink_to_new_repr(%struct.access* %new_racc, %struct.access* %old_racc) unnamed_addr #5 !dbg !5725 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %new_racc, metadata !5729, metadata !DIExpression()), !dbg !5731
  call void @llvm.dbg.value(metadata %struct.access* %old_racc, metadata !5730, metadata !DIExpression()), !dbg !5731
  %first_link = getelementptr inbounds %struct.access, %struct.access* %old_racc, i64 0, i32 10, !dbg !5732
  %0 = load %struct.assign_link*, %struct.assign_link** %first_link, align 8, !dbg !5732
  %tobool = icmp eq %struct.assign_link* %0, null, !dbg !5734
  %1 = ptrtoint %struct.assign_link* %0 to i64, !dbg !5735
  br i1 %tobool, label %if.then, label %if.end, !dbg !5735

if.then:                                          ; preds = %entry
  %last_link = getelementptr inbounds %struct.access, %struct.access* %old_racc, i64 0, i32 11, !dbg !5736
  %2 = load %struct.assign_link*, %struct.assign_link** %last_link, align 8, !dbg !5736
  %tobool1 = icmp eq %struct.assign_link* %2, null, !dbg !5736
  br i1 %tobool1, label %return, label %cond.true, !dbg !5736

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 506, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5736
  br label %return, !dbg !5736

if.end:                                           ; preds = %entry
  %first_link2 = getelementptr inbounds %struct.access, %struct.access* %new_racc, i64 0, i32 10, !dbg !5738
  %3 = load %struct.assign_link*, %struct.assign_link** %first_link2, align 8, !dbg !5738
  %tobool3 = icmp eq %struct.assign_link* %3, null, !dbg !5740
  %last_link5 = getelementptr inbounds %struct.access, %struct.access* %new_racc, i64 0, i32 11, !dbg !5741
  %4 = load %struct.assign_link*, %struct.assign_link** %last_link5, align 8, !dbg !5741
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !5742

if.then4:                                         ; preds = %if.end
  %next = getelementptr inbounds %struct.assign_link, %struct.assign_link* %4, i64 0, i32 2, !dbg !5743
  %5 = load %struct.assign_link*, %struct.assign_link** %next, align 8, !dbg !5743
  %tobool6 = icmp eq %struct.assign_link* %5, null, !dbg !5743
  br i1 %tobool6, label %cond.end9, label %cond.true7, !dbg !5743

cond.true7:                                       ; preds = %if.then4
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 512, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5743
  br label %cond.end9, !dbg !5743

cond.end9:                                        ; preds = %if.then4, %cond.true7
  %last_link11 = getelementptr inbounds %struct.access, %struct.access* %old_racc, i64 0, i32 11, !dbg !5745
  %6 = load %struct.assign_link*, %struct.assign_link** %last_link11, align 8, !dbg !5745
  %tobool12 = icmp eq %struct.assign_link* %6, null, !dbg !5745
  br i1 %tobool12, label %cond.end18, label %lor.lhs.false, !dbg !5745

lor.lhs.false:                                    ; preds = %cond.end9
  %next14 = getelementptr inbounds %struct.assign_link, %struct.assign_link* %6, i64 0, i32 2, !dbg !5745
  %7 = load %struct.assign_link*, %struct.assign_link** %next14, align 8, !dbg !5745
  %tobool15 = icmp eq %struct.assign_link* %7, null, !dbg !5745
  br i1 %tobool15, label %cond.end18, label %cond.true16, !dbg !5745

cond.true16:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 513, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5745
  br label %cond.end18, !dbg !5745

cond.end18:                                       ; preds = %lor.lhs.false, %cond.end9, %cond.true16
  %8 = bitcast %struct.assign_link** %first_link to i64*, !dbg !5746
  %9 = load i64, i64* %8, align 8, !dbg !5746
  %10 = load %struct.assign_link*, %struct.assign_link** %last_link5, align 8, !dbg !5747
  %next22 = getelementptr inbounds %struct.assign_link, %struct.assign_link* %10, i64 0, i32 2, !dbg !5748
  %11 = bitcast %struct.assign_link** %next22 to i64*, !dbg !5749
  store i64 %9, i64* %11, align 8, !dbg !5749
  %12 = bitcast %struct.assign_link** %last_link11 to i64*, !dbg !5750
  %13 = load i64, i64* %12, align 8, !dbg !5750
  %14 = bitcast %struct.assign_link** %last_link5 to i64*, !dbg !5751
  store i64 %13, i64* %14, align 8, !dbg !5751
  br label %if.end35, !dbg !5752

if.else:                                          ; preds = %if.end
  %tobool26 = icmp eq %struct.assign_link* %4, null, !dbg !5753
  br i1 %tobool26, label %if.else.cond.end29_crit_edge, label %cond.true27, !dbg !5753

if.else.cond.end29_crit_edge:                     ; preds = %if.else
  br label %cond.end29, !dbg !5753

cond.true27:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 520, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5753
  %.phi.trans.insert = bitcast %struct.assign_link** %first_link to i64*, !dbg !5755
  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !5756
  br label %cond.end29, !dbg !5753

cond.end29:                                       ; preds = %if.else.cond.end29_crit_edge, %cond.true27
  %15 = phi i64 [ %1, %if.else.cond.end29_crit_edge ], [ %.pre, %cond.true27 ], !dbg !5756
  %16 = bitcast %struct.assign_link** %first_link2 to i64*, !dbg !5757
  store i64 %15, i64* %16, align 8, !dbg !5757
  %last_link33 = getelementptr inbounds %struct.access, %struct.access* %old_racc, i64 0, i32 11, !dbg !5758
  %17 = bitcast %struct.assign_link** %last_link33 to i64*, !dbg !5758
  %18 = load i64, i64* %17, align 8, !dbg !5758
  %19 = bitcast %struct.assign_link** %last_link5 to i64*, !dbg !5759
  store i64 %18, i64* %19, align 8, !dbg !5759
  br label %if.end35

if.end35:                                         ; preds = %cond.end29, %cond.end18
  %last_link36 = getelementptr inbounds %struct.access, %struct.access* %old_racc, i64 0, i32 11, !dbg !5760
  store %struct.assign_link* null, %struct.assign_link** %last_link36, align 8, !dbg !5761
  store %struct.assign_link* null, %struct.assign_link** %first_link, align 8, !dbg !5762
  br label %return, !dbg !5763

return:                                           ; preds = %if.then, %cond.true, %if.end35
  ret void, !dbg !5763
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_access_to_work_queue(%struct.access* %access) unnamed_addr #5 !dbg !5764 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !5766, metadata !DIExpression()), !dbg !5767
  %grp_queued = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 14, !dbg !5768
  %bf.load = load i16, i16* %grp_queued, align 8, !dbg !5768
  %bf.clear = and i16 %bf.load, 4, !dbg !5768
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !5770
  br i1 %tobool, label %if.then, label %if.end, !dbg !5771

if.then:                                          ; preds = %entry
  %next_queued = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 12, !dbg !5772
  %0 = load %struct.access*, %struct.access** %next_queued, align 8, !dbg !5772
  %tobool1 = icmp eq %struct.access* %0, null, !dbg !5772
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5772

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 535, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5772
  %bf.load4.pre = load i16, i16* %grp_queued, align 8, !dbg !5774
  br label %cond.end, !dbg !5772

cond.end:                                         ; preds = %if.then, %cond.true
  %bf.load4 = phi i16 [ %bf.load, %if.then ], [ %bf.load4.pre, %cond.true ], !dbg !5774
  %1 = load i64, i64* bitcast (%struct.access** @work_queue_head to i64*), align 8, !dbg !5775
  %2 = bitcast %struct.access** %next_queued to i64*, !dbg !5776
  store i64 %1, i64* %2, align 8, !dbg !5776
  %bf.set = or i16 %bf.load4, 4, !dbg !5774
  store i16 %bf.set, i16* %grp_queued, align 8, !dbg !5774
  store %struct.access* %access, %struct.access** @work_queue_head, align 8, !dbg !5777
  br label %if.end, !dbg !5778

if.end:                                           ; preds = %entry, %cond.end
  ret void, !dbg !5779
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_access_subtree(%struct.access** %access) unnamed_addr #5 !dbg !5780 {
entry:
  call void @llvm.dbg.value(metadata %struct.access** %access, metadata !5784, metadata !DIExpression()), !dbg !5788
  %0 = load %struct.access*, %struct.access** %access, align 8, !dbg !5789
  call void @llvm.dbg.value(metadata %struct.access* %0, metadata !5785, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata %struct.access* null, metadata !5786, metadata !DIExpression()), !dbg !5788
  %offset = getelementptr inbounds %struct.access, %struct.access* %0, i64 0, i32 0, !dbg !5790
  %1 = load i64, i64* %offset, align 8, !dbg !5790
  %size = getelementptr inbounds %struct.access, %struct.access* %0, i64 0, i32 1, !dbg !5791
  %2 = load i64, i64* %size, align 8, !dbg !5791
  %add = add nsw i64 %1, %2, !dbg !5792
  call void @llvm.dbg.value(metadata i64 %add, metadata !5787, metadata !DIExpression()), !dbg !5788
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %0, i64 0, i32 6, !dbg !5793
  %3 = bitcast %struct.access** %next_grp to i64*, !dbg !5793
  %4 = load i64, i64* %3, align 8, !dbg !5793
  %5 = bitcast %struct.access** %access to i64*, !dbg !5794
  store i64 %4, i64* %5, align 8, !dbg !5794
  %first_child = getelementptr inbounds %struct.access, %struct.access* %0, i64 0, i32 8, !dbg !5795
  %6 = bitcast %struct.access** %first_child to i64*, !dbg !5795
  %7 = inttoptr i64 %4 to %struct.access*, !dbg !5798
  br label %while.cond, !dbg !5798

while.cond:                                       ; preds = %if.end, %entry
  %8 = phi i64 [ %4, %entry ], [ %15, %if.end ]
  %9 = phi %struct.access* [ %7, %entry ], [ %.pre, %if.end ]
  %10 = phi %struct.access* [ %7, %entry ], [ %.pre, %if.end ], !dbg !5799
  %last_child.0 = phi %struct.access* [ null, %entry ], [ %14, %if.end ], !dbg !5788
  call void @llvm.dbg.value(metadata %struct.access* %last_child.0, metadata !5786, metadata !DIExpression()), !dbg !5788
  %tobool = icmp eq %struct.access* %10, null, !dbg !5799
  br i1 %tobool, label %while.end, label %land.rhs, !dbg !5800

land.rhs:                                         ; preds = %while.cond
  %offset1 = getelementptr inbounds %struct.access, %struct.access* %9, i64 0, i32 0, !dbg !5801
  %11 = load i64, i64* %offset1, align 8, !dbg !5801
  %size2 = getelementptr inbounds %struct.access, %struct.access* %9, i64 0, i32 1, !dbg !5802
  %12 = load i64, i64* %size2, align 8, !dbg !5802
  %add3 = add nsw i64 %11, %12, !dbg !5803
  %cmp = icmp sgt i64 %add3, %add, !dbg !5804
  br i1 %cmp, label %while.end, label %while.body, !dbg !5798

while.body:                                       ; preds = %land.rhs
  %tobool4 = icmp eq %struct.access* %last_child.0, null, !dbg !5805
  br i1 %tobool4, label %if.then, label %if.else, !dbg !5806

if.then:                                          ; preds = %while.body
  store i64 %8, i64* %6, align 8, !dbg !5807
  br label %if.end, !dbg !5808

if.else:                                          ; preds = %while.body
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %last_child.0, i64 0, i32 9, !dbg !5809
  %13 = bitcast %struct.access** %next_sibling to i64*, !dbg !5810
  store i64 %8, i64* %13, align 8, !dbg !5810
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.access*, %struct.access** %access, align 8, !dbg !5811
  call void @llvm.dbg.value(metadata %struct.access* %14, metadata !5786, metadata !DIExpression()), !dbg !5788
  tail call fastcc void @build_access_subtree(%struct.access** %access) #7, !dbg !5812
  %.pre = load %struct.access*, %struct.access** %access, align 8, !dbg !5799
  %15 = ptrtoint %struct.access* %.pre to i64, !dbg !5798
  br label %while.cond, !dbg !5798, !llvm.loop !5813

while.end:                                        ; preds = %land.rhs, %while.cond
  ret void, !dbg !5815
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @pop_access_from_work_queue() unnamed_addr #5 !dbg !5816 {
entry:
  %0 = load %struct.access*, %struct.access** @work_queue_head, align 8, !dbg !5821
  call void @llvm.dbg.value(metadata %struct.access* %0, metadata !5820, metadata !DIExpression()), !dbg !5822
  %next_queued = getelementptr inbounds %struct.access, %struct.access* %0, i64 0, i32 12, !dbg !5823
  %1 = bitcast %struct.access** %next_queued to i64*, !dbg !5823
  %2 = load i64, i64* %1, align 8, !dbg !5823
  store i64 %2, i64* bitcast (%struct.access** @work_queue_head to i64*), align 8, !dbg !5824
  store %struct.access* null, %struct.access** %next_queued, align 8, !dbg !5825
  %grp_queued = getelementptr inbounds %struct.access, %struct.access* %0, i64 0, i32 14, !dbg !5826
  %bf.load = load i16, i16* %grp_queued, align 8, !dbg !5827
  %bf.clear = and i16 %bf.load, -5, !dbg !5827
  store i16 %bf.clear, i16* %grp_queued, align 8, !dbg !5827
  ret %struct.access* %0, !dbg !5828
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @propagate_subaccesses_across_link(%struct.access* %lacc, %struct.access* %racc) unnamed_addr #5 !dbg !5829 {
entry:
  %t = alloca %union.tree_node*, align 8
  %new_acc = alloca %struct.access*, align 8
  call void @llvm.dbg.value(metadata %struct.access* %lacc, metadata !5833, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata %struct.access* %racc, metadata !5834, metadata !DIExpression()), !dbg !5846
  %offset = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 0, !dbg !5847
  %0 = load i64, i64* %offset, align 8, !dbg !5847
  %offset1 = getelementptr inbounds %struct.access, %struct.access* %racc, i64 0, i32 0, !dbg !5848
  %1 = load i64, i64* %offset1, align 8, !dbg !5848
  %sub = sub nsw i64 %0, %1, !dbg !5849
  call void @llvm.dbg.value(metadata i64 %sub, metadata !5836, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8 0, metadata !5837, metadata !DIExpression()), !dbg !5846
  %type = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 4, !dbg !5850
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5850
  %call = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %2) #6, !dbg !5852
  %tobool = icmp eq i8 %call, 0, !dbg !5852
  br i1 %tobool, label %lor.lhs.false, label %cleanup92, !dbg !5853

lor.lhs.false:                                    ; preds = %entry
  %grp_unscalarizable_region = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 14, !dbg !5854
  %bf.load = load i16, i16* %grp_unscalarizable_region, align 8, !dbg !5854
  %3 = trunc i16 %bf.load to i8, !dbg !5855
  %tobool2 = icmp slt i8 %3, 0, !dbg !5855
  br i1 %tobool2, label %cleanup92, label %lor.lhs.false3, !dbg !5856

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %grp_unscalarizable_region4 = getelementptr inbounds %struct.access, %struct.access* %racc, i64 0, i32 14, !dbg !5857
  %bf.load5 = load i16, i16* %grp_unscalarizable_region4, align 8, !dbg !5857
  %4 = trunc i16 %bf.load5 to i8, !dbg !5858
  %tobool9 = icmp slt i8 %4, 0, !dbg !5858
  br i1 %tobool9, label %cleanup92, label %if.end, !dbg !5859

if.end:                                           ; preds = %lor.lhs.false3
  %first_child = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 8, !dbg !5860
  %5 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !5860
  %tobool10 = icmp eq %struct.access* %5, null, !dbg !5861
  br i1 %tobool10, label %land.lhs.true, label %if.end28, !dbg !5862

land.lhs.true:                                    ; preds = %if.end
  %first_child11 = getelementptr inbounds %struct.access, %struct.access* %racc, i64 0, i32 8, !dbg !5863
  %6 = load %struct.access*, %struct.access** %first_child11, align 8, !dbg !5863
  %tobool12 = icmp eq %struct.access* %6, null, !dbg !5864
  br i1 %tobool12, label %land.lhs.true13, label %if.end28, !dbg !5865

land.lhs.true13:                                  ; preds = %land.lhs.true
  %type14 = getelementptr inbounds %struct.access, %struct.access* %racc, i64 0, i32 4, !dbg !5866
  %7 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !5866
  %call15 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %7) #6, !dbg !5867
  %tobool17 = icmp eq i8 %call15, 0, !dbg !5867
  br i1 %tobool17, label %if.end28, label %if.then18, !dbg !5868

if.then18:                                        ; preds = %land.lhs.true13
  %8 = bitcast %union.tree_node** %t to i8*, !dbg !5869
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5869
  %base = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 2, !dbg !5870
  %9 = bitcast %union.tree_node** %base to i64*, !dbg !5870
  %10 = load i64, i64* %9, align 8, !dbg !5870
  %11 = bitcast %union.tree_node** %t to i64*, !dbg !5871
  store i64 %10, i64* %11, align 8, !dbg !5871
  %.cast = inttoptr i64 %10 to %struct.tree_common*, !dbg !5872
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.cast, i64 0, i32 2, !dbg !5872
  %12 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !5872
  %13 = load i64, i64* %offset, align 8, !dbg !5874
  %14 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !5875
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !5838, metadata !DIExpression(DW_OP_deref)), !dbg !5876
  %call22 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %t, %union.tree_node* %12, i64 %13, %union.tree_node* %14, i8 zeroext 0) #7, !dbg !5877
  %tobool23 = icmp eq i8 %call22, 0, !dbg !5877
  br i1 %tobool23, label %if.end27, label %if.then24, !dbg !5878

if.then24:                                        ; preds = %if.then18
  %15 = load i64, i64* %11, align 8, !dbg !5879
  %expr = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 3, !dbg !5881
  %16 = bitcast %union.tree_node** %expr to i64*, !dbg !5882
  store i64 %15, i64* %16, align 8, !dbg !5882
  %17 = bitcast %union.tree_node** %type14 to i64*, !dbg !5883
  %18 = load i64, i64* %17, align 8, !dbg !5883
  %19 = bitcast %union.tree_node** %type to i64*, !dbg !5884
  store i64 %18, i64* %19, align 8, !dbg !5884
  br label %if.end27, !dbg !5885

if.end27:                                         ; preds = %if.then18, %if.then24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5886
  br label %cleanup92

if.end28:                                         ; preds = %land.lhs.true13, %land.lhs.true, %if.end
  %first_child29 = getelementptr inbounds %struct.access, %struct.access* %racc, i64 0, i32 8, !dbg !5887
  %20 = bitcast %struct.access** %new_acc to i8*, !dbg !5888
  %base70 = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 2, !dbg !5889
  %21 = bitcast %union.tree_node** %base70 to %struct.tree_common**, !dbg !5889
  br label %for.cond, !dbg !5891

for.cond:                                         ; preds = %cleanup, %if.end28
  %rchild.0.in = phi %struct.access** [ %first_child29, %if.end28 ], [ %next_sibling, %cleanup ]
  %ret.0 = phi i8 [ 0, %if.end28 ], [ %ret.4, %cleanup ], !dbg !5892
  %rchild.0 = load %struct.access*, %struct.access** %rchild.0.in, align 8, !dbg !5893
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !5837, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata %struct.access* %rchild.0, metadata !5835, metadata !DIExpression()), !dbg !5846
  %tobool30 = icmp eq %struct.access* %rchild.0, null, !dbg !5894
  br i1 %tobool30, label %cleanup92.loopexit, label %for.body, !dbg !5894

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8, !dbg !5895
  call void @llvm.dbg.value(metadata %struct.access* null, metadata !5841, metadata !DIExpression()), !dbg !5888
  store %struct.access* null, %struct.access** %new_acc, align 8, !dbg !5896
  %offset31 = getelementptr inbounds %struct.access, %struct.access* %rchild.0, i64 0, i32 0, !dbg !5897
  %22 = load i64, i64* %offset31, align 8, !dbg !5897
  %add = add nsw i64 %22, %sub, !dbg !5898
  call void @llvm.dbg.value(metadata i64 %add, metadata !5845, metadata !DIExpression()), !dbg !5888
  %grp_unscalarizable_region32 = getelementptr inbounds %struct.access, %struct.access* %rchild.0, i64 0, i32 14, !dbg !5899
  %bf.load33 = load i16, i16* %grp_unscalarizable_region32, align 8, !dbg !5899
  %23 = trunc i16 %bf.load33 to i8, !dbg !5901
  %tobool37 = icmp slt i8 %23, 0, !dbg !5901
  br i1 %tobool37, label %cleanup, label %if.end39, !dbg !5902

if.end39:                                         ; preds = %for.body
  %size = getelementptr inbounds %struct.access, %struct.access* %rchild.0, i64 0, i32 1, !dbg !5903
  %24 = load i64, i64* %size, align 8, !dbg !5903
  call void @llvm.dbg.value(metadata %struct.access** %new_acc, metadata !5841, metadata !DIExpression(DW_OP_deref)), !dbg !5888
  %call40 = call fastcc zeroext i8 @child_would_conflict_in_lacc(%struct.access* %lacc, i64 %add, i64 %24, %struct.access** nonnull %new_acc) #7, !dbg !5905
  %tobool41 = icmp eq i8 %call40, 0, !dbg !5905
  br i1 %tobool41, label %if.end69, label %if.then42, !dbg !5906

if.then42:                                        ; preds = %if.end39
  %25 = load %struct.access*, %struct.access** %new_acc, align 8, !dbg !5907
  call void @llvm.dbg.value(metadata %struct.access* %25, metadata !5841, metadata !DIExpression()), !dbg !5888
  %tobool43 = icmp eq %struct.access* %25, null, !dbg !5907
  br i1 %tobool43, label %cleanup, label %if.then44, !dbg !5910

if.then44:                                        ; preds = %if.then42
  %bf.load45 = load i16, i16* %grp_unscalarizable_region32, align 8, !dbg !5911
  %bf.set = or i16 %bf.load45, 32, !dbg !5911
  store i16 %bf.set, i16* %grp_unscalarizable_region32, align 8, !dbg !5911
  call void @llvm.dbg.value(metadata %struct.access* %25, metadata !5841, metadata !DIExpression()), !dbg !5888
  %grp_read = getelementptr inbounds %struct.access, %struct.access* %25, i64 0, i32 14, !dbg !5913
  %bf.load47 = load i16, i16* %grp_read, align 8, !dbg !5913
  call void @llvm.dbg.value(metadata %struct.access* %25, metadata !5841, metadata !DIExpression()), !dbg !5888
  %26 = shl i16 %bf.load47, 1, !dbg !5914
  %27 = and i16 %26, 32, !dbg !5914
  %bf.set58 = or i16 %27, %bf.load47, !dbg !5914
  store i16 %bf.set58, i16* %grp_read, align 8, !dbg !5914
  %first_child59 = getelementptr inbounds %struct.access, %struct.access* %rchild.0, i64 0, i32 8, !dbg !5915
  %28 = load %struct.access*, %struct.access** %first_child59, align 8, !dbg !5915
  %tobool60 = icmp eq %struct.access* %28, null, !dbg !5917
  br i1 %tobool60, label %cleanup, label %if.then61, !dbg !5918

if.then61:                                        ; preds = %if.then44
  call void @llvm.dbg.value(metadata %struct.access* %25, metadata !5841, metadata !DIExpression()), !dbg !5888
  %call62 = call fastcc zeroext i8 @propagate_subaccesses_across_link(%struct.access* nonnull %25, %struct.access* nonnull %rchild.0) #7, !dbg !5919
  %or655 = or i8 %ret.0, %call62, !dbg !5920
  call void @llvm.dbg.value(metadata i8 %or655, metadata !5837, metadata !DIExpression()), !dbg !5846
  br label %cleanup, !dbg !5921

if.end69:                                         ; preds = %if.end39
  %29 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !5922
  %type72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %29, i64 0, i32 2, !dbg !5922
  %30 = load %union.tree_node*, %union.tree_node** %type72, align 8, !dbg !5922
  %type73 = getelementptr inbounds %struct.access, %struct.access* %rchild.0, i64 0, i32 4, !dbg !5923
  %31 = load %union.tree_node*, %union.tree_node** %type73, align 8, !dbg !5923
  %call74 = call zeroext i8 @build_ref_for_offset(%union.tree_node** null, %union.tree_node* %30, i64 %add, %union.tree_node* %31, i8 zeroext 0) #7, !dbg !5924
  %tobool75 = icmp eq i8 %call74, 0, !dbg !5924
  br i1 %tobool75, label %cleanup, label %if.end77, !dbg !5925

if.end77:                                         ; preds = %if.end69
  %bf.load79 = load i16, i16* %grp_unscalarizable_region32, align 8, !dbg !5926
  %bf.set81 = or i16 %bf.load79, 32, !dbg !5926
  store i16 %bf.set81, i16* %grp_unscalarizable_region32, align 8, !dbg !5926
  %call82 = call fastcc %struct.access* @create_artificial_child_access(%struct.access* %lacc, %struct.access* nonnull %rchild.0, i64 %add) #7, !dbg !5927
  call void @llvm.dbg.value(metadata %struct.access* %call82, metadata !5841, metadata !DIExpression()), !dbg !5888
  store %struct.access* %call82, %struct.access** %new_acc, align 8, !dbg !5928
  call void @llvm.dbg.value(metadata %struct.access* %call82, metadata !5841, metadata !DIExpression()), !dbg !5888
  %tobool83 = icmp eq %struct.access* %call82, null, !dbg !5929
  br i1 %tobool83, label %cleanup, label %if.then84, !dbg !5931

if.then84:                                        ; preds = %if.end77
  call void @llvm.dbg.value(metadata i8 1, metadata !5837, metadata !DIExpression()), !dbg !5846
  %32 = load %struct.access*, %struct.access** %first_child29, align 8, !dbg !5932
  %tobool86 = icmp eq %struct.access* %32, null, !dbg !5935
  br i1 %tobool86, label %cleanup, label %if.then87, !dbg !5936

if.then87:                                        ; preds = %if.then84
  call void @llvm.dbg.value(metadata %struct.access* %call82, metadata !5841, metadata !DIExpression()), !dbg !5888
  %call88 = call fastcc zeroext i8 @propagate_subaccesses_across_link(%struct.access* nonnull %call82, %struct.access* nonnull %rchild.0) #7, !dbg !5937
  br label %cleanup, !dbg !5937

cleanup:                                          ; preds = %if.then44, %if.then42, %if.then84, %if.end77, %if.end69, %if.then87, %if.then61, %for.body
  %ret.4 = phi i8 [ %ret.0, %for.body ], [ %ret.0, %if.then42 ], [ %or655, %if.then61 ], [ %ret.0, %if.then44 ], [ %ret.0, %if.end69 ], [ %ret.0, %if.end77 ], [ 1, %if.then87 ], [ 1, %if.then84 ], !dbg !5846
  call void @llvm.dbg.value(metadata i8 %ret.4, metadata !5837, metadata !DIExpression()), !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8, !dbg !5938
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %rchild.0, i64 0, i32 9, !dbg !5939
  br label %for.cond, !dbg !5940, !llvm.loop !5941

cleanup92.loopexit:                               ; preds = %for.cond
  %ret.0.lcssa = phi i8 [ %ret.0, %for.cond ], !dbg !5892
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !5837, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !5837, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !5837, metadata !DIExpression()), !dbg !5846
  br label %cleanup92, !dbg !5943

cleanup92:                                        ; preds = %cleanup92.loopexit, %entry, %lor.lhs.false, %lor.lhs.false3, %if.end27
  %retval.0 = phi i8 [ 0, %if.end27 ], [ 0, %lor.lhs.false3 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %ret.0.lcssa, %cleanup92.loopexit ], !dbg !5846
  ret i8 %retval.0, !dbg !5943
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @child_would_conflict_in_lacc(%struct.access* %lacc, i64 %norm_offset, i64 %size, %struct.access** %exact_match) unnamed_addr #5 !dbg !5944 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %lacc, metadata !5948, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i64 %norm_offset, metadata !5949, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i64 %size, metadata !5950, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.access** %exact_match, metadata !5951, metadata !DIExpression()), !dbg !5953
  %first_child = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 8, !dbg !5954
  %add = add nsw i64 %norm_offset, %size, !dbg !5956
  br label %for.cond, !dbg !5960

for.cond:                                         ; preds = %for.inc, %entry
  %child.0.in = phi %struct.access** [ %first_child, %entry ], [ %next_sibling, %for.inc ]
  %child.0 = load %struct.access*, %struct.access** %child.0.in, align 8, !dbg !5961
  call void @llvm.dbg.value(metadata %struct.access* %child.0, metadata !5952, metadata !DIExpression()), !dbg !5953
  %tobool = icmp eq %struct.access* %child.0, null, !dbg !5962
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !5962

for.body:                                         ; preds = %for.cond
  %offset = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 0, !dbg !5963
  %0 = load i64, i64* %offset, align 8, !dbg !5963
  %cmp = icmp eq i64 %0, %norm_offset, !dbg !5965
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5966

land.lhs.true:                                    ; preds = %for.body
  %size1 = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 1, !dbg !5967
  %1 = load i64, i64* %size1, align 8, !dbg !5967
  %cmp2 = icmp eq i64 %1, %size, !dbg !5968
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5969

if.then:                                          ; preds = %land.lhs.true
  %child.0.lcssa3 = phi %struct.access* [ %child.0, %land.lhs.true ], !dbg !5961
  store %struct.access* %child.0.lcssa3, %struct.access** %exact_match, align 8, !dbg !5970
  br label %cleanup, !dbg !5972

if.end:                                           ; preds = %land.lhs.true, %for.body
  %cmp4 = icmp slt i64 %0, %add, !dbg !5973
  br i1 %cmp4, label %land.lhs.true5, label %for.inc, !dbg !5974

land.lhs.true5:                                   ; preds = %if.end
  %size7 = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 1, !dbg !5975
  %2 = load i64, i64* %size7, align 8, !dbg !5975
  %add8 = add nsw i64 %0, %2, !dbg !5976
  %cmp9 = icmp sgt i64 %add8, %norm_offset, !dbg !5977
  br i1 %cmp9, label %cleanup.loopexit, label %for.inc, !dbg !5978

for.inc:                                          ; preds = %if.end, %land.lhs.true5
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 9, !dbg !5979
  br label %for.cond, !dbg !5980, !llvm.loop !5981

cleanup.loopexit:                                 ; preds = %land.lhs.true5, %for.cond
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %land.lhs.true5 ]
  br label %cleanup, !dbg !5983

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5953
  ret i8 %retval.0, !dbg !5983
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @create_artificial_child_access(%struct.access* %parent, %struct.access* %model, i64 %new_offset) unnamed_addr #5 !dbg !5984 {
entry:
  %expr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.access* %parent, metadata !5988, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %struct.access* %model, metadata !5989, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i64 %new_offset, metadata !5990, metadata !DIExpression()), !dbg !5994
  %0 = bitcast %union.tree_node** %expr to i8*, !dbg !5995
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5995
  %base = getelementptr inbounds %struct.access, %struct.access* %parent, i64 0, i32 2, !dbg !5996
  %1 = bitcast %union.tree_node** %base to i64*, !dbg !5996
  %2 = load i64, i64* %1, align 8, !dbg !5996
  %3 = bitcast %union.tree_node** %expr to i64*, !dbg !5997
  store i64 %2, i64* %3, align 8, !dbg !5997
  %grp_unscalarizable_region = getelementptr inbounds %struct.access, %struct.access* %model, i64 0, i32 14, !dbg !5998
  %bf.load = load i16, i16* %grp_unscalarizable_region, align 8, !dbg !5998
  %4 = trunc i16 %bf.load to i8, !dbg !5998
  %tobool = icmp slt i8 %4, 0, !dbg !5998
  %5 = inttoptr i64 %2 to %struct.tree_common*, !dbg !5998
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5998

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1912, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5998
  br label %cond.end, !dbg !5998

cond.end:                                         ; preds = %entry, %cond.true
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !5999
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5999
  %type1 = getelementptr inbounds %struct.access, %struct.access* %model, i64 0, i32 4, !dbg !6001
  %7 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !6001
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !5993, metadata !DIExpression(DW_OP_deref)), !dbg !5994
  %call = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %expr, %union.tree_node* %6, i64 %new_offset, %union.tree_node* %7, i8 zeroext 0) #7, !dbg !6002
  %tobool2 = icmp eq i8 %call, 0, !dbg !6002
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !6003

if.end:                                           ; preds = %cond.end
  %8 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @access_pool, align 8, !dbg !6004
  %call3 = call i8* @pool_alloc(%struct.alloc_pool_def* %8) #6, !dbg !6005
  call void @llvm.dbg.value(metadata %struct.access* %22, metadata !5991, metadata !DIExpression()), !dbg !5994
  %call4 = call i8* @memset(i8* %call3, i32 0, i64 120) #6, !dbg !6006
  %9 = load i64, i64* %1, align 8, !dbg !6007
  %base6 = getelementptr inbounds i8, i8* %call3, i64 16, !dbg !6008
  %10 = bitcast i8* %base6 to i64*, !dbg !6009
  store i64 %9, i64* %10, align 8, !dbg !6009
  %11 = load i64, i64* %3, align 8, !dbg !6010
  %expr7 = getelementptr inbounds i8, i8* %call3, i64 24, !dbg !6011
  %12 = bitcast i8* %expr7 to i64*, !dbg !6012
  store i64 %11, i64* %12, align 8, !dbg !6012
  %offset = bitcast i8* %call3 to i64*, !dbg !6013
  store i64 %new_offset, i64* %offset, align 8, !dbg !6014
  %size = getelementptr inbounds %struct.access, %struct.access* %model, i64 0, i32 1, !dbg !6015
  %13 = load i64, i64* %size, align 8, !dbg !6015
  %size8 = getelementptr inbounds i8, i8* %call3, i64 8, !dbg !6016
  %14 = bitcast i8* %size8 to i64*, !dbg !6016
  store i64 %13, i64* %14, align 8, !dbg !6017
  %15 = bitcast %union.tree_node** %type1 to i64*, !dbg !6018
  %16 = load i64, i64* %15, align 8, !dbg !6018
  %type10 = getelementptr inbounds i8, i8* %call3, i64 32, !dbg !6019
  %17 = bitcast i8* %type10 to i64*, !dbg !6020
  store i64 %16, i64* %17, align 8, !dbg !6020
  %grp_write = getelementptr inbounds i8, i8* %call3, i64 112, !dbg !6021
  %18 = bitcast i8* %grp_write to i16*, !dbg !6021
  %bf.load11 = load i16, i16* %18, align 8, !dbg !6022
  %bf.set = and i16 %bf.load11, -25, !dbg !6023
  %bf.clear14 = or i16 %bf.set, 8, !dbg !6023
  store i16 %bf.clear14, i16* %18, align 8, !dbg !6023
  %first_child = getelementptr inbounds %struct.access, %struct.access* %parent, i64 0, i32 8, !dbg !6024
  call void @llvm.dbg.value(metadata %struct.access** %first_child, metadata !5992, metadata !DIExpression()), !dbg !5994
  br label %while.cond, !dbg !6025

while.cond:                                       ; preds = %while.body, %if.end
  %child.0 = phi %struct.access** [ %first_child, %if.end ], [ %next_sibling, %while.body ], !dbg !5994
  call void @llvm.dbg.value(metadata %struct.access** %child.0, metadata !5992, metadata !DIExpression()), !dbg !5994
  %19 = load %struct.access*, %struct.access** %child.0, align 8, !dbg !6026
  %tobool15 = icmp eq %struct.access* %19, null, !dbg !6026
  br i1 %tobool15, label %land.end, label %land.rhs, !dbg !6027

land.rhs:                                         ; preds = %while.cond
  %offset16 = getelementptr inbounds %struct.access, %struct.access* %19, i64 0, i32 0, !dbg !6028
  %20 = load i64, i64* %offset16, align 8, !dbg !6028
  %cmp = icmp slt i64 %20, %new_offset, !dbg !6029
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %21 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !5994
  br i1 %21, label %while.body, label %while.end, !dbg !6025

while.body:                                       ; preds = %land.end
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %19, i64 0, i32 9, !dbg !6030
  call void @llvm.dbg.value(metadata %struct.access** %next_sibling, metadata !5992, metadata !DIExpression()), !dbg !5994
  br label %while.cond, !dbg !6025, !llvm.loop !6031

while.end:                                        ; preds = %land.end
  %child.0.lcssa = phi %struct.access** [ %child.0, %land.end ], !dbg !5994
  %.lcssa = phi %struct.access* [ %19, %land.end ], !dbg !6026
  call void @llvm.dbg.value(metadata %struct.access** %child.0.lcssa, metadata !5992, metadata !DIExpression()), !dbg !5994
  %22 = bitcast i8* %call3 to %struct.access*, !dbg !6032
  call void @llvm.dbg.value(metadata %struct.access** %child.0.lcssa, metadata !5992, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %struct.access** %child.0.lcssa, metadata !5992, metadata !DIExpression()), !dbg !5994
  %next_sibling17 = getelementptr inbounds i8, i8* %call3, i64 72, !dbg !6033
  %23 = bitcast i8* %next_sibling17 to %struct.access**, !dbg !6033
  store %struct.access* %.lcssa, %struct.access** %23, align 8, !dbg !6034
  %24 = bitcast %struct.access** %child.0.lcssa to i8**, !dbg !6035
  store i8* %call3, i8** %24, align 8, !dbg !6035
  br label %cleanup, !dbg !6036

cleanup:                                          ; preds = %cond.end, %while.end
  %retval.0 = phi %struct.access* [ %22, %while.end ], [ null, %cond.end ], !dbg !5994
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6037
  ret %struct.access* %retval.0, !dbg !6037
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @analyze_access_subtree(%struct.access* %root, i8 zeroext %allow_replacements, i8 zeroext %mark_read, i8 zeroext %mark_write) unnamed_addr #5 !dbg !6038 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %root, metadata !6042, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %allow_replacements, metadata !6043, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %mark_read, metadata !6044, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %mark_write, metadata !6045, metadata !DIExpression()), !dbg !6053
  %offset = getelementptr inbounds %struct.access, %struct.access* %root, i64 0, i32 0, !dbg !6054
  %0 = load i64, i64* %offset, align 8, !dbg !6054
  %size = getelementptr inbounds %struct.access, %struct.access* %root, i64 0, i32 1, !dbg !6055
  %1 = load i64, i64* %size, align 8, !dbg !6055
  %add = add nsw i64 %0, %1, !dbg !6056
  call void @llvm.dbg.value(metadata i64 %add, metadata !6047, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i64 %0, metadata !6048, metadata !DIExpression()), !dbg !6053
  %type = getelementptr inbounds %struct.access, %struct.access* %root, i64 0, i32 4, !dbg !6057
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6057
  %call = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %2) #6, !dbg !6058
  call void @llvm.dbg.value(metadata i8 %call, metadata !6049, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 0, metadata !6050, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 0, metadata !6051, metadata !DIExpression()), !dbg !6053
  %grp_read = getelementptr inbounds %struct.access, %struct.access* %root, i64 0, i32 14, !dbg !6059
  %bf.load = load i16, i16* %grp_read, align 8, !dbg !6059
  %3 = and i16 %bf.load, 16, !dbg !6060
  %tobool = icmp eq i8 %mark_read, 0, !dbg !6061
  br i1 %tobool, label %if.else, label %if.then, !dbg !6063

if.then:                                          ; preds = %entry
  %bf.set = or i16 %bf.load, 16, !dbg !6064
  store i16 %bf.set, i16* %grp_read, align 8, !dbg !6064
  br label %if.end12, !dbg !6065

if.else:                                          ; preds = %entry
  %.lobit = lshr exact i16 %3, 4, !dbg !6066
  %4 = trunc i16 %.lobit to i8, !dbg !6066
  call void @llvm.dbg.value(metadata i8 %4, metadata !6044, metadata !DIExpression()), !dbg !6053
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then
  %bf.load15 = phi i16 [ %bf.set, %if.then ], [ %bf.load, %if.else ], !dbg !6067
  %mark_read.addr.1 = phi i8 [ %mark_read, %if.then ], [ %4, %if.else ]
  call void @llvm.dbg.value(metadata i8 %mark_read.addr.1, metadata !6044, metadata !DIExpression()), !dbg !6053
  %tobool13 = icmp eq i8 %mark_write, 0, !dbg !6069
  br i1 %tobool13, label %if.else18, label %if.then14, !dbg !6070

if.then14:                                        ; preds = %if.end12
  %bf.set17 = or i16 %bf.load15, 8, !dbg !6071
  store i16 %bf.set17, i16* %grp_read, align 8, !dbg !6071
  br label %if.end27, !dbg !6072

if.else18:                                        ; preds = %if.end12
  %bf.clear22 = lshr i16 %bf.load15, 3, !dbg !6073
  %5 = trunc i16 %bf.clear22 to i8, !dbg !6073
  %6 = and i8 %5, 1, !dbg !6073
  call void @llvm.dbg.value(metadata i8 %6, metadata !6045, metadata !DIExpression()), !dbg !6053
  br label %if.end27

if.end27:                                         ; preds = %if.else18, %if.then14
  %bf.load28 = phi i16 [ %bf.set17, %if.then14 ], [ %bf.load15, %if.else18 ], !dbg !6074
  %mark_write.addr.1 = phi i8 [ %mark_write, %if.then14 ], [ %6, %if.else18 ]
  call void @llvm.dbg.value(metadata i8 %mark_write.addr.1, metadata !6045, metadata !DIExpression()), !dbg !6053
  %7 = trunc i16 %bf.load28 to i8, !dbg !6076
  %tobool32 = icmp slt i8 %7, 0, !dbg !6076
  %tobool3615 = icmp eq i8 %allow_replacements, 0, !dbg !6077
  %tobool36 = or i1 %tobool32, %tobool3615, !dbg !6077
  br i1 %tobool36, label %if.end41, label %land.lhs.true, !dbg !6079

land.lhs.true:                                    ; preds = %if.end27
  %expr = getelementptr inbounds %struct.access, %struct.access* %root, i64 0, i32 3, !dbg !6080
  %8 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !6080
  %call37 = tail call fastcc zeroext i8 @expr_with_var_bounded_array_refs_p(%union.tree_node* %8) #7, !dbg !6081
  %tobool39 = icmp eq i8 %call37, 0, !dbg !6081
  %spec.select3 = select i1 %tobool39, i8 %allow_replacements, i8 0, !dbg !6082
  br label %if.end41, !dbg !6082

if.end41:                                         ; preds = %if.end27, %land.lhs.true
  %allow_replacements.addr.1 = phi i8 [ 0, %if.end27 ], [ %spec.select3, %land.lhs.true ], !dbg !6053
  call void @llvm.dbg.value(metadata i8 %allow_replacements.addr.1, metadata !6043, metadata !DIExpression()), !dbg !6053
  %first_child = getelementptr inbounds %struct.access, %struct.access* %root, i64 0, i32 8, !dbg !6083
  br label %for.cond, !dbg !6085

for.cond:                                         ; preds = %if.end51, %if.end41
  %hole.0 = phi i8 [ 0, %if.end41 ], [ %or75, %if.end51 ], !dbg !6053
  %covered_to.0 = phi i64 [ %0, %if.end41 ], [ %covered_to.1, %if.end51 ], !dbg !6053
  %sth_created.0 = phi i8 [ 0, %if.end41 ], [ %or8, %if.end51 ], !dbg !6053
  %child.0.in = phi %struct.access** [ %first_child, %if.end41 ], [ %next_sibling, %if.end51 ]
  %child.0 = load %struct.access*, %struct.access** %child.0.in, align 8, !dbg !6086
  call void @llvm.dbg.value(metadata %struct.access* %child.0, metadata !6046, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %sth_created.0, metadata !6051, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i64 %covered_to.0, metadata !6048, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %hole.0, metadata !6050, metadata !DIExpression()), !dbg !6053
  %tobool42 = icmp eq %struct.access* %child.0, null, !dbg !6087
  br i1 %tobool42, label %for.end, label %for.body, !dbg !6087

for.body:                                         ; preds = %for.cond
  %tobool43 = icmp eq i8 %hole.0, 0, !dbg !6088
  br i1 %tobool43, label %land.lhs.true44, label %if.else48, !dbg !6092

land.lhs.true44:                                  ; preds = %for.body
  %offset45 = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 0, !dbg !6093
  %9 = load i64, i64* %offset45, align 8, !dbg !6093
  %cmp = icmp slt i64 %9, %covered_to.0, !dbg !6094
  br i1 %cmp, label %if.end51, label %if.else48, !dbg !6095

if.else48:                                        ; preds = %for.body, %land.lhs.true44
  %size49 = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 1, !dbg !6096
  %10 = load i64, i64* %size49, align 8, !dbg !6096
  %add50 = add nsw i64 %covered_to.0, %10, !dbg !6097
  call void @llvm.dbg.value(metadata i64 %add50, metadata !6048, metadata !DIExpression()), !dbg !6053
  br label %if.end51

if.end51:                                         ; preds = %land.lhs.true44, %if.else48
  %hole.1 = phi i8 [ %hole.0, %if.else48 ], [ 1, %land.lhs.true44 ], !dbg !6053
  %covered_to.1 = phi i64 [ %add50, %if.else48 ], [ %covered_to.0, %land.lhs.true44 ], !dbg !6053
  call void @llvm.dbg.value(metadata i64 %covered_to.1, metadata !6048, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %hole.1, metadata !6050, metadata !DIExpression()), !dbg !6053
  %call52 = tail call fastcc zeroext i8 @analyze_access_subtree(%struct.access* nonnull %child.0, i8 zeroext %allow_replacements.addr.1, i8 zeroext %mark_read.addr.1, i8 zeroext %mark_write.addr.1) #7, !dbg !6098
  %or8 = or i8 %sth_created.0, %call52, !dbg !6099
  call void @llvm.dbg.value(metadata i8 %or8, metadata !6051, metadata !DIExpression()), !dbg !6053
  %grp_unscalarized_data = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 14, !dbg !6100
  %bf.load56 = load i16, i16* %grp_unscalarized_data, align 8, !dbg !6100
  %bf.load61 = load i16, i16* %grp_read, align 8, !dbg !6101
  %11 = and i16 %bf.load56, 256, !dbg !6101
  %bf.set68 = or i16 %11, %bf.load61, !dbg !6101
  store i16 %bf.set68, i16* %grp_read, align 8, !dbg !6101
  %bf.load69 = load i16, i16* %grp_unscalarized_data, align 8, !dbg !6102
  %bf.clear71 = lshr i16 %bf.load69, 6, !dbg !6103
  %12 = trunc i16 %bf.clear71 to i8, !dbg !6103
  %13 = and i8 %12, 1, !dbg !6103
  %14 = xor i8 %13, 1, !dbg !6103
  %or75 = or i8 %hole.1, %14, !dbg !6104
  call void @llvm.dbg.value(metadata i8 %or75, metadata !6050, metadata !DIExpression()), !dbg !6053
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 9, !dbg !6105
  br label %for.cond, !dbg !6106, !llvm.loop !6107

for.end:                                          ; preds = %for.cond
  %hole.0.lcssa = phi i8 [ %hole.0, %for.cond ], !dbg !6053
  %covered_to.0.lcssa = phi i64 [ %covered_to.0, %for.cond ], !dbg !6053
  %sth_created.0.lcssa = phi i8 [ %sth_created.0, %for.cond ], !dbg !6053
  call void @llvm.dbg.value(metadata i8 %hole.0.lcssa, metadata !6050, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i64 %covered_to.0.lcssa, metadata !6048, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %sth_created.0.lcssa, metadata !6051, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %hole.0.lcssa, metadata !6050, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i64 %covered_to.0.lcssa, metadata !6048, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %sth_created.0.lcssa, metadata !6051, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %hole.0.lcssa, metadata !6050, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i64 %covered_to.0.lcssa, metadata !6048, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 %sth_created.0.lcssa, metadata !6051, metadata !DIExpression()), !dbg !6053
  %tobool78 = icmp ne i8 %allow_replacements.addr.1, 0, !dbg !6109
  %tobool81 = icmp ne i8 %call, 0, !dbg !6111
  %or.cond = and i1 %tobool78, %tobool81, !dbg !6112
  br i1 %or.cond, label %land.lhs.true82, label %if.else124, !dbg !6112

land.lhs.true82:                                  ; preds = %for.end
  %15 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !6113
  %tobool84 = icmp eq %struct.access* %15, null, !dbg !6114
  br i1 %tobool84, label %land.lhs.true85, label %if.else124, !dbg !6115

land.lhs.true85:                                  ; preds = %land.lhs.true82
  %bf.load86 = load i16, i16* %grp_read, align 8, !dbg !6116
  %bf.clear88 = and i16 %bf.load86, 32, !dbg !6116
  %tobool90 = icmp eq i16 %bf.clear88, 0, !dbg !6117
  br i1 %tobool90, label %lor.lhs.false, label %land.lhs.true100, !dbg !6118

lor.lhs.false:                                    ; preds = %land.lhs.true85
  %tobool92 = icmp eq i16 %3, 0, !dbg !6119
  br i1 %tobool92, label %if.else124, label %land.lhs.true93, !dbg !6120

land.lhs.true93:                                  ; preds = %lor.lhs.false
  %bf.clear97 = and i16 %bf.load86, 8, !dbg !6121
  %tobool99 = icmp eq i16 %bf.clear97, 0, !dbg !6122
  br i1 %tobool99, label %if.else124, label %land.lhs.true100, !dbg !6123

land.lhs.true100:                                 ; preds = %land.lhs.true93, %land.lhs.true85
  %base = getelementptr inbounds %struct.access, %struct.access* %root, i64 0, i32 2, !dbg !6124
  %16 = bitcast %union.tree_node** %base to %struct.tree_common**, !dbg !6124
  %17 = load %struct.tree_common*, %struct.tree_common** %16, align 8, !dbg !6124
  %type101 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i64 0, i32 2, !dbg !6124
  %18 = load %union.tree_node*, %union.tree_node** %type101, align 8, !dbg !6124
  %19 = load i64, i64* %offset, align 8, !dbg !6125
  %20 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6126
  %call104 = tail call zeroext i8 @build_ref_for_offset(%union.tree_node** null, %union.tree_node* %18, i64 %19, %union.tree_node* %20, i8 zeroext 0) #7, !dbg !6127
  %tobool106 = icmp eq i8 %call104, 0, !dbg !6127
  br i1 %tobool106, label %if.else124, label %if.then107, !dbg !6128

if.then107:                                       ; preds = %land.lhs.true100
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6129
  %tobool108 = icmp eq %struct._IO_FILE* %21, null, !dbg !6129
  br i1 %tobool108, label %if.end120, label %land.lhs.true109, !dbg !6132

land.lhs.true109:                                 ; preds = %if.then107
  %22 = load i32, i32* @dump_flags, align 4, !dbg !6133
  %and = and i32 %22, 8, !dbg !6134
  %tobool110 = icmp eq i32 %and, 0, !dbg !6134
  br i1 %tobool110, label %if.end120, label %if.then111, !dbg !6135

if.then111:                                       ; preds = %land.lhs.true109
  %call112 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !6136
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6138
  %24 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !6139
  tail call void @print_generic_expr(%struct._IO_FILE* %23, %union.tree_node* %24, i32 0) #6, !dbg !6140
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6141
  %26 = load i64, i64* %offset, align 8, !dbg !6142
  %conv115 = trunc i64 %26 to i32, !dbg !6143
  %27 = load i64, i64* %size, align 8, !dbg !6144
  %conv117 = trunc i64 %27 to i32, !dbg !6145
  %call118 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32, i64 0, i64 0), i32 %conv115, i32 %conv117) #6, !dbg !6146
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6147
  %call119 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !6148
  br label %if.end120, !dbg !6149

if.end120:                                        ; preds = %land.lhs.true109, %if.then107, %if.then111
  %bf.load121 = load i16, i16* %grp_read, align 8, !dbg !6150
  %bf.set123 = or i16 %bf.load121, 1024, !dbg !6150
  store i16 %bf.set123, i16* %grp_read, align 8, !dbg !6150
  call void @llvm.dbg.value(metadata i8 1, metadata !6051, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i8 0, metadata !6050, metadata !DIExpression()), !dbg !6053
  br label %if.end129, !dbg !6151

if.else124:                                       ; preds = %land.lhs.true100, %land.lhs.true93, %lor.lhs.false, %land.lhs.true82, %for.end
  %cmp125 = icmp slt i64 %covered_to.0.lcssa, %add, !dbg !6152
  %phitmp6 = icmp ne i8 %hole.0.lcssa, 0
  %phitmp = or i1 %cmp125, %phitmp6
  %bf.load141.pre = load i16, i16* %grp_read, align 8, !dbg !6053
  br label %if.end129

if.end129:                                        ; preds = %if.else124, %if.end120
  %bf.load156 = phi i16 [ %bf.load141.pre, %if.else124 ], [ %bf.set123, %if.end120 ], !dbg !6053
  %hole.3 = phi i1 [ %phitmp, %if.else124 ], [ false, %if.end120 ]
  %sth_created.1 = phi i8 [ %sth_created.0.lcssa, %if.else124 ], [ 1, %if.end120 ], !dbg !6053
  call void @llvm.dbg.value(metadata i8 %sth_created.1, metadata !6051, metadata !DIExpression()), !dbg !6053
  %tobool131 = icmp eq i8 %sth_created.1, 0, !dbg !6154
  %or.cond5 = or i1 %tobool131, %hole.3, !dbg !6156
  br i1 %or.cond5, label %if.end139, label %if.then134, !dbg !6156

if.then134:                                       ; preds = %if.end129
  %bf.set138 = or i16 %bf.load156, 64, !dbg !6157
  store i16 %bf.set138, i16* %grp_read, align 8, !dbg !6157
  br label %cleanup, !dbg !6159

if.end139:                                        ; preds = %if.end129
  %bf.clear143 = and i16 %bf.load156, 8, !dbg !6160
  %tobool145 = icmp eq i16 %bf.clear143, 0, !dbg !6162
  br i1 %tobool145, label %lor.lhs.false146, label %if.then154, !dbg !6163

lor.lhs.false146:                                 ; preds = %if.end139
  %base147 = getelementptr inbounds %struct.access, %struct.access* %root, i64 0, i32 2, !dbg !6164
  %29 = bitcast %union.tree_node** %base147 to i64**, !dbg !6164
  %30 = load i64*, i64** %29, align 8, !dbg !6164
  %bf.load149 = load i64, i64* %30, align 8, !dbg !6164
  %bf.cast1517 = and i64 %bf.load149, 65535, !dbg !6165
  %cmp152 = icmp eq i64 %bf.cast1517, 34, !dbg !6165
  br i1 %cmp152, label %if.then154, label %if.end159, !dbg !6166

if.then154:                                       ; preds = %if.end139, %lor.lhs.false146
  %bf.set158 = or i16 %bf.load156, 256, !dbg !6167
  store i16 %bf.set158, i16* %grp_read, align 8, !dbg !6167
  br label %if.end159, !dbg !6168

if.end159:                                        ; preds = %if.then154, %lor.lhs.false146
  %tobool160 = icmp ne i8 %sth_created.1, 0, !dbg !6169
  %. = zext i1 %tobool160 to i8, !dbg !6053
  br label %cleanup, !dbg !6053

cleanup:                                          ; preds = %if.end159, %if.then134
  %retval.0 = phi i8 [ 1, %if.then134 ], [ %., %if.end159 ], !dbg !6053
  ret i8 %retval.0, !dbg !6171
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expr_with_var_bounded_array_refs_p(%union.tree_node* %expr) unnamed_addr #5 !dbg !6172 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6174, metadata !DIExpression()), !dbg !6175
  br label %while.cond, !dbg !6176

while.cond:                                       ; preds = %if.end, %entry
  %expr.addr.0 = phi %union.tree_node* [ %expr, %entry ], [ %1, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !6174, metadata !DIExpression()), !dbg !6175
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %expr.addr.0) #7, !dbg !6177
  %tobool = icmp eq i8 %call, 0, !dbg !6176
  br i1 %tobool, label %return, label %while.body, !dbg !6176

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6178
  %bf.load = load i64, i64* %0, align 8, !dbg !6178
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6181
  %cmp = icmp eq i64 %bf.cast1, 45, !dbg !6181
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6182

land.lhs.true:                                    ; preds = %while.body
  %call1 = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %expr.addr.0) #6, !dbg !6183
  %call2 = tail call i32 @host_integerp(%union.tree_node* %call1, i32 0) #6, !dbg !6184
  %tobool3 = icmp eq i32 %call2, 0, !dbg !6184
  br i1 %tobool3, label %return, label %if.end, !dbg !6185

if.end:                                           ; preds = %land.lhs.true, %while.body
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6186
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6186
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6174, metadata !DIExpression()), !dbg !6175
  br label %while.cond, !dbg !6176, !llvm.loop !6187

return:                                           ; preds = %land.lhs.true, %while.cond
  %retval.0 = phi i8 [ 1, %land.lhs.true ], [ 0, %while.cond ], !dbg !6175
  ret i8 %retval.0, !dbg !6189
}

declare dso_local %union.tree_node* @array_ref_low_bound(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_access_tree_1(%struct._IO_FILE* %f, %struct.access* %access, i32 %level) unnamed_addr #5 !dbg !6190 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !6194, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !6195, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata i32 %level, metadata !6196, metadata !DIExpression()), !dbg !6199
  %add = add nsw i32 %level, 1, !dbg !6200
  br label %do.body, !dbg !6202

do.body:                                          ; preds = %if.end, %entry
  %access.addr.0 = phi %struct.access* [ %access, %entry ], [ %2, %if.end ]
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0, metadata !6195, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata i32 0, metadata !6197, metadata !DIExpression()), !dbg !6203
  br label %for.cond, !dbg !6204

for.cond:                                         ; preds = %for.body, %do.body
  %i.0 = phi i32 [ 0, %do.body ], [ %inc, %for.body ], !dbg !6206
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6197, metadata !DIExpression()), !dbg !6203
  %cmp = icmp slt i32 %i.0, %level, !dbg !6207
  br i1 %cmp, label %for.body, label %for.end, !dbg !6209

for.body:                                         ; preds = %for.cond
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6210
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !6211
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6197, metadata !DIExpression()), !dbg !6203
  br label %for.cond, !dbg !6213, !llvm.loop !6214

for.end:                                          ; preds = %for.cond
  tail call fastcc void @dump_access(%struct._IO_FILE* %f, %struct.access* %access.addr.0, i8 zeroext 1) #7, !dbg !6216
  %first_child = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 8, !dbg !6217
  %1 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !6217
  %tobool = icmp eq %struct.access* %1, null, !dbg !6218
  br i1 %tobool, label %if.end, label %if.then, !dbg !6219

if.then:                                          ; preds = %for.end
  tail call fastcc void @dump_access_tree_1(%struct._IO_FILE* %f, %struct.access* nonnull %1, i32 %add) #7, !dbg !6220
  br label %if.end, !dbg !6220

if.end:                                           ; preds = %for.end, %if.then
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 9, !dbg !6221
  %2 = load %struct.access*, %struct.access** %next_sibling, align 8, !dbg !6221
  call void @llvm.dbg.value(metadata %struct.access* %2, metadata !6195, metadata !DIExpression()), !dbg !6199
  %tobool2 = icmp eq %struct.access* %2, null, !dbg !6222
  br i1 %tobool2, label %do.end, label %do.body, !dbg !6222, !llvm.loop !6223

do.end:                                           ; preds = %if.end
  ret void, !dbg !6225
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_access(%struct._IO_FILE* %f, %struct.access* %access, i8 zeroext %grp) unnamed_addr #5 !dbg !6226 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !6230, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !6231, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 1, metadata !6232, metadata !DIExpression()), !dbg !6233
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !6234
  %base = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 2, !dbg !6235
  %0 = bitcast %union.tree_node** %base to %struct.tree_decl_minimal**, !dbg !6235
  %1 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %0, align 8, !dbg !6235
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 2, !dbg !6235
  %2 = load i32, i32* %uid, align 4, !dbg !6235
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i32 %2) #6, !dbg !6236
  %3 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !6237
  tail call void @print_generic_expr(%struct._IO_FILE* %f, %union.tree_node* %3, i32 0) #6, !dbg !6238
  %offset = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 0, !dbg !6239
  %4 = load i64, i64* %offset, align 8, !dbg !6239
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i64 %4) #6, !dbg !6240
  %size = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 1, !dbg !6241
  %5 = load i64, i64* %size, align 8, !dbg !6241
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0), i64 %5) #6, !dbg !6242
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !6243
  %expr = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 3, !dbg !6244
  %6 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !6244
  tail call void @print_generic_expr(%struct._IO_FILE* %f, %union.tree_node* %6, i32 0) #6, !dbg !6245
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !6246
  %type = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 4, !dbg !6247
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6247
  tail call void @print_generic_expr(%struct._IO_FILE* %f, %union.tree_node* %7, i32 0) #6, !dbg !6248
  %grp_write = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 14, !dbg !6249
  %bf.load = load i16, i16* %grp_write, align 8, !dbg !6249
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !6251
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6251
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6251
  %bf.lshr8 = lshr i16 %bf.load, 1, !dbg !6252
  %bf.clear9 = and i16 %bf.lshr8, 1, !dbg !6252
  %bf.cast10 = zext i16 %bf.clear9 to i32, !dbg !6252
  %bf.lshr12 = lshr i16 %bf.load, 4, !dbg !6253
  %bf.clear13 = and i16 %bf.lshr12, 1, !dbg !6253
  %bf.cast14 = zext i16 %bf.clear13 to i32, !dbg !6253
  %bf.lshr16 = lshr i16 %bf.load, 5, !dbg !6254
  %bf.clear17 = and i16 %bf.lshr16, 1, !dbg !6254
  %bf.cast18 = zext i16 %bf.clear17 to i32, !dbg !6254
  %bf.lshr20 = lshr i16 %bf.load, 6, !dbg !6255
  %bf.clear21 = and i16 %bf.lshr20, 1, !dbg !6255
  %bf.cast22 = zext i16 %bf.clear21 to i32, !dbg !6255
  %bf.lshr24 = lshr i16 %bf.load, 7, !dbg !6256
  %bf.clear25 = and i16 %bf.lshr24, 1, !dbg !6256
  %bf.cast26 = zext i16 %bf.clear25 to i32, !dbg !6256
  %bf.lshr28 = lshr i16 %bf.load, 8, !dbg !6257
  %bf.clear29 = and i16 %bf.lshr28, 1, !dbg !6257
  %bf.cast30 = zext i16 %bf.clear29 to i32, !dbg !6257
  %bf.lshr32 = lshr i16 %bf.load, 9, !dbg !6258
  %bf.clear33 = and i16 %bf.lshr32, 1, !dbg !6258
  %bf.cast34 = zext i16 %bf.clear33 to i32, !dbg !6258
  %bf.lshr36 = lshr i16 %bf.load, 10, !dbg !6259
  %bf.clear37 = and i16 %bf.lshr36, 1, !dbg !6259
  %bf.cast38 = zext i16 %bf.clear37 to i32, !dbg !6259
  %bf.lshr40 = lshr i16 %bf.load, 11, !dbg !6260
  %bf.clear41 = and i16 %bf.lshr40, 1, !dbg !6260
  %bf.cast42 = zext i16 %bf.clear41 to i32, !dbg !6260
  %bf.lshr44 = lshr i16 %bf.load, 13, !dbg !6261
  %bf.clear45 = and i16 %bf.lshr44, 1, !dbg !6261
  %bf.cast46 = zext i16 %bf.clear45 to i32, !dbg !6261
  %call47 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([264 x i8], [264 x i8]* @.str.41, i64 0, i64 0), i32 %bf.cast, i32 %bf.cast10, i32 %bf.cast14, i32 %bf.cast18, i32 %bf.cast22, i32 %bf.cast26, i32 %bf.cast30, i32 %bf.cast34, i32 %bf.cast38, i32 %bf.cast42, i32 %bf.cast46) #6, !dbg !6262
  ret void, !dbg !6263
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @get_access_for_expr(%union.tree_node* %expr) unnamed_addr #5 !dbg !6264 {
entry:
  %offset = alloca i64, align 8
  %size = alloca i64, align 8
  %max_size = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6266, metadata !DIExpression()), !dbg !6271
  %0 = bitcast i64* %offset to i8*, !dbg !6272
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6272
  %1 = bitcast i64* %size to i8*, !dbg !6272
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6272
  %2 = bitcast i64* %max_size to i8*, !dbg !6272
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6272
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6273
  %bf.load = load i64, i64* %3, align 8, !dbg !6273
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6275
  %cmp = icmp eq i64 %bf.cast1, 118, !dbg !6275
  br i1 %cmp, label %if.then, label %if.end, !dbg !6276

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6277
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6277
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6266, metadata !DIExpression()), !dbg !6271
  br label %if.end, !dbg !6278

if.end:                                           ; preds = %if.then, %entry
  %expr.addr.0 = phi %union.tree_node* [ %4, %if.then ], [ %expr, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !6266, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i64* %offset, metadata !6267, metadata !DIExpression(DW_OP_deref)), !dbg !6271
  call void @llvm.dbg.value(metadata i64* %size, metadata !6268, metadata !DIExpression(DW_OP_deref)), !dbg !6271
  call void @llvm.dbg.value(metadata i64* %max_size, metadata !6269, metadata !DIExpression(DW_OP_deref)), !dbg !6271
  %call = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %expr.addr.0, i64* nonnull %offset, i64* nonnull %size, i64* nonnull %max_size) #6, !dbg !6279
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6270, metadata !DIExpression()), !dbg !6271
  %5 = load i64, i64* %max_size, align 8, !dbg !6280
  call void @llvm.dbg.value(metadata i64 %5, metadata !6269, metadata !DIExpression()), !dbg !6271
  %cmp2 = icmp eq i64 %5, -1, !dbg !6282
  br i1 %cmp2, label %cleanup, label %lor.lhs.false, !dbg !6283

lor.lhs.false:                                    ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6284
  %bf.load4 = load i64, i64* %6, align 8, !dbg !6284
  %bf.cast6 = and i64 %bf.load4, 65535, !dbg !6284
  %arrayidx7 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast6, !dbg !6284
  %7 = load i32, i32* %arrayidx7, align 4, !dbg !6284
  %cmp8 = icmp eq i32 %7, 3, !dbg !6284
  br i1 %cmp8, label %if.end10, label %cleanup, !dbg !6285

if.end10:                                         ; preds = %lor.lhs.false
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !6286
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6288
  %9 = load i32, i32* %uid, align 4, !dbg !6288
  %call11 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !6289
  %tobool = icmp eq i32 %call11, 0, !dbg !6289
  br i1 %tobool, label %cleanup, label %if.end13, !dbg !6290

if.end13:                                         ; preds = %if.end10
  %10 = load i64, i64* %offset, align 8, !dbg !6291
  call void @llvm.dbg.value(metadata i64 %10, metadata !6267, metadata !DIExpression()), !dbg !6271
  %11 = load i64, i64* %max_size, align 8, !dbg !6292
  call void @llvm.dbg.value(metadata i64 %11, metadata !6269, metadata !DIExpression()), !dbg !6271
  %call14 = call fastcc %struct.access* @get_var_base_offset_size_access(%union.tree_node* %call, i64 %10, i64 %11) #7, !dbg !6293
  br label %cleanup, !dbg !6294

cleanup:                                          ; preds = %if.end10, %if.end, %lor.lhs.false, %if.end13
  %retval.0 = phi %struct.access* [ %call14, %if.end13 ], [ null, %lor.lhs.false ], [ null, %if.end ], [ null, %if.end10 ], !dbg !6271
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6295
  ret %struct.access* %retval.0, !dbg !6295
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_access_replacement(%struct.access* %access) unnamed_addr #0 !dbg !6296 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !6300, metadata !DIExpression()), !dbg !6301
  %grp_to_be_replaced = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 14, !dbg !6302
  %bf.load = load i16, i16* %grp_to_be_replaced, align 8, !dbg !6302
  %bf.clear = and i16 %bf.load, 1024, !dbg !6302
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !6302
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6302

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1709, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6302
  br label %cond.end, !dbg !6302

cond.end:                                         ; preds = %entry, %cond.true
  %replacement_decl = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 13, !dbg !6303
  %0 = load %union.tree_node*, %union.tree_node** %replacement_decl, align 8, !dbg !6303
  %tobool1 = icmp eq %union.tree_node* %0, null, !dbg !6305
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6306

if.then:                                          ; preds = %cond.end
  %call = tail call fastcc %union.tree_node* @create_access_replacement(%struct.access* %access) #7, !dbg !6307
  store %union.tree_node* %call, %union.tree_node** %replacement_decl, align 8, !dbg !6308
  br label %if.end, !dbg !6309

if.end:                                           ; preds = %cond.end, %if.then
  %1 = phi %union.tree_node* [ %0, %cond.end ], [ %call, %if.then ], !dbg !6310
  ret %union.tree_node* %1, !dbg !6311
}

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @generate_subtree_copies(%struct.access* %access, %union.tree_node* %agg, i64 %top_offset, i64 %start_offset, i64 %chunk_size, %struct.gimple_stmt_iterator* %gsi, i8 zeroext %write, i8 zeroext %insert_after) unnamed_addr #5 !dbg !6312 {
entry:
  %expr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !6316, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata %union.tree_node* %agg, metadata !6317, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata i64 %top_offset, metadata !6318, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata i64 %start_offset, metadata !6319, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata i64 %chunk_size, metadata !6320, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6321, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata i8 %write, metadata !6322, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata i8 %insert_after, metadata !6323, metadata !DIExpression()), !dbg !6331
  %0 = bitcast %union.tree_node** %expr to i8*, !dbg !6332
  %tobool = icmp eq i64 %chunk_size, 0, !dbg !6333
  %add = add nsw i64 %start_offset, %chunk_size, !dbg !6333
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %agg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6335
  %tobool12 = icmp eq i8 %write, 0, !dbg !6336
  %tobool20 = icmp eq i8 %insert_after, 0, !dbg !6338
  %conv = zext i1 %tobool20 to i8, !dbg !6338
  %cond23 = zext i1 %tobool20 to i32, !dbg !6338
  br label %do.body, !dbg !6341

do.body:                                          ; preds = %cleanup, %entry
  %access.addr.0 = phi %struct.access* [ %access, %entry ], [ %access.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0, metadata !6316, metadata !DIExpression()), !dbg !6331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6342
  call void @llvm.dbg.value(metadata %union.tree_node* %agg, metadata !6324, metadata !DIExpression()), !dbg !6332
  store %union.tree_node* %agg, %union.tree_node** %expr, align 8, !dbg !6343
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6344

land.lhs.true:                                    ; preds = %do.body
  %offset = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 0, !dbg !6345
  %1 = load i64, i64* %offset, align 8, !dbg !6345
  %cmp = icmp slt i64 %1, %add, !dbg !6346
  br i1 %cmp, label %if.end, label %cleanup, !dbg !6347

if.end:                                           ; preds = %land.lhs.true, %do.body
  %grp_to_be_replaced = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 14, !dbg !6348
  %bf.load = load i16, i16* %grp_to_be_replaced, align 8, !dbg !6348
  %bf.clear = and i16 %bf.load, 1024, !dbg !6348
  %tobool1 = icmp eq i16 %bf.clear, 0, !dbg !6349
  br i1 %tobool1, label %if.end51, label %land.lhs.true2, !dbg !6350

land.lhs.true2:                                   ; preds = %if.end
  br i1 %tobool, label %if.then7, label %lor.lhs.false, !dbg !6351

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %offset4 = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 0, !dbg !6352
  %2 = load i64, i64* %offset4, align 8, !dbg !6352
  %size = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 1, !dbg !6353
  %3 = load i64, i64* %size, align 8, !dbg !6353
  %add5 = add nsw i64 %2, %3, !dbg !6354
  %cmp6 = icmp sgt i64 %add5, %start_offset, !dbg !6355
  br i1 %cmp6, label %if.then7, label %if.end51, !dbg !6356

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true2
  %call = call fastcc %union.tree_node* @get_access_replacement(%struct.access* %access.addr.0) #7, !dbg !6357
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6326, metadata !DIExpression()), !dbg !6335
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6358
  %offset8 = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 0, !dbg !6359
  %5 = load i64, i64* %offset8, align 8, !dbg !6359
  %sub = sub nsw i64 %5, %top_offset, !dbg !6360
  %type9 = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 4, !dbg !6361
  %6 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !6361
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !6324, metadata !DIExpression(DW_OP_deref)), !dbg !6332
  %call10 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %expr, %union.tree_node* %4, i64 %sub, %union.tree_node* %6, i8 zeroext 0) #7, !dbg !6362
  call void @llvm.dbg.value(metadata i8 %call10, metadata !6329, metadata !DIExpression()), !dbg !6335
  %tobool11 = icmp eq i8 %call10, 0, !dbg !6363
  br i1 %tobool11, label %cond.true, label %cond.end, !dbg !6363

cond.true:                                        ; preds = %if.then7
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 2190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6363
  br label %cond.end, !dbg !6363

cond.end:                                         ; preds = %if.then7, %cond.true
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !6364

if.then13:                                        ; preds = %cond.end
  %bf.load14 = load i16, i16* %grp_to_be_replaced, align 8, !dbg !6365
  %bf.clear16 = and i16 %bf.load14, 512, !dbg !6365
  %tobool18 = icmp eq i16 %bf.clear16, 0, !dbg !6366
  br i1 %tobool18, label %if.then13.if.end25_crit_edge, label %if.then19, !dbg !6367

if.then13.if.end25_crit_edge:                     ; preds = %if.then13
  %.pre = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !6368
  br label %if.end25, !dbg !6367

if.then19:                                        ; preds = %if.then13
  %7 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !6369
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6324, metadata !DIExpression()), !dbg !6332
  %call24 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %7, i8 zeroext 1, %union.tree_node* null, i8 zeroext %conv, i32 %cond23) #6, !dbg !6370
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !6324, metadata !DIExpression()), !dbg !6332
  store %union.tree_node* %call24, %union.tree_node** %expr, align 8, !dbg !6371
  br label %if.end25, !dbg !6372

if.end25:                                         ; preds = %if.then13.if.end25_crit_edge, %if.then19
  %8 = phi %union.tree_node* [ %.pre, %if.then13.if.end25_crit_edge ], [ %call24, %if.then19 ], !dbg !6368
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6324, metadata !DIExpression()), !dbg !6332
  %call26 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call, %union.tree_node* %8) #6, !dbg !6368
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call26, metadata !6330, metadata !DIExpression()), !dbg !6335
  br label %if.end46, !dbg !6373

if.else:                                          ; preds = %cond.end
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6374
  %bf.load27 = load i64, i64* %9, align 8, !dbg !6376
  %bf.set = or i64 %bf.load27, 8388608, !dbg !6376
  store i64 %bf.set, i64* %9, align 8, !dbg !6376
  %bf.load30 = load i16, i16* %grp_to_be_replaced, align 8, !dbg !6377
  %bf.clear32 = and i16 %bf.load30, 512, !dbg !6377
  %tobool34 = icmp eq i16 %bf.clear32, 0, !dbg !6379
  br i1 %tobool34, label %if.end44, label %if.then35, !dbg !6380

if.then35:                                        ; preds = %if.else
  %call43 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call, i8 zeroext 1, %union.tree_node* null, i8 zeroext %conv, i32 %cond23) #6, !dbg !6381
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !6326, metadata !DIExpression()), !dbg !6335
  br label %if.end44, !dbg !6382

if.end44:                                         ; preds = %if.else, %if.then35
  %repl.0 = phi %union.tree_node* [ %call43, %if.then35 ], [ %call, %if.else ], !dbg !6335
  call void @llvm.dbg.value(metadata %union.tree_node* %repl.0, metadata !6326, metadata !DIExpression()), !dbg !6335
  %10 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !6383
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !6324, metadata !DIExpression()), !dbg !6332
  %call45 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %10, %union.tree_node* %repl.0) #6, !dbg !6383
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call45, metadata !6330, metadata !DIExpression()), !dbg !6335
  br label %if.end46

if.end46:                                         ; preds = %if.end44, %if.end25
  %stmt.0 = phi %union.gimple_statement_d* [ %call26, %if.end25 ], [ %call45, %if.end44 ], !dbg !6336
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !6330, metadata !DIExpression()), !dbg !6335
  br i1 %tobool20, label %if.else49, label %if.then48, !dbg !6384

if.then48:                                        ; preds = %if.end46
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt.0, i32 0) #6, !dbg !6385
  br label %if.end50, !dbg !6385

if.else49:                                        ; preds = %if.end46
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt.0, i32 1) #6, !dbg !6387
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.then48
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt.0) #7, !dbg !6388
  %11 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 2), align 4, !dbg !6389
  %inc = add nsw i32 %11, 1, !dbg !6389
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 2), align 4, !dbg !6389
  br label %if.end51, !dbg !6390

if.end51:                                         ; preds = %if.end, %if.end50, %lor.lhs.false
  %first_child = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 8, !dbg !6391
  %12 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !6391
  %tobool52 = icmp eq %struct.access* %12, null, !dbg !6393
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !6394

if.then53:                                        ; preds = %if.end51
  call fastcc void @generate_subtree_copies(%struct.access* nonnull %12, %union.tree_node* %agg, i64 %top_offset, i64 %start_offset, i64 %chunk_size, %struct.gimple_stmt_iterator* %gsi, i8 zeroext %write, i8 zeroext %insert_after) #7, !dbg !6395
  br label %if.end55, !dbg !6395

if.end55:                                         ; preds = %if.end51, %if.then53
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 9, !dbg !6396
  %13 = load %struct.access*, %struct.access** %next_sibling, align 8, !dbg !6396
  call void @llvm.dbg.value(metadata %struct.access* %13, metadata !6316, metadata !DIExpression()), !dbg !6331
  br label %cleanup, !dbg !6397

cleanup:                                          ; preds = %land.lhs.true, %if.end55
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end55 ], [ false, %land.lhs.true ]
  %access.addr.1 = phi %struct.access* [ %13, %if.end55 ], [ %access.addr.0, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.1, metadata !6316, metadata !DIExpression()), !dbg !6331
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6397
  %tobool56 = icmp ne %struct.access* %access.addr.1, null, !dbg !6398
  %or.cond = and i1 %cleanup.dest.slot.0, %tobool56
  br i1 %or.cond, label %do.body, label %do.end, !llvm.loop !6399

do.end:                                           ; preds = %cleanup
  ret void, !dbg !6401
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @get_var_base_offset_size_access(%union.tree_node* %base, i64 %offset, i64 %size) unnamed_addr #5 !dbg !6402 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !6404, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i64 %offset, metadata !6405, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i64 %size, metadata !6406, metadata !DIExpression()), !dbg !6408
  %call = tail call fastcc %struct.access* @get_first_repr_for_decl(%union.tree_node* %base) #7, !dbg !6409
  call void @llvm.dbg.value(metadata %struct.access* %call, metadata !6407, metadata !DIExpression()), !dbg !6408
  br label %while.cond, !dbg !6410

while.cond:                                       ; preds = %while.body, %entry
  %access.0 = phi %struct.access* [ %call, %entry ], [ %2, %while.body ], !dbg !6408
  call void @llvm.dbg.value(metadata %struct.access* %access.0, metadata !6407, metadata !DIExpression()), !dbg !6408
  %cond = icmp eq %struct.access* %access.0, null, !dbg !6411
  br i1 %cond, label %cleanup.loopexit, label %land.rhs, !dbg !6411

land.rhs:                                         ; preds = %while.cond
  %offset1 = getelementptr inbounds %struct.access, %struct.access* %access.0, i64 0, i32 0, !dbg !6412
  %0 = load i64, i64* %offset1, align 8, !dbg !6412
  %size2 = getelementptr inbounds %struct.access, %struct.access* %access.0, i64 0, i32 1, !dbg !6413
  %1 = load i64, i64* %size2, align 8, !dbg !6413
  %add = add nsw i64 %0, %1, !dbg !6414
  %cmp = icmp sgt i64 %add, %offset, !dbg !6415
  br i1 %cmp, label %while.end, label %while.body, !dbg !6410

while.body:                                       ; preds = %land.rhs
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %access.0, i64 0, i32 6, !dbg !6416
  %2 = load %struct.access*, %struct.access** %next_grp, align 8, !dbg !6416
  call void @llvm.dbg.value(metadata %struct.access* %2, metadata !6407, metadata !DIExpression()), !dbg !6408
  br label %while.cond, !dbg !6410, !llvm.loop !6417

while.end:                                        ; preds = %land.rhs
  %access.0.lcssa3 = phi %struct.access* [ %access.0, %land.rhs ], !dbg !6408
  call void @llvm.dbg.value(metadata %struct.access* %access.0.lcssa3, metadata !6407, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata %struct.access* %access.0.lcssa3, metadata !6407, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata %struct.access* %access.0.lcssa3, metadata !6407, metadata !DIExpression()), !dbg !6408
  %call4 = tail call fastcc %struct.access* @find_access_in_subtree(%struct.access* nonnull %access.0.lcssa3, i64 %offset, i64 %size) #7, !dbg !6418
  br label %cleanup, !dbg !6419

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup, !dbg !6420

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  %retval.0 = phi %struct.access* [ %call4, %while.end ], [ null, %cleanup.loopexit ], !dbg !6408
  ret %struct.access* %retval.0, !dbg !6420
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @find_access_in_subtree(%struct.access* %access, i64 %offset, i64 %size) unnamed_addr #5 !dbg !6421 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !6425, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata i64 %offset, metadata !6426, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata i64 %size, metadata !6427, metadata !DIExpression()), !dbg !6430
  br label %while.cond, !dbg !6431

while.cond:                                       ; preds = %while.end, %entry
  %access.addr.0 = phi %struct.access* [ %access, %entry ], [ %child.0.lcssa, %while.end ]
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0, metadata !6425, metadata !DIExpression()), !dbg !6430
  %tobool = icmp eq %struct.access* %access.addr.0, null, !dbg !6432
  br i1 %tobool, label %while.end12, label %land.rhs, !dbg !6433

land.rhs:                                         ; preds = %while.cond
  %offset1 = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 0, !dbg !6434
  %0 = load i64, i64* %offset1, align 8, !dbg !6434
  %cmp = icmp eq i64 %0, %offset, !dbg !6435
  br i1 %cmp, label %lor.rhs, label %while.body, !dbg !6436

lor.rhs:                                          ; preds = %land.rhs
  %size2 = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 1, !dbg !6437
  %1 = load i64, i64* %size2, align 8, !dbg !6437
  %cmp3 = icmp eq i64 %1, %size, !dbg !6438
  br i1 %cmp3, label %while.end12, label %while.body, !dbg !6431

while.body:                                       ; preds = %lor.rhs, %land.rhs
  %first_child = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 8, !dbg !6439
  br label %while.cond4, !dbg !6440

while.cond4:                                      ; preds = %while.body11, %while.body
  %child.0.in = phi %struct.access** [ %first_child, %while.body ], [ %next_sibling, %while.body11 ]
  %child.0 = load %struct.access*, %struct.access** %child.0.in, align 8, !dbg !6441
  call void @llvm.dbg.value(metadata %struct.access* %child.0, metadata !6428, metadata !DIExpression()), !dbg !6441
  %tobool5 = icmp eq %struct.access* %child.0, null, !dbg !6442
  br i1 %tobool5, label %while.end, label %land.rhs6, !dbg !6443

land.rhs6:                                        ; preds = %while.cond4
  %offset7 = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 0, !dbg !6444
  %2 = load i64, i64* %offset7, align 8, !dbg !6444
  %size8 = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 1, !dbg !6445
  %3 = load i64, i64* %size8, align 8, !dbg !6445
  %add = add nsw i64 %2, %3, !dbg !6446
  %cmp9 = icmp sgt i64 %add, %offset, !dbg !6447
  br i1 %cmp9, label %while.end, label %while.body11, !dbg !6440

while.body11:                                     ; preds = %land.rhs6
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 9, !dbg !6448
  br label %while.cond4, !dbg !6440, !llvm.loop !6449

while.end:                                        ; preds = %land.rhs6, %while.cond4
  %child.0.lcssa = phi %struct.access* [ %child.0, %land.rhs6 ], [ %child.0, %while.cond4 ], !dbg !6441
  call void @llvm.dbg.value(metadata %struct.access* %child.0.lcssa, metadata !6425, metadata !DIExpression()), !dbg !6430
  br label %while.cond, !dbg !6431, !llvm.loop !6450

while.end12:                                      ; preds = %lor.rhs, %while.cond
  %access.addr.0.lcssa = phi %struct.access* [ %access.addr.0, %lor.rhs ], [ %access.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0.lcssa, metadata !6425, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0.lcssa, metadata !6425, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0.lcssa, metadata !6425, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0.lcssa, metadata !6425, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0.lcssa, metadata !6425, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0.lcssa, metadata !6425, metadata !DIExpression()), !dbg !6430
  ret %struct.access* %access.addr.0.lcssa, !dbg !6452
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @create_access_replacement(%struct.access* %access) unnamed_addr #5 !dbg !6453 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !6455, metadata !DIExpression()), !dbg !6460
  %type = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 4, !dbg !6461
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6461
  %call = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !6462
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6456, metadata !DIExpression()), !dbg !6460
  %call1 = tail call fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %call) #7, !dbg !6463
  %call2 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call) #6, !dbg !6464
  tail call void @mark_sym_for_renaming(%union.tree_node* %call) #6, !dbg !6465
  %grp_partial_lhs = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 14, !dbg !6466
  %bf.load = load i16, i16* %grp_partial_lhs, align 8, !dbg !6466
  %bf.clear = and i16 %bf.load, 512, !dbg !6466
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !6468
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6469

land.lhs.true:                                    ; preds = %entry
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !6470
  %2 = load i64*, i64** %1, align 8, !dbg !6470
  %bf.load4 = load i64, i64* %2, align 8, !dbg !6470
  %bf.cast61 = and i64 %bf.load4, 65535, !dbg !6471
  %cmp = icmp eq i64 %bf.cast61, 13, !dbg !6471
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6472

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp12 = icmp eq i64 %bf.cast61, 14, !dbg !6473
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6474

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6475
  %3 = bitcast i40* %gimple_reg_flag to i64*, !dbg !6475
  %bf.load13 = load i64, i64* %3, align 8, !dbg !6476
  %bf.set = or i64 %bf.load13, 134217728, !dbg !6476
  store i64 %bf.set, i64* %3, align 8, !dbg !6476
  br label %if.end, !dbg !6475

if.end:                                           ; preds = %entry, %if.then, %lor.lhs.false
  %base15 = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 2, !dbg !6477
  %4 = bitcast %union.tree_node** %base15 to %struct.tree_decl_minimal**, !dbg !6477
  %5 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %4, align 8, !dbg !6477
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %5, i64 0, i32 1, !dbg !6477
  %6 = load i32, i32* %locus, align 8, !dbg !6477
  %locus17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6478
  store i32 %6, i32* %locus17, align 8, !dbg !6479
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6480
  %7 = bitcast i40* %artificial_flag to i64*, !dbg !6480
  %bf.load19 = load i64, i64* %7, align 8, !dbg !6481
  %bf.set21 = or i64 %bf.load19, 4096, !dbg !6481
  store i64 %bf.set21, i64* %7, align 8, !dbg !6481
  %8 = bitcast %union.tree_node** %base15 to %struct.tree_decl_common**, !dbg !6482
  %9 = load %struct.tree_decl_common*, %struct.tree_decl_common** %8, align 8, !dbg !6482
  %ignored_flag = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %9, i64 0, i32 2, !dbg !6482
  %10 = bitcast i40* %ignored_flag to i64*, !dbg !6482
  %bf.load24 = load i64, i64* %10, align 8, !dbg !6482
  %bf.cast27 = and i64 %bf.load24, 1024, !dbg !6482
  %bf.clear31 = and i64 %bf.set21, -1025, !dbg !6483
  %bf.set32 = or i64 %bf.clear31, %bf.cast27, !dbg !6483
  store i64 %bf.set32, i64* %7, align 8, !dbg !6483
  %11 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %4, align 8, !dbg !6484
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %11, i64 0, i32 3, !dbg !6484
  %12 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !6484
  %tobool35 = icmp eq %union.tree_node* %12, null, !dbg !6484
  br i1 %tobool35, label %if.else, label %land.lhs.true36, !dbg !6485

land.lhs.true36:                                  ; preds = %if.end
  %ignored_flag39 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %11, i64 1, i32 0, i32 1, !dbg !6486
  %13 = bitcast %union.tree_node** %ignored_flag39 to i64*, !dbg !6486
  %bf.load40 = load i64, i64* %13, align 8, !dbg !6486
  %bf.cast433 = and i64 %bf.load40, 1024, !dbg !6486
  %tobool44 = icmp eq i64 %bf.cast433, 0, !dbg !6486
  br i1 %tobool44, label %land.lhs.true45, label %if.else, !dbg !6487

land.lhs.true45:                                  ; preds = %land.lhs.true36
  %bf.cast524 = and i64 %bf.load40, 4096, !dbg !6488
  %tobool53 = icmp eq i64 %bf.cast524, 0, !dbg !6488
  br i1 %tobool53, label %if.then54, label %if.else, !dbg !6489

if.then54:                                        ; preds = %land.lhs.true45
  %expr = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 3, !dbg !6490
  %14 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !6490
  %call55 = tail call fastcc i8* @make_fancy_name(%union.tree_node* %14) #7, !dbg !6491
  call void @llvm.dbg.value(metadata i8* %call55, metadata !6457, metadata !DIExpression()), !dbg !6492
  %call56 = tail call %union.tree_node* @get_identifier(i8* %call55) #6, !dbg !6493
  %name58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6494
  store %union.tree_node* %call56, %union.tree_node** %name58, align 8, !dbg !6495
  %15 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 1) to i64*), align 8, !dbg !6496
  %sub.ptr.lhs.cast = ptrtoint i8* %call55 to i64, !dbg !6496
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %15, !dbg !6496
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6496
  %cmp59 = icmp sgt i64 %sub.ptr.sub, 0, !dbg !6496
  %16 = inttoptr i64 %15 to i8*, !dbg !6496
  br i1 %cmp59, label %land.lhs.true60, label %cond.false, !dbg !6496

land.lhs.true60:                                  ; preds = %if.then54
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4) to i64*), align 8, !dbg !6496
  %sub.ptr.sub63 = sub i64 %17, %15, !dbg !6496
  %cmp64 = icmp slt i64 %sub.ptr.sub, %sub.ptr.sub63, !dbg !6496
  br i1 %cmp64, label %cond.true, label %cond.false, !dbg !6496

cond.true:                                        ; preds = %land.lhs.true60
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %sub.ptr.sub, !dbg !6496
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 2), align 8, !dbg !6496
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6496
  br label %cond.end, !dbg !6496

cond.false:                                       ; preds = %land.lhs.true60, %if.then54
  %add.ptr65 = getelementptr inbounds i8, i8* %16, i64 %sub.ptr.sub, !dbg !6496
  tail call void @obstack_free(%struct.obstack* nonnull @name_obstack, i8* %add.ptr65) #6, !dbg !6496
  br label %cond.end, !dbg !6496

cond.end:                                         ; preds = %cond.false, %cond.true
  %18 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !6497
  tail call void @decl_debug_expr_insert(%union.tree_node* %call, %union.tree_node* %18) #6, !dbg !6497
  %bf.load68 = load i64, i64* %7, align 8, !dbg !6498
  %bf.set70 = or i64 %bf.load68, 16384, !dbg !6498
  store i64 %bf.set70, i64* %7, align 8, !dbg !6498
  %19 = bitcast %union.tree_node** %base15 to i64**, !dbg !6499
  %20 = load i64*, i64** %19, align 8, !dbg !6499
  %bf.load73 = load i64, i64* %20, align 8, !dbg !6499
  %bf.cast76 = and i64 %bf.load73, 8388608, !dbg !6499
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6500
  %bf.load78 = load i64, i64* %21, align 8, !dbg !6501
  %bf.clear81 = and i64 %bf.load78, -8388609, !dbg !6501
  %bf.set82 = or i64 %bf.clear81, %bf.cast76, !dbg !6501
  store i64 %bf.set82, i64* %21, align 8, !dbg !6501
  br label %if.end88, !dbg !6502

if.else:                                          ; preds = %land.lhs.true45, %land.lhs.true36, %if.end
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6503
  %bf.load85 = load i64, i64* %22, align 8, !dbg !6504
  %bf.set87 = or i64 %bf.load85, 8388608, !dbg !6504
  store i64 %bf.set87, i64* %22, align 8, !dbg !6504
  br label %if.end88

if.end88:                                         ; preds = %if.else, %cond.end
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6505
  %tobool89 = icmp eq %struct._IO_FILE* %23, null, !dbg !6505
  br i1 %tobool89, label %if.end96, label %if.then90, !dbg !6507

if.then90:                                        ; preds = %if.end88
  %call91 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %23, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !6508
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6510
  %25 = load %union.tree_node*, %union.tree_node** %base15, align 8, !dbg !6511
  tail call void @print_generic_expr(%struct._IO_FILE* %24, %union.tree_node* %25, i32 0) #6, !dbg !6512
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6513
  %offset = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 0, !dbg !6514
  %27 = load i64, i64* %offset, align 8, !dbg !6514
  %conv = trunc i64 %27 to i32, !dbg !6515
  %size = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 1, !dbg !6516
  %28 = load i64, i64* %size, align 8, !dbg !6516
  %conv93 = trunc i64 %28 to i32, !dbg !6517
  %call94 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32, i64 0, i64 0), i32 %conv, i32 %conv93) #6, !dbg !6518
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6519
  tail call void @print_generic_expr(%struct._IO_FILE* %29, %union.tree_node* %call, i32 0) #6, !dbg !6520
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6521
  %call95 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6522
  br label %if.end96, !dbg !6523

if.end96:                                         ; preds = %if.end88, %if.then90
  %31 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 0), align 4, !dbg !6524
  %inc = add nsw i32 %31, 1, !dbg !6524
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 0), align 4, !dbg !6524
  ret %union.tree_node* %call, !dbg !6525
}

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %var) unnamed_addr #0 !dbg !6526 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6531, metadata !DIExpression()), !dbg !6534
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6535
  %bf.load = load i64, i64* %0, align 8, !dbg !6535
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6535
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !6535
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6535

cond.true:                                        ; preds = %entry
  %ann = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 1, !dbg !6535
  %1 = bitcast %union.tree_node** %ann to %struct.var_ann_d**, !dbg !6535
  br label %cond.end19, !dbg !6535

cond.false:                                       ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !6535
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !6535

cond.true6:                                       ; preds = %cond.false
  %ann7 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6535
  %2 = bitcast %union.tree_node** %ann7 to %struct.var_ann_d**, !dbg !6535
  br label %cond.end19, !dbg !6535

cond.false8:                                      ; preds = %cond.false
  %cmp13 = icmp eq i64 %bf.cast1, 36, !dbg !6535
  %ann15 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6535
  %3 = bitcast %union.tree_node** %ann15 to %struct.var_ann_d**, !dbg !6535
  %cond = select i1 %cmp13, %struct.var_ann_d** %3, %struct.var_ann_d** null, !dbg !6535
  br label %cond.end19, !dbg !6535

cond.end19:                                       ; preds = %cond.true6, %cond.false8, %cond.true
  %cond20 = phi %struct.var_ann_d** [ %1, %cond.true ], [ %2, %cond.true6 ], [ %cond, %cond.false8 ], !dbg !6535
  call void @llvm.dbg.value(metadata %struct.var_ann_d** %cond20, metadata !6532, metadata !DIExpression()), !dbg !6534
  %tobool = icmp eq %struct.var_ann_d** %cond20, null, !dbg !6536
  br i1 %tobool, label %cond.true21, label %cond.end23, !dbg !6536

cond.true21:                                      ; preds = %cond.end19
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i64 0, i64 0), i32 144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6536
  br label %cond.end23, !dbg !6536

cond.end23:                                       ; preds = %cond.end19, %cond.true21
  %4 = load %struct.var_ann_d*, %struct.var_ann_d** %cond20, align 8, !dbg !6537
  %tobool25 = icmp eq %struct.var_ann_d* %4, null, !dbg !6537
  br i1 %tobool25, label %cond.false27, label %cond.true26, !dbg !6537

cond.true26:                                      ; preds = %cond.end23
  br label %cond.end28, !dbg !6537

cond.false27:                                     ; preds = %cond.end23
  %call = tail call %struct.var_ann_d* @create_var_ann(%union.tree_node* %var) #6, !dbg !6538
  br label %cond.end28, !dbg !6537

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi %struct.var_ann_d* [ %4, %cond.true26 ], [ %call, %cond.false27 ], !dbg !6537
  ret %struct.var_ann_d* %cond29, !dbg !6539
}

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_sym_for_renaming(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @make_fancy_name(%union.tree_node* %expr) unnamed_addr #5 !dbg !6540 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6544, metadata !DIExpression()), !dbg !6545
  tail call fastcc void @make_fancy_name_1(%union.tree_node* %expr) #7, !dbg !6546
  %0 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6547
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !6547
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4), align 8, !dbg !6547
  %cmp = icmp ugt i8* %add.ptr, %1, !dbg !6547
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6547

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @name_obstack, i32 1) #6, !dbg !6547
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6547
  br label %cond.end, !dbg !6547

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi i8* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !6547
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !6547
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6547
  store i8 0, i8* %2, align 1, !dbg !6547
  %3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6548
  %4 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 2), align 8, !dbg !6548
  %cmp1 = icmp eq i8* %3, %4, !dbg !6548
  %5 = ptrtoint i8* %4 to i64, !dbg !6548
  %6 = ptrtoint i8* %3 to i64, !dbg !6548
  br i1 %cmp1, label %cond.true2, label %cond.end4, !dbg !6548

cond.true2:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 10), align 8, !dbg !6548
  %bf.set = or i8 %bf.load, 2, !dbg !6548
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 10), align 8, !dbg !6548
  br label %cond.end4, !dbg !6548

cond.end4:                                        ; preds = %cond.end, %cond.true2
  store i64 %5, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6548
  %7 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 6), align 8, !dbg !6548
  %conv = sext i32 %7 to i64, !dbg !6548
  %add = add nsw i64 %6, %conv, !dbg !6548
  %neg = xor i32 %7, -1, !dbg !6548
  %conv8 = sext i32 %neg to i64, !dbg !6548
  %and = and i64 %add, %conv8, !dbg !6548
  %8 = inttoptr i64 %and to i8*, !dbg !6548
  store i8* %8, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6548
  %9 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 1) to i64*), align 8, !dbg !6548
  %sub.ptr.sub10 = sub i64 %and, %9, !dbg !6548
  %10 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4) to i64*), align 8, !dbg !6548
  %sub.ptr.sub13 = sub i64 %10, %9, !dbg !6548
  %cmp14 = icmp sgt i64 %sub.ptr.sub10, %sub.ptr.sub13, !dbg !6548
  br i1 %cmp14, label %cond.true16, label %cond.end18, !dbg !6548

cond.true16:                                      ; preds = %cond.end4
  store i64 %10, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3) to i64*), align 8, !dbg !6548
  br label %cond.end18, !dbg !6548

cond.end18:                                       ; preds = %cond.end4, %cond.true16
  %11 = phi i64 [ %and, %cond.end4 ], [ %10, %cond.true16 ], !dbg !6548
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 2) to i64*), align 8, !dbg !6548
  ret i8* %4, !dbg !6549
}

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

declare dso_local void @obstack_free(%struct.obstack*, i8*) local_unnamed_addr #2

declare dso_local void @decl_debug_expr_insert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.var_ann_d* @create_var_ann(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @make_fancy_name_1(%union.tree_node* %expr) unnamed_addr #5 !dbg !6550 {
entry:
  %buffer = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6554, metadata !DIExpression()), !dbg !6560
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i64 0, i64 0, !dbg !6561
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6561
  call void @llvm.dbg.declare(metadata [32 x i8]* %buffer, metadata !6555, metadata !DIExpression()), !dbg !6562
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6563
  %bf.load = load i64, i64* %1, align 8, !dbg !6563
  %bf.cast = and i64 %bf.load, 65535, !dbg !6563
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6563
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6563
  %cmp = icmp eq i32 %2, 3, !dbg !6563
  br i1 %cmp, label %if.then, label %if.end, !dbg !6565

if.then:                                          ; preds = %entry
  tail call fastcc void @make_fancy_decl_name(%union.tree_node* %expr) #7, !dbg !6566
  br label %cleanup, !dbg !6568

if.end:                                           ; preds = %entry
  %3 = trunc i64 %bf.load to i16, !dbg !6569
  switch i16 %3, label %cleanup [
    i16 41, label %sw.bb
    i16 45, label %sw.bb10
    i16 42, label %sw.bb43
    i16 43, label %sw.bb43
    i16 44, label %sw.bb43
  ], !dbg !6570

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6571
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6571
  tail call fastcc void @make_fancy_name_1(%union.tree_node* %4) #7, !dbg !6573
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6574
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !6574
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4), align 8, !dbg !6574
  %cmp6 = icmp ugt i8* %add.ptr, %6, !dbg !6574
  br i1 %cmp6, label %cond.true, label %cond.end, !dbg !6574

cond.true:                                        ; preds = %sw.bb
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @name_obstack, i32 1) #6, !dbg !6574
  %.pre4 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6574
  br label %cond.end, !dbg !6574

cond.end:                                         ; preds = %sw.bb, %cond.true
  %7 = phi i8* [ %5, %sw.bb ], [ %.pre4, %cond.true ], !dbg !6574
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i64 1, !dbg !6574
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6574
  store i8 36, i8* %7, align 1, !dbg !6574
  %arrayidx9 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6575
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8, !dbg !6575
  tail call fastcc void @make_fancy_decl_name(%union.tree_node* %8) #7, !dbg !6576
  br label %cleanup, !dbg !6577

sw.bb10:                                          ; preds = %if.end
  %operands12 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6578
  %9 = load %union.tree_node*, %union.tree_node** %operands12, align 8, !dbg !6578
  tail call fastcc void @make_fancy_name_1(%union.tree_node* %9) #7, !dbg !6579
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6580
  %add.ptr14 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !6580
  %11 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4), align 8, !dbg !6580
  %cmp15 = icmp ugt i8* %add.ptr14, %11, !dbg !6580
  br i1 %cmp15, label %cond.true16, label %cond.end18, !dbg !6580

cond.true16:                                      ; preds = %sw.bb10
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @name_obstack, i32 1) #6, !dbg !6580
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6580
  br label %cond.end18, !dbg !6580

cond.end18:                                       ; preds = %sw.bb10, %cond.true16
  %12 = phi i8* [ %10, %sw.bb10 ], [ %.pre, %cond.true16 ], !dbg !6580
  %incdec.ptr20 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !6580
  store i8* %incdec.ptr20, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6580
  store i8 36, i8* %12, align 1, !dbg !6580
  %arrayidx23 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands12, i64 1, !dbg !6581
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8, !dbg !6581
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !6559, metadata !DIExpression()), !dbg !6560
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6582
  %bf.load25 = load i64, i64* %14, align 8, !dbg !6582
  %bf.cast271 = and i64 %bf.load25, 65535, !dbg !6584
  %cmp28 = icmp eq i64 %bf.cast271, 23, !dbg !6584
  br i1 %cmp28, label %if.end30, label %cleanup, !dbg !6585

if.end30:                                         ; preds = %cond.end18
  %int_cst31 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6586
  %low = bitcast i32* %int_cst31 to i64*, !dbg !6586
  %15 = load i64, i64* %low, align 8, !dbg !6586
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i64 %15) #6, !dbg !6587
  %call33 = call i64 @strlen(i8* nonnull %0) #6, !dbg !6588
  store i64 %call33, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6588
  %16 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6588
  %add.ptr34 = getelementptr inbounds i8, i8* %16, i64 %call33, !dbg !6588
  %17 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4), align 8, !dbg !6588
  %cmp35 = icmp ugt i8* %add.ptr34, %17, !dbg !6588
  br i1 %cmp35, label %cond.true36, label %cond.end38, !dbg !6588

cond.true36:                                      ; preds = %if.end30
  %conv = trunc i64 %call33 to i32, !dbg !6588
  call void @_obstack_newchunk(%struct.obstack* nonnull @name_obstack, i32 %conv) #6, !dbg !6588
  %.pre2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6588
  %.pre3 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6588
  br label %cond.end38, !dbg !6588

cond.end38:                                       ; preds = %if.end30, %cond.true36
  %18 = phi i64 [ %call33, %if.end30 ], [ %.pre3, %cond.true36 ], !dbg !6588
  %19 = phi i8* [ %16, %if.end30 ], [ %.pre2, %cond.true36 ], !dbg !6588
  %call41 = call i8* @memcpy(i8* %19, i8* nonnull %0, i64 %18) #6, !dbg !6588
  %20 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6588
  %21 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6588
  %add.ptr42 = getelementptr inbounds i8, i8* %21, i64 %20, !dbg !6588
  store i8* %add.ptr42, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6588
  br label %cleanup, !dbg !6589

sw.bb43:                                          ; preds = %if.end, %if.end, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1358, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6590
  br label %cleanup, !dbg !6591

cleanup:                                          ; preds = %cond.end18, %cond.end, %cond.end38, %sw.bb43, %if.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6592
  ret void, !dbg !6592
}

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @make_fancy_decl_name(%union.tree_node* %decl) unnamed_addr #5 !dbg !6593 {
entry:
  %buffer = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6595, metadata !DIExpression()), !dbg !6598
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i64 0, i64 0, !dbg !6599
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6599
  call void @llvm.dbg.declare(metadata [32 x i8]* %buffer, metadata !6596, metadata !DIExpression()), !dbg !6600
  %name1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6601
  %1 = load %union.tree_node*, %union.tree_node** %name1, align 8, !dbg !6601
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6597, metadata !DIExpression()), !dbg !6598
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !6602
  br i1 %tobool, label %if.else, label %if.then, !dbg !6604

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6605
  %2 = getelementptr inbounds i32, i32* %id, i64 2, !dbg !6605
  %3 = load i32, i32* %2, align 8, !dbg !6605
  %conv = zext i32 %3 to i64, !dbg !6605
  store i64 %conv, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6605
  %4 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6605
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %conv, !dbg !6605
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4), align 8, !dbg !6605
  %cmp = icmp ugt i8* %add.ptr, %5, !dbg !6605
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6605

cond.true:                                        ; preds = %if.then
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @name_obstack, i32 %3) #6, !dbg !6605
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6605
  %.pre1 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6605
  br label %cond.end, !dbg !6605

cond.end:                                         ; preds = %if.then, %cond.true
  %6 = phi i64 [ %conv, %if.then ], [ %.pre1, %cond.true ], !dbg !6605
  %7 = phi i8* [ %4, %if.then ], [ %.pre, %cond.true ], !dbg !6605
  %str = bitcast i32* %id to i8**, !dbg !6605
  %8 = load i8*, i8** %str, align 8, !dbg !6605
  %call = tail call i8* @memcpy(i8* %7, i8* %8, i64 %6) #6, !dbg !6605
  %9 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6605
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6605
  %add.ptr6 = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !6605
  br label %if.end, !dbg !6605

if.else:                                          ; preds = %entry
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6606
  %11 = load i32, i32* %uid, align 4, !dbg !6606
  %call8 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i32 %11) #6, !dbg !6608
  %call10 = call i64 @strlen(i8* nonnull %0) #6, !dbg !6609
  store i64 %call10, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6609
  %12 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6609
  %add.ptr11 = getelementptr inbounds i8, i8* %12, i64 %call10, !dbg !6609
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4), align 8, !dbg !6609
  %cmp12 = icmp ugt i8* %add.ptr11, %13, !dbg !6609
  br i1 %cmp12, label %cond.true14, label %cond.end17, !dbg !6609

cond.true14:                                      ; preds = %if.else
  %conv15 = trunc i64 %call10 to i32, !dbg !6609
  call void @_obstack_newchunk(%struct.obstack* nonnull @name_obstack, i32 %conv15) #6, !dbg !6609
  %.pre2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6609
  %.pre3 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6609
  br label %cond.end17, !dbg !6609

cond.end17:                                       ; preds = %if.else, %cond.true14
  %14 = phi i64 [ %call10, %if.else ], [ %.pre3, %cond.true14 ], !dbg !6609
  %15 = phi i8* [ %12, %if.else ], [ %.pre2, %cond.true14 ], !dbg !6609
  %call20 = call i8* @memcpy(i8* %15, i8* nonnull %0, i64 %14) #6, !dbg !6609
  %16 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !6609
  %17 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6609
  %add.ptr21 = getelementptr inbounds i8, i8* %17, i64 %16, !dbg !6609
  br label %if.end

if.end:                                           ; preds = %cond.end17, %cond.end
  %storemerge = phi i8* [ %add.ptr21, %cond.end17 ], [ %add.ptr6, %cond.end ], !dbg !6610
  store i8* %storemerge, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !6610
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6611
  ret void, !dbg !6611
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6612 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6616, metadata !DIExpression()), !dbg !6617
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !6618
  %0 = load i32, i32* %location, align 8, !dbg !6618
  ret i32 %0, !dbg !6619
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6620 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6622, metadata !DIExpression()), !dbg !6623
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6624
  ret %union.tree_node* %call, !dbg !6625
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6626 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6628, metadata !DIExpression()), !dbg !6629
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6630
  ret %union.tree_node* %call, !dbg !6631
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @sra_modify_constructor_assign(%union.gimple_statement_d** %stmt, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !6632 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !6636, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6637, metadata !DIExpression()), !dbg !6640
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6641
  %call = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %0) #7, !dbg !6642
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6638, metadata !DIExpression()), !dbg !6640
  %call1 = tail call fastcc %struct.access* @get_access_for_expr(%union.tree_node* %call) #7, !dbg !6643
  call void @llvm.dbg.value(metadata %struct.access* %call1, metadata !6639, metadata !DIExpression()), !dbg !6640
  %tobool = icmp eq %struct.access* %call1, null, !dbg !6644
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6646

if.end:                                           ; preds = %entry
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6647
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6647
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6647
  %2 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !6647
  %3 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !6647
  %tobool3 = icmp eq %struct.VEC_constructor_elt_gc* %3, null, !dbg !6647
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !6647

cond.true:                                        ; preds = %if.end
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6647
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %4) #7, !dbg !6647
  %elts6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6647
  %5 = bitcast i32* %elts6 to %struct.VEC_constructor_elt_gc**, !dbg !6647
  %6 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %5, align 8, !dbg !6647
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %6, i64 0, i32 0, !dbg !6647
  br label %cond.end, !dbg !6647

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !6647
  %call7 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #7, !dbg !6647
  %cmp = icmp eq i32 %call7, 0, !dbg !6649
  br i1 %cmp, label %if.end14, label %if.then8, !dbg !6650

if.then8:                                         ; preds = %cond.end
  %call9 = tail call fastcc zeroext i8 @access_has_children_p(%struct.access* nonnull %call1) #7, !dbg !6651
  %tobool10 = icmp eq i8 %call9, 0, !dbg !6651
  br i1 %tobool10, label %cleanup, label %if.then11, !dbg !6654

if.then11:                                        ; preds = %if.then8
  %first_child = getelementptr inbounds %struct.access, %struct.access* %call1, i64 0, i32 8, !dbg !6655
  %7 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !6655
  %base12 = getelementptr inbounds %struct.access, %struct.access* %call1, i64 0, i32 2, !dbg !6656
  %8 = load %union.tree_node*, %union.tree_node** %base12, align 8, !dbg !6656
  tail call fastcc void @generate_subtree_copies(%struct.access* %7, %union.tree_node* %8, i64 0, i64 0, i64 0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 1, i8 zeroext 1) #7, !dbg !6657
  br label %cleanup, !dbg !6657

if.end14:                                         ; preds = %cond.end
  %grp_covered = getelementptr inbounds %struct.access, %struct.access* %call1, i64 0, i32 14, !dbg !6658
  %bf.load = load i16, i16* %grp_covered, align 8, !dbg !6658
  %bf.clear = and i16 %bf.load, 64, !dbg !6658
  %tobool15 = icmp eq i16 %bf.clear, 0, !dbg !6660
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !6661

if.then16:                                        ; preds = %if.end14
  tail call fastcc void @init_subtree_with_zero(%struct.access* nonnull %call1, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 0) #7, !dbg !6662
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6664
  tail call void @unlink_stmt_vdef(%union.gimple_statement_d* %9) #6, !dbg !6665
  tail call void @gsi_remove(%struct.gimple_stmt_iterator* %gsi, i8 zeroext 1) #6, !dbg !6666
  br label %cleanup, !dbg !6667

if.else:                                          ; preds = %if.end14
  tail call fastcc void @init_subtree_with_zero(%struct.access* nonnull %call1, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 1) #7, !dbg !6668
  br label %cleanup, !dbg !6670

cleanup:                                          ; preds = %if.then8, %entry, %if.then11, %if.else, %if.then16
  %retval.0 = phi i32 [ 2, %if.then16 ], [ 1, %if.else ], [ 0, %entry ], [ 1, %if.then11 ], [ 1, %if.then8 ], !dbg !6640
  ret i32 %retval.0, !dbg !6671
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !6672 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6676, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6677, metadata !DIExpression()), !dbg !6678
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !6679
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !6680
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6682

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6683
  %bf.load = load i64, i64* %0, align 8, !dbg !6683
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6684
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6684
  br i1 %cmp, label %if.then, label %if.end, !dbg !6685

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6686
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6686
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !6687
  br label %if.end, !dbg !6686

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !6688
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @access_has_children_p(%struct.access* %acc) unnamed_addr #0 !dbg !6689 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %acc, metadata !6691, metadata !DIExpression()), !dbg !6692
  %tobool = icmp eq %struct.access* %acc, null, !dbg !6693
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6694

land.rhs:                                         ; preds = %entry
  %first_child = getelementptr inbounds %struct.access, %struct.access* %acc, i64 0, i32 8, !dbg !6695
  %0 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !6695
  %tobool1 = icmp ne %struct.access* %0, null, !dbg !6694
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %1, !dbg !6696
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ref_expr_for_all_replacements_p(%struct.access* %access, %union.tree_node* %agg, i64 %top_offset) unnamed_addr #5 !dbg !6697 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !6701, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata %union.tree_node* %agg, metadata !6702, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i64 %top_offset, metadata !6703, metadata !DIExpression()), !dbg !6704
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %agg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6705
  br label %do.body, !dbg !6708

do.body:                                          ; preds = %if.end9, %entry
  %access.addr.0 = phi %struct.access* [ %access, %entry ], [ %4, %if.end9 ]
  call void @llvm.dbg.value(metadata %struct.access* %access.addr.0, metadata !6701, metadata !DIExpression()), !dbg !6704
  %grp_to_be_replaced = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 14, !dbg !6709
  %bf.load = load i16, i16* %grp_to_be_replaced, align 8, !dbg !6709
  %bf.clear = and i16 %bf.load, 1024, !dbg !6709
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !6710
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6711

land.lhs.true:                                    ; preds = %do.body
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6705
  %offset = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 0, !dbg !6712
  %1 = load i64, i64* %offset, align 8, !dbg !6712
  %sub = sub nsw i64 %1, %top_offset, !dbg !6713
  %type1 = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 4, !dbg !6714
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !6714
  %call = tail call zeroext i8 @build_ref_for_offset(%union.tree_node** null, %union.tree_node* %0, i64 %sub, %union.tree_node* %2, i8 zeroext 0) #7, !dbg !6715
  %tobool2 = icmp eq i8 %call, 0, !dbg !6715
  br i1 %tobool2, label %return, label %if.end, !dbg !6716

if.end:                                           ; preds = %land.lhs.true, %do.body
  %first_child = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 8, !dbg !6717
  %3 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !6717
  %tobool3 = icmp eq %struct.access* %3, null, !dbg !6719
  br i1 %tobool3, label %if.end9, label %land.lhs.true4, !dbg !6720

land.lhs.true4:                                   ; preds = %if.end
  %call6 = tail call fastcc zeroext i8 @ref_expr_for_all_replacements_p(%struct.access* nonnull %3, %union.tree_node* %agg, i64 %top_offset) #7, !dbg !6721
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6721
  br i1 %tobool7, label %return, label %if.end9, !dbg !6722

if.end9:                                          ; preds = %land.lhs.true4, %if.end
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %access.addr.0, i64 0, i32 9, !dbg !6723
  %4 = load %struct.access*, %struct.access** %next_sibling, align 8, !dbg !6723
  call void @llvm.dbg.value(metadata %struct.access* %4, metadata !6701, metadata !DIExpression()), !dbg !6704
  %tobool10 = icmp eq %struct.access* %4, null, !dbg !6724
  br i1 %tobool10, label %return, label %do.body, !dbg !6724, !llvm.loop !6725

return:                                           ; preds = %land.lhs.true, %land.lhs.true4, %if.end9
  %retval.0 = phi i8 [ 0, %land.lhs.true ], [ 0, %land.lhs.true4 ], [ 1, %if.end9 ], !dbg !6704
  ret i8 %retval.0, !dbg !6727
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @handle_unscalarized_data_in_subtree(%struct.access* %top_racc, %union.tree_node* %lhs, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !6728 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %top_racc, metadata !6732, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6733, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6734, metadata !DIExpression()), !dbg !6735
  %grp_unscalarized_data = getelementptr inbounds %struct.access, %struct.access* %top_racc, i64 0, i32 14, !dbg !6736
  %bf.load = load i16, i16* %grp_unscalarized_data, align 8, !dbg !6736
  %bf.clear = and i16 %bf.load, 256, !dbg !6736
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !6738
  %first_child = getelementptr inbounds %struct.access, %struct.access* %top_racc, i64 0, i32 8, !dbg !6739
  %0 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !6739
  br i1 %tobool, label %if.else, label %if.then, !dbg !6740

if.then:                                          ; preds = %entry
  %base = getelementptr inbounds %struct.access, %struct.access* %top_racc, i64 0, i32 2, !dbg !6741
  %1 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !6741
  tail call fastcc void @generate_subtree_copies(%struct.access* %0, %union.tree_node* %1, i64 0, i64 0, i64 0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 0, i8 zeroext 0) #7, !dbg !6743
  br label %return, !dbg !6744

if.else:                                          ; preds = %entry
  %offset = getelementptr inbounds %struct.access, %struct.access* %top_racc, i64 0, i32 0, !dbg !6745
  %2 = load i64, i64* %offset, align 8, !dbg !6745
  tail call fastcc void @generate_subtree_copies(%struct.access* %0, %union.tree_node* %lhs, i64 %2, i64 0, i64 0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 0, i8 zeroext 0) #7, !dbg !6747
  br label %return, !dbg !6748

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 2, %if.else ], !dbg !6739
  ret i32 %retval.0, !dbg !6749
}

; Function Attrs: nounwind uwtable
define internal fastcc void @load_assign_lhs_subreplacements(%struct.access* %lacc, %struct.access* %top_racc, i64 %left_offset, i64 %right_offset, %struct.gimple_stmt_iterator* %old_gsi, %struct.gimple_stmt_iterator* %new_gsi, i32* %refreshed, %union.tree_node* %lhs) unnamed_addr #5 !dbg !6750 {
entry:
  %rhs = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.access* %lacc, metadata !6755, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata %struct.access* %top_racc, metadata !6756, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i64 %left_offset, metadata !6757, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i64 %right_offset, metadata !6758, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %old_gsi, metadata !6759, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %new_gsi, metadata !6760, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32* %refreshed, metadata !6761, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6762, metadata !DIExpression()), !dbg !6778
  %expr = getelementptr inbounds %struct.access, %struct.access* %lacc, i64 0, i32 3, !dbg !6779
  %0 = bitcast %union.tree_node** %expr to i64**, !dbg !6779
  %1 = load i64*, i64** %0, align 8, !dbg !6779
  %bf.load = load i64, i64* %1, align 8, !dbg !6779
  %bf.cast = and i64 %bf.load, 65535, !dbg !6779
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6779
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6779
  %cmp = icmp ugt i32 %2, 3, !dbg !6779
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !6779

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp ult i32 %2, 11, !dbg !6779
  br i1 %cmp8, label %cond.true, label %cond.end, !dbg !6779

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %1, i64 3, !dbg !6779
  %3 = bitcast i64* %locus to i32*, !dbg !6779
  %4 = load i32, i32* %3, align 8, !dbg !6779
  br label %cond.end, !dbg !6779

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !6779
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6763, metadata !DIExpression()), !dbg !6778
  %5 = bitcast %union.tree_node** %rhs to i8*, !dbg !6780
  %base48 = getelementptr inbounds %struct.access, %struct.access* %top_racc, i64 0, i32 2, !dbg !6781
  %6 = bitcast %union.tree_node** %base48 to i64*, !dbg !6781
  %7 = bitcast %union.tree_node** %rhs to i64*, !dbg !6781
  br label %do.body, !dbg !6782

do.body:                                          ; preds = %if.end84, %cond.end
  %lacc.addr.0 = phi %struct.access* [ %lacc, %cond.end ], [ %28, %if.end84 ]
  call void @llvm.dbg.value(metadata %struct.access* %lacc.addr.0, metadata !6755, metadata !DIExpression()), !dbg !6778
  %grp_to_be_replaced = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 14, !dbg !6783
  %bf.load10 = load i16, i16* %grp_to_be_replaced, align 8, !dbg !6783
  %bf.clear11 = and i16 %bf.load10, 1024, !dbg !6783
  %tobool = icmp eq i16 %bf.clear11, 0, !dbg !6784
  br i1 %tobool, label %if.else63, label %if.then, !dbg !6785

if.then:                                          ; preds = %do.body
  %offset13 = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 0, !dbg !6786
  %8 = load i64, i64* %offset13, align 8, !dbg !6786
  %sub = sub nsw i64 %8, %left_offset, !dbg !6787
  %add = add nsw i64 %sub, %right_offset, !dbg !6788
  call void @llvm.dbg.value(metadata i64 %add, metadata !6768, metadata !DIExpression()), !dbg !6780
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !6789
  %size = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 1, !dbg !6790
  %9 = load i64, i64* %size, align 8, !dbg !6790
  %call = call fastcc %struct.access* @find_access_in_subtree(%struct.access* %top_racc, i64 %add, i64 %9) #7, !dbg !6791
  call void @llvm.dbg.value(metadata %struct.access* %call, metadata !6764, metadata !DIExpression()), !dbg !6780
  %tobool14 = icmp eq %struct.access* %call, null, !dbg !6792
  br i1 %tobool14, label %if.else, label %land.lhs.true15, !dbg !6793

land.lhs.true15:                                  ; preds = %if.then
  %grp_to_be_replaced16 = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 14, !dbg !6794
  %bf.load17 = load i16, i16* %grp_to_be_replaced16, align 8, !dbg !6794
  %bf.clear19 = and i16 %bf.load17, 1024, !dbg !6794
  %tobool21 = icmp eq i16 %bf.clear19, 0, !dbg !6795
  br i1 %tobool21, label %if.else, label %if.then22, !dbg !6796

if.then22:                                        ; preds = %land.lhs.true15
  %call23 = call fastcc %union.tree_node* @get_access_replacement(%struct.access* nonnull %call) #7, !dbg !6797
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !6770, metadata !DIExpression()), !dbg !6780
  store %union.tree_node* %call23, %union.tree_node** %rhs, align 8, !dbg !6799
  %type = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 4, !dbg !6800
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6800
  %type24 = getelementptr inbounds %struct.access, %struct.access* %call, i64 0, i32 4, !dbg !6802
  %11 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !6802
  %call25 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %10, %union.tree_node* %11) #6, !dbg !6803
  %tobool26 = icmp eq i8 %call25, 0, !dbg !6803
  br i1 %tobool26, label %if.then27, label %if.end60, !dbg !6804

if.then27:                                        ; preds = %if.then22
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6805
  %13 = load %union.tree_node*, %union.tree_node** %rhs, align 8, !dbg !6805
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !6770, metadata !DIExpression()), !dbg !6780
  %call29 = call %union.tree_node* @fold_build1_stat_loc(i32 %cond, i32 118, %union.tree_node* %12, %union.tree_node* %13) #6, !dbg !6805
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !6770, metadata !DIExpression()), !dbg !6780
  store %union.tree_node* %call29, %union.tree_node** %rhs, align 8, !dbg !6806
  br label %if.end60, !dbg !6807

if.else:                                          ; preds = %land.lhs.true15, %if.then
  %14 = load i32, i32* %refreshed, align 4, !dbg !6808
  %cmp30 = icmp eq i32 %14, 0, !dbg !6810
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !6811

if.then31:                                        ; preds = %if.else
  %call32 = call fastcc i32 @handle_unscalarized_data_in_subtree(%struct.access* %top_racc, %union.tree_node* %lhs, %struct.gimple_stmt_iterator* %old_gsi) #7, !dbg !6812
  store i32 %call32, i32* %refreshed, align 4, !dbg !6813
  br label %if.end33, !dbg !6814

if.end33:                                         ; preds = %if.then31, %if.else
  %15 = phi i32 [ %call32, %if.then31 ], [ %14, %if.else ], !dbg !6815
  %cmp34 = icmp eq i32 %15, 2, !dbg !6816
  br i1 %cmp34, label %if.then35, label %if.else46, !dbg !6817

if.then35:                                        ; preds = %if.end33
  %base36 = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 2, !dbg !6818
  %16 = bitcast %union.tree_node** %base36 to i64*, !dbg !6818
  %17 = load i64, i64* %16, align 8, !dbg !6818
  store i64 %17, i64* %7, align 8, !dbg !6819
  %.cast1 = inttoptr i64 %17 to %struct.tree_common*, !dbg !6820
  %type37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.cast1, i64 0, i32 2, !dbg !6820
  %18 = load %union.tree_node*, %union.tree_node** %type37, align 8, !dbg !6820
  %19 = load i64, i64* %offset13, align 8, !dbg !6821
  %type39 = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 4, !dbg !6822
  %20 = load %union.tree_node*, %union.tree_node** %type39, align 8, !dbg !6822
  call void @llvm.dbg.value(metadata %union.tree_node** %rhs, metadata !6770, metadata !DIExpression(DW_OP_deref)), !dbg !6780
  %call40 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %rhs, %union.tree_node* %18, i64 %19, %union.tree_node* %20, i8 zeroext 0) #7, !dbg !6823
  call void @llvm.dbg.value(metadata i8 %call40, metadata !6771, metadata !DIExpression()), !dbg !6824
  %tobool41 = icmp eq i8 %call40, 0, !dbg !6825
  br i1 %tobool41, label %cond.true42, label %if.end60, !dbg !6825

cond.true42:                                      ; preds = %if.then35
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 2462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6825
  br label %if.end60, !dbg !6825

if.else46:                                        ; preds = %if.end33
  %21 = load i64, i64* %6, align 8, !dbg !6826
  store i64 %21, i64* %7, align 8, !dbg !6827
  %.cast = inttoptr i64 %21 to %struct.tree_common*, !dbg !6828
  %type51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.cast, i64 0, i32 2, !dbg !6828
  %22 = load %union.tree_node*, %union.tree_node** %type51, align 8, !dbg !6828
  %type52 = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 4, !dbg !6829
  %23 = load %union.tree_node*, %union.tree_node** %type52, align 8, !dbg !6829
  call void @llvm.dbg.value(metadata %union.tree_node** %rhs, metadata !6770, metadata !DIExpression(DW_OP_deref)), !dbg !6780
  %call53 = call zeroext i8 @build_ref_for_offset(%union.tree_node** nonnull %rhs, %union.tree_node* %22, i64 %add, %union.tree_node* %23, i8 zeroext 0) #7, !dbg !6830
  call void @llvm.dbg.value(metadata i8 %call53, metadata !6776, metadata !DIExpression()), !dbg !6781
  %tobool54 = icmp eq i8 %call53, 0, !dbg !6831
  br i1 %tobool54, label %cond.true55, label %if.end60, !dbg !6831

cond.true55:                                      ; preds = %if.else46
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 2472, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6831
  br label %if.end60, !dbg !6831

if.end60:                                         ; preds = %if.then22, %if.then35, %if.else46, %cond.true42, %cond.true55, %if.then27
  %call61 = call fastcc %union.tree_node* @get_access_replacement(%struct.access* %lacc.addr.0) #7, !dbg !6832
  %24 = load %union.tree_node*, %union.tree_node** %rhs, align 8, !dbg !6832
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !6770, metadata !DIExpression()), !dbg !6780
  %call62 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call61, %union.tree_node* %24) #6, !dbg !6832
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call62, metadata !6769, metadata !DIExpression()), !dbg !6780
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* %new_gsi, %union.gimple_statement_d* %call62, i32 0) #6, !dbg !6833
  call fastcc void @update_stmt(%union.gimple_statement_d* %call62) #7, !dbg !6834
  %25 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 3), align 4, !dbg !6835
  %inc = add nsw i32 %25, 1, !dbg !6835
  store i32 %inc, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 3), align 4, !dbg !6835
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !6836
  br label %if.end80, !dbg !6837

if.else63:                                        ; preds = %do.body
  %26 = load i32, i32* %refreshed, align 4, !dbg !6838
  %cmp64 = icmp eq i32 %26, 0, !dbg !6840
  br i1 %cmp64, label %land.lhs.true65, label %if.end80, !dbg !6841

land.lhs.true65:                                  ; preds = %if.else63
  %bf.clear68 = and i16 %bf.load10, 16, !dbg !6842
  %tobool70 = icmp eq i16 %bf.clear68, 0, !dbg !6843
  br i1 %tobool70, label %if.end80, label %land.lhs.true71, !dbg !6844

land.lhs.true71:                                  ; preds = %land.lhs.true65
  %bf.clear74 = and i16 %bf.load10, 64, !dbg !6845
  %tobool76 = icmp eq i16 %bf.clear74, 0, !dbg !6846
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !6847

if.then77:                                        ; preds = %land.lhs.true71
  %call78 = call fastcc i32 @handle_unscalarized_data_in_subtree(%struct.access* %top_racc, %union.tree_node* %lhs, %struct.gimple_stmt_iterator* %old_gsi) #7, !dbg !6848
  store i32 %call78, i32* %refreshed, align 4, !dbg !6849
  br label %if.end80, !dbg !6850

if.end80:                                         ; preds = %land.lhs.true71, %land.lhs.true65, %if.else63, %if.then77, %if.end60
  %first_child = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 8, !dbg !6851
  %27 = load %struct.access*, %struct.access** %first_child, align 8, !dbg !6851
  %tobool81 = icmp eq %struct.access* %27, null, !dbg !6853
  br i1 %tobool81, label %if.end84, label %if.then82, !dbg !6854

if.then82:                                        ; preds = %if.end80
  call fastcc void @load_assign_lhs_subreplacements(%struct.access* nonnull %27, %struct.access* %top_racc, i64 %left_offset, i64 %right_offset, %struct.gimple_stmt_iterator* %old_gsi, %struct.gimple_stmt_iterator* %new_gsi, i32* %refreshed, %union.tree_node* %lhs) #7, !dbg !6855
  br label %if.end84, !dbg !6855

if.end84:                                         ; preds = %if.end80, %if.then82
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %lacc.addr.0, i64 0, i32 9, !dbg !6856
  %28 = load %struct.access*, %struct.access** %next_sibling, align 8, !dbg !6856
  call void @llvm.dbg.value(metadata %struct.access* %28, metadata !6755, metadata !DIExpression()), !dbg !6778
  %tobool85 = icmp eq %struct.access* %28, null, !dbg !6857
  br i1 %tobool85, label %do.end, label %do.body, !dbg !6857, !llvm.loop !6858

do.end:                                           ; preds = %if.end84
  ret void, !dbg !6860
}

declare dso_local void @unlink_stmt_vdef(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !6861 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !6867, metadata !DIExpression()), !dbg !6868
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !6869
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6869

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !6869
  %0 = load i32, i32* %num, align 8, !dbg !6869
  br label %cond.end, !dbg !6869

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6869
  ret i32 %cond, !dbg !6869
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_subtree_with_zero(%struct.access* %access, %struct.gimple_stmt_iterator* %gsi, i8 zeroext %insert_after) unnamed_addr #5 !dbg !6870 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !6874, metadata !DIExpression()), !dbg !6881
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6875, metadata !DIExpression()), !dbg !6881
  call void @llvm.dbg.value(metadata i8 %insert_after, metadata !6876, metadata !DIExpression()), !dbg !6881
  %grp_to_be_replaced = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 14, !dbg !6882
  %bf.load = load i16, i16* %grp_to_be_replaced, align 8, !dbg !6882
  %bf.clear = and i16 %bf.load, 1024, !dbg !6882
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !6883
  br i1 %tobool, label %if.end5, label %if.then, !dbg !6884

if.then:                                          ; preds = %entry
  %call = tail call fastcc %union.tree_node* @get_access_replacement(%struct.access* %access) #7, !dbg !6885
  %type = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 4, !dbg !6885
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6885
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6885
  %call1 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %1) #6, !dbg !6885
  %call2 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call, %union.tree_node* %call1) #6, !dbg !6885
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !6878, metadata !DIExpression()), !dbg !6886
  %tobool3 = icmp eq i8 %insert_after, 0, !dbg !6887
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !6889

if.then4:                                         ; preds = %if.then
  tail call void @gsi_insert_after(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call2, i32 0) #6, !dbg !6890
  br label %if.end, !dbg !6890

if.else:                                          ; preds = %if.then
  tail call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call2, i32 1) #6, !dbg !6891
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  tail call fastcc void @update_stmt(%union.gimple_statement_d* %call2) #7, !dbg !6892
  br label %if.end5, !dbg !6893

if.end5:                                          ; preds = %entry, %if.end
  %first_child = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 8, !dbg !6894
  br label %for.cond, !dbg !6896

for.cond:                                         ; preds = %for.body, %if.end5
  %child.0.in = phi %struct.access** [ %first_child, %if.end5 ], [ %next_sibling, %for.body ]
  %child.0 = load %struct.access*, %struct.access** %child.0.in, align 8, !dbg !6897
  call void @llvm.dbg.value(metadata %struct.access* %child.0, metadata !6877, metadata !DIExpression()), !dbg !6881
  %tobool6 = icmp eq %struct.access* %child.0, null, !dbg !6898
  br i1 %tobool6, label %for.end, label %for.body, !dbg !6898

for.body:                                         ; preds = %for.cond
  tail call fastcc void @init_subtree_with_zero(%struct.access* nonnull %child.0, %struct.gimple_stmt_iterator* %gsi, i8 zeroext %insert_after) #7, !dbg !6899
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %child.0, i64 0, i32 9, !dbg !6901
  br label %for.cond, !dbg !6902, !llvm.loop !6903

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6905
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !6906 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6910, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.value(metadata i32 %i, metadata !6911, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6912, metadata !DIExpression()), !dbg !6913
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !6914
  %tobool = icmp eq i8 %call, 0, !dbg !6914
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !6914

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6914
  %cmp = icmp ugt i32 %call1, %i, !dbg !6914
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6914

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6914
  br label %cond.end, !dbg !6914

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !6915
  %idxprom = zext i32 %i to i64, !dbg !6915
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !6915
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !6916
  ret void, !dbg !6917
}

declare dso_local %struct.gimple_seq_d* @gimple_seq_alloc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !6918 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !6922, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6923, metadata !DIExpression()), !dbg !6925
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !6926
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !6927
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !6928
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !6929
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !6930
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !6931
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !6932

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !6933
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6933
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !6934
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !6935

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !6936
  br label %cond.end, !dbg !6935

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6935
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !6937
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !6938
  ret void, !dbg !6939
}

declare dso_local %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def*, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6940 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6944, metadata !DIExpression()), !dbg !6945
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !6946
  %tobool = icmp eq i8 %call, 0, !dbg !6946
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6946

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6946
  br label %cond.end, !dbg !6946

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6947
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6947
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6947
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6947

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6947
  br label %cond.end5, !dbg !6947

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6947
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !6947
  ret %struct.edge_def* %call7, !dbg !6948
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6949 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6953, metadata !DIExpression()), !dbg !6954
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6955
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6955
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6955
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6955

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6955
  br label %cond.end, !dbg !6955

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6955
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6955
  %cmp = icmp eq i32 %call, 1, !dbg !6956
  %conv2 = zext i1 %cmp to i8, !dbg !6955
  ret i8 %conv2, !dbg !6957
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6958 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6965, metadata !DIExpression()), !dbg !6966
  br label %land.end, !dbg !6967

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6967
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6967
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6967
  ret %struct.edge_def* %0, !dbg !6967
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6968 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6972, metadata !DIExpression()), !dbg !6973
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6974
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6974

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6974
  %0 = load i32, i32* %num, align 8, !dbg !6974
  br label %cond.end, !dbg !6974

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6974
  ret i32 %cond, !dbg !6974
}

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local void @pointer_map_traverse(%struct.pointer_map_t*, i8 (i8*, i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @delete_base_accesses(i8* %key, i8** %value, i8* %data) #5 !dbg !6975 {
entry:
  %access_vec = alloca %struct.VEC_access_p_heap*, align 8
  call void @llvm.dbg.value(metadata i8* %key, metadata !6979, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata i8** %value, metadata !6980, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata i8* %data, metadata !6981, metadata !DIExpression()), !dbg !6983
  %0 = bitcast %struct.VEC_access_p_heap** %access_vec to i8*, !dbg !6984
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6984
  %1 = bitcast i8** %value to i64*, !dbg !6985
  %2 = load i64, i64* %1, align 8, !dbg !6985
  %3 = bitcast %struct.VEC_access_p_heap** %access_vec to i64*, !dbg !6986
  store i64 %2, i64* %3, align 8, !dbg !6986
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap** %access_vec, metadata !6982, metadata !DIExpression(DW_OP_deref)), !dbg !6983
  call fastcc void @VEC_access_p_heap_free(%struct.VEC_access_p_heap** nonnull %access_vec) #7, !dbg !6987
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6988
  ret i8 1, !dbg !6989
}

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_access_p_heap_free(%struct.VEC_access_p_heap** %vec_) unnamed_addr #0 !dbg !6990 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap** %vec_, metadata !6994, metadata !DIExpression()), !dbg !6995
  %0 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %vec_, align 8, !dbg !6996
  %tobool = icmp eq %struct.VEC_access_p_heap* %0, null, !dbg !6996
  br i1 %tobool, label %if.end, label %if.then, !dbg !6998

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_access_p_heap* %0 to i8*, !dbg !6998
  tail call void @free(i8* nonnull %1) #6, !dbg !6996
  br label %if.end, !dbg !6996

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_access_p_heap* null, %struct.VEC_access_p_heap** %vec_, align 8, !dbg !6998
  ret void, !dbg !6998
}

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ipa_sra_preliminary_function_checks(%struct.cgraph_node* %node) unnamed_addr #5 !dbg !6999 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !7003, metadata !DIExpression()), !dbg !7004
  %call = tail call zeroext i8 @cgraph_node_can_be_local_p(%struct.cgraph_node* %node) #6, !dbg !7005
  %tobool = icmp eq i8 %call, 0, !dbg !7005
  br i1 %tobool, label %if.then, label %if.end4, !dbg !7007

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7008
  %tobool1 = icmp eq %struct._IO_FILE* %0, null, !dbg !7008
  br i1 %tobool1, label %return, label %if.then2, !dbg !7011

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !7012
  br label %return, !dbg !7012

if.end4:                                          ; preds = %entry
  %1 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !7013
  %virtual_flag = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %1, i64 0, i32 2, !dbg !7013
  %2 = bitcast i40* %virtual_flag to i64*, !dbg !7013
  %bf.load = load i64, i64* %2, align 8, !dbg !7013
  %bf.cast1 = and i64 %bf.load, 512, !dbg !7013
  %tobool5 = icmp eq i64 %bf.cast1, 0, !dbg !7013
  br i1 %tobool5, label %if.end11, label %if.then6, !dbg !7015

if.then6:                                         ; preds = %if.end4
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7016
  %tobool7 = icmp eq %struct._IO_FILE* %3, null, !dbg !7016
  br i1 %tobool7, label %return, label %if.then8, !dbg !7019

if.then8:                                         ; preds = %if.then6
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !7020
  br label %return, !dbg !7020

if.end11:                                         ; preds = %if.end4
  %4 = bitcast %struct.cgraph_node* %node to %struct.tree_decl_with_vis**, !dbg !7021
  %5 = load %struct.tree_decl_with_vis*, %struct.tree_decl_with_vis** %4, align 8, !dbg !7021
  %comdat_flag = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %5, i64 0, i32 4, !dbg !7021
  %6 = bitcast i24* %comdat_flag to i32*, !dbg !7021
  %bf.load12 = load i32, i32* %6, align 8, !dbg !7021
  %bf.clear14 = and i32 %bf.load12, 512, !dbg !7021
  %tobool15 = icmp eq i32 %bf.clear14, 0, !dbg !7021
  br i1 %tobool15, label %lor.lhs.false, label %land.lhs.true, !dbg !7023

lor.lhs.false:                                    ; preds = %if.end11
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %5, i64 0, i32 0, i32 0, i32 2, !dbg !7024
  %7 = bitcast i40* %decl_flag_1 to i64*, !dbg !7024
  %bf.load18 = load i64, i64* %7, align 8, !dbg !7024
  %bf.cast212 = and i64 %bf.load18, 33554432, !dbg !7024
  %tobool22 = icmp eq i64 %bf.cast212, 0, !dbg !7024
  br i1 %tobool22, label %if.end28, label %land.lhs.true, !dbg !7025

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end11
  %size = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 19, i32 4, !dbg !7026
  %8 = load i32, i32* %size, align 4, !dbg !7026
  %9 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !7027
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %9, i64 3, i32 1, !dbg !7027
  %10 = load i32, i32* %value, align 8, !dbg !7027
  %cmp = icmp slt i32 %8, %10, !dbg !7028
  br i1 %cmp, label %if.end28, label %if.then23, !dbg !7029

if.then23:                                        ; preds = %land.lhs.true
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7030
  %tobool24 = icmp eq %struct._IO_FILE* %11, null, !dbg !7030
  br i1 %tobool24, label %return, label %if.then25, !dbg !7033

if.then25:                                        ; preds = %if.then23
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !7034
  br label %return, !dbg !7034

if.end28:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %callers = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 2, !dbg !7035
  %12 = load %struct.cgraph_edge*, %struct.cgraph_edge** %callers, align 8, !dbg !7035
  %tobool29 = icmp eq %struct.cgraph_edge* %12, null, !dbg !7037
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !7038

if.then30:                                        ; preds = %if.end28
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7039
  %tobool31 = icmp eq %struct._IO_FILE* %13, null, !dbg !7039
  br i1 %tobool31, label %return, label %if.then32, !dbg !7042

if.then32:                                        ; preds = %if.then30
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !7043
  br label %return, !dbg !7043

if.end35:                                         ; preds = %if.end28
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7044
  %stdarg = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 20, !dbg !7046
  %bf.load36 = load i32, i32* %stdarg, align 8, !dbg !7046
  %bf.clear38 = and i32 %bf.load36, 4194304, !dbg !7046
  %tobool39 = icmp eq i32 %bf.clear38, 0, !dbg !7044
  br i1 %tobool39, label %return, label %if.then40, !dbg !7047

if.then40:                                        ; preds = %if.end35
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7048
  %tobool41 = icmp eq %struct._IO_FILE* %15, null, !dbg !7048
  br i1 %tobool41, label %return, label %if.then42, !dbg !7051

if.then42:                                        ; preds = %if.then40
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !7052
  br label %return, !dbg !7052

return:                                           ; preds = %if.then6, %if.then23, %if.then40, %if.end35, %if.then30, %if.then, %if.then42, %if.then32, %if.then25, %if.then8, %if.then2
  %retval.0 = phi i8 [ 0, %if.then2 ], [ 0, %if.then ], [ 0, %if.then8 ], [ 0, %if.then6 ], [ 0, %if.then25 ], [ 0, %if.then23 ], [ 0, %if.then32 ], [ 0, %if.then30 ], [ 0, %if.then42 ], [ 0, %if.then40 ], [ 1, %if.end35 ], !dbg !7004
  ret i8 %retval.0, !dbg !7053
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_param_candidates() unnamed_addr #5 !dbg !7054 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !7057, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i8 0, metadata !7058, metadata !DIExpression()), !dbg !7063
  %0 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !7064
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %0, i64 0, i32 2, !dbg !7064
  br label %for.cond, !dbg !7065

for.cond:                                         ; preds = %cleanup, %entry
  %ret.0 = phi i8 [ 0, %entry ], [ %ret.1, %cleanup ], !dbg !7066
  %count.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !7063
  %parm.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %cleanup ]
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !7067
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !7056, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !7057, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !7058, metadata !DIExpression()), !dbg !7063
  %tobool = icmp eq %union.tree_node* %parm.0, null, !dbg !7068
  br i1 %tobool, label %for.end, label %for.body, !dbg !7068

for.body:                                         ; preds = %for.cond
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7069
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !7069
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7059, metadata !DIExpression()), !dbg !7070
  %inc = add nuw nsw i32 %count.0, 1, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7057, metadata !DIExpression()), !dbg !7063
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7072
  %bf.load = load i64, i64* %2, align 8, !dbg !7072
  %bf.cast1 = and i64 %bf.load, 524288, !dbg !7072
  %tobool2 = icmp eq i64 %bf.cast1, 0, !dbg !7072
  br i1 %tobool2, label %lor.lhs.false, label %cleanup, !dbg !7074

lor.lhs.false:                                    ; preds = %for.body
  %bf.cast72 = and i64 %bf.load, 262144, !dbg !7075
  %tobool8 = icmp eq i64 %bf.cast72, 0, !dbg !7075
  br i1 %tobool8, label %lor.lhs.false9, label %cleanup, !dbg !7076

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %call = tail call fastcc zeroext i8 @is_va_list_type(%union.tree_node* %1) #7, !dbg !7077
  %tobool10 = icmp eq i8 %call, 0, !dbg !7077
  br i1 %tobool10, label %if.end, label %cleanup, !dbg !7078

if.end:                                           ; preds = %lor.lhs.false9
  %call11 = tail call fastcc zeroext i8 @is_unused_scalar_param(%union.tree_node* nonnull %parm.0) #7, !dbg !7079
  %tobool12 = icmp eq i8 %call11, 0, !dbg !7079
  br i1 %tobool12, label %if.end14, label %cleanup, !dbg !7081

if.end14:                                         ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7082
  %bf.load16 = load i64, i64* %3, align 8, !dbg !7082
  %bf.cast183 = and i64 %bf.load16, 65535, !dbg !7082
  %cmp = icmp eq i64 %bf.cast183, 10, !dbg !7082
  br i1 %cmp, label %if.then27, label %lor.lhs.false20, !dbg !7082

lor.lhs.false20:                                  ; preds = %if.end14
  %cmp25 = icmp eq i64 %bf.cast183, 12, !dbg !7082
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !7084

if.then27:                                        ; preds = %lor.lhs.false20, %if.end14
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7085
  %4 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !7085
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !7059, metadata !DIExpression()), !dbg !7070
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7087
  %bf.load31 = load i64, i64* %5, align 8, !dbg !7087
  %bf.cast3313 = and i64 %bf.load31, 65535, !dbg !7089
  %cmp34 = icmp eq i64 %bf.cast3313, 20, !dbg !7089
  br i1 %cmp34, label %cleanup, label %lor.lhs.false36, !dbg !7090

lor.lhs.false36:                                  ; preds = %if.then27
  %bf.cast4114 = and i64 %bf.load31, 524288, !dbg !7091
  %tobool42 = icmp eq i64 %bf.cast4114, 0, !dbg !7091
  br i1 %tobool42, label %lor.lhs.false43, label %cleanup, !dbg !7092

lor.lhs.false43:                                  ; preds = %lor.lhs.false36
  %call44 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* nonnull %parm.0) #6, !dbg !7093
  %tobool45 = icmp eq i8 %call44, 0, !dbg !7093
  br i1 %tobool45, label %cleanup, label %lor.lhs.false46, !dbg !7094

lor.lhs.false46:                                  ; preds = %lor.lhs.false43
  %call47 = tail call fastcc zeroext i8 @is_va_list_type(%union.tree_node* %4) #7, !dbg !7095
  %tobool49 = icmp eq i8 %call47, 0, !dbg !7095
  br i1 %tobool49, label %lor.lhs.false50, label %cleanup, !dbg !7096

lor.lhs.false50:                                  ; preds = %lor.lhs.false46
  %call51 = tail call fastcc zeroext i8 @ptr_parm_has_direct_uses(%union.tree_node* nonnull %parm.0) #7, !dbg !7097
  %tobool53 = icmp eq i8 %call51, 0, !dbg !7097
  br i1 %tobool53, label %if.end85, label %cleanup, !dbg !7098

if.else:                                          ; preds = %lor.lhs.false20
  %cmp60 = icmp eq i64 %bf.cast183, 15, !dbg !7099
  br i1 %cmp60, label %if.end85, label %lor.lhs.false62, !dbg !7099

lor.lhs.false62:                                  ; preds = %if.else
  %cmp67 = icmp eq i64 %bf.cast183, 16, !dbg !7099
  br i1 %cmp67, label %if.end85, label %lor.lhs.false69, !dbg !7099

lor.lhs.false69:                                  ; preds = %lor.lhs.false62
  %cmp74 = icmp eq i64 %bf.cast183, 17, !dbg !7099
  br i1 %cmp74, label %if.end85, label %lor.lhs.false76, !dbg !7099

lor.lhs.false76:                                  ; preds = %lor.lhs.false69
  %cmp81 = icmp eq i64 %bf.cast183, 18, !dbg !7099
  br i1 %cmp81, label %if.end85, label %cleanup, !dbg !7101

if.end85:                                         ; preds = %lor.lhs.false50, %if.else, %lor.lhs.false62, %lor.lhs.false69, %lor.lhs.false76
  %type.0 = phi %union.tree_node* [ %4, %lor.lhs.false50 ], [ %1, %lor.lhs.false76 ], [ %1, %lor.lhs.false69 ], [ %1, %lor.lhs.false62 ], [ %1, %if.else ], !dbg !7070
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !7059, metadata !DIExpression()), !dbg !7070
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7102
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !7102
  %cmp87 = icmp eq %union.tree_node* %7, null, !dbg !7102
  br i1 %cmp87, label %cleanup, label %lor.lhs.false89, !dbg !7104

lor.lhs.false89:                                  ; preds = %if.end85
  %call92 = tail call i32 @host_integerp(%union.tree_node* nonnull %7, i32 1) #6, !dbg !7105
  %tobool93 = icmp eq i32 %call92, 0, !dbg !7105
  br i1 %tobool93, label %cleanup, label %lor.lhs.false94, !dbg !7106

lor.lhs.false94:                                  ; preds = %lor.lhs.false89
  %8 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !7107
  %call97 = tail call i64 @tree_low_cst(%union.tree_node* %8, i32 1) #6, !dbg !7108
  %cmp98 = icmp eq i64 %call97, 0, !dbg !7109
  br i1 %cmp98, label %cleanup, label %lor.lhs.false100, !dbg !7110

lor.lhs.false100:                                 ; preds = %lor.lhs.false94
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7111
  %bf.load102 = load i64, i64* %9, align 8, !dbg !7111
  %bf.cast1049 = and i64 %bf.load102, 65535, !dbg !7111
  %cmp105 = icmp eq i64 %bf.cast1049, 15, !dbg !7111
  br i1 %cmp105, label %land.lhs.true, label %lor.lhs.false107, !dbg !7111

lor.lhs.false107:                                 ; preds = %lor.lhs.false100
  %cmp112 = icmp eq i64 %bf.cast1049, 16, !dbg !7111
  br i1 %cmp112, label %land.lhs.true, label %lor.lhs.false114, !dbg !7111

lor.lhs.false114:                                 ; preds = %lor.lhs.false107
  %cmp119 = icmp eq i64 %bf.cast1049, 17, !dbg !7111
  br i1 %cmp119, label %land.lhs.true, label %lor.lhs.false121, !dbg !7111

lor.lhs.false121:                                 ; preds = %lor.lhs.false114
  %cmp126 = icmp eq i64 %bf.cast1049, 18, !dbg !7111
  br i1 %cmp126, label %land.lhs.true, label %if.end132, !dbg !7112

land.lhs.true:                                    ; preds = %lor.lhs.false121, %lor.lhs.false114, %lor.lhs.false107, %lor.lhs.false100
  %call128 = tail call fastcc zeroext i8 @type_internals_preclude_sra_p(%union.tree_node* %type.0) #7, !dbg !7113
  %tobool130 = icmp eq i8 %call128, 0, !dbg !7113
  br i1 %tobool130, label %if.end132, label %cleanup, !dbg !7114

if.end132:                                        ; preds = %land.lhs.true, %lor.lhs.false121
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !7115
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7116
  %11 = load i32, i32* %uid, align 4, !dbg !7116
  %call133 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %10, i32 %11) #6, !dbg !7117
  call void @llvm.dbg.value(metadata i8 1, metadata !7058, metadata !DIExpression()), !dbg !7063
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7118
  %tobool134 = icmp eq %struct._IO_FILE* %12, null, !dbg !7118
  br i1 %tobool134, label %cleanup, label %land.lhs.true135, !dbg !7120

land.lhs.true135:                                 ; preds = %if.end132
  %13 = load i32, i32* @dump_flags, align 4, !dbg !7121
  %and = and i32 %13, 8, !dbg !7122
  %tobool136 = icmp eq i32 %and, 0, !dbg !7122
  br i1 %tobool136, label %cleanup, label %if.then137, !dbg !7123

if.then137:                                       ; preds = %land.lhs.true135
  %14 = load i32, i32* %uid, align 4, !dbg !7124
  %call140 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %14) #6, !dbg !7126
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7127
  tail call void @print_generic_expr(%struct._IO_FILE* %15, %union.tree_node* nonnull %parm.0, i32 0) #6, !dbg !7128
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7129
  %call141 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !7130
  br label %cleanup, !dbg !7131

cleanup:                                          ; preds = %lor.lhs.false50, %lor.lhs.false46, %lor.lhs.false43, %lor.lhs.false36, %land.lhs.true, %land.lhs.true135, %if.end132, %lor.lhs.false89, %if.end85, %if.end, %lor.lhs.false9, %lor.lhs.false, %for.body, %if.then137, %lor.lhs.false94, %lor.lhs.false76, %if.then27
  %ret.1 = phi i8 [ %ret.0, %lor.lhs.false9 ], [ %ret.0, %lor.lhs.false ], [ %ret.0, %for.body ], [ 1, %if.end ], [ %ret.0, %lor.lhs.false50 ], [ %ret.0, %lor.lhs.false46 ], [ %ret.0, %lor.lhs.false43 ], [ %ret.0, %lor.lhs.false36 ], [ %ret.0, %if.then27 ], [ %ret.0, %lor.lhs.false76 ], [ %ret.0, %land.lhs.true ], [ %ret.0, %lor.lhs.false94 ], [ %ret.0, %lor.lhs.false89 ], [ %ret.0, %if.end85 ], [ 1, %if.then137 ], [ 1, %land.lhs.true135 ], [ 1, %if.end132 ], !dbg !7063
  call void @llvm.dbg.value(metadata i8 %ret.1, metadata !7058, metadata !DIExpression()), !dbg !7063
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7132
  br label %for.cond, !dbg !7133, !llvm.loop !7134

for.end:                                          ; preds = %for.cond
  %ret.0.lcssa = phi i8 [ %ret.0, %for.cond ], !dbg !7066
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !7063
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !7058, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !7057, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !7058, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !7057, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !7058, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !7057, metadata !DIExpression()), !dbg !7063
  store i32 %count.0.lcssa, i32* @func_param_count, align 4, !dbg !7136
  ret i8 %ret.0.lcssa, !dbg !7137
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @all_callers_have_enough_arguments_p(%struct.cgraph_node* %node) unnamed_addr #5 !dbg !7138 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !7140, metadata !DIExpression()), !dbg !7142
  %callers = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 2, !dbg !7143
  br label %for.cond, !dbg !7145

for.cond:                                         ; preds = %for.inc, %entry
  %cs.0.in = phi %struct.cgraph_edge** [ %callers, %entry ], [ %next_caller, %for.inc ]
  %cs.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %cs.0.in, align 8, !dbg !7146
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs.0, metadata !7141, metadata !DIExpression()), !dbg !7142
  %tobool = icmp eq %struct.cgraph_edge* %cs.0, null, !dbg !7147
  br i1 %tobool, label %cleanup, label %for.body, !dbg !7147

for.body:                                         ; preds = %for.cond
  %call_stmt = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 7, !dbg !7148
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %call_stmt, align 8, !dbg !7148
  %call = tail call fastcc zeroext i8 @callsite_has_enough_arguments_p(%union.gimple_statement_d* %0) #7, !dbg !7151
  %tobool1 = icmp eq i8 %call, 0, !dbg !7151
  br i1 %tobool1, label %cleanup, label %for.inc, !dbg !7152

for.inc:                                          ; preds = %for.body
  %next_caller = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 4, !dbg !7153
  br label %for.cond, !dbg !7154, !llvm.loop !7155

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !7142
  ret i8 %retval.0, !dbg !7157
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @analyze_all_param_acesses() unnamed_addr #5 !dbg !7158 {
entry:
  %representatives = alloca %struct.VEC_access_p_heap*, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !7163, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 0, metadata !7165, metadata !DIExpression()), !dbg !7177
  %0 = bitcast %struct.VEC_access_p_heap** %representatives to i8*, !dbg !7178
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7178
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap** %representatives, metadata !7166, metadata !DIExpression(DW_OP_deref)), !dbg !7177
  %call = call fastcc i32 @splice_all_param_accesses(%struct.VEC_access_p_heap** nonnull %representatives) #7, !dbg !7179
  call void @llvm.dbg.value(metadata i32 %call, metadata !7162, metadata !DIExpression()), !dbg !7177
  switch i32 %call, label %if.end3 [
    i32 0, label %cleanup
    i32 4, label %if.then2
  ], !dbg !7180

if.then2:                                         ; preds = %entry
  %1 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !7181
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %1, metadata !7166, metadata !DIExpression()), !dbg !7177
  call fastcc void @analyze_caller_dereference_legality(%struct.VEC_access_p_heap* %1) #7, !dbg !7184
  %2 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !7185
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %2, metadata !7166, metadata !DIExpression()), !dbg !7177
  call fastcc void @analyze_modified_params(%struct.VEC_access_p_heap* %2) #7, !dbg !7186
  br label %if.end3, !dbg !7187

if.end3:                                          ; preds = %entry, %if.then2
  call void @llvm.dbg.value(metadata i32 0, metadata !7164, metadata !DIExpression()), !dbg !7177
  br label %for.cond, !dbg !7188

for.cond:                                         ; preds = %for.inc, %if.end3
  %adjustments_count.0 = phi i32 [ 0, %if.end3 ], [ %adjustments_count.3, %for.inc ], !dbg !7177
  %i.0 = phi i32 [ 0, %if.end3 ], [ %inc57, %for.inc ], !dbg !7189
  %proceed.0 = phi i8 [ 0, %if.end3 ], [ %proceed.5, %for.inc ], !dbg !7177
  call void @llvm.dbg.value(metadata i8 %proceed.0, metadata !7163, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7164, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %adjustments_count.0, metadata !7165, metadata !DIExpression()), !dbg !7177
  %3 = load i32, i32* @func_param_count, align 4, !dbg !7190
  %cmp4 = icmp slt i32 %i.0, %3, !dbg !7191
  br i1 %cmp4, label %for.body, label %for.end, !dbg !7192

for.body:                                         ; preds = %for.cond
  %4 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !7193
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %4, metadata !7166, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %4, metadata !7166, metadata !DIExpression()), !dbg !7177
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %4, i64 0, i32 0, !dbg !7193
  %call5 = call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* %base, i32 %i.0) #7, !dbg !7193
  call void @llvm.dbg.value(metadata %struct.access* %call5, metadata !7168, metadata !DIExpression()), !dbg !7194
  %tobool6 = icmp eq %struct.access* %call5, null, !dbg !7195
  br i1 %tobool6, label %if.else49, label %land.lhs.true, !dbg !7196

land.lhs.true:                                    ; preds = %for.body
  %call7 = call fastcc zeroext i8 @no_accesses_p(%struct.access* nonnull %call5) #7, !dbg !7197
  %tobool8 = icmp eq i8 %call7, 0, !dbg !7197
  br i1 %tobool8, label %if.then9, label %if.else49, !dbg !7198

if.then9:                                         ; preds = %land.lhs.true
  %grp_scalar_ptr = getelementptr inbounds %struct.access, %struct.access* %call5, i64 0, i32 14, !dbg !7199
  %bf.load = load i16, i16* %grp_scalar_ptr, align 8, !dbg !7199
  %bf.clear = and i16 %bf.load, 4096, !dbg !7199
  %tobool10 = icmp eq i16 %bf.clear, 0, !dbg !7200
  br i1 %tobool10, label %if.else32, label %if.then11, !dbg !7201

if.then11:                                        ; preds = %if.then9
  %inc = add nsw i32 %adjustments_count.0, 1, !dbg !7202
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7165, metadata !DIExpression()), !dbg !7177
  %bf.clear14 = and i16 %bf.load, 8192, !dbg !7204
  %tobool16 = icmp eq i16 %bf.clear14, 0, !dbg !7206
  br i1 %tobool16, label %lor.lhs.false, label %if.then22, !dbg !7207

lor.lhs.false:                                    ; preds = %if.then11
  %bf.clear19 = and i16 %bf.load, 2048, !dbg !7208
  %tobool21 = icmp eq i16 %bf.clear19, 0, !dbg !7209
  br i1 %tobool21, label %if.else, label %if.then22, !dbg !7210

if.then22:                                        ; preds = %lor.lhs.false, %if.then11
  %5 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !7211
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %5, metadata !7166, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %5, metadata !7166, metadata !DIExpression()), !dbg !7177
  %base25 = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %5, i64 0, i32 0, !dbg !7211
  %call29 = call fastcc %struct.access* @VEC_access_p_base_replace(%struct.VEC_access_p_base* %base25, i32 %i.0, %struct.access* null) #7, !dbg !7211
  br label %for.inc, !dbg !7211

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata i8 1, metadata !7163, metadata !DIExpression()), !dbg !7177
  %6 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 7), align 4, !dbg !7212
  %inc30 = add nsw i32 %6, 1, !dbg !7212
  store i32 %inc30, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 7), align 4, !dbg !7212
  br label %for.inc

if.else32:                                        ; preds = %if.then9
  %call33 = call fastcc i32 @decide_one_param_reduction(%struct.access* nonnull %call5) #7, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %call33, metadata !7172, metadata !DIExpression()), !dbg !7215
  %cmp34 = icmp eq i32 %call33, 0, !dbg !7216
  br i1 %cmp34, label %if.then35, label %if.else44, !dbg !7218

if.then35:                                        ; preds = %if.else32
  %7 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !7219
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %7, metadata !7166, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %7, metadata !7166, metadata !DIExpression()), !dbg !7177
  %base38 = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %7, i64 0, i32 0, !dbg !7219
  %call42 = call fastcc %struct.access* @VEC_access_p_base_replace(%struct.VEC_access_p_base* %base38, i32 %i.0, %struct.access* null) #7, !dbg !7219
  %inc43 = add nsw i32 %adjustments_count.0, 1, !dbg !7221
  call void @llvm.dbg.value(metadata i32 %inc43, metadata !7165, metadata !DIExpression()), !dbg !7177
  br label %for.inc, !dbg !7222

if.else44:                                        ; preds = %if.else32
  %add = add nsw i32 %adjustments_count.0, %call33, !dbg !7223
  call void @llvm.dbg.value(metadata i32 %add, metadata !7165, metadata !DIExpression()), !dbg !7177
  %8 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 8), align 4, !dbg !7225
  %inc45 = add nsw i32 %8, 1, !dbg !7225
  store i32 %inc45, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 8), align 4, !dbg !7225
  %9 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 9), align 4, !dbg !7226
  %add46 = add nsw i32 %9, %call33, !dbg !7226
  store i32 %add46, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 9), align 4, !dbg !7226
  call void @llvm.dbg.value(metadata i8 1, metadata !7163, metadata !DIExpression()), !dbg !7177
  br label %for.inc

if.else49:                                        ; preds = %land.lhs.true, %for.body
  %call50 = call fastcc zeroext i8 @no_accesses_p(%struct.access* %call5) #7, !dbg !7227
  %tobool51 = icmp eq i8 %call50, 0, !dbg !7227
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !7230

if.then52:                                        ; preds = %if.else49
  call void @llvm.dbg.value(metadata i8 1, metadata !7163, metadata !DIExpression()), !dbg !7177
  %10 = load i32, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 6), align 4, !dbg !7231
  %inc53 = add nsw i32 %10, 1, !dbg !7231
  store i32 %inc53, i32* getelementptr inbounds (%struct.anon, %struct.anon* @sra_stats, i64 0, i32 6), align 4, !dbg !7231
  br label %if.end54, !dbg !7233

if.end54:                                         ; preds = %if.else49, %if.then52
  %proceed.4 = phi i8 [ 1, %if.then52 ], [ %proceed.0, %if.else49 ], !dbg !7177
  call void @llvm.dbg.value(metadata i8 %proceed.4, metadata !7163, metadata !DIExpression()), !dbg !7177
  %inc55 = add nsw i32 %adjustments_count.0, 1, !dbg !7234
  call void @llvm.dbg.value(metadata i32 %inc55, metadata !7165, metadata !DIExpression()), !dbg !7177
  br label %for.inc

for.inc:                                          ; preds = %if.end54, %if.then35, %if.else44, %if.then22, %if.else
  %adjustments_count.3 = phi i32 [ %inc55, %if.end54 ], [ %inc, %if.else ], [ %inc, %if.then22 ], [ %inc43, %if.then35 ], [ %add, %if.else44 ], !dbg !7235
  %proceed.5 = phi i8 [ %proceed.4, %if.end54 ], [ 1, %if.else ], [ %proceed.0, %if.then22 ], [ %proceed.0, %if.then35 ], [ 1, %if.else44 ], !dbg !7177
  call void @llvm.dbg.value(metadata i8 %proceed.5, metadata !7163, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %adjustments_count.3, metadata !7165, metadata !DIExpression()), !dbg !7177
  %inc57 = add nuw nsw i32 %i.0, 1, !dbg !7236
  call void @llvm.dbg.value(metadata i32 %inc57, metadata !7164, metadata !DIExpression()), !dbg !7177
  br label %for.cond, !dbg !7237, !llvm.loop !7238

for.end:                                          ; preds = %for.cond
  %adjustments_count.0.lcssa = phi i32 [ %adjustments_count.0, %for.cond ], !dbg !7177
  %proceed.0.lcssa = phi i8 [ %proceed.0, %for.cond ], !dbg !7177
  call void @llvm.dbg.value(metadata i32 %adjustments_count.0.lcssa, metadata !7165, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i8 %proceed.0.lcssa, metadata !7163, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %adjustments_count.0.lcssa, metadata !7165, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i8 %proceed.0.lcssa, metadata !7163, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %adjustments_count.0.lcssa, metadata !7165, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i8 %proceed.0.lcssa, metadata !7163, metadata !DIExpression()), !dbg !7177
  %tobool58 = icmp eq i8 %proceed.0.lcssa, 0, !dbg !7240
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7242
  %tobool60 = icmp ne %struct._IO_FILE* %11, null, !dbg !7242
  %or.cond = and i1 %tobool58, %tobool60, !dbg !7243
  br i1 %or.cond, label %if.then61, label %if.end63, !dbg !7243

if.then61:                                        ; preds = %for.end
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !7244
  br label %if.end63, !dbg !7244

if.end63:                                         ; preds = %for.end, %if.then61
  br i1 %tobool58, label %if.end68, label %if.then65, !dbg !7245

if.then65:                                        ; preds = %if.end63
  %12 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !7246
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %12, metadata !7166, metadata !DIExpression()), !dbg !7177
  %call66 = call fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @turn_representatives_into_adjustments(%struct.VEC_access_p_heap* %12, i32 %adjustments_count.0.lcssa) #7, !dbg !7248
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call66, metadata !7167, metadata !DIExpression()), !dbg !7177
  br label %if.end68, !dbg !7249

if.end68:                                         ; preds = %if.end63, %if.then65
  %adjustments.0 = phi %struct.VEC_ipa_parm_adjustment_t_heap* [ %call66, %if.then65 ], [ null, %if.end63 ], !dbg !7250
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments.0, metadata !7167, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap** %representatives, metadata !7166, metadata !DIExpression(DW_OP_deref)), !dbg !7177
  call fastcc void @VEC_access_p_heap_free(%struct.VEC_access_p_heap** nonnull %representatives) #7, !dbg !7251
  br label %cleanup, !dbg !7252

cleanup:                                          ; preds = %entry, %if.end68
  %retval.0 = phi %struct.VEC_ipa_parm_adjustment_t_heap* [ %adjustments.0, %if.end68 ], [ null, %entry ], !dbg !7177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7253
  ret %struct.VEC_ipa_parm_adjustment_t_heap* %retval.0, !dbg !7253
}

declare dso_local void @ipa_dump_param_adjustments(%struct._IO_FILE*, %struct.VEC_ipa_parm_adjustment_t_heap*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @modify_function(%struct.cgraph_node* %node, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) unnamed_addr #5 !dbg !7254 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !7258, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, metadata !7259, metadata !DIExpression()), !dbg !7261
  %same_body = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 13, !dbg !7262
  br label %for.cond, !dbg !7264

for.cond:                                         ; preds = %for.body, %entry
  %alias.0.in = phi %struct.cgraph_node** [ %same_body, %entry ], [ %next, %for.body ]
  %alias.0 = load %struct.cgraph_node*, %struct.cgraph_node** %alias.0.in, align 8, !dbg !7265
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %alias.0, metadata !7260, metadata !DIExpression()), !dbg !7261
  %tobool = icmp eq %struct.cgraph_node* %alias.0, null, !dbg !7266
  br i1 %tobool, label %for.end, label %for.body, !dbg !7266

for.body:                                         ; preds = %for.cond
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %alias.0, i64 0, i32 0, !dbg !7267
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7267
  tail call void @ipa_modify_formal_parameters(%union.tree_node* %0, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !7269
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %alias.0, i64 0, i32 3, !dbg !7270
  br label %for.cond, !dbg !7271, !llvm.loop !7272

for.end:                                          ; preds = %for.cond
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7274
  tail call fastcc void @create_abstract_origin(%union.tree_node* %1) #7, !dbg !7275
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7276
  tail call void @ipa_modify_formal_parameters(%union.tree_node* %2, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !7277
  %3 = bitcast %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments to i8*, !dbg !7278
  %call = tail call fastcc zeroext i8 @scan_function(i8 (%union.tree_node**, %struct.gimple_stmt_iterator*, i8, i8*)* nonnull @sra_ipa_modify_expr, i32 (%union.gimple_statement_d**, %struct.gimple_stmt_iterator*, i8*)* nonnull @sra_ipa_modify_assign, i8 (%union.gimple_statement_d*, i8*)* nonnull @replace_removed_params_ssa_names, i8 zeroext 0, i8* %3) #7, !dbg !7279
  tail call fastcc void @sra_ipa_reset_debug_stmts(%struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) #7, !dbg !7280
  tail call fastcc void @convert_callers(%struct.cgraph_node* %node, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) #7, !dbg !7281
  tail call void @cgraph_make_node_local(%struct.cgraph_node* %node) #6, !dbg !7282
  ret void, !dbg !7283
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ipa_parm_adjustment_t_heap_free(%struct.VEC_ipa_parm_adjustment_t_heap** %vec_) unnamed_addr #0 !dbg !7284 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap** %vec_, metadata !7289, metadata !DIExpression()), !dbg !7290
  %0 = load %struct.VEC_ipa_parm_adjustment_t_heap*, %struct.VEC_ipa_parm_adjustment_t_heap** %vec_, align 8, !dbg !7291
  %tobool = icmp eq %struct.VEC_ipa_parm_adjustment_t_heap* %0, null, !dbg !7291
  br i1 %tobool, label %if.end, label %if.then, !dbg !7293

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ipa_parm_adjustment_t_heap* %0 to i8*, !dbg !7293
  tail call void @free(i8* nonnull %1) #6, !dbg !7291
  br label %if.end, !dbg !7291

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ipa_parm_adjustment_t_heap* null, %struct.VEC_ipa_parm_adjustment_t_heap** %vec_, align 8, !dbg !7293
  ret void, !dbg !7293
}

declare dso_local zeroext i8 @cgraph_node_can_be_local_p(%struct.cgraph_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_unused_scalar_param(%union.tree_node* %parm) unnamed_addr #5 !dbg !7294 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !7296, metadata !DIExpression()), !dbg !7298
  %call = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %parm) #6, !dbg !7299
  %tobool = icmp eq i8 %call, 0, !dbg !7299
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !7300

land.rhs:                                         ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7301
  %call1 = tail call %union.tree_node* @gimple_default_def(%struct.function* %0, %union.tree_node* %parm) #6, !dbg !7302
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7297, metadata !DIExpression()), !dbg !7298
  %tobool2 = icmp eq %union.tree_node* %call1, null, !dbg !7303
  br i1 %tobool2, label %land.end, label %lor.rhs, !dbg !7304

lor.rhs:                                          ; preds = %land.rhs
  %call3 = tail call fastcc zeroext i8 @has_zero_uses(%union.tree_node* nonnull %call1) #7, !dbg !7305
  %tobool5 = icmp ne i8 %call3, 0, !dbg !7304
  %phitmp = zext i1 %tobool5 to i8, !dbg !7304
  br label %land.end, !dbg !7304

land.end:                                         ; preds = %land.rhs, %entry, %lor.rhs
  %1 = phi i8 [ 0, %entry ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !7306
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ptr_parm_has_direct_uses(%union.tree_node* %parm) unnamed_addr #5 !dbg !7307 {
entry:
  %ui = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !7309, metadata !DIExpression()), !dbg !7339
  %0 = bitcast %struct.immediate_use_iterator_d* %ui to i8*, !dbg !7340
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !7340
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7341
  %call = tail call %union.tree_node* @gimple_default_def(%struct.function* %1, %union.tree_node* %parm) #6, !dbg !7342
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7319, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i8 0, metadata !7320, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7339
  %call1 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %ui, %union.tree_node* %call) #7, !dbg !7343
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !7318, metadata !DIExpression()), !dbg !7339
  br label %for.cond, !dbg !7343

for.cond:                                         ; preds = %for.inc126, %entry
  %ret.0 = phi i8 [ 0, %entry ], [ %ret.2, %for.inc126 ], !dbg !7344
  %stmt.0 = phi %union.gimple_statement_d* [ %call1, %entry ], [ %call127, %for.inc126 ], !dbg !7345
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !7318, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !7320, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7339
  %call2 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %ui) #7, !dbg !7346
  %tobool = icmp eq i8 %call2, 0, !dbg !7346
  br i1 %tobool, label %for.body, label %for.end128, !dbg !7343

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !7321, metadata !DIExpression()), !dbg !7347
  %call3 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt.0) #7, !dbg !7348
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7348
  br i1 %tobool4, label %if.end, label %cleanup, !dbg !7350

if.end:                                           ; preds = %for.body
  %call5 = call fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %stmt.0) #7, !dbg !7351
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7351
  br i1 %tobool6, label %if.end28, label %if.then7, !dbg !7352

if.then7:                                         ; preds = %if.end
  %call8 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt.0) #6, !dbg !7353
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !7326, metadata !DIExpression()), !dbg !7354
  br label %while.cond, !dbg !7355

while.cond:                                       ; preds = %while.body, %if.then7
  %lhs.0 = phi %union.tree_node* [ %call8, %if.then7 ], [ %2, %while.body ], !dbg !7354
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0, metadata !7326, metadata !DIExpression()), !dbg !7354
  %call9 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %lhs.0) #7, !dbg !7356
  %tobool10 = icmp eq i8 %call9, 0, !dbg !7355
  br i1 %tobool10, label %while.end, label %while.body, !dbg !7355

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7357
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7357
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7326, metadata !DIExpression()), !dbg !7354
  br label %while.cond, !dbg !7355, !llvm.loop !7358

while.end:                                        ; preds = %while.cond
  %lhs.0.lcssa = phi %union.tree_node* [ %lhs.0, %while.cond ], !dbg !7354
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0.lcssa, metadata !7326, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0.lcssa, metadata !7326, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0.lcssa, metadata !7326, metadata !DIExpression()), !dbg !7354
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7359
  %bf.load = load i64, i64* %3, align 8, !dbg !7359
  %bf.cast10 = and i64 %bf.load, 65535, !dbg !7359
  %cmp = icmp eq i64 %bf.cast10, 47, !dbg !7359
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7359

lor.lhs.false:                                    ; preds = %while.end
  %cmp15 = icmp eq i64 %bf.cast10, 48, !dbg !7359
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false16, !dbg !7359

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %cmp21 = icmp eq i64 %bf.cast10, 49, !dbg !7359
  br i1 %cmp21, label %land.lhs.true, label %if.end28, !dbg !7361

land.lhs.true:                                    ; preds = %lor.lhs.false16, %lor.lhs.false, %while.end
  %operands23 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7362
  %4 = load %union.tree_node*, %union.tree_node** %operands23, align 8, !dbg !7362
  %cmp25 = icmp eq %union.tree_node* %4, %call, !dbg !7363
  %spec.select = zext i1 %cmp25 to i32, !dbg !7364
  br label %if.end28, !dbg !7364

if.end28:                                         ; preds = %if.end, %land.lhs.true, %lor.lhs.false16
  %uses_ok.1 = phi i32 [ 0, %if.end ], [ 0, %lor.lhs.false16 ], [ %spec.select, %land.lhs.true ], !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.1, metadata !7321, metadata !DIExpression()), !dbg !7347
  %call29 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt.0) #6, !dbg !7365
  %tobool30 = icmp eq i8 %call29, 0, !dbg !7365
  br i1 %tobool30, label %if.else, label %if.then31, !dbg !7366

if.then31:                                        ; preds = %if.end28
  %call32 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt.0) #7, !dbg !7367
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !7329, metadata !DIExpression()), !dbg !7368
  br label %while.cond33, !dbg !7369

while.cond33:                                     ; preds = %while.body36, %if.then31
  %rhs.0 = phi %union.tree_node* [ %call32, %if.then31 ], [ %5, %while.body36 ], !dbg !7368
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !7329, metadata !DIExpression()), !dbg !7368
  %call34 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %rhs.0) #7, !dbg !7370
  %tobool35 = icmp eq i8 %call34, 0, !dbg !7369
  br i1 %tobool35, label %while.end40, label %while.body36, !dbg !7369

while.body36:                                     ; preds = %while.cond33
  %operands38 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7371
  %5 = load %union.tree_node*, %union.tree_node** %operands38, align 8, !dbg !7371
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7329, metadata !DIExpression()), !dbg !7368
  br label %while.cond33, !dbg !7369, !llvm.loop !7372

while.end40:                                      ; preds = %while.cond33
  %rhs.0.lcssa = phi %union.tree_node* [ %rhs.0, %while.cond33 ], !dbg !7368
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0.lcssa, metadata !7329, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0.lcssa, metadata !7329, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0.lcssa, metadata !7329, metadata !DIExpression()), !dbg !7368
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7373
  %bf.load42 = load i64, i64* %6, align 8, !dbg !7373
  %bf.cast447 = and i64 %bf.load42, 65535, !dbg !7373
  %cmp45 = icmp eq i64 %bf.cast447, 47, !dbg !7373
  br i1 %cmp45, label %land.lhs.true58, label %lor.lhs.false46, !dbg !7373

lor.lhs.false46:                                  ; preds = %while.end40
  %cmp51 = icmp eq i64 %bf.cast447, 48, !dbg !7373
  br i1 %cmp51, label %land.lhs.true58, label %lor.lhs.false52, !dbg !7373

lor.lhs.false52:                                  ; preds = %lor.lhs.false46
  %cmp57 = icmp eq i64 %bf.cast447, 49, !dbg !7373
  br i1 %cmp57, label %land.lhs.true58, label %if.end109, !dbg !7375

land.lhs.true58:                                  ; preds = %lor.lhs.false52, %lor.lhs.false46, %while.end40
  %operands60 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7376
  %7 = load %union.tree_node*, %union.tree_node** %operands60, align 8, !dbg !7376
  %cmp62 = icmp eq %union.tree_node* %7, %call, !dbg !7377
  %inc64 = zext i1 %cmp62 to i32, !dbg !7378
  %spec.select1 = add nuw nsw i32 %uses_ok.1, %inc64, !dbg !7378
  br label %if.end109, !dbg !7378

if.else:                                          ; preds = %if.end28
  %call66 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt.0) #7, !dbg !7379
  %tobool67 = icmp eq i8 %call66, 0, !dbg !7379
  br i1 %tobool67, label %if.end109, label %for.cond69.preheader, !dbg !7380

for.cond69.preheader:                             ; preds = %if.else
  br label %for.cond69, !dbg !7381

for.cond69:                                       ; preds = %for.cond69.preheader, %for.inc
  %uses_ok.3 = phi i32 [ %uses_ok.4, %for.inc ], [ %uses_ok.1, %for.cond69.preheader ], !dbg !7347
  %i.0 = phi i32 [ %inc107, %for.inc ], [ 0, %for.cond69.preheader ], !dbg !7382
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7332, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i32 %uses_ok.3, metadata !7321, metadata !DIExpression()), !dbg !7347
  %call70 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt.0) #7, !dbg !7384
  %cmp71 = icmp ult i32 %i.0, %call70, !dbg !7385
  br i1 %cmp71, label %for.body72, label %if.end109.loopexit, !dbg !7381

for.body72:                                       ; preds = %for.cond69
  %call73 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt.0, i32 %i.0) #7, !dbg !7386
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !7335, metadata !DIExpression()), !dbg !7387
  br label %while.cond74, !dbg !7388

while.cond74:                                     ; preds = %while.body77, %for.body72
  %arg.0 = phi %union.tree_node* [ %call73, %for.body72 ], [ %8, %while.body77 ], !dbg !7387
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !7335, metadata !DIExpression()), !dbg !7387
  %call75 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %arg.0) #7, !dbg !7389
  %tobool76 = icmp eq i8 %call75, 0, !dbg !7388
  br i1 %tobool76, label %while.end81, label %while.body77, !dbg !7388

while.body77:                                     ; preds = %while.cond74
  %operands79 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7390
  %8 = load %union.tree_node*, %union.tree_node** %operands79, align 8, !dbg !7390
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7335, metadata !DIExpression()), !dbg !7387
  br label %while.cond74, !dbg !7388, !llvm.loop !7391

while.end81:                                      ; preds = %while.cond74
  %arg.0.lcssa = phi %union.tree_node* [ %arg.0, %while.cond74 ], !dbg !7387
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0.lcssa, metadata !7335, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0.lcssa, metadata !7335, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0.lcssa, metadata !7335, metadata !DIExpression()), !dbg !7387
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7392
  %bf.load83 = load i64, i64* %9, align 8, !dbg !7392
  %bf.cast854 = and i64 %bf.load83, 65535, !dbg !7392
  %cmp86 = icmp eq i64 %bf.cast854, 47, !dbg !7392
  br i1 %cmp86, label %land.lhs.true99, label %lor.lhs.false87, !dbg !7392

lor.lhs.false87:                                  ; preds = %while.end81
  %cmp92 = icmp eq i64 %bf.cast854, 48, !dbg !7392
  br i1 %cmp92, label %land.lhs.true99, label %lor.lhs.false93, !dbg !7392

lor.lhs.false93:                                  ; preds = %lor.lhs.false87
  %cmp98 = icmp eq i64 %bf.cast854, 49, !dbg !7392
  br i1 %cmp98, label %land.lhs.true99, label %for.inc, !dbg !7394

land.lhs.true99:                                  ; preds = %lor.lhs.false93, %lor.lhs.false87, %while.end81
  %operands101 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7395
  %10 = load %union.tree_node*, %union.tree_node** %operands101, align 8, !dbg !7395
  %cmp103 = icmp eq %union.tree_node* %10, %call, !dbg !7396
  %inc105 = zext i1 %cmp103 to i32, !dbg !7397
  %spec.select2 = add nsw i32 %uses_ok.3, %inc105, !dbg !7397
  br label %for.inc, !dbg !7397

for.inc:                                          ; preds = %land.lhs.true99, %lor.lhs.false93
  %uses_ok.4 = phi i32 [ %uses_ok.3, %lor.lhs.false93 ], [ %spec.select2, %land.lhs.true99 ], !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.4, metadata !7321, metadata !DIExpression()), !dbg !7347
  %inc107 = add i32 %i.0, 1, !dbg !7398
  call void @llvm.dbg.value(metadata i32 %inc107, metadata !7332, metadata !DIExpression()), !dbg !7383
  br label %for.cond69, !dbg !7399, !llvm.loop !7400

if.end109.loopexit:                               ; preds = %for.cond69
  %uses_ok.3.lcssa = phi i32 [ %uses_ok.3, %for.cond69 ], !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.3.lcssa, metadata !7321, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.3.lcssa, metadata !7321, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.3.lcssa, metadata !7321, metadata !DIExpression()), !dbg !7347
  br label %if.end109, !dbg !7402

if.end109:                                        ; preds = %if.end109.loopexit, %if.else, %land.lhs.true58, %lor.lhs.false52
  %uses_ok.6 = phi i32 [ %uses_ok.1, %lor.lhs.false52 ], [ %spec.select1, %land.lhs.true58 ], [ %uses_ok.1, %if.else ], [ %uses_ok.3.lcssa, %if.end109.loopexit ], !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.6, metadata !7321, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7339
  %call110 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %ui) #7, !dbg !7402
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call110, metadata !7325, metadata !DIExpression()), !dbg !7347
  br label %for.cond111, !dbg !7402

for.cond111:                                      ; preds = %for.body115, %if.end109
  %uses_ok.7 = phi i32 [ %uses_ok.6, %if.end109 ], [ %dec, %for.body115 ], !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.7, metadata !7321, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7339
  %call112 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %ui) #7, !dbg !7404
  %tobool113 = icmp eq i8 %call112, 0, !dbg !7404
  br i1 %tobool113, label %for.body115, label %for.end118, !dbg !7402

for.body115:                                      ; preds = %for.cond111
  %dec = add nsw i32 %uses_ok.7, -1, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %dec, metadata !7321, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7339
  %call117 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %ui) #7, !dbg !7404
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call117, metadata !7325, metadata !DIExpression()), !dbg !7347
  br label %for.cond111, !dbg !7404, !llvm.loop !7407

for.end118:                                       ; preds = %for.cond111
  %uses_ok.7.lcssa = phi i32 [ %uses_ok.7, %for.cond111 ], !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.7.lcssa, metadata !7321, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.7.lcssa, metadata !7321, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %uses_ok.7.lcssa, metadata !7321, metadata !DIExpression()), !dbg !7347
  %cmp119 = icmp eq i32 %uses_ok.7.lcssa, 0, !dbg !7409
  %spec.select3 = select i1 %cmp119, i8 %ret.0, i8 1, !dbg !7411
  call void @llvm.dbg.value(metadata i8 %spec.select3, metadata !7320, metadata !DIExpression()), !dbg !7339
  %tobool122 = icmp eq i8 %spec.select3, 0, !dbg !7412
  br i1 %tobool122, label %cleanup, label %if.then123, !dbg !7414

if.then123:                                       ; preds = %for.end118
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7339
  call fastcc void @end_imm_use_stmt_traverse(%struct.immediate_use_iterator_d* nonnull %ui) #7, !dbg !7415
  br label %cleanup, !dbg !7415

cleanup:                                          ; preds = %for.end118, %for.body, %if.then123
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then123 ], [ false, %for.body ], [ false, %for.end118 ]
  %ret.2 = phi i8 [ %spec.select3, %if.then123 ], [ %ret.0, %for.body ], [ 0, %for.end118 ], !dbg !7339
  call void @llvm.dbg.value(metadata i8 %ret.2, metadata !7320, metadata !DIExpression()), !dbg !7339
  br i1 %cleanup.dest.slot.0, label %for.end128, label %for.inc126

for.inc126:                                       ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7339
  %call127 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %ui) #7, !dbg !7346
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call127, metadata !7318, metadata !DIExpression()), !dbg !7339
  br label %for.cond, !dbg !7346, !llvm.loop !7417

for.end128:                                       ; preds = %cleanup, %for.cond
  %ret.3 = phi i8 [ %ret.2, %cleanup ], [ %ret.0, %for.cond ], !dbg !7344
  call void @llvm.dbg.value(metadata i8 %ret.3, metadata !7320, metadata !DIExpression()), !dbg !7339
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !7419
  ret i8 %ret.3, !dbg !7420
}

declare dso_local %union.tree_node* @gimple_default_def(%struct.function*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @has_zero_uses(%union.tree_node* %var) unnamed_addr #0 !dbg !7421 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !7423, metadata !DIExpression()), !dbg !7428
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7429
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !7429
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !7424, metadata !DIExpression()), !dbg !7428
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !7430
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !7430
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !7430
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !7432
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7433

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !7434
  %tobool = icmp eq i32 %3, 0, !dbg !7434
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !7436

if.end2:                                          ; preds = %if.end
  %call = tail call zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d* nonnull %0) #6, !dbg !7437
  br label %cleanup, !dbg !7438

cleanup:                                          ; preds = %if.end, %entry, %if.end2
  %retval.0 = phi i8 [ %call, %if.end2 ], [ 1, %entry ], [ 0, %if.end ], !dbg !7428
  ret i8 %retval.0, !dbg !7439
}

declare dso_local zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !7440 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7445, metadata !DIExpression()), !dbg !7447
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !7446, metadata !DIExpression()), !dbg !7447
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7448
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !7449
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !7450
  store i40* %imm_uses, i40** %0, align 8, !dbg !7450
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !7451
  %1 = bitcast i40* %next to i64*, !dbg !7451
  %2 = load i64, i64* %1, align 8, !dbg !7451
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !7452
  store i64 %2, i64* %3, align 8, !dbg !7452
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !7453
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !7454
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !7455
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7456
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !7457
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !7458
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !7459
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !7460
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !7461
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !7462
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !7463
  %tobool = icmp eq i8 %call, 0, !dbg !7463
  br i1 %tobool, label %if.end, label %return, !dbg !7465

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7466
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !7466
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !7467
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !7468
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !7468
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !7468
  br label %return, !dbg !7469

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !7447
  ret %union.gimple_statement_d* %retval.0, !dbg !7470
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7471 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7477, metadata !DIExpression()), !dbg !7478
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7479
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7479
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !7480
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !7480
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !7481
  %conv1 = zext i1 %cmp to i8, !dbg !7482
  ret i8 %conv1, !dbg !7483
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7484 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7486, metadata !DIExpression()), !dbg !7487
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7488
  %cmp = icmp eq i32 %call, 2, !dbg !7489
  %conv1 = zext i1 %cmp to i8, !dbg !7488
  ret i8 %conv1, !dbg !7490
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !7491 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7493, metadata !DIExpression()), !dbg !7494
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !7495
  %tobool = icmp eq i8 %call, 0, !dbg !7495
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7496

lor.rhs:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !7497
  %tobool3 = icmp eq i8 %call1, 0, !dbg !7497
  br i1 %tobool3, label %lor.end, label %land.rhs, !dbg !7498

land.rhs:                                         ; preds = %lor.rhs
  %call4 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7499
  %cmp = icmp ne %union.tree_node* %call4, null, !dbg !7500
  %phitmp = zext i1 %cmp to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry, %land.rhs
  %0 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !7501
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7502 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7504, metadata !DIExpression()), !dbg !7505
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7506
  %cmp = icmp eq i32 %call, 8, !dbg !7507
  %conv1 = zext i1 %cmp to i8, !dbg !7506
  ret i8 %conv1, !dbg !7508
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7509 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7511, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.value(metadata i32 %index, metadata !7512, metadata !DIExpression()), !dbg !7513
  %add = add i32 %index, 3, !dbg !7514
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !7515
  ret %union.tree_node* %call, !dbg !7516
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7517 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7521, metadata !DIExpression()), !dbg !7522
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7523
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7523
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !7524
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7524
  %2 = load i64, i64* %1, align 8, !dbg !7524
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !7525
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !7526
  store i64 %2, i64* %3, align 8, !dbg !7526
  ret %struct.ssa_use_operand_d* %0, !dbg !7527
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7528 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7530, metadata !DIExpression()), !dbg !7531
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7532
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7532
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7533
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !7534
  %conv1 = zext i1 %cmp to i8, !dbg !7535
  ret i8 %conv1, !dbg !7536
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7537 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7539, metadata !DIExpression()), !dbg !7540
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !7541
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !7541
  %1 = load i64, i64* %0, align 8, !dbg !7541
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !7542
  store i64 %1, i64* %2, align 8, !dbg !7542
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !7543
  %tobool = icmp eq i8 %call, 0, !dbg !7543
  br i1 %tobool, label %if.else, label %return, !dbg !7545

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7546
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !7546
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !7548
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7548
  %5 = load i64, i64* %4, align 8, !dbg !7548
  store i64 %5, i64* %0, align 8, !dbg !7549
  br label %return, !dbg !7550

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !7551
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7552
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @end_imm_use_stmt_traverse(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7553 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7557, metadata !DIExpression()), !dbg !7558
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7559
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node) #7, !dbg !7560
  ret void, !dbg !7561
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7562 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7566, metadata !DIExpression()), !dbg !7567
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !7568
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7568
  %1 = load i64, i64* %0, align 8, !dbg !7568
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !7569
  store i64 %1, i64* %2, align 8, !dbg !7569
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !7570
  %tobool = icmp eq i8 %call, 0, !dbg !7570
  br i1 %tobool, label %if.end4, label %if.then, !dbg !7572

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !7573
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7573
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !7576
  br i1 %cmp, label %return, label %if.then2, !dbg !7577

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7578
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #7, !dbg !7579
  br label %return, !dbg !7579

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7580
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !7580
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !7581
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !7582
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !7582
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7582
  br label %return, !dbg !7583

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !7567
  ret %union.gimple_statement_d* %retval.0, !dbg !7584
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7585 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7589, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7590, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7592, metadata !DIExpression()), !dbg !7609
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !7610
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7610
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !7593, metadata !DIExpression()), !dbg !7609
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #7, !dbg !7611
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7594, metadata !DIExpression()), !dbg !7609
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !7612
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !7612
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !7613
  %tobool = icmp eq i8 %call1, 0, !dbg !7613
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !7613
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7608, metadata !DIExpression()), !dbg !7609
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !7614
  %cmp = icmp eq i32 %call2, 16, !dbg !7616
  br i1 %cmp, label %if.then, label %if.else, !dbg !7617

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7595, metadata !DIExpression(DW_OP_deref)), !dbg !7609
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !7618
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !7591, metadata !DIExpression()), !dbg !7609
  br label %for.cond, !dbg !7618

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !7621
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !7592, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7591, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7595, metadata !DIExpression(DW_OP_deref)), !dbg !7609
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7622
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7622
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !7618

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !7624
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !7626
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !7627

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #7, !dbg !7628
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !7592, metadata !DIExpression()), !dbg !7609
  br label %for.inc, !dbg !7629

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !7592, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7595, metadata !DIExpression(DW_OP_deref)), !dbg !7609
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7622
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !7591, metadata !DIExpression()), !dbg !7609
  br label %for.cond, !dbg !7622, !llvm.loop !7630

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !7632

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7595, metadata !DIExpression(DW_OP_deref)), !dbg !7609
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !7634
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !7591, metadata !DIExpression()), !dbg !7609
  br label %for.cond17, !dbg !7634

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !7638
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !7592, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !7591, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7595, metadata !DIExpression(DW_OP_deref)), !dbg !7609
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7639
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7639
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !7634

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #7, !dbg !7641
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !7643
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !7644

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #7, !dbg !7645
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !7592, metadata !DIExpression()), !dbg !7609
  br label %for.inc28, !dbg !7646

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !7592, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7595, metadata !DIExpression(DW_OP_deref)), !dbg !7609
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7639
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !7591, metadata !DIExpression()), !dbg !7609
  br label %for.cond17, !dbg !7639, !llvm.loop !7647

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #7, !dbg !7649
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !7591, metadata !DIExpression()), !dbg !7609
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !7651
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !7652

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #7, !dbg !7653
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !7656
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !7657

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #7, !dbg !7658
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !7592, metadata !DIExpression()), !dbg !7609
  br label %if.end44, !dbg !7659

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7609
  br label %if.end44, !dbg !7660

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7592, metadata !DIExpression()), !dbg !7609
  br label %if.end44, !dbg !7660

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !7662
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !7592, metadata !DIExpression()), !dbg !7609
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !7660
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7660
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !7663
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !7664

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7665
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #7, !dbg !7666
  br label %if.end49, !dbg !7666

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7667
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #7, !dbg !7668
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !7669
  ret void, !dbg !7669
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !7670 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !7674, metadata !DIExpression()), !dbg !7675
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !7676
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !7676
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !7677
  ret %union.tree_node* %1, !dbg !7678
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !7679 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7684, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !7685, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7686, metadata !DIExpression()), !dbg !7689
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !7690
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7687, metadata !DIExpression()), !dbg !7689
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7691
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7692
  store i8 0, i8* %done, align 8, !dbg !7693
  %and = and i32 %flags, 5, !dbg !7694
  %cmp = icmp eq i32 %and, 0, !dbg !7694
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7694

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7694
  br label %cond.end, !dbg !7694

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !7695
  %tobool = icmp eq i8 %call1, 0, !dbg !7695
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !7695
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !7688, metadata !DIExpression()), !dbg !7689
  %and3 = and i32 %cond2, %flags, !dbg !7696
  %cmp4 = icmp eq i32 %and3, 0, !dbg !7698
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7699

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !7700
  br label %cleanup, !dbg !7702

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7703
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7704
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !7705
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7706
  store i32 %call7, i32* %num_phi, align 4, !dbg !7707
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7708
  store i32 2, i32* %iter_type, align 4, !dbg !7709
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7710
  br label %cleanup, !dbg !7711

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !7689
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7712
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7713 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7719, metadata !DIExpression()), !dbg !7720
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7721
  %0 = load i8, i8* %done, align 8, !dbg !7721
  ret i8 %0, !dbg !7722
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !7723 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7727, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7728, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !7729, metadata !DIExpression()), !dbg !7730
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !7731
  br i1 %cmp, label %if.end3, label %if.then, !dbg !7733

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !7734
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7734
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !7737
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !7738

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #7, !dbg !7739
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #7, !dbg !7741
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7729, metadata !DIExpression()), !dbg !7730
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !7729, metadata !DIExpression()), !dbg !7730
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !7742
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7743 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7747, metadata !DIExpression()), !dbg !7749
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7750
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !7750
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !7752
  br i1 %tobool, label %if.end, label %if.then, !dbg !7753

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !7754
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !7748, metadata !DIExpression()), !dbg !7749
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !7756
  %2 = load i64, i64* %1, align 8, !dbg !7756
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !7757
  store i64 %2, i64* %3, align 8, !dbg !7757
  br label %cleanup, !dbg !7758

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7759
  %4 = load i32, i32* %phi_i, align 8, !dbg !7759
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7761
  %5 = load i32, i32* %num_phi, align 4, !dbg !7761
  %cmp = icmp slt i32 %4, %5, !dbg !7762
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !7763

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7764
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7764
  %inc = add nsw i32 %4, 1, !dbg !7764
  store i32 %inc, i32* %phi_i, align 8, !dbg !7764
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !7764
  br label %cleanup, !dbg !7766

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7767
  store i8 1, i8* %done, align 8, !dbg !7768
  br label %cleanup, !dbg !7769

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !7749
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7770
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7771 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7773, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7774, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7775, metadata !DIExpression()), !dbg !7776
  %0 = and i32 %flags, 11, !dbg !7777
  %1 = icmp eq i32 %0, 1, !dbg !7777
  br i1 %1, label %cond.end, label %cond.true, !dbg !7777

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7777
  br label %cond.end, !dbg !7777

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !7778
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7779
  store i32 2, i32* %iter_type, align 4, !dbg !7780
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7781
  ret %struct.ssa_use_operand_d* %call, !dbg !7782
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7783 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7787, metadata !DIExpression()), !dbg !7789
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7790
  %tobool = icmp eq i8 %call, 0, !dbg !7790
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7792

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !7793
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !7793
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !7793
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !7788, metadata !DIExpression()), !dbg !7789
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !7794
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !7796

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !7797
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !7797
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !7798
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !7798
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !7799
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !7800
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !7801
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !7801

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !7802
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !7803 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7807, metadata !DIExpression()), !dbg !7808
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7809
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7809
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !7811
  br i1 %cmp, label %return, label %if.end, !dbg !7812

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7813
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7813
  %2 = load i64, i64* %1, align 8, !dbg !7813
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !7814
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !7815
  store i64 %2, i64* %3, align 8, !dbg !7815
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !7816
  %5 = load i64, i64* %4, align 8, !dbg !7816
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !7817
  %7 = load i64*, i64** %6, align 8, !dbg !7817
  store i64 %5, i64* %7, align 8, !dbg !7818
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7819
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !7820
  br label %return, !dbg !7821

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !7821
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !7822 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7826, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !7827, metadata !DIExpression()), !dbg !7828
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7829
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7830
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !7831
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7831
  %1 = load i64, i64* %0, align 8, !dbg !7831
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7832
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !7833
  store i64 %1, i64* %2, align 8, !dbg !7833
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7834
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !7835
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !7836
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !7837
  ret void, !dbg !7838
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7839 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7841, metadata !DIExpression()), !dbg !7842
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !7843
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !7843
  ret %union.tree_node* %0, !dbg !7844
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7845 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7849, metadata !DIExpression()), !dbg !7850
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7851
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !7852
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7853
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !7854
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7855
  store i32 0, i32* %iter_type, align 4, !dbg !7856
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7857
  store i32 0, i32* %phi_i, align 8, !dbg !7858
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7859
  store i32 0, i32* %num_phi, align 4, !dbg !7860
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7861
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7862
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7863
  store i8 1, i8* %done, align 8, !dbg !7864
  ret void, !dbg !7865
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7866 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7868, metadata !DIExpression()), !dbg !7869
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !7870
  %0 = load i32, i32* %nargs, align 4, !dbg !7870
  ret i32 %0, !dbg !7871
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !7872 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7876, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i32 %i, metadata !7877, metadata !DIExpression()), !dbg !7878
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !7879
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !7880
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !7881
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7882 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7887, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i32 %index, metadata !7888, metadata !DIExpression()), !dbg !7889
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !7890
  %0 = load i32, i32* %capacity, align 8, !dbg !7890
  %cmp = icmp ult i32 %0, %index, !dbg !7890
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7890

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7890
  br label %cond.end, !dbg !7890

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !7891
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !7891
  ret %struct.phi_arg_d* %arrayidx, !dbg !7892
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7893 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7897, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7898, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7899, metadata !DIExpression()), !dbg !7900
  %0 = and i32 %flags, 10, !dbg !7901
  %1 = icmp eq i32 %0, 8, !dbg !7901
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !7901

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !7901
  %3 = icmp eq i32 %2, 4, !dbg !7901
  br i1 %3, label %cond.true, label %cond.end, !dbg !7901

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7901
  br label %cond.end, !dbg !7901

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !7902
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !7903

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !7904
  br label %cond.end12, !dbg !7903

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !7903
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7905
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !7906
  %and14 = and i32 %flags, 8, !dbg !7907
  %tobool15 = icmp eq i32 %and14, 0, !dbg !7907
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !7909

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !7910
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !7911

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !7912
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !7913
  br i1 %cmp, label %if.end, label %if.then, !dbg !7914

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !7915
  %6 = load i64*, i64** %5, align 8, !dbg !7915
  %7 = load i64, i64* %6, align 8, !dbg !7916
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !7917
  store i64 %7, i64* %8, align 8, !dbg !7917
  br label %if.end, !dbg !7918

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !7919
  %tobool24 = icmp eq i32 %and23, 0, !dbg !7919
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !7920

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !7921
  br label %cond.end28, !dbg !7920

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !7920
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7922
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !7923
  %and30 = and i32 %flags, 4, !dbg !7924
  %tobool31 = icmp eq i32 %and30, 0, !dbg !7924
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !7926

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !7927
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !7928

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7929
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !7930
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !7931

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !7932
  %11 = load i64*, i64** %10, align 8, !dbg !7932
  %12 = load i64, i64* %11, align 8, !dbg !7933
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !7934
  store i64 %12, i64* %13, align 8, !dbg !7934
  br label %if.end42, !dbg !7935

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7936
  store i8 0, i8* %done, align 8, !dbg !7937
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7938
  store i32 0, i32* %phi_i, align 8, !dbg !7939
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7940
  store i32 0, i32* %num_phi, align 4, !dbg !7941
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7942
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7943
  ret void, !dbg !7944
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7945 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7949, metadata !DIExpression()), !dbg !7950
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !7951
  %tobool = icmp eq i8 %call, 0, !dbg !7951
  br i1 %tobool, label %return, label %if.end, !dbg !7953

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !7954
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !7954
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !7954
  br label %return, !dbg !7955

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !7950
  ret %struct.def_optype_d* %retval.0, !dbg !7956
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7957 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7959, metadata !DIExpression()), !dbg !7960
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7961
  %tobool = icmp eq i8 %call, 0, !dbg !7961
  br i1 %tobool, label %return, label %if.end, !dbg !7963

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !7964
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !7964
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !7964
  br label %return, !dbg !7965

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !7960
  ret %union.tree_node* %retval.0, !dbg !7966
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7967 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7971, metadata !DIExpression()), !dbg !7972
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !7973
  %tobool = icmp eq i8 %call, 0, !dbg !7973
  br i1 %tobool, label %return, label %if.end, !dbg !7975

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !7976
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !7976
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !7976
  br label %return, !dbg !7977

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !7972
  ret %struct.use_optype_d* %retval.0, !dbg !7978
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7979 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7981, metadata !DIExpression()), !dbg !7982
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7983
  %tobool = icmp eq i8 %call, 0, !dbg !7983
  br i1 %tobool, label %return, label %if.end, !dbg !7985

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !7986
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !7986
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !7986
  br label %return, !dbg !7987

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !7982
  ret %union.tree_node* %retval.0, !dbg !7988
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7989 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7991, metadata !DIExpression()), !dbg !7992
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7993
  %cmp = icmp eq i32 %call, 6, !dbg !7994
  %conv1 = zext i1 %cmp to i8, !dbg !7993
  ret i8 %conv1, !dbg !7995
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @splice_all_param_accesses(%struct.VEC_access_p_heap** %representatives) unnamed_addr #5 !dbg !7996 {
entry:
  %ro_grp = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap** %representatives, metadata !8000, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 0, metadata !8001, metadata !DIExpression()), !dbg !8012
  %0 = load i32, i32* @func_param_count, align 4, !dbg !8013
  %call = tail call fastcc %struct.VEC_access_p_heap* @VEC_access_p_heap_alloc(i32 %0) #7, !dbg !8013
  store %struct.VEC_access_p_heap* %call, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !8014
  %1 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !8015
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %1, i64 0, i32 2, !dbg !8015
  br label %for.cond, !dbg !8016

for.cond:                                         ; preds = %for.inc, %entry
  %parm.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.inc ]
  %result.0 = phi i32 [ 0, %entry ], [ %result.11, %for.inc ], !dbg !8012
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !8017
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !8001, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !8002, metadata !DIExpression()), !dbg !8012
  %tobool = icmp eq %union.tree_node* %parm.0, null, !dbg !8018
  br i1 %tobool, label %for.end, label %for.body, !dbg !8018

for.body:                                         ; preds = %for.cond
  %call1 = call fastcc zeroext i8 @is_unused_scalar_param(%union.tree_node* nonnull %parm.0) #7, !dbg !8019
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8019
  br i1 %tobool2, label %if.else, label %if.then, !dbg !8020

if.then:                                          ; preds = %for.body
  %2 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !8021
  %tobool3 = icmp eq %struct.VEC_access_p_heap* %2, null, !dbg !8021
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !8021

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %2, i64 0, i32 0, !dbg !8021
  br label %cond.end, !dbg !8021

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %struct.VEC_access_p_base* [ %base, %cond.true ], [ null, %if.then ], !dbg !8021
  %call4 = call fastcc %struct.access** @VEC_access_p_base_quick_push(%struct.VEC_access_p_base* %cond, %struct.access* nonnull @no_accesses_representant) #7, !dbg !8021
  %cmp = icmp eq i32 %result.0, 0, !dbg !8023
  %spec.select = select i1 %cmp, i32 1, i32 %result.0, !dbg !8025
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8001, metadata !DIExpression()), !dbg !8012
  br label %for.inc, !dbg !8026

if.else:                                          ; preds = %for.body
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8027
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !8027
  %4 = load i64*, i64** %3, align 8, !dbg !8027
  %bf.load = load i64, i64* %4, align 8, !dbg !8027
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !8027
  %cmp7 = icmp eq i64 %bf.cast4, 10, !dbg !8027
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false, !dbg !8027

lor.lhs.false:                                    ; preds = %if.else
  %cmp14 = icmp eq i64 %bf.cast4, 12, !dbg !8027
  br i1 %cmp14, label %land.lhs.true, label %if.else36, !dbg !8028

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else
  %type18 = getelementptr inbounds i64, i64* %4, i64 2, !dbg !8029
  %5 = bitcast i64* %type18 to %union.tree_node**, !dbg !8029
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !8029
  %call19 = call zeroext i8 @is_gimple_reg_type(%union.tree_node* %6) #6, !dbg !8030
  %tobool20 = icmp eq i8 %call19, 0, !dbg !8030
  br i1 %tobool20, label %if.else36, label %land.lhs.true21, !dbg !8031

land.lhs.true21:                                  ; preds = %land.lhs.true
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !8032
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8033
  %8 = load i32, i32* %uid, align 4, !dbg !8033
  %call22 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %8) #6, !dbg !8034
  %tobool23 = icmp eq i32 %call22, 0, !dbg !8034
  br i1 %tobool23, label %if.else36, label %if.then24, !dbg !8035

if.then24:                                        ; preds = %land.lhs.true21
  %call25 = call fastcc %struct.access* @unmodified_by_ref_scalar_representative(%union.tree_node* nonnull %parm.0) #7, !dbg !8036
  call void @llvm.dbg.value(metadata %struct.access* %call25, metadata !8003, metadata !DIExpression()), !dbg !8012
  %9 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !8038
  %tobool26 = icmp eq %struct.VEC_access_p_heap* %9, null, !dbg !8038
  br i1 %tobool26, label %cond.end30, label %cond.true27, !dbg !8038

cond.true27:                                      ; preds = %if.then24
  %base28 = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %9, i64 0, i32 0, !dbg !8038
  br label %cond.end30, !dbg !8038

cond.end30:                                       ; preds = %if.then24, %cond.true27
  %cond31 = phi %struct.VEC_access_p_base* [ %base28, %cond.true27 ], [ null, %if.then24 ], !dbg !8038
  %call32 = call fastcc %struct.access** @VEC_access_p_base_quick_push(%struct.VEC_access_p_base* %cond31, %struct.access* %call25) #7, !dbg !8038
  %tobool33 = icmp eq %struct.access* %call25, null, !dbg !8039
  %spec.select1 = select i1 %tobool33, i32 %result.0, i32 4, !dbg !8041
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !8001, metadata !DIExpression()), !dbg !8012
  br label %for.inc, !dbg !8042

if.else36:                                        ; preds = %land.lhs.true21, %land.lhs.true, %lor.lhs.false
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @candidate_bitmap, align 8, !dbg !8043
  %uid38 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8044
  %11 = load i32, i32* %uid38, align 4, !dbg !8044
  %call39 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %11) #6, !dbg !8045
  %tobool40 = icmp eq i32 %call39, 0, !dbg !8045
  br i1 %tobool40, label %if.else97, label %if.then41, !dbg !8046

if.then41:                                        ; preds = %if.else36
  call void @llvm.dbg.value(metadata i8* %ro_grp, metadata !8004, metadata !DIExpression(DW_OP_deref)), !dbg !8047
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %ro_grp) #8, !dbg !8048
  call void @llvm.dbg.value(metadata i8 0, metadata !8004, metadata !DIExpression()), !dbg !8047
  store i8 0, i8* %ro_grp, align 1, !dbg !8049
  call void @llvm.dbg.value(metadata i8* %ro_grp, metadata !8004, metadata !DIExpression(DW_OP_deref)), !dbg !8047
  %call42 = call fastcc %struct.access* @splice_param_accesses(%union.tree_node* nonnull %parm.0, i8* nonnull %ro_grp) #7, !dbg !8050
  call void @llvm.dbg.value(metadata %struct.access* %call42, metadata !8003, metadata !DIExpression()), !dbg !8012
  %12 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !8051
  %tobool43 = icmp eq %struct.VEC_access_p_heap* %12, null, !dbg !8051
  br i1 %tobool43, label %cond.end47, label %cond.true44, !dbg !8051

cond.true44:                                      ; preds = %if.then41
  %base45 = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %12, i64 0, i32 0, !dbg !8051
  br label %cond.end47, !dbg !8051

cond.end47:                                       ; preds = %if.then41, %cond.true44
  %cond48 = phi %struct.VEC_access_p_base* [ %base45, %cond.true44 ], [ null, %if.then41 ], !dbg !8051
  %call49 = call fastcc %struct.access** @VEC_access_p_base_quick_push(%struct.VEC_access_p_base* %cond48, %struct.access* %call42) #7, !dbg !8051
  %tobool50 = icmp eq %struct.access* %call42, null, !dbg !8052
  br i1 %tobool50, label %if.else87, label %land.lhs.true51, !dbg !8054

land.lhs.true51:                                  ; preds = %cond.end47
  %call52 = call fastcc zeroext i8 @no_accesses_p(%struct.access* nonnull %call42) #7, !dbg !8055
  %tobool53 = icmp eq i8 %call52, 0, !dbg !8055
  br i1 %tobool53, label %if.then54, label %if.else87, !dbg !8056

if.then54:                                        ; preds = %land.lhs.true51
  %13 = load i64*, i64** %3, align 8, !dbg !8057
  %bf.load58 = load i64, i64* %13, align 8, !dbg !8057
  %bf.cast606 = and i64 %bf.load58, 65535, !dbg !8057
  %cmp61 = icmp eq i64 %bf.cast606, 10, !dbg !8057
  br i1 %cmp61, label %if.then72, label %lor.lhs.false63, !dbg !8057

lor.lhs.false63:                                  ; preds = %if.then54
  %cmp70 = icmp eq i64 %bf.cast606, 12, !dbg !8057
  br i1 %cmp70, label %if.then72, label %if.else81, !dbg !8060

if.then72:                                        ; preds = %lor.lhs.false63, %if.then54
  %14 = load i8, i8* %ro_grp, align 1, !dbg !8061
  call void @llvm.dbg.value(metadata i8 %14, metadata !8004, metadata !DIExpression()), !dbg !8047
  %tobool73 = icmp eq i8 %14, 0, !dbg !8061
  %15 = icmp ugt i32 %result.0, 3, !dbg !8064
  %spec.select2 = select i1 %15, i32 %result.0, i32 3, !dbg !8064
  %result.4 = select i1 %tobool73, i32 %spec.select2, i32 4, !dbg !8064
  br label %if.end96, !dbg !8064

if.else81:                                        ; preds = %lor.lhs.false63
  %16 = icmp ugt i32 %result.0, 2, !dbg !8065
  %spec.select3 = select i1 %16, i32 %result.0, i32 2, !dbg !8065
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !8001, metadata !DIExpression()), !dbg !8012
  br label %if.end96

if.else87:                                        ; preds = %land.lhs.true51, %cond.end47
  %call88 = call fastcc zeroext i8 @no_accesses_p(%struct.access* %call42) #7, !dbg !8066
  %tobool90 = icmp ne i8 %call88, 0, !dbg !8066
  %cmp92 = icmp eq i32 %result.0, 0, !dbg !8068
  %or.cond = and i1 %tobool90, %cmp92, !dbg !8069
  %result.7 = select i1 %or.cond, i32 1, i32 %result.0, !dbg !8069
  br label %if.end96, !dbg !8069

if.end96:                                         ; preds = %if.else87, %if.else81, %if.then72
  %result.8 = phi i32 [ %spec.select3, %if.else81 ], [ %result.4, %if.then72 ], [ %result.7, %if.else87 ], !dbg !8070
  call void @llvm.dbg.value(metadata i32 %result.8, metadata !8001, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %ro_grp, metadata !8004, metadata !DIExpression(DW_OP_deref)), !dbg !8047
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %ro_grp) #8, !dbg !8071
  br label %for.inc, !dbg !8072

if.else97:                                        ; preds = %if.else36
  %17 = load %struct.VEC_access_p_heap*, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !8073
  %tobool98 = icmp eq %struct.VEC_access_p_heap* %17, null, !dbg !8073
  br i1 %tobool98, label %cond.end102, label %cond.true99, !dbg !8073

cond.true99:                                      ; preds = %if.else97
  %base100 = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %17, i64 0, i32 0, !dbg !8073
  br label %cond.end102, !dbg !8073

cond.end102:                                      ; preds = %if.else97, %cond.true99
  %cond103 = phi %struct.VEC_access_p_base* [ %base100, %cond.true99 ], [ null, %if.else97 ], !dbg !8073
  %call104 = call fastcc %struct.access** @VEC_access_p_base_quick_push(%struct.VEC_access_p_base* %cond103, %struct.access* null) #7, !dbg !8073
  br label %for.inc

for.inc:                                          ; preds = %cond.end, %if.end96, %cond.end102, %cond.end30
  %result.11 = phi i32 [ %spec.select, %cond.end ], [ %spec.select1, %cond.end30 ], [ %result.8, %if.end96 ], [ %result.0, %cond.end102 ], !dbg !8074
  call void @llvm.dbg.value(metadata i32 %result.11, metadata !8001, metadata !DIExpression()), !dbg !8012
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8075
  br label %for.cond, !dbg !8076, !llvm.loop !8077

for.end:                                          ; preds = %for.cond
  %result.0.lcssa = phi i32 [ %result.0, %for.cond ], !dbg !8012
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !8001, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !8001, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !8001, metadata !DIExpression()), !dbg !8012
  %cmp109 = icmp eq i32 %result.0.lcssa, 0, !dbg !8079
  br i1 %cmp109, label %if.then111, label %cleanup, !dbg !8081

if.then111:                                       ; preds = %for.end
  call fastcc void @VEC_access_p_heap_free(%struct.VEC_access_p_heap** %representatives) #7, !dbg !8082
  store %struct.VEC_access_p_heap* null, %struct.VEC_access_p_heap** %representatives, align 8, !dbg !8084
  br label %cleanup, !dbg !8085

cleanup:                                          ; preds = %for.end, %if.then111
  %retval.0 = phi i32 [ 0, %if.then111 ], [ %result.0.lcssa, %for.end ], !dbg !8012
  ret i32 %retval.0, !dbg !8086
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_caller_dereference_legality(%struct.VEC_access_p_heap* %representatives) unnamed_addr #5 !dbg !8087 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %representatives, metadata !8091, metadata !DIExpression()), !dbg !8098
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8099
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !8099
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8101

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !8102
  %and = and i32 %1, 8, !dbg !8103
  %tobool1 = icmp eq i32 %and, 0, !dbg !8103
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8104

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64*, i64** @bb_dereferences, align 8, !dbg !8105
  tail call fastcc void @dump_dereferences_table(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.63, i64 0, i64 0), i64* %2) #7, !dbg !8106
  br label %if.end, !dbg !8106

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  tail call fastcc void @propagate_dereference_distances() #7, !dbg !8107
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8108
  %tobool2 = icmp eq %struct._IO_FILE* %3, null, !dbg !8108
  br i1 %tobool2, label %if.end7, label %land.lhs.true3, !dbg !8110

land.lhs.true3:                                   ; preds = %if.end
  %4 = load i32, i32* @dump_flags, align 4, !dbg !8111
  %and4 = and i32 %4, 8, !dbg !8112
  %tobool5 = icmp eq i32 %and4, 0, !dbg !8112
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8113

if.then6:                                         ; preds = %land.lhs.true3
  %5 = load i64*, i64** @bb_dereferences, align 8, !dbg !8114
  tail call fastcc void @dump_dereferences_table(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.64, i64 0, i64 0), i64* %5) #7, !dbg !8115
  br label %if.end7, !dbg !8115

if.end7:                                          ; preds = %land.lhs.true3, %if.end, %if.then6
  call void @llvm.dbg.value(metadata i32 0, metadata !8092, metadata !DIExpression()), !dbg !8098
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %representatives, i64 0, i32 0, !dbg !8116
  br label %for.cond, !dbg !8117

for.cond:                                         ; preds = %cleanup, %if.end7
  %i.0 = phi i32 [ 0, %if.end7 ], [ %inc, %cleanup ], !dbg !8118
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8092, metadata !DIExpression()), !dbg !8098
  %6 = load i32, i32* @func_param_count, align 4, !dbg !8119
  %cmp = icmp slt i32 %i.0, %6, !dbg !8120
  br i1 %cmp, label %for.body, label %for.end, !dbg !8121

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* %base, i32 %i.0) #7, !dbg !8122
  call void @llvm.dbg.value(metadata %struct.access* %call, metadata !8093, metadata !DIExpression()), !dbg !8116
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8123
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !8123
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8123
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !8123
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !8123
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 9, !dbg !8124
  %10 = load i32, i32* %index, align 8, !dbg !8124
  %11 = load i32, i32* @func_param_count, align 4, !dbg !8125
  %mul = mul nsw i32 %10, %11, !dbg !8126
  %add = add nsw i32 %mul, %i.0, !dbg !8127
  call void @llvm.dbg.value(metadata i32 %add, metadata !8097, metadata !DIExpression()), !dbg !8116
  %tobool9 = icmp eq %struct.access* %call, null, !dbg !8128
  br i1 %tobool9, label %cleanup, label %lor.lhs.false, !dbg !8130

lor.lhs.false:                                    ; preds = %for.body
  %call10 = tail call fastcc zeroext i8 @no_accesses_p(%struct.access* nonnull %call) #7, !dbg !8131
  %tobool11 = icmp eq i8 %call10, 0, !dbg !8131
  br i1 %tobool11, label %do.body.preheader, label %cleanup, !dbg !8132

do.body.preheader:                                ; preds = %lor.lhs.false
  %idxprom = sext i32 %add to i64, !dbg !8133
  %.pre = load i64*, i64** @bb_dereferences, align 8, !dbg !8136
  br label %do.body, !dbg !8137

do.body:                                          ; preds = %do.body.preheader, %if.end18
  %repr.0 = phi %struct.access* [ %15, %if.end18 ], [ %call, %do.body.preheader ], !dbg !8116
  call void @llvm.dbg.value(metadata %struct.access* %repr.0, metadata !8093, metadata !DIExpression()), !dbg !8116
  %offset = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 0, !dbg !8138
  %12 = load i64, i64* %offset, align 8, !dbg !8138
  %size = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 1, !dbg !8139
  %13 = load i64, i64* %size, align 8, !dbg !8139
  %add14 = add nsw i64 %12, %13, !dbg !8140
  %arrayidx = getelementptr inbounds i64, i64* %.pre, i64 %idxprom, !dbg !8136
  %14 = load i64, i64* %arrayidx, align 8, !dbg !8136
  %cmp15 = icmp sgt i64 %add14, %14, !dbg !8141
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8142

if.then17:                                        ; preds = %do.body
  %grp_not_necessarilly_dereferenced = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 14, !dbg !8143
  %bf.load = load i16, i16* %grp_not_necessarilly_dereferenced, align 8, !dbg !8144
  %bf.set = or i16 %bf.load, 8192, !dbg !8144
  store i16 %bf.set, i16* %grp_not_necessarilly_dereferenced, align 8, !dbg !8144
  br label %if.end18, !dbg !8145

if.end18:                                         ; preds = %if.then17, %do.body
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 6, !dbg !8146
  %15 = load %struct.access*, %struct.access** %next_grp, align 8, !dbg !8146
  call void @llvm.dbg.value(metadata %struct.access* %15, metadata !8093, metadata !DIExpression()), !dbg !8116
  %tobool19 = icmp eq %struct.access* %15, null, !dbg !8147
  br i1 %tobool19, label %cleanup.loopexit, label %do.body, !dbg !8147, !llvm.loop !8148

cleanup.loopexit:                                 ; preds = %if.end18
  br label %cleanup, !dbg !8150

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false, %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8092, metadata !DIExpression()), !dbg !8098
  br label %for.cond, !dbg !8151, !llvm.loop !8152

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8154
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_modified_params(%struct.VEC_access_p_heap* %representatives) unnamed_addr #5 !dbg !8155 {
entry:
  %visited = alloca %struct.bitmap_head_def*, align 8
  %ar = alloca %struct.ao_ref_s, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %representatives, metadata !8157, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 0, metadata !8158, metadata !DIExpression()), !dbg !8179
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %representatives, i64 0, i32 0, !dbg !8180
  %0 = bitcast %struct.bitmap_head_def** %visited to i8*, !dbg !8181
  %1 = bitcast %struct.ao_ref_s* %ar to i8*, !dbg !8181
  br label %for.cond, !dbg !8182

for.cond:                                         ; preds = %for.inc42, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc42 ], !dbg !8183
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8158, metadata !DIExpression()), !dbg !8179
  %2 = load i32, i32* @func_param_count, align 4, !dbg !8184
  %cmp = icmp slt i32 %i.0, %2, !dbg !8185
  br i1 %cmp, label %for.body, label %for.end43, !dbg !8186

for.body:                                         ; preds = %for.cond
  %call = call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* %base, i32 %i.0) #7, !dbg !8187
  call void @llvm.dbg.value(metadata %struct.access* %call, metadata !8159, metadata !DIExpression()), !dbg !8188
  br label %for.cond1, !dbg !8189

for.cond1:                                        ; preds = %cleanup, %for.body
  %repr.0 = phi %struct.access* [ %call, %for.body ], [ %12, %cleanup ], !dbg !8180
  call void @llvm.dbg.value(metadata %struct.access* %repr.0, metadata !8159, metadata !DIExpression()), !dbg !8188
  %tobool2 = icmp eq %struct.access* %repr.0, null, !dbg !8190
  br i1 %tobool2, label %for.inc42, label %for.body3, !dbg !8190

for.body3:                                        ; preds = %for.cond1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8191
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1) #8, !dbg !8192
  %call4 = call fastcc zeroext i8 @no_accesses_p(%struct.access* nonnull %repr.0) #7, !dbg !8193
  %tobool5 = icmp eq i8 %call4, 0, !dbg !8193
  br i1 %tobool5, label %if.end, label %cleanup, !dbg !8195

if.end:                                           ; preds = %for.body3
  %base6 = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 2, !dbg !8196
  %3 = bitcast %union.tree_node** %base6 to %struct.tree_common**, !dbg !8196
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !8196
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !8196
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !8196
  %6 = load i64*, i64** %5, align 8, !dbg !8196
  %bf.load = load i64, i64* %6, align 8, !dbg !8196
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8196
  %cmp8 = icmp eq i64 %bf.cast1, 10, !dbg !8196
  br i1 %cmp8, label %lor.lhs.false17, label %lor.lhs.false, !dbg !8196

lor.lhs.false:                                    ; preds = %if.end
  %cmp16 = icmp eq i64 %bf.cast1, 12, !dbg !8196
  br i1 %cmp16, label %lor.lhs.false17, label %cleanup, !dbg !8198

lor.lhs.false17:                                  ; preds = %lor.lhs.false, %if.end
  %grp_maybe_modified = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 14, !dbg !8199
  %bf.load18 = load i16, i16* %grp_maybe_modified, align 8, !dbg !8199
  %bf.clear19 = and i16 %bf.load18, 2048, !dbg !8199
  %tobool21 = icmp eq i16 %bf.clear19, 0, !dbg !8200
  br i1 %tobool21, label %if.end23, label %cleanup, !dbg !8201

if.end23:                                         ; preds = %lor.lhs.false17
  %expr = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 3, !dbg !8202
  %7 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8202
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ar, metadata !8168, metadata !DIExpression(DW_OP_deref)), !dbg !8181
  call void @ao_ref_init(%struct.ao_ref_s* nonnull %ar, %union.tree_node* %7) #6, !dbg !8203
  %call24 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !8204
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call24, metadata !8167, metadata !DIExpression()), !dbg !8181
  store %struct.bitmap_head_def* %call24, %struct.bitmap_head_def** %visited, align 8, !dbg !8205
  call void @llvm.dbg.value(metadata %struct.access* %repr.0, metadata !8163, metadata !DIExpression()), !dbg !8181
  %8 = bitcast %struct.access* %repr.0 to i8*, !dbg !8206
  br label %for.cond25, !dbg !8210

for.cond25:                                       ; preds = %for.inc, %if.end23
  %access.0 = phi %struct.access* [ %repr.0, %if.end23 ], [ %10, %for.inc ], !dbg !8211
  call void @llvm.dbg.value(metadata %struct.access* %access.0, metadata !8163, metadata !DIExpression()), !dbg !8181
  %tobool26 = icmp eq %struct.access* %access.0, null, !dbg !8212
  br i1 %tobool26, label %for.end, label %for.body27, !dbg !8212

for.body27:                                       ; preds = %for.cond25
  %stmt = getelementptr inbounds %struct.access, %struct.access* %access.0, i64 0, i32 5, !dbg !8213
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8213
  %call28 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %9) #7, !dbg !8214
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %visited, metadata !8167, metadata !DIExpression(DW_OP_deref)), !dbg !8181
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ar, metadata !8168, metadata !DIExpression(DW_OP_deref)), !dbg !8181
  %call29 = call i32 @walk_aliased_vdefs(%struct.ao_ref_s* nonnull %ar, %union.tree_node* %call28, i8 (%struct.ao_ref_s*, %union.tree_node*, i8*)* nonnull @mark_maybe_modified, i8* nonnull %8, %struct.bitmap_head_def** nonnull %visited) #6, !dbg !8215
  %bf.load31 = load i16, i16* %grp_maybe_modified, align 8, !dbg !8216
  %bf.clear33 = and i16 %bf.load31, 2048, !dbg !8216
  %tobool35 = icmp eq i16 %bf.clear33, 0, !dbg !8218
  br i1 %tobool35, label %for.inc, label %for.end, !dbg !8219

for.inc:                                          ; preds = %for.body27
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %access.0, i64 0, i32 9, !dbg !8220
  %10 = load %struct.access*, %struct.access** %next_sibling, align 8, !dbg !8220
  call void @llvm.dbg.value(metadata %struct.access* %10, metadata !8163, metadata !DIExpression()), !dbg !8181
  br label %for.cond25, !dbg !8221, !llvm.loop !8222

for.end:                                          ; preds = %for.body27, %for.cond25
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %visited, align 8, !dbg !8224
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %11, metadata !8167, metadata !DIExpression()), !dbg !8181
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %11) #6, !dbg !8224
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8167, metadata !DIExpression()), !dbg !8181
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %visited, align 8, !dbg !8224
  br label %cleanup, !dbg !8225

cleanup:                                          ; preds = %lor.lhs.false17, %for.body3, %lor.lhs.false, %for.end
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1) #8, !dbg !8225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8225
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 6, !dbg !8226
  %12 = load %struct.access*, %struct.access** %next_grp, align 8, !dbg !8226
  call void @llvm.dbg.value(metadata %struct.access* %12, metadata !8159, metadata !DIExpression()), !dbg !8188
  br label %for.cond1, !dbg !8227, !llvm.loop !8228

for.inc42:                                        ; preds = %for.cond1
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8230
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8158, metadata !DIExpression()), !dbg !8179
  br label %for.cond, !dbg !8231, !llvm.loop !8232

for.end43:                                        ; preds = %for.cond
  ret void, !dbg !8234
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @no_accesses_p(%struct.access* %access) unnamed_addr #0 !dbg !8235 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !8237, metadata !DIExpression()), !dbg !8238
  %cmp = icmp eq %struct.access* %access, @no_accesses_representant, !dbg !8239
  %conv1 = zext i1 %cmp to i8, !dbg !8240
  ret i8 %conv1, !dbg !8241
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.access* @VEC_access_p_base_replace(%struct.VEC_access_p_base* %vec_, i32 %ix_, %struct.access* %obj_) unnamed_addr #0 !dbg !8242 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_base* %vec_, metadata !8246, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8247, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata %struct.access* null, metadata !8248, metadata !DIExpression()), !dbg !8250
  %idxprom = zext i32 %ix_ to i64, !dbg !8251
  %arrayidx = getelementptr inbounds %struct.VEC_access_p_base, %struct.VEC_access_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8251
  %0 = load %struct.access*, %struct.access** %arrayidx, align 8, !dbg !8251
  call void @llvm.dbg.value(metadata %struct.access* %0, metadata !8249, metadata !DIExpression()), !dbg !8250
  store %struct.access* null, %struct.access** %arrayidx, align 8, !dbg !8251
  ret %struct.access* %0, !dbg !8251
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @decide_one_param_reduction(%struct.access* %repr) unnamed_addr #5 !dbg !8252 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %repr, metadata !8256, metadata !DIExpression()), !dbg !8267
  %base = getelementptr inbounds %struct.access, %struct.access* %repr, i64 0, i32 2, !dbg !8268
  %0 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !8268
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8263, metadata !DIExpression()), !dbg !8267
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8269
  %1 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !8269
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !8269
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 2, !dbg !8269
  %3 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !8269
  %call = tail call i64 @tree_low_cst(%union.tree_node* %3, i32 1) #6, !dbg !8270
  %conv = trunc i64 %call to i32, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8258, metadata !DIExpression()), !dbg !8267
  %cmp = icmp sgt i32 %conv, 0, !dbg !8271
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8271

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3411, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8271
  br label %cond.end, !dbg !8271

cond.end:                                         ; preds = %entry, %cond.true
  %4 = bitcast %union.tree_node** %type to i64**, !dbg !8272
  %5 = load i64*, i64** %4, align 8, !dbg !8272
  %bf.load = load i64, i64* %5, align 8, !dbg !8272
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8272
  %cmp6 = icmp eq i64 %bf.cast1, 10, !dbg !8272
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !8272

lor.lhs.false:                                    ; preds = %cond.end
  %cmp14 = icmp eq i64 %bf.cast1, 12, !dbg !8272
  br i1 %cmp14, label %if.then, label %if.end, !dbg !8274

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  call void @llvm.dbg.value(metadata i8 1, metadata !8262, metadata !DIExpression()), !dbg !8267
  %type19 = getelementptr inbounds i64, i64* %5, i64 2, !dbg !8275
  %6 = bitcast i64* %type19 to %struct.tree_type**, !dbg !8275
  %7 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !8275
  %size21 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 2, !dbg !8275
  %8 = load %union.tree_node*, %union.tree_node** %size21, align 8, !dbg !8275
  %call22 = tail call i64 @tree_low_cst(%union.tree_node* %8, i32 1) #6, !dbg !8277
  %conv23 = trunc i64 %call22 to i32, !dbg !8277
  call void @llvm.dbg.value(metadata i32 %conv23, metadata !8259, metadata !DIExpression()), !dbg !8267
  br label %if.end, !dbg !8278

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %by_ref.0 = phi i8 [ 1, %if.then ], [ 0, %lor.lhs.false ], !dbg !8279
  %agg_size.0 = phi i32 [ %conv23, %if.then ], [ %conv, %lor.lhs.false ], !dbg !8279
  call void @llvm.dbg.value(metadata i32 %agg_size.0, metadata !8259, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i8 %by_ref.0, metadata !8262, metadata !DIExpression()), !dbg !8267
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8280
  %tobool = icmp eq %struct._IO_FILE* %9, null, !dbg !8280
  br i1 %tobool, label %if.end28, label %if.then24, !dbg !8281

if.then24:                                        ; preds = %if.end
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.67, i64 0, i64 0)) #6, !dbg !8282
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8283
  tail call void @print_generic_expr(%struct._IO_FILE* %10, %union.tree_node* %0, i32 0) #6, !dbg !8284
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8285
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8286
  %12 = load i32, i32* %uid, align 4, !dbg !8286
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), i32 %12) #6, !dbg !8287
  call void @llvm.dbg.value(metadata %struct.access* %repr, metadata !8264, metadata !DIExpression()), !dbg !8288
  br label %for.cond, !dbg !8289

for.cond:                                         ; preds = %for.body, %if.then24
  %acc.0 = phi %struct.access* [ %repr, %if.then24 ], [ %14, %for.body ], !dbg !8291
  call void @llvm.dbg.value(metadata %struct.access* %acc.0, metadata !8264, metadata !DIExpression()), !dbg !8288
  %tobool27 = icmp eq %struct.access* %acc.0, null, !dbg !8292
  br i1 %tobool27, label %if.end28.loopexit, label %for.body, !dbg !8292

for.body:                                         ; preds = %for.cond
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8293
  tail call fastcc void @dump_access(%struct._IO_FILE* %13, %struct.access* nonnull %acc.0, i8 zeroext 1) #7, !dbg !8295
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %acc.0, i64 0, i32 6, !dbg !8296
  %14 = load %struct.access*, %struct.access** %next_grp, align 8, !dbg !8296
  call void @llvm.dbg.value(metadata %struct.access* %14, metadata !8264, metadata !DIExpression()), !dbg !8288
  br label %for.cond, !dbg !8297, !llvm.loop !8298

if.end28.loopexit:                                ; preds = %for.cond
  br label %if.end28, !dbg !8300

if.end28:                                         ; preds = %if.end28.loopexit, %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !8257, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 0, metadata !8260, metadata !DIExpression()), !dbg !8267
  %tobool39 = icmp eq i8 %by_ref.0, 0, !dbg !8301
  br i1 %tobool39, label %if.end28.split.us, label %if.end28.if.end28.split_crit_edge, !dbg !8300

if.end28.if.end28.split_crit_edge:                ; preds = %if.end28
  br label %for.cond29, !dbg !8300

if.end28.split.us:                                ; preds = %if.end28
  br label %for.cond29.us, !dbg !8300

for.cond29.us:                                    ; preds = %cond.end37.us, %if.end28.split.us
  %new_param_count.0.us = phi i32 [ 0, %if.end28.split.us ], [ %inc.us, %cond.end37.us ], !dbg !8267
  %total_size.0.us = phi i32 [ 0, %if.end28.split.us ], [ %total_size.1.us, %cond.end37.us ], !dbg !8267
  %repr.addr.0.us = phi %struct.access* [ %repr, %if.end28.split.us ], [ %18, %cond.end37.us ]
  call void @llvm.dbg.value(metadata %struct.access* %repr.addr.0.us, metadata !8256, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %total_size.0.us, metadata !8257, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %new_param_count.0.us, metadata !8260, metadata !DIExpression()), !dbg !8267
  %tobool30.us = icmp eq %struct.access* %repr.addr.0.us, null, !dbg !8306
  br i1 %tobool30.us, label %for.end59.us-lcssa.us, label %for.body31.us, !dbg !8306

for.body31.us:                                    ; preds = %for.cond29.us
  %base32.us = getelementptr inbounds %struct.access, %struct.access* %repr.addr.0.us, i64 0, i32 2, !dbg !8307
  %15 = load %union.tree_node*, %union.tree_node** %base32.us, align 8, !dbg !8307
  %cmp33.us = icmp eq %union.tree_node* %0, %15, !dbg !8307
  br i1 %cmp33.us, label %cond.end37.us, label %cond.true35.us, !dbg !8307

cond.true35.us:                                   ; preds = %for.body31.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3439, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8307
  br label %cond.end37.us, !dbg !8307

cond.end37.us:                                    ; preds = %cond.true35.us, %for.body31.us
  %inc.us = add nuw nsw i32 %new_param_count.0.us, 1, !dbg !8308
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !8260, metadata !DIExpression()), !dbg !8267
  %size51.us = getelementptr inbounds %struct.access, %struct.access* %repr.addr.0.us, i64 0, i32 1, !dbg !8309
  %16 = load i64, i64* %size51.us, align 8, !dbg !8309
  %17 = trunc i64 %16 to i32, !dbg !8310
  %total_size.1.us = add i32 %total_size.0.us, %17, !dbg !8301
  call void @llvm.dbg.value(metadata i32 %total_size.1.us, metadata !8257, metadata !DIExpression()), !dbg !8267
  %next_grp58.us = getelementptr inbounds %struct.access, %struct.access* %repr.addr.0.us, i64 0, i32 6, !dbg !8311
  %18 = load %struct.access*, %struct.access** %next_grp58.us, align 8, !dbg !8311
  call void @llvm.dbg.value(metadata %struct.access* %18, metadata !8256, metadata !DIExpression()), !dbg !8267
  br label %for.cond29.us, !dbg !8312, !llvm.loop !8313

for.end59.us-lcssa.us:                            ; preds = %for.cond29.us
  %new_param_count.0.us.lcssa = phi i32 [ %new_param_count.0.us, %for.cond29.us ], !dbg !8267
  %total_size.0.us.lcssa = phi i32 [ %total_size.0.us, %for.cond29.us ], !dbg !8267
  call void @llvm.dbg.value(metadata i32 %new_param_count.0.us.lcssa, metadata !8260, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %total_size.0.us.lcssa, metadata !8257, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %new_param_count.0.us.lcssa, metadata !8260, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %total_size.0.us.lcssa, metadata !8257, metadata !DIExpression()), !dbg !8267
  br label %for.end59, !dbg !8315

for.cond29:                                       ; preds = %for.inc57, %if.end28.if.end28.split_crit_edge
  %new_param_count.0 = phi i32 [ 0, %if.end28.if.end28.split_crit_edge ], [ %inc, %for.inc57 ], !dbg !8267
  %total_size.0 = phi i32 [ 0, %if.end28.if.end28.split_crit_edge ], [ %total_size.1, %for.inc57 ], !dbg !8267
  %repr.addr.0 = phi %struct.access* [ %repr, %if.end28.if.end28.split_crit_edge ], [ %22, %for.inc57 ]
  call void @llvm.dbg.value(metadata %struct.access* %repr.addr.0, metadata !8256, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %total_size.0, metadata !8257, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %new_param_count.0, metadata !8260, metadata !DIExpression()), !dbg !8267
  %tobool30 = icmp eq %struct.access* %repr.addr.0, null, !dbg !8306
  br i1 %tobool30, label %for.end59.us-lcssa, label %for.body31, !dbg !8306

for.body31:                                       ; preds = %for.cond29
  %base32 = getelementptr inbounds %struct.access, %struct.access* %repr.addr.0, i64 0, i32 2, !dbg !8307
  %19 = load %union.tree_node*, %union.tree_node** %base32, align 8, !dbg !8307
  %cmp33 = icmp eq %union.tree_node* %0, %19, !dbg !8307
  br i1 %cmp33, label %cond.end37, label %cond.true35, !dbg !8307

cond.true35:                                      ; preds = %for.body31
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3439, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8307
  br label %cond.end37, !dbg !8307

cond.end37:                                       ; preds = %for.body31, %cond.true35
  %inc = add nuw nsw i32 %new_param_count.0, 1, !dbg !8308
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8260, metadata !DIExpression()), !dbg !8267
  %grp_maybe_modified = getelementptr inbounds %struct.access, %struct.access* %repr.addr.0, i64 0, i32 14, !dbg !8316
  %bf.load41 = load i16, i16* %grp_maybe_modified, align 8, !dbg !8316
  %bf.clear42 = and i16 %bf.load41, 2048, !dbg !8316
  %tobool44 = icmp eq i16 %bf.clear42, 0, !dbg !8317
  br i1 %tobool44, label %land.lhs.true, label %if.else54, !dbg !8318

land.lhs.true:                                    ; preds = %cond.end37
  %bf.clear47 = and i16 %bf.load41, 8192, !dbg !8319
  %tobool49 = icmp eq i16 %bf.clear47, 0, !dbg !8320
  br i1 %tobool49, label %if.then50, label %if.else54, !dbg !8321

if.then50:                                        ; preds = %land.lhs.true
  %size51 = getelementptr inbounds %struct.access, %struct.access* %repr.addr.0, i64 0, i32 1, !dbg !8309
  %20 = load i64, i64* %size51, align 8, !dbg !8309
  %21 = trunc i64 %20 to i32, !dbg !8310
  br label %for.inc57, !dbg !8322

if.else54:                                        ; preds = %land.lhs.true, %cond.end37
  br label %for.inc57

for.inc57:                                        ; preds = %if.then50, %if.else54
  %conv.pn = phi i32 [ %conv, %if.else54 ], [ %21, %if.then50 ]
  %total_size.1 = add i32 %total_size.0, %conv.pn, !dbg !8301
  call void @llvm.dbg.value(metadata i32 %total_size.1, metadata !8257, metadata !DIExpression()), !dbg !8267
  %next_grp58 = getelementptr inbounds %struct.access, %struct.access* %repr.addr.0, i64 0, i32 6, !dbg !8311
  %22 = load %struct.access*, %struct.access** %next_grp58, align 8, !dbg !8311
  call void @llvm.dbg.value(metadata %struct.access* %22, metadata !8256, metadata !DIExpression()), !dbg !8267
  br label %for.cond29, !dbg !8312, !llvm.loop !8313

for.end59.us-lcssa:                               ; preds = %for.cond29
  %new_param_count.0.lcssa7 = phi i32 [ %new_param_count.0, %for.cond29 ], !dbg !8267
  %total_size.0.lcssa6 = phi i32 [ %total_size.0, %for.cond29 ], !dbg !8267
  call void @llvm.dbg.value(metadata i32 %new_param_count.0.lcssa7, metadata !8260, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %total_size.0.lcssa6, metadata !8257, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %new_param_count.0.lcssa7, metadata !8260, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %total_size.0.lcssa6, metadata !8257, metadata !DIExpression()), !dbg !8267
  br label %for.end59, !dbg !8315

for.end59:                                        ; preds = %for.end59.us-lcssa.us, %for.end59.us-lcssa
  %new_param_count.0.lcssa = phi i32 [ %new_param_count.0.lcssa7, %for.end59.us-lcssa ], [ %new_param_count.0.us.lcssa, %for.end59.us-lcssa.us ], !dbg !8267
  %total_size.0.lcssa = phi i32 [ %total_size.0.lcssa6, %for.end59.us-lcssa ], [ %total_size.0.us.lcssa, %for.end59.us-lcssa.us ], !dbg !8267
  call void @llvm.dbg.value(metadata i32 %new_param_count.0.lcssa, metadata !8260, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %total_size.0.lcssa, metadata !8257, metadata !DIExpression()), !dbg !8267
  %cmp60 = icmp eq i32 %new_param_count.0.lcssa, 0, !dbg !8315
  br i1 %cmp60, label %cond.true62, label %cond.end64, !dbg !8315

cond.true62:                                      ; preds = %for.end59
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3449, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8315
  br label %cond.end64, !dbg !8315

cond.end64:                                       ; preds = %for.end59, %cond.true62
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8323
  %call66 = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %23) #6, !dbg !8325
  %tobool67 = icmp eq i8 %call66, 0, !dbg !8325
  br i1 %tobool67, label %if.else69, label %if.end70, !dbg !8326

if.else69:                                        ; preds = %cond.end64
  %24 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !8327
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %24, i64 118, i32 1, !dbg !8327
  %25 = load i32, i32* %value, align 8, !dbg !8327
  %mul = mul nsw i32 %25, %conv, !dbg !8328
  call void @llvm.dbg.value(metadata i32 %mul, metadata !8261, metadata !DIExpression()), !dbg !8267
  br label %if.end70

if.end70:                                         ; preds = %cond.end64, %if.else69
  %parm_size_limit.0 = phi i32 [ %mul, %if.else69 ], [ %conv, %cond.end64 ], !dbg !8329
  call void @llvm.dbg.value(metadata i32 %parm_size_limit.0, metadata !8261, metadata !DIExpression()), !dbg !8267
  %cmp71 = icmp slt i32 %total_size.0.lcssa, %agg_size.0, !dbg !8330
  %cmp74 = icmp sle i32 %total_size.0.lcssa, %parm_size_limit.0, !dbg !8332
  %or.cond = and i1 %cmp71, %cmp74, !dbg !8333
  br i1 %or.cond, label %if.then76, label %cleanup, !dbg !8333

if.then76:                                        ; preds = %if.end70
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8334
  %tobool77 = icmp eq %struct._IO_FILE* %26, null, !dbg !8334
  br i1 %tobool77, label %cleanup, label %if.then78, !dbg !8337

if.then78:                                        ; preds = %if.then76
  %call79 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %26, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i64 0, i64 0), i32 %new_param_count.0.lcssa) #6, !dbg !8338
  br label %cleanup, !dbg !8338

cleanup:                                          ; preds = %if.then76, %if.end70, %if.then78
  %retval.0 = phi i32 [ %new_param_count.0.lcssa, %if.then78 ], [ %new_param_count.0.lcssa, %if.then76 ], [ 0, %if.end70 ], !dbg !8339
  ret i32 %retval.0, !dbg !8340
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @turn_representatives_into_adjustments(%struct.VEC_access_p_heap* %representatives, i32 %adjustments_count) unnamed_addr #5 !dbg !8341 {
entry:
  %parms = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %representatives, metadata !8345, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 %adjustments_count, metadata !8346, metadata !DIExpression()), !dbg !8367
  %0 = bitcast %struct.VEC_tree_heap** %parms to i8*, !dbg !8368
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8368
  %cmp = icmp sgt i32 %adjustments_count, 0, !dbg !8369
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8369

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3572, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8369
  br label %cond.end, !dbg !8369

cond.end:                                         ; preds = %entry, %cond.true
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !8370
  %call = tail call %struct.VEC_tree_heap* @ipa_get_vector_of_formal_parms(%union.tree_node* %1) #6, !dbg !8371
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call, metadata !8347, metadata !DIExpression()), !dbg !8367
  store %struct.VEC_tree_heap* %call, %struct.VEC_tree_heap** %parms, align 8, !dbg !8372
  %call1 = tail call fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @VEC_ipa_parm_adjustment_t_heap_alloc(i32 %adjustments_count) #7, !dbg !8373
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %call1, metadata !8353, metadata !DIExpression()), !dbg !8367
  %2 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !8374
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %2, i64 0, i32 2, !dbg !8374
  call void @llvm.dbg.value(metadata i32 0, metadata !8355, metadata !DIExpression()), !dbg !8367
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %representatives, i64 0, i32 0, !dbg !8375
  %base34 = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %call1, i64 0, i32 0, !dbg !8376
  br label %for.cond, !dbg !8380

for.cond:                                         ; preds = %for.inc82, %cond.end
  %parm.0.in = phi %union.tree_node** [ %arguments, %cond.end ], [ %chain, %for.inc82 ]
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.inc82 ], !dbg !8381
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !8367
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8355, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !8354, metadata !DIExpression()), !dbg !8367
  %3 = load i32, i32* @func_param_count, align 4, !dbg !8382
  %cmp2 = icmp slt i32 %i.0, %3, !dbg !8383
  br i1 %cmp2, label %for.body, label %for.end84, !dbg !8384

for.body:                                         ; preds = %for.cond
  %call7 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* %base, i32 %i.0) #7, !dbg !8385
  call void @llvm.dbg.value(metadata %struct.access* %call7, metadata !8356, metadata !DIExpression()), !dbg !8375
  %tobool8 = icmp eq %struct.access* %call7, null, !dbg !8386
  br i1 %tobool8, label %if.then, label %lor.lhs.false, !dbg !8387

lor.lhs.false:                                    ; preds = %for.body
  %call9 = tail call fastcc zeroext i8 @no_accesses_p(%struct.access* nonnull %call7) #7, !dbg !8388
  %tobool10 = icmp eq i8 %call9, 0, !dbg !8388
  br i1 %tobool10, label %if.else26, label %if.then, !dbg !8389

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %call17 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_quick_push(%struct.VEC_ipa_parm_adjustment_t_base* %base34, %struct.ipa_parm_adjustment* null) #7, !dbg !8390
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call17, metadata !8360, metadata !DIExpression()), !dbg !8391
  %4 = bitcast %struct.ipa_parm_adjustment* %call17 to i8*, !dbg !8392
  %call18 = tail call i8* @memset(i8* %4, i32 0, i64 56) #6, !dbg !8393
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %parms, align 8, !dbg !8394
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %5, metadata !8347, metadata !DIExpression()), !dbg !8367
  %call19 = tail call fastcc i32 @get_param_index(%union.tree_node* %parm.0, %struct.VEC_tree_heap* %5) #7, !dbg !8395
  %base_index = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call17, i64 0, i32 6, !dbg !8396
  store i32 %call19, i32* %base_index, align 8, !dbg !8397
  %base20 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call17, i64 0, i32 0, !dbg !8398
  store %union.tree_node* %parm.0, %union.tree_node** %base20, align 8, !dbg !8399
  %remove_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call17, i64 0, i32 7, !dbg !8400
  %bf.load23 = load i8, i8* %remove_param, align 4, !dbg !8400
  br i1 %tobool8, label %if.then22, label %if.else, !dbg !8402

if.then22:                                        ; preds = %if.then
  %bf.set = or i8 %bf.load23, 1, !dbg !8403
  store i8 %bf.set, i8* %remove_param, align 4, !dbg !8403
  br label %for.inc82, !dbg !8404

if.else:                                          ; preds = %if.then
  %bf.set25 = or i8 %bf.load23, 2, !dbg !8405
  store i8 %bf.set25, i8* %remove_param, align 4, !dbg !8405
  br label %for.inc82

if.else26:                                        ; preds = %lor.lhs.false
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %parms, align 8, !dbg !8406
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %6, metadata !8347, metadata !DIExpression()), !dbg !8367
  %call28 = tail call fastcc i32 @get_param_index(%union.tree_node* %parm.0, %struct.VEC_tree_heap* %6) #7, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %call28, metadata !8366, metadata !DIExpression()), !dbg !8408
  br label %for.cond29, !dbg !8409

for.cond29:                                       ; preds = %land.end, %if.else26
  %repr.0 = phi %struct.access* [ %call7, %if.else26 ], [ %22, %land.end ], !dbg !8375
  call void @llvm.dbg.value(metadata %struct.access* %repr.0, metadata !8356, metadata !DIExpression()), !dbg !8375
  %tobool30 = icmp eq %struct.access* %repr.0, null, !dbg !8410
  br i1 %tobool30, label %for.inc82.loopexit, label %for.body31, !dbg !8410

for.body31:                                       ; preds = %for.cond29
  %call38 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_quick_push(%struct.VEC_ipa_parm_adjustment_t_base* %base34, %struct.ipa_parm_adjustment* null) #7, !dbg !8411
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call38, metadata !8364, metadata !DIExpression()), !dbg !8408
  %7 = bitcast %struct.ipa_parm_adjustment* %call38 to i8*, !dbg !8412
  %call39 = tail call i8* @memset(i8* %7, i32 0, i64 56) #6, !dbg !8413
  %base40 = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 2, !dbg !8414
  %8 = load %union.tree_node*, %union.tree_node** %base40, align 8, !dbg !8414
  %cmp41 = icmp eq %union.tree_node* %8, %parm.0, !dbg !8414
  br i1 %cmp41, label %cond.end45, label %cond.true43, !dbg !8414

cond.true43:                                      ; preds = %for.body31
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3602, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8414
  br label %cond.end45, !dbg !8414

cond.end45:                                       ; preds = %for.body31, %cond.true43
  %base_index47 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call38, i64 0, i32 6, !dbg !8415
  store i32 %call28, i32* %base_index47, align 8, !dbg !8416
  %9 = bitcast %union.tree_node** %base40 to i64*, !dbg !8417
  %10 = load i64, i64* %9, align 8, !dbg !8417
  %11 = bitcast %struct.ipa_parm_adjustment* %call38 to i64*, !dbg !8418
  store i64 %10, i64* %11, align 8, !dbg !8418
  %type = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 4, !dbg !8419
  %12 = bitcast %union.tree_node** %type to i64*, !dbg !8419
  %13 = load i64, i64* %12, align 8, !dbg !8419
  %type50 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call38, i64 0, i32 1, !dbg !8420
  %14 = bitcast %union.tree_node** %type50 to i64*, !dbg !8421
  store i64 %13, i64* %14, align 8, !dbg !8421
  %offset = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 0, !dbg !8422
  %15 = load i64, i64* %offset, align 8, !dbg !8422
  %offset51 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call38, i64 0, i32 5, !dbg !8423
  store i64 %15, i64* %offset51, align 8, !dbg !8424
  %16 = bitcast %union.tree_node** %base40 to %struct.tree_common**, !dbg !8425
  %17 = load %struct.tree_common*, %struct.tree_common** %16, align 8, !dbg !8425
  %type53 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i64 0, i32 2, !dbg !8425
  %18 = bitcast %union.tree_node** %type53 to i64**, !dbg !8425
  %19 = load i64*, i64** %18, align 8, !dbg !8425
  %bf.load55 = load i64, i64* %19, align 8, !dbg !8425
  %bf.cast1 = and i64 %bf.load55, 65535, !dbg !8425
  %cmp57 = icmp eq i64 %bf.cast1, 10, !dbg !8425
  br i1 %cmp57, label %land.rhs, label %lor.lhs.false59, !dbg !8425

lor.lhs.false59:                                  ; preds = %cond.end45
  %cmp67 = icmp eq i64 %bf.cast1, 12, !dbg !8425
  br i1 %cmp67, label %land.rhs, label %land.end, !dbg !8426

land.rhs:                                         ; preds = %lor.lhs.false59, %cond.end45
  %grp_maybe_modified = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 14, !dbg !8427
  %bf.load69 = load i16, i16* %grp_maybe_modified, align 8, !dbg !8427
  %bf.clear70 = and i16 %bf.load69, 2048, !dbg !8427
  %tobool72 = icmp eq i16 %bf.clear70, 0, !dbg !8428
  br i1 %tobool72, label %lor.rhs, label %land.end, !dbg !8429

lor.rhs:                                          ; preds = %land.rhs
  %bf.clear75 = and i16 %bf.load69, 8192, !dbg !8430
  %tobool77 = icmp ne i16 %bf.clear75, 0, !dbg !8429
  br label %land.end, !dbg !8429

land.end:                                         ; preds = %land.rhs, %lor.rhs, %lor.lhs.false59
  %20 = phi i1 [ false, %lor.lhs.false59 ], [ true, %land.rhs ], [ %tobool77, %lor.rhs ], !dbg !8376
  %by_ref = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call38, i64 0, i32 7, !dbg !8431
  %21 = zext i1 %20 to i8, !dbg !8432
  %bf.load78 = load i8, i8* %by_ref, align 4, !dbg !8432
  %bf.shl = shl nuw nsw i8 %21, 2, !dbg !8432
  %bf.clear79 = and i8 %bf.load78, -5, !dbg !8432
  %bf.set80 = or i8 %bf.clear79, %bf.shl, !dbg !8432
  store i8 %bf.set80, i8* %by_ref, align 4, !dbg !8432
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %repr.0, i64 0, i32 6, !dbg !8433
  %22 = load %struct.access*, %struct.access** %next_grp, align 8, !dbg !8433
  call void @llvm.dbg.value(metadata %struct.access* %22, metadata !8356, metadata !DIExpression()), !dbg !8375
  br label %for.cond29, !dbg !8434, !llvm.loop !8435

for.inc82.loopexit:                               ; preds = %for.cond29
  br label %for.inc82, !dbg !8437

for.inc82:                                        ; preds = %for.inc82.loopexit, %if.else, %if.then22
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8355, metadata !DIExpression()), !dbg !8367
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8438
  br label %for.cond, !dbg !8439, !llvm.loop !8440

for.end84:                                        ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %parms, metadata !8347, metadata !DIExpression(DW_OP_deref)), !dbg !8367
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %parms) #7, !dbg !8442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8443
  ret %struct.VEC_ipa_parm_adjustment_t_heap* %call1, !dbg !8444
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @unmodified_by_ref_scalar_representative(%union.tree_node* %parm) unnamed_addr #5 !dbg !8445 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !8447, metadata !DIExpression()), !dbg !8456
  %call = tail call fastcc %struct.VEC_access_p_heap* @get_base_access_vector(%union.tree_node* %parm) #7, !dbg !8457
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %call, metadata !8451, metadata !DIExpression()), !dbg !8456
  %cond = icmp eq %struct.VEC_access_p_heap* %call, null, !dbg !8458
  br i1 %cond, label %cond.true, label %cond.true2, !dbg !8458

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3267, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8458
  br label %cond.end4, !dbg !8459

cond.true2:                                       ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %call, i64 0, i32 0, !dbg !8459
  br label %cond.end4, !dbg !8459

cond.end4:                                        ; preds = %cond.true, %cond.true2
  %cond5 = phi %struct.VEC_access_p_base* [ %base, %cond.true2 ], [ null, %cond.true ], !dbg !8459
  %call6 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* %cond5, i32 0) #7, !dbg !8459
  call void @llvm.dbg.value(metadata %struct.access* %call6, metadata !8450, metadata !DIExpression()), !dbg !8456
  %write = getelementptr inbounds %struct.access, %struct.access* %call6, i64 0, i32 14, !dbg !8460
  %bf.load = load i16, i16* %write, align 8, !dbg !8460
  %bf.clear = and i16 %bf.load, 1, !dbg !8460
  %tobool7 = icmp eq i16 %bf.clear, 0, !dbg !8462
  br i1 %tobool7, label %if.end, label %cleanup37, !dbg !8463

if.end:                                           ; preds = %cond.end4
  %group_representative = getelementptr inbounds %struct.access, %struct.access* %call6, i64 0, i32 7, !dbg !8464
  store %struct.access* %call6, %struct.access** %group_representative, align 8, !dbg !8465
  %base10 = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %call, i64 0, i32 0, !dbg !8466
  %call14 = tail call fastcc i32 @VEC_access_p_base_length(%struct.VEC_access_p_base* %base10) #7, !dbg !8466
  call void @llvm.dbg.value(metadata i32 %call14, metadata !8449, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.value(metadata i32 1, metadata !8448, metadata !DIExpression()), !dbg !8456
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %call6, i64 0, i32 9, !dbg !8467
  %0 = bitcast %struct.access** %next_sibling to i64*, !dbg !8467
  br label %for.cond, !dbg !8468

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 1, %if.end ], [ %inc, %for.inc ], !dbg !8469
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8448, metadata !DIExpression()), !dbg !8456
  %cmp = icmp slt i32 %i.0, %call14, !dbg !8470
  br i1 %cmp, label %for.body, label %for.end, !dbg !8471

for.body:                                         ; preds = %for.cond
  %call21 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* %base10, i32 %i.0) #7, !dbg !8472
  call void @llvm.dbg.value(metadata %struct.access* %call21, metadata !8452, metadata !DIExpression()), !dbg !8467
  %write22 = getelementptr inbounds %struct.access, %struct.access* %call21, i64 0, i32 14, !dbg !8473
  %bf.load23 = load i16, i16* %write22, align 8, !dbg !8473
  %bf.clear24 = and i16 %bf.load23, 1, !dbg !8473
  %tobool26 = icmp eq i16 %bf.clear24, 0, !dbg !8475
  br i1 %tobool26, label %if.end28, label %cleanup, !dbg !8476

if.end28:                                         ; preds = %for.body
  %group_representative29 = getelementptr inbounds %struct.access, %struct.access* %call21, i64 0, i32 7, !dbg !8477
  store %struct.access* %call6, %struct.access** %group_representative29, align 8, !dbg !8478
  %1 = load i64, i64* %0, align 8, !dbg !8479
  %next_sibling30 = getelementptr inbounds %struct.access, %struct.access* %call21, i64 0, i32 9, !dbg !8480
  %2 = bitcast %struct.access** %next_sibling30 to i64*, !dbg !8481
  store i64 %1, i64* %2, align 8, !dbg !8481
  store %struct.access* %call21, %struct.access** %next_sibling, align 8, !dbg !8482
  br label %cleanup, !dbg !8483

cleanup:                                          ; preds = %for.body, %if.end28
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end28 ], [ false, %for.body ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup37.loopexit

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8484
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8448, metadata !DIExpression()), !dbg !8456
  br label %for.cond, !dbg !8485, !llvm.loop !8486

for.end:                                          ; preds = %for.cond
  %bf.load32 = load i16, i16* %write, align 8, !dbg !8488
  %bf.set36 = or i16 %bf.load32, 4112, !dbg !8489
  store i16 %bf.set36, i16* %write, align 8, !dbg !8489
  br label %cleanup37, !dbg !8490

cleanup37.loopexit:                               ; preds = %cleanup
  br label %cleanup37, !dbg !8491

cleanup37:                                        ; preds = %cleanup37.loopexit, %cond.end4, %for.end
  %retval.2 = phi %struct.access* [ %call6, %for.end ], [ null, %cond.end4 ], [ null, %cleanup37.loopexit ], !dbg !8456
  ret %struct.access* %retval.2, !dbg !8491
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.access* @splice_param_accesses(%union.tree_node* %parm, i8* %ro_grp) unnamed_addr #5 !dbg !8492 {
entry:
  %res = alloca %struct.access*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !8496, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i8* %ro_grp, metadata !8497, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 0, metadata !8503, metadata !DIExpression()), !dbg !8512
  %0 = bitcast %struct.access** %res to i8*, !dbg !8513
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8513
  call void @llvm.dbg.value(metadata %struct.access** %res, metadata !8506, metadata !DIExpression()), !dbg !8512
  %call = tail call fastcc %struct.VEC_access_p_heap* @get_base_access_vector(%union.tree_node* %parm) #7, !dbg !8514
  call void @llvm.dbg.value(metadata %struct.VEC_access_p_heap* %call, metadata !8507, metadata !DIExpression()), !dbg !8512
  %tobool = icmp eq %struct.VEC_access_p_heap* %call, null, !dbg !8515
  br i1 %tobool, label %cleanup120, label %cond.true, !dbg !8517

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_access_p_heap, %struct.VEC_access_p_heap* %call, i64 0, i32 0, !dbg !8518
  %call2 = tail call fastcc i32 @VEC_access_p_base_length(%struct.VEC_access_p_base* nonnull %base) #7, !dbg !8518
  call void @llvm.dbg.value(metadata i32 %call2, metadata !8500, metadata !DIExpression()), !dbg !8512
  %call9 = tail call fastcc %struct.access** @VEC_access_p_base_address(%struct.VEC_access_p_base* nonnull %base) #7, !dbg !8519
  %1 = bitcast %struct.access** %call9 to i8*, !dbg !8519
  %conv = sext i32 %call2 to i64, !dbg !8520
  tail call void @spec_qsort(i8* %1, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @compare_access_positions) #6, !dbg !8521
  call void @llvm.dbg.value(metadata i32 0, metadata !8498, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 0, metadata !8503, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 0, metadata !8501, metadata !DIExpression()), !dbg !8512
  br label %while.cond, !dbg !8522

while.cond:                                       ; preds = %cleanup75, %cond.true
  %total_size.0 = phi i32 [ 0, %cond.true ], [ %total_size.1, %cleanup75 ], !dbg !8523
  %group_count.0 = phi i32 [ 0, %cond.true ], [ %group_count.1, %cleanup75 ], !dbg !8524
  %prev_acc_ptr.0 = phi %struct.access** [ %res, %cond.true ], [ %prev_acc_ptr.1, %cleanup75 ], !dbg !8525
  %i.0 = phi i32 [ 0, %cond.true ], [ %i.1, %cleanup75 ], !dbg !8526
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8498, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata %struct.access** %prev_acc_ptr.0, metadata !8506, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %group_count.0, metadata !8501, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %total_size.0, metadata !8503, metadata !DIExpression()), !dbg !8512
  %cmp = icmp slt i32 %i.0, %call2, !dbg !8527
  br i1 %cmp, label %while.body, label %while.end78, !dbg !8522

while.body:                                       ; preds = %while.cond
  %call17 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* nonnull %base, i32 %i.0) #7, !dbg !8528
  call void @llvm.dbg.value(metadata %struct.access* %call17, metadata !8504, metadata !DIExpression()), !dbg !8512
  %write = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 14, !dbg !8529
  %bf.load = load i16, i16* %write, align 8, !dbg !8529
  call void @llvm.dbg.value(metadata i8 undef, metadata !8508, metadata !DIExpression()), !dbg !8530
  %call19 = tail call fastcc zeroext i8 @access_precludes_ipa_sra_p(%struct.access* %call17) #7, !dbg !8531
  %tobool20 = icmp eq i8 %call19, 0, !dbg !8531
  br i1 %tobool20, label %if.end22, label %cleanup75, !dbg !8533

if.end22:                                         ; preds = %while.body
  %2 = trunc i16 %bf.load to i8, !dbg !8534
  %conv18 = and i8 %2, 1, !dbg !8534
  call void @llvm.dbg.value(metadata i8 %conv18, metadata !8508, metadata !DIExpression()), !dbg !8530
  %add = add nsw i32 %i.0, 1, !dbg !8535
  call void @llvm.dbg.value(metadata i32 %add, metadata !8499, metadata !DIExpression()), !dbg !8512
  %offset34 = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 0, !dbg !8536
  %size = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 1, !dbg !8538
  %next_sibling = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 9, !dbg !8541
  %3 = bitcast %struct.access** %next_sibling to i64*, !dbg !8541
  br label %while.cond23, !dbg !8542

while.cond23:                                     ; preds = %cleanup, %if.end22
  %j.0 = phi i32 [ %add, %if.end22 ], [ %j.1, %cleanup ], !dbg !8543
  %modification.0 = phi i8 [ %conv18, %if.end22 ], [ %modification.1, %cleanup ], !dbg !8544
  call void @llvm.dbg.value(metadata i8 %modification.0, metadata !8508, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !8499, metadata !DIExpression()), !dbg !8512
  %cmp24 = icmp slt i32 %j.0, %call2, !dbg !8545
  br i1 %cmp24, label %while.body26, label %while.end, !dbg !8542

while.body26:                                     ; preds = %while.cond23
  %call33 = tail call fastcc %struct.access* @VEC_access_p_base_index(%struct.VEC_access_p_base* nonnull %base, i32 %j.0) #7, !dbg !8546
  call void @llvm.dbg.value(metadata %struct.access* %call33, metadata !8510, metadata !DIExpression()), !dbg !8541
  %offset = getelementptr inbounds %struct.access, %struct.access* %call33, i64 0, i32 0, !dbg !8547
  %4 = load i64, i64* %offset, align 8, !dbg !8547
  %5 = load i64, i64* %offset34, align 8, !dbg !8548
  %cmp35 = icmp eq i64 %4, %5, !dbg !8549
  br i1 %cmp35, label %if.else44, label %if.then37, !dbg !8550

if.then37:                                        ; preds = %while.body26
  %6 = load i64, i64* %size, align 8, !dbg !8551
  %add39 = add nsw i64 %5, %6, !dbg !8552
  %cmp41 = icmp sgt i64 %add39, %4, !dbg !8553
  %. = select i1 %cmp41, i32 1, i32 5, !dbg !8538
  br label %cleanup, !dbg !8538

if.else44:                                        ; preds = %while.body26
  %size45 = getelementptr inbounds %struct.access, %struct.access* %call33, i64 0, i32 1, !dbg !8554
  %7 = load i64, i64* %size45, align 8, !dbg !8554
  %8 = load i64, i64* %size, align 8, !dbg !8556
  %cmp47 = icmp eq i64 %7, %8, !dbg !8557
  br i1 %cmp47, label %if.end51, label %cleanup, !dbg !8558

if.end51:                                         ; preds = %if.else44
  %call52 = tail call fastcc zeroext i8 @access_precludes_ipa_sra_p(%struct.access* %call33) #7, !dbg !8559
  %tobool53 = icmp eq i8 %call52, 0, !dbg !8559
  br i1 %tobool53, label %if.end55, label %cleanup, !dbg !8561

if.end55:                                         ; preds = %if.end51
  %write56 = getelementptr inbounds %struct.access, %struct.access* %call33, i64 0, i32 14, !dbg !8562
  %bf.load57 = load i16, i16* %write56, align 8, !dbg !8562
  %9 = trunc i16 %bf.load57 to i8, !dbg !8562
  %bf.cast59 = and i8 %9, 1, !dbg !8562
  %or = or i8 %modification.0, %bf.cast59, !dbg !8563
  call void @llvm.dbg.value(metadata i8 %or, metadata !8508, metadata !DIExpression()), !dbg !8530
  %group_representative = getelementptr inbounds %struct.access, %struct.access* %call33, i64 0, i32 7, !dbg !8564
  store %struct.access* %call17, %struct.access** %group_representative, align 8, !dbg !8565
  %10 = load i64, i64* %3, align 8, !dbg !8566
  %next_sibling62 = getelementptr inbounds %struct.access, %struct.access* %call33, i64 0, i32 9, !dbg !8567
  %11 = bitcast %struct.access** %next_sibling62 to i64*, !dbg !8568
  store i64 %10, i64* %11, align 8, !dbg !8568
  store %struct.access* %call33, %struct.access** %next_sibling, align 8, !dbg !8569
  %inc = add nsw i32 %j.0, 1, !dbg !8570
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8499, metadata !DIExpression()), !dbg !8512
  br label %cleanup, !dbg !8571

cleanup:                                          ; preds = %if.end51, %if.else44, %if.then37, %if.end55
  %j.1 = phi i32 [ %inc, %if.end55 ], [ %j.0, %if.then37 ], [ %j.0, %if.else44 ], [ %j.0, %if.end51 ], !dbg !8530
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end55 ], [ %., %if.then37 ], [ 1, %if.else44 ], [ 1, %if.end51 ]
  %modification.1 = phi i8 [ %or, %if.end55 ], [ %modification.0, %if.then37 ], [ %modification.0, %if.else44 ], [ %modification.0, %if.end51 ], !dbg !8530
  call void @llvm.dbg.value(metadata i8 %modification.1, metadata !8508, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !8499, metadata !DIExpression()), !dbg !8512
  switch i32 %cleanup.dest.slot.0, label %cleanup75.loopexit [
    i32 0, label %while.cond23
    i32 5, label %while.end
  ], !llvm.loop !8572

while.end:                                        ; preds = %cleanup, %while.cond23
  %j.2 = phi i32 [ %j.1, %cleanup ], [ %j.0, %while.cond23 ], !dbg !8543
  %modification.2 = phi i8 [ %modification.1, %cleanup ], [ %modification.0, %while.cond23 ], !dbg !8544
  call void @llvm.dbg.value(metadata i8 %modification.2, metadata !8508, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !8499, metadata !DIExpression()), !dbg !8512
  %inc64 = add nsw i32 %group_count.0, 1, !dbg !8573
  call void @llvm.dbg.value(metadata i32 %inc64, metadata !8501, metadata !DIExpression()), !dbg !8512
  %bf.load66 = load i16, i16* %write, align 8, !dbg !8574
  %12 = and i8 %modification.2, 1, !dbg !8574
  %bf.value = zext i8 %12 to i16, !dbg !8574
  %bf.shl = shl nuw nsw i16 %bf.value, 11, !dbg !8574
  %bf.clear67 = and i16 %bf.load66, -2049, !dbg !8574
  %bf.set = or i16 %bf.clear67, %bf.shl, !dbg !8574
  store i16 %bf.set, i16* %write, align 8, !dbg !8574
  %tobool68 = icmp eq i8 %modification.2, 0, !dbg !8575
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !8577

if.then69:                                        ; preds = %while.end
  store i8 1, i8* %ro_grp, align 1, !dbg !8578
  br label %if.end70, !dbg !8579

if.end70:                                         ; preds = %while.end, %if.then69
  store %struct.access* %call17, %struct.access** %prev_acc_ptr.0, align 8, !dbg !8580
  %next_grp = getelementptr inbounds %struct.access, %struct.access* %call17, i64 0, i32 6, !dbg !8581
  call void @llvm.dbg.value(metadata %struct.access** %next_grp, metadata !8506, metadata !DIExpression()), !dbg !8512
  %13 = load i64, i64* %size, align 8, !dbg !8582
  %14 = trunc i64 %13 to i32, !dbg !8583
  %conv74 = add i32 %total_size.0, %14, !dbg !8583
  call void @llvm.dbg.value(metadata i32 %conv74, metadata !8503, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !8498, metadata !DIExpression()), !dbg !8512
  br label %cleanup75, !dbg !8584

cleanup75.loopexit:                               ; preds = %cleanup
  %cleanup.dest.slot.0.lcssa = phi i32 [ %cleanup.dest.slot.0, %cleanup ]
  br label %cleanup75

cleanup75:                                        ; preds = %cleanup75.loopexit, %while.body, %if.end70
  %total_size.1 = phi i32 [ %conv74, %if.end70 ], [ %total_size.0, %while.body ], [ %total_size.0, %cleanup75.loopexit ], !dbg !8512
  %group_count.1 = phi i32 [ %inc64, %if.end70 ], [ %group_count.0, %while.body ], [ %group_count.0, %cleanup75.loopexit ], !dbg !8512
  %prev_acc_ptr.1 = phi %struct.access** [ %next_grp, %if.end70 ], [ %prev_acc_ptr.0, %while.body ], [ %prev_acc_ptr.0, %cleanup75.loopexit ], !dbg !8512
  %i.1 = phi i32 [ %j.2, %if.end70 ], [ %i.0, %while.body ], [ %i.0, %cleanup75.loopexit ], !dbg !8512
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end70 ], [ 1, %while.body ], [ %cleanup.dest.slot.0.lcssa, %cleanup75.loopexit ]
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !8498, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata %struct.access** %prev_acc_ptr.1, metadata !8506, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %group_count.1, metadata !8501, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %total_size.1, metadata !8503, metadata !DIExpression()), !dbg !8512
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %while.cond, label %cleanup120.loopexit, !llvm.loop !8585

while.end78:                                      ; preds = %while.cond
  %total_size.0.lcssa = phi i32 [ %total_size.0, %while.cond ], !dbg !8523
  %group_count.0.lcssa = phi i32 [ %group_count.0, %while.cond ], !dbg !8524
  call void @llvm.dbg.value(metadata i32 %total_size.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %group_count.0.lcssa, metadata !8501, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %total_size.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %group_count.0.lcssa, metadata !8501, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %total_size.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i32 %group_count.0.lcssa, metadata !8501, metadata !DIExpression()), !dbg !8512
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parm, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8586
  %15 = bitcast %union.tree_node** %type to i64**, !dbg !8586
  %16 = load i64*, i64** %15, align 8, !dbg !8586
  %bf.load80 = load i64, i64* %16, align 8, !dbg !8586
  %bf.cast822 = and i64 %bf.load80, 65535, !dbg !8586
  %cmp83 = icmp eq i64 %bf.cast822, 10, !dbg !8586
  br i1 %cmp83, label %if.then93, label %lor.lhs.false, !dbg !8586

lor.lhs.false:                                    ; preds = %while.end78
  %cmp91 = icmp eq i64 %bf.cast822, 12, !dbg !8586
  br i1 %cmp91, label %if.then93, label %if.else102, !dbg !8588

if.then93:                                        ; preds = %lor.lhs.false, %while.end78
  %type97 = getelementptr inbounds i64, i64* %16, i64 2, !dbg !8589
  %17 = bitcast i64* %type97 to %struct.tree_type**, !dbg !8589
  %18 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !8589
  %size99 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 2, !dbg !8589
  %19 = load %union.tree_node*, %union.tree_node** %size99, align 8, !dbg !8589
  %call100 = tail call i64 @tree_low_cst(%union.tree_node* %19, i32 1) #6, !dbg !8590
  br label %if.end109, !dbg !8591

if.else102:                                       ; preds = %lor.lhs.false
  %size106 = getelementptr inbounds i64, i64* %16, i64 4, !dbg !8592
  %20 = bitcast i64* %size106 to %union.tree_node**, !dbg !8592
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !8592
  %call107 = tail call i64 @tree_low_cst(%union.tree_node* %21, i32 1) #6, !dbg !8593
  br label %if.end109

if.end109:                                        ; preds = %if.else102, %if.then93
  %agg_size.0.in = phi i64 [ %call100, %if.then93 ], [ %call107, %if.else102 ]
  %agg_size.0 = trunc i64 %agg_size.0.in to i32, !dbg !8594
  call void @llvm.dbg.value(metadata i32 %agg_size.0, metadata !8502, metadata !DIExpression()), !dbg !8512
  %cmp110 = icmp slt i32 %total_size.0.lcssa, %agg_size.0, !dbg !8595
  br i1 %cmp110, label %if.end113, label %cleanup120, !dbg !8597

if.end113:                                        ; preds = %if.end109
  %cmp114 = icmp sgt i32 %group_count.0.lcssa, 0, !dbg !8598
  br i1 %cmp114, label %cond.end118, label %cond.true116, !dbg !8598

cond.true116:                                     ; preds = %if.end113
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3395, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8598
  br label %cond.end118, !dbg !8598

cond.end118:                                      ; preds = %if.end113, %cond.true116
  %22 = load %struct.access*, %struct.access** %res, align 8, !dbg !8599
  call void @llvm.dbg.value(metadata %struct.access* %22, metadata !8505, metadata !DIExpression()), !dbg !8512
  br label %cleanup120, !dbg !8600

cleanup120.loopexit:                              ; preds = %cleanup75
  br label %cleanup120, !dbg !8601

cleanup120:                                       ; preds = %cleanup120.loopexit, %if.end109, %entry, %cond.end118
  %retval.5 = phi %struct.access* [ %22, %cond.end118 ], [ @no_accesses_representant, %entry ], [ null, %if.end109 ], [ null, %cleanup120.loopexit ], !dbg !8512
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8601
  ret %struct.access* %retval.5, !dbg !8601
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @access_precludes_ipa_sra_p(%struct.access* %access) unnamed_addr #5 !dbg !8602 {
entry:
  call void @llvm.dbg.value(metadata %struct.access* %access, metadata !8604, metadata !DIExpression()), !dbg !8605
  %write = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 14, !dbg !8606
  %bf.load = load i16, i16* %write, align 8, !dbg !8606
  %bf.clear = and i16 %bf.load, 1, !dbg !8606
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !8608
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8609

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.access, %struct.access* %access, i64 0, i32 5, !dbg !8610
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8610
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %0) #7, !dbg !8611
  %tobool1 = icmp eq i8 %call, 0, !dbg !8611
  br i1 %tobool1, label %lor.lhs.false, label %return, !dbg !8612

lor.lhs.false:                                    ; preds = %land.lhs.true
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8613
  %call3 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !8614
  %cmp = icmp eq i32 %call3, 7, !dbg !8615
  br i1 %cmp, label %return, label %if.end, !dbg !8616

if.end:                                           ; preds = %entry, %lor.lhs.false
  br label %return, !dbg !8617

return:                                           ; preds = %land.lhs.true, %lor.lhs.false, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %lor.lhs.false ], [ 1, %land.lhs.true ], !dbg !8605
  ret i8 %retval.0, !dbg !8618
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_dereferences_table(%struct._IO_FILE* %f, i8* %str, i64* %table) unnamed_addr #5 !dbg !8619 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !8623, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata i8* %str, metadata !8624, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata i64* %table, metadata !8625, metadata !DIExpression()), !dbg !8637
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8638
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %str) #6, !dbg !8639
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8640
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !8640
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8640
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !8640
  br label %for.cond, !dbg !8640

for.cond:                                         ; preds = %if.end, %entry
  %3 = phi %struct.control_flow_graph* [ %2, %entry ], [ %.pre1, %if.end ], !dbg !8641
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %if.end ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !8642
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !8626, metadata !DIExpression()), !dbg !8637
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !8641
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8641
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !8641
  br i1 %cmp, label %for.end17, label %for.body, !dbg !8640

for.body:                                         ; preds = %for.cond
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !8643
  %5 = load i32, i32* %index, align 8, !dbg !8643
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !8644
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %5) #6, !dbg !8645
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i32 %5, i32 %call4) #6, !dbg !8646
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8647
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !8647
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !8647
  %x_exit_block_ptr8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !8647
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr8, align 8, !dbg !8647
  %cmp9 = icmp eq %struct.basic_block_def* %bb.0, %9, !dbg !8648
  br i1 %cmp9, label %if.end, label %for.cond10.preheader, !dbg !8649

for.cond10.preheader:                             ; preds = %for.body
  br label %for.cond10, !dbg !8650

for.cond10:                                       ; preds = %for.cond10.preheader, %for.body12
  %i.0 = phi i32 [ %inc, %for.body12 ], [ 0, %for.cond10.preheader ], !dbg !8651
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8627, metadata !DIExpression()), !dbg !8652
  %10 = load i32, i32* @func_param_count, align 4, !dbg !8653
  %cmp11 = icmp slt i32 %i.0, %10, !dbg !8654
  br i1 %cmp11, label %for.body12, label %if.end.loopexit, !dbg !8650

for.body12:                                       ; preds = %for.cond10
  %11 = load i32, i32* %index, align 8, !dbg !8655
  %mul = mul nsw i32 %11, %10, !dbg !8656
  %add = add nsw i32 %mul, %i.0, !dbg !8657
  call void @llvm.dbg.value(metadata i32 %add, metadata !8633, metadata !DIExpression()), !dbg !8658
  %idxprom = sext i32 %add to i64, !dbg !8659
  %arrayidx = getelementptr inbounds i64, i64* %table, i64 %idxprom, !dbg !8659
  %12 = load i64, i64* %arrayidx, align 8, !dbg !8659
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i64 %12) #6, !dbg !8660
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8661
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8627, metadata !DIExpression()), !dbg !8652
  br label %for.cond10, !dbg !8662, !llvm.loop !8663

if.end.loopexit:                                  ; preds = %for.cond10
  br label %if.end, !dbg !8665

if.end:                                           ; preds = %if.end.loopexit, %for.body
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8665
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !8641
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8641
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !8666
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !8641
  br label %for.cond, !dbg !8641, !llvm.loop !8667

for.end17:                                        ; preds = %for.cond
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8669
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !8670
  ret void, !dbg !8671
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_dereference_distances() unnamed_addr #5 !dbg !8672 {
entry:
  %queue = alloca %struct.VEC_basic_block_heap*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp81 = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.VEC_basic_block_heap** %queue to i8*, !dbg !8697
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8697
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8698
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !8698
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8698
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 5, !dbg !8698
  %3 = load i32, i32* %x_last_basic_block, align 8, !dbg !8698
  %call = tail call fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %3) #7, !dbg !8698
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !8674, metadata !DIExpression()), !dbg !8699
  store %struct.VEC_basic_block_heap* %call, %struct.VEC_basic_block_heap** %queue, align 8, !dbg !8700
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !8674, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !8674, metadata !DIExpression()), !dbg !8699
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %call, i64 0, i32 0, !dbg !8701
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8701
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !8701
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !8701
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !8701
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !8701
  %call3 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %base, %struct.basic_block_def* %6) #7, !dbg !8701
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8702
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !8702
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !8702
  %x_entry_block_ptr6 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !8702
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr6, align 8, !dbg !8702
  br label %for.cond, !dbg !8702

for.cond:                                         ; preds = %for.body, %entry
  %10 = phi %struct.control_flow_graph* [ %8, %entry ], [ %.pre2, %for.body ], !dbg !8704
  %.pn = phi %struct.basic_block_def* [ %9, %entry ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !8706
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !8706
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !8675, metadata !DIExpression()), !dbg !8699
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !8704
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8704
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %11, !dbg !8704
  br i1 %cmp, label %while.cond.preheader, label %for.body, !dbg !8702

while.cond.preheader:                             ; preds = %for.cond
  %12 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8707
  %13 = bitcast %struct.edge_def** %e to i8*, !dbg !8707
  %14 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8708
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !8708
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !8708
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8709
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8709
  %19 = bitcast %struct.edge_iterator* %tmp81 to i8*, !dbg !8710
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp81, i64 0, i32 0, !dbg !8710
  %21 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp81, i64 0, i32 1, !dbg !8710
  br label %while.cond, !dbg !8713

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !8674, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !8674, metadata !DIExpression()), !dbg !8699
  %call15 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %base, %struct.basic_block_def* %bb.0) #7, !dbg !8714
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !8716
  %22 = bitcast i8** %aux to %struct.basic_block_def**, !dbg !8717
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %22, align 8, !dbg !8717
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8704
  %cfg8.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !8718
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8.phi.trans.insert, align 8, !dbg !8704
  br label %for.cond, !dbg !8704, !llvm.loop !8719

while.cond:                                       ; preds = %while.cond.preheader, %cleanup106
  %23 = phi %struct.VEC_basic_block_heap* [ %call, %while.cond.preheader ], [ %.pre3, %cleanup106 ], !dbg !8721
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %23, metadata !8674, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %23, metadata !8674, metadata !DIExpression()), !dbg !8699
  %base19 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %23, i64 0, i32 0, !dbg !8721
  %call23 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base19) #7, !dbg !8721
  %cmp24 = icmp eq i32 %call23, 0, !dbg !8721
  br i1 %cmp24, label %while.end, label %while.body, !dbg !8713

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8, !dbg !8722
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8, !dbg !8723
  call void @llvm.dbg.value(metadata i8 0, metadata !8685, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %23, metadata !8674, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %23, metadata !8674, metadata !DIExpression()), !dbg !8699
  %call31 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_pop(%struct.VEC_basic_block_base* %base19) #7, !dbg !8724
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call31, metadata !8675, metadata !DIExpression()), !dbg !8699
  %aux32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call31, i64 0, i32 2, !dbg !8725
  store i8* null, i8** %aux32, align 8, !dbg !8726
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !8727
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call31, i64 0, i32 9, !dbg !8729
  %25 = load i32, i32* %index, align 8, !dbg !8729
  %call33 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %24, i32 %25) #6, !dbg !8730
  %tobool34 = icmp eq i32 %call33, 0, !dbg !8730
  br i1 %tobool34, label %for.cond35.preheader, label %cleanup106, !dbg !8731, !llvm.loop !8732

for.cond35.preheader:                             ; preds = %while.body
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call31, i64 0, i32 1, !dbg !8708
  br label %for.cond35, !dbg !8734

for.cond35:                                       ; preds = %for.cond35.preheader, %for.inc73
  %i.0 = phi i32 [ %inc, %for.inc73 ], [ 0, %for.cond35.preheader ], !dbg !8735
  %change.0 = phi i8 [ %change.1, %for.inc73 ], [ 0, %for.cond35.preheader ], !dbg !8736
  call void @llvm.dbg.value(metadata i8 %change.0, metadata !8685, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8686, metadata !DIExpression()), !dbg !8707
  %26 = load i32, i32* @func_param_count, align 4, !dbg !8737
  %cmp36 = icmp slt i32 %i.0, %26, !dbg !8738
  br i1 %cmp36, label %for.body37, label %for.end74, !dbg !8734

for.body37:                                       ; preds = %for.cond35
  %27 = load i32, i32* %index, align 8, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %add, metadata !8687, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i8 1, metadata !8691, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i64 0, metadata !8692, metadata !DIExpression()), !dbg !8740
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !8741
  %call39 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !8741
  %28 = extractvalue { i32, %struct.VEC_edge_gc** } %call39, 0, !dbg !8741
  store i32 %28, i32* %15, align 8, !dbg !8741
  %29 = extractvalue { i32, %struct.VEC_edge_gc** } %call39, 1, !dbg !8741
  store %struct.VEC_edge_gc** %29, %struct.VEC_edge_gc*** %16, align 8, !dbg !8741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !8741
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !8741
  br label %for.cond40, !dbg !8741

for.cond40:                                       ; preds = %cleanup, %for.body37
  %first.0 = phi i8 [ 1, %for.body37 ], [ %first.2, %cleanup ], !dbg !8742
  %inh.0 = phi i64 [ 0, %for.body37 ], [ %inh.3, %cleanup ], !dbg !8743
  call void @llvm.dbg.value(metadata i64 %inh.0, metadata !8692, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !8691, metadata !DIExpression()), !dbg !8740
  %30 = load i32, i32* %17, align 8, !dbg !8744
  %31 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %18, align 8, !dbg !8744
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8684, metadata !DIExpression(DW_OP_deref)), !dbg !8707
  %call41 = call fastcc zeroext i8 @ei_cond(i32 %30, %struct.VEC_edge_gc** %31, %struct.edge_def** nonnull %e) #7, !dbg !8744
  %tobool42 = icmp eq i8 %call41, 0, !dbg !8741
  br i1 %tobool42, label %for.end64, label %for.body43, !dbg !8741

for.body43:                                       ; preds = %for.cond40
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8745
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !8684, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i32 undef, metadata !8693, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !8684, metadata !DIExpression()), !dbg !8707
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 0, !dbg !8747
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8747
  %34 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8749
  %cfg48 = getelementptr inbounds %struct.function, %struct.function* %34, i64 0, i32 1, !dbg !8749
  %35 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg48, align 8, !dbg !8749
  %x_exit_block_ptr49 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %35, i64 0, i32 1, !dbg !8749
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr49, align 8, !dbg !8749
  %cmp50 = icmp eq %struct.basic_block_def* %33, %36, !dbg !8750
  br i1 %cmp50, label %cleanup, label %if.end52, !dbg !8751

if.end52:                                         ; preds = %for.body43
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 1, !dbg !8752
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8752
  %index44 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i64 0, i32 9, !dbg !8753
  %38 = load i32, i32* %index44, align 8, !dbg !8753
  %39 = load i32, i32* @func_param_count, align 4, !dbg !8754
  %mul45 = mul nsw i32 %38, %39, !dbg !8755
  %add46 = add nsw i32 %mul45, %i.0, !dbg !8756
  call void @llvm.dbg.value(metadata i32 %add46, metadata !8693, metadata !DIExpression()), !dbg !8746
  %tobool53 = icmp eq i8 %first.0, 0, !dbg !8757
  %40 = load i64*, i64** @bb_dereferences, align 8, !dbg !8759
  %idxprom = sext i32 %add46 to i64, !dbg !8759
  %arrayidx = getelementptr inbounds i64, i64* %40, i64 %idxprom, !dbg !8759
  %41 = load i64, i64* %arrayidx, align 8, !dbg !8759
  br i1 %tobool53, label %if.else, label %cleanup, !dbg !8760

if.else:                                          ; preds = %if.end52
  %cmp57 = icmp slt i64 %41, %inh.0, !dbg !8761
  br i1 %cmp57, label %if.then58, label %cleanup, !dbg !8763

if.then58:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i64 %41, metadata !8692, metadata !DIExpression()), !dbg !8740
  br label %cleanup, !dbg !8764

cleanup:                                          ; preds = %if.end52, %if.then58, %if.else, %for.body43
  %first.2 = phi i8 [ %first.0, %for.body43 ], [ 0, %if.end52 ], [ 0, %if.then58 ], [ 0, %if.else ], !dbg !8740
  %inh.3 = phi i64 [ %inh.0, %for.body43 ], [ %41, %if.end52 ], [ %41, %if.then58 ], [ %inh.0, %if.else ], !dbg !8740
  call void @llvm.dbg.value(metadata i64 %inh.3, metadata !8692, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i8 %first.2, metadata !8691, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8676, metadata !DIExpression(DW_OP_deref)), !dbg !8707
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8744
  br label %for.cond40, !dbg !8744, !llvm.loop !8765

for.end64:                                        ; preds = %for.cond40
  %first.0.lcssa = phi i8 [ %first.0, %for.cond40 ], !dbg !8742
  %inh.0.lcssa = phi i64 [ %inh.0, %for.cond40 ], !dbg !8743
  %mul = mul nsw i32 %27, %26, !dbg !8767
  call void @llvm.dbg.value(metadata i8 %first.0.lcssa, metadata !8691, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i64 %inh.0.lcssa, metadata !8692, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i8 %first.0.lcssa, metadata !8691, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i64 %inh.0.lcssa, metadata !8692, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i8 %first.0.lcssa, metadata !8691, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i64 %inh.0.lcssa, metadata !8692, metadata !DIExpression()), !dbg !8740
  %tobool65 = icmp eq i8 %first.0.lcssa, 0, !dbg !8768
  br i1 %tobool65, label %land.lhs.true, label %for.inc73, !dbg !8770

land.lhs.true:                                    ; preds = %for.end64
  %add = add nsw i32 %mul, %i.0, !dbg !8771
  %42 = load i64*, i64** @bb_dereferences, align 8, !dbg !8772
  %idxprom66 = sext i32 %add to i64, !dbg !8772
  %arrayidx67 = getelementptr inbounds i64, i64* %42, i64 %idxprom66, !dbg !8772
  %43 = load i64, i64* %arrayidx67, align 8, !dbg !8772
  %cmp68 = icmp slt i64 %43, %inh.0.lcssa, !dbg !8773
  br i1 %cmp68, label %if.then69, label %for.inc73, !dbg !8774

if.then69:                                        ; preds = %land.lhs.true
  store i64 %inh.0.lcssa, i64* %arrayidx67, align 8, !dbg !8775
  call void @llvm.dbg.value(metadata i8 1, metadata !8685, metadata !DIExpression()), !dbg !8707
  br label %for.inc73, !dbg !8777

for.inc73:                                        ; preds = %for.end64, %land.lhs.true, %if.then69
  %change.1 = phi i8 [ %change.0, %for.end64 ], [ 1, %if.then69 ], [ %change.0, %land.lhs.true ], !dbg !8707
  call void @llvm.dbg.value(metadata i8 %change.1, metadata !8685, metadata !DIExpression()), !dbg !8707
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8778
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8686, metadata !DIExpression()), !dbg !8707
  br label %for.cond35, !dbg !8779, !llvm.loop !8780

for.end74:                                        ; preds = %for.cond35
  %change.0.lcssa = phi i8 [ %change.0, %for.cond35 ], !dbg !8736
  call void @llvm.dbg.value(metadata i8 %change.0.lcssa, metadata !8685, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %change.0.lcssa, metadata !8685, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %change.0.lcssa, metadata !8685, metadata !DIExpression()), !dbg !8707
  %tobool75 = icmp eq i8 %change.0.lcssa, 0, !dbg !8782
  br i1 %tobool75, label %cleanup106, label %land.lhs.true76, !dbg !8783

land.lhs.true76:                                  ; preds = %for.end74
  %44 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @final_bbs, align 8, !dbg !8784
  %45 = load i32, i32* %index, align 8, !dbg !8785
  %call78 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %44, i32 %45) #6, !dbg !8786
  %tobool79 = icmp eq i32 %call78, 0, !dbg !8786
  br i1 %tobool79, label %if.then80, label %cleanup106, !dbg !8787

if.then80:                                        ; preds = %land.lhs.true76
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8, !dbg !8788
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call31, i64 0, i32 0, !dbg !8788
  %call82 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8788
  %46 = extractvalue { i32, %struct.VEC_edge_gc** } %call82, 0, !dbg !8788
  store i32 %46, i32* %20, align 8, !dbg !8788
  %47 = extractvalue { i32, %struct.VEC_edge_gc** } %call82, 1, !dbg !8788
  store %struct.VEC_edge_gc** %47, %struct.VEC_edge_gc*** %21, align 8, !dbg !8788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %19, i64 16, i1 false), !dbg !8788
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8, !dbg !8788
  br label %for.cond83, !dbg !8788

for.cond83:                                       ; preds = %for.inc103, %if.then80
  %48 = load i32, i32* %17, align 8, !dbg !8789
  %49 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %18, align 8, !dbg !8789
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8684, metadata !DIExpression(DW_OP_deref)), !dbg !8707
  %call84 = call fastcc zeroext i8 @ei_cond(i32 %48, %struct.VEC_edge_gc** %49, %struct.edge_def** nonnull %e) #7, !dbg !8789
  %tobool85 = icmp eq i8 %call84, 0, !dbg !8788
  br i1 %tobool85, label %cleanup106.loopexit, label %for.body86, !dbg !8788

for.body86:                                       ; preds = %for.cond83
  %50 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8791
  call void @llvm.dbg.value(metadata %struct.edge_def* %50, metadata !8684, metadata !DIExpression()), !dbg !8707
  %src87 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %50, i64 0, i32 0, !dbg !8794
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %src87, align 8, !dbg !8794
  %aux88 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i64 0, i32 2, !dbg !8795
  %52 = load i8*, i8** %aux88, align 8, !dbg !8795
  %tobool89 = icmp eq i8* %52, null, !dbg !8791
  br i1 %tobool89, label %if.end91, label %for.inc103, !dbg !8796

if.end91:                                         ; preds = %for.body86
  %53 = ptrtoint %struct.basic_block_def* %51 to i64, !dbg !8796
  %54 = bitcast i8** %aux88 to i64*, !dbg !8797
  store i64 %53, i64* %54, align 8, !dbg !8797
  %55 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %queue, align 8, !dbg !8798
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %55, metadata !8674, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %55, metadata !8674, metadata !DIExpression()), !dbg !8699
  %base97 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %55, i64 0, i32 0, !dbg !8798
  call void @llvm.dbg.value(metadata %struct.edge_def* %50, metadata !8684, metadata !DIExpression()), !dbg !8707
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %src87, align 8, !dbg !8798
  %call102 = call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %base97, %struct.basic_block_def* %56) #7, !dbg !8798
  br label %for.inc103, !dbg !8799

for.inc103:                                       ; preds = %for.body86, %if.end91
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8676, metadata !DIExpression(DW_OP_deref)), !dbg !8707
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8789
  br label %for.cond83, !dbg !8789, !llvm.loop !8800

cleanup106.loopexit:                              ; preds = %for.cond83
  br label %cleanup106, !dbg !8733

cleanup106:                                       ; preds = %cleanup106.loopexit, %land.lhs.true76, %for.end74, %while.body
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8, !dbg !8733
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8, !dbg !8733
  %.pre3 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %queue, align 8, !dbg !8721
  br label %while.cond

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %queue, metadata !8674, metadata !DIExpression(DW_OP_deref)), !dbg !8699
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %queue) #7, !dbg !8802
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8803
  ret void, !dbg !8803
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !8804 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !8808, metadata !DIExpression()), !dbg !8809
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !8810
  %0 = bitcast i8* %call to %struct.VEC_basic_block_heap*, !dbg !8810
  ret %struct.VEC_basic_block_heap* %0, !dbg !8810
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %vec_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !8811 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !8817, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !8818, metadata !DIExpression()), !dbg !8820
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !8821
  %0 = load i32, i32* %num1, align 8, !dbg !8821
  %inc = add i32 %0, 1, !dbg !8821
  store i32 %inc, i32* %num1, align 8, !dbg !8821
  %idxprom = zext i32 %0 to i64, !dbg !8821
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8821
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %arrayidx, metadata !8819, metadata !DIExpression()), !dbg !8820
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !8821
  ret %struct.basic_block_def** %arrayidx, !dbg !8821
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !8822 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !8828, metadata !DIExpression()), !dbg !8829
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !8830
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8830

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !8830
  %0 = load i32, i32* %num, align 8, !dbg !8830
  br label %cond.end, !dbg !8830

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8830
  ret i32 %cond, !dbg !8830
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_pop(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !8831 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !8835, metadata !DIExpression()), !dbg !8837
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !8838
  %0 = load i32, i32* %num1, align 8, !dbg !8838
  %dec = add i32 %0, -1, !dbg !8838
  store i32 %dec, i32* %num1, align 8, !dbg !8838
  %idxprom = zext i32 %dec to i64, !dbg !8838
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8838
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !8838
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !8836, metadata !DIExpression()), !dbg !8837
  ret %struct.basic_block_def* %1, !dbg !8838
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !8839 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !8843, metadata !DIExpression()), !dbg !8845
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !8846
  store i32 0, i32* %index, align 8, !dbg !8847
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !8848
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !8849
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !8850
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !8850
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !8850
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !8851 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !8857, metadata !DIExpression()), !dbg !8858
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !8859
  %tobool = icmp eq i8 %call, 0, !dbg !8859
  br i1 %tobool, label %if.then, label %if.else, !dbg !8861

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !8862
  br label %return, !dbg !8864

if.else:                                          ; preds = %entry
  br label %return, !dbg !8865

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !8867
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !8867
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !8867
  ret i8 %retval.0, !dbg !8868
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !8869 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !8874, metadata !DIExpression()), !dbg !8875
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !8876
  %0 = load i32, i32* %index, align 8, !dbg !8876
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !8876
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !8876
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !8876
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !8876
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8876

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !8876
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !8876
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !8876
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !8876
  br label %cond.end, !dbg !8876

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8876
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !8876
  %cmp = icmp ult i32 %0, %call2, !dbg !8876
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !8876

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8876
  br label %cond.end5, !dbg !8876

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !8877
  %inc = add i32 %5, 1, !dbg !8877
  store i32 %inc, i32* %index, align 8, !dbg !8877
  ret void, !dbg !8878
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !8879 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !8884, metadata !DIExpression()), !dbg !8885
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !8886
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !8886
  br i1 %tobool, label %if.end, label %if.then, !dbg !8888

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !8888
  tail call void @free(i8* nonnull %1) #6, !dbg !8886
  br label %if.end, !dbg !8886

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !8888
  ret void, !dbg !8888
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8889 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8894
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !8894
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8894

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8894
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !8894
  br label %cond.end, !dbg !8894

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8894
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !8894
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !8895
  %conv3 = zext i1 %cmp to i8, !dbg !8896
  ret i8 %conv3, !dbg !8897
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8898 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8903
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !8903
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8903

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8903
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !8903
  br label %cond.end, !dbg !8903

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8903
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !8903
  ret %struct.edge_def* %call2, !dbg !8904
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8905 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !8910
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8910

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8910
  br label %cond.end, !dbg !8910

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !8911
  ret %struct.VEC_edge_gc* %0, !dbg !8912
}

declare dso_local void @ao_ref_init(%struct.ao_ref_s*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @walk_aliased_vdefs(%struct.ao_ref_s*, %union.tree_node*, i8 (%struct.ao_ref_s*, %union.tree_node*, i8*)*, i8*, %struct.bitmap_head_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @mark_maybe_modified(%struct.ao_ref_s* %ao, %union.tree_node* %vdef, i8* %data) #5 !dbg !8913 {
entry:
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ao, metadata !8918, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata %union.tree_node* %vdef, metadata !8919, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i8* %data, metadata !8920, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i8* %data, metadata !8921, metadata !DIExpression()), !dbg !8922
  %grp_maybe_modified = getelementptr inbounds i8, i8* %data, i64 112, !dbg !8923
  %0 = bitcast i8* %grp_maybe_modified to i16*, !dbg !8923
  %bf.load = load i16, i16* %0, align 8, !dbg !8924
  %bf.set = or i16 %bf.load, 2048, !dbg !8924
  store i16 %bf.set, i16* %0, align 8, !dbg !8924
  ret i8 1, !dbg !8925
}

declare dso_local zeroext i8 @optimize_function_for_size_p(%struct.function*) local_unnamed_addr #2

declare dso_local %struct.VEC_tree_heap* @ipa_get_vector_of_formal_parms(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ipa_parm_adjustment_t_heap* @VEC_ipa_parm_adjustment_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !8926 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !8930, metadata !DIExpression()), !dbg !8931
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 56) #6, !dbg !8932
  %0 = bitcast i8* %call to %struct.VEC_ipa_parm_adjustment_t_heap*, !dbg !8932
  ret %struct.VEC_ipa_parm_adjustment_t_heap* %0, !dbg !8932
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_quick_push(%struct.VEC_ipa_parm_adjustment_t_base* %vec_, %struct.ipa_parm_adjustment* %obj_) unnamed_addr #0 !dbg !8933 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_base* %vec_, metadata !8941, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* null, metadata !8942, metadata !DIExpression()), !dbg !8944
  %num1 = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_base, %struct.VEC_ipa_parm_adjustment_t_base* %vec_, i64 0, i32 0, !dbg !8945
  %0 = load i32, i32* %num1, align 8, !dbg !8945
  %inc = add i32 %0, 1, !dbg !8945
  store i32 %inc, i32* %num1, align 8, !dbg !8945
  %idxprom = zext i32 %0 to i64, !dbg !8945
  %arrayidx = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_base, %struct.VEC_ipa_parm_adjustment_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8945
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %arrayidx, metadata !8943, metadata !DIExpression()), !dbg !8944
  ret %struct.ipa_parm_adjustment* %arrayidx, !dbg !8945
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_param_index(%union.tree_node* %base, %struct.VEC_tree_heap* %parms) unnamed_addr #0 !dbg !8946 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !8950, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %parms, metadata !8951, metadata !DIExpression()), !dbg !8954
  %base1 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %parms, i64 0, i32 0, !dbg !8955
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base1) #7, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %call, metadata !8953, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata i32 0, metadata !8952, metadata !DIExpression()), !dbg !8954
  br label %for.cond, !dbg !8956

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !8958
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8952, metadata !DIExpression()), !dbg !8954
  %cmp = icmp slt i32 %i.0, %call, !dbg !8959
  br i1 %cmp, label %for.body, label %for.end, !dbg !8961

for.body:                                         ; preds = %for.cond
  %call8 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base1, i32 %i.0) #7, !dbg !8962
  %cmp9 = icmp eq %union.tree_node* %call8, %base, !dbg !8964
  br i1 %cmp9, label %cleanup.loopexit, label %for.inc, !dbg !8965

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8966
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8952, metadata !DIExpression()), !dbg !8954
  br label %for.cond, !dbg !8967, !llvm.loop !8968

for.end:                                          ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3552, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8970
  br label %cleanup, !dbg !8971

cleanup.loopexit:                                 ; preds = %for.body
  %i.0.lcssa3 = phi i32 [ %i.0, %for.body ], !dbg !8958
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !8952, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !8952, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !8952, metadata !DIExpression()), !dbg !8954
  br label %cleanup, !dbg !8972

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %retval.0 = phi i32 [ 0, %for.end ], [ %i.0.lcssa3, %cleanup.loopexit ], !dbg !8954
  ret i32 %retval.0, !dbg !8972
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !8973 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !8978, metadata !DIExpression()), !dbg !8979
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !8980
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !8980
  br i1 %tobool, label %if.end, label %if.then, !dbg !8982

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !8982
  tail call void @free(i8* nonnull %1) #6, !dbg !8980
  br label %if.end, !dbg !8980

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !8982
  ret void, !dbg !8982
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !8983 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !8989, metadata !DIExpression()), !dbg !8990
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !8991
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8991

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !8991
  %0 = load i32, i32* %num, align 8, !dbg !8991
  br label %cond.end, !dbg !8991

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8991
  ret i32 %cond, !dbg !8991
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !8992 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !8996, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8997, metadata !DIExpression()), !dbg !8998
  br label %land.end, !dbg !8999

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !8999
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8999
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8999
  ret %union.tree_node* %0, !dbg !8999
}

declare dso_local void @ipa_modify_formal_parameters(%union.tree_node*, %struct.VEC_ipa_parm_adjustment_t_heap*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @create_abstract_origin(%union.tree_node* %old_decl) unnamed_addr #5 !dbg !9000 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %old_decl, metadata !9002, metadata !DIExpression()), !dbg !9006
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !9007
  %0 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8, !dbg !9007
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !9007
  br i1 %tobool, label %if.then, label %if.end, !dbg !9008

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %old_decl) #6, !dbg !9009
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9003, metadata !DIExpression()), !dbg !9010
  %abstract_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9011
  %1 = bitcast i40* %abstract_flag to i64*, !dbg !9011
  %bf.load = load i64, i64* %1, align 8, !dbg !9012
  %bf.set = or i64 %bf.load, 2048, !dbg !9012
  store i64 %bf.set, i64* %1, align 8, !dbg !9012
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !9013
  store %union.tree_node* null, %union.tree_node** %assembler_name, align 8, !dbg !9013
  tail call void @set_decl_rtl(%union.tree_node* %call, %struct.rtx_def* null) #6, !dbg !9014
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 1, !dbg !9015
  store %struct.function* null, %struct.function** %f, align 8, !dbg !9016
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9017
  %2 = bitcast i40* %artificial_flag to i64*, !dbg !9017
  %bf.load3 = load i64, i64* %2, align 8, !dbg !9018
  %bf.set5 = or i64 %bf.load3, 4096, !dbg !9018
  store i64 %bf.set5, i64* %2, align 8, !dbg !9018
  store %union.tree_node* %call, %union.tree_node** %abstract_origin, align 8, !dbg !9019
  br label %if.end, !dbg !9020

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !9021
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @sra_ipa_modify_expr(%union.tree_node** %expr, %struct.gimple_stmt_iterator* %gsi, i8 zeroext %dont_convert, i8* %data) #5 !dbg !9022 {
entry:
  %offset = alloca i64, align 8
  %size = alloca i64, align 8
  %max_size = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !9024, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9025, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i8 %dont_convert, metadata !9026, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i8* %data, metadata !9027, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* null, metadata !9032, metadata !DIExpression()), !dbg !9044
  %0 = bitcast i64* %offset to i8*, !dbg !9045
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9045
  %1 = bitcast i64* %size to i8*, !dbg !9045
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9045
  %2 = bitcast i64* %max_size to i8*, !dbg !9045
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9045
  call void @llvm.dbg.value(metadata i8* %data, metadata !9028, metadata !DIExpression()), !dbg !9044
  %base1 = bitcast i8* %data to %struct.VEC_ipa_parm_adjustment_t_base*, !dbg !9046
  %call = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base1) #7, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %call, metadata !9030, metadata !DIExpression()), !dbg !9044
  %3 = bitcast %union.tree_node** %expr to i64**, !dbg !9047
  %4 = load i64*, i64** %3, align 8, !dbg !9047
  %bf.load = load i64, i64* %4, align 8, !dbg !9047
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9049
  %cmp = icmp eq i64 %bf.cast2, 42, !dbg !9049
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !9050
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9050

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast2, 44, !dbg !9051
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !9052

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp13 = icmp eq i64 %bf.cast2, 43, !dbg !9053
  br i1 %cmp13, label %if.then, label %if.end, !dbg !9054

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false, %entry
  %arrayidx = getelementptr inbounds i64, i64* %4, i64 5, !dbg !9055
  %6 = bitcast i64* %arrayidx to %union.tree_node**, !dbg !9055
  call void @llvm.dbg.value(metadata %union.tree_node** %6, metadata !9024, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i8 0, metadata !9026, metadata !DIExpression()), !dbg !9044
  %.pre = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !9057
  br label %if.end, !dbg !9058

if.end:                                           ; preds = %if.then, %lor.lhs.false8
  %7 = phi %union.tree_node* [ %.pre, %if.then ], [ %5, %lor.lhs.false8 ], !dbg !9057
  %dont_convert.addr.0 = phi i8 [ 0, %if.then ], [ %dont_convert, %lor.lhs.false8 ]
  %expr.addr.0 = phi %union.tree_node** [ %6, %if.then ], [ %expr, %lor.lhs.false8 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %expr.addr.0, metadata !9024, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i8 %dont_convert.addr.0, metadata !9026, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i64* %offset, metadata !9033, metadata !DIExpression(DW_OP_deref)), !dbg !9044
  call void @llvm.dbg.value(metadata i64* %size, metadata !9034, metadata !DIExpression(DW_OP_deref)), !dbg !9044
  call void @llvm.dbg.value(metadata i64* %max_size, metadata !9035, metadata !DIExpression(DW_OP_deref)), !dbg !9044
  %call14 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %7, i64* nonnull %offset, i64* nonnull %size, i64* nonnull %max_size) #6, !dbg !9059
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !9036, metadata !DIExpression()), !dbg !9044
  %tobool15 = icmp eq %union.tree_node* %call14, null, !dbg !9060
  %8 = load i64, i64* %size, align 8, !dbg !9062
  call void @llvm.dbg.value(metadata i64 %8, metadata !9034, metadata !DIExpression()), !dbg !9044
  %cmp17 = icmp eq i64 %8, -1, !dbg !9063
  %or.cond = or i1 %tobool15, %cmp17, !dbg !9064
  %9 = load i64, i64* %max_size, align 8, !dbg !9065
  call void @llvm.dbg.value(metadata i64 %9, metadata !9035, metadata !DIExpression()), !dbg !9044
  %cmp19 = icmp eq i64 %9, -1, !dbg !9066
  %or.cond1 = or i1 %or.cond, %cmp19, !dbg !9064
  br i1 %or.cond1, label %cleanup, label %if.end21, !dbg !9064

if.end21:                                         ; preds = %if.end
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9067
  %bf.load23 = load i64, i64* %10, align 8, !dbg !9067
  %bf.cast255 = and i64 %bf.load23, 65535, !dbg !9067
  %cmp26 = icmp eq i64 %bf.cast255, 47, !dbg !9067
  br i1 %cmp26, label %if.then39, label %lor.lhs.false27, !dbg !9067

lor.lhs.false27:                                  ; preds = %if.end21
  %cmp32 = icmp eq i64 %bf.cast255, 48, !dbg !9067
  br i1 %cmp32, label %if.then39, label %lor.lhs.false33, !dbg !9067

lor.lhs.false33:                                  ; preds = %lor.lhs.false27
  %cmp38 = icmp eq i64 %bf.cast255, 49, !dbg !9067
  br i1 %cmp38, label %if.then39, label %if.end43, !dbg !9069

if.then39:                                        ; preds = %lor.lhs.false33, %lor.lhs.false27, %if.end21
  %operands41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9070
  %11 = load %union.tree_node*, %union.tree_node** %operands41, align 8, !dbg !9070
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !9036, metadata !DIExpression()), !dbg !9044
  br label %if.end43, !dbg !9071

if.end43:                                         ; preds = %if.then39, %lor.lhs.false33
  %base.0 = phi %union.tree_node* [ %11, %if.then39 ], [ %call14, %lor.lhs.false33 ], !dbg !9044
  call void @llvm.dbg.value(metadata %union.tree_node* %base.0, metadata !9036, metadata !DIExpression()), !dbg !9044
  %call44 = call fastcc %union.tree_node* @get_ssa_base_param(%union.tree_node* %base.0) #7, !dbg !9072
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !9036, metadata !DIExpression()), !dbg !9044
  %tobool45 = icmp eq %union.tree_node* %call44, null, !dbg !9073
  br i1 %tobool45, label %cleanup, label %lor.lhs.false46, !dbg !9075

lor.lhs.false46:                                  ; preds = %if.end43
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9076
  %bf.load48 = load i64, i64* %12, align 8, !dbg !9076
  %bf.cast508 = and i64 %bf.load48, 65535, !dbg !9077
  %cmp51 = icmp eq i64 %bf.cast508, 34, !dbg !9077
  br i1 %cmp51, label %for.cond.preheader, label %cleanup, !dbg !9078

for.cond.preheader:                               ; preds = %lor.lhs.false46
  br label %for.cond, !dbg !9079

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !9081
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9029, metadata !DIExpression()), !dbg !9044
  %cmp54 = icmp slt i32 %i.0, %call, !dbg !9082
  br i1 %cmp54, label %for.body, label %for.end, !dbg !9079

for.body:                                         ; preds = %for.cond
  %call61 = call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base1, i32 %i.0) #7, !dbg !9084
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call61, metadata !9031, metadata !DIExpression()), !dbg !9044
  %base62 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call61, i64 0, i32 0, !dbg !9086
  %13 = load %union.tree_node*, %union.tree_node** %base62, align 8, !dbg !9086
  %cmp63 = icmp eq %union.tree_node* %13, %call44, !dbg !9088
  br i1 %cmp63, label %land.lhs.true, label %for.inc, !dbg !9089

land.lhs.true:                                    ; preds = %for.body
  %offset64 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call61, i64 0, i32 5, !dbg !9090
  %14 = load i64, i64* %offset64, align 8, !dbg !9090
  %15 = load i64, i64* %offset, align 8, !dbg !9091
  call void @llvm.dbg.value(metadata i64 %15, metadata !9033, metadata !DIExpression()), !dbg !9044
  %cmp65 = icmp eq i64 %14, %15, !dbg !9092
  br i1 %cmp65, label %for.end, label %lor.lhs.false66, !dbg !9093

lor.lhs.false66:                                  ; preds = %land.lhs.true
  %remove_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call61, i64 0, i32 7, !dbg !9094
  %bf.load67 = load i8, i8* %remove_param, align 4, !dbg !9094
  %bf.clear68 = and i8 %bf.load67, 2, !dbg !9094
  %tobool70 = icmp eq i8 %bf.clear68, 0, !dbg !9095
  br i1 %tobool70, label %for.inc, label %for.end, !dbg !9096

for.inc:                                          ; preds = %lor.lhs.false66, %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9029, metadata !DIExpression()), !dbg !9044
  br label %for.cond, !dbg !9098, !llvm.loop !9099

for.end:                                          ; preds = %lor.lhs.false66, %land.lhs.true, %for.cond
  %cand.0 = phi %struct.ipa_parm_adjustment* [ null, %for.cond ], [ %call61, %lor.lhs.false66 ], [ %call61, %land.lhs.true ], !dbg !9044
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %cand.0, metadata !9032, metadata !DIExpression()), !dbg !9044
  %tobool73 = icmp eq %struct.ipa_parm_adjustment* %cand.0, null, !dbg !9101
  br i1 %tobool73, label %cleanup, label %lor.lhs.false74, !dbg !9103

lor.lhs.false74:                                  ; preds = %for.end
  %copy_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %cand.0, i64 0, i32 7, !dbg !9104
  %bf.load75 = load i8, i8* %copy_param, align 4, !dbg !9104
  %bf.clear76 = and i8 %bf.load75, 1, !dbg !9104
  %tobool78 = icmp eq i8 %bf.clear76, 0, !dbg !9105
  br i1 %tobool78, label %lor.lhs.false79, label %cleanup, !dbg !9106

lor.lhs.false79:                                  ; preds = %lor.lhs.false74
  %bf.clear83 = and i8 %bf.load75, 2, !dbg !9107
  %tobool85 = icmp eq i8 %bf.clear83, 0, !dbg !9108
  br i1 %tobool85, label %if.end87, label %cleanup, !dbg !9109

if.end87:                                         ; preds = %lor.lhs.false79
  %bf.clear90 = and i8 %bf.load75, 4, !dbg !9110
  %tobool92 = icmp eq i8 %bf.clear90, 0, !dbg !9111
  %reduction = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %cand.0, i64 0, i32 2, !dbg !9112
  %16 = load %union.tree_node*, %union.tree_node** %reduction, align 8, !dbg !9112
  br i1 %tobool92, label %if.end103, label %if.then93, !dbg !9113

if.then93:                                        ; preds = %if.end87
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9114
  %17 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !9114
  %18 = load %struct.tree_common*, %struct.tree_common** %17, align 8, !dbg !9114
  %type95 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !9114
  %19 = load %union.tree_node*, %union.tree_node** %type95, align 8, !dbg !9114
  %call97 = call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %19, %union.tree_node* %16) #6, !dbg !9114
  call void @llvm.dbg.value(metadata %union.tree_node* %call97, metadata !9037, metadata !DIExpression()), !dbg !9044
  %call98 = call %union.tree_node* @gimple_fold_indirect_ref(%union.tree_node* %call97) #6, !dbg !9115
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !9038, metadata !DIExpression()), !dbg !9116
  %tobool99 = icmp eq %union.tree_node* %call98, null, !dbg !9117
  %spec.select = select i1 %tobool99, %union.tree_node* %call97, %union.tree_node* %call98, !dbg !9119
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !9037, metadata !DIExpression()), !dbg !9044
  br label %if.end103, !dbg !9120

if.end103:                                        ; preds = %if.end87, %if.then93
  %src.1 = phi %union.tree_node* [ %spec.select, %if.then93 ], [ %16, %if.end87 ], !dbg !9112
  call void @llvm.dbg.value(metadata %union.tree_node* %src.1, metadata !9037, metadata !DIExpression()), !dbg !9044
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9121
  %tobool104 = icmp eq %struct._IO_FILE* %20, null, !dbg !9121
  br i1 %tobool104, label %if.end111, label %land.lhs.true105, !dbg !9123

land.lhs.true105:                                 ; preds = %if.end103
  %21 = load i32, i32* @dump_flags, align 4, !dbg !9124
  %and = and i32 %21, 8, !dbg !9125
  %tobool106 = icmp eq i32 %and, 0, !dbg !9125
  br i1 %tobool106, label %if.end111, label %if.then107, !dbg !9126

if.then107:                                       ; preds = %land.lhs.true105
  %call108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.70, i64 0, i64 0)) #6, !dbg !9127
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9129
  %23 = load %union.tree_node*, %union.tree_node** %expr.addr.0, align 8, !dbg !9130
  call void @print_generic_expr(%struct._IO_FILE* %22, %union.tree_node* %23, i32 0) #6, !dbg !9131
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9132
  %call109 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !9133
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9134
  call void @print_generic_expr(%struct._IO_FILE* %25, %union.tree_node* %src.1, i32 0) #6, !dbg !9135
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9136
  %call110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !9137
  br label %if.end111, !dbg !9138

if.end111:                                        ; preds = %land.lhs.true105, %if.end103, %if.then107
  %tobool112 = icmp eq i8 %dont_convert.addr.0, 0, !dbg !9139
  br i1 %tobool112, label %land.lhs.true113, label %if.else123, !dbg !9140

land.lhs.true113:                                 ; preds = %if.end111
  %27 = bitcast %union.tree_node** %expr.addr.0 to %struct.tree_common**, !dbg !9141
  %28 = load %struct.tree_common*, %struct.tree_common** %27, align 8, !dbg !9141
  %type115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %28, i64 0, i32 2, !dbg !9141
  %29 = load %union.tree_node*, %union.tree_node** %type115, align 8, !dbg !9141
  %type116 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %cand.0, i64 0, i32 1, !dbg !9142
  %30 = load %union.tree_node*, %union.tree_node** %type116, align 8, !dbg !9142
  %call117 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %29, %union.tree_node* %30) #6, !dbg !9143
  %tobool118 = icmp eq i8 %call117, 0, !dbg !9143
  br i1 %tobool118, label %if.then119, label %if.else123, !dbg !9144

if.then119:                                       ; preds = %land.lhs.true113
  %31 = load %struct.tree_common*, %struct.tree_common** %27, align 8, !dbg !9145
  %type121 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i64 0, i32 2, !dbg !9145
  %32 = load %union.tree_node*, %union.tree_node** %type121, align 8, !dbg !9145
  %call122 = call %union.tree_node* @build1_stat(i32 118, %union.tree_node* %32, %union.tree_node* %src.1) #6, !dbg !9145
  call void @llvm.dbg.value(metadata %union.tree_node* %call122, metadata !9041, metadata !DIExpression()), !dbg !9146
  store %union.tree_node* %call122, %union.tree_node** %expr.addr.0, align 8, !dbg !9147
  br label %cleanup, !dbg !9148

if.else123:                                       ; preds = %land.lhs.true113, %if.end111
  store %union.tree_node* %src.1, %union.tree_node** %expr.addr.0, align 8, !dbg !9149
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false79, %lor.lhs.false74, %for.end, %lor.lhs.false46, %if.end43, %if.then119, %if.else123, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 0, %lor.lhs.false46 ], [ 0, %if.end43 ], [ 0, %lor.lhs.false79 ], [ 0, %lor.lhs.false74 ], [ 0, %for.end ], [ 1, %if.else123 ], [ 1, %if.then119 ], !dbg !9044
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !9150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9150
  ret i8 %retval.0, !dbg !9150
}

; Function Attrs: nounwind uwtable
define internal i32 @sra_ipa_modify_assign(%union.gimple_statement_d** %stmt_ptr, %struct.gimple_stmt_iterator* %gsi, i8* %data) #5 !dbg !9151 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt_ptr, metadata !9153, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9154, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i8* %data, metadata !9155, metadata !DIExpression()), !dbg !9166
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt_ptr, align 8, !dbg !9167
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !9156, metadata !DIExpression()), !dbg !9166
  %call = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %0) #6, !dbg !9168
  %tobool = icmp eq i8 %call, 0, !dbg !9168
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9170

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %0) #7, !dbg !9171
  call void @llvm.dbg.value(metadata %union.tree_node** %call1, metadata !9158, metadata !DIExpression()), !dbg !9166
  %call2 = tail call fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %0) #7, !dbg !9172
  call void @llvm.dbg.value(metadata %union.tree_node** %call2, metadata !9157, metadata !DIExpression()), !dbg !9166
  %call3 = tail call zeroext i8 @sra_ipa_modify_expr(%union.tree_node** %call1, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 1, i8* %data) #7, !dbg !9173
  call void @llvm.dbg.value(metadata i8 %call3, metadata !9159, metadata !DIExpression()), !dbg !9166
  %call4 = tail call zeroext i8 @sra_ipa_modify_expr(%union.tree_node** %call2, %struct.gimple_stmt_iterator* %gsi, i8 zeroext 1, i8* %data) #7, !dbg !9174
  %or1 = or i8 %call3, %call4, !dbg !9175
  call void @llvm.dbg.value(metadata i8 %or1, metadata !9159, metadata !DIExpression()), !dbg !9166
  %tobool7 = icmp eq i8 %or1, 0, !dbg !9176
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !9177

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9160, metadata !DIExpression()), !dbg !9178
  %1 = bitcast %union.tree_node** %call2 to %struct.tree_common**, !dbg !9179
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !9179
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !9179
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9179
  %4 = bitcast %union.tree_node** %call1 to %struct.tree_common**, !dbg !9181
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !9181
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !9181
  %6 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !9181
  %call11 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %3, %union.tree_node* %6) #6, !dbg !9182
  %tobool12 = icmp eq i8 %call11, 0, !dbg !9182
  %7 = bitcast %union.tree_node** %call1 to i64**, !dbg !9183
  %8 = load i64*, i64** %7, align 8, !dbg !9183
  %bf.load36 = load i64, i64* %8, align 8, !dbg !9183
  %9 = trunc i64 %bf.load36 to i32, !dbg !9183
  %bf.cast38 = and i32 %9, 65535, !dbg !9183
  br i1 %tobool12, label %if.then13, label %if.else34, !dbg !9184

if.then13:                                        ; preds = %if.then8
  %cmp = icmp eq i32 %bf.cast38, 51, !dbg !9185
  br i1 %cmp, label %if.then15, label %if.else28, !dbg !9188

if.then15:                                        ; preds = %if.then13
  %10 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !9189
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !9189
  %11 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !9189
  %call18 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %11) #6, !dbg !9192
  %tobool19 = icmp eq i8 %call18, 0, !dbg !9192
  %12 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !9193
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !9193
  %13 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !9193
  br i1 %tobool19, label %if.else, label %if.then20, !dbg !9194

if.then20:                                        ; preds = %if.then15
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !9195
  %call23 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %13, %union.tree_node* %14) #6, !dbg !9195
  store %union.tree_node* %call23, %union.tree_node** %call1, align 8, !dbg !9196
  br label %if.end51, !dbg !9197

if.else:                                          ; preds = %if.then15
  %call26 = tail call %union.tree_node* @build_constructor(%union.tree_node* %13, %struct.VEC_constructor_elt_gc* null) #6, !dbg !9198
  store %union.tree_node* %call26, %union.tree_node** %call1, align 8, !dbg !9199
  br label %if.end51

if.else28:                                        ; preds = %if.then13
  %call29 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %0) #7, !dbg !9200
  %15 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !9200
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !9200
  %16 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !9200
  %17 = load %union.tree_node*, %union.tree_node** %call1, align 8, !dbg !9200
  %call32 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %call29, i32 118, %union.tree_node* %16, %union.tree_node* %17) #6, !dbg !9200
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !9160, metadata !DIExpression()), !dbg !9178
  br label %if.end51

if.else34:                                        ; preds = %if.then8
  %idxprom = zext i32 %bf.cast38 to i64, !dbg !9201
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !9201
  %18 = load i32, i32* %arrayidx, align 4, !dbg !9201
  %cmp39 = icmp eq i32 %18, 4, !dbg !9201
  br i1 %cmp39, label %land.lhs.true, label %if.end51, !dbg !9203

land.lhs.true:                                    ; preds = %if.else34
  %19 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !9204
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !9204
  %20 = load %union.tree_node*, %union.tree_node** %type42, align 8, !dbg !9204
  %call43 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %20) #6, !dbg !9205
  %tobool45 = icmp eq i8 %call43, 0, !dbg !9205
  br i1 %tobool45, label %if.end51, label %land.lhs.true46, !dbg !9206

land.lhs.true46:                                  ; preds = %land.lhs.true
  %21 = load %union.tree_node*, %union.tree_node** %call2, align 8, !dbg !9207
  %call47 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %21) #6, !dbg !9208
  %tobool48 = icmp eq i8 %call47, 0, !dbg !9208
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !9209

if.then49:                                        ; preds = %land.lhs.true46
  %22 = load %union.tree_node*, %union.tree_node** %call1, align 8, !dbg !9210
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !9160, metadata !DIExpression()), !dbg !9178
  br label %if.end51, !dbg !9211

if.end51:                                         ; preds = %land.lhs.true46, %land.lhs.true, %if.else34, %if.then49, %if.else28, %if.else, %if.then20
  %new_rhs.2 = phi %union.tree_node* [ %call32, %if.else28 ], [ null, %if.else ], [ null, %if.then20 ], [ null, %land.lhs.true46 ], [ %22, %if.then49 ], [ null, %land.lhs.true ], [ null, %if.else34 ], !dbg !9212
  call void @llvm.dbg.value(metadata %union.tree_node* %new_rhs.2, metadata !9160, metadata !DIExpression()), !dbg !9178
  %tobool52 = icmp eq %union.tree_node* %new_rhs.2, null, !dbg !9213
  br i1 %tobool52, label %cleanup, label %if.then53, !dbg !9214

if.then53:                                        ; preds = %if.end51
  %call54 = tail call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* nonnull %new_rhs.2, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !9215
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !9163, metadata !DIExpression()), !dbg !9216
  tail call void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call54) #6, !dbg !9217
  br label %cleanup, !dbg !9218

cleanup:                                          ; preds = %if.end51, %if.end, %entry, %if.then53
  %retval.0 = phi i32 [ 0, %entry ], [ 1, %if.then53 ], [ 1, %if.end51 ], [ 0, %if.end ], !dbg !9166
  ret i32 %retval.0, !dbg !9219
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @replace_removed_params_ssa_names(%union.gimple_statement_d* %stmt, i8* %data) #5 !dbg !9220 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9222, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.value(metadata i8* %data, metadata !9223, metadata !DIExpression()), !dbg !9230
  %0 = bitcast i8* %data to %struct.VEC_ipa_parm_adjustment_t_heap*, !dbg !9231
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %0, metadata !9224, metadata !DIExpression()), !dbg !9230
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !9232
  %cmp = icmp eq i32 %call, 16, !dbg !9234
  br i1 %cmp, label %if.then, label %if.else, !dbg !9235

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %stmt) #7, !dbg !9236
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9226, metadata !DIExpression()), !dbg !9230
  br label %if.end12, !dbg !9237

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !9238
  %tobool = icmp eq i8 %call2, 0, !dbg !9238
  br i1 %tobool, label %if.else5, label %if.then3, !dbg !9240

if.then3:                                         ; preds = %if.else
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !9241
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !9226, metadata !DIExpression()), !dbg !9230
  br label %if.end12, !dbg !9242

if.else5:                                         ; preds = %if.else
  %call6 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !9243
  %tobool7 = icmp eq i8 %call6, 0, !dbg !9243
  br i1 %tobool7, label %if.else10, label %if.then8, !dbg !9245

if.then8:                                         ; preds = %if.else5
  %call9 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !9246
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !9226, metadata !DIExpression()), !dbg !9230
  br label %if.end12, !dbg !9247

if.else10:                                        ; preds = %if.else5
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3773, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9248
  br label %if.end12

if.end12:                                         ; preds = %if.then3, %if.else10, %if.then8, %if.then
  %lhs.2 = phi %union.tree_node* [ %call1, %if.then ], [ %call4, %if.then3 ], [ %call9, %if.then8 ], [ undef, %if.else10 ], !dbg !9249
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.2, metadata !9226, metadata !DIExpression()), !dbg !9230
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9250
  %bf.load = load i64, i64* %1, align 8, !dbg !9250
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9252
  %cmp13 = icmp eq i64 %bf.cast1, 141, !dbg !9252
  br i1 %cmp13, label %if.end15, label %cleanup, !dbg !9253

if.end15:                                         ; preds = %if.end12
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9254
  %2 = bitcast i32* %var to %union.tree_node**, !dbg !9254
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !9254
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9227, metadata !DIExpression()), !dbg !9230
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9255
  %bf.load17 = load i64, i64* %4, align 8, !dbg !9255
  %bf.cast192 = and i64 %bf.load17, 65535, !dbg !9257
  %cmp20 = icmp eq i64 %bf.cast192, 34, !dbg !9257
  br i1 %cmp20, label %if.end22, label %cleanup, !dbg !9258

if.end22:                                         ; preds = %if.end15
  %call23 = tail call fastcc %struct.ipa_parm_adjustment* @get_adjustment_for_base(%struct.VEC_ipa_parm_adjustment_t_heap* %0, %union.tree_node* %3) #7, !dbg !9259
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call23, metadata !9225, metadata !DIExpression()), !dbg !9230
  %tobool24 = icmp eq %struct.ipa_parm_adjustment* %call23, null, !dbg !9260
  br i1 %tobool24, label %cleanup, label %if.end26, !dbg !9262

if.end26:                                         ; preds = %if.end22
  %call27 = tail call fastcc %union.tree_node* @get_replaced_param_substitute(%struct.ipa_parm_adjustment* nonnull %call23) #7, !dbg !9263
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !9228, metadata !DIExpression()), !dbg !9230
  %call28 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call27, %union.gimple_statement_d* %stmt) #7, !dbg !9264
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !9229, metadata !DIExpression()), !dbg !9230
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9265
  %tobool29 = icmp eq %struct._IO_FILE* %5, null, !dbg !9265
  br i1 %tobool29, label %if.end34, label %if.then30, !dbg !9267

if.then30:                                        ; preds = %if.end26
  %call31 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.72, i64 0, i64 0)) #6, !dbg !9268
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9270
  tail call void @print_generic_expr(%struct._IO_FILE* %6, %union.tree_node* %lhs.2, i32 0) #6, !dbg !9271
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9272
  %call32 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !9273
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9274
  tail call void @print_generic_expr(%struct._IO_FILE* %8, %union.tree_node* %call28, i32 0) #6, !dbg !9275
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9276
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !9277
  br label %if.end34, !dbg !9278

if.end34:                                         ; preds = %if.end26, %if.then30
  %call35 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !9279
  %tobool36 = icmp eq i8 %call35, 0, !dbg !9279
  br i1 %tobool36, label %if.else38, label %if.then37, !dbg !9281

if.then37:                                        ; preds = %if.end34
  tail call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %stmt, %union.tree_node* %call28) #7, !dbg !9282
  br label %if.end44, !dbg !9282

if.else38:                                        ; preds = %if.end34
  %call39 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !9283
  %tobool40 = icmp eq i8 %call39, 0, !dbg !9283
  br i1 %tobool40, label %if.else42, label %if.then41, !dbg !9285

if.then41:                                        ; preds = %if.else38
  tail call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %stmt, %union.tree_node* %call28) #7, !dbg !9286
  br label %if.end44, !dbg !9286

if.else42:                                        ; preds = %if.else38
  tail call fastcc void @gimple_phi_set_result(%union.gimple_statement_d* %stmt, %union.tree_node* %call28) #7, !dbg !9287
  br label %if.end44

if.end44:                                         ; preds = %if.then41, %if.else42, %if.then37
  tail call void @replace_uses_by(%union.tree_node* %lhs.2, %union.tree_node* %call28) #6, !dbg !9288
  br label %cleanup, !dbg !9289

cleanup:                                          ; preds = %if.end22, %if.end15, %if.end12, %if.end44
  %retval.0 = phi i8 [ 1, %if.end44 ], [ 0, %if.end12 ], [ 0, %if.end15 ], [ 0, %if.end22 ], !dbg !9230
  ret i8 %retval.0, !dbg !9290
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sra_ipa_reset_debug_stmts(%struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) unnamed_addr #5 !dbg !9291 {
entry:
  %ui = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, metadata !9295, metadata !DIExpression()), !dbg !9305
  %base = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i64 0, i32 0, !dbg !9306
  %call = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base) #7, !dbg !9306
  call void @llvm.dbg.value(metadata i32 %call, metadata !9297, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 0, metadata !9296, metadata !DIExpression()), !dbg !9305
  %0 = bitcast %struct.immediate_use_iterator_d* %ui to i8*, !dbg !9307
  br label %for.cond, !dbg !9308

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !9309
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9296, metadata !DIExpression()), !dbg !9305
  %cmp = icmp slt i32 %i.0, %call, !dbg !9310
  br i1 %cmp, label %for.body, label %for.end33, !dbg !9311

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !9312
  %call7 = call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base, i32 %i.0) #7, !dbg !9313
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call7, metadata !9298, metadata !DIExpression()), !dbg !9307
  %copy_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call7, i64 0, i32 7, !dbg !9314
  %bf.load = load i8, i8* %copy_param, align 4, !dbg !9314
  %bf.clear = and i8 %bf.load, 1, !dbg !9314
  %tobool8 = icmp eq i8 %bf.clear, 0, !dbg !9316
  br i1 %tobool8, label %lor.lhs.false, label %cleanup, !dbg !9317

lor.lhs.false:                                    ; preds = %for.body
  %base9 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call7, i64 0, i32 0, !dbg !9318
  %1 = load %union.tree_node*, %union.tree_node** %base9, align 8, !dbg !9318
  %call10 = call zeroext i8 @is_gimple_reg(%union.tree_node* %1) #6, !dbg !9319
  %tobool11 = icmp eq i8 %call10, 0, !dbg !9319
  br i1 %tobool11, label %cleanup, label %if.end, !dbg !9320

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9321
  %3 = load %union.tree_node*, %union.tree_node** %base9, align 8, !dbg !9322
  %call13 = call %union.tree_node* @gimple_default_def(%struct.function* %2, %union.tree_node* %3) #6, !dbg !9323
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !9304, metadata !DIExpression()), !dbg !9307
  %tobool14 = icmp eq %union.tree_node* %call13, null, !dbg !9324
  br i1 %tobool14, label %cleanup, label %if.end16, !dbg !9326

if.end16:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !9302, metadata !DIExpression(DW_OP_deref)), !dbg !9307
  %call17 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %ui, %union.tree_node* nonnull %call13) #7, !dbg !9327
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call17, metadata !9303, metadata !DIExpression()), !dbg !9307
  br label %for.cond18, !dbg !9327

for.cond18:                                       ; preds = %cond.end26, %if.end16
  %stmt.0 = phi %union.gimple_statement_d* [ %call17, %if.end16 ], [ %call28, %cond.end26 ], !dbg !9329
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !9303, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !9302, metadata !DIExpression(DW_OP_deref)), !dbg !9307
  %call19 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %ui) #7, !dbg !9330
  %tobool20 = icmp eq i8 %call19, 0, !dbg !9330
  br i1 %tobool20, label %for.body21, label %cleanup.loopexit, !dbg !9327

for.body21:                                       ; preds = %for.cond18
  %call22 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt.0) #7, !dbg !9332
  %tobool23 = icmp eq i8 %call22, 0, !dbg !9332
  br i1 %tobool23, label %cond.true24, label %cond.end26, !dbg !9332

cond.true24:                                      ; preds = %for.body21
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 3980, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9332
  br label %cond.end26, !dbg !9332

cond.end26:                                       ; preds = %for.body21, %cond.true24
  call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %stmt.0) #7, !dbg !9334
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt.0) #7, !dbg !9335
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %ui, metadata !9302, metadata !DIExpression(DW_OP_deref)), !dbg !9307
  %call28 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %ui) #7, !dbg !9330
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call28, metadata !9303, metadata !DIExpression()), !dbg !9307
  br label %for.cond18, !dbg !9330, !llvm.loop !9336

cleanup.loopexit:                                 ; preds = %for.cond18
  br label %cleanup, !dbg !9338

cleanup:                                          ; preds = %cleanup.loopexit, %if.end, %lor.lhs.false, %for.body
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !9338
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9339
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9296, metadata !DIExpression()), !dbg !9305
  br label %for.cond, !dbg !9340, !llvm.loop !9341

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !9343
}

; Function Attrs: nounwind uwtable
define internal fastcc void @convert_callers(%struct.cgraph_node* %node, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) unnamed_addr #5 !dbg !9344 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !9346, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, metadata !9347, metadata !DIExpression()), !dbg !9361
  %0 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !9362
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !9363
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !9351, metadata !DIExpression()), !dbg !9361
  %callers = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 2, !dbg !9364
  br label %for.cond, !dbg !9366

for.cond:                                         ; preds = %if.end, %entry
  %cs.0.in = phi %struct.cgraph_edge** [ %callers, %entry ], [ %next_caller, %if.end ]
  %cs.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %cs.0.in, align 8, !dbg !9367
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs.0, metadata !9349, metadata !DIExpression()), !dbg !9361
  %tobool = icmp eq %struct.cgraph_edge* %cs.0, null, !dbg !9368
  br i1 %tobool, label %for.end, label %for.body, !dbg !9368

for.body:                                         ; preds = %for.cond
  %caller = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 1, !dbg !9369
  %1 = bitcast %struct.cgraph_node** %caller to i64**, !dbg !9369
  %2 = load i64*, i64** %1, align 8, !dbg !9369
  %3 = load i64, i64* %2, align 8, !dbg !9372
  store i64 %3, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !9373
  %4 = bitcast i64* %2 to %struct.tree_function_decl**, !dbg !9374
  %5 = load %struct.tree_function_decl*, %struct.tree_function_decl** %4, align 8, !dbg !9374
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %5, i64 0, i32 1, !dbg !9374
  %6 = load %struct.function*, %struct.function** %f, align 8, !dbg !9374
  tail call void @push_cfun(%struct.function* %6) #6, !dbg !9375
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9376
  %tobool3 = icmp eq %struct._IO_FILE* %7, null, !dbg !9376
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9378

if.then:                                          ; preds = %for.body
  %8 = load %struct.cgraph_node*, %struct.cgraph_node** %caller, align 8, !dbg !9379
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %8, i64 0, i32 24, !dbg !9380
  %9 = load i32, i32* %uid, align 8, !dbg !9380
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 2, !dbg !9381
  %10 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !9381
  %uid5 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %10, i64 0, i32 24, !dbg !9382
  %11 = load i32, i32* %uid5, align 8, !dbg !9382
  %call7 = tail call i8* @cgraph_node_name(%struct.cgraph_node* %8) #6, !dbg !9383
  %12 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !9384
  %call9 = tail call i8* @cgraph_node_name(%struct.cgraph_node* %12) #6, !dbg !9385
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.74, i64 0, i64 0), i32 %9, i32 %11, i8* %call7, i8* %call9) #6, !dbg !9386
  br label %if.end, !dbg !9386

if.end:                                           ; preds = %for.body, %if.then
  %call_stmt = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 7, !dbg !9387
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %call_stmt, align 8, !dbg !9387
  tail call void @ipa_modify_call_arguments(%struct.cgraph_edge* nonnull %cs.0, %union.gimple_statement_d* %13, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) #6, !dbg !9388
  tail call void @pop_cfun() #6, !dbg !9389
  %next_caller = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 4, !dbg !9390
  br label %for.cond, !dbg !9391, !llvm.loop !9392

for.end:                                          ; preds = %for.cond
  br label %for.cond12, !dbg !9394

for.cond12:                                       ; preds = %for.inc26, %for.end
  %cs.1.in = phi %struct.cgraph_edge** [ %callers, %for.end ], [ %next_caller27, %for.inc26 ]
  %cs.1 = load %struct.cgraph_edge*, %struct.cgraph_edge** %cs.1.in, align 8, !dbg !9396
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs.1, metadata !9349, metadata !DIExpression()), !dbg !9361
  %tobool13 = icmp eq %struct.cgraph_edge* %cs.1, null, !dbg !9397
  br i1 %tobool13, label %for.end28, label %for.body14, !dbg !9397

for.body14:                                       ; preds = %for.cond12
  %caller15 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.1, i64 0, i32 1, !dbg !9398
  %14 = load %struct.cgraph_node*, %struct.cgraph_node** %caller15, align 8, !dbg !9398
  %uid16 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %14, i64 0, i32 24, !dbg !9401
  %15 = load i32, i32* %uid16, align 8, !dbg !9401
  %call17 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %15) #6, !dbg !9402
  %tobool18 = icmp eq i32 %call17, 0, !dbg !9402
  br i1 %tobool18, label %if.then19, label %for.inc26, !dbg !9403

if.then19:                                        ; preds = %for.body14
  %16 = load %struct.cgraph_node*, %struct.cgraph_node** %caller15, align 8, !dbg !9404
  %call21 = tail call i32 @compute_inline_parameters(%struct.cgraph_node* %16) #6, !dbg !9406
  %17 = load %struct.cgraph_node*, %struct.cgraph_node** %caller15, align 8, !dbg !9407
  %uid23 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %17, i64 0, i32 24, !dbg !9408
  %18 = load i32, i32* %uid23, align 8, !dbg !9408
  %call24 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %18) #6, !dbg !9409
  br label %for.inc26, !dbg !9410

for.inc26:                                        ; preds = %for.body14, %if.then19
  %next_caller27 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.1, i64 0, i32 4, !dbg !9411
  br label %for.cond12, !dbg !9412, !llvm.loop !9413

for.end28:                                        ; preds = %for.cond12
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !9415
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9351, metadata !DIExpression()), !dbg !9361
  store i64 %0, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !9416
  %.b = load i1, i1* @encountered_recursive_call, align 1, !dbg !9417
  br i1 %.b, label %if.end31, label %cleanup61, !dbg !9419

if.end31:                                         ; preds = %for.end28
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9420
  %cfg = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !9420
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9420
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 0, !dbg !9420
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !9420
  %22 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !9421
  %23 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !9422
  br label %for.cond32, !dbg !9420

for.cond32:                                       ; preds = %for.end57, %if.end31
  %24 = phi %struct.control_flow_graph* [ %20, %if.end31 ], [ %.pre1, %for.end57 ], !dbg !9423
  %.pn = phi %struct.basic_block_def* [ %21, %if.end31 ], [ %this_block.0, %for.end57 ]
  %this_block.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !9424
  %this_block.0 = load %struct.basic_block_def*, %struct.basic_block_def** %this_block.0.in, align 8, !dbg !9424
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %this_block.0, metadata !9350, metadata !DIExpression()), !dbg !9361
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i64 0, i32 1, !dbg !9423
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9423
  %cmp = icmp eq %struct.basic_block_def* %this_block.0, %25, !dbg !9423
  br i1 %cmp, label %cleanup61.loopexit, label %for.body35, !dbg !9420

for.body35:                                       ; preds = %for.cond32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8, !dbg !9425
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8, !dbg !9426
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %this_block.0) #7, !dbg !9426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %23, i64 24, i1 false), !dbg !9426
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8, !dbg !9426
  br label %for.cond36, !dbg !9427

for.cond36:                                       ; preds = %cleanup, %for.body35
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9352, metadata !DIExpression(DW_OP_deref)), !dbg !9421
  %call37 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9428
  %tobool38 = icmp eq i8 %call37, 0, !dbg !9429
  br i1 %tobool38, label %for.body39, label %for.end57, !dbg !9430

for.body39:                                       ; preds = %for.cond36
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9352, metadata !DIExpression(DW_OP_deref)), !dbg !9421
  %call40 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9431
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call40, metadata !9356, metadata !DIExpression()), !dbg !9432
  %call41 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call40) #7, !dbg !9433
  %cmp42 = icmp eq i32 %call41, 8, !dbg !9435
  br i1 %cmp42, label %if.end44, label %cleanup, !dbg !9436

if.end44:                                         ; preds = %for.body39
  %call45 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call40) #7, !dbg !9437
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !9360, metadata !DIExpression()), !dbg !9432
  %tobool46 = icmp eq %union.tree_node* %call45, null, !dbg !9438
  br i1 %tobool46, label %cleanup, label %land.lhs.true, !dbg !9440

land.lhs.true:                                    ; preds = %if.end44
  %call47 = call %struct.cgraph_node* @cgraph_get_node(%union.tree_node* nonnull %call45) #6, !dbg !9441
  %cmp48 = icmp eq %struct.cgraph_node* %call47, %node, !dbg !9442
  br i1 %cmp48, label %if.then49, label %cleanup, !dbg !9443

if.then49:                                        ; preds = %land.lhs.true
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9444
  %tobool50 = icmp eq %struct._IO_FILE* %26, null, !dbg !9444
  br i1 %tobool50, label %if.end53, label %if.then51, !dbg !9447

if.then51:                                        ; preds = %if.then49
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %26, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.75, i64 0, i64 0)) #6, !dbg !9448
  br label %if.end53, !dbg !9448

if.end53:                                         ; preds = %if.then49, %if.then51
  call void @ipa_modify_call_arguments(%struct.cgraph_edge* null, %union.gimple_statement_d* %call40, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments) #6, !dbg !9449
  br label %cleanup, !dbg !9450

cleanup:                                          ; preds = %if.end44, %for.body39, %land.lhs.true, %if.end53
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9352, metadata !DIExpression(DW_OP_deref)), !dbg !9421
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !9451
  br label %for.cond36, !dbg !9452, !llvm.loop !9453

for.end57:                                        ; preds = %for.cond36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8, !dbg !9455
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9423
  %cfg34.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !9456
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg34.phi.trans.insert, align 8, !dbg !9423
  br label %for.cond32, !dbg !9423, !llvm.loop !9457

cleanup61.loopexit:                               ; preds = %for.cond32
  br label %cleanup61, !dbg !9459

cleanup61:                                        ; preds = %for.end28, %cleanup61.loopexit
  ret void, !dbg !9459
}

declare dso_local void @cgraph_make_node_local(%struct.cgraph_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %vec_) unnamed_addr #0 !dbg !9460 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_base* %vec_, metadata !9466, metadata !DIExpression()), !dbg !9467
  %tobool = icmp eq %struct.VEC_ipa_parm_adjustment_t_base* %vec_, null, !dbg !9468
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9468

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_base, %struct.VEC_ipa_parm_adjustment_t_base* %vec_, i64 0, i32 0, !dbg !9468
  %0 = load i32, i32* %num, align 8, !dbg !9468
  br label %cond.end, !dbg !9468

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !9468
  ret i32 %cond, !dbg !9468
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9469 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_base* %vec_, metadata !9473, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9474, metadata !DIExpression()), !dbg !9475
  br label %land.end, !dbg !9476

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !9476
  %arrayidx = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_base, %struct.VEC_ipa_parm_adjustment_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9476
  ret %struct.ipa_parm_adjustment* %arrayidx, !dbg !9476
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @gimple_fold_indirect_ref(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_constructor(%union.tree_node*, %struct.VEC_constructor_elt_gc*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ipa_parm_adjustment* @get_adjustment_for_base(%struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, %union.tree_node* %base) unnamed_addr #5 !dbg !9477 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, metadata !9481, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !9482, metadata !DIExpression()), !dbg !9489
  %base1 = getelementptr inbounds %struct.VEC_ipa_parm_adjustment_t_heap, %struct.VEC_ipa_parm_adjustment_t_heap* %adjustments, i64 0, i32 0, !dbg !9490
  %call = tail call fastcc i32 @VEC_ipa_parm_adjustment_t_base_length(%struct.VEC_ipa_parm_adjustment_t_base* %base1) #7, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %call, metadata !9484, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32 0, metadata !9483, metadata !DIExpression()), !dbg !9489
  br label %for.cond, !dbg !9491

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9492
  %retval.0 = phi %struct.ipa_parm_adjustment* [ undef, %entry ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9483, metadata !DIExpression()), !dbg !9489
  %cmp = icmp slt i32 %i.0, %call, !dbg !9493
  br i1 %cmp, label %for.body, label %cleanup12, !dbg !9494

for.body:                                         ; preds = %for.cond
  %call8 = tail call fastcc %struct.ipa_parm_adjustment* @VEC_ipa_parm_adjustment_t_base_index(%struct.VEC_ipa_parm_adjustment_t_base* %base1, i32 %i.0) #7, !dbg !9495
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %call8, metadata !9485, metadata !DIExpression()), !dbg !9496
  %copy_param = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call8, i64 0, i32 7, !dbg !9497
  %bf.load = load i8, i8* %copy_param, align 4, !dbg !9497
  %bf.clear = and i8 %bf.load, 1, !dbg !9497
  %tobool9 = icmp eq i8 %bf.clear, 0, !dbg !9499
  br i1 %tobool9, label %land.lhs.true, label %if.end, !dbg !9500

land.lhs.true:                                    ; preds = %for.body
  %base10 = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %call8, i64 0, i32 0, !dbg !9501
  %0 = load %union.tree_node*, %union.tree_node** %base10, align 8, !dbg !9501
  %cmp11 = icmp eq %union.tree_node* %0, %base, !dbg !9502
  br i1 %cmp11, label %cleanup, label %if.end, !dbg !9503

if.end:                                           ; preds = %for.body, %land.lhs.true
  br label %cleanup, !dbg !9504

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %land.lhs.true ]
  %retval.1 = phi %struct.ipa_parm_adjustment* [ %retval.0, %if.end ], [ %call8, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup12

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9483, metadata !DIExpression()), !dbg !9489
  br label %for.cond, !dbg !9506, !llvm.loop !9507

cleanup12:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi %struct.ipa_parm_adjustment* [ %retval.1, %cleanup ], [ null, %for.cond ]
  ret %struct.ipa_parm_adjustment* %retval.2, !dbg !9509
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_replaced_param_substitute(%struct.ipa_parm_adjustment* %adj) unnamed_addr #5 !dbg !9510 {
entry:
  call void @llvm.dbg.value(metadata %struct.ipa_parm_adjustment* %adj, metadata !9514, metadata !DIExpression()), !dbg !9519
  %new_ssa_base = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %adj, i64 0, i32 3, !dbg !9520
  %0 = load %union.tree_node*, %union.tree_node** %new_ssa_base, align 8, !dbg !9520
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !9521
  br i1 %tobool, label %if.then, label %if.else, !dbg !9522

if.then:                                          ; preds = %entry
  %base = getelementptr inbounds %struct.ipa_parm_adjustment, %struct.ipa_parm_adjustment* %adj, i64 0, i32 0, !dbg !9523
  %1 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !9523
  %call = tail call fastcc i8* @make_fancy_name(%union.tree_node* %1) #7, !dbg !9524
  call void @llvm.dbg.value(metadata i8* %call, metadata !9516, metadata !DIExpression()), !dbg !9525
  %2 = bitcast %struct.ipa_parm_adjustment* %adj to %struct.tree_common**, !dbg !9526
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !9526
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !9526
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9526
  %call2 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0)) #6, !dbg !9527
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9515, metadata !DIExpression()), !dbg !9519
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9528
  %5 = bitcast %union.tree_node** %type4 to i64**, !dbg !9528
  %6 = load i64*, i64** %5, align 8, !dbg !9528
  %bf.load = load i64, i64* %6, align 8, !dbg !9528
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9530
  %cmp = icmp eq i64 %bf.cast1, 13, !dbg !9530
  br i1 %cmp, label %if.then13, label %lor.lhs.false, !dbg !9531

lor.lhs.false:                                    ; preds = %if.then
  %cmp12 = icmp eq i64 %bf.cast1, 14, !dbg !9532
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !9533

if.then13:                                        ; preds = %lor.lhs.false, %if.then
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9534
  %7 = bitcast i40* %gimple_reg_flag to i64*, !dbg !9534
  %bf.load14 = load i64, i64* %7, align 8, !dbg !9535
  %bf.set = or i64 %bf.load14, 134217728, !dbg !9535
  store i64 %bf.set, i64* %7, align 8, !dbg !9535
  br label %if.end, !dbg !9534

if.end:                                           ; preds = %if.then13, %lor.lhs.false
  %call16 = tail call %union.tree_node* @get_identifier(i8* %call) #6, !dbg !9536
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9537
  store %union.tree_node* %call16, %union.tree_node** %name, align 8, !dbg !9538
  %8 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 1) to i64*), align 8, !dbg !9539
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9539
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %8, !dbg !9539
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 5), align 8, !dbg !9539
  %cmp17 = icmp sgt i64 %sub.ptr.sub, 0, !dbg !9539
  %9 = inttoptr i64 %8 to i8*, !dbg !9539
  br i1 %cmp17, label %land.lhs.true, label %cond.false, !dbg !9539

land.lhs.true:                                    ; preds = %if.end
  %10 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 4) to i64*), align 8, !dbg !9539
  %sub.ptr.sub20 = sub i64 %10, %8, !dbg !9539
  %cmp21 = icmp slt i64 %sub.ptr.sub, %sub.ptr.sub20, !dbg !9539
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !9539

cond.true:                                        ; preds = %land.lhs.true
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %sub.ptr.sub, !dbg !9539
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 2), align 8, !dbg !9539
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @name_obstack, i64 0, i32 3), align 8, !dbg !9539
  br label %cond.end, !dbg !9539

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %add.ptr22 = getelementptr inbounds i8, i8* %9, i64 %sub.ptr.sub, !dbg !9539
  tail call void @obstack_free(%struct.obstack* nonnull @name_obstack, i8* %add.ptr22) #6, !dbg !9539
  br label %cond.end, !dbg !9539

cond.end:                                         ; preds = %cond.false, %cond.true
  %call23 = tail call fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %call2) #7, !dbg !9540
  %call24 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call2) #6, !dbg !9541
  store %union.tree_node* %call2, %union.tree_node** %new_ssa_base, align 8, !dbg !9542
  br label %if.end27, !dbg !9543

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9515, metadata !DIExpression()), !dbg !9519
  br label %if.end27

if.end27:                                         ; preds = %if.else, %cond.end
  %repl.0 = phi %union.tree_node* [ %0, %if.else ], [ %call2, %cond.end ], !dbg !9544
  call void @llvm.dbg.value(metadata %union.tree_node* %repl.0, metadata !9515, metadata !DIExpression()), !dbg !9519
  ret %union.tree_node* %repl.0, !dbg !9545
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !9546 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !9550, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9551, metadata !DIExpression()), !dbg !9552
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9553
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !9554
  ret %union.tree_node* %call, !dbg !9555
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !9556 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9558, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !9559, metadata !DIExpression()), !dbg !9560
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !9561
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !9562
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9564

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9565
  %bf.load = load i64, i64* %0, align 8, !dbg !9565
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9566
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !9566
  br i1 %cmp, label %if.then, label %if.end, !dbg !9567

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9568
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !9568
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !9569
  br label %if.end, !dbg !9568

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !9570
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_phi_set_result(%union.gimple_statement_d* %gs, %union.tree_node* %result) unnamed_addr #0 !dbg !9571 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9573, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !9574, metadata !DIExpression()), !dbg !9575
  %result1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !9576
  store %union.tree_node* %result, %union.tree_node** %result1, align 8, !dbg !9577
  ret void, !dbg !9578
}

declare dso_local void @replace_uses_by(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !9579 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !9581, metadata !DIExpression()), !dbg !9582
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %dbg, i32 1, %union.tree_node* null) #7, !dbg !9583
  ret void, !dbg !9584
}

declare dso_local void @push_cfun(%struct.function*) local_unnamed_addr #2

declare dso_local i8* @cgraph_node_name(%struct.cgraph_node*) local_unnamed_addr #2

declare dso_local void @ipa_modify_call_arguments(%struct.cgraph_edge*, %union.gimple_statement_d*, %struct.VEC_ipa_parm_adjustment_t_heap*) local_unnamed_addr #2

declare dso_local void @pop_cfun() local_unnamed_addr #2

declare dso_local i32 @compute_inline_parameters(%struct.cgraph_node*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2178, !2179, !2180}
!llvm.ident = !{!2181}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_sra_early", scope: !2, file: !3, line: 2851, type: !2080, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !677, globals: !2077, nameTableKind: None)
!3 = !DIFile(filename: "tree-sra.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !335, !340, !345, !363, !370, !377, !384, !560, !565, !570, !609, !635, !640, !663, !670}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !330, line: 363, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334}
!332 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !330, line: 355, baseType: !7, size: 32, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!338 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!339 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !341, line: 474, baseType: !7, size: 32, elements: !342)
!341 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!342 = !{!343, !344}
!343 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362}
!347 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !364)
!364 = !{!365, !366, !367, !368, !369}
!365 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !378, line: 104, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383}
!380 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !385, line: 74, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559}
!387 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!559 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!560 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sra_mode", file: !3, line: 94, baseType: !7, size: 32, elements: !561)
!561 = !{!562, !563, !564}
!562 = !DIEnumerator(name: "SRA_MODE_EARLY_IPA", value: 0, isUnsigned: true)
!563 = !DIEnumerator(name: "SRA_MODE_EARLY_INTRA", value: 1, isUnsigned: true)
!564 = !DIEnumerator(name: "SRA_MODE_INTRA", value: 2, isUnsigned: true)
!565 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scan_assign_result", file: !3, line: 1002, baseType: !7, size: 32, elements: !566)
!566 = !{!567, !568, !569}
!567 = !DIEnumerator(name: "SRA_SA_NONE", value: 0, isUnsigned: true)
!568 = !DIEnumerator(name: "SRA_SA_PROCESSED", value: 1, isUnsigned: true)
!569 = !DIEnumerator(name: "SRA_SA_REMOVED", value: 2, isUnsigned: true)
!570 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !571, line: 51, baseType: !7, size: 32, elements: !572)
!571 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!572 = !{!573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608}
!573 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!574 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!575 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!576 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!577 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!578 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!579 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!580 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!581 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!582 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!583 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!584 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!585 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!586 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!587 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!588 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!589 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!590 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!591 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!592 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!593 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!608 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!609 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !571, line: 727, baseType: !7, size: 32, elements: !610)
!610 = !{!611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634}
!611 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!612 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!613 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!614 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!615 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!616 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!617 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!618 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!619 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!620 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!621 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!622 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!623 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!624 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!625 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!626 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!627 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!628 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!629 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!630 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!631 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!632 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!633 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!634 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "unscalarized_data_handling", file: !3, line: 2384, baseType: !7, size: 32, elements: !636)
!636 = !{!637, !638, !639}
!637 = !DIEnumerator(name: "SRA_UDH_NONE", value: 0, isUnsigned: true)
!638 = !DIEnumerator(name: "SRA_UDH_RIGHT", value: 1, isUnsigned: true)
!639 = !DIEnumerator(name: "SRA_UDH_LEFT", value: 2, isUnsigned: true)
!640 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !641, line: 309, baseType: !7, size: 32, elements: !642)
!641 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!642 = !{!643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662}
!643 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!644 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!645 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!646 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!647 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!648 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!649 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!650 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!651 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!652 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!653 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!654 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!655 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!656 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!657 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!658 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!659 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!660 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!661 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!662 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!663 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !664, line: 119, baseType: !7, size: 32, elements: !665)
!664 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!665 = !{!666, !667, !668, !669}
!666 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!667 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!668 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!669 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ipa_splicing_result", file: !3, line: 3471, baseType: !7, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676}
!672 = !DIEnumerator(name: "NO_GOOD_ACCESS", value: 0, isUnsigned: true)
!673 = !DIEnumerator(name: "UNUSED_PARAMS", value: 1, isUnsigned: true)
!674 = !DIEnumerator(name: "BY_VAL_ACCESSES", value: 2, isUnsigned: true)
!675 = !DIEnumerator(name: "MODIF_BY_REF_ACCESSES", value: 3, isUnsigned: true)
!676 = !DIEnumerator(name: "UNMODIF_BY_REF_ACCESSES", value: 4, isUnsigned: true)
!677 = !{!678, !679, !680, !681, !684, !685, !134, !687, !689, !1981, !1462, !1012, !1984, !1045, !682, !7, !1986, !2023, !2036, !2000, !1528, !2038, !2039, !2041, !2042, !2043, !2046, !2051}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!680 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !688, line: 44, baseType: !7)
!688 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !690, line: 56, baseType: !691)
!690 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !693)
!693 = !{!694, !727, !733, !746, !765, !776, !781, !790, !796, !809, !819, !857, !1314, !1342, !1359, !1360, !1365, !1374, !1380, !1385, !1389, !1393, !1632, !1679, !1685, !1691, !1698, !1711, !1725, !1742, !1754, !1776, !1791, !1963}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !692, file: !135, line: 3372, baseType: !695, size: 64)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !695, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !695, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !695, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !695, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !695, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !695, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !695, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !695, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !695, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !695, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !695, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !695, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !695, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !695, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !695, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !695, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !695, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !695, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !695, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !695, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !695, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !695, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !695, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !695, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !695, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !695, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !695, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !695, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !695, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !695, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !692, file: !135, line: 3373, baseType: !728, size: 192)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !729)
!729 = !{!730, !731, !732}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !728, file: !135, line: 403, baseType: !695, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !728, file: !135, line: 404, baseType: !689, size: 64, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !728, file: !135, line: 405, baseType: !689, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !692, file: !135, line: 3374, baseType: !734, size: 320)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !735)
!735 = !{!736, !737}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !734, file: !135, line: 1385, baseType: !728, size: 192)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !734, file: !135, line: 1386, baseType: !738, size: 128, offset: 192)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !739, line: 58, baseType: !740)
!739 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !739, line: 54, size: 128, elements: !741)
!741 = !{!742, !744}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !740, file: !739, line: 56, baseType: !743, size: 64)
!743 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !740, file: !739, line: 57, baseType: !745, size: 64, offset: 64)
!745 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !692, file: !135, line: 3375, baseType: !747, size: 256)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !748)
!748 = !{!749, !750}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !747, file: !135, line: 1398, baseType: !728, size: 192)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !747, file: !135, line: 1399, baseType: !751, size: 64, offset: 192)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !753, line: 52, size: 256, elements: !754)
!753 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!754 = !{!755, !756, !757, !758, !759, !760, !761}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !752, file: !753, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !752, file: !753, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !752, file: !753, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !752, file: !753, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !752, file: !753, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !752, file: !753, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !752, file: !753, line: 62, baseType: !762, size: 192, offset: 64)
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !743, size: 192, elements: !763)
!763 = !{!764}
!764 = !DISubrange(count: 3)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !692, file: !135, line: 3376, baseType: !766, size: 256)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !767)
!767 = !{!768, !769}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !766, file: !135, line: 1409, baseType: !728, size: 192)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !766, file: !135, line: 1410, baseType: !770, size: 64, offset: 192)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !772, line: 27, size: 192, elements: !773)
!772 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!773 = !{!774, !775}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !771, file: !772, line: 29, baseType: !738, size: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !771, file: !772, line: 30, baseType: !5, size: 32, offset: 128)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !692, file: !135, line: 3377, baseType: !777, size: 256)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !778)
!778 = !{!779, !780}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !777, file: !135, line: 1438, baseType: !728, size: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !777, file: !135, line: 1439, baseType: !689, size: 64, offset: 192)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !692, file: !135, line: 3378, baseType: !782, size: 256)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !783)
!783 = !{!784, !785, !786}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !782, file: !135, line: 1419, baseType: !728, size: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !782, file: !135, line: 1420, baseType: !680, size: 32, offset: 192)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !782, file: !135, line: 1421, baseType: !787, size: 8, offset: 224)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 8, elements: !788)
!788 = !{!789}
!789 = !DISubrange(count: 1)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !692, file: !135, line: 3379, baseType: !791, size: 320)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !792)
!792 = !{!793, !794, !795}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !791, file: !135, line: 1429, baseType: !728, size: 192)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !791, file: !135, line: 1430, baseType: !689, size: 64, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !791, file: !135, line: 1431, baseType: !689, size: 64, offset: 256)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !692, file: !135, line: 3380, baseType: !797, size: 320)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !798)
!798 = !{!799, !800}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !797, file: !135, line: 1461, baseType: !728, size: 192)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !797, file: !135, line: 1462, baseType: !801, size: 128, offset: 192)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !802, line: 31, size: 128, elements: !803)
!802 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!803 = !{!804, !807, !808}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !801, file: !802, line: 32, baseType: !805, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !679)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !801, file: !802, line: 33, baseType: !7, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !801, file: !802, line: 34, baseType: !7, size: 32, offset: 96)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !692, file: !135, line: 3381, baseType: !810, size: 384)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !811)
!811 = !{!812, !813, !816, !817, !818}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !810, file: !135, line: 2508, baseType: !728, size: 192)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !810, file: !135, line: 2509, baseType: !814, size: 32, offset: 192)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !815, line: 58, baseType: !687)
!815 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!816 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !810, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !810, file: !135, line: 2511, baseType: !689, size: 64, offset: 256)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !810, file: !135, line: 2512, baseType: !689, size: 64, offset: 320)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !692, file: !135, line: 3382, baseType: !820, size: 896)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !821)
!821 = !{!822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !820, file: !135, line: 2653, baseType: !810, size: 384)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !820, file: !135, line: 2654, baseType: !689, size: 64, offset: 384)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !820, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !820, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !820, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !820, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !820, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !820, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !820, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !820, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !820, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !820, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !820, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !820, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !820, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !820, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !820, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !820, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !820, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !820, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !820, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !820, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !820, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !820, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !820, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !820, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !820, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !820, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !820, file: !135, line: 2705, baseType: !689, size: 64, offset: 576)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !820, file: !135, line: 2706, baseType: !689, size: 64, offset: 640)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !820, file: !135, line: 2707, baseType: !689, size: 64, offset: 704)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !820, file: !135, line: 2708, baseType: !689, size: 64, offset: 768)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !820, file: !135, line: 2711, baseType: !855, size: 64, offset: 832)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !692, file: !135, line: 3383, baseType: !858, size: 960)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !859)
!859 = !{!860, !861}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !858, file: !135, line: 2757, baseType: !820, size: 896)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !858, file: !135, line: 2758, baseType: !862, size: 64, offset: 896)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !690, line: 50, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !865, line: 240, size: 384, elements: !866)
!865 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!866 = !{!867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !864, file: !865, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !864, file: !865, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !864, file: !865, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !864, file: !865, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !864, file: !865, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !864, file: !865, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !864, file: !865, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !864, file: !865, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !864, file: !865, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !864, file: !865, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !864, file: !865, line: 321, baseType: !878, size: 320, offset: 64)
!878 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !865, line: 315, size: 320, elements: !879)
!879 = !{!880, !1281, !1283, !1312, !1313}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !878, file: !865, line: 316, baseType: !881, size: 64)
!881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !882, size: 64, elements: !788)
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !865, line: 183, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !865, line: 166, size: 64, elements: !884)
!884 = !{!885, !886, !887, !888, !889, !897, !898, !910, !913, !973, !974, !1258, !1271, !1278}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !883, file: !865, line: 168, baseType: !680, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !883, file: !865, line: 169, baseType: !7, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !883, file: !865, line: 170, baseType: !685, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !883, file: !865, line: 171, baseType: !862, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !883, file: !865, line: 172, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !690, line: 53, baseType: !891)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !865, line: 359, size: 128, elements: !893)
!893 = !{!894, !895}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !892, file: !865, line: 360, baseType: !680, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !892, file: !865, line: 361, baseType: !896, size: 64, offset: 64)
!896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 64, elements: !788)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !883, file: !865, line: 173, baseType: !5, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !883, file: !865, line: 174, baseType: !899, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !865, line: 133, baseType: !900)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !865, line: 115, size: 32, elements: !901)
!901 = !{!902, !903, !904, !905, !906, !907, !908, !909}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !900, file: !865, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !900, file: !865, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !900, file: !865, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !900, file: !865, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !900, file: !865, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !900, file: !865, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !900, file: !865, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !900, file: !865, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !883, file: !865, line: 175, baseType: !911, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !865, line: 175, flags: DIFlagFwdDecl)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !883, file: !865, line: 176, baseType: !914, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !916, line: 75, size: 256, elements: !917)
!916 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!917 = !{!918, !932, !933, !934}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !915, file: !916, line: 76, baseType: !919, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !916, line: 68, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !916, line: 63, size: 320, elements: !922)
!922 = !{!923, !925, !926, !927}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !921, file: !916, line: 64, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !921, file: !916, line: 65, baseType: !924, size: 64, offset: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !921, file: !916, line: 66, baseType: !7, size: 32, offset: 128)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !921, file: !916, line: 67, baseType: !928, size: 128, offset: 192)
!928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 128, elements: !930)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !916, line: 29, baseType: !743)
!930 = !{!931}
!931 = !DISubrange(count: 2)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !915, file: !916, line: 77, baseType: !919, size: 64, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !915, file: !916, line: 78, baseType: !7, size: 32, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !915, file: !916, line: 79, baseType: !935, size: 64, offset: 192)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !916, line: 49, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !916, line: 45, size: 832, elements: !938)
!938 = !{!939, !940, !941}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !937, file: !916, line: 46, baseType: !924, size: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !937, file: !916, line: 47, baseType: !914, size: 64, offset: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !937, file: !916, line: 48, baseType: !942, size: 704, offset: 128)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !943, line: 164, size: 704, elements: !944)
!943 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!944 = !{!945, !946, !956, !957, !958, !959, !960, !961, !965, !969, !970, !971, !972}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !942, file: !943, line: 166, baseType: !745, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !942, file: !943, line: 167, baseType: !947, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !943, line: 157, size: 192, elements: !949)
!949 = !{!950, !951, !952}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !948, file: !943, line: 159, baseType: !682, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !948, file: !943, line: 160, baseType: !947, size: 64, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !948, file: !943, line: 161, baseType: !953, size: 32, offset: 128)
!953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 32, elements: !954)
!954 = !{!955}
!955 = !DISubrange(count: 4)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !942, file: !943, line: 168, baseType: !682, size: 64, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !942, file: !943, line: 169, baseType: !682, size: 64, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !942, file: !943, line: 170, baseType: !682, size: 64, offset: 256)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !942, file: !943, line: 171, baseType: !745, size: 64, offset: 320)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !942, file: !943, line: 172, baseType: !680, size: 32, offset: 384)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !942, file: !943, line: 176, baseType: !962, size: 64, offset: 448)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!947, !684, !745}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !942, file: !943, line: 177, baseType: !966, size: 64, offset: 512)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !684, !947}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !942, file: !943, line: 178, baseType: !684, size: 64, offset: 576)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !942, file: !943, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !942, file: !943, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !942, file: !943, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !883, file: !865, line: 177, baseType: !689, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !883, file: !865, line: 178, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !330, line: 217, size: 832, elements: !977)
!977 = !{!978, !1223, !1224, !1225, !1228, !1232, !1233, !1234, !1252, !1253, !1254, !1255, !1256, !1257}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !976, file: !330, line: 219, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !330, line: 151, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !330, line: 151, size: 128, elements: !982)
!982 = !{!983}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !981, file: !330, line: 151, baseType: !984, size: 128)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !330, line: 150, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !330, line: 150, size: 128, elements: !986)
!986 = !{!987, !988, !989}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !985, file: !330, line: 150, baseType: !7, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !985, file: !330, line: 150, baseType: !7, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !985, file: !330, line: 150, baseType: !990, size: 64, offset: 64)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 64, elements: !788)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !690, line: 108, baseType: !992)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !330, line: 122, size: 512, elements: !994)
!994 = !{!995, !996, !997, !1215, !1216, !1217, !1218, !1219, !1220, !1221}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !993, file: !330, line: 124, baseType: !975, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !993, file: !330, line: 125, baseType: !975, size: 64, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !993, file: !330, line: 131, baseType: !998, size: 64, offset: 128)
!998 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !330, line: 128, size: 64, elements: !999)
!999 = !{!1000, !1214}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !998, file: !330, line: 129, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !690, line: 66, baseType: !1002)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !571, line: 143, size: 192, elements: !1004)
!1004 = !{!1005, !1212, !1213}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1003, file: !571, line: 145, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !690, line: 69, baseType: !1007)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !571, line: 136, size: 192, elements: !1009)
!1009 = !{!1010, !1210, !1211}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1008, file: !571, line: 137, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !690, line: 58, baseType: !1012)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !571, line: 737, size: 768, elements: !1014)
!1014 = !{!1015, !1032, !1065, !1071, !1076, !1081, !1088, !1094, !1100, !1105, !1119, !1124, !1130, !1135, !1145, !1150, !1168, !1175, !1182, !1188, !1193, !1199, !1205}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1013, file: !571, line: 738, baseType: !1016, size: 256)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !571, line: 271, size: 256, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1016, file: !571, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1016, file: !571, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1016, file: !571, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1016, file: !571, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1016, file: !571, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1016, file: !571, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1016, file: !571, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1016, file: !571, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1016, file: !571, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1016, file: !571, line: 312, baseType: !7, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1016, file: !571, line: 316, baseType: !814, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1016, file: !571, line: 319, baseType: !7, size: 32, offset: 96)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1016, file: !571, line: 323, baseType: !975, size: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1016, file: !571, line: 327, baseType: !689, size: 64, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1013, file: !571, line: 739, baseType: !1033, size: 448)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !571, line: 350, size: 448, elements: !1034)
!1034 = !{!1035, !1063}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1033, file: !571, line: 353, baseType: !1036, size: 384)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !571, line: 333, size: 384, elements: !1037)
!1037 = !{!1038, !1039, !1046}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1036, file: !571, line: 336, baseType: !1016, size: 256)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1036, file: !571, line: 343, baseType: !1040, size: 64, offset: 256)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !664, line: 37, size: 128, elements: !1042)
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1041, file: !664, line: 39, baseType: !1040, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1041, file: !664, line: 40, baseType: !1045, size: 64, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1036, file: !571, line: 344, baseType: !1047, size: 64, offset: 320)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !664, line: 45, size: 320, elements: !1049)
!1049 = !{!1050, !1051}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1048, file: !664, line: 47, baseType: !1047, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1048, file: !664, line: 48, baseType: !1052, size: 256, offset: 64)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1053)
!1053 = !{!1054, !1056, !1057, !1062}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1052, file: !135, line: 1884, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1052, file: !135, line: 1885, baseType: !1055, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1052, file: !135, line: 1891, baseType: !1058, size: 64, offset: 128)
!1058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1052, file: !135, line: 1891, size: 64, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1058, file: !135, line: 1891, baseType: !1011, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1058, file: !135, line: 1891, baseType: !689, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1052, file: !135, line: 1892, baseType: !1045, size: 64, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1033, file: !571, line: 359, baseType: !1064, size: 64, offset: 384)
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 64, elements: !788)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1013, file: !571, line: 740, baseType: !1066, size: 512)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !571, line: 365, size: 512, elements: !1067)
!1067 = !{!1068, !1069, !1070}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1066, file: !571, line: 368, baseType: !1036, size: 384)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1066, file: !571, line: 373, baseType: !689, size: 64, offset: 384)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1066, file: !571, line: 374, baseType: !689, size: 64, offset: 448)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1013, file: !571, line: 741, baseType: !1072, size: 576)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !571, line: 380, size: 576, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1072, file: !571, line: 383, baseType: !1066, size: 512)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1072, file: !571, line: 389, baseType: !1064, size: 64, offset: 512)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1013, file: !571, line: 742, baseType: !1077, size: 320)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !571, line: 395, size: 320, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1077, file: !571, line: 397, baseType: !1016, size: 256)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1077, file: !571, line: 400, baseType: !1001, size: 64, offset: 256)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1013, file: !571, line: 743, baseType: !1082, size: 448)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !571, line: 406, size: 448, elements: !1083)
!1083 = !{!1084, !1085, !1086, !1087}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1082, file: !571, line: 408, baseType: !1016, size: 256)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1082, file: !571, line: 412, baseType: !689, size: 64, offset: 256)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1082, file: !571, line: 420, baseType: !689, size: 64, offset: 320)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1082, file: !571, line: 423, baseType: !1001, size: 64, offset: 384)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1013, file: !571, line: 744, baseType: !1089, size: 384)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !571, line: 429, size: 384, elements: !1090)
!1090 = !{!1091, !1092, !1093}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1089, file: !571, line: 431, baseType: !1016, size: 256)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1089, file: !571, line: 434, baseType: !689, size: 64, offset: 256)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1089, file: !571, line: 437, baseType: !1001, size: 64, offset: 320)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1013, file: !571, line: 745, baseType: !1095, size: 384)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !571, line: 443, size: 384, elements: !1096)
!1096 = !{!1097, !1098, !1099}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1095, file: !571, line: 445, baseType: !1016, size: 256)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1095, file: !571, line: 449, baseType: !689, size: 64, offset: 256)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1095, file: !571, line: 453, baseType: !1001, size: 64, offset: 320)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1013, file: !571, line: 746, baseType: !1101, size: 320)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !571, line: 459, size: 320, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1101, file: !571, line: 461, baseType: !1016, size: 256)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1101, file: !571, line: 464, baseType: !689, size: 64, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1013, file: !571, line: 747, baseType: !1106, size: 768)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !571, line: 469, size: 768, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1112}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1106, file: !571, line: 471, baseType: !1016, size: 256)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1106, file: !571, line: 474, baseType: !7, size: 32, offset: 256)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1106, file: !571, line: 475, baseType: !7, size: 32, offset: 288)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1106, file: !571, line: 478, baseType: !689, size: 64, offset: 320)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1106, file: !571, line: 481, baseType: !1113, size: 384, offset: 384)
!1113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 384, elements: !788)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !1115)
!1115 = !{!1116, !1117, !1118}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1114, file: !135, line: 1920, baseType: !1052, size: 256)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1114, file: !135, line: 1921, baseType: !689, size: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1114, file: !135, line: 1922, baseType: !814, size: 32, offset: 320)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1013, file: !571, line: 748, baseType: !1120, size: 320)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !571, line: 487, size: 320, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1120, file: !571, line: 490, baseType: !1016, size: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1120, file: !571, line: 494, baseType: !680, size: 32, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1013, file: !571, line: 749, baseType: !1125, size: 384)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !571, line: 500, size: 384, elements: !1126)
!1126 = !{!1127, !1128, !1129}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1125, file: !571, line: 502, baseType: !1016, size: 256)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1125, file: !571, line: 506, baseType: !1001, size: 64, offset: 256)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1125, file: !571, line: 510, baseType: !1001, size: 64, offset: 320)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1013, file: !571, line: 750, baseType: !1131, size: 320)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !571, line: 529, size: 320, elements: !1132)
!1132 = !{!1133, !1134}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1131, file: !571, line: 531, baseType: !1016, size: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1131, file: !571, line: 540, baseType: !1001, size: 64, offset: 256)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1013, file: !571, line: 751, baseType: !1136, size: 704)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !571, line: 546, size: 704, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1142, !1143, !1144}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1136, file: !571, line: 549, baseType: !1066, size: 512)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1136, file: !571, line: 553, baseType: !685, size: 64, offset: 512)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1136, file: !571, line: 557, baseType: !679, size: 8, offset: 576)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1136, file: !571, line: 558, baseType: !679, size: 8, offset: 584)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1136, file: !571, line: 559, baseType: !679, size: 8, offset: 592)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1136, file: !571, line: 560, baseType: !679, size: 8, offset: 600)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1136, file: !571, line: 566, baseType: !1064, size: 64, offset: 640)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1013, file: !571, line: 752, baseType: !1146, size: 384)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !571, line: 571, size: 384, elements: !1147)
!1147 = !{!1148, !1149}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1146, file: !571, line: 573, baseType: !1077, size: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1146, file: !571, line: 577, baseType: !689, size: 64, offset: 320)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1013, file: !571, line: 753, baseType: !1151, size: 576)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !571, line: 600, size: 576, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1158, !1167}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1151, file: !571, line: 602, baseType: !1077, size: 320)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1151, file: !571, line: 605, baseType: !689, size: 64, offset: 320)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1151, file: !571, line: 609, baseType: !1156, size: 64, offset: 384)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1157, line: 46, baseType: !743)
!1157 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1151, file: !571, line: 612, baseType: !1159, size: 64, offset: 448)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !571, line: 581, size: 320, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165, !1166}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1160, file: !571, line: 583, baseType: !134, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1160, file: !571, line: 586, baseType: !689, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1160, file: !571, line: 589, baseType: !689, size: 64, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1160, file: !571, line: 592, baseType: !689, size: 64, offset: 192)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1160, file: !571, line: 595, baseType: !689, size: 64, offset: 256)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1151, file: !571, line: 616, baseType: !1001, size: 64, offset: 512)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1013, file: !571, line: 754, baseType: !1169, size: 512)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !571, line: 622, size: 512, elements: !1170)
!1170 = !{!1171, !1172, !1173, !1174}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1169, file: !571, line: 624, baseType: !1077, size: 320)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1169, file: !571, line: 628, baseType: !689, size: 64, offset: 320)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1169, file: !571, line: 632, baseType: !689, size: 64, offset: 384)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1169, file: !571, line: 636, baseType: !689, size: 64, offset: 448)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1013, file: !571, line: 755, baseType: !1176, size: 704)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !571, line: 642, size: 704, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1176, file: !571, line: 644, baseType: !1169, size: 512)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1176, file: !571, line: 648, baseType: !689, size: 64, offset: 512)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1176, file: !571, line: 652, baseType: !689, size: 64, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1176, file: !571, line: 653, baseType: !689, size: 64, offset: 640)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1013, file: !571, line: 756, baseType: !1183, size: 448)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !571, line: 663, size: 448, elements: !1184)
!1184 = !{!1185, !1186, !1187}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1183, file: !571, line: 665, baseType: !1077, size: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1183, file: !571, line: 668, baseType: !689, size: 64, offset: 320)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1183, file: !571, line: 673, baseType: !689, size: 64, offset: 384)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1013, file: !571, line: 757, baseType: !1189, size: 384)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !571, line: 694, size: 384, elements: !1190)
!1190 = !{!1191, !1192}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1189, file: !571, line: 696, baseType: !1077, size: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1189, file: !571, line: 699, baseType: !689, size: 64, offset: 320)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1013, file: !571, line: 758, baseType: !1194, size: 384)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !571, line: 681, size: 384, elements: !1195)
!1195 = !{!1196, !1197, !1198}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1194, file: !571, line: 683, baseType: !1016, size: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1194, file: !571, line: 686, baseType: !689, size: 64, offset: 256)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1194, file: !571, line: 689, baseType: !689, size: 64, offset: 320)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1013, file: !571, line: 759, baseType: !1200, size: 384)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !571, line: 707, size: 384, elements: !1201)
!1201 = !{!1202, !1203, !1204}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1200, file: !571, line: 709, baseType: !1016, size: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1200, file: !571, line: 712, baseType: !689, size: 64, offset: 256)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1200, file: !571, line: 712, baseType: !689, size: 64, offset: 320)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1013, file: !571, line: 760, baseType: !1206, size: 320)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !571, line: 718, size: 320, elements: !1207)
!1207 = !{!1208, !1209}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1206, file: !571, line: 720, baseType: !1016, size: 256)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1206, file: !571, line: 723, baseType: !689, size: 64, offset: 256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1008, file: !571, line: 138, baseType: !1007, size: 64, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1008, file: !571, line: 139, baseType: !1007, size: 64, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1003, file: !571, line: 146, baseType: !1006, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1003, file: !571, line: 152, baseType: !1001, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !998, file: !330, line: 130, baseType: !862, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !993, file: !330, line: 134, baseType: !684, size: 64, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !993, file: !330, line: 137, baseType: !689, size: 64, offset: 256)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !993, file: !330, line: 138, baseType: !814, size: 32, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !993, file: !330, line: 142, baseType: !7, size: 32, offset: 352)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !993, file: !330, line: 144, baseType: !680, size: 32, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !993, file: !330, line: 145, baseType: !680, size: 32, offset: 416)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !993, file: !330, line: 146, baseType: !1222, size: 64, offset: 448)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !330, line: 119, baseType: !745)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !976, file: !330, line: 220, baseType: !979, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !976, file: !330, line: 223, baseType: !684, size: 64, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !976, file: !330, line: 226, baseType: !1226, size: 64, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 185, flags: DIFlagFwdDecl)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !976, file: !330, line: 229, baseType: !1229, size: 128, offset: 256)
!1229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1230, size: 128, elements: !930)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !330, line: 229, flags: DIFlagFwdDecl)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !976, file: !330, line: 232, baseType: !975, size: 64, offset: 384)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !976, file: !330, line: 233, baseType: !975, size: 64, offset: 448)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !976, file: !330, line: 238, baseType: !1235, size: 64, offset: 512)
!1235 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !330, line: 235, size: 64, elements: !1236)
!1236 = !{!1237, !1243}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1235, file: !330, line: 236, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !330, line: 273, size: 128, elements: !1240)
!1240 = !{!1241, !1242}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1239, file: !330, line: 275, baseType: !1001, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1239, file: !330, line: 278, baseType: !1001, size: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1235, file: !330, line: 237, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !330, line: 259, size: 320, elements: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1251}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1245, file: !330, line: 261, baseType: !862, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1245, file: !330, line: 262, baseType: !862, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1245, file: !330, line: 266, baseType: !862, size: 64, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1245, file: !330, line: 267, baseType: !862, size: 64, offset: 192)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1245, file: !330, line: 270, baseType: !680, size: 32, offset: 256)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !976, file: !330, line: 241, baseType: !1222, size: 64, offset: 576)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !976, file: !330, line: 244, baseType: !680, size: 32, offset: 640)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !976, file: !330, line: 247, baseType: !680, size: 32, offset: 672)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !976, file: !330, line: 250, baseType: !680, size: 32, offset: 704)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !976, file: !330, line: 253, baseType: !680, size: 32, offset: 736)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !976, file: !330, line: 256, baseType: !680, size: 32, offset: 768)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !883, file: !865, line: 179, baseType: !1259, size: 64)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !865, line: 150, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !865, line: 142, size: 320, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1266, !1269, !1270}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1261, file: !865, line: 144, baseType: !689, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1261, file: !865, line: 145, baseType: !862, size: 64, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1261, file: !865, line: 146, baseType: !862, size: 64, offset: 128)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1261, file: !865, line: 147, baseType: !1267, size: 32, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1268, line: 31, baseType: !680)
!1268 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1261, file: !865, line: 148, baseType: !7, size: 32, offset: 224)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1261, file: !865, line: 149, baseType: !679, size: 8, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !883, file: !865, line: 180, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !865, line: 162, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !865, line: 159, size: 128, elements: !1275)
!1275 = !{!1276, !1277}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1274, file: !865, line: 160, baseType: !689, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1274, file: !865, line: 161, baseType: !745, size: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !883, file: !865, line: 181, baseType: !1279, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !865, line: 181, flags: DIFlagFwdDecl)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !878, file: !865, line: 317, baseType: !1282, size: 64)
!1282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !745, size: 64, elements: !788)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !878, file: !865, line: 318, baseType: !1284, size: 320)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !865, line: 188, size: 320, elements: !1285)
!1285 = !{!1286, !1288, !1311}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1284, file: !865, line: 190, baseType: !1287, size: 192)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !882, size: 192, elements: !763)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1284, file: !865, line: 193, baseType: !1289, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !865, line: 206, size: 320, elements: !1291)
!1291 = !{!1292, !1296, !1297, !1298, !1310}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1290, file: !865, line: 208, baseType: !1293, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !690, line: 62, baseType: !1295)
!1295 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !690, line: 61, flags: DIFlagFwdDecl)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1290, file: !865, line: 211, baseType: !7, size: 32, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1290, file: !865, line: 214, baseType: !745, size: 64, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1290, file: !865, line: 224, baseType: !1299, size: 64, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !865, line: 202, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !865, line: 202, size: 128, elements: !1302)
!1302 = !{!1303}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1301, file: !865, line: 202, baseType: !1304, size: 128)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !865, line: 200, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !865, line: 200, size: 128, elements: !1306)
!1306 = !{!1307, !1308, !1309}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1305, file: !865, line: 200, baseType: !7, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1305, file: !865, line: 200, baseType: !7, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1305, file: !865, line: 200, baseType: !896, size: 64, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1290, file: !865, line: 234, baseType: !1299, size: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1284, file: !865, line: 197, baseType: !745, size: 64, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !878, file: !865, line: 319, baseType: !752, size: 256)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !878, file: !865, line: 320, baseType: !771, size: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !692, file: !135, line: 3384, baseType: !1315, size: 1472)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1316)
!1316 = !{!1317, !1338, !1339, !1340, !1341}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1315, file: !135, line: 3115, baseType: !1318, size: 1216)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1318, file: !135, line: 2985, baseType: !858, size: 960)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1318, file: !135, line: 2986, baseType: !689, size: 64, offset: 960)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1318, file: !135, line: 2987, baseType: !689, size: 64, offset: 1024)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1318, file: !135, line: 2988, baseType: !689, size: 64, offset: 1088)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1318, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1318, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1318, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1318, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1318, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1318, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1318, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1318, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1318, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1318, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1318, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1318, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1318, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1318, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1315, file: !135, line: 3117, baseType: !689, size: 64, offset: 1216)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1315, file: !135, line: 3119, baseType: !689, size: 64, offset: 1280)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1315, file: !135, line: 3121, baseType: !689, size: 64, offset: 1344)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1315, file: !135, line: 3123, baseType: !689, size: 64, offset: 1408)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !692, file: !135, line: 3385, baseType: !1343, size: 1088)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1344)
!1344 = !{!1345, !1346, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1343, file: !135, line: 2875, baseType: !858, size: 960)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1343, file: !135, line: 2876, baseType: !862, size: 64, offset: 960)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1343, file: !135, line: 2877, baseType: !1348, size: 64, offset: 1024)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1350, line: 172, size: 128, elements: !1351)
!1350 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1351 = !{!1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1349, file: !1350, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1349, file: !1350, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1349, file: !1350, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1349, file: !1350, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1349, file: !1350, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1349, file: !1350, line: 195, baseType: !7, size: 32, offset: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1349, file: !1350, line: 199, baseType: !689, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !692, file: !135, line: 3386, baseType: !1318, size: 1216)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !692, file: !135, line: 3387, baseType: !1361, size: 1280)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1362)
!1362 = !{!1363, !1364}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1361, file: !135, line: 3094, baseType: !1318, size: 1216)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1361, file: !135, line: 3095, baseType: !1348, size: 64, offset: 1216)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !692, file: !135, line: 3388, baseType: !1366, size: 1216)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372, !1373}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1366, file: !135, line: 2825, baseType: !820, size: 896)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1366, file: !135, line: 2827, baseType: !689, size: 64, offset: 896)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1366, file: !135, line: 2828, baseType: !689, size: 64, offset: 960)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1366, file: !135, line: 2829, baseType: !689, size: 64, offset: 1024)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1366, file: !135, line: 2830, baseType: !689, size: 64, offset: 1088)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1366, file: !135, line: 2831, baseType: !689, size: 64, offset: 1152)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !692, file: !135, line: 3389, baseType: !1375, size: 1024)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1376)
!1376 = !{!1377, !1378, !1379}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1375, file: !135, line: 2851, baseType: !858, size: 960)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1375, file: !135, line: 2852, baseType: !680, size: 32, offset: 960)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1375, file: !135, line: 2853, baseType: !680, size: 32, offset: 992)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !692, file: !135, line: 3390, baseType: !1381, size: 1024)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1382)
!1382 = !{!1383, !1384}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1381, file: !135, line: 2858, baseType: !858, size: 960)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1381, file: !135, line: 2859, baseType: !1348, size: 64, offset: 960)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !692, file: !135, line: 3391, baseType: !1386, size: 960)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1387)
!1387 = !{!1388}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1386, file: !135, line: 2863, baseType: !858, size: 960)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !692, file: !135, line: 3392, baseType: !1390, size: 1472)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1391)
!1391 = !{!1392}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1390, file: !135, line: 3305, baseType: !1315, size: 1472)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !692, file: !135, line: 3393, baseType: !1394, size: 1792)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1395)
!1395 = !{!1396, !1397, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1394, file: !135, line: 3249, baseType: !1315, size: 1472)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1394, file: !135, line: 3251, baseType: !1398, size: 64, offset: 1472)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1400, line: 463, size: 1152, elements: !1401)
!1400 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1401 = !{!1402, !1405, !1436, !1437, !1552, !1555, !1556, !1557, !1558, !1559, !1560, !1584, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1399, file: !1400, line: 464, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1400, line: 464, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1399, file: !1400, line: 467, baseType: !1406, size: 64, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !330, line: 374, size: 640, elements: !1408)
!1408 = !{!1409, !1411, !1412, !1425, !1426, !1427, !1428, !1429, !1430, !1432, !1434, !1435}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1407, file: !330, line: 377, baseType: !1410, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !690, line: 111, baseType: !975)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1407, file: !330, line: 378, baseType: !1410, size: 64, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1407, file: !330, line: 381, baseType: !1413, size: 64, offset: 128)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !330, line: 282, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !330, line: 282, size: 128, elements: !1416)
!1416 = !{!1417}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1415, file: !330, line: 282, baseType: !1418, size: 128)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !330, line: 281, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !330, line: 281, size: 128, elements: !1420)
!1420 = !{!1421, !1422, !1423}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1419, file: !330, line: 281, baseType: !7, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1419, file: !330, line: 281, baseType: !7, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1419, file: !330, line: 281, baseType: !1424, size: 64, offset: 64)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 64, elements: !788)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1407, file: !330, line: 384, baseType: !680, size: 32, offset: 192)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1407, file: !330, line: 387, baseType: !680, size: 32, offset: 224)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1407, file: !330, line: 390, baseType: !680, size: 32, offset: 256)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1407, file: !330, line: 394, baseType: !1413, size: 64, offset: 320)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1407, file: !330, line: 396, baseType: !329, size: 32, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1407, file: !330, line: 399, baseType: !1431, size: 64, offset: 416)
!1431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 64, elements: !930)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1407, file: !330, line: 402, baseType: !1433, size: 64, offset: 480)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !930)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1407, file: !330, line: 406, baseType: !680, size: 32, offset: 544)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1407, file: !330, line: 409, baseType: !680, size: 32, offset: 576)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1399, file: !1400, line: 470, baseType: !1002, size: 64, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1399, file: !1400, line: 473, baseType: !1438, size: 64, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1350, line: 39, size: 1152, elements: !1440)
!1440 = !{!1441, !1491, !1504, !1516, !1517, !1529, !1530, !1534, !1535, !1536, !1537, !1538}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1439, file: !1350, line: 41, baseType: !1442, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1443, line: 144, baseType: !1444)
!1443 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1443, line: 100, size: 896, elements: !1446)
!1446 = !{!1447, !1455, !1460, !1465, !1467, !1468, !1469, !1470, !1471, !1472, !1477, !1479, !1480, !1485, !1490}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1445, file: !1443, line: 102, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1443, line: 52, baseType: !1449)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!1452, !1453}
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1443, line: 47, baseType: !7)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1445, file: !1443, line: 105, baseType: !1456, size: 64, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1443, line: 59, baseType: !1457)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!680, !1453, !1453}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1445, file: !1443, line: 108, baseType: !1461, size: 64, offset: 128)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1443, line: 63, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{null, !684}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1445, file: !1443, line: 111, baseType: !1466, size: 64, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1445, file: !1443, line: 114, baseType: !1156, size: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1445, file: !1443, line: 117, baseType: !1156, size: 64, offset: 320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1445, file: !1443, line: 120, baseType: !1156, size: 64, offset: 384)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1445, file: !1443, line: 124, baseType: !7, size: 32, offset: 448)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1445, file: !1443, line: 128, baseType: !7, size: 32, offset: 480)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1445, file: !1443, line: 131, baseType: !1473, size: 64, offset: 512)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1443, line: 75, baseType: !1474)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!684, !1156, !1156}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1445, file: !1443, line: 132, baseType: !1478, size: 64, offset: 576)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1443, line: 78, baseType: !1462)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1445, file: !1443, line: 135, baseType: !684, size: 64, offset: 640)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1445, file: !1443, line: 136, baseType: !1481, size: 64, offset: 704)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1443, line: 82, baseType: !1482)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!684, !684, !1156, !1156}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1445, file: !1443, line: 137, baseType: !1486, size: 64, offset: 768)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1443, line: 83, baseType: !1487)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{null, !684, !684}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1445, file: !1443, line: 141, baseType: !7, size: 32, offset: 832)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1439, file: !1350, line: 48, baseType: !1492, size: 64, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !571, line: 35, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !571, line: 35, size: 128, elements: !1495)
!1495 = !{!1496}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1494, file: !571, line: 35, baseType: !1497, size: 128)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !571, line: 33, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !571, line: 33, size: 128, elements: !1499)
!1499 = !{!1500, !1501, !1502}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1498, file: !571, line: 33, baseType: !7, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1498, file: !571, line: 33, baseType: !7, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1498, file: !571, line: 33, baseType: !1503, size: 64, offset: 64)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 64, elements: !788)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1439, file: !1350, line: 51, baseType: !1505, size: 64, offset: 128)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1508)
!1508 = !{!1509}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1507, file: !135, line: 183, baseType: !1510, size: 128)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1512)
!1512 = !{!1513, !1514, !1515}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1511, file: !135, line: 182, baseType: !7, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1511, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1511, file: !135, line: 182, baseType: !1064, size: 64, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1439, file: !1350, line: 54, baseType: !689, size: 64, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1439, file: !1350, line: 57, baseType: !1518, size: 128, offset: 256)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1519, line: 31, size: 128, elements: !1520)
!1519 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1518, file: !1519, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1518, file: !1519, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1518, file: !1519, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1518, file: !1519, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1518, file: !1519, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1518, file: !1519, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1518, file: !1519, line: 56, baseType: !1528, size: 64, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !690, line: 47, baseType: !914)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1439, file: !1350, line: 60, baseType: !1518, size: 128, offset: 384)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1439, file: !1350, line: 64, baseType: !1531, size: 64, offset: 512)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1533, line: 33, flags: DIFlagFwdDecl)
!1533 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1439, file: !1350, line: 67, baseType: !689, size: 64, offset: 576)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1439, file: !1350, line: 73, baseType: !1442, size: 64, offset: 640)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1439, file: !1350, line: 77, baseType: !1528, size: 64, offset: 704)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1439, file: !1350, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1439, file: !1350, line: 82, baseType: !1539, size: 320, offset: 832)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !664, line: 62, size: 320, elements: !1540)
!1540 = !{!1541, !1547, !1548, !1549, !1550, !1551}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1539, file: !664, line: 63, baseType: !1542, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !664, line: 56, size: 128, elements: !1544)
!1544 = !{!1545, !1546}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1543, file: !664, line: 57, baseType: !1542, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1543, file: !664, line: 58, baseType: !787, size: 8, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1539, file: !664, line: 64, baseType: !7, size: 32, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1539, file: !664, line: 66, baseType: !7, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1539, file: !664, line: 68, baseType: !679, size: 8, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1539, file: !664, line: 70, baseType: !1040, size: 64, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1539, file: !664, line: 71, baseType: !1047, size: 64, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1399, file: !1400, line: 476, baseType: !1553, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1400, line: 476, flags: DIFlagFwdDecl)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1399, file: !1400, line: 479, baseType: !1442, size: 64, offset: 320)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1399, file: !1400, line: 484, baseType: !689, size: 64, offset: 384)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1399, file: !1400, line: 488, baseType: !689, size: 64, offset: 448)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1399, file: !1400, line: 493, baseType: !689, size: 64, offset: 512)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1399, file: !1400, line: 496, baseType: !689, size: 64, offset: 576)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1399, file: !1400, line: 501, baseType: !1561, size: 64, offset: 640)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !341, line: 2355, size: 576, elements: !1563)
!1563 = !{!1564, !1567, !1568, !1569, !1570, !1572, !1573, !1578, !1579, !1580, !1581, !1582, !1583}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1562, file: !341, line: 2356, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !341, line: 2356, flags: DIFlagFwdDecl)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1562, file: !341, line: 2357, baseType: !685, size: 64, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1562, file: !341, line: 2358, baseType: !680, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1562, file: !341, line: 2359, baseType: !680, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1562, file: !341, line: 2360, baseType: !1571, size: 128, offset: 192)
!1571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 128, elements: !954)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1562, file: !341, line: 2364, baseType: !680, size: 32, offset: 320)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1562, file: !341, line: 2367, baseType: !1574, size: 128, offset: 384)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !341, line: 2349, size: 128, elements: !1575)
!1575 = !{!1576, !1577}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1574, file: !341, line: 2351, baseType: !862, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1574, file: !341, line: 2352, baseType: !745, size: 64, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1562, file: !341, line: 2371, baseType: !340, size: 32, offset: 512)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1562, file: !341, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1562, file: !341, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1562, file: !341, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1562, file: !341, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1562, file: !341, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1399, file: !1400, line: 504, baseType: !1585, size: 64, offset: 704)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1400, line: 504, flags: DIFlagFwdDecl)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1399, file: !1400, line: 507, baseType: !1442, size: 64, offset: 768)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1399, file: !1400, line: 510, baseType: !680, size: 32, offset: 832)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1399, file: !1400, line: 513, baseType: !680, size: 32, offset: 864)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1399, file: !1400, line: 516, baseType: !814, size: 32, offset: 896)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1399, file: !1400, line: 519, baseType: !814, size: 32, offset: 928)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1399, file: !1400, line: 522, baseType: !7, size: 32, offset: 960)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1399, file: !1400, line: 523, baseType: !7, size: 32, offset: 992)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1399, file: !1400, line: 528, baseType: !685, size: 64, offset: 1024)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1399, file: !1400, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1399, file: !1400, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1399, file: !1400, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1399, file: !1400, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1399, file: !1400, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1399, file: !1400, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1399, file: !1400, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1399, file: !1400, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1399, file: !1400, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1399, file: !1400, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1399, file: !1400, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1399, file: !1400, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1399, file: !1400, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1399, file: !1400, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1399, file: !1400, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1399, file: !1400, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1394, file: !135, line: 3254, baseType: !689, size: 64, offset: 1536)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1394, file: !135, line: 3257, baseType: !689, size: 64, offset: 1600)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1394, file: !135, line: 3258, baseType: !689, size: 64, offset: 1664)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1394, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1394, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1394, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1394, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1394, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1394, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1394, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1394, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1394, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1394, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1394, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1394, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1394, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1394, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1394, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1394, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1394, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1394, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !692, file: !135, line: 3394, baseType: !1633, size: 1344)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1634)
!1634 = !{!1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1633, file: !135, line: 2280, baseType: !728, size: 192)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1633, file: !135, line: 2281, baseType: !689, size: 64, offset: 192)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1633, file: !135, line: 2282, baseType: !689, size: 64, offset: 256)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1633, file: !135, line: 2283, baseType: !689, size: 64, offset: 320)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1633, file: !135, line: 2284, baseType: !689, size: 64, offset: 384)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1633, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1633, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1633, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1633, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1633, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1633, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1633, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1633, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1633, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1633, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1633, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1633, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1633, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1633, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1633, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1633, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1633, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1633, file: !135, line: 2306, baseType: !1267, size: 32, offset: 544)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1633, file: !135, line: 2307, baseType: !689, size: 64, offset: 576)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1633, file: !135, line: 2308, baseType: !689, size: 64, offset: 640)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1633, file: !135, line: 2314, baseType: !1661, size: 64, offset: 704)
!1661 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1662)
!1662 = !{!1663, !1664, !1665}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1661, file: !135, line: 2310, baseType: !680, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1661, file: !135, line: 2311, baseType: !685, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1661, file: !135, line: 2312, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1633, file: !135, line: 2315, baseType: !689, size: 64, offset: 768)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1633, file: !135, line: 2316, baseType: !689, size: 64, offset: 832)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1633, file: !135, line: 2317, baseType: !689, size: 64, offset: 896)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1633, file: !135, line: 2318, baseType: !689, size: 64, offset: 960)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1633, file: !135, line: 2319, baseType: !689, size: 64, offset: 1024)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1633, file: !135, line: 2320, baseType: !689, size: 64, offset: 1088)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1633, file: !135, line: 2321, baseType: !689, size: 64, offset: 1152)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1633, file: !135, line: 2322, baseType: !689, size: 64, offset: 1216)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1633, file: !135, line: 2324, baseType: !1677, size: 64, offset: 1280)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !692, file: !135, line: 3395, baseType: !1680, size: 320)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1681)
!1681 = !{!1682, !1683, !1684}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1680, file: !135, line: 1470, baseType: !728, size: 192)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1680, file: !135, line: 1471, baseType: !689, size: 64, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1680, file: !135, line: 1472, baseType: !689, size: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !692, file: !135, line: 3396, baseType: !1686, size: 320)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1687)
!1687 = !{!1688, !1689, !1690}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1686, file: !135, line: 1483, baseType: !728, size: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1686, file: !135, line: 1484, baseType: !680, size: 32, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1686, file: !135, line: 1485, baseType: !1064, size: 64, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !692, file: !135, line: 3397, baseType: !1692, size: 384)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1692, file: !135, line: 1830, baseType: !728, size: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1692, file: !135, line: 1831, baseType: !814, size: 32, offset: 192)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1692, file: !135, line: 1832, baseType: !689, size: 64, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1692, file: !135, line: 1835, baseType: !1064, size: 64, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !692, file: !135, line: 3398, baseType: !1699, size: 704)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1700)
!1700 = !{!1701, !1702, !1703, !1704, !1705, !1710}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1699, file: !135, line: 1899, baseType: !728, size: 192)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1699, file: !135, line: 1902, baseType: !689, size: 64, offset: 192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1699, file: !135, line: 1905, baseType: !1011, size: 64, offset: 256)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1699, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1699, file: !135, line: 1911, baseType: !1706, size: 64, offset: 384)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1350, line: 117, size: 128, elements: !1708)
!1708 = !{!1709}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1707, file: !1350, line: 120, baseType: !1518, size: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1699, file: !135, line: 1914, baseType: !1052, size: 256, offset: 448)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !692, file: !135, line: 3399, baseType: !1712, size: 704)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1712, file: !135, line: 2009, baseType: !728, size: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1712, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1712, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1712, file: !135, line: 2014, baseType: !814, size: 32, offset: 224)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1712, file: !135, line: 2016, baseType: !689, size: 64, offset: 256)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1712, file: !135, line: 2017, baseType: !1505, size: 64, offset: 320)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1712, file: !135, line: 2019, baseType: !689, size: 64, offset: 384)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1712, file: !135, line: 2020, baseType: !689, size: 64, offset: 448)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1712, file: !135, line: 2021, baseType: !689, size: 64, offset: 512)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1712, file: !135, line: 2022, baseType: !689, size: 64, offset: 576)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1712, file: !135, line: 2023, baseType: !689, size: 64, offset: 640)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !692, file: !135, line: 3400, baseType: !1726, size: 832)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1726, file: !135, line: 2431, baseType: !728, size: 192)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1726, file: !135, line: 2433, baseType: !689, size: 64, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1726, file: !135, line: 2434, baseType: !689, size: 64, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1726, file: !135, line: 2435, baseType: !689, size: 64, offset: 320)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1726, file: !135, line: 2436, baseType: !689, size: 64, offset: 384)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1726, file: !135, line: 2437, baseType: !1505, size: 64, offset: 448)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1726, file: !135, line: 2438, baseType: !689, size: 64, offset: 512)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1726, file: !135, line: 2440, baseType: !689, size: 64, offset: 576)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1726, file: !135, line: 2441, baseType: !689, size: 64, offset: 640)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1726, file: !135, line: 2443, baseType: !1738, size: 128, offset: 704)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1740)
!1740 = !{!1741}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1739, file: !135, line: 182, baseType: !1510, size: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !692, file: !135, line: 3401, baseType: !1743, size: 320)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1744)
!1744 = !{!1745, !1746, !1753}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1743, file: !135, line: 3329, baseType: !728, size: 192)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1743, file: !135, line: 3330, baseType: !1747, size: 64, offset: 192)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1749)
!1749 = !{!1750, !1751, !1752}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1748, file: !135, line: 3322, baseType: !1747, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1748, file: !135, line: 3323, baseType: !1747, size: 64, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1748, file: !135, line: 3324, baseType: !689, size: 64, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1743, file: !135, line: 3331, baseType: !1747, size: 64, offset: 256)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !692, file: !135, line: 3402, baseType: !1755, size: 256)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1756)
!1756 = !{!1757, !1758}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1755, file: !135, line: 1541, baseType: !728, size: 192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1755, file: !135, line: 1542, baseType: !1759, size: 64, offset: 192)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1762)
!1762 = !{!1763}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1761, file: !135, line: 1538, baseType: !1764, size: 192)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1765)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1766)
!1766 = !{!1767, !1768, !1769}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1765, file: !135, line: 1537, baseType: !7, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1765, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1765, file: !135, line: 1537, baseType: !1770, size: 128, offset: 64)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 128, elements: !788)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1773)
!1773 = !{!1774, !1775}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1772, file: !135, line: 1533, baseType: !689, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1772, file: !135, line: 1534, baseType: !689, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !692, file: !135, line: 3403, baseType: !1777, size: 512)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1788, !1789, !1790}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1777, file: !135, line: 1939, baseType: !728, size: 192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1777, file: !135, line: 1940, baseType: !814, size: 32, offset: 192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1777, file: !135, line: 1941, baseType: !345, size: 32, offset: 224)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1777, file: !135, line: 1946, baseType: !1783, size: 32, offset: 256)
!1783 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1784)
!1784 = !{!1785, !1786, !1787}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1783, file: !135, line: 1943, baseType: !363, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1783, file: !135, line: 1944, baseType: !370, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1783, file: !135, line: 1945, baseType: !134, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1777, file: !135, line: 1950, baseType: !1001, size: 64, offset: 320)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1777, file: !135, line: 1951, baseType: !1001, size: 64, offset: 384)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1777, file: !135, line: 1953, baseType: !1064, size: 64, offset: 448)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !692, file: !135, line: 3404, baseType: !1792, size: 1664)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1793)
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1792, file: !135, line: 3338, baseType: !728, size: 192)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1792, file: !135, line: 3341, baseType: !1796, size: 1472, offset: 192)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1797, line: 410, size: 1472, elements: !1798)
!1797 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1796, file: !1797, line: 412, baseType: !680, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1796, file: !1797, line: 413, baseType: !680, size: 32, offset: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1796, file: !1797, line: 414, baseType: !680, size: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1796, file: !1797, line: 415, baseType: !680, size: 32, offset: 96)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1796, file: !1797, line: 416, baseType: !680, size: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1796, file: !1797, line: 417, baseType: !680, size: 32, offset: 160)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1796, file: !1797, line: 418, baseType: !679, size: 8, offset: 192)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1796, file: !1797, line: 419, baseType: !679, size: 8, offset: 200)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1796, file: !1797, line: 420, baseType: !1808, size: 8, offset: 208)
!1808 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1796, file: !1797, line: 421, baseType: !1808, size: 8, offset: 216)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1796, file: !1797, line: 422, baseType: !1808, size: 8, offset: 224)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1796, file: !1797, line: 423, baseType: !1808, size: 8, offset: 232)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1796, file: !1797, line: 424, baseType: !1808, size: 8, offset: 240)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1796, file: !1797, line: 425, baseType: !1808, size: 8, offset: 248)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1796, file: !1797, line: 426, baseType: !1808, size: 8, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1796, file: !1797, line: 427, baseType: !1808, size: 8, offset: 264)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1796, file: !1797, line: 428, baseType: !1808, size: 8, offset: 272)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1796, file: !1797, line: 429, baseType: !1808, size: 8, offset: 280)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1796, file: !1797, line: 430, baseType: !1808, size: 8, offset: 288)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1796, file: !1797, line: 431, baseType: !1808, size: 8, offset: 296)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1796, file: !1797, line: 432, baseType: !1808, size: 8, offset: 304)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1796, file: !1797, line: 433, baseType: !1808, size: 8, offset: 312)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1796, file: !1797, line: 434, baseType: !1808, size: 8, offset: 320)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1796, file: !1797, line: 435, baseType: !1808, size: 8, offset: 328)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1796, file: !1797, line: 436, baseType: !1808, size: 8, offset: 336)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1796, file: !1797, line: 437, baseType: !1808, size: 8, offset: 344)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1796, file: !1797, line: 438, baseType: !1808, size: 8, offset: 352)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1796, file: !1797, line: 439, baseType: !1808, size: 8, offset: 360)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1796, file: !1797, line: 440, baseType: !1808, size: 8, offset: 368)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1796, file: !1797, line: 441, baseType: !1808, size: 8, offset: 376)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1796, file: !1797, line: 442, baseType: !1808, size: 8, offset: 384)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1796, file: !1797, line: 443, baseType: !1808, size: 8, offset: 392)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1796, file: !1797, line: 444, baseType: !1808, size: 8, offset: 400)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1796, file: !1797, line: 445, baseType: !1808, size: 8, offset: 408)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1796, file: !1797, line: 446, baseType: !1808, size: 8, offset: 416)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1796, file: !1797, line: 447, baseType: !1808, size: 8, offset: 424)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1796, file: !1797, line: 448, baseType: !1808, size: 8, offset: 432)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1796, file: !1797, line: 449, baseType: !1808, size: 8, offset: 440)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1796, file: !1797, line: 450, baseType: !1808, size: 8, offset: 448)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1796, file: !1797, line: 451, baseType: !1808, size: 8, offset: 456)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1796, file: !1797, line: 452, baseType: !1808, size: 8, offset: 464)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1796, file: !1797, line: 453, baseType: !1808, size: 8, offset: 472)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1796, file: !1797, line: 454, baseType: !1808, size: 8, offset: 480)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1796, file: !1797, line: 455, baseType: !1808, size: 8, offset: 488)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1796, file: !1797, line: 456, baseType: !1808, size: 8, offset: 496)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1796, file: !1797, line: 457, baseType: !1808, size: 8, offset: 504)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1796, file: !1797, line: 458, baseType: !1808, size: 8, offset: 512)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1796, file: !1797, line: 459, baseType: !1808, size: 8, offset: 520)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1796, file: !1797, line: 460, baseType: !1808, size: 8, offset: 528)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1796, file: !1797, line: 461, baseType: !1808, size: 8, offset: 536)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1796, file: !1797, line: 462, baseType: !1808, size: 8, offset: 544)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1796, file: !1797, line: 463, baseType: !1808, size: 8, offset: 552)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1796, file: !1797, line: 464, baseType: !1808, size: 8, offset: 560)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1796, file: !1797, line: 465, baseType: !1808, size: 8, offset: 568)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1796, file: !1797, line: 466, baseType: !1808, size: 8, offset: 576)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1796, file: !1797, line: 467, baseType: !1808, size: 8, offset: 584)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1796, file: !1797, line: 468, baseType: !1808, size: 8, offset: 592)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1796, file: !1797, line: 469, baseType: !1808, size: 8, offset: 600)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1796, file: !1797, line: 470, baseType: !1808, size: 8, offset: 608)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1796, file: !1797, line: 471, baseType: !1808, size: 8, offset: 616)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1796, file: !1797, line: 472, baseType: !1808, size: 8, offset: 624)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1796, file: !1797, line: 473, baseType: !1808, size: 8, offset: 632)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1796, file: !1797, line: 474, baseType: !1808, size: 8, offset: 640)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1796, file: !1797, line: 475, baseType: !1808, size: 8, offset: 648)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1796, file: !1797, line: 476, baseType: !1808, size: 8, offset: 656)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1796, file: !1797, line: 477, baseType: !1808, size: 8, offset: 664)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1796, file: !1797, line: 478, baseType: !1808, size: 8, offset: 672)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1796, file: !1797, line: 479, baseType: !1808, size: 8, offset: 680)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1796, file: !1797, line: 480, baseType: !1808, size: 8, offset: 688)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1796, file: !1797, line: 481, baseType: !1808, size: 8, offset: 696)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1796, file: !1797, line: 482, baseType: !1808, size: 8, offset: 704)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1796, file: !1797, line: 483, baseType: !1808, size: 8, offset: 712)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1796, file: !1797, line: 484, baseType: !1808, size: 8, offset: 720)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1796, file: !1797, line: 485, baseType: !1808, size: 8, offset: 728)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1796, file: !1797, line: 486, baseType: !1808, size: 8, offset: 736)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1796, file: !1797, line: 487, baseType: !1808, size: 8, offset: 744)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1796, file: !1797, line: 488, baseType: !1808, size: 8, offset: 752)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1796, file: !1797, line: 489, baseType: !1808, size: 8, offset: 760)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1796, file: !1797, line: 490, baseType: !1808, size: 8, offset: 768)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1796, file: !1797, line: 491, baseType: !1808, size: 8, offset: 776)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1796, file: !1797, line: 492, baseType: !1808, size: 8, offset: 784)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1796, file: !1797, line: 493, baseType: !1808, size: 8, offset: 792)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1796, file: !1797, line: 494, baseType: !1808, size: 8, offset: 800)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1796, file: !1797, line: 495, baseType: !1808, size: 8, offset: 808)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1796, file: !1797, line: 496, baseType: !1808, size: 8, offset: 816)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1796, file: !1797, line: 497, baseType: !1808, size: 8, offset: 824)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1796, file: !1797, line: 498, baseType: !1808, size: 8, offset: 832)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1796, file: !1797, line: 499, baseType: !1808, size: 8, offset: 840)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1796, file: !1797, line: 500, baseType: !1808, size: 8, offset: 848)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1796, file: !1797, line: 501, baseType: !1808, size: 8, offset: 856)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1796, file: !1797, line: 502, baseType: !1808, size: 8, offset: 864)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1796, file: !1797, line: 503, baseType: !1808, size: 8, offset: 872)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1796, file: !1797, line: 504, baseType: !1808, size: 8, offset: 880)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1796, file: !1797, line: 505, baseType: !1808, size: 8, offset: 888)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1796, file: !1797, line: 506, baseType: !1808, size: 8, offset: 896)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1796, file: !1797, line: 507, baseType: !1808, size: 8, offset: 904)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1796, file: !1797, line: 508, baseType: !1808, size: 8, offset: 912)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1796, file: !1797, line: 509, baseType: !1808, size: 8, offset: 920)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1796, file: !1797, line: 510, baseType: !1808, size: 8, offset: 928)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1796, file: !1797, line: 511, baseType: !1808, size: 8, offset: 936)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1796, file: !1797, line: 512, baseType: !1808, size: 8, offset: 944)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1796, file: !1797, line: 513, baseType: !1808, size: 8, offset: 952)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1796, file: !1797, line: 514, baseType: !1808, size: 8, offset: 960)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1796, file: !1797, line: 515, baseType: !1808, size: 8, offset: 968)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1796, file: !1797, line: 516, baseType: !1808, size: 8, offset: 976)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1796, file: !1797, line: 517, baseType: !1808, size: 8, offset: 984)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1796, file: !1797, line: 518, baseType: !1808, size: 8, offset: 992)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1796, file: !1797, line: 519, baseType: !1808, size: 8, offset: 1000)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1796, file: !1797, line: 520, baseType: !1808, size: 8, offset: 1008)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1796, file: !1797, line: 521, baseType: !1808, size: 8, offset: 1016)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1796, file: !1797, line: 522, baseType: !1808, size: 8, offset: 1024)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1796, file: !1797, line: 523, baseType: !1808, size: 8, offset: 1032)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1796, file: !1797, line: 524, baseType: !1808, size: 8, offset: 1040)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1796, file: !1797, line: 525, baseType: !1808, size: 8, offset: 1048)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1796, file: !1797, line: 526, baseType: !1808, size: 8, offset: 1056)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1796, file: !1797, line: 527, baseType: !1808, size: 8, offset: 1064)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1796, file: !1797, line: 528, baseType: !1808, size: 8, offset: 1072)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1796, file: !1797, line: 529, baseType: !1808, size: 8, offset: 1080)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1796, file: !1797, line: 530, baseType: !1808, size: 8, offset: 1088)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1796, file: !1797, line: 531, baseType: !1808, size: 8, offset: 1096)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1796, file: !1797, line: 532, baseType: !1808, size: 8, offset: 1104)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1796, file: !1797, line: 533, baseType: !1808, size: 8, offset: 1112)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1796, file: !1797, line: 534, baseType: !1808, size: 8, offset: 1120)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1796, file: !1797, line: 535, baseType: !1808, size: 8, offset: 1128)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1796, file: !1797, line: 536, baseType: !1808, size: 8, offset: 1136)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1796, file: !1797, line: 537, baseType: !1808, size: 8, offset: 1144)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1796, file: !1797, line: 538, baseType: !1808, size: 8, offset: 1152)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1796, file: !1797, line: 539, baseType: !1808, size: 8, offset: 1160)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1796, file: !1797, line: 540, baseType: !1808, size: 8, offset: 1168)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1796, file: !1797, line: 541, baseType: !1808, size: 8, offset: 1176)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1796, file: !1797, line: 542, baseType: !1808, size: 8, offset: 1184)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1796, file: !1797, line: 543, baseType: !1808, size: 8, offset: 1192)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1796, file: !1797, line: 544, baseType: !1808, size: 8, offset: 1200)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1796, file: !1797, line: 545, baseType: !1808, size: 8, offset: 1208)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1796, file: !1797, line: 546, baseType: !1808, size: 8, offset: 1216)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1796, file: !1797, line: 547, baseType: !1808, size: 8, offset: 1224)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1796, file: !1797, line: 548, baseType: !1808, size: 8, offset: 1232)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1796, file: !1797, line: 549, baseType: !1808, size: 8, offset: 1240)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1796, file: !1797, line: 550, baseType: !1808, size: 8, offset: 1248)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1796, file: !1797, line: 551, baseType: !1808, size: 8, offset: 1256)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1796, file: !1797, line: 552, baseType: !1808, size: 8, offset: 1264)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1796, file: !1797, line: 553, baseType: !1808, size: 8, offset: 1272)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1796, file: !1797, line: 554, baseType: !1808, size: 8, offset: 1280)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1796, file: !1797, line: 555, baseType: !1808, size: 8, offset: 1288)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1796, file: !1797, line: 556, baseType: !1808, size: 8, offset: 1296)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1796, file: !1797, line: 557, baseType: !1808, size: 8, offset: 1304)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1796, file: !1797, line: 558, baseType: !1808, size: 8, offset: 1312)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1796, file: !1797, line: 559, baseType: !1808, size: 8, offset: 1320)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1796, file: !1797, line: 560, baseType: !1808, size: 8, offset: 1328)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1796, file: !1797, line: 561, baseType: !1808, size: 8, offset: 1336)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1796, file: !1797, line: 562, baseType: !1808, size: 8, offset: 1344)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1796, file: !1797, line: 563, baseType: !1808, size: 8, offset: 1352)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1796, file: !1797, line: 564, baseType: !1808, size: 8, offset: 1360)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1796, file: !1797, line: 565, baseType: !1808, size: 8, offset: 1368)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1796, file: !1797, line: 566, baseType: !1808, size: 8, offset: 1376)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1796, file: !1797, line: 567, baseType: !1808, size: 8, offset: 1384)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1796, file: !1797, line: 568, baseType: !1808, size: 8, offset: 1392)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1796, file: !1797, line: 569, baseType: !1808, size: 8, offset: 1400)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1796, file: !1797, line: 570, baseType: !1808, size: 8, offset: 1408)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1796, file: !1797, line: 571, baseType: !1808, size: 8, offset: 1416)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1796, file: !1797, line: 572, baseType: !1808, size: 8, offset: 1424)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1796, file: !1797, line: 573, baseType: !1808, size: 8, offset: 1432)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1796, file: !1797, line: 574, baseType: !1808, size: 8, offset: 1440)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !692, file: !135, line: 3405, baseType: !1964, size: 384)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1965)
!1965 = !{!1966, !1967}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1964, file: !135, line: 3353, baseType: !728, size: 192)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1964, file: !135, line: 3356, baseType: !1968, size: 192, offset: 192)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1797, line: 578, size: 192, elements: !1969)
!1969 = !{!1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1968, file: !1797, line: 580, baseType: !680, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1968, file: !1797, line: 581, baseType: !680, size: 32, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1968, file: !1797, line: 582, baseType: !680, size: 32, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1968, file: !1797, line: 583, baseType: !680, size: 32, offset: 96)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1968, file: !1797, line: 584, baseType: !679, size: 8, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1968, file: !1797, line: 585, baseType: !679, size: 8, offset: 136)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1968, file: !1797, line: 586, baseType: !679, size: 8, offset: 144)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1968, file: !1797, line: 587, baseType: !679, size: 8, offset: 152)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1968, file: !1797, line: 588, baseType: !679, size: 8, offset: 160)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1968, file: !1797, line: 589, baseType: !679, size: 8, offset: 168)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1968, file: !1797, line: 590, baseType: !679, size: 8, offset: 176)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!684, !745}
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access", file: !3, line: 120, size: 960, elements: !1988)
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1987, file: !3, line: 125, baseType: !745, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1987, file: !3, line: 126, baseType: !745, size: 64, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1987, file: !3, line: 127, baseType: !689, size: 64, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1987, file: !3, line: 132, baseType: !689, size: 64, offset: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1987, file: !3, line: 134, baseType: !689, size: 64, offset: 256)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1987, file: !3, line: 137, baseType: !1011, size: 64, offset: 320)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "next_grp", scope: !1987, file: !3, line: 140, baseType: !1986, size: 64, offset: 384)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "group_representative", scope: !1987, file: !3, line: 144, baseType: !1986, size: 64, offset: 448)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "first_child", scope: !1987, file: !3, line: 148, baseType: !1986, size: 64, offset: 512)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling", scope: !1987, file: !3, line: 153, baseType: !1986, size: 64, offset: 576)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "first_link", scope: !1987, file: !3, line: 157, baseType: !2000, size: 64, offset: 640)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assign_link", file: !3, line: 237, size: 192, elements: !2002)
!2002 = !{!2003, !2004, !2005}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "lacc", scope: !2001, file: !3, line: 239, baseType: !1986, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "racc", scope: !2001, file: !3, line: 239, baseType: !1986, size: 64, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2001, file: !3, line: 240, baseType: !2000, size: 64, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "last_link", scope: !1987, file: !3, line: 157, baseType: !2000, size: 64, offset: 704)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "next_queued", scope: !1987, file: !3, line: 160, baseType: !1986, size: 64, offset: 768)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "replacement_decl", scope: !1987, file: !3, line: 165, baseType: !689, size: 64, offset: 832)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1987, file: !3, line: 168, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "total_scalarization", scope: !1987, file: !3, line: 172, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "grp_queued", scope: !1987, file: !3, line: 175, baseType: !7, size: 1, offset: 898, flags: DIFlagBitField, extraData: i64 896)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "grp_write", scope: !1987, file: !3, line: 179, baseType: !7, size: 1, offset: 899, flags: DIFlagBitField, extraData: i64 896)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "grp_read", scope: !1987, file: !3, line: 183, baseType: !7, size: 1, offset: 900, flags: DIFlagBitField, extraData: i64 896)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "grp_hint", scope: !1987, file: !3, line: 188, baseType: !7, size: 1, offset: 901, flags: DIFlagBitField, extraData: i64 896)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "grp_covered", scope: !1987, file: !3, line: 192, baseType: !7, size: 1, offset: 902, flags: DIFlagBitField, extraData: i64 896)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "grp_unscalarizable_region", scope: !1987, file: !3, line: 196, baseType: !7, size: 1, offset: 903, flags: DIFlagBitField, extraData: i64 896)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "grp_unscalarized_data", scope: !1987, file: !3, line: 201, baseType: !7, size: 1, offset: 904, flags: DIFlagBitField, extraData: i64 896)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "grp_partial_lhs", scope: !1987, file: !3, line: 205, baseType: !7, size: 1, offset: 905, flags: DIFlagBitField, extraData: i64 896)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "grp_to_be_replaced", scope: !1987, file: !3, line: 210, baseType: !7, size: 1, offset: 906, flags: DIFlagBitField, extraData: i64 896)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "grp_maybe_modified", scope: !1987, file: !3, line: 214, baseType: !7, size: 1, offset: 907, flags: DIFlagBitField, extraData: i64 896)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "grp_scalar_ptr", scope: !1987, file: !3, line: 219, baseType: !7, size: 1, offset: 908, flags: DIFlagBitField, extraData: i64 896)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "grp_not_necessarilly_dereferenced", scope: !1987, file: !3, line: 223, baseType: !7, size: 1, offset: 909, flags: DIFlagBitField, extraData: i64 896)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_access_p_heap", file: !3, line: 229, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_access_p_heap", file: !3, line: 229, size: 128, elements: !2026)
!2026 = !{!2027}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2025, file: !3, line: 229, baseType: !2028, size: 128)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_access_p_base", file: !3, line: 228, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_access_p_base", file: !3, line: 228, size: 128, elements: !2030)
!2030 = !{!2031, !2032, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2029, file: !3, line: 228, baseType: !7, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2029, file: !3, line: 228, baseType: !7, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2029, file: !3, line: 228, baseType: !2034, size: 64, offset: 64)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 64, elements: !788)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "access_p", file: !3, line: 226, baseType: !1986)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2035)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1157, line: 35, baseType: !745)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !664, line: 30, baseType: !2044)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !135, line: 1893, baseType: !1052)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !330, line: 283, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !330, line: 283, size: 128, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2048, file: !330, line: 283, baseType: !1418, size: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_parm_adjustment_t_heap", file: !2053, line: 485, baseType: !2054)
!2053 = !DIFile(filename: "./ipa-prop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_parm_adjustment_t_heap", file: !2053, line: 485, size: 512, elements: !2055)
!2055 = !{!2056}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2054, file: !2053, line: 485, baseType: !2057, size: 512)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_parm_adjustment_t_base", file: !2053, line: 484, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_parm_adjustment_t_base", file: !2053, line: 484, size: 512, elements: !2059)
!2059 = !{!2060, !2061, !2062}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2058, file: !2053, line: 484, baseType: !7, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2058, file: !2053, line: 484, baseType: !7, size: 32, offset: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2058, file: !2053, line: 484, baseType: !2063, size: 448, offset: 64)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2064, size: 448, elements: !788)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_parm_adjustment_t", file: !2053, line: 483, baseType: !2065)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_parm_adjustment", file: !2053, line: 436, size: 448, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2065, file: !2053, line: 443, baseType: !689, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2065, file: !2053, line: 447, baseType: !689, size: 64, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "reduction", scope: !2065, file: !2053, line: 452, baseType: !689, size: 64, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "new_ssa_base", scope: !2065, file: !2053, line: 456, baseType: !689, size: 64, offset: 192)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_value", scope: !2065, file: !2053, line: 460, baseType: !689, size: 64, offset: 256)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2065, file: !2053, line: 464, baseType: !745, size: 64, offset: 320)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !2065, file: !2053, line: 469, baseType: !680, size: 32, offset: 384)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "copy_param", scope: !2065, file: !2053, line: 472, baseType: !7, size: 1, offset: 416, flags: DIFlagBitField, extraData: i64 416)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "remove_param", scope: !2065, file: !2053, line: 477, baseType: !7, size: 1, offset: 417, flags: DIFlagBitField, extraData: i64 416)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "by_ref", scope: !2065, file: !2053, line: 480, baseType: !7, size: 1, offset: 418, flags: DIFlagBitField, extraData: i64 416)
!2077 = !{!0, !2078, !2106, !2108, !2110, !2112, !2114, !2116, !2118, !2141, !2143, !2145, !2147, !2149, !2151, !2153, !2155, !2157, !2159, !2173}
!2078 = !DIGlobalVariableExpression(var: !2079, expr: !DIExpression())
!2079 = distinct !DIGlobalVariable(name: "pass_sra", scope: !2, file: !3, line: 2873, type: !2080, isLocal: false, isDefinition: true)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !378, line: 156, size: 640, elements: !2081)
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2080, file: !378, line: 158, baseType: !2083, size: 640)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !378, line: 114, size: 640, elements: !2084)
!2084 = !{!2085, !2086, !2087, !2091, !2095, !2097, !2098, !2099, !2101, !2102, !2103, !2104, !2105}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2083, file: !378, line: 117, baseType: !377, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2083, file: !378, line: 121, baseType: !685, size: 64, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2083, file: !378, line: 125, baseType: !2088, size: 64, offset: 128)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!679}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2083, file: !378, line: 130, baseType: !2092, size: 64, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{!7}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2083, file: !378, line: 133, baseType: !2096, size: 64, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2083, file: !378, line: 136, baseType: !2096, size: 64, offset: 320)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2083, file: !378, line: 139, baseType: !680, size: 32, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2083, file: !378, line: 143, baseType: !2100, size: 32, offset: 416)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !385, line: 80, baseType: !384)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2083, file: !378, line: 146, baseType: !7, size: 32, offset: 448)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2083, file: !378, line: 147, baseType: !7, size: 32, offset: 480)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2083, file: !378, line: 148, baseType: !7, size: 32, offset: 512)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2083, file: !378, line: 151, baseType: !7, size: 32, offset: 544)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2083, file: !378, line: 152, baseType: !7, size: 32, offset: 576)
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "pass_early_ipa_sra", scope: !2, file: !3, line: 4238, type: !2080, isLocal: false, isDefinition: true)
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(name: "sra_mode", scope: !2, file: !3, line: 100, type: !560, isLocal: true, isDefinition: true)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "candidate_bitmap", scope: !2, file: !3, line: 250, type: !1528, isLocal: true, isDefinition: true)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "should_scalarize_away_bitmap", scope: !2, file: !3, line: 254, type: !1528, isLocal: true, isDefinition: true)
!2114 = !DIGlobalVariableExpression(var: !2115, expr: !DIExpression())
!2115 = distinct !DIGlobalVariable(name: "cannot_scalarize_away_bitmap", scope: !2, file: !3, line: 254, type: !1528, isLocal: true, isDefinition: true)
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "name_obstack", scope: !2, file: !3, line: 257, type: !942, isLocal: true, isDefinition: true)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "access_pool", scope: !2, file: !3, line: 232, type: !2120, isLocal: true, isDefinition: true)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2121, line: 58, baseType: !2122)
!2121 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2121, line: 32, size: 704, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2123, file: !2121, line: 34, baseType: !685, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2123, file: !2121, line: 38, baseType: !1156, size: 64, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2123, file: !2121, line: 41, baseType: !2128, size: 64, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2121, line: 30, baseType: !2129)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2121, line: 26, size: 64, elements: !2131)
!2131 = !{!2132}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2130, file: !2121, line: 28, baseType: !2129, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2123, file: !2121, line: 45, baseType: !682, size: 64, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2123, file: !2121, line: 49, baseType: !1156, size: 64, offset: 256)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2123, file: !2121, line: 51, baseType: !1156, size: 64, offset: 320)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2123, file: !2121, line: 52, baseType: !1156, size: 64, offset: 384)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2123, file: !2121, line: 53, baseType: !1156, size: 64, offset: 448)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2123, file: !2121, line: 54, baseType: !2128, size: 64, offset: 512)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2123, file: !2121, line: 55, baseType: !1156, size: 64, offset: 576)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2123, file: !2121, line: 56, baseType: !1156, size: 64, offset: 640)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "link_pool", scope: !2, file: !3, line: 244, type: !2120, isLocal: true, isDefinition: true)
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "base_access_vec", scope: !2, file: !3, line: 247, type: !1531, isLocal: true, isDefinition: true)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "encountered_apply_args", scope: !2, file: !3, line: 268, type: !679, isLocal: true, isDefinition: true)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "encountered_recursive_call", scope: !2, file: !3, line: 271, type: !679, isLocal: true, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "encountered_unchangable_recursive_call", scope: !2, file: !3, line: 275, type: !679, isLocal: true, isDefinition: true)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "final_bbs", scope: !2, file: !3, line: 284, type: !1528, isLocal: true, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "func_param_count", scope: !2, file: !3, line: 264, type: !680, isLocal: true, isDefinition: true)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "bb_dereferences", scope: !2, file: !3, line: 280, type: !2042, isLocal: true, isDefinition: true)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "work_queue_head", scope: !2, file: !3, line: 261, type: !1986, isLocal: true, isDefinition: true)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "sra_stats", scope: !2, file: !3, line: 340, type: !2161, isLocal: true, isDefinition: true)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 301, size: 320, elements: !2162)
!2162 = !{!2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "replacements", scope: !2161, file: !3, line: 307, baseType: !680, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "exprs", scope: !2161, file: !3, line: 311, baseType: !680, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "subtree_copies", scope: !2161, file: !3, line: 314, baseType: !680, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "subreplacements", scope: !2161, file: !3, line: 317, baseType: !680, size: 32, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !2161, file: !3, line: 320, baseType: !680, size: 32, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "separate_lhs_rhs_handling", scope: !2161, file: !3, line: 325, baseType: !680, size: 32, offset: 160)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "deleted_unused_parameters", scope: !2161, file: !3, line: 328, baseType: !680, size: 32, offset: 192)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "scalar_by_ref_to_by_val", scope: !2161, file: !3, line: 332, baseType: !680, size: 32, offset: 224)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "aggregate_params_reduced", scope: !2161, file: !3, line: 336, baseType: !680, size: 32, offset: 256)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "param_reductions_created", scope: !2161, file: !3, line: 339, baseType: !680, size: 32, offset: 288)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "no_accesses_representant", scope: !2, file: !3, line: 287, type: !1987, isLocal: true, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2176 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2177 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2178 = !{i32 2, !"Dwarf Version", i32 4}
!2179 = !{i32 2, !"Debug Info Version", i32 3}
!2180 = !{i32 1, !"wchar_size", i32 4}
!2181 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2182 = distinct !DISubprogram(name: "vprintf", scope: !2183, file: !2183, line: 39, type: !2184, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2194)
!2183 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!680, !2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !685)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2188, file: !3, baseType: !7, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2188, file: !3, baseType: !7, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2188, file: !3, baseType: !684, size: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2188, file: !3, baseType: !684, size: 64, offset: 128)
!2194 = !{!2195, !2196}
!2195 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2182, file: !2183, line: 39, type: !2186)
!2196 = !DILocalVariable(name: "__arg", arg: 2, scope: !2182, file: !2183, line: 39, type: !2187)
!2197 = !DILocation(line: 0, scope: !2182)
!2198 = !DILocation(line: 41, column: 20, scope: !2182)
!2199 = !DILocation(line: 41, column: 10, scope: !2182)
!2200 = !DILocation(line: 41, column: 3, scope: !2182)
!2201 = distinct !DISubprogram(name: "getchar", scope: !2183, file: !2183, line: 47, type: !2202, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!680}
!2204 = !{}
!2205 = !DILocation(line: 49, column: 16, scope: !2201)
!2206 = !DILocation(line: 49, column: 10, scope: !2201)
!2207 = !DILocation(line: 49, column: 3, scope: !2201)
!2208 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2183, file: !2183, line: 56, type: !2209, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2262)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!680, !2211}
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2213, line: 7, baseType: !2214)
!2213 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2215, line: 49, size: 1728, elements: !2216)
!2215 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2216 = !{!2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2232, !2234, !2235, !2236, !2239, !2241, !2242, !2243, !2246, !2248, !2251, !2254, !2255, !2256, !2257, !2258}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2214, file: !2215, line: 51, baseType: !680, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2214, file: !2215, line: 54, baseType: !682, size: 64, offset: 64)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2214, file: !2215, line: 55, baseType: !682, size: 64, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2214, file: !2215, line: 56, baseType: !682, size: 64, offset: 192)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2214, file: !2215, line: 57, baseType: !682, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2214, file: !2215, line: 58, baseType: !682, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2214, file: !2215, line: 59, baseType: !682, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2214, file: !2215, line: 60, baseType: !682, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2214, file: !2215, line: 61, baseType: !682, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2214, file: !2215, line: 64, baseType: !682, size: 64, offset: 576)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2214, file: !2215, line: 65, baseType: !682, size: 64, offset: 640)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2214, file: !2215, line: 66, baseType: !682, size: 64, offset: 704)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2214, file: !2215, line: 68, baseType: !2230, size: 64, offset: 768)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2215, line: 36, flags: DIFlagFwdDecl)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2214, file: !2215, line: 70, baseType: !2233, size: 64, offset: 832)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2214, file: !2215, line: 72, baseType: !680, size: 32, offset: 896)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2214, file: !2215, line: 73, baseType: !680, size: 32, offset: 928)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2214, file: !2215, line: 74, baseType: !2237, size: 64, offset: 960)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2238, line: 152, baseType: !745)
!2238 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2214, file: !2215, line: 77, baseType: !2240, size: 16, offset: 1024)
!2240 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2214, file: !2215, line: 78, baseType: !1808, size: 8, offset: 1040)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2214, file: !2215, line: 79, baseType: !787, size: 8, offset: 1048)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2214, file: !2215, line: 81, baseType: !2244, size: 64, offset: 1088)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2215, line: 43, baseType: null)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2214, file: !2215, line: 89, baseType: !2247, size: 64, offset: 1152)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2238, line: 153, baseType: !745)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2214, file: !2215, line: 91, baseType: !2249, size: 64, offset: 1216)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2215, line: 37, flags: DIFlagFwdDecl)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2214, file: !2215, line: 92, baseType: !2252, size: 64, offset: 1280)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2215, line: 38, flags: DIFlagFwdDecl)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2214, file: !2215, line: 93, baseType: !2233, size: 64, offset: 1344)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2214, file: !2215, line: 94, baseType: !684, size: 64, offset: 1408)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2214, file: !2215, line: 95, baseType: !1156, size: 64, offset: 1472)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2214, file: !2215, line: 96, baseType: !680, size: 32, offset: 1536)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2214, file: !2215, line: 98, baseType: !2259, size: 160, offset: 1568)
!2259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 160, elements: !2260)
!2260 = !{!2261}
!2261 = !DISubrange(count: 20)
!2262 = !{!2263}
!2263 = !DILocalVariable(name: "__fp", arg: 1, scope: !2208, file: !2183, line: 56, type: !2211)
!2264 = !DILocation(line: 0, scope: !2208)
!2265 = !DILocation(line: 58, column: 10, scope: !2208)
!2266 = !DILocation(line: 58, column: 3, scope: !2208)
!2267 = distinct !DISubprogram(name: "getc_unlocked", scope: !2183, file: !2183, line: 66, type: !2209, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2268)
!2268 = !{!2269}
!2269 = !DILocalVariable(name: "__fp", arg: 1, scope: !2267, file: !2183, line: 66, type: !2211)
!2270 = !DILocation(line: 0, scope: !2267)
!2271 = !DILocation(line: 68, column: 10, scope: !2267)
!2272 = !DILocation(line: 68, column: 3, scope: !2267)
!2273 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2183, file: !2183, line: 73, type: !2202, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2274 = !DILocation(line: 75, column: 10, scope: !2273)
!2275 = !DILocation(line: 75, column: 3, scope: !2273)
!2276 = distinct !DISubprogram(name: "putchar", scope: !2183, file: !2183, line: 82, type: !2277, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2279)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!680, !680}
!2279 = !{!2280}
!2280 = !DILocalVariable(name: "__c", arg: 1, scope: !2276, file: !2183, line: 82, type: !680)
!2281 = !DILocation(line: 0, scope: !2276)
!2282 = !DILocation(line: 84, column: 21, scope: !2276)
!2283 = !DILocation(line: 84, column: 10, scope: !2276)
!2284 = !DILocation(line: 84, column: 3, scope: !2276)
!2285 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2183, file: !2183, line: 91, type: !2286, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2288)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{!680, !680, !2211}
!2288 = !{!2289, !2290}
!2289 = !DILocalVariable(name: "__c", arg: 1, scope: !2285, file: !2183, line: 91, type: !680)
!2290 = !DILocalVariable(name: "__stream", arg: 2, scope: !2285, file: !2183, line: 91, type: !2211)
!2291 = !DILocation(line: 0, scope: !2285)
!2292 = !DILocation(line: 93, column: 10, scope: !2285)
!2293 = !DILocation(line: 93, column: 3, scope: !2285)
!2294 = distinct !DISubprogram(name: "putc_unlocked", scope: !2183, file: !2183, line: 101, type: !2286, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2295)
!2295 = !{!2296, !2297}
!2296 = !DILocalVariable(name: "__c", arg: 1, scope: !2294, file: !2183, line: 101, type: !680)
!2297 = !DILocalVariable(name: "__stream", arg: 2, scope: !2294, file: !2183, line: 101, type: !2211)
!2298 = !DILocation(line: 0, scope: !2294)
!2299 = !DILocation(line: 103, column: 10, scope: !2294)
!2300 = !DILocation(line: 103, column: 3, scope: !2294)
!2301 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2183, file: !2183, line: 108, type: !2277, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2302)
!2302 = !{!2303}
!2303 = !DILocalVariable(name: "__c", arg: 1, scope: !2301, file: !2183, line: 108, type: !680)
!2304 = !DILocation(line: 0, scope: !2301)
!2305 = !DILocation(line: 110, column: 10, scope: !2301)
!2306 = !DILocation(line: 110, column: 3, scope: !2301)
!2307 = distinct !DISubprogram(name: "getline", scope: !2183, file: !2183, line: 118, type: !2308, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2312)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!2310, !681, !2311, !2211}
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2238, line: 193, baseType: !745)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!2312 = !{!2313, !2314, !2315}
!2313 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2307, file: !2183, line: 118, type: !681)
!2314 = !DILocalVariable(name: "__n", arg: 2, scope: !2307, file: !2183, line: 118, type: !2311)
!2315 = !DILocalVariable(name: "__stream", arg: 3, scope: !2307, file: !2183, line: 118, type: !2211)
!2316 = !DILocation(line: 0, scope: !2307)
!2317 = !DILocation(line: 120, column: 10, scope: !2307)
!2318 = !DILocation(line: 120, column: 3, scope: !2307)
!2319 = distinct !DISubprogram(name: "feof_unlocked", scope: !2183, file: !2183, line: 128, type: !2209, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2320)
!2320 = !{!2321}
!2321 = !DILocalVariable(name: "__stream", arg: 1, scope: !2319, file: !2183, line: 128, type: !2211)
!2322 = !DILocation(line: 0, scope: !2319)
!2323 = !DILocation(line: 130, column: 10, scope: !2319)
!2324 = !DILocation(line: 130, column: 3, scope: !2319)
!2325 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2183, file: !2183, line: 135, type: !2209, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2326)
!2326 = !{!2327}
!2327 = !DILocalVariable(name: "__stream", arg: 1, scope: !2325, file: !2183, line: 135, type: !2211)
!2328 = !DILocation(line: 0, scope: !2325)
!2329 = !DILocation(line: 137, column: 10, scope: !2325)
!2330 = !DILocation(line: 137, column: 3, scope: !2325)
!2331 = distinct !DISubprogram(name: "tolower", scope: !2332, file: !2332, line: 207, type: !2277, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2333)
!2332 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2333 = !{!2334}
!2334 = !DILocalVariable(name: "__c", arg: 1, scope: !2331, file: !2332, line: 207, type: !680)
!2335 = !DILocation(line: 0, scope: !2331)
!2336 = !DILocation(line: 209, column: 22, scope: !2331)
!2337 = !DILocation(line: 209, column: 39, scope: !2331)
!2338 = !DILocation(line: 209, column: 38, scope: !2331)
!2339 = !DILocation(line: 209, column: 37, scope: !2331)
!2340 = !DILocation(line: 209, column: 10, scope: !2331)
!2341 = !DILocation(line: 209, column: 3, scope: !2331)
!2342 = distinct !DISubprogram(name: "toupper", scope: !2332, file: !2332, line: 213, type: !2277, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2343)
!2343 = !{!2344}
!2344 = !DILocalVariable(name: "__c", arg: 1, scope: !2342, file: !2332, line: 213, type: !680)
!2345 = !DILocation(line: 0, scope: !2342)
!2346 = !DILocation(line: 215, column: 22, scope: !2342)
!2347 = !DILocation(line: 215, column: 39, scope: !2342)
!2348 = !DILocation(line: 215, column: 38, scope: !2342)
!2349 = !DILocation(line: 215, column: 37, scope: !2342)
!2350 = !DILocation(line: 215, column: 10, scope: !2342)
!2351 = !DILocation(line: 215, column: 3, scope: !2342)
!2352 = distinct !DISubprogram(name: "atoi", scope: !2353, file: !2353, line: 361, type: !2354, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2356)
!2353 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2354 = !DISubroutineType(types: !2355)
!2355 = !{!680, !685}
!2356 = !{!2357}
!2357 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2352, file: !2353, line: 361, type: !685)
!2358 = !DILocation(line: 0, scope: !2352)
!2359 = !DILocation(line: 363, column: 16, scope: !2352)
!2360 = !DILocation(line: 363, column: 10, scope: !2352)
!2361 = !DILocation(line: 363, column: 3, scope: !2352)
!2362 = distinct !DISubprogram(name: "atol", scope: !2353, file: !2353, line: 366, type: !2363, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!745, !685}
!2365 = !{!2366}
!2366 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2362, file: !2353, line: 366, type: !685)
!2367 = !DILocation(line: 0, scope: !2362)
!2368 = !DILocation(line: 368, column: 10, scope: !2362)
!2369 = !DILocation(line: 368, column: 3, scope: !2362)
!2370 = distinct !DISubprogram(name: "atoll", scope: !2353, file: !2353, line: 373, type: !2371, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2374)
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!2373, !685}
!2373 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2374 = !{!2375}
!2375 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2370, file: !2353, line: 373, type: !685)
!2376 = !DILocation(line: 0, scope: !2370)
!2377 = !DILocation(line: 375, column: 10, scope: !2370)
!2378 = !DILocation(line: 375, column: 3, scope: !2370)
!2379 = distinct !DISubprogram(name: "bsearch", scope: !2380, file: !2380, line: 20, type: !2381, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!2380 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2381 = !DISubroutineType(types: !2382)
!2382 = !{!684, !1453, !1453, !1156, !1156, !2383}
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2353, line: 808, baseType: !1457)
!2384 = !{!2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394}
!2385 = !DILocalVariable(name: "__key", arg: 1, scope: !2379, file: !2380, line: 20, type: !1453)
!2386 = !DILocalVariable(name: "__base", arg: 2, scope: !2379, file: !2380, line: 20, type: !1453)
!2387 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2379, file: !2380, line: 20, type: !1156)
!2388 = !DILocalVariable(name: "__size", arg: 4, scope: !2379, file: !2380, line: 20, type: !1156)
!2389 = !DILocalVariable(name: "__compar", arg: 5, scope: !2379, file: !2380, line: 21, type: !2383)
!2390 = !DILocalVariable(name: "__l", scope: !2379, file: !2380, line: 23, type: !1156)
!2391 = !DILocalVariable(name: "__u", scope: !2379, file: !2380, line: 23, type: !1156)
!2392 = !DILocalVariable(name: "__idx", scope: !2379, file: !2380, line: 23, type: !1156)
!2393 = !DILocalVariable(name: "__p", scope: !2379, file: !2380, line: 24, type: !1453)
!2394 = !DILocalVariable(name: "__comparison", scope: !2379, file: !2380, line: 25, type: !680)
!2395 = !DILocation(line: 0, scope: !2379)
!2396 = !DILocation(line: 29, column: 3, scope: !2379)
!2397 = !DILocation(line: 27, column: 7, scope: !2379)
!2398 = !DILocation(line: 29, column: 14, scope: !2379)
!2399 = !DILocation(line: 31, column: 20, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2379, file: !2380, line: 30, column: 5)
!2401 = !DILocation(line: 31, column: 27, scope: !2400)
!2402 = !DILocation(line: 32, column: 56, scope: !2400)
!2403 = !DILocation(line: 32, column: 47, scope: !2400)
!2404 = !DILocation(line: 33, column: 22, scope: !2400)
!2405 = !DILocation(line: 34, column: 24, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2400, file: !2380, line: 34, column: 11)
!2407 = !DILocation(line: 34, column: 11, scope: !2400)
!2408 = !DILocation(line: 36, column: 29, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2406, file: !2380, line: 36, column: 16)
!2410 = !DILocation(line: 36, column: 16, scope: !2406)
!2411 = !DILocation(line: 37, column: 14, scope: !2409)
!2412 = distinct !{!2412, !2396, !2413}
!2413 = !DILocation(line: 40, column: 5, scope: !2379)
!2414 = !DILocation(line: 43, column: 1, scope: !2379)
!2415 = distinct !DISubprogram(name: "atof", scope: !2416, file: !2416, line: 25, type: !2417, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2420)
!2416 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!2419, !685}
!2419 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2420 = !{!2421}
!2421 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2415, file: !2416, line: 25, type: !685)
!2422 = !DILocation(line: 0, scope: !2415)
!2423 = !DILocation(line: 27, column: 10, scope: !2415)
!2424 = !DILocation(line: 27, column: 3, scope: !2415)
!2425 = distinct !DISubprogram(name: "strtoimax", scope: !2426, file: !2426, line: 324, type: !2427, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2433)
!2426 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2427 = !DISubroutineType(types: !2428)
!2428 = !{!2429, !2186, !2432, !680}
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2430, line: 101, baseType: !2431)
!2430 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2238, line: 72, baseType: !745)
!2432 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !681)
!2433 = !{!2434, !2435, !2436}
!2434 = !DILocalVariable(name: "nptr", arg: 1, scope: !2425, file: !2426, line: 324, type: !2186)
!2435 = !DILocalVariable(name: "endptr", arg: 2, scope: !2425, file: !2426, line: 324, type: !2432)
!2436 = !DILocalVariable(name: "base", arg: 3, scope: !2425, file: !2426, line: 324, type: !680)
!2437 = !DILocation(line: 0, scope: !2425)
!2438 = !DILocation(line: 327, column: 10, scope: !2425)
!2439 = !DILocation(line: 327, column: 3, scope: !2425)
!2440 = distinct !DISubprogram(name: "strtoumax", scope: !2426, file: !2426, line: 336, type: !2441, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2445)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!2443, !2186, !2432, !680}
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2430, line: 102, baseType: !2444)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2238, line: 73, baseType: !743)
!2445 = !{!2446, !2447, !2448}
!2446 = !DILocalVariable(name: "nptr", arg: 1, scope: !2440, file: !2426, line: 336, type: !2186)
!2447 = !DILocalVariable(name: "endptr", arg: 2, scope: !2440, file: !2426, line: 336, type: !2432)
!2448 = !DILocalVariable(name: "base", arg: 3, scope: !2440, file: !2426, line: 336, type: !680)
!2449 = !DILocation(line: 0, scope: !2440)
!2450 = !DILocation(line: 339, column: 10, scope: !2440)
!2451 = !DILocation(line: 339, column: 3, scope: !2440)
!2452 = distinct !DISubprogram(name: "wcstoimax", scope: !2426, file: !2426, line: 348, type: !2453, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2462)
!2453 = !DISubroutineType(types: !2454)
!2454 = !{!2429, !2455, !2459, !680}
!2455 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2456)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2458)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2426, line: 34, baseType: !680)
!2459 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2460)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2462 = !{!2463, !2464, !2465}
!2463 = !DILocalVariable(name: "nptr", arg: 1, scope: !2452, file: !2426, line: 348, type: !2455)
!2464 = !DILocalVariable(name: "endptr", arg: 2, scope: !2452, file: !2426, line: 348, type: !2459)
!2465 = !DILocalVariable(name: "base", arg: 3, scope: !2452, file: !2426, line: 348, type: !680)
!2466 = !DILocation(line: 0, scope: !2452)
!2467 = !DILocation(line: 351, column: 10, scope: !2452)
!2468 = !DILocation(line: 351, column: 3, scope: !2452)
!2469 = distinct !DISubprogram(name: "wcstoumax", scope: !2426, file: !2426, line: 362, type: !2470, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2472)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!2443, !2455, !2459, !680}
!2472 = !{!2473, !2474, !2475}
!2473 = !DILocalVariable(name: "nptr", arg: 1, scope: !2469, file: !2426, line: 362, type: !2455)
!2474 = !DILocalVariable(name: "endptr", arg: 2, scope: !2469, file: !2426, line: 362, type: !2459)
!2475 = !DILocalVariable(name: "base", arg: 3, scope: !2469, file: !2426, line: 362, type: !680)
!2476 = !DILocation(line: 0, scope: !2469)
!2477 = !DILocation(line: 365, column: 10, scope: !2469)
!2478 = !DILocation(line: 365, column: 3, scope: !2469)
!2479 = distinct !DISubprogram(name: "stat", scope: !2480, file: !2480, line: 453, type: !2481, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2518)
!2480 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!680, !685, !2483}
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2485, line: 46, size: 1152, elements: !2486)
!2485 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2486 = !{!2487, !2489, !2491, !2493, !2495, !2497, !2499, !2500, !2501, !2502, !2504, !2506, !2514, !2515, !2516}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2484, file: !2485, line: 48, baseType: !2488, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2238, line: 145, baseType: !743)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2484, file: !2485, line: 53, baseType: !2490, size: 64, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2238, line: 148, baseType: !743)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2484, file: !2485, line: 61, baseType: !2492, size: 64, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2238, line: 151, baseType: !743)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2484, file: !2485, line: 62, baseType: !2494, size: 32, offset: 192)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2238, line: 150, baseType: !7)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2484, file: !2485, line: 64, baseType: !2496, size: 32, offset: 224)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2238, line: 146, baseType: !7)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2484, file: !2485, line: 65, baseType: !2498, size: 32, offset: 256)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2238, line: 147, baseType: !7)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2484, file: !2485, line: 67, baseType: !680, size: 32, offset: 288)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2484, file: !2485, line: 69, baseType: !2488, size: 64, offset: 320)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2484, file: !2485, line: 74, baseType: !2237, size: 64, offset: 384)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2484, file: !2485, line: 78, baseType: !2503, size: 64, offset: 448)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2238, line: 174, baseType: !745)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2484, file: !2485, line: 80, baseType: !2505, size: 64, offset: 512)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2238, line: 179, baseType: !745)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2484, file: !2485, line: 91, baseType: !2507, size: 128, offset: 576)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2508, line: 10, size: 128, elements: !2509)
!2508 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2509 = !{!2510, !2512}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2507, file: !2508, line: 12, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2238, line: 160, baseType: !745)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2507, file: !2508, line: 16, baseType: !2513, size: 64, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2238, line: 196, baseType: !745)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2484, file: !2485, line: 92, baseType: !2507, size: 128, offset: 704)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2484, file: !2485, line: 93, baseType: !2507, size: 128, offset: 832)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2484, file: !2485, line: 106, baseType: !2517, size: 192, offset: 960)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2513, size: 192, elements: !763)
!2518 = !{!2519, !2520}
!2519 = !DILocalVariable(name: "__path", arg: 1, scope: !2479, file: !2480, line: 453, type: !685)
!2520 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2479, file: !2480, line: 453, type: !2483)
!2521 = !DILocation(line: 0, scope: !2479)
!2522 = !DILocation(line: 455, column: 10, scope: !2479)
!2523 = !DILocation(line: 455, column: 3, scope: !2479)
!2524 = distinct !DISubprogram(name: "lstat", scope: !2480, file: !2480, line: 460, type: !2481, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2525)
!2525 = !{!2526, !2527}
!2526 = !DILocalVariable(name: "__path", arg: 1, scope: !2524, file: !2480, line: 460, type: !685)
!2527 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2524, file: !2480, line: 460, type: !2483)
!2528 = !DILocation(line: 0, scope: !2524)
!2529 = !DILocation(line: 462, column: 10, scope: !2524)
!2530 = !DILocation(line: 462, column: 3, scope: !2524)
!2531 = distinct !DISubprogram(name: "fstat", scope: !2480, file: !2480, line: 467, type: !2532, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2534)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!680, !680, !2483}
!2534 = !{!2535, !2536}
!2535 = !DILocalVariable(name: "__fd", arg: 1, scope: !2531, file: !2480, line: 467, type: !680)
!2536 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2531, file: !2480, line: 467, type: !2483)
!2537 = !DILocation(line: 0, scope: !2531)
!2538 = !DILocation(line: 469, column: 10, scope: !2531)
!2539 = !DILocation(line: 469, column: 3, scope: !2531)
!2540 = distinct !DISubprogram(name: "fstatat", scope: !2480, file: !2480, line: 474, type: !2541, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2543)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!680, !680, !685, !2483, !680}
!2543 = !{!2544, !2545, !2546, !2547}
!2544 = !DILocalVariable(name: "__fd", arg: 1, scope: !2540, file: !2480, line: 474, type: !680)
!2545 = !DILocalVariable(name: "__filename", arg: 2, scope: !2540, file: !2480, line: 474, type: !685)
!2546 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2540, file: !2480, line: 474, type: !2483)
!2547 = !DILocalVariable(name: "__flag", arg: 4, scope: !2540, file: !2480, line: 474, type: !680)
!2548 = !DILocation(line: 0, scope: !2540)
!2549 = !DILocation(line: 477, column: 10, scope: !2540)
!2550 = !DILocation(line: 477, column: 3, scope: !2540)
!2551 = distinct !DISubprogram(name: "mknod", scope: !2480, file: !2480, line: 483, type: !2552, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2554)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!680, !685, !2494, !2488}
!2554 = !{!2555, !2556, !2557}
!2555 = !DILocalVariable(name: "__path", arg: 1, scope: !2551, file: !2480, line: 483, type: !685)
!2556 = !DILocalVariable(name: "__mode", arg: 2, scope: !2551, file: !2480, line: 483, type: !2494)
!2557 = !DILocalVariable(name: "__dev", arg: 3, scope: !2551, file: !2480, line: 483, type: !2488)
!2558 = !DILocation(line: 0, scope: !2551)
!2559 = !DILocation(line: 485, column: 10, scope: !2551)
!2560 = !DILocation(line: 485, column: 3, scope: !2551)
!2561 = distinct !DISubprogram(name: "mknodat", scope: !2480, file: !2480, line: 491, type: !2562, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!680, !680, !685, !2494, !2488}
!2564 = !{!2565, !2566, !2567, !2568}
!2565 = !DILocalVariable(name: "__fd", arg: 1, scope: !2561, file: !2480, line: 491, type: !680)
!2566 = !DILocalVariable(name: "__path", arg: 2, scope: !2561, file: !2480, line: 491, type: !685)
!2567 = !DILocalVariable(name: "__mode", arg: 3, scope: !2561, file: !2480, line: 491, type: !2494)
!2568 = !DILocalVariable(name: "__dev", arg: 4, scope: !2561, file: !2480, line: 491, type: !2488)
!2569 = !DILocation(line: 0, scope: !2561)
!2570 = !DILocation(line: 494, column: 10, scope: !2561)
!2571 = !DILocation(line: 494, column: 3, scope: !2561)
!2572 = distinct !DISubprogram(name: "stat64", scope: !2480, file: !2480, line: 502, type: !2573, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2595)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!680, !685, !2575}
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2485, line: 119, size: 1152, elements: !2577)
!2577 = !{!2578, !2579, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2591, !2592, !2593, !2594}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2576, file: !2485, line: 121, baseType: !2488, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2576, file: !2485, line: 123, baseType: !2580, size: 64, offset: 64)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2238, line: 149, baseType: !743)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2576, file: !2485, line: 124, baseType: !2492, size: 64, offset: 128)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2576, file: !2485, line: 125, baseType: !2494, size: 32, offset: 192)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2576, file: !2485, line: 132, baseType: !2496, size: 32, offset: 224)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2576, file: !2485, line: 133, baseType: !2498, size: 32, offset: 256)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2576, file: !2485, line: 135, baseType: !680, size: 32, offset: 288)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2576, file: !2485, line: 136, baseType: !2488, size: 64, offset: 320)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2576, file: !2485, line: 137, baseType: !2237, size: 64, offset: 384)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2576, file: !2485, line: 143, baseType: !2503, size: 64, offset: 448)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2576, file: !2485, line: 144, baseType: !2590, size: 64, offset: 512)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2238, line: 180, baseType: !745)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2576, file: !2485, line: 152, baseType: !2507, size: 128, offset: 576)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2576, file: !2485, line: 153, baseType: !2507, size: 128, offset: 704)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2576, file: !2485, line: 154, baseType: !2507, size: 128, offset: 832)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2576, file: !2485, line: 164, baseType: !2517, size: 192, offset: 960)
!2595 = !{!2596, !2597}
!2596 = !DILocalVariable(name: "__path", arg: 1, scope: !2572, file: !2480, line: 502, type: !685)
!2597 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2572, file: !2480, line: 502, type: !2575)
!2598 = !DILocation(line: 0, scope: !2572)
!2599 = !DILocation(line: 504, column: 10, scope: !2572)
!2600 = !DILocation(line: 504, column: 3, scope: !2572)
!2601 = distinct !DISubprogram(name: "lstat64", scope: !2480, file: !2480, line: 509, type: !2573, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2602)
!2602 = !{!2603, !2604}
!2603 = !DILocalVariable(name: "__path", arg: 1, scope: !2601, file: !2480, line: 509, type: !685)
!2604 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2601, file: !2480, line: 509, type: !2575)
!2605 = !DILocation(line: 0, scope: !2601)
!2606 = !DILocation(line: 511, column: 10, scope: !2601)
!2607 = !DILocation(line: 511, column: 3, scope: !2601)
!2608 = distinct !DISubprogram(name: "fstat64", scope: !2480, file: !2480, line: 516, type: !2609, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2611)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!680, !680, !2575}
!2611 = !{!2612, !2613}
!2612 = !DILocalVariable(name: "__fd", arg: 1, scope: !2608, file: !2480, line: 516, type: !680)
!2613 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2608, file: !2480, line: 516, type: !2575)
!2614 = !DILocation(line: 0, scope: !2608)
!2615 = !DILocation(line: 518, column: 10, scope: !2608)
!2616 = !DILocation(line: 518, column: 3, scope: !2608)
!2617 = distinct !DISubprogram(name: "fstatat64", scope: !2480, file: !2480, line: 523, type: !2618, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2620)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{!680, !680, !685, !2575, !680}
!2620 = !{!2621, !2622, !2623, !2624}
!2621 = !DILocalVariable(name: "__fd", arg: 1, scope: !2617, file: !2480, line: 523, type: !680)
!2622 = !DILocalVariable(name: "__filename", arg: 2, scope: !2617, file: !2480, line: 523, type: !685)
!2623 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2617, file: !2480, line: 523, type: !2575)
!2624 = !DILocalVariable(name: "__flag", arg: 4, scope: !2617, file: !2480, line: 523, type: !680)
!2625 = !DILocation(line: 0, scope: !2617)
!2626 = !DILocation(line: 526, column: 10, scope: !2617)
!2627 = !DILocation(line: 526, column: 3, scope: !2617)
!2628 = distinct !DISubprogram(name: "build_ref_for_offset", scope: !3, file: !3, line: 1481, type: !2629, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2631)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!679, !1045, !689, !745, !689, !679}
!2631 = !{!2632, !2633, !2634, !2635, !2636, !2637}
!2632 = !DILocalVariable(name: "expr", arg: 1, scope: !2628, file: !3, line: 1481, type: !1045)
!2633 = !DILocalVariable(name: "type", arg: 2, scope: !2628, file: !3, line: 1481, type: !689)
!2634 = !DILocalVariable(name: "offset", arg: 3, scope: !2628, file: !3, line: 1481, type: !745)
!2635 = !DILocalVariable(name: "exp_type", arg: 4, scope: !2628, file: !3, line: 1482, type: !689)
!2636 = !DILocalVariable(name: "allow_ptr", arg: 5, scope: !2628, file: !3, line: 1482, type: !679)
!2637 = !DILocalVariable(name: "loc", scope: !2628, file: !3, line: 1484, type: !814)
!2638 = !DILocation(line: 0, scope: !2628)
!2639 = !DILocation(line: 1484, column: 20, scope: !2628)
!2640 = !DILocation(line: 1484, column: 27, scope: !2628)
!2641 = !DILocation(line: 1486, column: 7, scope: !2628)
!2642 = !DILocation(line: 1487, column: 27, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 1486, column: 7)
!2644 = !DILocation(line: 1487, column: 13, scope: !2643)
!2645 = !DILocation(line: 1487, column: 11, scope: !2643)
!2646 = !DILocation(line: 1487, column: 5, scope: !2643)
!2647 = !DILocation(line: 1489, column: 7, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 1489, column: 7)
!2649 = !DILocation(line: 1489, column: 17, scope: !2648)
!2650 = !DILocation(line: 1489, column: 20, scope: !2648)
!2651 = !DILocation(line: 1489, column: 7, scope: !2628)
!2652 = !DILocation(line: 1491, column: 14, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 1490, column: 5)
!2654 = !DILocation(line: 1492, column: 11, scope: !2653)
!2655 = !DILocation(line: 1493, column: 10, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 1492, column: 11)
!2657 = !DILocation(line: 1493, column: 8, scope: !2656)
!2658 = !DILocation(line: 1493, column: 2, scope: !2656)
!2659 = !DILocation(line: 1496, column: 10, scope: !2628)
!2660 = !DILocation(line: 1496, column: 3, scope: !2628)
!2661 = distinct !DISubprogram(name: "build_ref_for_offset_1", scope: !3, file: !3, line: 1378, type: !2662, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2664)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!679, !1045, !689, !745, !689}
!2664 = !{!2665, !2666, !2667, !2668, !2669, !2671, !2672, !2673, !2674, !2675, !2680, !2681, !2682}
!2665 = !DILocalVariable(name: "res", arg: 1, scope: !2661, file: !3, line: 1378, type: !1045)
!2666 = !DILocalVariable(name: "type", arg: 2, scope: !2661, file: !3, line: 1378, type: !689)
!2667 = !DILocalVariable(name: "offset", arg: 3, scope: !2661, file: !3, line: 1378, type: !745)
!2668 = !DILocalVariable(name: "exp_type", arg: 4, scope: !2661, file: !3, line: 1379, type: !689)
!2669 = !DILocalVariable(name: "fld", scope: !2670, file: !3, line: 1383, type: !689)
!2670 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 1382, column: 5)
!2671 = !DILocalVariable(name: "tr_size", scope: !2670, file: !3, line: 1384, type: !689)
!2672 = !DILocalVariable(name: "index", scope: !2670, file: !3, line: 1384, type: !689)
!2673 = !DILocalVariable(name: "minidx", scope: !2670, file: !3, line: 1384, type: !689)
!2674 = !DILocalVariable(name: "el_size", scope: !2670, file: !3, line: 1385, type: !745)
!2675 = !DILocalVariable(name: "pos", scope: !2676, file: !3, line: 1398, type: !745)
!2676 = distinct !DILexicalBlock(scope: !2677, file: !3, line: 1397, column: 6)
!2677 = distinct !DILexicalBlock(scope: !2678, file: !3, line: 1396, column: 4)
!2678 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 1396, column: 4)
!2679 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 1392, column: 2)
!2680 = !DILocalVariable(name: "size", scope: !2676, file: !3, line: 1398, type: !745)
!2681 = !DILocalVariable(name: "expr", scope: !2676, file: !3, line: 1399, type: !689)
!2682 = !DILocalVariable(name: "expr_ptr", scope: !2676, file: !3, line: 1399, type: !1045)
!2683 = !DILocation(line: 0, scope: !2661)
!2684 = !DILocation(line: 0, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 1387, column: 11)
!2686 = !DILocation(line: 0, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 1445, column: 8)
!2688 = !DILocation(line: 0, scope: !2676)
!2689 = !DILocation(line: 0, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1429, column: 9)
!2691 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 1428, column: 3)
!2692 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 1426, column: 12)
!2693 = !DILocation(line: 0, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 1461, column: 8)
!2695 = !DILocation(line: 1381, column: 3, scope: !2661)
!2696 = !DILocation(line: 1387, column: 18, scope: !2685)
!2697 = !DILocation(line: 1387, column: 23, scope: !2685)
!2698 = !DILocation(line: 1388, column: 7, scope: !2685)
!2699 = !DILocation(line: 1387, column: 11, scope: !2670)
!2700 = !DILocation(line: 1391, column: 15, scope: !2670)
!2701 = !DILocation(line: 1391, column: 7, scope: !2670)
!2702 = !DILocation(line: 1396, column: 15, scope: !2678)
!2703 = !DILocation(line: 1396, column: 9, scope: !2678)
!2704 = !DILocation(line: 0, scope: !2678)
!2705 = !DILocation(line: 0, scope: !2670)
!2706 = !DILocation(line: 1396, column: 4, scope: !2678)
!2707 = !DILocation(line: 1399, column: 8, scope: !2676)
!2708 = !DILocation(line: 1401, column: 12, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 1401, column: 12)
!2710 = !DILocation(line: 1401, column: 28, scope: !2709)
!2711 = !DILocation(line: 1401, column: 12, scope: !2676)
!2712 = !DILocation(line: 1404, column: 14, scope: !2676)
!2713 = !DILocation(line: 1405, column: 8, scope: !2676)
!2714 = !DILocation(line: 1406, column: 18, scope: !2676)
!2715 = !DILocation(line: 1407, column: 13, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 1407, column: 12)
!2717 = !DILocation(line: 1407, column: 21, scope: !2716)
!2718 = !DILocation(line: 1407, column: 25, scope: !2716)
!2719 = !DILocation(line: 1407, column: 12, scope: !2676)
!2720 = !DILocation(line: 1409, column: 15, scope: !2676)
!2721 = !DILocation(line: 1410, column: 17, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 1410, column: 12)
!2723 = !DILocation(line: 1410, column: 12, scope: !2676)
!2724 = !DILocation(line: 1415, column: 21, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 1415, column: 17)
!2726 = !DILocation(line: 1415, column: 38, scope: !2725)
!2727 = !DILocation(line: 1415, column: 46, scope: !2725)
!2728 = !DILocation(line: 1415, column: 30, scope: !2725)
!2729 = !DILocation(line: 1412, column: 13, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 1412, column: 9)
!2731 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 1411, column: 3)
!2732 = !DILocation(line: 1412, column: 9, scope: !2731)
!2733 = !DILocation(line: 1426, column: 46, scope: !2692)
!2734 = !DILocation(line: 1427, column: 15, scope: !2692)
!2735 = !DILocation(line: 1426, column: 12, scope: !2692)
!2736 = !DILocation(line: 1426, column: 12, scope: !2676)
!2737 = !DILocation(line: 1429, column: 9, scope: !2691)
!2738 = !DILocation(line: 1430, column: 7, scope: !2690)
!2739 = !DILocation(line: 1433, column: 6, scope: !2677)
!2740 = !DILocation(line: 1396, column: 46, scope: !2677)
!2741 = !DILocation(line: 1396, column: 4, scope: !2677)
!2742 = distinct !{!2742, !2706, !2743}
!2743 = !DILocation(line: 1433, column: 6, scope: !2678)
!2744 = !DILocation(line: 1420, column: 12, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 1419, column: 3)
!2746 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 1418, column: 12)
!2747 = !DILocation(line: 1420, column: 10, scope: !2745)
!2748 = !DILocation(line: 1430, column: 14, scope: !2690)
!2749 = !DILocation(line: 1430, column: 12, scope: !2690)
!2750 = !DILocation(line: 1437, column: 14, scope: !2679)
!2751 = !DILocation(line: 1438, column: 9, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 1438, column: 8)
!2753 = !DILocation(line: 1438, column: 17, scope: !2752)
!2754 = !DILocation(line: 1438, column: 21, scope: !2752)
!2755 = !DILocation(line: 1438, column: 8, scope: !2679)
!2756 = !DILocation(line: 1440, column: 14, scope: !2679)
!2757 = !DILocation(line: 1442, column: 13, scope: !2679)
!2758 = !DILocation(line: 1443, column: 8, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 1443, column: 8)
!2760 = !DILocation(line: 1443, column: 27, scope: !2759)
!2761 = !DILocation(line: 1443, column: 53, scope: !2759)
!2762 = !DILocation(line: 1443, column: 42, scope: !2759)
!2763 = !DILocation(line: 1445, column: 8, scope: !2679)
!2764 = !DILocation(line: 1447, column: 58, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 1446, column: 6)
!2766 = !DILocation(line: 1447, column: 16, scope: !2765)
!2767 = !DILocation(line: 1448, column: 13, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 1448, column: 12)
!2769 = !DILocation(line: 1448, column: 12, scope: !2765)
!2770 = !DILocation(line: 1449, column: 11, scope: !2768)
!2771 = !DILocation(line: 1449, column: 3, scope: !2768)
!2772 = !DILocation(line: 0, scope: !2765)
!2773 = !DILocation(line: 1450, column: 15, scope: !2765)
!2774 = !DILocation(line: 1450, column: 13, scope: !2765)
!2775 = !DILocation(line: 1452, column: 6, scope: !2765)
!2776 = !DILocation(line: 1453, column: 20, scope: !2679)
!2777 = !DILocation(line: 1454, column: 11, scope: !2679)
!2778 = !DILocation(line: 1466, column: 5, scope: !2661)
!2779 = !DILocation(line: 1458, column: 8, scope: !2679)
!2780 = distinct !{!2780, !2695, !2778}
!2781 = !DILocation(line: 1467, column: 1, scope: !2661)
!2782 = distinct !DISubprogram(name: "gate_intra_sra", scope: !3, file: !3, line: 2845, type: !2089, scopeLine: 2846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2783 = !DILocation(line: 2847, column: 10, scope: !2782)
!2784 = !DILocation(line: 2847, column: 24, scope: !2782)
!2785 = !DILocation(line: 2847, column: 3, scope: !2782)
!2786 = distinct !DISubprogram(name: "early_intra_sra", scope: !3, file: !3, line: 2829, type: !2093, scopeLine: 2830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2787 = !DILocation(line: 2831, column: 12, scope: !2786)
!2788 = !DILocation(line: 2832, column: 10, scope: !2786)
!2789 = !DILocation(line: 2832, column: 3, scope: !2786)
!2790 = distinct !DISubprogram(name: "late_intra_sra", scope: !3, file: !3, line: 2837, type: !2093, scopeLine: 2838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2791 = !DILocation(line: 2839, column: 12, scope: !2790)
!2792 = !DILocation(line: 2840, column: 10, scope: !2790)
!2793 = !DILocation(line: 2840, column: 3, scope: !2790)
!2794 = distinct !DISubprogram(name: "ipa_early_sra_gate", scope: !3, file: !3, line: 4233, type: !2089, scopeLine: 4234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2795 = !DILocation(line: 4235, column: 10, scope: !2794)
!2796 = !DILocation(line: 4235, column: 3, scope: !2794)
!2797 = distinct !DISubprogram(name: "ipa_early_sra", scope: !3, file: !3, line: 4155, type: !2093, scopeLine: 4156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2798)
!2798 = !{!2799, !3005, !3007, !3008, !3009}
!2799 = !DILocalVariable(name: "node", scope: !2797, file: !3, line: 4157, type: !2800)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !641, line: 181, size: 2496, elements: !2802)
!2802 = !{!2803, !2804, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2920, !2942, !2952, !2956, !2982, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2801, file: !641, line: 182, baseType: !689, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !2801, file: !641, line: 183, baseType: !2805, size: 64, offset: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !641, line: 314, size: 768, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2806, file: !641, line: 316, baseType: !1222, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2806, file: !641, line: 317, baseType: !2800, size: 64, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !2806, file: !641, line: 318, baseType: !2800, size: 64, offset: 128)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !2806, file: !641, line: 319, baseType: !2805, size: 64, offset: 192)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !2806, file: !641, line: 320, baseType: !2805, size: 64, offset: 256)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !2806, file: !641, line: 321, baseType: !2805, size: 64, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !2806, file: !641, line: 322, baseType: !2805, size: 64, offset: 384)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !2806, file: !641, line: 323, baseType: !1011, size: 64, offset: 448)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2806, file: !641, line: 324, baseType: !684, size: 64, offset: 512)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !2806, file: !641, line: 327, baseType: !2818, size: 32, offset: 576)
!2818 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !641, line: 312, baseType: !640)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !2806, file: !641, line: 330, baseType: !7, size: 32, offset: 608)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2806, file: !641, line: 334, baseType: !680, size: 32, offset: 640)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2806, file: !641, line: 336, baseType: !680, size: 32, offset: 672)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !2806, file: !641, line: 338, baseType: !2240, size: 16, offset: 704)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !2806, file: !641, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !2806, file: !641, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !2806, file: !641, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !2801, file: !641, line: 184, baseType: !2805, size: 64, offset: 128)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2801, file: !641, line: 185, baseType: !2800, size: 64, offset: 192)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !2801, file: !641, line: 186, baseType: !2800, size: 64, offset: 256)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !2801, file: !641, line: 188, baseType: !2800, size: 64, offset: 320)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2801, file: !641, line: 190, baseType: !2800, size: 64, offset: 384)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !2801, file: !641, line: 192, baseType: !2800, size: 64, offset: 448)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2801, file: !641, line: 194, baseType: !2800, size: 64, offset: 512)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !2801, file: !641, line: 196, baseType: !2800, size: 64, offset: 576)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !2801, file: !641, line: 197, baseType: !2800, size: 64, offset: 640)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !2801, file: !641, line: 198, baseType: !2800, size: 64, offset: 704)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !2801, file: !641, line: 199, baseType: !2800, size: 64, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !2801, file: !641, line: 202, baseType: !2800, size: 64, offset: 832)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !2801, file: !641, line: 204, baseType: !2800, size: 64, offset: 896)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !2801, file: !641, line: 207, baseType: !1442, size: 64, offset: 960)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2801, file: !641, line: 209, baseType: !684, size: 64, offset: 1024)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !2801, file: !641, line: 214, baseType: !2842, size: 64, offset: 1088)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1400, line: 177, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1400, line: 177, size: 128, elements: !2845)
!2845 = !{!2846}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2844, file: !1400, line: 177, baseType: !2847, size: 128)
!2847 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1400, line: 176, baseType: !2848)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1400, line: 176, size: 128, elements: !2849)
!2849 = !{!2850, !2851, !2852}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2848, file: !1400, line: 176, baseType: !7, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2848, file: !1400, line: 176, baseType: !7, size: 32, offset: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2848, file: !1400, line: 176, baseType: !2853, size: 64, offset: 64)
!2853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2854, size: 64, elements: !788)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1400, line: 174, baseType: !2855)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !378, line: 173, size: 1152, elements: !2857)
!2857 = !{!2858, !2859, !2863, !2886, !2887, !2891, !2896, !2897, !2901}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2856, file: !378, line: 175, baseType: !2083, size: 640)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !2856, file: !378, line: 179, baseType: !2860, size: 64, offset: 640)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{null}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !2856, file: !378, line: 182, baseType: !2864, size: 64, offset: 704)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{null, !2867}
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !641, line: 276, size: 192, elements: !2869)
!2869 = !{!2870, !2871, !2885}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !2868, file: !641, line: 278, baseType: !1442, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2868, file: !641, line: 279, baseType: !2872, size: 64, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !641, line: 272, baseType: !2874)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !641, line: 272, size: 128, elements: !2875)
!2875 = !{!2876}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2874, file: !641, line: 272, baseType: !2877, size: 128)
!2877 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !641, line: 270, baseType: !2878)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !641, line: 270, size: 128, elements: !2879)
!2879 = !{!2880, !2881, !2882}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2878, file: !641, line: 270, baseType: !7, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2878, file: !641, line: 270, baseType: !7, size: 32, offset: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2878, file: !641, line: 270, baseType: !2883, size: 64, offset: 64)
!2883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2884, size: 64, elements: !788)
!2884 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !641, line: 268, baseType: !2800)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2868, file: !641, line: 280, baseType: !684, size: 64, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !2856, file: !378, line: 187, baseType: !2860, size: 64, offset: 768)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !2856, file: !378, line: 188, baseType: !2888, size: 64, offset: 832)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{null, !2800}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !2856, file: !378, line: 191, baseType: !2892, size: 64, offset: 896)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{null, !2800, !2895}
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !2856, file: !378, line: 195, baseType: !7, size: 32, offset: 960)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !2856, file: !378, line: 196, baseType: !2898, size: 64, offset: 1024)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{!7, !2800}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !2856, file: !378, line: 197, baseType: !2902, size: 64, offset: 1088)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = !DISubroutineType(types: !2904)
!2904 = !{null, !2905}
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !641, line: 358, size: 320, elements: !2907)
!2907 = !{!2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2906, file: !641, line: 359, baseType: !689, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2906, file: !641, line: 361, baseType: !2905, size: 64, offset: 64)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2906, file: !641, line: 363, baseType: !2905, size: 64, offset: 128)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !2906, file: !641, line: 366, baseType: !2905, size: 64, offset: 192)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2906, file: !641, line: 368, baseType: !680, size: 32, offset: 256)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2906, file: !641, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !2906, file: !641, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2906, file: !641, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2906, file: !641, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2906, file: !641, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2906, file: !641, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2906, file: !641, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2801, file: !641, line: 216, baseType: !2921, size: 320, offset: 1152)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !641, line: 88, size: 320, elements: !2922)
!2922 = !{!2923, !2926, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !2921, file: !641, line: 90, baseType: !2924, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !641, line: 51, flags: DIFlagFwdDecl)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !2921, file: !641, line: 92, baseType: !2927, size: 192, offset: 64)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !641, line: 57, size: 192, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932, !2933}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !2927, file: !641, line: 60, baseType: !745, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !2927, file: !641, line: 63, baseType: !680, size: 32, offset: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !2927, file: !641, line: 65, baseType: !680, size: 32, offset: 96)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !2927, file: !641, line: 67, baseType: !680, size: 32, offset: 128)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !2927, file: !641, line: 69, baseType: !680, size: 32, offset: 160)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2921, file: !641, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2921, file: !641, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2921, file: !641, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !2921, file: !641, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2921, file: !641, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !2921, file: !641, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !2921, file: !641, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !2921, file: !641, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !2801, file: !641, line: 217, baseType: !2943, size: 320, offset: 1472)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !641, line: 126, size: 320, elements: !2944)
!2944 = !{!2945, !2946, !2947, !2948, !2949, !2950, !2951}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !2943, file: !641, line: 128, baseType: !745, size: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !2943, file: !641, line: 130, baseType: !745, size: 64, offset: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !2943, file: !641, line: 134, baseType: !2800, size: 64, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2943, file: !641, line: 137, baseType: !680, size: 32, offset: 192)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2943, file: !641, line: 138, baseType: !680, size: 32, offset: 224)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !2943, file: !641, line: 141, baseType: !680, size: 32, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !2943, file: !641, line: 144, baseType: !679, size: 8, offset: 288)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2801, file: !641, line: 218, baseType: !2953, size: 32, offset: 1792)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !641, line: 150, size: 32, elements: !2954)
!2954 = !{!2955}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !2953, file: !641, line: 151, baseType: !7, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2801, file: !641, line: 219, baseType: !2957, size: 192, offset: 1856)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !641, line: 171, size: 192, elements: !2958)
!2958 = !{!2959, !2980, !2981}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !2957, file: !641, line: 173, baseType: !2960, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !641, line: 169, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !641, line: 169, size: 128, elements: !2963)
!2963 = !{!2964}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2962, file: !641, line: 169, baseType: !2965, size: 128)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !641, line: 168, baseType: !2966)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !641, line: 168, size: 128, elements: !2967)
!2967 = !{!2968, !2969, !2970}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2966, file: !641, line: 168, baseType: !7, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2966, file: !641, line: 168, baseType: !7, size: 32, offset: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2966, file: !641, line: 168, baseType: !2971, size: 64, offset: 64)
!2971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2972, size: 64, elements: !788)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !641, line: 167, baseType: !2973)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !641, line: 156, size: 192, elements: !2975)
!2975 = !{!2976, !2977, !2978, !2979}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !2974, file: !641, line: 159, baseType: !689, size: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !2974, file: !641, line: 161, baseType: !689, size: 64, offset: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !2974, file: !641, line: 163, baseType: !679, size: 8, offset: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !2974, file: !641, line: 165, baseType: !679, size: 8, offset: 136)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !2957, file: !641, line: 174, baseType: !1528, size: 64, offset: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !2957, file: !641, line: 175, baseType: !1528, size: 64, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !2801, file: !641, line: 220, baseType: !2983, size: 256, offset: 2048)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !641, line: 74, size: 256, elements: !2984)
!2984 = !{!2985, !2986, !2987, !2988, !2989, !2990}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !2983, file: !641, line: 76, baseType: !745, size: 64)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !2983, file: !641, line: 77, baseType: !745, size: 64, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2983, file: !641, line: 78, baseType: !689, size: 64, offset: 128)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !2983, file: !641, line: 79, baseType: !679, size: 8, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !2983, file: !641, line: 80, baseType: !679, size: 8, offset: 200)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !2983, file: !641, line: 82, baseType: !679, size: 8, offset: 208)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2801, file: !641, line: 223, baseType: !1222, size: 64, offset: 2304)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2801, file: !641, line: 225, baseType: !680, size: 32, offset: 2368)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2801, file: !641, line: 227, baseType: !680, size: 32, offset: 2400)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2801, file: !641, line: 231, baseType: !680, size: 32, offset: 2432)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2801, file: !641, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !2801, file: !641, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !2801, file: !641, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !2801, file: !641, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !2801, file: !641, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2801, file: !641, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !2801, file: !641, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2801, file: !641, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !2801, file: !641, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !2801, file: !641, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!3005 = !DILocalVariable(name: "adjustments", scope: !2797, file: !3, line: 4158, type: !3006)
!3006 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_parm_adjustment_vec", file: !2053, line: 487, baseType: !2051)
!3007 = !DILocalVariable(name: "ret", scope: !2797, file: !3, line: 4159, type: !680)
!3008 = !DILabel(scope: !2797, name: "out", file: !3, line: 4223)
!3009 = !DILabel(scope: !2797, name: "simple_out", file: !3, line: 4226)
!3010 = !DILocation(line: 4157, column: 43, scope: !2797)
!3011 = !DILocation(line: 4157, column: 30, scope: !2797)
!3012 = !DILocation(line: 0, scope: !2797)
!3013 = !DILocation(line: 4158, column: 3, scope: !2797)
!3014 = !DILocation(line: 4161, column: 8, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 4161, column: 7)
!3016 = !DILocation(line: 4161, column: 7, scope: !2797)
!3017 = !DILocation(line: 4164, column: 3, scope: !2797)
!3018 = !DILocation(line: 4165, column: 12, scope: !2797)
!3019 = !DILocation(line: 4167, column: 8, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 4167, column: 7)
!3021 = !DILocation(line: 4167, column: 7, scope: !2797)
!3022 = !DILocation(line: 4169, column: 11, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 4169, column: 11)
!3024 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 4168, column: 5)
!3025 = !DILocation(line: 4169, column: 11, scope: !3024)
!3026 = !DILocation(line: 4170, column: 2, scope: !3023)
!3027 = !DILocation(line: 4174, column: 8, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 4174, column: 7)
!3029 = !DILocation(line: 4174, column: 7, scope: !2797)
!3030 = !DILocation(line: 4176, column: 11, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 4176, column: 11)
!3032 = distinct !DILexicalBlock(scope: !3028, file: !3, line: 4175, column: 5)
!3033 = !DILocation(line: 4176, column: 11, scope: !3032)
!3034 = !DILocation(line: 4177, column: 2, scope: !3031)
!3035 = !DILocation(line: 4182, column: 21, scope: !2797)
!3036 = !DILocation(line: 4182, column: 19, scope: !2797)
!3037 = !DILocation(line: 4185, column: 15, scope: !2797)
!3038 = !DILocation(line: 4185, column: 13, scope: !2797)
!3039 = !DILocation(line: 4187, column: 3, scope: !2797)
!3040 = !DILocation(line: 4189, column: 7, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 4189, column: 7)
!3042 = !DILocation(line: 4189, column: 7, scope: !2797)
!3043 = !DILocation(line: 4191, column: 11, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 4191, column: 11)
!3045 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 4190, column: 5)
!3046 = !DILocation(line: 4191, column: 11, scope: !3045)
!3047 = !DILocation(line: 4192, column: 2, scope: !3044)
!3048 = !DILocation(line: 4196, column: 7, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 4196, column: 7)
!3050 = !DILocation(line: 4196, column: 7, scope: !2797)
!3051 = !DILocation(line: 4198, column: 11, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 4198, column: 11)
!3053 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 4197, column: 5)
!3054 = !DILocation(line: 4198, column: 11, scope: !3053)
!3055 = !DILocation(line: 4199, column: 2, scope: !3052)
!3056 = !DILocation(line: 4204, column: 17, scope: !2797)
!3057 = !DILocation(line: 4204, column: 15, scope: !2797)
!3058 = !DILocation(line: 4205, column: 8, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 4205, column: 7)
!3060 = !DILocation(line: 4205, column: 7, scope: !2797)
!3061 = !DILocation(line: 4207, column: 7, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 4207, column: 7)
!3063 = !DILocation(line: 4207, column: 7, scope: !2797)
!3064 = !DILocation(line: 4208, column: 57, scope: !3062)
!3065 = !DILocation(line: 4208, column: 5, scope: !3062)
!3066 = !DILocation(line: 4210, column: 3, scope: !2797)
!3067 = !DILocation(line: 4211, column: 3, scope: !2797)
!3068 = !DILocation(line: 4214, column: 29, scope: !2797)
!3069 = !DILocation(line: 4215, column: 18, scope: !2797)
!3070 = !DILocation(line: 4214, column: 3, scope: !2797)
!3071 = !DILocation(line: 4216, column: 29, scope: !2797)
!3072 = !DILocation(line: 4217, column: 18, scope: !2797)
!3073 = !DILocation(line: 4216, column: 3, scope: !2797)
!3074 = !DILocation(line: 4218, column: 29, scope: !2797)
!3075 = !DILocation(line: 4219, column: 18, scope: !2797)
!3076 = !DILocation(line: 4218, column: 3, scope: !2797)
!3077 = !DILocation(line: 4220, column: 29, scope: !2797)
!3078 = !DILocation(line: 4221, column: 18, scope: !2797)
!3079 = !DILocation(line: 4220, column: 3, scope: !2797)
!3080 = !DILocation(line: 4223, column: 2, scope: !2797)
!3081 = !DILocation(line: 4224, column: 3, scope: !2797)
!3082 = !DILocation(line: 4225, column: 9, scope: !2797)
!3083 = !DILocation(line: 4225, column: 3, scope: !2797)
!3084 = !DILocation(line: 4159, column: 7, scope: !2797)
!3085 = !DILocation(line: 4226, column: 2, scope: !2797)
!3086 = !DILocation(line: 4227, column: 3, scope: !2797)
!3087 = !DILocation(line: 4228, column: 3, scope: !2797)
!3088 = !DILocation(line: 4229, column: 1, scope: !2797)
!3089 = distinct !DISubprogram(name: "perform_intra_sra", scope: !3, file: !3, line: 2791, type: !2093, scopeLine: 2792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3090)
!3090 = !{!3091, !3092}
!3091 = !DILocalVariable(name: "ret", scope: !3089, file: !3, line: 2793, type: !680)
!3092 = !DILabel(scope: !3089, name: "out", file: !3, line: 2822)
!3093 = !DILocation(line: 0, scope: !3089)
!3094 = !DILocation(line: 2794, column: 3, scope: !3089)
!3095 = !DILocation(line: 2796, column: 8, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 2796, column: 7)
!3097 = !DILocation(line: 2796, column: 7, scope: !3089)
!3098 = !DILocation(line: 2799, column: 8, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 2799, column: 7)
!3100 = !DILocation(line: 2799, column: 7, scope: !3089)
!3101 = !DILocation(line: 2803, column: 8, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 2803, column: 7)
!3103 = !DILocation(line: 2803, column: 7, scope: !3089)
!3104 = !DILocation(line: 2806, column: 3, scope: !3089)
!3105 = !DILocation(line: 2807, column: 3, scope: !3089)
!3106 = !DILocation(line: 2809, column: 29, scope: !3089)
!3107 = !DILocation(line: 2810, column: 18, scope: !3089)
!3108 = !DILocation(line: 2809, column: 3, scope: !3089)
!3109 = !DILocation(line: 2811, column: 29, scope: !3089)
!3110 = !DILocation(line: 2811, column: 69, scope: !3089)
!3111 = !DILocation(line: 2811, column: 3, scope: !3089)
!3112 = !DILocation(line: 2812, column: 29, scope: !3089)
!3113 = !DILocation(line: 2813, column: 18, scope: !3089)
!3114 = !DILocation(line: 2812, column: 3, scope: !3089)
!3115 = !DILocation(line: 2814, column: 29, scope: !3089)
!3116 = !DILocation(line: 2815, column: 18, scope: !3089)
!3117 = !DILocation(line: 2814, column: 3, scope: !3089)
!3118 = !DILocation(line: 2816, column: 29, scope: !3089)
!3119 = !DILocation(line: 2816, column: 62, scope: !3089)
!3120 = !DILocation(line: 2816, column: 3, scope: !3089)
!3121 = !DILocation(line: 2817, column: 29, scope: !3089)
!3122 = !DILocation(line: 2818, column: 18, scope: !3089)
!3123 = !DILocation(line: 2817, column: 3, scope: !3089)
!3124 = !DILocation(line: 2820, column: 3, scope: !3089)
!3125 = !DILocation(line: 2822, column: 2, scope: !3089)
!3126 = !DILocation(line: 2823, column: 3, scope: !3089)
!3127 = !DILocation(line: 2824, column: 3, scope: !3089)
!3128 = distinct !DISubprogram(name: "sra_initialize", scope: !3, file: !3, line: 559, type: !2861, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!3129 = !DILocation(line: 561, column: 22, scope: !3128)
!3130 = !DILocation(line: 561, column: 20, scope: !3128)
!3131 = !DILocation(line: 562, column: 34, scope: !3128)
!3132 = !DILocation(line: 562, column: 32, scope: !3128)
!3133 = !DILocation(line: 563, column: 34, scope: !3128)
!3134 = !DILocation(line: 563, column: 32, scope: !3128)
!3135 = !DILocation(line: 564, column: 3, scope: !3128)
!3136 = !DILocation(line: 565, column: 17, scope: !3128)
!3137 = !DILocation(line: 565, column: 15, scope: !3128)
!3138 = !DILocation(line: 566, column: 15, scope: !3128)
!3139 = !DILocation(line: 566, column: 13, scope: !3128)
!3140 = !DILocation(line: 567, column: 21, scope: !3128)
!3141 = !DILocation(line: 567, column: 19, scope: !3128)
!3142 = !DILocation(line: 568, column: 3, scope: !3128)
!3143 = !DILocation(line: 569, column: 26, scope: !3128)
!3144 = !DILocation(line: 570, column: 30, scope: !3128)
!3145 = !DILocation(line: 571, column: 42, scope: !3128)
!3146 = !DILocation(line: 572, column: 1, scope: !3128)
!3147 = distinct !DISubprogram(name: "find_var_candidates", scope: !3, file: !3, line: 1511, type: !2089, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3148)
!3148 = !{!3149, !3150, !3151, !3162}
!3149 = !DILocalVariable(name: "var", scope: !3147, file: !3, line: 1513, type: !689)
!3150 = !DILocalVariable(name: "type", scope: !3147, file: !3, line: 1513, type: !689)
!3151 = !DILocalVariable(name: "rvi", scope: !3147, file: !3, line: 1514, type: !3152)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "referenced_var_iterator", file: !1350, line: 336, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1350, line: 333, size: 192, elements: !3154)
!3154 = !{!3155}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "hti", scope: !3153, file: !1350, line: 335, baseType: !3156, size: 192)
!3156 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_iterator", file: !1350, line: 98, baseType: !3157)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1350, line: 93, size: 192, elements: !3158)
!3158 = !{!3159, !3160, !3161}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "htab", scope: !3157, file: !1350, line: 95, baseType: !1442, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3157, file: !1350, line: 96, baseType: !1466, size: 64, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !3157, file: !1350, line: 97, baseType: !1466, size: 64, offset: 128)
!3162 = !DILocalVariable(name: "ret", scope: !3147, file: !3, line: 1515, type: !679)
!3163 = !DILocation(line: 1514, column: 3, scope: !3147)
!3164 = !DILocation(line: 0, scope: !3147)
!3165 = !DILocation(line: 1517, column: 3, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 1517, column: 3)
!3167 = !DILocation(line: 1515, column: 8, scope: !3147)
!3168 = !DILocation(line: 0, scope: !3166)
!3169 = !DILocation(line: 1517, column: 3, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 1517, column: 3)
!3171 = !DILocation(line: 1519, column: 11, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 1519, column: 11)
!3173 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 1518, column: 5)
!3174 = !DILocation(line: 1519, column: 27, scope: !3172)
!3175 = !DILocation(line: 1519, column: 39, scope: !3172)
!3176 = !DILocation(line: 1519, column: 58, scope: !3172)
!3177 = !DILocation(line: 1519, column: 11, scope: !3173)
!3178 = !DILocation(line: 1521, column: 14, scope: !3173)
!3179 = !DILocation(line: 1523, column: 12, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 1523, column: 11)
!3181 = !DILocation(line: 1524, column: 4, scope: !3180)
!3182 = !DILocation(line: 1524, column: 7, scope: !3180)
!3183 = !DILocation(line: 1525, column: 4, scope: !3180)
!3184 = !DILocation(line: 1525, column: 7, scope: !3180)
!3185 = !DILocation(line: 1526, column: 4, scope: !3180)
!3186 = !DILocation(line: 1526, column: 8, scope: !3180)
!3187 = !DILocation(line: 1527, column: 4, scope: !3180)
!3188 = !DILocation(line: 1527, column: 8, scope: !3180)
!3189 = !DILocation(line: 1528, column: 11, scope: !3180)
!3190 = !DILocation(line: 1528, column: 28, scope: !3180)
!3191 = !DILocation(line: 1528, column: 14, scope: !3180)
!3192 = !DILocation(line: 1528, column: 49, scope: !3180)
!3193 = !DILocation(line: 1529, column: 4, scope: !3180)
!3194 = !DILocation(line: 1529, column: 7, scope: !3180)
!3195 = !DILocation(line: 1533, column: 4, scope: !3180)
!3196 = !DILocation(line: 1533, column: 8, scope: !3180)
!3197 = !DILocation(line: 1533, column: 17, scope: !3180)
!3198 = !DILocation(line: 1534, column: 8, scope: !3180)
!3199 = !DILocation(line: 1534, column: 11, scope: !3180)
!3200 = !DILocation(line: 1523, column: 11, scope: !3173)
!3201 = !DILocation(line: 1537, column: 23, scope: !3173)
!3202 = !DILocation(line: 1537, column: 41, scope: !3173)
!3203 = !DILocation(line: 1537, column: 7, scope: !3173)
!3204 = !DILocation(line: 1539, column: 11, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 1539, column: 11)
!3206 = !DILocation(line: 1539, column: 21, scope: !3205)
!3207 = !DILocation(line: 1539, column: 25, scope: !3205)
!3208 = !DILocation(line: 1539, column: 36, scope: !3205)
!3209 = !DILocation(line: 1539, column: 11, scope: !3173)
!3210 = !DILocation(line: 1541, column: 44, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3205, file: !3, line: 1540, column: 2)
!3212 = !DILocation(line: 1541, column: 4, scope: !3211)
!3213 = !DILocation(line: 1542, column: 24, scope: !3211)
!3214 = !DILocation(line: 1542, column: 4, scope: !3211)
!3215 = !DILocation(line: 1543, column: 13, scope: !3211)
!3216 = !DILocation(line: 1543, column: 4, scope: !3211)
!3217 = !DILocation(line: 1544, column: 2, scope: !3211)
!3218 = distinct !{!3218, !3165, !3219}
!3219 = !DILocation(line: 1546, column: 5, scope: !3166)
!3220 = !DILocation(line: 1549, column: 1, scope: !3147)
!3221 = !DILocation(line: 1548, column: 3, scope: !3147)
!3222 = distinct !DISubprogram(name: "scan_function", scope: !3, file: !3, line: 1097, type: !3223, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3241)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!679, !3225, !3235, !3238, !679, !684}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!679, !1045, !3228, !679, !684}
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !571, line: 265, baseType: !3230)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !571, line: 254, size: 192, elements: !3231)
!3231 = !{!3232, !3233, !3234}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3230, file: !571, line: 257, baseType: !1006, size: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3230, file: !571, line: 263, baseType: !1001, size: 64, offset: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3230, file: !571, line: 264, baseType: !1410, size: 64, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = !DISubroutineType(types: !3237)
!3237 = !{!565, !2895, !3228, !684}
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!679, !1011, !684}
!3241 = !{!3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3256, !3258, !3259, !3260, !3261, !3266, !3269, !3270, !3273, !3277}
!3242 = !DILocalVariable(name: "scan_expr", arg: 1, scope: !3222, file: !3, line: 1097, type: !3225)
!3243 = !DILocalVariable(name: "scan_assign", arg: 2, scope: !3222, file: !3, line: 1098, type: !3235)
!3244 = !DILocalVariable(name: "handle_ssa_defs", arg: 3, scope: !3222, file: !3, line: 1101, type: !3238)
!3245 = !DILocalVariable(name: "analysis_stage", arg: 4, scope: !3222, file: !3, line: 1102, type: !679)
!3246 = !DILocalVariable(name: "data", arg: 5, scope: !3222, file: !3, line: 1102, type: !684)
!3247 = !DILocalVariable(name: "gsi", scope: !3222, file: !3, line: 1104, type: !3229)
!3248 = !DILocalVariable(name: "bb", scope: !3222, file: !3, line: 1105, type: !1410)
!3249 = !DILocalVariable(name: "i", scope: !3222, file: !3, line: 1106, type: !7)
!3250 = !DILocalVariable(name: "t", scope: !3222, file: !3, line: 1107, type: !1045)
!3251 = !DILocalVariable(name: "ret", scope: !3222, file: !3, line: 1108, type: !679)
!3252 = !DILocalVariable(name: "bb_changed", scope: !3253, file: !3, line: 1112, type: !679)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 1111, column: 5)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 1110, column: 3)
!3255 = distinct !DILexicalBlock(scope: !3222, file: !3, line: 1110, column: 3)
!3256 = !DILocalVariable(name: "stmt", scope: !3257, file: !3, line: 1121, type: !1011)
!3257 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 1120, column: 2)
!3258 = !DILocalVariable(name: "assign_result", scope: !3257, file: !3, line: 1122, type: !565)
!3259 = !DILocalVariable(name: "any", scope: !3257, file: !3, line: 1123, type: !679)
!3260 = !DILocalVariable(name: "deleted", scope: !3257, file: !3, line: 1123, type: !679)
!3261 = !DILocalVariable(name: "argp", scope: !3262, file: !3, line: 1149, type: !1045)
!3262 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 1148, column: 3)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 1147, column: 8)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1147, column: 8)
!3265 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1128, column: 6)
!3266 = !DILocalVariable(name: "dest", scope: !3267, file: !3, line: 1155, type: !689)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 1154, column: 3)
!3268 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1153, column: 12)
!3269 = !DILocalVariable(name: "flags", scope: !3267, file: !3, line: 1156, type: !680)
!3270 = !DILocalVariable(name: "lhs_ptr", scope: !3271, file: !3, line: 1179, type: !1045)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1178, column: 3)
!3272 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1177, column: 12)
!3273 = !DILocalVariable(name: "op", scope: !3274, file: !3, line: 1201, type: !1045)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1200, column: 3)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 1199, column: 8)
!3276 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1199, column: 8)
!3277 = !DILocalVariable(name: "op", scope: !3278, file: !3, line: 1206, type: !1045)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 1205, column: 3)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 1204, column: 8)
!3280 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1204, column: 8)
!3281 = !DILocation(line: 0, scope: !3222)
!3282 = !DILocation(line: 1104, column: 3, scope: !3222)
!3283 = !DILocation(line: 1110, column: 3, scope: !3255)
!3284 = !DILocation(line: 0, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 1114, column: 11)
!3286 = !DILocation(line: 0, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 1115, column: 2)
!3288 = !DILocation(line: 0, scope: !3253)
!3289 = !DILocation(line: 0, scope: !3257)
!3290 = !DILocation(line: 0, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1125, column: 8)
!3292 = !DILocation(line: 0, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1192, column: 12)
!3294 = !DILocation(line: 0, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1141, column: 12)
!3296 = !DILocation(line: 1110, column: 3, scope: !3254)
!3297 = !DILocation(line: 1108, column: 8, scope: !3222)
!3298 = !DILocation(line: 0, scope: !3255)
!3299 = !DILocation(line: 1114, column: 11, scope: !3253)
!3300 = !DILocation(line: 1115, column: 13, scope: !3287)
!3301 = !DILocation(line: 1115, column: 7, scope: !3287)
!3302 = !DILocation(line: 1115, column: 35, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 1115, column: 2)
!3304 = !DILocation(line: 1115, column: 34, scope: !3303)
!3305 = !DILocation(line: 1115, column: 2, scope: !3287)
!3306 = !DILocation(line: 1116, column: 28, scope: !3303)
!3307 = !DILocation(line: 1116, column: 11, scope: !3303)
!3308 = !DILocation(line: 1116, column: 8, scope: !3303)
!3309 = !DILocation(line: 1115, column: 52, scope: !3303)
!3310 = !DILocation(line: 1115, column: 2, scope: !3303)
!3311 = distinct !{!3311, !3305, !3312}
!3312 = !DILocation(line: 1116, column: 48, scope: !3287)
!3313 = !DILocation(line: 1118, column: 13, scope: !3253)
!3314 = !DILocation(line: 1119, column: 7, scope: !3253)
!3315 = !DILocation(line: 1119, column: 15, scope: !3253)
!3316 = !DILocation(line: 1119, column: 14, scope: !3253)
!3317 = !DILocation(line: 1121, column: 4, scope: !3257)
!3318 = !DILocation(line: 1121, column: 18, scope: !3257)
!3319 = !DILocation(line: 1121, column: 11, scope: !3257)
!3320 = !DILocation(line: 1125, column: 26, scope: !3291)
!3321 = !DILocation(line: 1125, column: 23, scope: !3291)
!3322 = !DILocation(line: 1125, column: 39, scope: !3291)
!3323 = !DILocation(line: 1125, column: 8, scope: !3257)
!3324 = !DILocation(line: 1126, column: 22, scope: !3291)
!3325 = !DILocation(line: 1126, column: 37, scope: !3291)
!3326 = !DILocation(line: 1126, column: 6, scope: !3291)
!3327 = !DILocation(line: 1127, column: 25, scope: !3257)
!3328 = !DILocation(line: 1127, column: 12, scope: !3257)
!3329 = !DILocation(line: 1127, column: 4, scope: !3257)
!3330 = !DILocation(line: 1147, column: 8, scope: !3264)
!3331 = !DILocation(line: 1130, column: 38, scope: !3265)
!3332 = !DILocation(line: 1130, column: 12, scope: !3265)
!3333 = !DILocation(line: 1131, column: 12, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1131, column: 12)
!3335 = !DILocation(line: 1131, column: 15, scope: !3334)
!3336 = !DILocation(line: 1131, column: 12, scope: !3265)
!3337 = !DILocation(line: 1132, column: 10, scope: !3334)
!3338 = !DILocation(line: 1132, column: 3, scope: !3334)
!3339 = !DILocation(line: 1133, column: 30, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1133, column: 12)
!3341 = !DILocation(line: 1133, column: 27, scope: !3340)
!3342 = !DILocation(line: 1134, column: 34, scope: !3340)
!3343 = !DILocation(line: 1134, column: 3, scope: !3340)
!3344 = !DILocation(line: 1138, column: 24, scope: !3265)
!3345 = !DILocation(line: 1139, column: 29, scope: !3265)
!3346 = !DILocation(line: 1139, column: 12, scope: !3265)
!3347 = !DILocation(line: 1140, column: 32, scope: !3265)
!3348 = !DILocation(line: 1140, column: 18, scope: !3265)
!3349 = !DILocation(line: 1141, column: 45, scope: !3295)
!3350 = !DILocation(line: 1141, column: 28, scope: !3295)
!3351 = !DILocation(line: 1142, column: 27, scope: !3295)
!3352 = !DILocation(line: 1142, column: 10, scope: !3295)
!3353 = !DILocation(line: 1142, column: 7, scope: !3295)
!3354 = !DILocation(line: 1142, column: 3, scope: !3295)
!3355 = !DILocation(line: 0, scope: !3264)
!3356 = !DILocation(line: 1147, column: 46, scope: !3263)
!3357 = !DILocation(line: 1147, column: 24, scope: !3263)
!3358 = !DILocation(line: 1147, column: 22, scope: !3263)
!3359 = !DILocation(line: 1149, column: 39, scope: !3262)
!3360 = !DILocation(line: 1149, column: 18, scope: !3262)
!3361 = !DILocation(line: 0, scope: !3262)
!3362 = !DILocation(line: 1150, column: 12, scope: !3262)
!3363 = !DILocation(line: 1150, column: 9, scope: !3262)
!3364 = !DILocation(line: 1147, column: 54, scope: !3263)
!3365 = !DILocation(line: 1147, column: 8, scope: !3263)
!3366 = distinct !{!3366, !3330, !3367}
!3367 = !DILocation(line: 1151, column: 3, scope: !3264)
!3368 = !DILocation(line: 1153, column: 30, scope: !3268)
!3369 = !DILocation(line: 1153, column: 39, scope: !3268)
!3370 = !DILocation(line: 1153, column: 27, scope: !3268)
!3371 = !DILocation(line: 1155, column: 37, scope: !3267)
!3372 = !DILocation(line: 1155, column: 17, scope: !3267)
!3373 = !DILocation(line: 0, scope: !3267)
!3374 = !DILocation(line: 1156, column: 36, scope: !3267)
!3375 = !DILocation(line: 1156, column: 17, scope: !3267)
!3376 = !DILocation(line: 1158, column: 9, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 1158, column: 9)
!3378 = !DILocation(line: 1158, column: 9, scope: !3267)
!3379 = !DILocation(line: 1160, column: 13, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 1160, column: 13)
!3381 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1159, column: 7)
!3382 = !DILocation(line: 1160, column: 40, scope: !3380)
!3383 = !DILocation(line: 1161, column: 6, scope: !3380)
!3384 = !DILocation(line: 1161, column: 9, scope: !3380)
!3385 = !DILocation(line: 1161, column: 35, scope: !3380)
!3386 = !DILocation(line: 1160, column: 13, scope: !3381)
!3387 = !DILocation(line: 1162, column: 27, scope: !3380)
!3388 = !DILocation(line: 1162, column: 4, scope: !3380)
!3389 = !DILocation(line: 1163, column: 13, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 1163, column: 13)
!3391 = !DILocation(line: 1164, column: 26, scope: !3390)
!3392 = !DILocation(line: 1164, column: 9, scope: !3390)
!3393 = !DILocation(line: 1164, column: 6, scope: !3390)
!3394 = !DILocation(line: 1163, column: 13, scope: !3381)
!3395 = !DILocation(line: 1166, column: 33, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 1165, column: 4)
!3397 = !DILocation(line: 1167, column: 44, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 1167, column: 10)
!3399 = !DILocation(line: 1167, column: 11, scope: !3398)
!3400 = !DILocation(line: 1167, column: 10, scope: !3396)
!3401 = !DILocation(line: 1168, column: 47, scope: !3398)
!3402 = !DILocation(line: 1168, column: 8, scope: !3398)
!3403 = !DILocation(line: 1172, column: 9, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 1172, column: 9)
!3405 = !DILocation(line: 1173, column: 19, scope: !3404)
!3406 = !DILocation(line: 1173, column: 45, scope: !3404)
!3407 = !DILocation(line: 1173, column: 9, scope: !3404)
!3408 = !DILocation(line: 1174, column: 38, scope: !3404)
!3409 = !DILocation(line: 1174, column: 7, scope: !3404)
!3410 = !DILocation(line: 1177, column: 29, scope: !3272)
!3411 = !DILocation(line: 1177, column: 12, scope: !3272)
!3412 = !DILocation(line: 1177, column: 12, scope: !3265)
!3413 = !DILocation(line: 1179, column: 42, scope: !3271)
!3414 = !DILocation(line: 1179, column: 21, scope: !3271)
!3415 = !DILocation(line: 0, scope: !3271)
!3416 = !DILocation(line: 1181, column: 9, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1180, column: 9)
!3418 = !DILocation(line: 1181, column: 46, scope: !3417)
!3419 = !DILocation(line: 1182, column: 11, scope: !3417)
!3420 = !DILocation(line: 1181, column: 13, scope: !3417)
!3421 = !DILocation(line: 1180, column: 9, scope: !3271)
!3422 = !DILocation(line: 1184, column: 16, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1183, column: 7)
!3424 = !DILocation(line: 1184, column: 13, scope: !3423)
!3425 = !DILocation(line: 1185, column: 13, scope: !3423)
!3426 = !DILocation(line: 1186, column: 28, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1185, column: 13)
!3428 = !DILocation(line: 1186, column: 11, scope: !3427)
!3429 = !DILocation(line: 1186, column: 8, scope: !3427)
!3430 = !DILocation(line: 1186, column: 4, scope: !3427)
!3431 = !DILocation(line: 1192, column: 12, scope: !3265)
!3432 = !DILocation(line: 1194, column: 36, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 1193, column: 3)
!3434 = !DILocation(line: 1194, column: 5, scope: !3433)
!3435 = !DILocation(line: 1196, column: 9, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 1196, column: 9)
!3437 = !DILocation(line: 1196, column: 9, scope: !3433)
!3438 = !DILocation(line: 1197, column: 38, scope: !3436)
!3439 = !DILocation(line: 1197, column: 7, scope: !3436)
!3440 = !DILocation(line: 1199, column: 13, scope: !3276)
!3441 = !DILocation(line: 0, scope: !3276)
!3442 = !DILocation(line: 1199, column: 44, scope: !3275)
!3443 = !DILocation(line: 1199, column: 24, scope: !3275)
!3444 = !DILocation(line: 1199, column: 22, scope: !3275)
!3445 = !DILocation(line: 1199, column: 8, scope: !3276)
!3446 = !DILocation(line: 1204, column: 8, scope: !3280)
!3447 = !DILocation(line: 1201, column: 17, scope: !3274)
!3448 = !DILocation(line: 0, scope: !3274)
!3449 = !DILocation(line: 1202, column: 12, scope: !3274)
!3450 = !DILocation(line: 1202, column: 9, scope: !3274)
!3451 = !DILocation(line: 1199, column: 52, scope: !3275)
!3452 = !DILocation(line: 1199, column: 8, scope: !3275)
!3453 = distinct !{!3453, !3445, !3454}
!3454 = !DILocation(line: 1203, column: 3, scope: !3276)
!3455 = !DILocation(line: 0, scope: !3280)
!3456 = !DILocation(line: 1204, column: 45, scope: !3279)
!3457 = !DILocation(line: 1204, column: 24, scope: !3279)
!3458 = !DILocation(line: 1204, column: 22, scope: !3279)
!3459 = !DILocation(line: 1206, column: 17, scope: !3278)
!3460 = !DILocation(line: 0, scope: !3278)
!3461 = !DILocation(line: 1207, column: 12, scope: !3278)
!3462 = !DILocation(line: 1207, column: 9, scope: !3278)
!3463 = !DILocation(line: 1204, column: 53, scope: !3279)
!3464 = !DILocation(line: 1204, column: 8, scope: !3279)
!3465 = distinct !{!3465, !3446, !3466}
!3466 = !DILocation(line: 1208, column: 3, scope: !3280)
!3467 = !DILocation(line: 1215, column: 8, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1215, column: 8)
!3469 = !DILocation(line: 1215, column: 8, scope: !3257)
!3470 = !DILocation(line: 1219, column: 12, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 1216, column: 6)
!3472 = !DILocation(line: 1222, column: 18, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 1220, column: 3)
!3474 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 1219, column: 12)
!3475 = !DILocation(line: 1222, column: 5, scope: !3473)
!3476 = !DILocation(line: 1223, column: 26, scope: !3473)
!3477 = !DILocation(line: 1223, column: 5, scope: !3473)
!3478 = !DILocation(line: 1224, column: 3, scope: !3473)
!3479 = !DILocation(line: 1112, column: 12, scope: !3253)
!3480 = !DILocation(line: 1226, column: 8, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1226, column: 8)
!3482 = !DILocation(line: 1226, column: 8, scope: !3257)
!3483 = !DILocation(line: 1230, column: 8, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 1229, column: 6)
!3485 = !DILocation(line: 1233, column: 2, scope: !3253)
!3486 = distinct !{!3486, !3314, !3485}
!3487 = !DILocation(line: 1234, column: 30, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 1234, column: 11)
!3489 = !DILocation(line: 1234, column: 27, scope: !3488)
!3490 = !DILocation(line: 1234, column: 44, scope: !3488)
!3491 = !DILocation(line: 1234, column: 53, scope: !3488)
!3492 = !DILocation(line: 1235, column: 2, scope: !3488)
!3493 = !DILocation(line: 0, scope: !3254)
!3494 = distinct !{!3494, !3283, !3495}
!3495 = !DILocation(line: 1236, column: 5, scope: !3255)
!3496 = !DILocation(line: 1239, column: 1, scope: !3222)
!3497 = !DILocation(line: 1238, column: 3, scope: !3222)
!3498 = distinct !DISubprogram(name: "build_access_from_expr", scope: !3, file: !3, line: 962, type: !3226, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3499)
!3499 = !{!3500, !3501, !3502, !3503, !3504}
!3500 = !DILocalVariable(name: "expr_ptr", arg: 1, scope: !3498, file: !3, line: 962, type: !1045)
!3501 = !DILocalVariable(name: "gsi", arg: 2, scope: !3498, file: !3, line: 963, type: !3228)
!3502 = !DILocalVariable(name: "write", arg: 3, scope: !3498, file: !3, line: 963, type: !679)
!3503 = !DILocalVariable(name: "data", arg: 4, scope: !3498, file: !3, line: 964, type: !684)
!3504 = !DILocalVariable(name: "access", scope: !3498, file: !3, line: 966, type: !1986)
!3505 = !DILocation(line: 0, scope: !3498)
!3506 = !DILocation(line: 968, column: 48, scope: !3498)
!3507 = !DILocation(line: 968, column: 12, scope: !3498)
!3508 = !DILocation(line: 969, column: 7, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 969, column: 7)
!3510 = !DILocation(line: 969, column: 7, scope: !3498)
!3511 = !DILocation(line: 974, column: 11, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 974, column: 11)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 970, column: 5)
!3514 = !DILocation(line: 974, column: 11, scope: !3513)
!3515 = !DILocation(line: 975, column: 48, scope: !3512)
!3516 = !DILocation(line: 975, column: 2, scope: !3512)
!3517 = !DILocation(line: 979, column: 1, scope: !3498)
!3518 = distinct !DISubprogram(name: "build_accesses_from_assign", scope: !3, file: !3, line: 1014, type: !3236, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3519)
!3519 = !{!3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528}
!3520 = !DILocalVariable(name: "stmt_ptr", arg: 1, scope: !3518, file: !3, line: 1014, type: !2895)
!3521 = !DILocalVariable(name: "gsi", arg: 2, scope: !3518, file: !3, line: 1015, type: !3228)
!3522 = !DILocalVariable(name: "data", arg: 3, scope: !3518, file: !3, line: 1016, type: !684)
!3523 = !DILocalVariable(name: "stmt", scope: !3518, file: !3, line: 1018, type: !1011)
!3524 = !DILocalVariable(name: "lhs_ptr", scope: !3518, file: !3, line: 1019, type: !1045)
!3525 = !DILocalVariable(name: "rhs_ptr", scope: !3518, file: !3, line: 1019, type: !1045)
!3526 = !DILocalVariable(name: "lacc", scope: !3518, file: !3, line: 1020, type: !1986)
!3527 = !DILocalVariable(name: "racc", scope: !3518, file: !3, line: 1020, type: !1986)
!3528 = !DILocalVariable(name: "link", scope: !3529, file: !3, line: 1048, type: !2000)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1047, column: 5)
!3530 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 1038, column: 7)
!3531 = !DILocation(line: 0, scope: !3518)
!3532 = !DILocation(line: 1018, column: 17, scope: !3518)
!3533 = !DILocation(line: 1022, column: 8, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 1022, column: 7)
!3535 = !DILocation(line: 1022, column: 7, scope: !3518)
!3536 = !DILocation(line: 1025, column: 13, scope: !3518)
!3537 = !DILocation(line: 1026, column: 13, scope: !3518)
!3538 = !DILocation(line: 1028, column: 46, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 1028, column: 7)
!3540 = !DILocation(line: 1028, column: 56, scope: !3539)
!3541 = !DILocation(line: 1028, column: 7, scope: !3539)
!3542 = !DILocation(line: 1028, column: 7, scope: !3518)
!3543 = !DILocation(line: 1031, column: 10, scope: !3518)
!3544 = !DILocation(line: 1032, column: 10, scope: !3518)
!3545 = !DILocation(line: 1034, column: 7, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 1034, column: 7)
!3547 = !DILocation(line: 1034, column: 36, scope: !3546)
!3548 = !DILocation(line: 1034, column: 40, scope: !3546)
!3549 = !DILocation(line: 1035, column: 10, scope: !3546)
!3550 = !DILocation(line: 1035, column: 7, scope: !3546)
!3551 = !DILocation(line: 1035, column: 45, scope: !3546)
!3552 = !DILocation(line: 1035, column: 19, scope: !3546)
!3553 = !DILocation(line: 1034, column: 7, scope: !3518)
!3554 = !DILocation(line: 1036, column: 21, scope: !3546)
!3555 = !DILocation(line: 1036, column: 51, scope: !3546)
!3556 = !DILocation(line: 1036, column: 5, scope: !3546)
!3557 = !DILocation(line: 1038, column: 7, scope: !3530)
!3558 = !DILocation(line: 1038, column: 15, scope: !3530)
!3559 = !DILocation(line: 1038, column: 12, scope: !3530)
!3560 = !DILocation(line: 1039, column: 11, scope: !3530)
!3561 = !DILocation(line: 1039, column: 44, scope: !3530)
!3562 = !DILocation(line: 1040, column: 17, scope: !3530)
!3563 = !DILocation(line: 1040, column: 11, scope: !3530)
!3564 = !DILocation(line: 1041, column: 7, scope: !3530)
!3565 = !DILocation(line: 1041, column: 17, scope: !3530)
!3566 = !DILocation(line: 1041, column: 11, scope: !3530)
!3567 = !DILocation(line: 1042, column: 7, scope: !3530)
!3568 = !DILocation(line: 1042, column: 10, scope: !3530)
!3569 = !DILocation(line: 1045, column: 7, scope: !3530)
!3570 = !DILocation(line: 1045, column: 16, scope: !3530)
!3571 = !DILocation(line: 1045, column: 30, scope: !3530)
!3572 = !DILocation(line: 1045, column: 21, scope: !3530)
!3573 = !DILocation(line: 1046, column: 7, scope: !3530)
!3574 = !DILocation(line: 1046, column: 43, scope: !3530)
!3575 = !DILocation(line: 1046, column: 55, scope: !3530)
!3576 = !DILocation(line: 1046, column: 10, scope: !3530)
!3577 = !DILocation(line: 1038, column: 7, scope: !3518)
!3578 = !DILocation(line: 1050, column: 49, scope: !3529)
!3579 = !DILocation(line: 1050, column: 37, scope: !3529)
!3580 = !DILocation(line: 1050, column: 14, scope: !3529)
!3581 = !DILocation(line: 0, scope: !3529)
!3582 = !DILocation(line: 1051, column: 7, scope: !3529)
!3583 = !DILocation(line: 1053, column: 13, scope: !3529)
!3584 = !DILocation(line: 1053, column: 18, scope: !3529)
!3585 = !DILocation(line: 1054, column: 13, scope: !3529)
!3586 = !DILocation(line: 1054, column: 18, scope: !3529)
!3587 = !DILocation(line: 1056, column: 7, scope: !3529)
!3588 = !DILocation(line: 1057, column: 5, scope: !3529)
!3589 = !DILocation(line: 1059, column: 16, scope: !3518)
!3590 = !DILocation(line: 1059, column: 10, scope: !3518)
!3591 = !DILocation(line: 1059, column: 3, scope: !3518)
!3592 = !DILocation(line: 1060, column: 1, scope: !3518)
!3593 = distinct !DISubprogram(name: "analyze_all_variable_accesses", scope: !3, file: !3, line: 2042, type: !2089, scopeLine: 2043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3594)
!3594 = !{!3595, !3596, !3597, !3605, !3606, !3607, !3612, !3616, !3617, !3621}
!3595 = !DILocalVariable(name: "res", scope: !3593, file: !3, line: 2044, type: !680)
!3596 = !DILocalVariable(name: "tmp", scope: !3593, file: !3, line: 2045, type: !1528)
!3597 = !DILocalVariable(name: "bi", scope: !3593, file: !3, line: 2046, type: !3598)
!3598 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !916, line: 218, baseType: !3599)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !916, line: 203, size: 256, elements: !3600)
!3600 = !{!3601, !3602, !3603, !3604}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3599, file: !916, line: 206, baseType: !919, size: 64)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3599, file: !916, line: 209, baseType: !919, size: 64, offset: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3599, file: !916, line: 212, baseType: !7, size: 32, offset: 128)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3599, file: !916, line: 217, baseType: !929, size: 64, offset: 192)
!3605 = !DILocalVariable(name: "i", scope: !3593, file: !3, line: 2047, type: !7)
!3606 = !DILocalVariable(name: "max_total_scalarization_size", scope: !3593, file: !3, line: 2047, type: !7)
!3607 = !DILocalVariable(name: "var", scope: !3608, file: !3, line: 2056, type: !689)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 2055, column: 7)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 2053, column: 9)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !3, line: 2052, column: 3)
!3611 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 2052, column: 3)
!3612 = !DILocalVariable(name: "var", scope: !3613, file: !3, line: 2076, type: !689)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 2075, column: 5)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 2074, column: 3)
!3615 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 2074, column: 3)
!3616 = !DILocalVariable(name: "access", scope: !3613, file: !3, line: 2077, type: !1986)
!3617 = !DILocalVariable(name: "var", scope: !3618, file: !3, line: 2092, type: !689)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 2091, column: 5)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 2090, column: 3)
!3620 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 2090, column: 3)
!3621 = !DILocalVariable(name: "access", scope: !3618, file: !3, line: 2093, type: !1986)
!3622 = !DILocation(line: 0, scope: !3593)
!3623 = !DILocation(line: 2045, column: 16, scope: !3593)
!3624 = !DILocation(line: 2046, column: 3, scope: !3593)
!3625 = !DILocation(line: 2047, column: 3, scope: !3593)
!3626 = !DILocation(line: 2050, column: 7, scope: !3593)
!3627 = !DILocation(line: 2052, column: 3, scope: !3611)
!3628 = !DILocation(line: 2052, column: 3, scope: !3610)
!3629 = !DILocation(line: 2053, column: 23, scope: !3609)
!3630 = !DILocation(line: 2053, column: 53, scope: !3609)
!3631 = !DILocation(line: 2053, column: 9, scope: !3609)
!3632 = !DILocation(line: 2054, column: 2, scope: !3609)
!3633 = !DILocation(line: 2054, column: 20, scope: !3609)
!3634 = !DILocation(line: 2054, column: 50, scope: !3609)
!3635 = !DILocation(line: 2054, column: 6, scope: !3609)
!3636 = !DILocation(line: 2053, column: 9, scope: !3610)
!3637 = !DILocation(line: 2056, column: 13, scope: !3608)
!3638 = !DILocation(line: 0, scope: !3608)
!3639 = !DILocation(line: 2058, column: 6, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 2058, column: 6)
!3641 = !DILocation(line: 2058, column: 22, scope: !3640)
!3642 = !DILocation(line: 2059, column: 6, scope: !3640)
!3643 = !DILocation(line: 2059, column: 35, scope: !3640)
!3644 = !DILocation(line: 2059, column: 21, scope: !3640)
!3645 = !DILocation(line: 2059, column: 10, scope: !3640)
!3646 = !DILocation(line: 2060, column: 3, scope: !3640)
!3647 = !DILocation(line: 2061, column: 6, scope: !3640)
!3648 = !DILocation(line: 2061, column: 37, scope: !3640)
!3649 = !DILocation(line: 2061, column: 9, scope: !3640)
!3650 = !DILocation(line: 2058, column: 6, scope: !3608)
!3651 = !DILocation(line: 2063, column: 6, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 2062, column: 4)
!3653 = !DILocation(line: 2064, column: 10, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 2064, column: 10)
!3655 = !DILocation(line: 2064, column: 20, scope: !3654)
!3656 = !DILocation(line: 2064, column: 24, scope: !3654)
!3657 = !DILocation(line: 2064, column: 35, scope: !3654)
!3658 = !DILocation(line: 2064, column: 10, scope: !3652)
!3659 = !DILocation(line: 2066, column: 3, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 2065, column: 8)
!3661 = !DILocation(line: 2067, column: 23, scope: !3660)
!3662 = !DILocation(line: 2067, column: 3, scope: !3660)
!3663 = !DILocation(line: 2068, column: 12, scope: !3660)
!3664 = !DILocation(line: 2068, column: 41, scope: !3660)
!3665 = !DILocation(line: 2068, column: 3, scope: !3660)
!3666 = !DILocation(line: 2069, column: 8, scope: !3660)
!3667 = distinct !{!3667, !3627, !3668}
!3668 = !DILocation(line: 2071, column: 7, scope: !3611)
!3669 = !DILocation(line: 2073, column: 21, scope: !3593)
!3670 = !DILocation(line: 2073, column: 3, scope: !3593)
!3671 = !DILocation(line: 2074, column: 3, scope: !3615)
!3672 = !DILocation(line: 2074, column: 3, scope: !3614)
!3673 = !DILocation(line: 2076, column: 18, scope: !3613)
!3674 = !DILocation(line: 0, scope: !3613)
!3675 = !DILocation(line: 2079, column: 16, scope: !3613)
!3676 = !DILocation(line: 2080, column: 11, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 2080, column: 11)
!3678 = !DILocation(line: 2080, column: 11, scope: !3613)
!3679 = !DILocation(line: 2081, column: 2, scope: !3677)
!3680 = !DILocation(line: 2083, column: 2, scope: !3677)
!3681 = distinct !{!3681, !3671, !3682}
!3682 = !DILocation(line: 2085, column: 5, scope: !3615)
!3683 = !DILocation(line: 2087, column: 3, scope: !3593)
!3684 = !DILocation(line: 2089, column: 21, scope: !3593)
!3685 = !DILocation(line: 2089, column: 3, scope: !3593)
!3686 = !DILocation(line: 2090, column: 3, scope: !3620)
!3687 = !DILocation(line: 2090, column: 3, scope: !3619)
!3688 = !DILocation(line: 2092, column: 18, scope: !3618)
!3689 = !DILocation(line: 0, scope: !3618)
!3690 = !DILocation(line: 2093, column: 31, scope: !3618)
!3691 = !DILocation(line: 2095, column: 11, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 2095, column: 11)
!3693 = !DILocation(line: 2095, column: 11, scope: !3618)
!3694 = !DILocation(line: 2097, column: 7, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 2096, column: 2)
!3696 = !DILocation(line: 2098, column: 8, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 2098, column: 8)
!3698 = !DILocation(line: 2098, column: 18, scope: !3697)
!3699 = !DILocation(line: 2098, column: 22, scope: !3697)
!3700 = !DILocation(line: 2098, column: 33, scope: !3697)
!3701 = !DILocation(line: 2098, column: 8, scope: !3695)
!3702 = !DILocation(line: 2100, column: 8, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 2099, column: 6)
!3704 = !DILocation(line: 2101, column: 28, scope: !3703)
!3705 = !DILocation(line: 2101, column: 8, scope: !3703)
!3706 = !DILocation(line: 2102, column: 17, scope: !3703)
!3707 = !DILocation(line: 2102, column: 46, scope: !3703)
!3708 = !DILocation(line: 2102, column: 8, scope: !3703)
!3709 = !DILocation(line: 2103, column: 26, scope: !3703)
!3710 = !DILocation(line: 2103, column: 8, scope: !3703)
!3711 = !DILocation(line: 2104, column: 17, scope: !3703)
!3712 = !DILocation(line: 2104, column: 8, scope: !3703)
!3713 = !DILocation(line: 2105, column: 6, scope: !3703)
!3714 = !DILocation(line: 2108, column: 2, scope: !3692)
!3715 = distinct !{!3715, !3686, !3716}
!3716 = !DILocation(line: 2109, column: 5, scope: !3620)
!3717 = !DILocation(line: 2111, column: 3, scope: !3593)
!3718 = !DILocation(line: 2113, column: 7, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 2113, column: 7)
!3720 = !DILocation(line: 2113, column: 7, scope: !3593)
!3721 = !DILocation(line: 2115, column: 33, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 2114, column: 5)
!3723 = !DILocation(line: 2115, column: 7, scope: !3722)
!3724 = !DILocation(line: 2116, column: 7, scope: !3722)
!3725 = !DILocation(line: 0, scope: !3719)
!3726 = !DILocation(line: 2120, column: 1, scope: !3593)
!3727 = distinct !DISubprogram(name: "sra_modify_expr", scope: !3, file: !3, line: 2292, type: !3226, scopeLine: 2294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3728)
!3728 = !{!3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3739, !3742, !3743, !3746, !3748, !3751}
!3729 = !DILocalVariable(name: "expr", arg: 1, scope: !3727, file: !3, line: 2292, type: !1045)
!3730 = !DILocalVariable(name: "gsi", arg: 2, scope: !3727, file: !3, line: 2292, type: !3228)
!3731 = !DILocalVariable(name: "write", arg: 3, scope: !3727, file: !3, line: 2292, type: !679)
!3732 = !DILocalVariable(name: "data", arg: 4, scope: !3727, file: !3, line: 2293, type: !684)
!3733 = !DILocalVariable(name: "access", scope: !3727, file: !3, line: 2295, type: !1986)
!3734 = !DILocalVariable(name: "type", scope: !3727, file: !3, line: 2296, type: !689)
!3735 = !DILocalVariable(name: "bfr", scope: !3727, file: !3, line: 2296, type: !689)
!3736 = !DILocalVariable(name: "repl", scope: !3737, file: !3, line: 2315, type: !689)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 2314, column: 5)
!3738 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2313, column: 7)
!3739 = !DILocalVariable(name: "ref", scope: !3740, file: !3, line: 2328, type: !689)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 2327, column: 2)
!3741 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 2326, column: 11)
!3742 = !DILocalVariable(name: "ok", scope: !3740, file: !3, line: 2329, type: !679)
!3743 = !DILocalVariable(name: "stmt", scope: !3744, file: !3, line: 2337, type: !1011)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 2336, column: 6)
!3745 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 2335, column: 8)
!3746 = !DILocalVariable(name: "stmt", scope: !3747, file: !3, line: 2347, type: !1011)
!3747 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 2346, column: 6)
!3748 = !DILocalVariable(name: "start_offset", scope: !3749, file: !3, line: 2363, type: !745)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 2362, column: 5)
!3750 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2361, column: 7)
!3751 = !DILocalVariable(name: "chunk_size", scope: !3749, file: !3, line: 2363, type: !745)
!3752 = !DILocation(line: 0, scope: !3727)
!3753 = !DILocation(line: 2298, column: 7, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2298, column: 7)
!3755 = !DILocation(line: 2298, column: 25, scope: !3754)
!3756 = !DILocation(line: 2298, column: 7, scope: !3727)
!3757 = !DILocation(line: 2301, column: 15, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 2299, column: 5)
!3759 = !DILocation(line: 0, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2306, column: 7)
!3761 = !DILocation(line: 2306, column: 7, scope: !3760)
!3762 = !DILocation(line: 2302, column: 5, scope: !3758)
!3763 = !DILocation(line: 2306, column: 25, scope: !3760)
!3764 = !DILocation(line: 0, scope: !3754)
!3765 = !DILocation(line: 2306, column: 42, scope: !3760)
!3766 = !DILocation(line: 2306, column: 63, scope: !3760)
!3767 = !DILocation(line: 2306, column: 7, scope: !3727)
!3768 = !DILocation(line: 2307, column: 13, scope: !3760)
!3769 = !DILocation(line: 2308, column: 33, scope: !3727)
!3770 = !DILocation(line: 2307, column: 5, scope: !3760)
!3771 = !DILocation(line: 2308, column: 12, scope: !3727)
!3772 = !DILocation(line: 2309, column: 8, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2309, column: 7)
!3774 = !DILocation(line: 2309, column: 7, scope: !3727)
!3775 = !DILocation(line: 2313, column: 15, scope: !3738)
!3776 = !DILocation(line: 2313, column: 7, scope: !3738)
!3777 = !DILocation(line: 2313, column: 7, scope: !3727)
!3778 = !DILocation(line: 2311, column: 10, scope: !3727)
!3779 = !DILocation(line: 2315, column: 19, scope: !3737)
!3780 = !DILocation(line: 0, scope: !3737)
!3781 = !DILocation(line: 2326, column: 53, scope: !3741)
!3782 = !DILocation(line: 2326, column: 12, scope: !3741)
!3783 = !DILocation(line: 2326, column: 11, scope: !3737)
!3784 = !DILocation(line: 2328, column: 4, scope: !3740)
!3785 = !DILocation(line: 2328, column: 23, scope: !3740)
!3786 = !DILocation(line: 2328, column: 9, scope: !3740)
!3787 = !DILocation(line: 2331, column: 37, scope: !3740)
!3788 = !DILocation(line: 2332, column: 18, scope: !3740)
!3789 = !DILocation(line: 2332, column: 34, scope: !3740)
!3790 = !DILocation(line: 0, scope: !3740)
!3791 = !DILocation(line: 2331, column: 9, scope: !3740)
!3792 = !DILocation(line: 2333, column: 4, scope: !3740)
!3793 = !DILocation(line: 2335, column: 8, scope: !3745)
!3794 = !DILocation(line: 0, scope: !3745)
!3795 = !DILocation(line: 2335, column: 8, scope: !3740)
!3796 = !DILocation(line: 2339, column: 12, scope: !3744)
!3797 = !DILocation(line: 2342, column: 15, scope: !3744)
!3798 = !DILocation(line: 2340, column: 40, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 2339, column: 12)
!3800 = !DILocation(line: 2340, column: 9, scope: !3799)
!3801 = !DILocation(line: 2340, column: 7, scope: !3799)
!3802 = !DILocation(line: 2340, column: 3, scope: !3799)
!3803 = !DILocation(line: 0, scope: !3744)
!3804 = !DILocation(line: 2343, column: 8, scope: !3744)
!3805 = !DILocation(line: 2344, column: 6, scope: !3744)
!3806 = !DILocation(line: 2349, column: 12, scope: !3747)
!3807 = !DILocation(line: 2350, column: 10, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 2349, column: 12)
!3809 = !DILocation(line: 2350, column: 3, scope: !3808)
!3810 = !DILocation(line: 2352, column: 15, scope: !3747)
!3811 = !DILocation(line: 0, scope: !3747)
!3812 = !DILocation(line: 2353, column: 8, scope: !3747)
!3813 = !DILocation(line: 2355, column: 2, scope: !3741)
!3814 = !DILocation(line: 2355, column: 2, scope: !3740)
!3815 = !DILocation(line: 2357, column: 8, scope: !3741)
!3816 = !DILocation(line: 2358, column: 22, scope: !3737)
!3817 = !DILocation(line: 2359, column: 5, scope: !3737)
!3818 = !DILocation(line: 2361, column: 15, scope: !3750)
!3819 = !DILocation(line: 2361, column: 7, scope: !3750)
!3820 = !DILocation(line: 2361, column: 7, scope: !3727)
!3821 = !DILocation(line: 2364, column: 11, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 2364, column: 11)
!3823 = !DILocation(line: 2365, column: 4, scope: !3822)
!3824 = !DILocation(line: 2365, column: 22, scope: !3822)
!3825 = !DILocation(line: 2365, column: 7, scope: !3822)
!3826 = !DILocation(line: 2366, column: 4, scope: !3822)
!3827 = !DILocation(line: 2366, column: 22, scope: !3822)
!3828 = !DILocation(line: 2366, column: 7, scope: !3822)
!3829 = !DILocation(line: 2364, column: 11, scope: !3749)
!3830 = !DILocation(line: 2368, column: 31, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 2367, column: 2)
!3832 = !DILocation(line: 2368, column: 17, scope: !3831)
!3833 = !DILocation(line: 0, scope: !3749)
!3834 = !DILocation(line: 2369, column: 27, scope: !3831)
!3835 = !DILocation(line: 2370, column: 22, scope: !3831)
!3836 = !DILocation(line: 2370, column: 8, scope: !3831)
!3837 = !DILocation(line: 2370, column: 6, scope: !3831)
!3838 = !DILocation(line: 2371, column: 2, scope: !3831)
!3839 = !DILocation(line: 0, scope: !3822)
!3840 = !DILocation(line: 2375, column: 40, scope: !3749)
!3841 = !DILocation(line: 2375, column: 61, scope: !3749)
!3842 = !DILocation(line: 2375, column: 7, scope: !3749)
!3843 = !DILocation(line: 2377, column: 5, scope: !3749)
!3844 = !DILocation(line: 2379, column: 1, scope: !3727)
!3845 = distinct !DISubprogram(name: "sra_modify_assign", scope: !3, file: !3, line: 2543, type: !3236, scopeLine: 2545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3846)
!3846 = !{!3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3865, !3868, !3873}
!3847 = !DILocalVariable(name: "stmt", arg: 1, scope: !3845, file: !3, line: 2543, type: !2895)
!3848 = !DILocalVariable(name: "gsi", arg: 2, scope: !3845, file: !3, line: 2543, type: !3228)
!3849 = !DILocalVariable(name: "data", arg: 3, scope: !3845, file: !3, line: 2544, type: !684)
!3850 = !DILocalVariable(name: "lacc", scope: !3845, file: !3, line: 2546, type: !1986)
!3851 = !DILocalVariable(name: "racc", scope: !3845, file: !3, line: 2546, type: !1986)
!3852 = !DILocalVariable(name: "lhs", scope: !3845, file: !3, line: 2547, type: !689)
!3853 = !DILocalVariable(name: "rhs", scope: !3845, file: !3, line: 2547, type: !689)
!3854 = !DILocalVariable(name: "modify_this_stmt", scope: !3845, file: !3, line: 2548, type: !679)
!3855 = !DILocalVariable(name: "force_gimple_rhs", scope: !3845, file: !3, line: 2549, type: !679)
!3856 = !DILocalVariable(name: "loc", scope: !3845, file: !3, line: 2550, type: !814)
!3857 = !DILocalVariable(name: "orig_gsi", scope: !3845, file: !3, line: 2551, type: !3229)
!3858 = !DILocalVariable(name: "expr", scope: !3859, file: !3, line: 2606, type: !689)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 2605, column: 6)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 2603, column: 8)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 2599, column: 2)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2598, column: 11)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 2597, column: 5)
!3864 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2596, column: 7)
!3865 = !DILocalVariable(name: "expr", scope: !3866, file: !3, line: 2617, type: !689)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 2616, column: 6)
!3867 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 2614, column: 13)
!3868 = !DILocalVariable(name: "orig_gsi", scope: !3869, file: !3, line: 2685, type: !3229)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2684, column: 2)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 2683, column: 11)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 2682, column: 5)
!3872 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2665, column: 7)
!3873 = !DILocalVariable(name: "refreshed", scope: !3869, file: !3, line: 2686, type: !635)
!3874 = !DILocation(line: 0, scope: !3845)
!3875 = !DILocation(line: 2550, column: 37, scope: !3845)
!3876 = !DILocation(line: 2550, column: 20, scope: !3845)
!3877 = !DILocation(line: 2551, column: 3, scope: !3845)
!3878 = !DILocation(line: 2551, column: 35, scope: !3845)
!3879 = !DILocation(line: 2553, column: 32, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2553, column: 7)
!3881 = !DILocation(line: 2553, column: 8, scope: !3880)
!3882 = !DILocation(line: 2553, column: 7, scope: !3845)
!3883 = !DILocation(line: 2555, column: 28, scope: !3845)
!3884 = !DILocation(line: 2555, column: 9, scope: !3845)
!3885 = !DILocation(line: 2556, column: 29, scope: !3845)
!3886 = !DILocation(line: 2556, column: 9, scope: !3845)
!3887 = !DILocation(line: 2558, column: 7, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2558, column: 7)
!3889 = !DILocation(line: 2558, column: 23, scope: !3888)
!3890 = !DILocation(line: 2558, column: 7, scope: !3845)
!3891 = !DILocation(line: 2559, column: 12, scope: !3888)
!3892 = !DILocation(line: 2559, column: 5, scope: !3888)
!3893 = !DILocation(line: 2561, column: 23, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2561, column: 7)
!3895 = !DILocation(line: 2561, column: 40, scope: !3894)
!3896 = !DILocation(line: 2561, column: 43, scope: !3894)
!3897 = !DILocation(line: 2561, column: 59, scope: !3894)
!3898 = !DILocation(line: 2562, column: 7, scope: !3894)
!3899 = !DILocation(line: 2562, column: 26, scope: !3894)
!3900 = !DILocation(line: 2562, column: 43, scope: !3894)
!3901 = !DILocation(line: 2562, column: 62, scope: !3894)
!3902 = !DILocation(line: 2563, column: 7, scope: !3894)
!3903 = !DILocation(line: 2563, column: 26, scope: !3894)
!3904 = !DILocation(line: 2563, column: 43, scope: !3894)
!3905 = !DILocation(line: 2563, column: 62, scope: !3894)
!3906 = !DILocation(line: 2561, column: 7, scope: !3845)
!3907 = !DILocation(line: 2565, column: 67, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 2564, column: 5)
!3909 = !DILocation(line: 2565, column: 43, scope: !3908)
!3910 = !DILocation(line: 2565, column: 26, scope: !3908)
!3911 = !DILocation(line: 2567, column: 67, scope: !3908)
!3912 = !DILocation(line: 2567, column: 44, scope: !3908)
!3913 = !DILocation(line: 2567, column: 27, scope: !3908)
!3914 = !DILocation(line: 2567, column: 24, scope: !3908)
!3915 = !DILocation(line: 2569, column: 14, scope: !3908)
!3916 = !DILocation(line: 2569, column: 7, scope: !3908)
!3917 = !DILocation(line: 2572, column: 10, scope: !3845)
!3918 = !DILocation(line: 2573, column: 10, scope: !3845)
!3919 = !DILocation(line: 2574, column: 8, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2574, column: 7)
!3921 = !DILocation(line: 2574, column: 17, scope: !3920)
!3922 = !DILocation(line: 2574, column: 13, scope: !3920)
!3923 = !DILocation(line: 2577, column: 7, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2577, column: 7)
!3925 = !DILocation(line: 2577, column: 12, scope: !3924)
!3926 = !DILocation(line: 2577, column: 21, scope: !3924)
!3927 = !DILocation(line: 2577, column: 15, scope: !3924)
!3928 = !DILocation(line: 2577, column: 7, scope: !3845)
!3929 = !DILocation(line: 2579, column: 13, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 2578, column: 5)
!3931 = !DILocation(line: 2580, column: 30, scope: !3930)
!3932 = !DILocation(line: 2580, column: 7, scope: !3930)
!3933 = !DILocation(line: 2582, column: 17, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 2582, column: 11)
!3935 = !DILocation(line: 2582, column: 11, scope: !3930)
!3936 = !DILocation(line: 2584, column: 22, scope: !3930)
!3937 = !DILocation(line: 2585, column: 5, scope: !3930)
!3938 = !DILocation(line: 2587, column: 7, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2587, column: 7)
!3940 = !DILocation(line: 2587, column: 12, scope: !3939)
!3941 = !DILocation(line: 2587, column: 21, scope: !3939)
!3942 = !DILocation(line: 2587, column: 15, scope: !3939)
!3943 = !DILocation(line: 2587, column: 7, scope: !3845)
!3944 = !DILocation(line: 2589, column: 13, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 2588, column: 5)
!3946 = !DILocation(line: 2591, column: 17, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 2591, column: 11)
!3948 = !DILocation(line: 2591, column: 11, scope: !3947)
!3949 = !DILocation(line: 2591, column: 11, scope: !3945)
!3950 = !DILocation(line: 2593, column: 22, scope: !3945)
!3951 = !DILocation(line: 2594, column: 5, scope: !3945)
!3952 = !DILocation(line: 2596, column: 7, scope: !3864)
!3953 = !DILocation(line: 2596, column: 7, scope: !3845)
!3954 = !DILocation(line: 2598, column: 39, scope: !3862)
!3955 = !DILocation(line: 2598, column: 56, scope: !3862)
!3956 = !DILocation(line: 2598, column: 12, scope: !3862)
!3957 = !DILocation(line: 2598, column: 11, scope: !3863)
!3958 = !DILocation(line: 2603, column: 8, scope: !3860)
!3959 = !DILocation(line: 2604, column: 8, scope: !3860)
!3960 = !DILocation(line: 2604, column: 12, scope: !3860)
!3961 = !DILocation(line: 2603, column: 8, scope: !3861)
!3962 = !DILocation(line: 2606, column: 8, scope: !3859)
!3963 = !DILocation(line: 0, scope: !3859)
!3964 = !DILocation(line: 2606, column: 13, scope: !3859)
!3965 = !DILocation(line: 2607, column: 41, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 2607, column: 12)
!3967 = !DILocation(line: 2608, column: 6, scope: !3966)
!3968 = !DILocation(line: 2607, column: 12, scope: !3966)
!3969 = !DILocation(line: 2607, column: 12, scope: !3859)
!3970 = !DILocation(line: 2610, column: 11, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 2609, column: 3)
!3972 = !DILocation(line: 2611, column: 28, scope: !3971)
!3973 = !DILocation(line: 2611, column: 5, scope: !3971)
!3974 = !DILocation(line: 2612, column: 3, scope: !3971)
!3975 = !DILocation(line: 2613, column: 6, scope: !3860)
!3976 = !DILocation(line: 2613, column: 6, scope: !3859)
!3977 = !DILocation(line: 2614, column: 13, scope: !3867)
!3978 = !DILocation(line: 2615, column: 6, scope: !3867)
!3979 = !DILocation(line: 2615, column: 10, scope: !3867)
!3980 = !DILocation(line: 2614, column: 13, scope: !3860)
!3981 = !DILocation(line: 2617, column: 8, scope: !3866)
!3982 = !DILocation(line: 0, scope: !3866)
!3983 = !DILocation(line: 2617, column: 13, scope: !3866)
!3984 = !DILocation(line: 2618, column: 41, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 2618, column: 12)
!3986 = !DILocation(line: 2619, column: 6, scope: !3985)
!3987 = !DILocation(line: 2618, column: 12, scope: !3985)
!3988 = !DILocation(line: 2620, column: 9, scope: !3985)
!3989 = !DILocation(line: 2618, column: 12, scope: !3866)
!3990 = !DILocation(line: 2621, column: 6, scope: !3867)
!3991 = !DILocation(line: 2621, column: 6, scope: !3866)
!3992 = !DILocation(line: 2589, column: 11, scope: !3945)
!3993 = !DILocation(line: 2622, column: 36, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 2622, column: 8)
!3995 = !DILocation(line: 2622, column: 53, scope: !3994)
!3996 = !DILocation(line: 2622, column: 9, scope: !3994)
!3997 = !DILocation(line: 2622, column: 8, scope: !3861)
!3998 = !DILocation(line: 2624, column: 14, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 2623, column: 6)
!4000 = !DILocation(line: 2625, column: 32, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 2625, column: 12)
!4002 = !DILocation(line: 2625, column: 12, scope: !4001)
!4003 = !DILocation(line: 2626, column: 5, scope: !4001)
!4004 = !DILocation(line: 2626, column: 8, scope: !4001)
!4005 = !DILocation(line: 2626, column: 24, scope: !4001)
!4006 = !DILocation(line: 2625, column: 12, scope: !3999)
!4007 = !DILocation(line: 2579, column: 11, scope: !3930)
!4008 = !DILocation(line: 2592, column: 19, scope: !3947)
!4009 = !DILocation(line: 2665, column: 32, scope: !3872)
!4010 = !DILocation(line: 2665, column: 7, scope: !3872)
!4011 = !DILocation(line: 2666, column: 7, scope: !3872)
!4012 = !DILocation(line: 2666, column: 10, scope: !3872)
!4013 = !DILocation(line: 2667, column: 7, scope: !3872)
!4014 = !DILocation(line: 2667, column: 10, scope: !3872)
!4015 = !DILocation(line: 2668, column: 7, scope: !3872)
!4016 = !DILocation(line: 2668, column: 11, scope: !3872)
!4017 = !DILocation(line: 2669, column: 4, scope: !3872)
!4018 = !DILocation(line: 2669, column: 58, scope: !3872)
!4019 = !DILocation(line: 2669, column: 8, scope: !3872)
!4020 = !DILocation(line: 2670, column: 7, scope: !3872)
!4021 = !DILocation(line: 2670, column: 11, scope: !3872)
!4022 = !DILocation(line: 2671, column: 4, scope: !3872)
!4023 = !DILocation(line: 2671, column: 58, scope: !3872)
!4024 = !DILocation(line: 2671, column: 8, scope: !3872)
!4025 = !DILocation(line: 2665, column: 7, scope: !3845)
!4026 = !DILocation(line: 2673, column: 11, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 2673, column: 11)
!4028 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 2672, column: 5)
!4029 = !DILocation(line: 2673, column: 11, scope: !4028)
!4030 = !DILocation(line: 2674, column: 33, scope: !4027)
!4031 = !DILocation(line: 2674, column: 52, scope: !4027)
!4032 = !DILocation(line: 2674, column: 2, scope: !4027)
!4033 = !DILocation(line: 2676, column: 11, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 2676, column: 11)
!4035 = !DILocation(line: 2676, column: 11, scope: !4028)
!4036 = !DILocation(line: 2677, column: 33, scope: !4034)
!4037 = !DILocation(line: 2677, column: 52, scope: !4034)
!4038 = !DILocation(line: 2677, column: 2, scope: !4034)
!4039 = !DILocation(line: 2679, column: 42, scope: !4028)
!4040 = !DILocation(line: 2680, column: 5, scope: !4028)
!4041 = !DILocation(line: 2683, column: 11, scope: !3870)
!4042 = !DILocation(line: 2683, column: 40, scope: !3870)
!4043 = !DILocation(line: 2683, column: 43, scope: !3870)
!4044 = !DILocation(line: 2683, column: 11, scope: !3871)
!4045 = !DILocation(line: 2685, column: 4, scope: !3869)
!4046 = !DILocation(line: 2685, column: 36, scope: !3869)
!4047 = !DILocation(line: 2686, column: 4, scope: !3869)
!4048 = !DILocation(line: 2688, column: 14, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 2688, column: 8)
!4050 = !DILocation(line: 2688, column: 8, scope: !4049)
!4051 = !DILocation(line: 2688, column: 23, scope: !4049)
!4052 = !DILocation(line: 2688, column: 33, scope: !4049)
!4053 = !DILocation(line: 2688, column: 27, scope: !4049)
!4054 = !DILocation(line: 2688, column: 8, scope: !3869)
!4055 = !DILocation(line: 2689, column: 18, scope: !4049)
!4056 = !DILocation(line: 0, scope: !3869)
!4057 = !DILocation(line: 2689, column: 6, scope: !4049)
!4058 = !DILocation(line: 0, scope: !4049)
!4059 = !DILocation(line: 2693, column: 43, scope: !3869)
!4060 = !DILocation(line: 2694, column: 15, scope: !3869)
!4061 = !DILocation(line: 2694, column: 29, scope: !3869)
!4062 = !DILocation(line: 2693, column: 4, scope: !3869)
!4063 = !DILocation(line: 2696, column: 8, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 2696, column: 8)
!4065 = !DILocation(line: 2696, column: 18, scope: !4064)
!4066 = !DILocation(line: 2696, column: 8, scope: !3869)
!4067 = !DILocation(line: 2698, column: 12, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 2698, column: 12)
!4069 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 2697, column: 6)
!4070 = !DILocation(line: 2698, column: 21, scope: !4068)
!4071 = !DILocation(line: 2698, column: 18, scope: !4068)
!4072 = !DILocation(line: 2698, column: 12, scope: !4069)
!4073 = !DILocation(line: 2699, column: 3, scope: !4068)
!4074 = !DILocation(line: 2701, column: 26, scope: !4069)
!4075 = !DILocation(line: 2701, column: 8, scope: !4069)
!4076 = !DILocation(line: 2702, column: 8, scope: !4069)
!4077 = !DILocation(line: 2703, column: 25, scope: !4069)
!4078 = !DILocation(line: 2704, column: 8, scope: !4069)
!4079 = !DILocation(line: 2706, column: 2, scope: !3870)
!4080 = !DILocation(line: 2709, column: 8, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 2709, column: 8)
!4082 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2708, column: 2)
!4083 = !DILocation(line: 2709, column: 8, scope: !4082)
!4084 = !DILocation(line: 2711, column: 19, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !3, line: 2711, column: 12)
!4086 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 2710, column: 6)
!4087 = !DILocation(line: 2711, column: 13, scope: !4085)
!4088 = !DILocation(line: 2713, column: 5, scope: !4085)
!4089 = !DILocation(line: 2713, column: 8, scope: !4085)
!4090 = !DILocation(line: 2713, column: 24, scope: !4085)
!4091 = !DILocation(line: 2711, column: 12, scope: !4086)
!4092 = !DILocation(line: 2715, column: 36, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 2714, column: 3)
!4094 = !DILocation(line: 2716, column: 15, scope: !4093)
!4095 = !DILocation(line: 2715, column: 5, scope: !4093)
!4096 = !DILocation(line: 2718, column: 5, scope: !4093)
!4097 = !DILocation(line: 2719, column: 23, scope: !4093)
!4098 = !DILocation(line: 2719, column: 5, scope: !4093)
!4099 = !DILocation(line: 2720, column: 5, scope: !4093)
!4100 = !DILocation(line: 2721, column: 22, scope: !4093)
!4101 = !DILocation(line: 2722, column: 5, scope: !4093)
!4102 = !DILocation(line: 2725, column: 34, scope: !4085)
!4103 = !DILocation(line: 2726, column: 13, scope: !4085)
!4104 = !DILocation(line: 2725, column: 3, scope: !4085)
!4105 = !DILocation(line: 2727, column: 6, scope: !4086)
!4106 = !DILocation(line: 2728, column: 13, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 2728, column: 13)
!4108 = !DILocation(line: 2728, column: 13, scope: !4081)
!4109 = !DILocation(line: 2729, column: 37, scope: !4107)
!4110 = !DILocation(line: 2729, column: 61, scope: !4107)
!4111 = !DILocation(line: 2729, column: 6, scope: !4107)
!4112 = !DILocation(line: 2736, column: 7, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2736, column: 7)
!4114 = !DILocation(line: 2736, column: 7, scope: !3845)
!4115 = !DILocation(line: 2737, column: 11, scope: !4113)
!4116 = !DILocation(line: 2737, column: 5, scope: !4113)
!4117 = !DILocation(line: 2739, column: 27, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2739, column: 7)
!4119 = !DILocation(line: 2739, column: 7, scope: !4118)
!4120 = !DILocation(line: 2739, column: 34, scope: !4118)
!4121 = !DILocation(line: 2739, column: 7, scope: !3845)
!4122 = !DILocation(line: 2741, column: 7, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 2740, column: 5)
!4124 = !DILocation(line: 2742, column: 7, scope: !4123)
!4125 = !DILocation(line: 2745, column: 10, scope: !3845)
!4126 = !DILocation(line: 2745, column: 3, scope: !3845)
!4127 = !DILocation(line: 2746, column: 1, scope: !3845)
!4128 = distinct !DISubprogram(name: "initialize_parameter_reductions", scope: !3, file: !3, line: 2752, type: !2861, scopeLine: 2753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4129)
!4129 = !{!4130, !4131, !4132, !4133, !4137}
!4130 = !DILocalVariable(name: "gsi", scope: !4128, file: !3, line: 2754, type: !3229)
!4131 = !DILocalVariable(name: "seq", scope: !4128, file: !3, line: 2755, type: !1001)
!4132 = !DILocalVariable(name: "parm", scope: !4128, file: !3, line: 2756, type: !689)
!4133 = !DILocalVariable(name: "access_vec", scope: !4134, file: !3, line: 2762, type: !2023)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 2761, column: 5)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 2758, column: 3)
!4136 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 2758, column: 3)
!4137 = !DILocalVariable(name: "access", scope: !4134, file: !3, line: 2763, type: !1986)
!4138 = !DILocation(line: 2754, column: 3, scope: !4128)
!4139 = !DILocation(line: 0, scope: !4128)
!4140 = !DILocation(line: 2758, column: 15, scope: !4136)
!4141 = !DILocation(line: 0, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 2772, column: 2)
!4143 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 2771, column: 11)
!4144 = !DILocation(line: 2758, column: 8, scope: !4136)
!4145 = !DILocation(line: 2755, column: 14, scope: !4128)
!4146 = !DILocation(line: 0, scope: !4136)
!4147 = !DILocation(line: 2758, column: 3, scope: !4136)
!4148 = !DILocation(line: 2765, column: 26, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 2765, column: 11)
!4150 = !DILocation(line: 2765, column: 44, scope: !4149)
!4151 = !DILocation(line: 2765, column: 12, scope: !4149)
!4152 = !DILocation(line: 2765, column: 11, scope: !4134)
!4153 = !DILocation(line: 2767, column: 20, scope: !4134)
!4154 = !DILocation(line: 0, scope: !4134)
!4155 = !DILocation(line: 2768, column: 12, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 2768, column: 11)
!4157 = !DILocation(line: 2768, column: 11, scope: !4134)
!4158 = !DILocation(line: 2771, column: 12, scope: !4143)
!4159 = !DILocation(line: 2771, column: 11, scope: !4134)
!4160 = !DILocation(line: 2773, column: 10, scope: !4142)
!4161 = !DILocation(line: 2774, column: 10, scope: !4142)
!4162 = !DILocation(line: 2775, column: 2, scope: !4142)
!4163 = !DILocation(line: 2777, column: 21, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 2777, column: 7)
!4165 = !DILocation(line: 2777, column: 12, scope: !4164)
!4166 = !DILocation(line: 0, scope: !4164)
!4167 = !DILocation(line: 2777, column: 7, scope: !4164)
!4168 = !DILocation(line: 2780, column: 2, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4164, file: !3, line: 2777, column: 7)
!4170 = !DILocation(line: 2779, column: 22, scope: !4169)
!4171 = !DILocation(line: 2777, column: 7, scope: !4169)
!4172 = distinct !{!4172, !4167, !4173}
!4173 = !DILocation(line: 2780, column: 66, scope: !4164)
!4174 = !DILocation(line: 2760, column: 15, scope: !4135)
!4175 = !DILocation(line: 2758, column: 3, scope: !4135)
!4176 = distinct !{!4176, !4147, !4177}
!4177 = !DILocation(line: 2781, column: 5, scope: !4136)
!4178 = !DILocation(line: 2783, column: 7, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 2783, column: 7)
!4180 = !DILocation(line: 2783, column: 7, scope: !4128)
!4181 = !DILocation(line: 2784, column: 57, scope: !4179)
!4182 = !DILocation(line: 2784, column: 39, scope: !4179)
!4183 = !DILocation(line: 2784, column: 5, scope: !4179)
!4184 = !DILocation(line: 2785, column: 1, scope: !4128)
!4185 = distinct !DISubprogram(name: "sra_deinitialize", scope: !3, file: !3, line: 590, type: !2861, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!4186 = !DILocation(line: 592, column: 3, scope: !4185)
!4187 = !DILocation(line: 593, column: 3, scope: !4185)
!4188 = !DILocation(line: 594, column: 3, scope: !4185)
!4189 = !DILocation(line: 595, column: 20, scope: !4185)
!4190 = !DILocation(line: 595, column: 3, scope: !4185)
!4191 = !DILocation(line: 596, column: 20, scope: !4185)
!4192 = !DILocation(line: 596, column: 3, scope: !4185)
!4193 = !DILocation(line: 597, column: 3, scope: !4185)
!4194 = !DILocation(line: 599, column: 25, scope: !4185)
!4195 = !DILocation(line: 599, column: 3, scope: !4185)
!4196 = !DILocation(line: 600, column: 24, scope: !4185)
!4197 = !DILocation(line: 600, column: 3, scope: !4185)
!4198 = !DILocation(line: 601, column: 1, scope: !4185)
!4199 = distinct !DISubprogram(name: "first_referenced_var", scope: !4200, file: !4200, line: 105, type: !4201, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4204)
!4200 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!689, !4203}
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!4204 = !{!4205}
!4205 = !DILocalVariable(name: "iter", arg: 1, scope: !4199, file: !4200, line: 105, type: !4203)
!4206 = !DILocation(line: 0, scope: !4199)
!4207 = !DILocation(line: 107, column: 44, scope: !4199)
!4208 = !DILocation(line: 108, column: 33, scope: !4199)
!4209 = !DILocation(line: 108, column: 9, scope: !4199)
!4210 = !DILocation(line: 107, column: 17, scope: !4199)
!4211 = !DILocation(line: 107, column: 10, scope: !4199)
!4212 = !DILocation(line: 107, column: 3, scope: !4199)
!4213 = distinct !DISubprogram(name: "end_referenced_vars_p", scope: !4200, file: !4200, line: 115, type: !4214, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4218)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!679, !4216}
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3152)
!4218 = !{!4219}
!4219 = !DILocalVariable(name: "iter", arg: 1, scope: !4213, file: !4200, line: 115, type: !4216)
!4220 = !DILocation(line: 0, scope: !4213)
!4221 = !DILocation(line: 117, column: 29, scope: !4213)
!4222 = !DILocation(line: 117, column: 10, scope: !4213)
!4223 = !DILocation(line: 117, column: 3, scope: !4213)
!4224 = distinct !DISubprogram(name: "type_internals_preclude_sra_p", scope: !3, file: !3, line: 622, type: !4225, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4227)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{!679, !689}
!4227 = !{!4228, !4229, !4230, !4231}
!4228 = !DILocalVariable(name: "type", arg: 1, scope: !4224, file: !3, line: 622, type: !689)
!4229 = !DILocalVariable(name: "fld", scope: !4224, file: !3, line: 624, type: !689)
!4230 = !DILocalVariable(name: "et", scope: !4224, file: !3, line: 625, type: !689)
!4231 = !DILocalVariable(name: "ft", scope: !4232, file: !3, line: 635, type: !689)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 634, column: 4)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 633, column: 6)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 632, column: 7)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 632, column: 7)
!4236 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 628, column: 5)
!4237 = !DILocation(line: 0, scope: !4224)
!4238 = !DILocation(line: 627, column: 11, scope: !4224)
!4239 = !DILocation(line: 654, column: 9, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 653, column: 11)
!4241 = !DILocation(line: 627, column: 3, scope: !4224)
!4242 = !DILocation(line: 632, column: 18, scope: !4235)
!4243 = !DILocation(line: 632, column: 12, scope: !4235)
!4244 = !DILocation(line: 0, scope: !4235)
!4245 = !DILocation(line: 632, column: 7, scope: !4235)
!4246 = !DILocation(line: 633, column: 6, scope: !4233)
!4247 = !DILocation(line: 633, column: 22, scope: !4233)
!4248 = !DILocation(line: 633, column: 6, scope: !4234)
!4249 = !DILocation(line: 635, column: 16, scope: !4232)
!4250 = !DILocation(line: 0, scope: !4232)
!4251 = !DILocation(line: 637, column: 10, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 637, column: 10)
!4253 = !DILocation(line: 638, column: 3, scope: !4252)
!4254 = !DILocation(line: 638, column: 7, scope: !4252)
!4255 = !DILocation(line: 638, column: 31, scope: !4252)
!4256 = !DILocation(line: 638, column: 35, scope: !4252)
!4257 = !DILocation(line: 639, column: 3, scope: !4252)
!4258 = !DILocation(line: 639, column: 7, scope: !4252)
!4259 = !DILocation(line: 640, column: 3, scope: !4252)
!4260 = !DILocation(line: 640, column: 22, scope: !4252)
!4261 = !DILocation(line: 640, column: 7, scope: !4252)
!4262 = !DILocation(line: 637, column: 10, scope: !4232)
!4263 = !DILocation(line: 643, column: 10, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 643, column: 10)
!4265 = !DILocation(line: 644, column: 3, scope: !4264)
!4266 = !DILocation(line: 644, column: 6, scope: !4264)
!4267 = !DILocation(line: 643, column: 10, scope: !4232)
!4268 = !DILocation(line: 646, column: 4, scope: !4233)
!4269 = !DILocation(line: 632, column: 49, scope: !4234)
!4270 = !DILocation(line: 632, column: 7, scope: !4234)
!4271 = distinct !{!4271, !4245, !4272}
!4272 = !DILocation(line: 646, column: 4, scope: !4235)
!4273 = !DILocation(line: 651, column: 12, scope: !4236)
!4274 = !DILocation(line: 653, column: 11, scope: !4240)
!4275 = !DILocation(line: 653, column: 11, scope: !4236)
!4276 = !DILocation(line: 661, column: 1, scope: !4224)
!4277 = !DILocation(line: 0, scope: !4236)
!4278 = distinct !DISubprogram(name: "is_va_list_type", scope: !3, file: !3, line: 1502, type: !4225, scopeLine: 1503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4279)
!4279 = !{!4280}
!4280 = !DILocalVariable(name: "type", arg: 1, scope: !4278, file: !3, line: 1502, type: !689)
!4281 = !DILocation(line: 0, scope: !4278)
!4282 = !DILocation(line: 1504, column: 10, scope: !4278)
!4283 = !DILocation(line: 1504, column: 38, scope: !4278)
!4284 = !DILocation(line: 1504, column: 35, scope: !4278)
!4285 = !DILocation(line: 1504, column: 3, scope: !4278)
!4286 = distinct !DISubprogram(name: "next_referenced_var", scope: !4200, file: !4200, line: 124, type: !4201, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4287)
!4287 = !{!4288}
!4288 = !DILocalVariable(name: "iter", arg: 1, scope: !4286, file: !4200, line: 124, type: !4203)
!4289 = !DILocation(line: 0, scope: !4286)
!4290 = !DILocation(line: 126, column: 43, scope: !4286)
!4291 = !DILocation(line: 126, column: 17, scope: !4286)
!4292 = !DILocation(line: 126, column: 10, scope: !4286)
!4293 = !DILocation(line: 126, column: 3, scope: !4286)
!4294 = distinct !DISubprogram(name: "first_htab_element", scope: !4200, file: !4200, line: 58, type: !4295, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4298)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{!684, !4297, !1442}
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!4298 = !{!4299, !4300, !4301}
!4299 = !DILocalVariable(name: "hti", arg: 1, scope: !4294, file: !4200, line: 58, type: !4297)
!4300 = !DILocalVariable(name: "table", arg: 2, scope: !4294, file: !4200, line: 58, type: !1442)
!4301 = !DILocalVariable(name: "x", scope: !4302, file: !4200, line: 65, type: !684)
!4302 = distinct !DILexicalBlock(scope: !4294, file: !4200, line: 64, column: 5)
!4303 = !DILocation(line: 0, scope: !4294)
!4304 = !DILocation(line: 60, column: 8, scope: !4294)
!4305 = !DILocation(line: 60, column: 13, scope: !4294)
!4306 = !DILocation(line: 61, column: 22, scope: !4294)
!4307 = !DILocation(line: 61, column: 8, scope: !4294)
!4308 = !DILocation(line: 61, column: 13, scope: !4294)
!4309 = !DILocation(line: 62, column: 21, scope: !4294)
!4310 = !DILocation(line: 62, column: 28, scope: !4294)
!4311 = !DILocation(line: 62, column: 26, scope: !4294)
!4312 = !DILocation(line: 62, column: 8, scope: !4294)
!4313 = !DILocation(line: 62, column: 14, scope: !4294)
!4314 = !DILocation(line: 65, column: 22, scope: !4302)
!4315 = !DILocation(line: 63, column: 3, scope: !4294)
!4316 = !DILocation(line: 65, column: 15, scope: !4302)
!4317 = !DILocation(line: 66, column: 33, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4302, file: !4200, line: 66, column: 11)
!4319 = !DILocation(line: 68, column: 14, scope: !4294)
!4320 = !DILocation(line: 68, column: 28, scope: !4294)
!4321 = !DILocation(line: 68, column: 5, scope: !4302)
!4322 = distinct !{!4322, !4315, !4323}
!4323 = !DILocation(line: 68, column: 40, scope: !4294)
!4324 = !DILocation(line: 70, column: 12, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4294, file: !4200, line: 70, column: 7)
!4326 = !DILocation(line: 70, column: 17, scope: !4325)
!4327 = !DILocation(line: 70, column: 7, scope: !4294)
!4328 = !DILocation(line: 71, column: 12, scope: !4325)
!4329 = !DILocation(line: 71, column: 5, scope: !4325)
!4330 = !DILocation(line: 73, column: 1, scope: !4294)
!4331 = distinct !DISubprogram(name: "gimple_referenced_vars", scope: !4200, file: !4200, line: 40, type: !4332, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4336)
!4332 = !DISubroutineType(types: !4333)
!4333 = !{!1442, !4334}
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1399)
!4336 = !{!4337}
!4337 = !DILocalVariable(name: "fun", arg: 1, scope: !4331, file: !4200, line: 40, type: !4334)
!4338 = !DILocation(line: 0, scope: !4331)
!4339 = !DILocation(line: 42, column: 13, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4331, file: !4200, line: 42, column: 7)
!4341 = !DILocation(line: 42, column: 8, scope: !4340)
!4342 = !DILocation(line: 42, column: 7, scope: !4331)
!4343 = !DILocation(line: 44, column: 26, scope: !4331)
!4344 = !DILocation(line: 44, column: 3, scope: !4331)
!4345 = !DILocation(line: 45, column: 1, scope: !4331)
!4346 = distinct !DISubprogram(name: "end_htab_p", scope: !4200, file: !4200, line: 79, type: !4347, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4351)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!679, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3156)
!4351 = !{!4352}
!4352 = !DILocalVariable(name: "hti", arg: 1, scope: !4346, file: !4200, line: 79, type: !4349)
!4353 = !DILocation(line: 0, scope: !4346)
!4354 = !DILocation(line: 81, column: 12, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4346, file: !4200, line: 81, column: 7)
!4356 = !DILocation(line: 81, column: 25, scope: !4355)
!4357 = !DILocation(line: 81, column: 17, scope: !4355)
!4358 = !DILocation(line: 84, column: 1, scope: !4346)
!4359 = distinct !DISubprogram(name: "next_htab_element", scope: !4200, file: !4200, line: 90, type: !4360, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4362)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!684, !4297}
!4362 = !{!4363, !4364}
!4363 = !DILocalVariable(name: "hti", arg: 1, scope: !4359, file: !4200, line: 90, type: !4297)
!4364 = !DILocalVariable(name: "x", scope: !4365, file: !4200, line: 94, type: !684)
!4365 = distinct !DILexicalBlock(scope: !4359, file: !4200, line: 93, column: 5)
!4366 = !DILocation(line: 0, scope: !4359)
!4367 = !DILocation(line: 94, column: 22, scope: !4365)
!4368 = !DILocation(line: 92, column: 10, scope: !4359)
!4369 = !DILocation(line: 92, column: 31, scope: !4359)
!4370 = !DILocation(line: 92, column: 3, scope: !4359)
!4371 = !DILocation(line: 92, column: 24, scope: !4359)
!4372 = !DILocation(line: 94, column: 15, scope: !4365)
!4373 = !DILocation(line: 0, scope: !4365)
!4374 = !DILocation(line: 95, column: 33, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4365, file: !4200, line: 95, column: 11)
!4376 = distinct !{!4376, !4370, !4377}
!4377 = !DILocation(line: 97, column: 5, scope: !4359)
!4378 = !DILocation(line: 99, column: 1, scope: !4359)
!4379 = distinct !DISubprogram(name: "gsi_end_p", scope: !571, file: !571, line: 4467, type: !4380, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4382)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!679, !3229}
!4382 = !{!4383}
!4383 = !DILocalVariable(name: "i", arg: 1, scope: !4379, file: !571, line: 4467, type: !3229)
!4384 = !DILocation(line: 4467, column: 33, scope: !4379)
!4385 = !DILocation(line: 4469, column: 12, scope: !4379)
!4386 = !DILocation(line: 4469, column: 16, scope: !4379)
!4387 = !DILocation(line: 4469, column: 10, scope: !4379)
!4388 = !DILocation(line: 4469, column: 3, scope: !4379)
!4389 = distinct !DISubprogram(name: "gsi_stmt", scope: !571, file: !571, line: 4501, type: !4390, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4392)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!1011, !3229}
!4392 = !{!4393}
!4393 = !DILocalVariable(name: "i", arg: 1, scope: !4389, file: !571, line: 4501, type: !3229)
!4394 = !DILocation(line: 4501, column: 32, scope: !4389)
!4395 = !DILocation(line: 4503, column: 12, scope: !4389)
!4396 = !DILocation(line: 4503, column: 17, scope: !4389)
!4397 = !DILocation(line: 4503, column: 3, scope: !4389)
!4398 = distinct !DISubprogram(name: "gsi_next", scope: !571, file: !571, line: 4485, type: !4399, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4401)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{null, !3228}
!4401 = !{!4402}
!4402 = !DILocalVariable(name: "i", arg: 1, scope: !4398, file: !571, line: 4485, type: !3228)
!4403 = !DILocation(line: 0, scope: !4398)
!4404 = !DILocation(line: 4487, column: 15, scope: !4398)
!4405 = !DILocation(line: 4487, column: 20, scope: !4398)
!4406 = !DILocation(line: 4487, column: 10, scope: !4398)
!4407 = !DILocation(line: 4488, column: 1, scope: !4398)
!4408 = distinct !DISubprogram(name: "gsi_start_bb", scope: !571, file: !571, line: 4418, type: !4409, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4411)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!3229, !1410}
!4411 = !{!4412, !4413, !4414}
!4412 = !DILocalVariable(name: "bb", arg: 1, scope: !4408, file: !571, line: 4418, type: !1410)
!4413 = !DILocalVariable(name: "i", scope: !4408, file: !571, line: 4420, type: !3229)
!4414 = !DILocalVariable(name: "seq", scope: !4408, file: !571, line: 4421, type: !1001)
!4415 = !DILocation(line: 0, scope: !4408)
!4416 = !DILocation(line: 4420, column: 24, scope: !4408)
!4417 = !DILocation(line: 4423, column: 9, scope: !4408)
!4418 = !DILocation(line: 4424, column: 11, scope: !4408)
!4419 = !DILocation(line: 4424, column: 5, scope: !4408)
!4420 = !DILocation(line: 4424, column: 9, scope: !4408)
!4421 = !DILocation(line: 4425, column: 5, scope: !4408)
!4422 = !DILocation(line: 4425, column: 9, scope: !4408)
!4423 = !DILocation(line: 4426, column: 5, scope: !4408)
!4424 = !DILocation(line: 4426, column: 8, scope: !4408)
!4425 = !DILocation(line: 4429, column: 1, scope: !4408)
!4426 = distinct !DISubprogram(name: "gimple_code", scope: !571, file: !571, line: 1052, type: !4427, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4430)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!570, !4429}
!4429 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !690, line: 60, baseType: !1984)
!4430 = !{!4431}
!4431 = !DILocalVariable(name: "g", arg: 1, scope: !4426, file: !571, line: 1052, type: !4429)
!4432 = !DILocation(line: 0, scope: !4426)
!4433 = !DILocation(line: 1054, column: 20, scope: !4426)
!4434 = !DILocation(line: 1054, column: 3, scope: !4426)
!4435 = distinct !DISubprogram(name: "gimple_return_retval_ptr", scope: !571, file: !571, line: 4244, type: !4436, scopeLine: 4245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4438)
!4436 = !DISubroutineType(types: !4437)
!4437 = !{!1045, !4429}
!4438 = !{!4439}
!4439 = !DILocalVariable(name: "gs", arg: 1, scope: !4435, file: !571, line: 4244, type: !4429)
!4440 = !DILocation(line: 0, scope: !4435)
!4441 = !DILocation(line: 4247, column: 10, scope: !4435)
!4442 = !DILocation(line: 4247, column: 3, scope: !4435)
!4443 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !571, file: !571, line: 2013, type: !4444, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4446)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!7, !4429}
!4446 = !{!4447, !4448}
!4447 = !DILocalVariable(name: "gs", arg: 1, scope: !4443, file: !571, line: 2013, type: !4429)
!4448 = !DILocalVariable(name: "num_ops", scope: !4443, file: !571, line: 2015, type: !7)
!4449 = !DILocation(line: 0, scope: !4443)
!4450 = !DILocation(line: 2017, column: 13, scope: !4443)
!4451 = !DILocation(line: 2018, column: 18, scope: !4443)
!4452 = !DILocation(line: 2018, column: 3, scope: !4443)
!4453 = distinct !DISubprogram(name: "gimple_call_arg_ptr", scope: !571, file: !571, line: 2036, type: !4454, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4456)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{!1045, !4429, !7}
!4456 = !{!4457, !4458}
!4457 = !DILocalVariable(name: "gs", arg: 1, scope: !4453, file: !571, line: 2036, type: !4429)
!4458 = !DILocalVariable(name: "index", arg: 2, scope: !4453, file: !571, line: 2036, type: !7)
!4459 = !DILocation(line: 0, scope: !4453)
!4460 = !DILocation(line: 2039, column: 35, scope: !4453)
!4461 = !DILocation(line: 2039, column: 10, scope: !4453)
!4462 = !DILocation(line: 2039, column: 3, scope: !4453)
!4463 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !571, file: !571, line: 1954, type: !4464, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4466)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!689, !4429}
!4466 = !{!4467, !4468}
!4467 = !DILocalVariable(name: "gs", arg: 1, scope: !4463, file: !571, line: 1954, type: !4429)
!4468 = !DILocalVariable(name: "addr", scope: !4463, file: !571, line: 1956, type: !689)
!4469 = !DILocation(line: 0, scope: !4463)
!4470 = !DILocation(line: 1956, column: 15, scope: !4463)
!4471 = !DILocation(line: 1957, column: 7, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4463, file: !571, line: 1957, column: 7)
!4473 = !DILocation(line: 1957, column: 24, scope: !4472)
!4474 = !DILocation(line: 1957, column: 7, scope: !4463)
!4475 = !DILocation(line: 1958, column: 12, scope: !4472)
!4476 = !DILocation(line: 1958, column: 5, scope: !4472)
!4477 = !DILocation(line: 1960, column: 1, scope: !4463)
!4478 = distinct !DISubprogram(name: "callsite_has_enough_arguments_p", scope: !3, file: !3, line: 1079, type: !4479, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4481)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!679, !1011}
!4481 = !{!4482}
!4482 = !DILocalVariable(name: "call", arg: 1, scope: !4478, file: !3, line: 1079, type: !1011)
!4483 = !DILocation(line: 0, scope: !4478)
!4484 = !DILocation(line: 1081, column: 10, scope: !4478)
!4485 = !DILocation(line: 1081, column: 52, scope: !4478)
!4486 = !DILocation(line: 1081, column: 38, scope: !4478)
!4487 = !DILocation(line: 1081, column: 3, scope: !4478)
!4488 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !571, file: !571, line: 1878, type: !4464, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4489)
!4489 = !{!4490}
!4490 = !DILocalVariable(name: "gs", arg: 1, scope: !4488, file: !571, line: 1878, type: !4429)
!4491 = !DILocation(line: 0, scope: !4488)
!4492 = !DILocation(line: 1881, column: 10, scope: !4488)
!4493 = !DILocation(line: 1881, column: 3, scope: !4488)
!4494 = distinct !DISubprogram(name: "gimple_call_lhs_ptr", scope: !571, file: !571, line: 1888, type: !4436, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4495)
!4495 = !{!4496}
!4496 = !DILocalVariable(name: "gs", arg: 1, scope: !4494, file: !571, line: 1888, type: !4429)
!4497 = !DILocation(line: 0, scope: !4494)
!4498 = !DILocation(line: 1891, column: 10, scope: !4494)
!4499 = !DILocation(line: 1891, column: 3, scope: !4494)
!4500 = distinct !DISubprogram(name: "disqualify_ops_if_throwing_stmt", scope: !3, file: !3, line: 987, type: !4501, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4503)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!679, !1011, !689, !689}
!4503 = !{!4504, !4505, !4506}
!4504 = !DILocalVariable(name: "stmt", arg: 1, scope: !4500, file: !3, line: 987, type: !1011)
!4505 = !DILocalVariable(name: "lhs", arg: 2, scope: !4500, file: !3, line: 987, type: !689)
!4506 = !DILocalVariable(name: "rhs", arg: 3, scope: !4500, file: !3, line: 987, type: !689)
!4507 = !DILocation(line: 0, scope: !4500)
!4508 = !DILocation(line: 989, column: 8, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 989, column: 7)
!4510 = !DILocation(line: 989, column: 41, scope: !4509)
!4511 = !DILocation(line: 990, column: 11, scope: !4509)
!4512 = !DILocation(line: 990, column: 42, scope: !4509)
!4513 = !DILocation(line: 990, column: 45, scope: !4509)
!4514 = !DILocation(line: 989, column: 7, scope: !4500)
!4515 = !DILocation(line: 992, column: 7, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 991, column: 5)
!4517 = !DILocation(line: 993, column: 11, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 993, column: 11)
!4519 = !DILocation(line: 993, column: 11, scope: !4516)
!4520 = !DILocation(line: 994, column: 2, scope: !4518)
!4521 = !DILocation(line: 998, column: 1, scope: !4500)
!4522 = distinct !DISubprogram(name: "asm_visit_addr", scope: !3, file: !3, line: 1066, type: !4523, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4525)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!679, !1011, !689, !684}
!4525 = !{!4526, !4527, !4528}
!4526 = !DILocalVariable(name: "stmt", arg: 1, scope: !4522, file: !3, line: 1066, type: !1011)
!4527 = !DILocalVariable(name: "op", arg: 2, scope: !4522, file: !3, line: 1066, type: !689)
!4528 = !DILocalVariable(name: "data", arg: 3, scope: !4522, file: !3, line: 1067, type: !684)
!4529 = !DILocation(line: 0, scope: !4522)
!4530 = !DILocation(line: 1069, column: 7, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 1069, column: 7)
!4532 = !DILocation(line: 1069, column: 7, scope: !4522)
!4533 = !DILocation(line: 1070, column: 5, scope: !4531)
!4534 = !DILocation(line: 1072, column: 3, scope: !4522)
!4535 = distinct !DISubprogram(name: "gimple_asm_ninputs", scope: !571, file: !571, line: 2581, type: !4444, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4536)
!4536 = !{!4537}
!4537 = !DILocalVariable(name: "gs", arg: 1, scope: !4535, file: !571, line: 2581, type: !4429)
!4538 = !DILocation(line: 0, scope: !4535)
!4539 = !DILocation(line: 2584, column: 25, scope: !4535)
!4540 = !DILocation(line: 2584, column: 10, scope: !4535)
!4541 = !DILocation(line: 2584, column: 3, scope: !4535)
!4542 = distinct !DISubprogram(name: "gimple_asm_input_op", scope: !571, file: !571, line: 2619, type: !4543, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4545)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!689, !4429, !7}
!4545 = !{!4546, !4547}
!4546 = !DILocalVariable(name: "gs", arg: 1, scope: !4542, file: !571, line: 2619, type: !4429)
!4547 = !DILocalVariable(name: "index", arg: 2, scope: !4542, file: !571, line: 2619, type: !7)
!4548 = !DILocation(line: 0, scope: !4542)
!4549 = !DILocation(line: 2622, column: 3, scope: !4542)
!4550 = !DILocation(line: 2623, column: 10, scope: !4542)
!4551 = !DILocation(line: 2623, column: 3, scope: !4542)
!4552 = distinct !DISubprogram(name: "gimple_asm_noutputs", scope: !571, file: !571, line: 2591, type: !4444, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4553)
!4553 = !{!4554}
!4554 = !DILocalVariable(name: "gs", arg: 1, scope: !4552, file: !571, line: 2591, type: !4429)
!4555 = !DILocation(line: 0, scope: !4552)
!4556 = !DILocation(line: 2594, column: 14, scope: !4552)
!4557 = !DILocation(line: 2594, column: 25, scope: !4552)
!4558 = !DILocation(line: 2594, column: 10, scope: !4552)
!4559 = !DILocation(line: 2594, column: 3, scope: !4552)
!4560 = distinct !DISubprogram(name: "gimple_asm_output_op", scope: !571, file: !571, line: 2652, type: !4543, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4561)
!4561 = !{!4562, !4563}
!4562 = !DILocalVariable(name: "gs", arg: 1, scope: !4560, file: !571, line: 2652, type: !4429)
!4563 = !DILocalVariable(name: "index", arg: 2, scope: !4560, file: !571, line: 2652, type: !7)
!4564 = !DILocation(line: 0, scope: !4560)
!4565 = !DILocation(line: 2655, column: 3, scope: !4560)
!4566 = !DILocation(line: 2656, column: 48, scope: !4560)
!4567 = !DILocation(line: 2656, column: 33, scope: !4560)
!4568 = !DILocation(line: 2656, column: 31, scope: !4560)
!4569 = !DILocation(line: 2656, column: 10, scope: !4560)
!4570 = !DILocation(line: 2656, column: 3, scope: !4560)
!4571 = distinct !DISubprogram(name: "update_stmt", scope: !571, file: !571, line: 1456, type: !4572, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4574)
!4572 = !DISubroutineType(types: !4573)
!4573 = !{null, !1011}
!4574 = !{!4575}
!4575 = !DILocalVariable(name: "s", arg: 1, scope: !4571, file: !571, line: 1456, type: !1011)
!4576 = !DILocation(line: 0, scope: !4571)
!4577 = !DILocation(line: 1458, column: 7, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4571, file: !571, line: 1458, column: 7)
!4579 = !DILocation(line: 1458, column: 7, scope: !4571)
!4580 = !DILocation(line: 1460, column: 7, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !571, line: 1459, column: 5)
!4582 = !DILocation(line: 1461, column: 7, scope: !4581)
!4583 = !DILocation(line: 1462, column: 5, scope: !4581)
!4584 = !DILocation(line: 1463, column: 1, scope: !4571)
!4585 = distinct !DISubprogram(name: "bb_seq", scope: !571, file: !571, line: 237, type: !4586, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4591)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!1001, !4588}
!4588 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !690, line: 112, baseType: !4589)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!4591 = !{!4592}
!4592 = !DILocalVariable(name: "bb", arg: 1, scope: !4585, file: !571, line: 237, type: !4588)
!4593 = !DILocation(line: 0, scope: !4585)
!4594 = !DILocation(line: 239, column: 17, scope: !4585)
!4595 = !DILocation(line: 239, column: 23, scope: !4585)
!4596 = !DILocation(line: 239, column: 33, scope: !4585)
!4597 = !DILocation(line: 239, column: 43, scope: !4585)
!4598 = !DILocation(line: 239, column: 36, scope: !4585)
!4599 = !DILocation(line: 239, column: 10, scope: !4585)
!4600 = !DILocation(line: 239, column: 68, scope: !4585)
!4601 = !DILocation(line: 239, column: 3, scope: !4585)
!4602 = distinct !DISubprogram(name: "gimple_seq_first", scope: !571, file: !571, line: 159, type: !4603, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4608)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!1006, !4605}
!4605 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !690, line: 67, baseType: !4606)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!4608 = !{!4609}
!4609 = !DILocalVariable(name: "s", arg: 1, scope: !4602, file: !571, line: 159, type: !4605)
!4610 = !DILocation(line: 0, scope: !4602)
!4611 = !DILocation(line: 161, column: 10, scope: !4602)
!4612 = !DILocation(line: 161, column: 17, scope: !4602)
!4613 = !DILocation(line: 161, column: 3, scope: !4602)
!4614 = distinct !DISubprogram(name: "gimple_op_ptr", scope: !571, file: !571, line: 1647, type: !4454, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4615)
!4615 = !{!4616, !4617}
!4616 = !DILocalVariable(name: "gs", arg: 1, scope: !4614, file: !571, line: 1647, type: !4429)
!4617 = !DILocalVariable(name: "i", arg: 2, scope: !4614, file: !571, line: 1647, type: !7)
!4618 = !DILocation(line: 0, scope: !4614)
!4619 = !DILocation(line: 1649, column: 7, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4614, file: !571, line: 1649, column: 7)
!4621 = !DILocation(line: 1649, column: 7, scope: !4614)
!4622 = !DILocation(line: 1654, column: 14, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4620, file: !571, line: 1650, column: 5)
!4624 = !DILocation(line: 1654, column: 50, scope: !4623)
!4625 = !DILocation(line: 1654, column: 7, scope: !4623)
!4626 = !DILocation(line: 0, scope: !4620)
!4627 = !DILocation(line: 1658, column: 1, scope: !4614)
!4628 = distinct !DISubprogram(name: "gimple_has_ops", scope: !571, file: !571, line: 1274, type: !4629, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4631)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!679, !4429}
!4631 = !{!4632}
!4632 = !DILocalVariable(name: "g", arg: 1, scope: !4628, file: !571, line: 1274, type: !4429)
!4633 = !DILocation(line: 0, scope: !4628)
!4634 = !DILocation(line: 1276, column: 10, scope: !4628)
!4635 = !DILocation(line: 1276, column: 26, scope: !4628)
!4636 = !DILocation(line: 1276, column: 41, scope: !4628)
!4637 = !DILocation(line: 1276, column: 44, scope: !4628)
!4638 = !DILocation(line: 1276, column: 60, scope: !4628)
!4639 = !DILocation(line: 1276, column: 3, scope: !4628)
!4640 = distinct !DISubprogram(name: "gimple_ops", scope: !571, file: !571, line: 1614, type: !4641, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4643)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!1045, !1011}
!4643 = !{!4644, !4645}
!4644 = !DILocalVariable(name: "gs", arg: 1, scope: !4640, file: !571, line: 1614, type: !1011)
!4645 = !DILocalVariable(name: "off", scope: !4640, file: !571, line: 1616, type: !1156)
!4646 = !DILocation(line: 0, scope: !4640)
!4647 = !DILocation(line: 1621, column: 28, scope: !4640)
!4648 = !DILocation(line: 1621, column: 9, scope: !4640)
!4649 = !DILocation(line: 1622, column: 3, scope: !4640)
!4650 = !DILocation(line: 1624, column: 20, scope: !4640)
!4651 = !DILocation(line: 1624, column: 32, scope: !4640)
!4652 = !DILocation(line: 1624, column: 10, scope: !4640)
!4653 = !DILocation(line: 1624, column: 3, scope: !4640)
!4654 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !571, file: !571, line: 1073, type: !4655, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4657)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{!609, !1011}
!4657 = !{!4658}
!4658 = !DILocalVariable(name: "gs", arg: 1, scope: !4654, file: !571, line: 1073, type: !1011)
!4659 = !DILocation(line: 0, scope: !4654)
!4660 = !DILocation(line: 1075, column: 24, scope: !4654)
!4661 = !DILocation(line: 1075, column: 10, scope: !4654)
!4662 = !DILocation(line: 1075, column: 3, scope: !4654)
!4663 = distinct !DISubprogram(name: "gss_for_code", scope: !571, file: !571, line: 1061, type: !4664, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4666)
!4664 = !DISubroutineType(types: !4665)
!4665 = !{!609, !570}
!4666 = !{!4667}
!4667 = !DILocalVariable(name: "code", arg: 1, scope: !4663, file: !571, line: 1061, type: !570)
!4668 = !DILocation(line: 0, scope: !4663)
!4669 = !DILocation(line: 1066, column: 10, scope: !4663)
!4670 = !DILocation(line: 1066, column: 3, scope: !4663)
!4671 = distinct !DISubprogram(name: "gimple_num_ops", scope: !571, file: !571, line: 1596, type: !4444, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4672)
!4672 = !{!4673}
!4673 = !DILocalVariable(name: "gs", arg: 1, scope: !4671, file: !571, line: 1596, type: !4429)
!4674 = !DILocation(line: 0, scope: !4671)
!4675 = !DILocation(line: 1598, column: 21, scope: !4671)
!4676 = !DILocation(line: 1598, column: 3, scope: !4671)
!4677 = distinct !DISubprogram(name: "gimple_call_fn", scope: !571, file: !571, line: 1911, type: !4464, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4678)
!4678 = !{!4679}
!4679 = !DILocalVariable(name: "gs", arg: 1, scope: !4677, file: !571, line: 1911, type: !4429)
!4680 = !DILocation(line: 0, scope: !4677)
!4681 = !DILocation(line: 1914, column: 10, scope: !4677)
!4682 = !DILocation(line: 1914, column: 3, scope: !4677)
!4683 = distinct !DISubprogram(name: "gimple_op", scope: !571, file: !571, line: 1631, type: !4543, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4684)
!4684 = !{!4685, !4686}
!4685 = !DILocalVariable(name: "gs", arg: 1, scope: !4683, file: !571, line: 1631, type: !4429)
!4686 = !DILocalVariable(name: "i", arg: 2, scope: !4683, file: !571, line: 1631, type: !7)
!4687 = !DILocation(line: 0, scope: !4683)
!4688 = !DILocation(line: 1633, column: 7, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4683, file: !571, line: 1633, column: 7)
!4690 = !DILocation(line: 1633, column: 7, scope: !4683)
!4691 = !DILocation(line: 1638, column: 14, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4689, file: !571, line: 1634, column: 5)
!4693 = !DILocation(line: 1638, column: 7, scope: !4692)
!4694 = !DILocation(line: 0, scope: !4689)
!4695 = !DILocation(line: 1642, column: 1, scope: !4683)
!4696 = distinct !DISubprogram(name: "disqualify_base_of_expr", scope: !3, file: !3, line: 881, type: !4697, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4699)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{null, !689, !685}
!4699 = !{!4700, !4701}
!4700 = !DILocalVariable(name: "t", arg: 1, scope: !4696, file: !3, line: 881, type: !689)
!4701 = !DILocalVariable(name: "reason", arg: 2, scope: !4696, file: !3, line: 881, type: !685)
!4702 = !DILocation(line: 0, scope: !4696)
!4703 = !DILocation(line: 883, column: 3, scope: !4696)
!4704 = !DILocation(line: 883, column: 10, scope: !4696)
!4705 = !DILocation(line: 884, column: 9, scope: !4696)
!4706 = distinct !{!4706, !4703, !4705}
!4707 = !DILocation(line: 886, column: 7, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 886, column: 7)
!4709 = !DILocation(line: 886, column: 16, scope: !4708)
!4710 = !DILocation(line: 886, column: 7, scope: !4696)
!4711 = !DILocation(line: 888, column: 11, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 888, column: 11)
!4713 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 887, column: 5)
!4714 = !DILocation(line: 888, column: 11, scope: !4713)
!4715 = !DILocation(line: 889, column: 6, scope: !4712)
!4716 = !DILocation(line: 889, column: 2, scope: !4712)
!4717 = !DILocation(line: 890, column: 11, scope: !4713)
!4718 = !DILocation(line: 891, column: 5, scope: !4713)
!4719 = !DILocation(line: 893, column: 7, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 893, column: 7)
!4721 = !DILocation(line: 893, column: 9, scope: !4720)
!4722 = !DILocation(line: 893, column: 12, scope: !4720)
!4723 = !DILocation(line: 893, column: 7, scope: !4696)
!4724 = !DILocation(line: 894, column: 5, scope: !4720)
!4725 = !DILocation(line: 895, column: 1, scope: !4696)
!4726 = distinct !DISubprogram(name: "handled_component_p", scope: !135, file: !135, line: 4551, type: !4727, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4732)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{!679, !4729}
!4729 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !690, line: 59, baseType: !4730)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!4732 = !{!4733}
!4733 = !DILocalVariable(name: "t", arg: 1, scope: !4726, file: !135, line: 4551, type: !4729)
!4734 = !DILocation(line: 0, scope: !4726)
!4735 = !DILocation(line: 4553, column: 11, scope: !4726)
!4736 = !DILocation(line: 4553, column: 3, scope: !4726)
!4737 = !DILocation(line: 4565, column: 7, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4726, file: !135, line: 4554, column: 5)
!4739 = !DILocation(line: 0, scope: !4738)
!4740 = !DILocation(line: 4567, column: 1, scope: !4726)
!4741 = distinct !DISubprogram(name: "get_ssa_base_param", scope: !3, file: !3, line: 667, type: !4742, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4744)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{!689, !689}
!4744 = !{!4745}
!4745 = !DILocalVariable(name: "t", arg: 1, scope: !4741, file: !3, line: 667, type: !689)
!4746 = !DILocation(line: 0, scope: !4741)
!4747 = !DILocation(line: 669, column: 7, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 669, column: 7)
!4749 = !DILocation(line: 669, column: 21, scope: !4748)
!4750 = !DILocation(line: 669, column: 7, scope: !4741)
!4751 = !DILocation(line: 671, column: 11, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 671, column: 11)
!4753 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 670, column: 5)
!4754 = !DILocation(line: 671, column: 11, scope: !4753)
!4755 = !DILocation(line: 672, column: 9, scope: !4752)
!4756 = !DILocation(line: 672, column: 2, scope: !4752)
!4757 = !DILocation(line: 677, column: 1, scope: !4741)
!4758 = distinct !DISubprogram(name: "disqualify_candidate", scope: !3, file: !3, line: 606, type: !4697, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4759)
!4759 = !{!4760, !4761}
!4760 = !DILocalVariable(name: "decl", arg: 1, scope: !4758, file: !3, line: 606, type: !689)
!4761 = !DILocalVariable(name: "reason", arg: 2, scope: !4758, file: !3, line: 606, type: !685)
!4762 = !DILocation(line: 0, scope: !4758)
!4763 = !DILocation(line: 608, column: 21, scope: !4758)
!4764 = !DILocation(line: 608, column: 39, scope: !4758)
!4765 = !DILocation(line: 608, column: 3, scope: !4758)
!4766 = !DILocation(line: 610, column: 7, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 610, column: 7)
!4768 = !DILocation(line: 610, column: 17, scope: !4767)
!4769 = !DILocation(line: 610, column: 21, scope: !4767)
!4770 = !DILocation(line: 610, column: 32, scope: !4767)
!4771 = !DILocation(line: 610, column: 7, scope: !4758)
!4772 = !DILocation(line: 612, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 611, column: 5)
!4774 = !DILocation(line: 613, column: 27, scope: !4773)
!4775 = !DILocation(line: 613, column: 7, scope: !4773)
!4776 = !DILocation(line: 614, column: 16, scope: !4773)
!4777 = !DILocation(line: 614, column: 7, scope: !4773)
!4778 = !DILocation(line: 615, column: 5, scope: !4773)
!4779 = !DILocation(line: 616, column: 1, scope: !4758)
!4780 = distinct !DISubprogram(name: "build_access_from_expr_1", scope: !3, file: !3, line: 902, type: !4781, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4783)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!1986, !1045, !1011, !679}
!4783 = !{!4784, !4785, !4786, !4787, !4788, !4789}
!4784 = !DILocalVariable(name: "expr_ptr", arg: 1, scope: !4780, file: !3, line: 902, type: !1045)
!4785 = !DILocalVariable(name: "stmt", arg: 2, scope: !4780, file: !3, line: 902, type: !1011)
!4786 = !DILocalVariable(name: "write", arg: 3, scope: !4780, file: !3, line: 902, type: !679)
!4787 = !DILocalVariable(name: "ret", scope: !4780, file: !3, line: 904, type: !1986)
!4788 = !DILocalVariable(name: "expr", scope: !4780, file: !3, line: 905, type: !689)
!4789 = !DILocalVariable(name: "partial_ref", scope: !4780, file: !3, line: 906, type: !679)
!4790 = !DILocation(line: 0, scope: !4780)
!4791 = !DILocation(line: 905, column: 15, scope: !4780)
!4792 = !DILocation(line: 908, column: 7, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 908, column: 7)
!4794 = !DILocation(line: 908, column: 24, scope: !4793)
!4795 = !DILocation(line: 909, column: 7, scope: !4793)
!4796 = !DILocation(line: 909, column: 27, scope: !4793)
!4797 = !DILocation(line: 910, column: 7, scope: !4793)
!4798 = !DILocation(line: 910, column: 27, scope: !4793)
!4799 = !DILocation(line: 908, column: 7, scope: !4780)
!4800 = !DILocation(line: 912, column: 14, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4793, file: !3, line: 911, column: 5)
!4802 = !DILocation(line: 0, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 922, column: 7)
!4804 = !DILocation(line: 922, column: 7, scope: !4803)
!4805 = !DILocation(line: 914, column: 5, scope: !4801)
!4806 = !DILocation(line: 922, column: 24, scope: !4803)
!4807 = !DILocation(line: 922, column: 7, scope: !4780)
!4808 = !DILocation(line: 923, column: 12, scope: !4803)
!4809 = !DILocation(line: 923, column: 5, scope: !4803)
!4810 = !DILocation(line: 925, column: 7, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 925, column: 7)
!4812 = !DILocation(line: 925, column: 7, scope: !4780)
!4813 = !DILocation(line: 927, column: 7, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 926, column: 5)
!4815 = !DILocation(line: 929, column: 7, scope: !4814)
!4816 = !DILocation(line: 932, column: 11, scope: !4780)
!4817 = !DILocation(line: 932, column: 3, scope: !4780)
!4818 = !DILocation(line: 935, column: 11, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 935, column: 11)
!4820 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 933, column: 5)
!4821 = !DILocation(line: 935, column: 20, scope: !4819)
!4822 = !DILocation(line: 935, column: 11, scope: !4820)
!4823 = !DILocation(line: 944, column: 13, scope: !4820)
!4824 = !DILocation(line: 945, column: 7, scope: !4820)
!4825 = !DILocation(line: 951, column: 7, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 951, column: 7)
!4827 = !DILocation(line: 951, column: 16, scope: !4826)
!4828 = !DILocation(line: 951, column: 13, scope: !4826)
!4829 = !DILocation(line: 951, column: 31, scope: !4826)
!4830 = !DILocation(line: 952, column: 10, scope: !4826)
!4831 = !DILocation(line: 952, column: 26, scope: !4826)
!4832 = !DILocation(line: 952, column: 5, scope: !4826)
!4833 = !DILocation(line: 955, column: 1, scope: !4780)
!4834 = distinct !DISubprogram(name: "contains_view_convert_expr_p", scope: !4200, file: !4200, line: 1175, type: !4727, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4835)
!4835 = !{!4836}
!4836 = !DILocalVariable(name: "ref", arg: 1, scope: !4834, file: !4200, line: 1175, type: !4729)
!4837 = !DILocation(line: 0, scope: !4834)
!4838 = !DILocation(line: 1177, column: 3, scope: !4834)
!4839 = !DILocation(line: 1177, column: 10, scope: !4834)
!4840 = !DILocation(line: 1179, column: 11, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !4200, line: 1179, column: 11)
!4842 = distinct !DILexicalBlock(scope: !4834, file: !4200, line: 1178, column: 5)
!4843 = !DILocation(line: 1179, column: 27, scope: !4841)
!4844 = !DILocation(line: 1179, column: 11, scope: !4842)
!4845 = !DILocation(line: 1181, column: 13, scope: !4842)
!4846 = distinct !{!4846, !4838, !4847}
!4847 = !DILocation(line: 1182, column: 5, scope: !4834)
!4848 = !DILocation(line: 1185, column: 1, scope: !4834)
!4849 = distinct !DISubprogram(name: "create_access", scope: !3, file: !3, line: 740, type: !4850, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4852)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!1986, !689, !1011, !679}
!4852 = !{!4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862}
!4853 = !DILocalVariable(name: "expr", arg: 1, scope: !4849, file: !3, line: 740, type: !689)
!4854 = !DILocalVariable(name: "stmt", arg: 2, scope: !4849, file: !3, line: 740, type: !1011)
!4855 = !DILocalVariable(name: "write", arg: 3, scope: !4849, file: !3, line: 740, type: !679)
!4856 = !DILocalVariable(name: "access", scope: !4849, file: !3, line: 742, type: !1986)
!4857 = !DILocalVariable(name: "offset", scope: !4849, file: !3, line: 743, type: !745)
!4858 = !DILocalVariable(name: "size", scope: !4849, file: !3, line: 743, type: !745)
!4859 = !DILocalVariable(name: "max_size", scope: !4849, file: !3, line: 743, type: !745)
!4860 = !DILocalVariable(name: "base", scope: !4849, file: !3, line: 744, type: !689)
!4861 = !DILocalVariable(name: "ptr", scope: !4849, file: !3, line: 745, type: !679)
!4862 = !DILocalVariable(name: "unscalarizable_region", scope: !4849, file: !3, line: 745, type: !679)
!4863 = !DILocation(line: 0, scope: !4849)
!4864 = !DILocation(line: 743, column: 3, scope: !4849)
!4865 = !DILocation(line: 747, column: 10, scope: !4849)
!4866 = !DILocation(line: 749, column: 7, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 749, column: 7)
!4868 = !DILocation(line: 749, column: 16, scope: !4867)
!4869 = !DILocation(line: 749, column: 38, scope: !4867)
!4870 = !DILocation(line: 749, column: 41, scope: !4867)
!4871 = !DILocation(line: 749, column: 7, scope: !4849)
!4872 = !DILocation(line: 751, column: 34, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 750, column: 5)
!4874 = !DILocation(line: 751, column: 14, scope: !4873)
!4875 = !DILocation(line: 752, column: 12, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 752, column: 11)
!4877 = !DILocation(line: 752, column: 11, scope: !4873)
!4878 = !DILocation(line: 0, scope: !4867)
!4879 = !DILocation(line: 759, column: 8, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 759, column: 7)
!4881 = !DILocation(line: 759, column: 22, scope: !4880)
!4882 = !DILocation(line: 759, column: 40, scope: !4880)
!4883 = !DILocation(line: 759, column: 58, scope: !4880)
!4884 = !DILocation(line: 759, column: 26, scope: !4880)
!4885 = !DILocation(line: 759, column: 7, scope: !4849)
!4886 = !DILocation(line: 762, column: 7, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 762, column: 7)
!4888 = !DILocation(line: 762, column: 16, scope: !4887)
!4889 = !DILocation(line: 0, scope: !4887)
!4890 = !DILocation(line: 762, column: 7, scope: !4849)
!4891 = !DILocation(line: 764, column: 16, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 764, column: 11)
!4893 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 763, column: 5)
!4894 = !DILocation(line: 764, column: 20, scope: !4892)
!4895 = !DILocation(line: 764, column: 31, scope: !4892)
!4896 = !DILocation(line: 764, column: 28, scope: !4892)
!4897 = !DILocation(line: 764, column: 11, scope: !4893)
!4898 = !DILocation(line: 766, column: 4, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 765, column: 2)
!4900 = !DILocation(line: 767, column: 4, scope: !4899)
!4901 = !DILocation(line: 769, column: 12, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 769, column: 11)
!4903 = !DILocation(line: 769, column: 36, scope: !4902)
!4904 = !DILocation(line: 769, column: 41, scope: !4902)
!4905 = !DILocation(line: 769, column: 67, scope: !4902)
!4906 = !DILocation(line: 769, column: 11, scope: !4893)
!4907 = !DILocation(line: 771, column: 4, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 770, column: 2)
!4909 = !DILocation(line: 773, column: 4, scope: !4908)
!4910 = !DILocation(line: 776, column: 11, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 776, column: 11)
!4912 = !DILocation(line: 776, column: 11, scope: !4893)
!4913 = !DILocation(line: 777, column: 38, scope: !4911)
!4914 = !DILocation(line: 777, column: 2, scope: !4911)
!4915 = !DILocation(line: 793, column: 43, scope: !4849)
!4916 = !DILocation(line: 781, column: 19, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 781, column: 11)
!4918 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 780, column: 5)
!4919 = !DILocation(line: 781, column: 16, scope: !4917)
!4920 = !DILocation(line: 781, column: 11, scope: !4918)
!4921 = !DILocation(line: 783, column: 9, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 782, column: 2)
!4923 = !DILocation(line: 785, column: 2, scope: !4922)
!4924 = !DILocation(line: 786, column: 11, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 786, column: 11)
!4926 = !DILocation(line: 786, column: 16, scope: !4925)
!4927 = !DILocation(line: 786, column: 11, scope: !4918)
!4928 = !DILocation(line: 788, column: 4, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 787, column: 2)
!4930 = !DILocation(line: 789, column: 4, scope: !4929)
!4931 = !DILocation(line: 793, column: 35, scope: !4849)
!4932 = !DILocation(line: 793, column: 12, scope: !4849)
!4933 = !DILocation(line: 794, column: 11, scope: !4849)
!4934 = !DILocation(line: 794, column: 16, scope: !4849)
!4935 = !DILocation(line: 795, column: 18, scope: !4849)
!4936 = !DILocation(line: 795, column: 11, scope: !4849)
!4937 = !DILocation(line: 795, column: 16, scope: !4849)
!4938 = !DILocation(line: 796, column: 11, scope: !4849)
!4939 = !DILocation(line: 796, column: 17, scope: !4849)
!4940 = !DILocation(line: 797, column: 37, scope: !4849)
!4941 = !DILocation(line: 798, column: 11, scope: !4849)
!4942 = !DILocation(line: 798, column: 16, scope: !4849)
!4943 = !DILocation(line: 800, column: 3, scope: !4849)
!4944 = !DILocation(line: 801, column: 1, scope: !4849)
!4945 = distinct !DISubprogram(name: "mark_parm_dereference", scope: !3, file: !3, line: 684, type: !4946, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4948)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{null, !689, !745, !1011}
!4948 = !{!4949, !4950, !4951, !4952, !4953, !4954, !4955}
!4949 = !DILocalVariable(name: "base", arg: 1, scope: !4945, file: !3, line: 684, type: !689)
!4950 = !DILocalVariable(name: "dist", arg: 2, scope: !4945, file: !3, line: 684, type: !745)
!4951 = !DILocalVariable(name: "stmt", arg: 3, scope: !4945, file: !3, line: 684, type: !1011)
!4952 = !DILocalVariable(name: "bb", scope: !4945, file: !3, line: 686, type: !1410)
!4953 = !DILocalVariable(name: "idx", scope: !4945, file: !3, line: 687, type: !680)
!4954 = !DILocalVariable(name: "parm_index", scope: !4945, file: !3, line: 687, type: !680)
!4955 = !DILocalVariable(name: "parm", scope: !4945, file: !3, line: 688, type: !689)
!4956 = !DILocation(line: 0, scope: !4945)
!4957 = !DILocation(line: 686, column: 20, scope: !4945)
!4958 = !DILocation(line: 690, column: 21, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 690, column: 7)
!4960 = !DILocation(line: 690, column: 36, scope: !4959)
!4961 = !DILocation(line: 690, column: 7, scope: !4959)
!4962 = !DILocation(line: 690, column: 7, scope: !4945)
!4963 = !DILocation(line: 693, column: 15, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 693, column: 3)
!4965 = !DILocation(line: 693, column: 8, scope: !4964)
!4966 = !DILocation(line: 0, scope: !4964)
!4967 = !DILocation(line: 694, column: 8, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 693, column: 3)
!4969 = !DILocation(line: 694, column: 21, scope: !4968)
!4970 = !DILocation(line: 694, column: 13, scope: !4968)
!4971 = !DILocation(line: 693, column: 3, scope: !4964)
!4972 = !DILocation(line: 696, column: 15, scope: !4968)
!4973 = !DILocation(line: 695, column: 15, scope: !4968)
!4974 = !DILocation(line: 693, column: 3, scope: !4968)
!4975 = distinct !{!4975, !4971, !4976}
!4976 = !DILocation(line: 696, column: 15, scope: !4964)
!4977 = !DILocation(line: 698, column: 3, scope: !4945)
!4978 = !DILocation(line: 700, column: 21, scope: !4945)
!4979 = !DILocation(line: 700, column: 13, scope: !4945)
!4980 = !DILocation(line: 700, column: 19, scope: !4945)
!4981 = !DILocation(line: 700, column: 38, scope: !4945)
!4982 = !DILocation(line: 701, column: 7, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 701, column: 7)
!4984 = !DILocation(line: 701, column: 28, scope: !4983)
!4985 = !DILocation(line: 701, column: 7, scope: !4945)
!4986 = !DILocation(line: 702, column: 26, scope: !4983)
!4987 = !DILocation(line: 702, column: 5, scope: !4983)
!4988 = !DILocation(line: 703, column: 1, scope: !4945)
!4989 = distinct !DISubprogram(name: "create_access_1", scope: !3, file: !3, line: 710, type: !4990, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4992)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!1986, !689, !745, !745}
!4992 = !{!4993, !4994, !4995, !4996, !4997, !4998}
!4993 = !DILocalVariable(name: "base", arg: 1, scope: !4989, file: !3, line: 710, type: !689)
!4994 = !DILocalVariable(name: "offset", arg: 2, scope: !4989, file: !3, line: 710, type: !745)
!4995 = !DILocalVariable(name: "size", arg: 3, scope: !4989, file: !3, line: 710, type: !745)
!4996 = !DILocalVariable(name: "vec", scope: !4989, file: !3, line: 712, type: !2023)
!4997 = !DILocalVariable(name: "access", scope: !4989, file: !3, line: 713, type: !1986)
!4998 = !DILocalVariable(name: "slot", scope: !4989, file: !3, line: 714, type: !1466)
!4999 = !DILocation(line: 0, scope: !4989)
!5000 = !DILocation(line: 712, column: 3, scope: !4989)
!5001 = !DILocation(line: 716, column: 42, scope: !4989)
!5002 = !DILocation(line: 716, column: 30, scope: !4989)
!5003 = !DILocation(line: 716, column: 12, scope: !4989)
!5004 = !DILocation(line: 717, column: 3, scope: !4989)
!5005 = !DILocation(line: 718, column: 11, scope: !4989)
!5006 = !DILocation(line: 718, column: 16, scope: !4989)
!5007 = !DILocation(line: 719, column: 11, scope: !4989)
!5008 = !DILocation(line: 719, column: 18, scope: !4989)
!5009 = !DILocation(line: 720, column: 11, scope: !4989)
!5010 = !DILocation(line: 720, column: 16, scope: !4989)
!5011 = !DILocation(line: 722, column: 32, scope: !4989)
!5012 = !DILocation(line: 722, column: 49, scope: !4989)
!5013 = !DILocation(line: 722, column: 10, scope: !4989)
!5014 = !DILocation(line: 723, column: 7, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 723, column: 7)
!5016 = !DILocation(line: 723, column: 7, scope: !4989)
!5017 = !DILocation(line: 724, column: 36, scope: !5015)
!5018 = !DILocation(line: 724, column: 5, scope: !5015)
!5019 = !DILocation(line: 726, column: 11, scope: !5015)
!5020 = !DILocation(line: 0, scope: !5015)
!5021 = !DILocation(line: 728, column: 3, scope: !4989)
!5022 = !DILocation(line: 731, column: 48, scope: !4989)
!5023 = !DILocation(line: 731, column: 22, scope: !4989)
!5024 = !DILocation(line: 731, column: 2, scope: !4989)
!5025 = !DILocation(line: 731, column: 46, scope: !4989)
!5026 = !DILocation(line: 734, column: 1, scope: !4989)
!5027 = !DILocation(line: 733, column: 3, scope: !4989)
!5028 = distinct !DISubprogram(name: "gimple_bb", scope: !571, file: !571, line: 1112, type: !5029, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5031)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{!975, !4429}
!5031 = !{!5032}
!5032 = !DILocalVariable(name: "g", arg: 1, scope: !5028, file: !571, line: 1112, type: !4429)
!5033 = !DILocation(line: 0, scope: !5028)
!5034 = !DILocation(line: 1114, column: 20, scope: !5028)
!5035 = !DILocation(line: 1114, column: 3, scope: !5028)
!5036 = distinct !DISubprogram(name: "VEC_access_p_heap_alloc", scope: !3, file: !3, line: 229, type: !5037, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5039)
!5037 = !DISubroutineType(types: !5038)
!5038 = !{!2023, !680}
!5039 = !{!5040}
!5040 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5036, file: !3, line: 229, type: !680)
!5041 = !DILocation(line: 0, scope: !5036)
!5042 = !DILocation(line: 229, column: 1, scope: !5036)
!5043 = distinct !DISubprogram(name: "VEC_access_p_heap_safe_push", scope: !3, file: !3, line: 229, type: !5044, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5047)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!5046, !2038, !2035}
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!5047 = !{!5048, !5049}
!5048 = !DILocalVariable(name: "vec_", arg: 1, scope: !5043, file: !3, line: 229, type: !2038)
!5049 = !DILocalVariable(name: "obj_", arg: 2, scope: !5043, file: !3, line: 229, type: !2035)
!5050 = !DILocation(line: 0, scope: !5043)
!5051 = !DILocation(line: 229, column: 1, scope: !5043)
!5052 = distinct !DISubprogram(name: "VEC_access_p_heap_reserve", scope: !3, file: !3, line: 229, type: !5053, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5055)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!680, !2038, !680}
!5055 = !{!5056, !5057, !5058}
!5056 = !DILocalVariable(name: "vec_", arg: 1, scope: !5052, file: !3, line: 229, type: !2038)
!5057 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5052, file: !3, line: 229, type: !680)
!5058 = !DILocalVariable(name: "extend", scope: !5052, file: !3, line: 229, type: !680)
!5059 = !DILocation(line: 0, scope: !5052)
!5060 = !DILocation(line: 229, column: 1, scope: !5052)
!5061 = !DILocation(line: 229, column: 1, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 229, column: 1)
!5063 = distinct !DISubprogram(name: "VEC_access_p_base_quick_push", scope: !3, file: !3, line: 228, type: !5064, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5067)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!5046, !5066, !2035}
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!5067 = !{!5068, !5069, !5070}
!5068 = !DILocalVariable(name: "vec_", arg: 1, scope: !5063, file: !3, line: 228, type: !5066)
!5069 = !DILocalVariable(name: "obj_", arg: 2, scope: !5063, file: !3, line: 228, type: !2035)
!5070 = !DILocalVariable(name: "slot_", scope: !5063, file: !3, line: 228, type: !5046)
!5071 = !DILocation(line: 0, scope: !5063)
!5072 = !DILocation(line: 228, column: 1, scope: !5063)
!5073 = distinct !DISubprogram(name: "VEC_access_p_base_space", scope: !3, file: !3, line: 228, type: !5074, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5076)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!680, !5066, !680}
!5076 = !{!5077, !5078}
!5077 = !DILocalVariable(name: "vec_", arg: 1, scope: !5073, file: !3, line: 228, type: !5066)
!5078 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5073, file: !3, line: 228, type: !680)
!5079 = !DILocation(line: 0, scope: !5073)
!5080 = !DILocation(line: 228, column: 1, scope: !5073)
!5081 = distinct !DISubprogram(name: "gimple_assign_lhs_ptr", scope: !571, file: !571, line: 1704, type: !4436, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5082)
!5082 = !{!5083}
!5083 = !DILocalVariable(name: "gs", arg: 1, scope: !5081, file: !571, line: 1704, type: !4429)
!5084 = !DILocation(line: 0, scope: !5081)
!5085 = !DILocation(line: 1707, column: 10, scope: !5081)
!5086 = !DILocation(line: 1707, column: 3, scope: !5081)
!5087 = distinct !DISubprogram(name: "gimple_assign_rhs1_ptr", scope: !571, file: !571, line: 1738, type: !4436, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5088)
!5088 = !{!5089}
!5089 = !DILocalVariable(name: "gs", arg: 1, scope: !5087, file: !571, line: 1738, type: !4429)
!5090 = !DILocation(line: 0, scope: !5087)
!5091 = !DILocation(line: 1741, column: 10, scope: !5087)
!5092 = !DILocation(line: 1741, column: 3, scope: !5087)
!5093 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !571, file: !571, line: 1477, type: !4629, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5094)
!5094 = !{!5095}
!5095 = !DILocalVariable(name: "stmt", arg: 1, scope: !5093, file: !571, line: 1477, type: !4429)
!5096 = !DILocation(line: 0, scope: !5093)
!5097 = !DILocation(line: 1479, column: 7, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5093, file: !571, line: 1479, column: 7)
!5099 = !DILocation(line: 1479, column: 7, scope: !5093)
!5100 = !DILocation(line: 1480, column: 25, scope: !5098)
!5101 = !DILocation(line: 1480, column: 12, scope: !5098)
!5102 = !DILocation(line: 1480, column: 5, scope: !5098)
!5103 = !DILocation(line: 0, scope: !5098)
!5104 = !DILocation(line: 1483, column: 1, scope: !5093)
!5105 = distinct !DISubprogram(name: "add_link_to_rhs", scope: !3, file: !3, line: 483, type: !5106, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5108)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{null, !1986, !2000}
!5108 = !{!5109, !5110}
!5109 = !DILocalVariable(name: "racc", arg: 1, scope: !5105, file: !3, line: 483, type: !1986)
!5110 = !DILocalVariable(name: "link", arg: 2, scope: !5105, file: !3, line: 483, type: !2000)
!5111 = !DILocation(line: 0, scope: !5105)
!5112 = !DILocation(line: 485, column: 3, scope: !5105)
!5113 = !DILocation(line: 487, column: 14, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 487, column: 7)
!5115 = !DILocation(line: 487, column: 8, scope: !5114)
!5116 = !DILocation(line: 0, scope: !5114)
!5117 = !DILocation(line: 487, column: 7, scope: !5105)
!5118 = !DILocation(line: 489, column: 7, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 488, column: 5)
!5120 = !DILocation(line: 490, column: 24, scope: !5119)
!5121 = !DILocation(line: 491, column: 5, scope: !5119)
!5122 = !DILocation(line: 493, column: 22, scope: !5114)
!5123 = !DILocation(line: 493, column: 27, scope: !5114)
!5124 = !DILocation(line: 495, column: 19, scope: !5105)
!5125 = !DILocation(line: 496, column: 9, scope: !5105)
!5126 = !DILocation(line: 496, column: 14, scope: !5105)
!5127 = !DILocation(line: 497, column: 1, scope: !5105)
!5128 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !571, file: !571, line: 1283, type: !4629, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5129)
!5129 = !{!5130}
!5130 = !DILocalVariable(name: "g", arg: 1, scope: !5128, file: !571, line: 1283, type: !4429)
!5131 = !DILocation(line: 0, scope: !5128)
!5132 = !DILocation(line: 1285, column: 10, scope: !5128)
!5133 = !DILocation(line: 1285, column: 26, scope: !5128)
!5134 = !DILocation(line: 1285, column: 43, scope: !5128)
!5135 = !DILocation(line: 1285, column: 46, scope: !5128)
!5136 = !DILocation(line: 1285, column: 62, scope: !5128)
!5137 = !DILocation(line: 1285, column: 3, scope: !5128)
!5138 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !916, file: !916, line: 224, type: !5139, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5146)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{null, !5141, !5142, !7, !5145}
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!5142 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !690, line: 48, baseType: !5143)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !915)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!5146 = !{!5147, !5148, !5149, !5150}
!5147 = !DILocalVariable(name: "bi", arg: 1, scope: !5138, file: !916, line: 224, type: !5141)
!5148 = !DILocalVariable(name: "map", arg: 2, scope: !5138, file: !916, line: 224, type: !5142)
!5149 = !DILocalVariable(name: "start_bit", arg: 3, scope: !5138, file: !916, line: 225, type: !7)
!5150 = !DILocalVariable(name: "bit_no", arg: 4, scope: !5138, file: !916, line: 225, type: !5145)
!5151 = !DILocation(line: 0, scope: !5138)
!5152 = !DILocation(line: 227, column: 19, scope: !5138)
!5153 = !DILocation(line: 227, column: 12, scope: !5138)
!5154 = !DILocation(line: 228, column: 7, scope: !5138)
!5155 = !DILocation(line: 228, column: 12, scope: !5138)
!5156 = !DILocation(line: 0, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !916, line: 233, column: 11)
!5158 = distinct !DILexicalBlock(scope: !5138, file: !916, line: 232, column: 5)
!5159 = !DILocation(line: 231, column: 3, scope: !5138)
!5160 = !DILocation(line: 233, column: 12, scope: !5157)
!5161 = !DILocation(line: 233, column: 11, scope: !5158)
!5162 = !DILocation(line: 235, column: 13, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5157, file: !916, line: 234, column: 2)
!5164 = !DILocation(line: 236, column: 4, scope: !5163)
!5165 = !DILocation(line: 239, column: 11, scope: !5158)
!5166 = distinct !{!5166, !5159, !5167}
!5167 = !DILocation(line: 242, column: 5, scope: !5138)
!5168 = !DILocation(line: 245, column: 11, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5138, file: !916, line: 245, column: 7)
!5170 = !DILocation(line: 245, column: 17, scope: !5169)
!5171 = !DILocation(line: 245, column: 22, scope: !5169)
!5172 = !DILocation(line: 245, column: 7, scope: !5138)
!5173 = !DILocation(line: 246, column: 27, scope: !5169)
!5174 = !DILocation(line: 246, column: 32, scope: !5169)
!5175 = !DILocation(line: 246, column: 5, scope: !5169)
!5176 = !DILocation(line: 249, column: 7, scope: !5138)
!5177 = !DILocation(line: 249, column: 15, scope: !5138)
!5178 = !DILocation(line: 250, column: 14, scope: !5138)
!5179 = !DILocation(line: 251, column: 7, scope: !5138)
!5180 = !DILocation(line: 251, column: 12, scope: !5138)
!5181 = !DILocation(line: 257, column: 16, scope: !5138)
!5182 = !DILocation(line: 257, column: 13, scope: !5138)
!5183 = !DILocation(line: 259, column: 11, scope: !5138)
!5184 = !DILocation(line: 260, column: 1, scope: !5138)
!5185 = distinct !DISubprogram(name: "bmp_iter_set", scope: !916, file: !916, line: 393, type: !5186, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5188)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!679, !5141, !5145}
!5188 = !{!5189, !5190, !5191}
!5189 = !DILocalVariable(name: "bi", arg: 1, scope: !5185, file: !916, line: 393, type: !5141)
!5190 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5185, file: !916, line: 393, type: !5145)
!5191 = !DILabel(scope: !5192, name: "next_bit", file: !916, line: 398)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !916, line: 397, column: 5)
!5193 = distinct !DILexicalBlock(scope: !5185, file: !916, line: 396, column: 7)
!5194 = !DILocation(line: 0, scope: !5185)
!5195 = !DILocation(line: 396, column: 11, scope: !5193)
!5196 = !DILocation(line: 396, column: 7, scope: !5193)
!5197 = !DILocation(line: 396, column: 7, scope: !5185)
!5198 = !DILocation(line: 419, column: 15, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !916, line: 418, column: 2)
!5200 = distinct !DILexicalBlock(scope: !5185, file: !916, line: 415, column: 5)
!5201 = !DILocation(line: 399, column: 7, scope: !5192)
!5202 = !DILocation(line: 398, column: 5, scope: !5192)
!5203 = !DILocation(line: 399, column: 20, scope: !5192)
!5204 = !DILocation(line: 399, column: 25, scope: !5192)
!5205 = !DILocation(line: 399, column: 14, scope: !5192)
!5206 = !DILocation(line: 401, column: 13, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5192, file: !916, line: 400, column: 2)
!5208 = !DILocation(line: 402, column: 12, scope: !5207)
!5209 = distinct !{!5209, !5201, !5210}
!5210 = !DILocation(line: 403, column: 2, scope: !5192)
!5211 = !DILocation(line: 410, column: 15, scope: !5185)
!5212 = !DILocation(line: 410, column: 42, scope: !5185)
!5213 = !DILocation(line: 411, column: 26, scope: !5185)
!5214 = !DILocation(line: 410, column: 11, scope: !5185)
!5215 = !DILocation(line: 412, column: 7, scope: !5185)
!5216 = !DILocation(line: 412, column: 14, scope: !5185)
!5217 = !DILocation(line: 0, scope: !5200)
!5218 = !DILocation(line: 414, column: 3, scope: !5185)
!5219 = !DILocation(line: 417, column: 7, scope: !5200)
!5220 = !DILocation(line: 417, column: 18, scope: !5200)
!5221 = !DILocation(line: 417, column: 26, scope: !5200)
!5222 = !DILocation(line: 419, column: 13, scope: !5199)
!5223 = !DILocation(line: 420, column: 8, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5199, file: !916, line: 420, column: 8)
!5225 = !DILocation(line: 420, column: 8, scope: !5199)
!5226 = !DILocation(line: 422, column: 12, scope: !5199)
!5227 = !DILocation(line: 423, column: 15, scope: !5199)
!5228 = distinct !{!5228, !5219, !5229}
!5229 = !DILocation(line: 424, column: 2, scope: !5200)
!5230 = !DILocation(line: 427, column: 28, scope: !5200)
!5231 = !DILocation(line: 427, column: 16, scope: !5200)
!5232 = !DILocation(line: 428, column: 12, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5200, file: !916, line: 428, column: 11)
!5234 = !DILocation(line: 428, column: 11, scope: !5200)
!5235 = !DILocation(line: 430, column: 27, scope: !5200)
!5236 = !DILocation(line: 430, column: 32, scope: !5200)
!5237 = !DILocation(line: 430, column: 15, scope: !5200)
!5238 = !DILocation(line: 431, column: 19, scope: !5200)
!5239 = distinct !{!5239, !5218, !5240}
!5240 = !DILocation(line: 432, column: 5, scope: !5185)
!5241 = !DILocation(line: 433, column: 1, scope: !5185)
!5242 = distinct !DISubprogram(name: "type_consists_of_records_p", scope: !3, file: !3, line: 810, type: !4225, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5243)
!5243 = !{!5244, !5245, !5246, !5247}
!5244 = !DILocalVariable(name: "type", arg: 1, scope: !5242, file: !3, line: 810, type: !689)
!5245 = !DILocalVariable(name: "fld", scope: !5242, file: !3, line: 812, type: !689)
!5246 = !DILocalVariable(name: "last_fld_has_zero_size", scope: !5242, file: !3, line: 813, type: !679)
!5247 = !DILocalVariable(name: "ft", scope: !5248, file: !3, line: 821, type: !689)
!5248 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 820, column: 7)
!5249 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 819, column: 9)
!5250 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 818, column: 3)
!5251 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 818, column: 3)
!5252 = !DILocation(line: 0, scope: !5242)
!5253 = !DILocation(line: 815, column: 7, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 815, column: 7)
!5255 = !DILocation(line: 815, column: 24, scope: !5254)
!5256 = !DILocation(line: 815, column: 7, scope: !5242)
!5257 = !DILocation(line: 818, column: 14, scope: !5251)
!5258 = !DILocation(line: 818, column: 8, scope: !5251)
!5259 = !DILocation(line: 0, scope: !5251)
!5260 = !DILocation(line: 818, column: 3, scope: !5251)
!5261 = !DILocation(line: 819, column: 9, scope: !5249)
!5262 = !DILocation(line: 819, column: 25, scope: !5249)
!5263 = !DILocation(line: 819, column: 9, scope: !5250)
!5264 = !DILocation(line: 821, column: 12, scope: !5248)
!5265 = !DILocation(line: 0, scope: !5248)
!5266 = !DILocation(line: 823, column: 7, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 823, column: 6)
!5268 = !DILocation(line: 824, column: 6, scope: !5267)
!5269 = !DILocation(line: 824, column: 10, scope: !5267)
!5270 = !DILocation(line: 823, column: 6, scope: !5248)
!5271 = !DILocation(line: 827, column: 41, scope: !5248)
!5272 = !DILocation(line: 827, column: 27, scope: !5248)
!5273 = !DILocation(line: 827, column: 61, scope: !5248)
!5274 = !DILocation(line: 828, column: 7, scope: !5249)
!5275 = !DILocation(line: 818, column: 45, scope: !5250)
!5276 = !DILocation(line: 818, column: 3, scope: !5250)
!5277 = distinct !{!5277, !5260, !5278}
!5278 = !DILocation(line: 828, column: 7, scope: !5251)
!5279 = !DILocation(line: 830, column: 7, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 830, column: 7)
!5281 = !DILocation(line: 834, column: 1, scope: !5242)
!5282 = distinct !DISubprogram(name: "completely_scalarize_record", scope: !3, file: !3, line: 842, type: !5283, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5285)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{null, !689, !689, !745}
!5285 = !{!5286, !5287, !5288, !5289, !5290, !5291, !5296, !5297, !5300, !5301, !5302}
!5286 = !DILocalVariable(name: "base", arg: 1, scope: !5282, file: !3, line: 842, type: !689)
!5287 = !DILocalVariable(name: "decl", arg: 2, scope: !5282, file: !3, line: 842, type: !689)
!5288 = !DILocalVariable(name: "offset", arg: 3, scope: !5282, file: !3, line: 842, type: !745)
!5289 = !DILocalVariable(name: "fld", scope: !5282, file: !3, line: 844, type: !689)
!5290 = !DILocalVariable(name: "decl_type", scope: !5282, file: !3, line: 844, type: !689)
!5291 = !DILocalVariable(name: "pos", scope: !5292, file: !3, line: 849, type: !745)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 848, column: 7)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 847, column: 9)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 846, column: 3)
!5295 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 846, column: 3)
!5296 = !DILocalVariable(name: "ft", scope: !5292, file: !3, line: 850, type: !689)
!5297 = !DILocalVariable(name: "access", scope: !5298, file: !3, line: 854, type: !1986)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 853, column: 4)
!5299 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 852, column: 6)
!5300 = !DILocalVariable(name: "size", scope: !5298, file: !3, line: 855, type: !745)
!5301 = !DILocalVariable(name: "expr", scope: !5298, file: !3, line: 856, type: !689)
!5302 = !DILocalVariable(name: "ok", scope: !5298, file: !3, line: 857, type: !679)
!5303 = !DILocation(line: 0, scope: !5282)
!5304 = !DILocation(line: 844, column: 25, scope: !5282)
!5305 = !DILocation(line: 846, column: 14, scope: !5295)
!5306 = !DILocation(line: 0, scope: !5298)
!5307 = !DILocation(line: 846, column: 8, scope: !5295)
!5308 = !DILocation(line: 0, scope: !5295)
!5309 = !DILocation(line: 846, column: 3, scope: !5295)
!5310 = !DILocation(line: 847, column: 9, scope: !5293)
!5311 = !DILocation(line: 847, column: 25, scope: !5293)
!5312 = !DILocation(line: 847, column: 9, scope: !5294)
!5313 = !DILocation(line: 849, column: 31, scope: !5292)
!5314 = !DILocation(line: 849, column: 29, scope: !5292)
!5315 = !DILocation(line: 0, scope: !5292)
!5316 = !DILocation(line: 850, column: 12, scope: !5292)
!5317 = !DILocation(line: 852, column: 6, scope: !5299)
!5318 = !DILocation(line: 852, column: 6, scope: !5292)
!5319 = !DILocation(line: 856, column: 6, scope: !5298)
!5320 = !DILocation(line: 859, column: 27, scope: !5298)
!5321 = !DILocation(line: 859, column: 13, scope: !5298)
!5322 = !DILocation(line: 860, column: 11, scope: !5298)
!5323 = !DILocation(line: 861, column: 40, scope: !5298)
!5324 = !DILocation(line: 861, column: 11, scope: !5298)
!5325 = !DILocation(line: 863, column: 6, scope: !5298)
!5326 = !DILocation(line: 865, column: 15, scope: !5298)
!5327 = !DILocation(line: 866, column: 21, scope: !5298)
!5328 = !DILocation(line: 866, column: 14, scope: !5298)
!5329 = !DILocation(line: 866, column: 19, scope: !5298)
!5330 = !DILocation(line: 867, column: 14, scope: !5298)
!5331 = !DILocation(line: 867, column: 19, scope: !5298)
!5332 = !DILocation(line: 868, column: 14, scope: !5298)
!5333 = !DILocation(line: 868, column: 34, scope: !5298)
!5334 = !DILocation(line: 870, column: 4, scope: !5299)
!5335 = !DILocation(line: 870, column: 4, scope: !5298)
!5336 = !DILocation(line: 872, column: 4, scope: !5299)
!5337 = !DILocation(line: 846, column: 50, scope: !5294)
!5338 = !DILocation(line: 846, column: 3, scope: !5294)
!5339 = distinct !{!5339, !5309, !5340}
!5340 = !DILocation(line: 873, column: 7, scope: !5295)
!5341 = !DILocation(line: 874, column: 1, scope: !5282)
!5342 = distinct !DISubprogram(name: "bmp_iter_next", scope: !916, file: !916, line: 382, type: !5343, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5345)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{null, !5141, !5145}
!5345 = !{!5346, !5347}
!5346 = !DILocalVariable(name: "bi", arg: 1, scope: !5342, file: !916, line: 382, type: !5141)
!5347 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5342, file: !916, line: 382, type: !5145)
!5348 = !DILocation(line: 0, scope: !5342)
!5349 = !DILocation(line: 384, column: 7, scope: !5342)
!5350 = !DILocation(line: 384, column: 12, scope: !5342)
!5351 = !DILocation(line: 385, column: 11, scope: !5342)
!5352 = !DILocation(line: 386, column: 1, scope: !5342)
!5353 = distinct !DISubprogram(name: "sort_and_splice_var_accesses", scope: !3, file: !3, line: 1558, type: !5354, scopeLine: 1559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5356)
!5354 = !DISubroutineType(types: !5355)
!5355 = !{!1986, !689}
!5356 = !{!5357, !5358, !5359, !5360, !5361, !5362, !5364, !5365, !5366, !5367, !5368, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377}
!5357 = !DILocalVariable(name: "var", arg: 1, scope: !5353, file: !3, line: 1558, type: !689)
!5358 = !DILocalVariable(name: "i", scope: !5353, file: !3, line: 1560, type: !680)
!5359 = !DILocalVariable(name: "j", scope: !5353, file: !3, line: 1560, type: !680)
!5360 = !DILocalVariable(name: "access_count", scope: !5353, file: !3, line: 1560, type: !680)
!5361 = !DILocalVariable(name: "res", scope: !5353, file: !3, line: 1561, type: !1986)
!5362 = !DILocalVariable(name: "prev_acc_ptr", scope: !5353, file: !3, line: 1561, type: !5363)
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!5364 = !DILocalVariable(name: "access_vec", scope: !5353, file: !3, line: 1562, type: !2023)
!5365 = !DILocalVariable(name: "first", scope: !5353, file: !3, line: 1563, type: !679)
!5366 = !DILocalVariable(name: "low", scope: !5353, file: !3, line: 1564, type: !745)
!5367 = !DILocalVariable(name: "high", scope: !5353, file: !3, line: 1564, type: !745)
!5368 = !DILocalVariable(name: "access", scope: !5369, file: !3, line: 1583, type: !1986)
!5369 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 1582, column: 5)
!5370 = !DILocalVariable(name: "grp_write", scope: !5369, file: !3, line: 1584, type: !679)
!5371 = !DILocalVariable(name: "grp_read", scope: !5369, file: !3, line: 1585, type: !679)
!5372 = !DILocalVariable(name: "multiple_reads", scope: !5369, file: !3, line: 1586, type: !679)
!5373 = !DILocalVariable(name: "total_scalarization", scope: !5369, file: !3, line: 1587, type: !679)
!5374 = !DILocalVariable(name: "grp_partial_lhs", scope: !5369, file: !3, line: 1588, type: !679)
!5375 = !DILocalVariable(name: "first_scalar", scope: !5369, file: !3, line: 1589, type: !679)
!5376 = !DILocalVariable(name: "unscalarizable_region", scope: !5369, file: !3, line: 1590, type: !679)
!5377 = !DILocalVariable(name: "ac2", scope: !5378, file: !3, line: 1607, type: !1986)
!5378 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 1606, column: 2)
!5379 = !DILocation(line: 0, scope: !5353)
!5380 = !DILocation(line: 1561, column: 3, scope: !5353)
!5381 = !DILocation(line: 1566, column: 16, scope: !5353)
!5382 = !DILocation(line: 1567, column: 8, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 1567, column: 7)
!5384 = !DILocation(line: 1567, column: 7, scope: !5353)
!5385 = !DILocation(line: 1569, column: 18, scope: !5353)
!5386 = !DILocation(line: 1573, column: 15, scope: !5353)
!5387 = !DILocation(line: 1573, column: 51, scope: !5353)
!5388 = !DILocation(line: 1573, column: 3, scope: !5353)
!5389 = !DILocation(line: 1581, column: 3, scope: !5353)
!5390 = !DILocation(line: 1581, column: 12, scope: !5353)
!5391 = !DILocation(line: 1583, column: 31, scope: !5369)
!5392 = !DILocation(line: 0, scope: !5369)
!5393 = !DILocation(line: 1584, column: 32, scope: !5369)
!5394 = !DILocation(line: 1584, column: 24, scope: !5369)
!5395 = !DILocation(line: 1585, column: 23, scope: !5369)
!5396 = !DILocation(line: 1587, column: 42, scope: !5369)
!5397 = !DILocation(line: 1587, column: 34, scope: !5369)
!5398 = !DILocation(line: 1588, column: 38, scope: !5369)
!5399 = !DILocation(line: 1588, column: 30, scope: !5369)
!5400 = !DILocation(line: 1589, column: 55, scope: !5369)
!5401 = !DILocation(line: 1589, column: 27, scope: !5369)
!5402 = !DILocation(line: 1590, column: 44, scope: !5369)
!5403 = !DILocation(line: 1590, column: 36, scope: !5369)
!5404 = !DILocation(line: 1592, column: 11, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 1592, column: 11)
!5406 = !DILocation(line: 1592, column: 17, scope: !5405)
!5407 = !DILocation(line: 0, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 1593, column: 2)
!5409 = !DILocation(line: 1595, column: 18, scope: !5408)
!5410 = !DILocation(line: 1592, column: 28, scope: !5405)
!5411 = !DILocation(line: 1592, column: 35, scope: !5405)
!5412 = !DILocation(line: 1592, column: 11, scope: !5369)
!5413 = !DILocation(line: 1596, column: 36, scope: !5408)
!5414 = !DILocation(line: 1596, column: 26, scope: !5408)
!5415 = !DILocation(line: 1597, column: 2, scope: !5408)
!5416 = !DILocation(line: 1598, column: 31, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 1598, column: 16)
!5418 = !DILocation(line: 1598, column: 37, scope: !5417)
!5419 = !DILocation(line: 1598, column: 65, scope: !5417)
!5420 = !DILocation(line: 1598, column: 55, scope: !5417)
!5421 = !DILocation(line: 1598, column: 70, scope: !5417)
!5422 = !DILocation(line: 1598, column: 16, scope: !5405)
!5423 = !DILocation(line: 1601, column: 2, scope: !5417)
!5424 = !DILocation(line: 1604, column: 13, scope: !5369)
!5425 = !DILocation(line: 0, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 1608, column: 8)
!5427 = !DILocation(line: 0, scope: !5378)
!5428 = !DILocation(line: 1605, column: 7, scope: !5369)
!5429 = !DILocation(line: 1585, column: 12, scope: !5369)
!5430 = !DILocation(line: 1584, column: 12, scope: !5369)
!5431 = !DILocation(line: 1586, column: 12, scope: !5369)
!5432 = !DILocation(line: 1587, column: 12, scope: !5369)
!5433 = !DILocation(line: 1588, column: 12, scope: !5369)
!5434 = !DILocation(line: 1604, column: 9, scope: !5369)
!5435 = !DILocation(line: 1590, column: 12, scope: !5369)
!5436 = !DILocation(line: 1605, column: 16, scope: !5369)
!5437 = !DILocation(line: 1607, column: 25, scope: !5378)
!5438 = !DILocation(line: 1608, column: 13, scope: !5426)
!5439 = !DILocation(line: 1608, column: 31, scope: !5426)
!5440 = !DILocation(line: 1608, column: 20, scope: !5426)
!5441 = !DILocation(line: 1608, column: 38, scope: !5426)
!5442 = !DILocation(line: 1608, column: 46, scope: !5426)
!5443 = !DILocation(line: 1608, column: 62, scope: !5426)
!5444 = !DILocation(line: 1608, column: 51, scope: !5426)
!5445 = !DILocation(line: 1608, column: 8, scope: !5378)
!5446 = !DILocation(line: 1610, column: 13, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 1610, column: 8)
!5448 = !DILocation(line: 1610, column: 8, scope: !5447)
!5449 = !DILocation(line: 1610, column: 8, scope: !5378)
!5450 = !DILocation(line: 1614, column: 12, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1614, column: 12)
!5452 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1613, column: 6)
!5453 = !DILocation(line: 1619, column: 28, scope: !5378)
!5454 = !DILocation(line: 1619, column: 20, scope: !5378)
!5455 = !DILocation(line: 1620, column: 34, scope: !5378)
!5456 = !DILocation(line: 1620, column: 26, scope: !5378)
!5457 = !DILocation(line: 1621, column: 32, scope: !5378)
!5458 = !DILocation(line: 1621, column: 24, scope: !5378)
!5459 = !DILocation(line: 1622, column: 4, scope: !5378)
!5460 = !DILocation(line: 1627, column: 4, scope: !5378)
!5461 = !DILocation(line: 1628, column: 9, scope: !5378)
!5462 = !DILocation(line: 1628, column: 30, scope: !5378)
!5463 = !DILocation(line: 1629, column: 5, scope: !5378)
!5464 = !DILocation(line: 1630, column: 2, scope: !5369)
!5465 = distinct !{!5465, !5428, !5464}
!5466 = !DILocation(line: 1634, column: 15, scope: !5369)
!5467 = !DILocation(line: 1634, column: 36, scope: !5369)
!5468 = !DILocation(line: 1635, column: 25, scope: !5369)
!5469 = !DILocation(line: 1636, column: 24, scope: !5369)
!5470 = !DILocation(line: 1637, column: 41, scope: !5369)
!5471 = !DILocation(line: 1637, column: 24, scope: !5369)
!5472 = !DILocation(line: 1638, column: 31, scope: !5369)
!5473 = !DILocation(line: 1639, column: 41, scope: !5369)
!5474 = !DILocation(line: 1640, column: 19, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 1640, column: 11)
!5476 = !DILocation(line: 1640, column: 11, scope: !5475)
!5477 = !DILocation(line: 1640, column: 11, scope: !5369)
!5478 = !DILocation(line: 1641, column: 2, scope: !5475)
!5479 = !DILocation(line: 1643, column: 21, scope: !5369)
!5480 = !DILocation(line: 1644, column: 31, scope: !5369)
!5481 = !DILocation(line: 1645, column: 5, scope: !5353)
!5482 = distinct !{!5482, !5389, !5481}
!5483 = !DILocation(line: 1647, column: 3, scope: !5353)
!5484 = !DILocation(line: 1648, column: 3, scope: !5353)
!5485 = !DILocation(line: 1649, column: 1, scope: !5353)
!5486 = distinct !DISubprogram(name: "build_access_trees", scope: !3, file: !3, line: 1744, type: !5487, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5489)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{null, !1986}
!5489 = !{!5490, !5491}
!5490 = !DILocalVariable(name: "access", arg: 1, scope: !5486, file: !3, line: 1744, type: !1986)
!5491 = !DILocalVariable(name: "root", scope: !5492, file: !3, line: 1748, type: !1986)
!5492 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1747, column: 5)
!5493 = !DILocation(line: 0, scope: !5486)
!5494 = !DILocation(line: 0, scope: !5492)
!5495 = !DILocation(line: 1746, column: 3, scope: !5486)
!5496 = !DILocation(line: 1746, column: 10, scope: !5486)
!5497 = !DILocation(line: 1750, column: 7, scope: !5492)
!5498 = !DILocation(line: 1751, column: 24, scope: !5492)
!5499 = !DILocation(line: 1751, column: 13, scope: !5492)
!5500 = !DILocation(line: 1751, column: 22, scope: !5492)
!5501 = distinct !{!5501, !5495, !5502}
!5502 = !DILocation(line: 1752, column: 5, scope: !5486)
!5503 = !DILocation(line: 1753, column: 1, scope: !5486)
!5504 = distinct !DISubprogram(name: "propagate_all_subaccesses", scope: !3, file: !3, line: 2013, type: !2861, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5505)
!5505 = !{!5506, !5508, !5509}
!5506 = !DILocalVariable(name: "racc", scope: !5507, file: !3, line: 2017, type: !1986)
!5507 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 2016, column: 5)
!5508 = !DILocalVariable(name: "link", scope: !5507, file: !3, line: 2018, type: !2000)
!5509 = !DILocalVariable(name: "lacc", scope: !5510, file: !3, line: 2024, type: !1986)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 2023, column: 2)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 2022, column: 7)
!5512 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 2022, column: 7)
!5513 = !DILocation(line: 2015, column: 3, scope: !5504)
!5514 = !DILocation(line: 2015, column: 10, scope: !5504)
!5515 = !DILocation(line: 2017, column: 29, scope: !5507)
!5516 = !DILocation(line: 0, scope: !5507)
!5517 = !DILocation(line: 2020, column: 7, scope: !5507)
!5518 = !DILocation(line: 2022, column: 12, scope: !5512)
!5519 = !DILocation(line: 0, scope: !5512)
!5520 = !DILocation(line: 2022, column: 7, scope: !5512)
!5521 = distinct !{!5521, !5513, !5522}
!5522 = !DILocation(line: 2033, column: 5, scope: !5504)
!5523 = !DILocation(line: 2024, column: 32, scope: !5510)
!5524 = !DILocation(line: 0, scope: !5510)
!5525 = !DILocation(line: 2026, column: 23, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 2026, column: 8)
!5527 = !DILocation(line: 2026, column: 41, scope: !5526)
!5528 = !DILocation(line: 2026, column: 9, scope: !5526)
!5529 = !DILocation(line: 2026, column: 8, scope: !5510)
!5530 = !DILocation(line: 2028, column: 17, scope: !5510)
!5531 = !DILocation(line: 2029, column: 8, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 2029, column: 8)
!5533 = !DILocation(line: 2030, column: 8, scope: !5532)
!5534 = !DILocation(line: 2030, column: 17, scope: !5532)
!5535 = !DILocation(line: 2030, column: 11, scope: !5532)
!5536 = !DILocation(line: 2029, column: 8, scope: !5510)
!5537 = !DILocation(line: 2031, column: 6, scope: !5532)
!5538 = !DILocation(line: 2022, column: 56, scope: !5511)
!5539 = !DILocation(line: 2022, column: 7, scope: !5511)
!5540 = distinct !{!5540, !5520, !5541}
!5541 = !DILocation(line: 2032, column: 2, scope: !5512)
!5542 = !DILocation(line: 2034, column: 1, scope: !5504)
!5543 = distinct !DISubprogram(name: "get_first_repr_for_decl", scope: !3, file: !3, line: 451, type: !5354, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5544)
!5544 = !{!5545, !5546}
!5545 = !DILocalVariable(name: "base", arg: 1, scope: !5543, file: !3, line: 451, type: !689)
!5546 = !DILocalVariable(name: "access_vec", scope: !5543, file: !3, line: 453, type: !2023)
!5547 = !DILocation(line: 0, scope: !5543)
!5548 = !DILocation(line: 455, column: 16, scope: !5543)
!5549 = !DILocation(line: 456, column: 8, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 456, column: 7)
!5551 = !DILocation(line: 456, column: 7, scope: !5543)
!5552 = !DILocation(line: 459, column: 10, scope: !5543)
!5553 = !DILocation(line: 459, column: 3, scope: !5543)
!5554 = !DILocation(line: 460, column: 1, scope: !5543)
!5555 = distinct !DISubprogram(name: "analyze_access_trees", scope: !3, file: !3, line: 1858, type: !5556, scopeLine: 1859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5558)
!5556 = !DISubroutineType(types: !5557)
!5557 = !{!679, !1986}
!5558 = !{!5559, !5560}
!5559 = !DILocalVariable(name: "access", arg: 1, scope: !5555, file: !3, line: 1858, type: !1986)
!5560 = !DILocalVariable(name: "ret", scope: !5555, file: !3, line: 1860, type: !679)
!5561 = !DILocation(line: 0, scope: !5555)
!5562 = !DILocation(line: 1862, column: 3, scope: !5555)
!5563 = !DILocation(line: 1864, column: 11, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 1864, column: 11)
!5565 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 1863, column: 5)
!5566 = !DILocation(line: 1864, column: 11, scope: !5565)
!5567 = !DILocation(line: 1866, column: 24, scope: !5565)
!5568 = distinct !{!5568, !5562, !5569}
!5569 = !DILocation(line: 1867, column: 5, scope: !5555)
!5570 = !DILocation(line: 1869, column: 3, scope: !5555)
!5571 = distinct !DISubprogram(name: "dump_access_tree", scope: !3, file: !3, line: 400, type: !5572, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5574)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{null, !2211, !1986}
!5574 = !{!5575, !5576}
!5575 = !DILocalVariable(name: "f", arg: 1, scope: !5571, file: !3, line: 400, type: !2211)
!5576 = !DILocalVariable(name: "access", arg: 2, scope: !5571, file: !3, line: 400, type: !1986)
!5577 = !DILocation(line: 0, scope: !5571)
!5578 = !DILocation(line: 402, column: 3, scope: !5571)
!5579 = !DILocation(line: 402, column: 3, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 402, column: 3)
!5581 = !DILocation(line: 403, column: 5, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 402, column: 3)
!5583 = !DILocation(line: 402, column: 35, scope: !5582)
!5584 = !DILocation(line: 402, column: 3, scope: !5582)
!5585 = distinct !{!5585, !5579, !5586}
!5586 = !DILocation(line: 403, column: 37, scope: !5580)
!5587 = !DILocation(line: 404, column: 1, scope: !5571)
!5588 = distinct !DISubprogram(name: "get_base_access_vector", scope: !3, file: !3, line: 418, type: !5589, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5591)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{!2023, !689}
!5591 = !{!5592, !5593}
!5592 = !DILocalVariable(name: "base", arg: 1, scope: !5588, file: !3, line: 418, type: !689)
!5593 = !DILocalVariable(name: "slot", scope: !5588, file: !3, line: 420, type: !1466)
!5594 = !DILocation(line: 0, scope: !5588)
!5595 = !DILocation(line: 422, column: 32, scope: !5588)
!5596 = !DILocation(line: 422, column: 49, scope: !5588)
!5597 = !DILocation(line: 422, column: 10, scope: !5588)
!5598 = !DILocation(line: 423, column: 8, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 423, column: 7)
!5600 = !DILocation(line: 423, column: 7, scope: !5588)
!5601 = !DILocation(line: 426, column: 12, scope: !5599)
!5602 = !DILocation(line: 426, column: 5, scope: !5599)
!5603 = !DILocation(line: 0, scope: !5599)
!5604 = !DILocation(line: 427, column: 1, scope: !5588)
!5605 = distinct !DISubprogram(name: "VEC_access_p_base_length", scope: !3, file: !3, line: 228, type: !5606, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5610)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!7, !5608}
!5608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5609, size: 64)
!5609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2028)
!5610 = !{!5611}
!5611 = !DILocalVariable(name: "vec_", arg: 1, scope: !5605, file: !3, line: 228, type: !5608)
!5612 = !DILocation(line: 0, scope: !5605)
!5613 = !DILocation(line: 228, column: 1, scope: !5605)
!5614 = distinct !DISubprogram(name: "VEC_access_p_base_address", scope: !3, file: !3, line: 228, type: !5615, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5617)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!5046, !5066}
!5617 = !{!5618}
!5618 = !DILocalVariable(name: "vec_", arg: 1, scope: !5614, file: !3, line: 228, type: !5066)
!5619 = !DILocation(line: 0, scope: !5614)
!5620 = !DILocation(line: 228, column: 1, scope: !5614)
!5621 = distinct !DISubprogram(name: "compare_access_positions", scope: !3, file: !3, line: 1246, type: !1458, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5622)
!5622 = !{!5623, !5624, !5625, !5626, !5627, !5628}
!5623 = !DILocalVariable(name: "a", arg: 1, scope: !5621, file: !3, line: 1246, type: !1453)
!5624 = !DILocalVariable(name: "b", arg: 2, scope: !5621, file: !3, line: 1246, type: !1453)
!5625 = !DILocalVariable(name: "fp1", scope: !5621, file: !3, line: 1248, type: !2039)
!5626 = !DILocalVariable(name: "fp2", scope: !5621, file: !3, line: 1249, type: !2039)
!5627 = !DILocalVariable(name: "f1", scope: !5621, file: !3, line: 1250, type: !2040)
!5628 = !DILocalVariable(name: "f2", scope: !5621, file: !3, line: 1251, type: !2040)
!5629 = !DILocation(line: 0, scope: !5621)
!5630 = !DILocation(line: 1248, column: 25, scope: !5621)
!5631 = !DILocation(line: 1249, column: 25, scope: !5621)
!5632 = !DILocation(line: 1250, column: 23, scope: !5621)
!5633 = !DILocation(line: 1251, column: 23, scope: !5621)
!5634 = !DILocation(line: 1253, column: 11, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 1253, column: 7)
!5636 = !DILocation(line: 1253, column: 25, scope: !5635)
!5637 = !DILocation(line: 1253, column: 18, scope: !5635)
!5638 = !DILocation(line: 1253, column: 7, scope: !5621)
!5639 = !DILocation(line: 1254, column: 23, scope: !5635)
!5640 = !DILocation(line: 1254, column: 12, scope: !5635)
!5641 = !DILocation(line: 1254, column: 5, scope: !5635)
!5642 = !DILocation(line: 1256, column: 11, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 1256, column: 7)
!5644 = !DILocation(line: 1256, column: 23, scope: !5643)
!5645 = !DILocation(line: 1256, column: 16, scope: !5643)
!5646 = !DILocation(line: 1256, column: 7, scope: !5621)
!5647 = !DILocation(line: 1258, column: 15, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 1258, column: 11)
!5649 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 1257, column: 5)
!5650 = !DILocation(line: 1258, column: 27, scope: !5648)
!5651 = !DILocation(line: 1258, column: 20, scope: !5648)
!5652 = !DILocation(line: 1258, column: 11, scope: !5649)
!5653 = !DILocation(line: 1261, column: 17, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 1261, column: 16)
!5655 = !DILocation(line: 1262, column: 4, scope: !5654)
!5656 = !DILocation(line: 1262, column: 31, scope: !5654)
!5657 = !DILocation(line: 1262, column: 7, scope: !5654)
!5658 = !DILocation(line: 1261, column: 16, scope: !5648)
!5659 = !DILocation(line: 1264, column: 40, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 1264, column: 16)
!5661 = !DILocation(line: 1264, column: 16, scope: !5660)
!5662 = !DILocation(line: 1265, column: 9, scope: !5660)
!5663 = !DILocation(line: 1265, column: 37, scope: !5660)
!5664 = !DILocation(line: 1265, column: 13, scope: !5660)
!5665 = !DILocation(line: 1264, column: 16, scope: !5654)
!5666 = !DILocation(line: 1268, column: 16, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 1268, column: 16)
!5668 = !DILocation(line: 1268, column: 37, scope: !5667)
!5669 = !DILocation(line: 1269, column: 9, scope: !5667)
!5670 = !DILocation(line: 1269, column: 33, scope: !5667)
!5671 = !DILocation(line: 1270, column: 9, scope: !5667)
!5672 = !DILocation(line: 1270, column: 13, scope: !5667)
!5673 = !DILocation(line: 1270, column: 34, scope: !5667)
!5674 = !DILocation(line: 1271, column: 6, scope: !5667)
!5675 = !DILocation(line: 1271, column: 30, scope: !5667)
!5676 = !DILocation(line: 1268, column: 16, scope: !5660)
!5677 = !DILocation(line: 1274, column: 3, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 1273, column: 16)
!5679 = !DILocation(line: 1274, column: 27, scope: !5678)
!5680 = !DILocation(line: 1275, column: 9, scope: !5678)
!5681 = !DILocation(line: 1275, column: 12, scope: !5678)
!5682 = !DILocation(line: 1275, column: 33, scope: !5678)
!5683 = !DILocation(line: 1276, column: 9, scope: !5678)
!5684 = !DILocation(line: 1276, column: 33, scope: !5678)
!5685 = !DILocation(line: 1273, column: 16, scope: !5667)
!5686 = !DILocation(line: 1279, column: 16, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 1279, column: 16)
!5688 = !DILocation(line: 1280, column: 9, scope: !5687)
!5689 = !DILocation(line: 1280, column: 12, scope: !5687)
!5690 = !DILocation(line: 1279, column: 16, scope: !5678)
!5691 = !DILocation(line: 1281, column: 9, scope: !5687)
!5692 = !DILocation(line: 1281, column: 37, scope: !5687)
!5693 = !DILocation(line: 1281, column: 35, scope: !5687)
!5694 = !DILocation(line: 1281, column: 2, scope: !5687)
!5695 = !DILocation(line: 1283, column: 16, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 1283, column: 16)
!5697 = !DILocation(line: 1284, column: 9, scope: !5696)
!5698 = !DILocation(line: 1284, column: 13, scope: !5696)
!5699 = !DILocation(line: 1285, column: 9, scope: !5696)
!5700 = !DILocation(line: 1285, column: 6, scope: !5696)
!5701 = !DILocation(line: 1283, column: 16, scope: !5687)
!5702 = !DILocation(line: 1287, column: 16, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 1287, column: 16)
!5704 = !DILocation(line: 1288, column: 9, scope: !5703)
!5705 = !DILocation(line: 1288, column: 13, scope: !5703)
!5706 = !DILocation(line: 1289, column: 9, scope: !5703)
!5707 = !DILocation(line: 1289, column: 6, scope: !5703)
!5708 = !DILocation(line: 1287, column: 16, scope: !5696)
!5709 = !DILocation(line: 1292, column: 14, scope: !5649)
!5710 = !DILocation(line: 1292, column: 36, scope: !5649)
!5711 = !DILocation(line: 1292, column: 34, scope: !5649)
!5712 = !DILocation(line: 1292, column: 7, scope: !5649)
!5713 = !DILocation(line: 1297, column: 19, scope: !5621)
!5714 = !DILocation(line: 1297, column: 10, scope: !5621)
!5715 = !DILocation(line: 1297, column: 3, scope: !5621)
!5716 = !DILocation(line: 1298, column: 1, scope: !5621)
!5717 = distinct !DISubprogram(name: "VEC_access_p_base_index", scope: !3, file: !3, line: 228, type: !5718, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5720)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{!2035, !5608, !7}
!5720 = !{!5721, !5722}
!5721 = !DILocalVariable(name: "vec_", arg: 1, scope: !5717, file: !3, line: 228, type: !5608)
!5722 = !DILocalVariable(name: "ix_", arg: 2, scope: !5717, file: !3, line: 228, type: !7)
!5723 = !DILocation(line: 0, scope: !5717)
!5724 = !DILocation(line: 228, column: 1, scope: !5717)
!5725 = distinct !DISubprogram(name: "relink_to_new_repr", scope: !3, file: !3, line: 502, type: !5726, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5728)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{null, !1986, !1986}
!5728 = !{!5729, !5730}
!5729 = !DILocalVariable(name: "new_racc", arg: 1, scope: !5725, file: !3, line: 502, type: !1986)
!5730 = !DILocalVariable(name: "old_racc", arg: 2, scope: !5725, file: !3, line: 502, type: !1986)
!5731 = !DILocation(line: 0, scope: !5725)
!5732 = !DILocation(line: 504, column: 18, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 504, column: 7)
!5734 = !DILocation(line: 504, column: 8, scope: !5733)
!5735 = !DILocation(line: 504, column: 7, scope: !5725)
!5736 = !DILocation(line: 506, column: 7, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 505, column: 5)
!5738 = !DILocation(line: 510, column: 17, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 510, column: 7)
!5740 = !DILocation(line: 510, column: 7, scope: !5739)
!5741 = !DILocation(line: 0, scope: !5739)
!5742 = !DILocation(line: 510, column: 7, scope: !5725)
!5743 = !DILocation(line: 512, column: 7, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 511, column: 5)
!5745 = !DILocation(line: 513, column: 7, scope: !5744)
!5746 = !DILocation(line: 515, column: 45, scope: !5744)
!5747 = !DILocation(line: 515, column: 17, scope: !5744)
!5748 = !DILocation(line: 515, column: 28, scope: !5744)
!5749 = !DILocation(line: 515, column: 33, scope: !5744)
!5750 = !DILocation(line: 516, column: 39, scope: !5744)
!5751 = !DILocation(line: 516, column: 27, scope: !5744)
!5752 = !DILocation(line: 517, column: 5, scope: !5744)
!5753 = !DILocation(line: 520, column: 7, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 519, column: 5)
!5755 = !DILocation(line: 0, scope: !5754)
!5756 = !DILocation(line: 522, column: 40, scope: !5754)
!5757 = !DILocation(line: 522, column: 28, scope: !5754)
!5758 = !DILocation(line: 523, column: 39, scope: !5754)
!5759 = !DILocation(line: 523, column: 27, scope: !5754)
!5760 = !DILocation(line: 525, column: 36, scope: !5725)
!5761 = !DILocation(line: 525, column: 46, scope: !5725)
!5762 = !DILocation(line: 525, column: 24, scope: !5725)
!5763 = !DILocation(line: 526, column: 1, scope: !5725)
!5764 = distinct !DISubprogram(name: "add_access_to_work_queue", scope: !3, file: !3, line: 531, type: !5487, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5765)
!5765 = !{!5766}
!5766 = !DILocalVariable(name: "access", arg: 1, scope: !5764, file: !3, line: 531, type: !1986)
!5767 = !DILocation(line: 0, scope: !5764)
!5768 = !DILocation(line: 533, column: 16, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 533, column: 7)
!5770 = !DILocation(line: 533, column: 8, scope: !5769)
!5771 = !DILocation(line: 533, column: 7, scope: !5764)
!5772 = !DILocation(line: 535, column: 7, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 534, column: 5)
!5774 = !DILocation(line: 537, column: 26, scope: !5773)
!5775 = !DILocation(line: 536, column: 29, scope: !5773)
!5776 = !DILocation(line: 536, column: 27, scope: !5773)
!5777 = !DILocation(line: 538, column: 23, scope: !5773)
!5778 = !DILocation(line: 539, column: 5, scope: !5773)
!5779 = !DILocation(line: 540, column: 1, scope: !5764)
!5780 = distinct !DISubprogram(name: "build_access_subtree", scope: !3, file: !3, line: 1721, type: !5781, scopeLine: 1722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{null, !5363}
!5783 = !{!5784, !5785, !5786, !5787}
!5784 = !DILocalVariable(name: "access", arg: 1, scope: !5780, file: !3, line: 1721, type: !5363)
!5785 = !DILocalVariable(name: "root", scope: !5780, file: !3, line: 1723, type: !1986)
!5786 = !DILocalVariable(name: "last_child", scope: !5780, file: !3, line: 1723, type: !1986)
!5787 = !DILocalVariable(name: "limit", scope: !5780, file: !3, line: 1724, type: !745)
!5788 = !DILocation(line: 0, scope: !5780)
!5789 = !DILocation(line: 1723, column: 25, scope: !5780)
!5790 = !DILocation(line: 1724, column: 31, scope: !5780)
!5791 = !DILocation(line: 1724, column: 46, scope: !5780)
!5792 = !DILocation(line: 1724, column: 38, scope: !5780)
!5793 = !DILocation(line: 1726, column: 24, scope: !5780)
!5794 = !DILocation(line: 1726, column: 11, scope: !5780)
!5795 = !DILocation(line: 0, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1729, column: 11)
!5797 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 1728, column: 5)
!5798 = !DILocation(line: 1727, column: 3, scope: !5780)
!5799 = !DILocation(line: 1727, column: 11, scope: !5780)
!5800 = !DILocation(line: 1727, column: 19, scope: !5780)
!5801 = !DILocation(line: 1727, column: 33, scope: !5780)
!5802 = !DILocation(line: 1727, column: 53, scope: !5780)
!5803 = !DILocation(line: 1727, column: 40, scope: !5780)
!5804 = !DILocation(line: 1727, column: 58, scope: !5780)
!5805 = !DILocation(line: 1729, column: 12, scope: !5796)
!5806 = !DILocation(line: 1729, column: 11, scope: !5797)
!5807 = !DILocation(line: 1730, column: 20, scope: !5796)
!5808 = !DILocation(line: 1730, column: 2, scope: !5796)
!5809 = !DILocation(line: 1732, column: 14, scope: !5796)
!5810 = !DILocation(line: 1732, column: 27, scope: !5796)
!5811 = !DILocation(line: 1733, column: 20, scope: !5797)
!5812 = !DILocation(line: 1735, column: 7, scope: !5797)
!5813 = distinct !{!5813, !5798, !5814}
!5814 = !DILocation(line: 1736, column: 5, scope: !5780)
!5815 = !DILocation(line: 1737, column: 1, scope: !5780)
!5816 = distinct !DISubprogram(name: "pop_access_from_work_queue", scope: !3, file: !3, line: 545, type: !5817, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5819)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{!1986}
!5819 = !{!5820}
!5820 = !DILocalVariable(name: "access", scope: !5816, file: !3, line: 547, type: !1986)
!5821 = !DILocation(line: 547, column: 27, scope: !5816)
!5822 = !DILocation(line: 0, scope: !5816)
!5823 = !DILocation(line: 549, column: 29, scope: !5816)
!5824 = !DILocation(line: 549, column: 19, scope: !5816)
!5825 = !DILocation(line: 550, column: 23, scope: !5816)
!5826 = !DILocation(line: 551, column: 11, scope: !5816)
!5827 = !DILocation(line: 551, column: 22, scope: !5816)
!5828 = !DILocation(line: 552, column: 3, scope: !5816)
!5829 = distinct !DISubprogram(name: "propagate_subaccesses_across_link", scope: !3, file: !3, line: 1944, type: !5830, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5832)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!679, !1986, !1986}
!5832 = !{!5833, !5834, !5835, !5836, !5837, !5838, !5841, !5845}
!5833 = !DILocalVariable(name: "lacc", arg: 1, scope: !5829, file: !3, line: 1944, type: !1986)
!5834 = !DILocalVariable(name: "racc", arg: 2, scope: !5829, file: !3, line: 1944, type: !1986)
!5835 = !DILocalVariable(name: "rchild", scope: !5829, file: !3, line: 1946, type: !1986)
!5836 = !DILocalVariable(name: "norm_delta", scope: !5829, file: !3, line: 1947, type: !745)
!5837 = !DILocalVariable(name: "ret", scope: !5829, file: !3, line: 1948, type: !679)
!5838 = !DILocalVariable(name: "t", scope: !5839, file: !3, line: 1958, type: !689)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1957, column: 5)
!5840 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1955, column: 7)
!5841 = !DILocalVariable(name: "new_acc", scope: !5842, file: !3, line: 1971, type: !1986)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 1970, column: 5)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1969, column: 3)
!5844 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1969, column: 3)
!5845 = !DILocalVariable(name: "norm_offset", scope: !5842, file: !3, line: 1972, type: !745)
!5846 = !DILocation(line: 0, scope: !5829)
!5847 = !DILocation(line: 1947, column: 36, scope: !5829)
!5848 = !DILocation(line: 1947, column: 51, scope: !5829)
!5849 = !DILocation(line: 1947, column: 43, scope: !5829)
!5850 = !DILocation(line: 1950, column: 33, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1950, column: 7)
!5852 = !DILocation(line: 1950, column: 7, scope: !5851)
!5853 = !DILocation(line: 1951, column: 7, scope: !5851)
!5854 = !DILocation(line: 1951, column: 16, scope: !5851)
!5855 = !DILocation(line: 1951, column: 10, scope: !5851)
!5856 = !DILocation(line: 1952, column: 7, scope: !5851)
!5857 = !DILocation(line: 1952, column: 16, scope: !5851)
!5858 = !DILocation(line: 1952, column: 10, scope: !5851)
!5859 = !DILocation(line: 1950, column: 7, scope: !5829)
!5860 = !DILocation(line: 1955, column: 14, scope: !5840)
!5861 = !DILocation(line: 1955, column: 8, scope: !5840)
!5862 = !DILocation(line: 1955, column: 26, scope: !5840)
!5863 = !DILocation(line: 1955, column: 36, scope: !5840)
!5864 = !DILocation(line: 1955, column: 30, scope: !5840)
!5865 = !DILocation(line: 1956, column: 7, scope: !5840)
!5866 = !DILocation(line: 1956, column: 36, scope: !5840)
!5867 = !DILocation(line: 1956, column: 10, scope: !5840)
!5868 = !DILocation(line: 1955, column: 7, scope: !5829)
!5869 = !DILocation(line: 1958, column: 7, scope: !5839)
!5870 = !DILocation(line: 1958, column: 22, scope: !5839)
!5871 = !DILocation(line: 1958, column: 12, scope: !5839)
!5872 = !DILocation(line: 1960, column: 37, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 1960, column: 11)
!5874 = !DILocation(line: 1960, column: 58, scope: !5873)
!5875 = !DILocation(line: 1960, column: 72, scope: !5873)
!5876 = !DILocation(line: 0, scope: !5839)
!5877 = !DILocation(line: 1960, column: 11, scope: !5873)
!5878 = !DILocation(line: 1960, column: 11, scope: !5839)
!5879 = !DILocation(line: 1963, column: 17, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 1962, column: 2)
!5881 = !DILocation(line: 1963, column: 10, scope: !5880)
!5882 = !DILocation(line: 1963, column: 15, scope: !5880)
!5883 = !DILocation(line: 1964, column: 23, scope: !5880)
!5884 = !DILocation(line: 1964, column: 15, scope: !5880)
!5885 = !DILocation(line: 1965, column: 2, scope: !5880)
!5886 = !DILocation(line: 1967, column: 5, scope: !5840)
!5887 = !DILocation(line: 1969, column: 23, scope: !5844)
!5888 = !DILocation(line: 0, scope: !5842)
!5889 = !DILocation(line: 0, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1993, column: 11)
!5891 = !DILocation(line: 1969, column: 8, scope: !5844)
!5892 = !DILocation(line: 1948, column: 8, scope: !5829)
!5893 = !DILocation(line: 0, scope: !5844)
!5894 = !DILocation(line: 1969, column: 3, scope: !5844)
!5895 = !DILocation(line: 1971, column: 7, scope: !5842)
!5896 = !DILocation(line: 1971, column: 22, scope: !5842)
!5897 = !DILocation(line: 1972, column: 43, scope: !5842)
!5898 = !DILocation(line: 1972, column: 50, scope: !5842)
!5899 = !DILocation(line: 1974, column: 19, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1974, column: 11)
!5901 = !DILocation(line: 1974, column: 11, scope: !5900)
!5902 = !DILocation(line: 1974, column: 11, scope: !5842)
!5903 = !DILocation(line: 1977, column: 68, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1977, column: 11)
!5905 = !DILocation(line: 1977, column: 11, scope: !5904)
!5906 = !DILocation(line: 1977, column: 11, scope: !5842)
!5907 = !DILocation(line: 1980, column: 8, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 1980, column: 8)
!5909 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1979, column: 2)
!5910 = !DILocation(line: 1980, column: 8, scope: !5909)
!5911 = !DILocation(line: 1982, column: 25, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 1981, column: 6)
!5913 = !DILocation(line: 1983, column: 38, scope: !5912)
!5914 = !DILocation(line: 1983, column: 26, scope: !5912)
!5915 = !DILocation(line: 1984, column: 20, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1984, column: 12)
!5917 = !DILocation(line: 1984, column: 12, scope: !5916)
!5918 = !DILocation(line: 1984, column: 12, scope: !5912)
!5919 = !DILocation(line: 1985, column: 10, scope: !5916)
!5920 = !DILocation(line: 1985, column: 7, scope: !5916)
!5921 = !DILocation(line: 1985, column: 3, scope: !5916)
!5922 = !DILocation(line: 1993, column: 40, scope: !5890)
!5923 = !DILocation(line: 1994, column: 14, scope: !5890)
!5924 = !DILocation(line: 1993, column: 12, scope: !5890)
!5925 = !DILocation(line: 1993, column: 11, scope: !5842)
!5926 = !DILocation(line: 1997, column: 24, scope: !5842)
!5927 = !DILocation(line: 1998, column: 17, scope: !5842)
!5928 = !DILocation(line: 1998, column: 15, scope: !5842)
!5929 = !DILocation(line: 1999, column: 11, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1999, column: 11)
!5931 = !DILocation(line: 1999, column: 11, scope: !5842)
!5932 = !DILocation(line: 2002, column: 14, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2002, column: 8)
!5934 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 2000, column: 2)
!5935 = !DILocation(line: 2002, column: 8, scope: !5933)
!5936 = !DILocation(line: 2002, column: 8, scope: !5934)
!5937 = !DILocation(line: 2003, column: 6, scope: !5933)
!5938 = !DILocation(line: 2005, column: 5, scope: !5843)
!5939 = !DILocation(line: 1969, column: 61, scope: !5843)
!5940 = !DILocation(line: 1969, column: 3, scope: !5843)
!5941 = distinct !{!5941, !5894, !5942}
!5942 = !DILocation(line: 2005, column: 5, scope: !5844)
!5943 = !DILocation(line: 2008, column: 1, scope: !5829)
!5944 = distinct !DISubprogram(name: "child_would_conflict_in_lacc", scope: !3, file: !3, line: 1877, type: !5945, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5947)
!5945 = !DISubroutineType(types: !5946)
!5946 = !{!679, !1986, !745, !745, !5363}
!5947 = !{!5948, !5949, !5950, !5951, !5952}
!5948 = !DILocalVariable(name: "lacc", arg: 1, scope: !5944, file: !3, line: 1877, type: !1986)
!5949 = !DILocalVariable(name: "norm_offset", arg: 2, scope: !5944, file: !3, line: 1877, type: !745)
!5950 = !DILocalVariable(name: "size", arg: 3, scope: !5944, file: !3, line: 1878, type: !745)
!5951 = !DILocalVariable(name: "exact_match", arg: 4, scope: !5944, file: !3, line: 1878, type: !5363)
!5952 = !DILocalVariable(name: "child", scope: !5944, file: !3, line: 1880, type: !1986)
!5953 = !DILocation(line: 0, scope: !5944)
!5954 = !DILocation(line: 1882, column: 22, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 1882, column: 3)
!5956 = !DILocation(line: 0, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 1890, column: 11)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 1883, column: 5)
!5959 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 1882, column: 3)
!5960 = !DILocation(line: 1882, column: 8, scope: !5955)
!5961 = !DILocation(line: 0, scope: !5955)
!5962 = !DILocation(line: 1882, column: 3, scope: !5955)
!5963 = !DILocation(line: 1884, column: 18, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 1884, column: 11)
!5965 = !DILocation(line: 1884, column: 25, scope: !5964)
!5966 = !DILocation(line: 1884, column: 40, scope: !5964)
!5967 = !DILocation(line: 1884, column: 50, scope: !5964)
!5968 = !DILocation(line: 1884, column: 55, scope: !5964)
!5969 = !DILocation(line: 1884, column: 11, scope: !5958)
!5970 = !DILocation(line: 1886, column: 17, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1885, column: 2)
!5972 = !DILocation(line: 1887, column: 4, scope: !5971)
!5973 = !DILocation(line: 1890, column: 25, scope: !5957)
!5974 = !DILocation(line: 1891, column: 4, scope: !5957)
!5975 = !DILocation(line: 1891, column: 30, scope: !5957)
!5976 = !DILocation(line: 1891, column: 21, scope: !5957)
!5977 = !DILocation(line: 1891, column: 35, scope: !5957)
!5978 = !DILocation(line: 1890, column: 11, scope: !5958)
!5979 = !DILocation(line: 1882, column: 57, scope: !5959)
!5980 = !DILocation(line: 1882, column: 3, scope: !5959)
!5981 = distinct !{!5981, !5962, !5982}
!5982 = !DILocation(line: 1893, column: 5, scope: !5955)
!5983 = !DILocation(line: 1896, column: 1, scope: !5944)
!5984 = distinct !DISubprogram(name: "create_artificial_child_access", scope: !3, file: !3, line: 1905, type: !5985, scopeLine: 1907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5987)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!1986, !1986, !1986, !745}
!5987 = !{!5988, !5989, !5990, !5991, !5992, !5993}
!5988 = !DILocalVariable(name: "parent", arg: 1, scope: !5984, file: !3, line: 1905, type: !1986)
!5989 = !DILocalVariable(name: "model", arg: 2, scope: !5984, file: !3, line: 1905, type: !1986)
!5990 = !DILocalVariable(name: "new_offset", arg: 3, scope: !5984, file: !3, line: 1906, type: !745)
!5991 = !DILocalVariable(name: "access", scope: !5984, file: !3, line: 1908, type: !1986)
!5992 = !DILocalVariable(name: "child", scope: !5984, file: !3, line: 1909, type: !5363)
!5993 = !DILocalVariable(name: "expr", scope: !5984, file: !3, line: 1910, type: !689)
!5994 = !DILocation(line: 0, scope: !5984)
!5995 = !DILocation(line: 1910, column: 3, scope: !5984)
!5996 = !DILocation(line: 1910, column: 23, scope: !5984)
!5997 = !DILocation(line: 1910, column: 8, scope: !5984)
!5998 = !DILocation(line: 1912, column: 3, scope: !5984)
!5999 = !DILocation(line: 1914, column: 37, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5984, file: !3, line: 1914, column: 7)
!6001 = !DILocation(line: 1915, column: 16, scope: !6000)
!6002 = !DILocation(line: 1914, column: 8, scope: !6000)
!6003 = !DILocation(line: 1914, column: 7, scope: !5984)
!6004 = !DILocation(line: 1918, column: 42, scope: !5984)
!6005 = !DILocation(line: 1918, column: 30, scope: !5984)
!6006 = !DILocation(line: 1919, column: 3, scope: !5984)
!6007 = !DILocation(line: 1920, column: 26, scope: !5984)
!6008 = !DILocation(line: 1920, column: 11, scope: !5984)
!6009 = !DILocation(line: 1920, column: 16, scope: !5984)
!6010 = !DILocation(line: 1921, column: 18, scope: !5984)
!6011 = !DILocation(line: 1921, column: 11, scope: !5984)
!6012 = !DILocation(line: 1921, column: 16, scope: !5984)
!6013 = !DILocation(line: 1922, column: 11, scope: !5984)
!6014 = !DILocation(line: 1922, column: 18, scope: !5984)
!6015 = !DILocation(line: 1923, column: 25, scope: !5984)
!6016 = !DILocation(line: 1923, column: 11, scope: !5984)
!6017 = !DILocation(line: 1923, column: 16, scope: !5984)
!6018 = !DILocation(line: 1924, column: 25, scope: !5984)
!6019 = !DILocation(line: 1924, column: 11, scope: !5984)
!6020 = !DILocation(line: 1924, column: 16, scope: !5984)
!6021 = !DILocation(line: 1925, column: 11, scope: !5984)
!6022 = !DILocation(line: 1925, column: 21, scope: !5984)
!6023 = !DILocation(line: 1926, column: 20, scope: !5984)
!6024 = !DILocation(line: 1928, column: 20, scope: !5984)
!6025 = !DILocation(line: 1929, column: 3, scope: !5984)
!6026 = !DILocation(line: 1929, column: 10, scope: !5984)
!6027 = !DILocation(line: 1929, column: 17, scope: !5984)
!6028 = !DILocation(line: 1929, column: 30, scope: !5984)
!6029 = !DILocation(line: 1929, column: 37, scope: !5984)
!6030 = !DILocation(line: 1930, column: 24, scope: !5984)
!6031 = distinct !{!6031, !6025, !6030}
!6032 = !DILocation(line: 1918, column: 12, scope: !5984)
!6033 = !DILocation(line: 1932, column: 11, scope: !5984)
!6034 = !DILocation(line: 1932, column: 24, scope: !5984)
!6035 = !DILocation(line: 1933, column: 10, scope: !5984)
!6036 = !DILocation(line: 1935, column: 3, scope: !5984)
!6037 = !DILocation(line: 1936, column: 1, scope: !5984)
!6038 = distinct !DISubprogram(name: "analyze_access_subtree", scope: !3, file: !3, line: 1777, type: !6039, scopeLine: 1779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6041)
!6039 = !DISubroutineType(types: !6040)
!6040 = !{!679, !1986, !679, !679, !679}
!6041 = !{!6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050, !6051, !6052}
!6042 = !DILocalVariable(name: "root", arg: 1, scope: !6038, file: !3, line: 1777, type: !1986)
!6043 = !DILocalVariable(name: "allow_replacements", arg: 2, scope: !6038, file: !3, line: 1777, type: !679)
!6044 = !DILocalVariable(name: "mark_read", arg: 3, scope: !6038, file: !3, line: 1778, type: !679)
!6045 = !DILocalVariable(name: "mark_write", arg: 4, scope: !6038, file: !3, line: 1778, type: !679)
!6046 = !DILocalVariable(name: "child", scope: !6038, file: !3, line: 1780, type: !1986)
!6047 = !DILocalVariable(name: "limit", scope: !6038, file: !3, line: 1781, type: !745)
!6048 = !DILocalVariable(name: "covered_to", scope: !6038, file: !3, line: 1782, type: !745)
!6049 = !DILocalVariable(name: "scalar", scope: !6038, file: !3, line: 1783, type: !679)
!6050 = !DILocalVariable(name: "hole", scope: !6038, file: !3, line: 1784, type: !679)
!6051 = !DILocalVariable(name: "sth_created", scope: !6038, file: !3, line: 1784, type: !679)
!6052 = !DILocalVariable(name: "direct_read", scope: !6038, file: !3, line: 1785, type: !679)
!6053 = !DILocation(line: 0, scope: !6038)
!6054 = !DILocation(line: 1781, column: 31, scope: !6038)
!6055 = !DILocation(line: 1781, column: 46, scope: !6038)
!6056 = !DILocation(line: 1781, column: 38, scope: !6038)
!6057 = !DILocation(line: 1783, column: 43, scope: !6038)
!6058 = !DILocation(line: 1783, column: 17, scope: !6038)
!6059 = !DILocation(line: 1785, column: 28, scope: !6038)
!6060 = !DILocation(line: 1785, column: 22, scope: !6038)
!6061 = !DILocation(line: 1787, column: 7, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1787, column: 7)
!6063 = !DILocation(line: 1787, column: 7, scope: !6038)
!6064 = !DILocation(line: 1788, column: 20, scope: !6062)
!6065 = !DILocation(line: 1788, column: 5, scope: !6062)
!6066 = !DILocation(line: 1789, column: 12, scope: !6062)
!6067 = !DILocation(line: 0, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1792, column: 7)
!6069 = !DILocation(line: 1792, column: 7, scope: !6068)
!6070 = !DILocation(line: 1792, column: 7, scope: !6038)
!6071 = !DILocation(line: 1793, column: 21, scope: !6068)
!6072 = !DILocation(line: 1793, column: 5, scope: !6068)
!6073 = !DILocation(line: 1794, column: 12, scope: !6068)
!6074 = !DILocation(line: 1797, column: 13, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1797, column: 7)
!6076 = !DILocation(line: 1797, column: 7, scope: !6075)
!6077 = !DILocation(line: 1800, column: 7, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1800, column: 7)
!6079 = !DILocation(line: 1800, column: 26, scope: !6078)
!6080 = !DILocation(line: 1800, column: 71, scope: !6078)
!6081 = !DILocation(line: 1800, column: 29, scope: !6078)
!6082 = !DILocation(line: 1800, column: 7, scope: !6038)
!6083 = !DILocation(line: 1803, column: 22, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1803, column: 3)
!6085 = !DILocation(line: 1803, column: 8, scope: !6084)
!6086 = !DILocation(line: 0, scope: !6084)
!6087 = !DILocation(line: 1803, column: 3, scope: !6084)
!6088 = !DILocation(line: 1805, column: 12, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 1805, column: 11)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 1804, column: 5)
!6091 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 1803, column: 3)
!6092 = !DILocation(line: 1805, column: 17, scope: !6089)
!6093 = !DILocation(line: 1805, column: 27, scope: !6089)
!6094 = !DILocation(line: 1805, column: 34, scope: !6089)
!6095 = !DILocation(line: 1805, column: 11, scope: !6090)
!6096 = !DILocation(line: 1808, column: 23, scope: !6089)
!6097 = !DILocation(line: 1808, column: 13, scope: !6089)
!6098 = !DILocation(line: 1810, column: 22, scope: !6090)
!6099 = !DILocation(line: 1810, column: 19, scope: !6090)
!6100 = !DILocation(line: 1813, column: 45, scope: !6090)
!6101 = !DILocation(line: 1813, column: 35, scope: !6090)
!6102 = !DILocation(line: 1814, column: 23, scope: !6090)
!6103 = !DILocation(line: 1814, column: 15, scope: !6090)
!6104 = !DILocation(line: 1814, column: 12, scope: !6090)
!6105 = !DILocation(line: 1803, column: 57, scope: !6091)
!6106 = !DILocation(line: 1803, column: 3, scope: !6091)
!6107 = distinct !{!6107, !6087, !6108}
!6108 = !DILocation(line: 1815, column: 5, scope: !6084)
!6109 = !DILocation(line: 1817, column: 7, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1817, column: 7)
!6111 = !DILocation(line: 1817, column: 29, scope: !6110)
!6112 = !DILocation(line: 1817, column: 26, scope: !6110)
!6113 = !DILocation(line: 1817, column: 46, scope: !6110)
!6114 = !DILocation(line: 1817, column: 40, scope: !6110)
!6115 = !DILocation(line: 1818, column: 7, scope: !6110)
!6116 = !DILocation(line: 1818, column: 17, scope: !6110)
!6117 = !DILocation(line: 1818, column: 11, scope: !6110)
!6118 = !DILocation(line: 1819, column: 4, scope: !6110)
!6119 = !DILocation(line: 1819, column: 8, scope: !6110)
!6120 = !DILocation(line: 1819, column: 20, scope: !6110)
!6121 = !DILocation(line: 1819, column: 29, scope: !6110)
!6122 = !DILocation(line: 1819, column: 23, scope: !6110)
!6123 = !DILocation(line: 1824, column: 7, scope: !6110)
!6124 = !DILocation(line: 1824, column: 38, scope: !6110)
!6125 = !DILocation(line: 1824, column: 68, scope: !6110)
!6126 = !DILocation(line: 1825, column: 17, scope: !6110)
!6127 = !DILocation(line: 1824, column: 10, scope: !6110)
!6128 = !DILocation(line: 1817, column: 7, scope: !6038)
!6129 = !DILocation(line: 1827, column: 11, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1827, column: 11)
!6131 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1826, column: 5)
!6132 = !DILocation(line: 1827, column: 21, scope: !6130)
!6133 = !DILocation(line: 1827, column: 25, scope: !6130)
!6134 = !DILocation(line: 1827, column: 36, scope: !6130)
!6135 = !DILocation(line: 1827, column: 11, scope: !6131)
!6136 = !DILocation(line: 1829, column: 4, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 1828, column: 2)
!6138 = !DILocation(line: 1830, column: 24, scope: !6137)
!6139 = !DILocation(line: 1830, column: 41, scope: !6137)
!6140 = !DILocation(line: 1830, column: 4, scope: !6137)
!6141 = !DILocation(line: 1831, column: 13, scope: !6137)
!6142 = !DILocation(line: 1832, column: 23, scope: !6137)
!6143 = !DILocation(line: 1832, column: 6, scope: !6137)
!6144 = !DILocation(line: 1832, column: 48, scope: !6137)
!6145 = !DILocation(line: 1832, column: 31, scope: !6137)
!6146 = !DILocation(line: 1831, column: 4, scope: !6137)
!6147 = !DILocation(line: 1833, column: 13, scope: !6137)
!6148 = !DILocation(line: 1833, column: 4, scope: !6137)
!6149 = !DILocation(line: 1834, column: 2, scope: !6137)
!6150 = !DILocation(line: 1836, column: 32, scope: !6131)
!6151 = !DILocation(line: 1839, column: 5, scope: !6131)
!6152 = !DILocation(line: 1840, column: 23, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1840, column: 12)
!6154 = !DILocation(line: 1843, column: 7, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1843, column: 7)
!6156 = !DILocation(line: 1843, column: 19, scope: !6155)
!6157 = !DILocation(line: 1845, column: 25, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 1844, column: 5)
!6159 = !DILocation(line: 1846, column: 7, scope: !6158)
!6160 = !DILocation(line: 1848, column: 13, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1848, column: 7)
!6162 = !DILocation(line: 1848, column: 7, scope: !6161)
!6163 = !DILocation(line: 1848, column: 23, scope: !6161)
!6164 = !DILocation(line: 1848, column: 26, scope: !6161)
!6165 = !DILocation(line: 1848, column: 49, scope: !6161)
!6166 = !DILocation(line: 1848, column: 7, scope: !6038)
!6167 = !DILocation(line: 1849, column: 33, scope: !6161)
!6168 = !DILocation(line: 1849, column: 5, scope: !6161)
!6169 = !DILocation(line: 1850, column: 7, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1850, column: 7)
!6171 = !DILocation(line: 1853, column: 1, scope: !6038)
!6172 = distinct !DISubprogram(name: "expr_with_var_bounded_array_refs_p", scope: !3, file: !3, line: 1759, type: !4225, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6173)
!6173 = !{!6174}
!6174 = !DILocalVariable(name: "expr", arg: 1, scope: !6172, file: !3, line: 1759, type: !689)
!6175 = !DILocation(line: 0, scope: !6172)
!6176 = !DILocation(line: 1761, column: 3, scope: !6172)
!6177 = !DILocation(line: 1761, column: 10, scope: !6172)
!6178 = !DILocation(line: 1763, column: 11, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 1763, column: 11)
!6180 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1762, column: 5)
!6181 = !DILocation(line: 1763, column: 28, scope: !6179)
!6182 = !DILocation(line: 1764, column: 4, scope: !6179)
!6183 = !DILocation(line: 1764, column: 23, scope: !6179)
!6184 = !DILocation(line: 1764, column: 8, scope: !6179)
!6185 = !DILocation(line: 1763, column: 11, scope: !6180)
!6186 = !DILocation(line: 1766, column: 14, scope: !6180)
!6187 = distinct !{!6187, !6176, !6188}
!6188 = !DILocation(line: 1767, column: 5, scope: !6172)
!6189 = !DILocation(line: 1769, column: 1, scope: !6172)
!6190 = distinct !DISubprogram(name: "dump_access_tree_1", scope: !3, file: !3, line: 377, type: !6191, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6193)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{null, !2211, !1986, !680}
!6193 = !{!6194, !6195, !6196, !6197}
!6194 = !DILocalVariable(name: "f", arg: 1, scope: !6190, file: !3, line: 377, type: !2211)
!6195 = !DILocalVariable(name: "access", arg: 2, scope: !6190, file: !3, line: 377, type: !1986)
!6196 = !DILocalVariable(name: "level", arg: 3, scope: !6190, file: !3, line: 377, type: !680)
!6197 = !DILocalVariable(name: "i", scope: !6198, file: !3, line: 381, type: !680)
!6198 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 380, column: 5)
!6199 = !DILocation(line: 0, scope: !6190)
!6200 = !DILocation(line: 0, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 388, column: 11)
!6202 = !DILocation(line: 379, column: 3, scope: !6190)
!6203 = !DILocation(line: 0, scope: !6198)
!6204 = !DILocation(line: 383, column: 12, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 383, column: 7)
!6206 = !DILocation(line: 0, scope: !6205)
!6207 = !DILocation(line: 383, column: 21, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 383, column: 7)
!6209 = !DILocation(line: 383, column: 7, scope: !6205)
!6210 = !DILocation(line: 384, column: 15, scope: !6208)
!6211 = !DILocation(line: 384, column: 2, scope: !6208)
!6212 = !DILocation(line: 383, column: 31, scope: !6208)
!6213 = !DILocation(line: 383, column: 7, scope: !6208)
!6214 = distinct !{!6214, !6209, !6215}
!6215 = !DILocation(line: 384, column: 24, scope: !6205)
!6216 = !DILocation(line: 386, column: 7, scope: !6198)
!6217 = !DILocation(line: 388, column: 19, scope: !6201)
!6218 = !DILocation(line: 388, column: 11, scope: !6201)
!6219 = !DILocation(line: 388, column: 11, scope: !6198)
!6220 = !DILocation(line: 389, column: 2, scope: !6201)
!6221 = !DILocation(line: 391, column: 24, scope: !6198)
!6222 = !DILocation(line: 392, column: 5, scope: !6198)
!6223 = distinct !{!6223, !6202, !6224}
!6224 = !DILocation(line: 393, column: 16, scope: !6190)
!6225 = !DILocation(line: 394, column: 1, scope: !6190)
!6226 = distinct !DISubprogram(name: "dump_access", scope: !3, file: !3, line: 343, type: !6227, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6229)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{null, !2211, !1986, !679}
!6229 = !{!6230, !6231, !6232}
!6230 = !DILocalVariable(name: "f", arg: 1, scope: !6226, file: !3, line: 343, type: !2211)
!6231 = !DILocalVariable(name: "access", arg: 2, scope: !6226, file: !3, line: 343, type: !1986)
!6232 = !DILocalVariable(name: "grp", arg: 3, scope: !6226, file: !3, line: 343, type: !679)
!6233 = !DILocation(line: 0, scope: !6226)
!6234 = !DILocation(line: 345, column: 3, scope: !6226)
!6235 = !DILocation(line: 346, column: 31, scope: !6226)
!6236 = !DILocation(line: 346, column: 3, scope: !6226)
!6237 = !DILocation(line: 347, column: 34, scope: !6226)
!6238 = !DILocation(line: 347, column: 3, scope: !6226)
!6239 = !DILocation(line: 348, column: 63, scope: !6226)
!6240 = !DILocation(line: 348, column: 3, scope: !6226)
!6241 = !DILocation(line: 349, column: 60, scope: !6226)
!6242 = !DILocation(line: 349, column: 3, scope: !6226)
!6243 = !DILocation(line: 350, column: 3, scope: !6226)
!6244 = !DILocation(line: 351, column: 34, scope: !6226)
!6245 = !DILocation(line: 351, column: 3, scope: !6226)
!6246 = !DILocation(line: 352, column: 3, scope: !6226)
!6247 = !DILocation(line: 353, column: 34, scope: !6226)
!6248 = !DILocation(line: 353, column: 3, scope: !6226)
!6249 = !DILocation(line: 0, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 354, column: 7)
!6251 = !DILocation(line: 361, column: 15, scope: !6250)
!6252 = !DILocation(line: 361, column: 34, scope: !6250)
!6253 = !DILocation(line: 362, column: 15, scope: !6250)
!6254 = !DILocation(line: 362, column: 33, scope: !6250)
!6255 = !DILocation(line: 363, column: 15, scope: !6250)
!6256 = !DILocation(line: 363, column: 36, scope: !6250)
!6257 = !DILocation(line: 364, column: 15, scope: !6250)
!6258 = !DILocation(line: 364, column: 46, scope: !6250)
!6259 = !DILocation(line: 365, column: 15, scope: !6250)
!6260 = !DILocation(line: 365, column: 43, scope: !6250)
!6261 = !DILocation(line: 366, column: 15, scope: !6250)
!6262 = !DILocation(line: 355, column: 5, scope: !6250)
!6263 = !DILocation(line: 372, column: 1, scope: !6226)
!6264 = distinct !DISubprogram(name: "get_access_for_expr", scope: !3, file: !3, line: 2264, type: !5354, scopeLine: 2265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6265)
!6265 = !{!6266, !6267, !6268, !6269, !6270}
!6266 = !DILocalVariable(name: "expr", arg: 1, scope: !6264, file: !3, line: 2264, type: !689)
!6267 = !DILocalVariable(name: "offset", scope: !6264, file: !3, line: 2266, type: !745)
!6268 = !DILocalVariable(name: "size", scope: !6264, file: !3, line: 2266, type: !745)
!6269 = !DILocalVariable(name: "max_size", scope: !6264, file: !3, line: 2266, type: !745)
!6270 = !DILocalVariable(name: "base", scope: !6264, file: !3, line: 2267, type: !689)
!6271 = !DILocation(line: 0, scope: !6264)
!6272 = !DILocation(line: 2266, column: 3, scope: !6264)
!6273 = !DILocation(line: 2272, column: 7, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 2272, column: 7)
!6275 = !DILocation(line: 2272, column: 24, scope: !6274)
!6276 = !DILocation(line: 2272, column: 7, scope: !6264)
!6277 = !DILocation(line: 2273, column: 12, scope: !6274)
!6278 = !DILocation(line: 2273, column: 5, scope: !6274)
!6279 = !DILocation(line: 2275, column: 10, scope: !6264)
!6280 = !DILocation(line: 2276, column: 7, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 2276, column: 7)
!6282 = !DILocation(line: 2276, column: 16, scope: !6281)
!6283 = !DILocation(line: 2276, column: 22, scope: !6281)
!6284 = !DILocation(line: 2276, column: 26, scope: !6281)
!6285 = !DILocation(line: 2276, column: 7, scope: !6264)
!6286 = !DILocation(line: 2279, column: 22, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 2279, column: 7)
!6288 = !DILocation(line: 2279, column: 40, scope: !6287)
!6289 = !DILocation(line: 2279, column: 8, scope: !6287)
!6290 = !DILocation(line: 2279, column: 7, scope: !6264)
!6291 = !DILocation(line: 2282, column: 49, scope: !6264)
!6292 = !DILocation(line: 2282, column: 57, scope: !6264)
!6293 = !DILocation(line: 2282, column: 10, scope: !6264)
!6294 = !DILocation(line: 2282, column: 3, scope: !6264)
!6295 = !DILocation(line: 2283, column: 1, scope: !6264)
!6296 = distinct !DISubprogram(name: "get_access_replacement", scope: !3, file: !3, line: 1707, type: !6297, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6299)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{!689, !1986}
!6299 = !{!6300}
!6300 = !DILocalVariable(name: "access", arg: 1, scope: !6296, file: !3, line: 1707, type: !1986)
!6301 = !DILocation(line: 0, scope: !6296)
!6302 = !DILocation(line: 1709, column: 3, scope: !6296)
!6303 = !DILocation(line: 1711, column: 16, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 1711, column: 7)
!6305 = !DILocation(line: 1711, column: 8, scope: !6304)
!6306 = !DILocation(line: 1711, column: 7, scope: !6296)
!6307 = !DILocation(line: 1712, column: 32, scope: !6304)
!6308 = !DILocation(line: 1712, column: 30, scope: !6304)
!6309 = !DILocation(line: 1712, column: 5, scope: !6304)
!6310 = !DILocation(line: 1713, column: 18, scope: !6296)
!6311 = !DILocation(line: 1713, column: 3, scope: !6296)
!6312 = distinct !DISubprogram(name: "generate_subtree_copies", scope: !3, file: !3, line: 2166, type: !6313, scopeLine: 2171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6315)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{null, !1986, !689, !745, !745, !745, !3228, !679, !679}
!6315 = !{!6316, !6317, !6318, !6319, !6320, !6321, !6322, !6323, !6324, !6326, !6329, !6330}
!6316 = !DILocalVariable(name: "access", arg: 1, scope: !6312, file: !3, line: 2166, type: !1986)
!6317 = !DILocalVariable(name: "agg", arg: 2, scope: !6312, file: !3, line: 2166, type: !689)
!6318 = !DILocalVariable(name: "top_offset", arg: 3, scope: !6312, file: !3, line: 2167, type: !745)
!6319 = !DILocalVariable(name: "start_offset", arg: 4, scope: !6312, file: !3, line: 2168, type: !745)
!6320 = !DILocalVariable(name: "chunk_size", arg: 5, scope: !6312, file: !3, line: 2168, type: !745)
!6321 = !DILocalVariable(name: "gsi", arg: 6, scope: !6312, file: !3, line: 2169, type: !3228)
!6322 = !DILocalVariable(name: "write", arg: 7, scope: !6312, file: !3, line: 2169, type: !679)
!6323 = !DILocalVariable(name: "insert_after", arg: 8, scope: !6312, file: !3, line: 2170, type: !679)
!6324 = !DILocalVariable(name: "expr", scope: !6325, file: !3, line: 2174, type: !689)
!6325 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 2173, column: 5)
!6326 = !DILocalVariable(name: "repl", scope: !6327, file: !3, line: 2183, type: !689)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 2182, column: 2)
!6328 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 2179, column: 11)
!6329 = !DILocalVariable(name: "ref_found", scope: !6327, file: !3, line: 2184, type: !679)
!6330 = !DILocalVariable(name: "stmt", scope: !6327, file: !3, line: 2185, type: !1011)
!6331 = !DILocation(line: 0, scope: !6312)
!6332 = !DILocation(line: 0, scope: !6325)
!6333 = !DILocation(line: 0, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 2176, column: 11)
!6335 = !DILocation(line: 0, scope: !6327)
!6336 = !DILocation(line: 0, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 2192, column: 8)
!6338 = !DILocation(line: 0, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 2194, column: 12)
!6340 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2193, column: 6)
!6341 = !DILocation(line: 2172, column: 3, scope: !6312)
!6342 = !DILocation(line: 2174, column: 7, scope: !6325)
!6343 = !DILocation(line: 2174, column: 12, scope: !6325)
!6344 = !DILocation(line: 2176, column: 22, scope: !6334)
!6345 = !DILocation(line: 2176, column: 33, scope: !6334)
!6346 = !DILocation(line: 2176, column: 40, scope: !6334)
!6347 = !DILocation(line: 2176, column: 11, scope: !6325)
!6348 = !DILocation(line: 2179, column: 19, scope: !6328)
!6349 = !DILocation(line: 2179, column: 11, scope: !6328)
!6350 = !DILocation(line: 2180, column: 4, scope: !6328)
!6351 = !DILocation(line: 2181, column: 8, scope: !6328)
!6352 = !DILocation(line: 2181, column: 19, scope: !6328)
!6353 = !DILocation(line: 2181, column: 36, scope: !6328)
!6354 = !DILocation(line: 2181, column: 26, scope: !6328)
!6355 = !DILocation(line: 2181, column: 41, scope: !6328)
!6356 = !DILocation(line: 2179, column: 11, scope: !6325)
!6357 = !DILocation(line: 2183, column: 16, scope: !6327)
!6358 = !DILocation(line: 2187, column: 45, scope: !6327)
!6359 = !DILocation(line: 2188, column: 19, scope: !6327)
!6360 = !DILocation(line: 2188, column: 26, scope: !6327)
!6361 = !DILocation(line: 2189, column: 19, scope: !6327)
!6362 = !DILocation(line: 2187, column: 16, scope: !6327)
!6363 = !DILocation(line: 2190, column: 4, scope: !6327)
!6364 = !DILocation(line: 2192, column: 8, scope: !6327)
!6365 = !DILocation(line: 2194, column: 20, scope: !6339)
!6366 = !DILocation(line: 2194, column: 12, scope: !6339)
!6367 = !DILocation(line: 2194, column: 12, scope: !6340)
!6368 = !DILocation(line: 2199, column: 15, scope: !6340)
!6369 = !DILocation(line: 2195, column: 41, scope: !6339)
!6370 = !DILocation(line: 2195, column: 10, scope: !6339)
!6371 = !DILocation(line: 2195, column: 8, scope: !6339)
!6372 = !DILocation(line: 2195, column: 3, scope: !6339)
!6373 = !DILocation(line: 2200, column: 6, scope: !6340)
!6374 = !DILocation(line: 2203, column: 8, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2202, column: 6)
!6376 = !DILocation(line: 2203, column: 31, scope: !6375)
!6377 = !DILocation(line: 2204, column: 20, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2204, column: 12)
!6379 = !DILocation(line: 2204, column: 12, scope: !6378)
!6380 = !DILocation(line: 2204, column: 12, scope: !6375)
!6381 = !DILocation(line: 2205, column: 10, scope: !6378)
!6382 = !DILocation(line: 2205, column: 3, scope: !6378)
!6383 = !DILocation(line: 2209, column: 15, scope: !6375)
!6384 = !DILocation(line: 2212, column: 8, scope: !6327)
!6385 = !DILocation(line: 2213, column: 6, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 2212, column: 8)
!6387 = !DILocation(line: 2215, column: 6, scope: !6386)
!6388 = !DILocation(line: 2216, column: 4, scope: !6327)
!6389 = !DILocation(line: 2217, column: 28, scope: !6327)
!6390 = !DILocation(line: 2218, column: 2, scope: !6327)
!6391 = !DILocation(line: 2220, column: 19, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 2220, column: 11)
!6393 = !DILocation(line: 2220, column: 11, scope: !6392)
!6394 = !DILocation(line: 2220, column: 11, scope: !6325)
!6395 = !DILocation(line: 2221, column: 2, scope: !6392)
!6396 = !DILocation(line: 2225, column: 24, scope: !6325)
!6397 = !DILocation(line: 2226, column: 5, scope: !6312)
!6398 = !DILocation(line: 2226, column: 5, scope: !6325)
!6399 = distinct !{!6399, !6341, !6400}
!6400 = !DILocation(line: 2227, column: 16, scope: !6312)
!6401 = !DILocation(line: 2228, column: 1, scope: !6312)
!6402 = distinct !DISubprogram(name: "get_var_base_offset_size_access", scope: !3, file: !3, line: 467, type: !4990, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6403)
!6403 = !{!6404, !6405, !6406, !6407}
!6404 = !DILocalVariable(name: "base", arg: 1, scope: !6402, file: !3, line: 467, type: !689)
!6405 = !DILocalVariable(name: "offset", arg: 2, scope: !6402, file: !3, line: 467, type: !745)
!6406 = !DILocalVariable(name: "size", arg: 3, scope: !6402, file: !3, line: 468, type: !745)
!6407 = !DILocalVariable(name: "access", scope: !6402, file: !3, line: 470, type: !1986)
!6408 = !DILocation(line: 0, scope: !6402)
!6409 = !DILocation(line: 472, column: 12, scope: !6402)
!6410 = !DILocation(line: 473, column: 3, scope: !6402)
!6411 = !DILocation(line: 473, column: 17, scope: !6402)
!6412 = !DILocation(line: 473, column: 29, scope: !6402)
!6413 = !DILocation(line: 473, column: 46, scope: !6402)
!6414 = !DILocation(line: 473, column: 36, scope: !6402)
!6415 = !DILocation(line: 473, column: 51, scope: !6402)
!6416 = !DILocation(line: 474, column: 22, scope: !6402)
!6417 = distinct !{!6417, !6410, !6416}
!6418 = !DILocation(line: 478, column: 10, scope: !6402)
!6419 = !DILocation(line: 478, column: 3, scope: !6402)
!6420 = !DILocation(line: 479, column: 1, scope: !6402)
!6421 = distinct !DISubprogram(name: "find_access_in_subtree", scope: !3, file: !3, line: 433, type: !6422, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6424)
!6422 = !DISubroutineType(types: !6423)
!6423 = !{!1986, !1986, !745, !745}
!6424 = !{!6425, !6426, !6427, !6428}
!6425 = !DILocalVariable(name: "access", arg: 1, scope: !6421, file: !3, line: 433, type: !1986)
!6426 = !DILocalVariable(name: "offset", arg: 2, scope: !6421, file: !3, line: 433, type: !745)
!6427 = !DILocalVariable(name: "size", arg: 3, scope: !6421, file: !3, line: 434, type: !745)
!6428 = !DILocalVariable(name: "child", scope: !6429, file: !3, line: 438, type: !1986)
!6429 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 437, column: 5)
!6430 = !DILocation(line: 0, scope: !6421)
!6431 = !DILocation(line: 436, column: 3, scope: !6421)
!6432 = !DILocation(line: 436, column: 10, scope: !6421)
!6433 = !DILocation(line: 436, column: 17, scope: !6421)
!6434 = !DILocation(line: 436, column: 29, scope: !6421)
!6435 = !DILocation(line: 436, column: 36, scope: !6421)
!6436 = !DILocation(line: 436, column: 46, scope: !6421)
!6437 = !DILocation(line: 436, column: 57, scope: !6421)
!6438 = !DILocation(line: 436, column: 62, scope: !6421)
!6439 = !DILocation(line: 438, column: 38, scope: !6429)
!6440 = !DILocation(line: 440, column: 7, scope: !6429)
!6441 = !DILocation(line: 0, scope: !6429)
!6442 = !DILocation(line: 440, column: 14, scope: !6429)
!6443 = !DILocation(line: 440, column: 20, scope: !6429)
!6444 = !DILocation(line: 440, column: 31, scope: !6429)
!6445 = !DILocation(line: 440, column: 47, scope: !6429)
!6446 = !DILocation(line: 440, column: 38, scope: !6429)
!6447 = !DILocation(line: 440, column: 52, scope: !6429)
!6448 = !DILocation(line: 441, column: 17, scope: !6429)
!6449 = distinct !{!6449, !6440, !6448}
!6450 = distinct !{!6450, !6431, !6451}
!6451 = !DILocation(line: 443, column: 5, scope: !6421)
!6452 = !DILocation(line: 445, column: 3, scope: !6421)
!6453 = distinct !DISubprogram(name: "create_access_replacement", scope: !3, file: !3, line: 1656, type: !6297, scopeLine: 1657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6454)
!6454 = !{!6455, !6456, !6457}
!6455 = !DILocalVariable(name: "access", arg: 1, scope: !6453, file: !3, line: 1656, type: !1986)
!6456 = !DILocalVariable(name: "repl", scope: !6453, file: !3, line: 1658, type: !689)
!6457 = !DILocalVariable(name: "pretty_name", scope: !6458, file: !3, line: 1678, type: !682)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 1677, column: 5)
!6459 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1674, column: 7)
!6460 = !DILocation(line: 0, scope: !6453)
!6461 = !DILocation(line: 1660, column: 34, scope: !6453)
!6462 = !DILocation(line: 1660, column: 10, scope: !6453)
!6463 = !DILocation(line: 1661, column: 3, scope: !6453)
!6464 = !DILocation(line: 1662, column: 3, scope: !6453)
!6465 = !DILocation(line: 1663, column: 3, scope: !6453)
!6466 = !DILocation(line: 1665, column: 16, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1665, column: 7)
!6468 = !DILocation(line: 1665, column: 8, scope: !6467)
!6469 = !DILocation(line: 1666, column: 7, scope: !6467)
!6470 = !DILocation(line: 1666, column: 11, scope: !6467)
!6471 = !DILocation(line: 1666, column: 36, scope: !6467)
!6472 = !DILocation(line: 1667, column: 4, scope: !6467)
!6473 = !DILocation(line: 1667, column: 32, scope: !6467)
!6474 = !DILocation(line: 1665, column: 7, scope: !6453)
!6475 = !DILocation(line: 1668, column: 5, scope: !6467)
!6476 = !DILocation(line: 1668, column: 30, scope: !6467)
!6477 = !DILocation(line: 1670, column: 33, scope: !6453)
!6478 = !DILocation(line: 1670, column: 3, scope: !6453)
!6479 = !DILocation(line: 1670, column: 31, scope: !6453)
!6480 = !DILocation(line: 1671, column: 3, scope: !6453)
!6481 = !DILocation(line: 1671, column: 26, scope: !6453)
!6482 = !DILocation(line: 1672, column: 27, scope: !6453)
!6483 = !DILocation(line: 1672, column: 25, scope: !6453)
!6484 = !DILocation(line: 1674, column: 7, scope: !6459)
!6485 = !DILocation(line: 1675, column: 7, scope: !6459)
!6486 = !DILocation(line: 1675, column: 11, scope: !6459)
!6487 = !DILocation(line: 1676, column: 7, scope: !6459)
!6488 = !DILocation(line: 1676, column: 11, scope: !6459)
!6489 = !DILocation(line: 1674, column: 7, scope: !6453)
!6490 = !DILocation(line: 1678, column: 52, scope: !6458)
!6491 = !DILocation(line: 1678, column: 27, scope: !6458)
!6492 = !DILocation(line: 0, scope: !6458)
!6493 = !DILocation(line: 1680, column: 26, scope: !6458)
!6494 = !DILocation(line: 1680, column: 7, scope: !6458)
!6495 = !DILocation(line: 1680, column: 24, scope: !6458)
!6496 = !DILocation(line: 1681, column: 7, scope: !6458)
!6497 = !DILocation(line: 1683, column: 7, scope: !6458)
!6498 = !DILocation(line: 1684, column: 38, scope: !6458)
!6499 = !DILocation(line: 1685, column: 32, scope: !6458)
!6500 = !DILocation(line: 1685, column: 7, scope: !6458)
!6501 = !DILocation(line: 1685, column: 30, scope: !6458)
!6502 = !DILocation(line: 1686, column: 5, scope: !6458)
!6503 = !DILocation(line: 1688, column: 5, scope: !6459)
!6504 = !DILocation(line: 1688, column: 28, scope: !6459)
!6505 = !DILocation(line: 1690, column: 7, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1690, column: 7)
!6507 = !DILocation(line: 1690, column: 7, scope: !6453)
!6508 = !DILocation(line: 1692, column: 7, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 1691, column: 5)
!6510 = !DILocation(line: 1693, column: 27, scope: !6509)
!6511 = !DILocation(line: 1693, column: 46, scope: !6509)
!6512 = !DILocation(line: 1693, column: 7, scope: !6509)
!6513 = !DILocation(line: 1694, column: 16, scope: !6509)
!6514 = !DILocation(line: 1695, column: 28, scope: !6509)
!6515 = !DILocation(line: 1695, column: 9, scope: !6509)
!6516 = !DILocation(line: 1695, column: 55, scope: !6509)
!6517 = !DILocation(line: 1695, column: 36, scope: !6509)
!6518 = !DILocation(line: 1694, column: 7, scope: !6509)
!6519 = !DILocation(line: 1696, column: 27, scope: !6509)
!6520 = !DILocation(line: 1696, column: 7, scope: !6509)
!6521 = !DILocation(line: 1697, column: 16, scope: !6509)
!6522 = !DILocation(line: 1697, column: 7, scope: !6509)
!6523 = !DILocation(line: 1698, column: 5, scope: !6509)
!6524 = !DILocation(line: 1699, column: 25, scope: !6453)
!6525 = !DILocation(line: 1701, column: 3, scope: !6453)
!6526 = distinct !DISubprogram(name: "get_var_ann", scope: !4200, file: !4200, line: 141, type: !6527, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6530)
!6527 = !DISubroutineType(types: !6528)
!6528 = !{!6529, !689}
!6529 = !DIDerivedType(tag: DW_TAG_typedef, name: "var_ann_t", file: !1350, line: 297, baseType: !1348)
!6530 = !{!6531, !6532}
!6531 = !DILocalVariable(name: "var", arg: 1, scope: !6526, file: !4200, line: 141, type: !689)
!6532 = !DILocalVariable(name: "p", scope: !6526, file: !4200, line: 143, type: !6533)
!6533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 64)
!6534 = !DILocation(line: 0, scope: !6526)
!6535 = !DILocation(line: 143, column: 18, scope: !6526)
!6536 = !DILocation(line: 144, column: 3, scope: !6526)
!6537 = !DILocation(line: 145, column: 10, scope: !6526)
!6538 = !DILocation(line: 145, column: 20, scope: !6526)
!6539 = !DILocation(line: 145, column: 3, scope: !6526)
!6540 = distinct !DISubprogram(name: "make_fancy_name", scope: !3, file: !3, line: 1368, type: !6541, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!682, !689}
!6543 = !{!6544}
!6544 = !DILocalVariable(name: "expr", arg: 1, scope: !6540, file: !3, line: 1368, type: !689)
!6545 = !DILocation(line: 0, scope: !6540)
!6546 = !DILocation(line: 1370, column: 3, scope: !6540)
!6547 = !DILocation(line: 1371, column: 3, scope: !6540)
!6548 = !DILocation(line: 1372, column: 10, scope: !6540)
!6549 = !DILocation(line: 1372, column: 3, scope: !6540)
!6550 = distinct !DISubprogram(name: "make_fancy_name_1", scope: !3, file: !3, line: 1323, type: !6551, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6553)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{null, !689}
!6553 = !{!6554, !6555, !6559}
!6554 = !DILocalVariable(name: "expr", arg: 1, scope: !6550, file: !3, line: 1323, type: !689)
!6555 = !DILocalVariable(name: "buffer", scope: !6550, file: !3, line: 1325, type: !6556)
!6556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 256, elements: !6557)
!6557 = !{!6558}
!6558 = !DISubrange(count: 32)
!6559 = !DILocalVariable(name: "index", scope: !6550, file: !3, line: 1326, type: !689)
!6560 = !DILocation(line: 0, scope: !6550)
!6561 = !DILocation(line: 1325, column: 3, scope: !6550)
!6562 = !DILocation(line: 1325, column: 8, scope: !6550)
!6563 = !DILocation(line: 1328, column: 7, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 1328, column: 7)
!6565 = !DILocation(line: 1328, column: 7, scope: !6550)
!6566 = !DILocation(line: 1330, column: 7, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 1329, column: 5)
!6568 = !DILocation(line: 1331, column: 7, scope: !6567)
!6569 = !DILocation(line: 1334, column: 11, scope: !6550)
!6570 = !DILocation(line: 1334, column: 3, scope: !6550)
!6571 = !DILocation(line: 1337, column: 26, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 1335, column: 5)
!6573 = !DILocation(line: 1337, column: 7, scope: !6572)
!6574 = !DILocation(line: 1338, column: 7, scope: !6572)
!6575 = !DILocation(line: 1339, column: 29, scope: !6572)
!6576 = !DILocation(line: 1339, column: 7, scope: !6572)
!6577 = !DILocation(line: 1340, column: 7, scope: !6572)
!6578 = !DILocation(line: 1343, column: 26, scope: !6572)
!6579 = !DILocation(line: 1343, column: 7, scope: !6572)
!6580 = !DILocation(line: 1344, column: 7, scope: !6572)
!6581 = !DILocation(line: 1347, column: 15, scope: !6572)
!6582 = !DILocation(line: 1348, column: 11, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 1348, column: 11)
!6584 = !DILocation(line: 1348, column: 29, scope: !6583)
!6585 = !DILocation(line: 1348, column: 11, scope: !6572)
!6586 = !DILocation(line: 1350, column: 49, scope: !6572)
!6587 = !DILocation(line: 1350, column: 7, scope: !6572)
!6588 = !DILocation(line: 1351, column: 7, scope: !6572)
!6589 = !DILocation(line: 1353, column: 7, scope: !6572)
!6590 = !DILocation(line: 1358, column: 7, scope: !6572)
!6591 = !DILocation(line: 1359, column: 7, scope: !6572)
!6592 = !DILocation(line: 1363, column: 1, scope: !6550)
!6593 = distinct !DISubprogram(name: "make_fancy_decl_name", scope: !3, file: !3, line: 1305, type: !6551, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6594)
!6594 = !{!6595, !6596, !6597}
!6595 = !DILocalVariable(name: "decl", arg: 1, scope: !6593, file: !3, line: 1305, type: !689)
!6596 = !DILocalVariable(name: "buffer", scope: !6593, file: !3, line: 1307, type: !6556)
!6597 = !DILocalVariable(name: "name", scope: !6593, file: !3, line: 1309, type: !689)
!6598 = !DILocation(line: 0, scope: !6593)
!6599 = !DILocation(line: 1307, column: 3, scope: !6593)
!6600 = !DILocation(line: 1307, column: 8, scope: !6593)
!6601 = !DILocation(line: 1309, column: 15, scope: !6593)
!6602 = !DILocation(line: 1310, column: 7, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1310, column: 7)
!6604 = !DILocation(line: 1310, column: 7, scope: !6593)
!6605 = !DILocation(line: 1311, column: 5, scope: !6603)
!6606 = !DILocation(line: 1315, column: 31, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 1314, column: 5)
!6608 = !DILocation(line: 1315, column: 7, scope: !6607)
!6609 = !DILocation(line: 1316, column: 7, scope: !6607)
!6610 = !DILocation(line: 0, scope: !6603)
!6611 = !DILocation(line: 1318, column: 1, scope: !6593)
!6612 = distinct !DISubprogram(name: "gimple_location", scope: !571, file: !571, line: 1139, type: !6613, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6615)
!6613 = !DISubroutineType(types: !6614)
!6614 = !{!814, !4429}
!6615 = !{!6616}
!6616 = !DILocalVariable(name: "g", arg: 1, scope: !6612, file: !571, line: 1139, type: !4429)
!6617 = !DILocation(line: 0, scope: !6612)
!6618 = !DILocation(line: 1141, column: 20, scope: !6612)
!6619 = !DILocation(line: 1141, column: 3, scope: !6612)
!6620 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !571, file: !571, line: 1694, type: !4464, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6621)
!6621 = !{!6622}
!6622 = !DILocalVariable(name: "gs", arg: 1, scope: !6620, file: !571, line: 1694, type: !4429)
!6623 = !DILocation(line: 0, scope: !6620)
!6624 = !DILocation(line: 1697, column: 10, scope: !6620)
!6625 = !DILocation(line: 1697, column: 3, scope: !6620)
!6626 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !571, file: !571, line: 1727, type: !4464, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6627)
!6627 = !{!6628}
!6628 = !DILocalVariable(name: "gs", arg: 1, scope: !6626, file: !571, line: 1727, type: !4429)
!6629 = !DILocation(line: 0, scope: !6626)
!6630 = !DILocation(line: 1730, column: 10, scope: !6626)
!6631 = !DILocation(line: 1730, column: 3, scope: !6626)
!6632 = distinct !DISubprogram(name: "sra_modify_constructor_assign", scope: !3, file: !3, line: 2500, type: !6633, scopeLine: 2501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6635)
!6633 = !DISubroutineType(types: !6634)
!6634 = !{!565, !2895, !3228}
!6635 = !{!6636, !6637, !6638, !6639}
!6636 = !DILocalVariable(name: "stmt", arg: 1, scope: !6632, file: !3, line: 2500, type: !2895)
!6637 = !DILocalVariable(name: "gsi", arg: 2, scope: !6632, file: !3, line: 2500, type: !3228)
!6638 = !DILocalVariable(name: "lhs", scope: !6632, file: !3, line: 2502, type: !689)
!6639 = !DILocalVariable(name: "acc", scope: !6632, file: !3, line: 2503, type: !1986)
!6640 = !DILocation(line: 0, scope: !6632)
!6641 = !DILocation(line: 2502, column: 33, scope: !6632)
!6642 = !DILocation(line: 2502, column: 14, scope: !6632)
!6643 = !DILocation(line: 2505, column: 9, scope: !6632)
!6644 = !DILocation(line: 2506, column: 8, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 2506, column: 7)
!6646 = !DILocation(line: 2506, column: 7, scope: !6632)
!6647 = !DILocation(line: 2509, column: 7, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 2509, column: 7)
!6649 = !DILocation(line: 2510, column: 52, scope: !6648)
!6650 = !DILocation(line: 2509, column: 7, scope: !6632)
!6651 = !DILocation(line: 2514, column: 11, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 2514, column: 11)
!6653 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 2511, column: 5)
!6654 = !DILocation(line: 2514, column: 11, scope: !6653)
!6655 = !DILocation(line: 2515, column: 32, scope: !6652)
!6656 = !DILocation(line: 2515, column: 50, scope: !6652)
!6657 = !DILocation(line: 2515, column: 2, scope: !6652)
!6658 = !DILocation(line: 2520, column: 12, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 2520, column: 7)
!6660 = !DILocation(line: 2520, column: 7, scope: !6659)
!6661 = !DILocation(line: 2520, column: 7, scope: !6632)
!6662 = !DILocation(line: 2522, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 2521, column: 5)
!6664 = !DILocation(line: 2523, column: 25, scope: !6663)
!6665 = !DILocation(line: 2523, column: 7, scope: !6663)
!6666 = !DILocation(line: 2524, column: 7, scope: !6663)
!6667 = !DILocation(line: 2525, column: 7, scope: !6663)
!6668 = !DILocation(line: 2529, column: 7, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 2528, column: 5)
!6670 = !DILocation(line: 2530, column: 7, scope: !6669)
!6671 = !DILocation(line: 2532, column: 1, scope: !6632)
!6672 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !571, file: !571, line: 1714, type: !6673, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6675)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{null, !1011, !689}
!6675 = !{!6676, !6677}
!6676 = !DILocalVariable(name: "gs", arg: 1, scope: !6672, file: !571, line: 1714, type: !1011)
!6677 = !DILocalVariable(name: "lhs", arg: 2, scope: !6672, file: !571, line: 1714, type: !689)
!6678 = !DILocation(line: 0, scope: !6672)
!6679 = !DILocation(line: 1717, column: 3, scope: !6672)
!6680 = !DILocation(line: 1719, column: 7, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6672, file: !571, line: 1719, column: 7)
!6682 = !DILocation(line: 1719, column: 11, scope: !6681)
!6683 = !DILocation(line: 1719, column: 14, scope: !6681)
!6684 = !DILocation(line: 1719, column: 30, scope: !6681)
!6685 = !DILocation(line: 1719, column: 7, scope: !6672)
!6686 = !DILocation(line: 1720, column: 5, scope: !6681)
!6687 = !DILocation(line: 1720, column: 29, scope: !6681)
!6688 = !DILocation(line: 1721, column: 1, scope: !6672)
!6689 = distinct !DISubprogram(name: "access_has_children_p", scope: !3, file: !3, line: 409, type: !5556, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6690)
!6690 = !{!6691}
!6691 = !DILocalVariable(name: "acc", arg: 1, scope: !6689, file: !3, line: 409, type: !1986)
!6692 = !DILocation(line: 0, scope: !6689)
!6693 = !DILocation(line: 411, column: 10, scope: !6689)
!6694 = !DILocation(line: 411, column: 14, scope: !6689)
!6695 = !DILocation(line: 411, column: 22, scope: !6689)
!6696 = !DILocation(line: 411, column: 3, scope: !6689)
!6697 = distinct !DISubprogram(name: "ref_expr_for_all_replacements_p", scope: !3, file: !3, line: 2128, type: !6698, scopeLine: 2130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6700)
!6698 = !DISubroutineType(types: !6699)
!6699 = !{!679, !1986, !689, !745}
!6700 = !{!6701, !6702, !6703}
!6701 = !DILocalVariable(name: "access", arg: 1, scope: !6697, file: !3, line: 2128, type: !1986)
!6702 = !DILocalVariable(name: "agg", arg: 2, scope: !6697, file: !3, line: 2128, type: !689)
!6703 = !DILocalVariable(name: "top_offset", arg: 3, scope: !6697, file: !3, line: 2129, type: !745)
!6704 = !DILocation(line: 0, scope: !6697)
!6705 = !DILocation(line: 2134, column: 36, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 2133, column: 11)
!6707 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2132, column: 5)
!6708 = !DILocation(line: 2131, column: 3, scope: !6697)
!6709 = !DILocation(line: 2133, column: 19, scope: !6706)
!6710 = !DILocation(line: 2133, column: 11, scope: !6706)
!6711 = !DILocation(line: 2134, column: 4, scope: !6706)
!6712 = !DILocation(line: 2135, column: 17, scope: !6706)
!6713 = !DILocation(line: 2135, column: 24, scope: !6706)
!6714 = !DILocation(line: 2136, column: 17, scope: !6706)
!6715 = !DILocation(line: 2134, column: 8, scope: !6706)
!6716 = !DILocation(line: 2133, column: 11, scope: !6707)
!6717 = !DILocation(line: 2139, column: 19, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 2139, column: 11)
!6719 = !DILocation(line: 2139, column: 11, scope: !6718)
!6720 = !DILocation(line: 2140, column: 4, scope: !6718)
!6721 = !DILocation(line: 2140, column: 8, scope: !6718)
!6722 = !DILocation(line: 2139, column: 11, scope: !6707)
!6723 = !DILocation(line: 2144, column: 24, scope: !6707)
!6724 = !DILocation(line: 2145, column: 5, scope: !6707)
!6725 = distinct !{!6725, !6708, !6726}
!6726 = !DILocation(line: 2146, column: 16, scope: !6697)
!6727 = !DILocation(line: 2149, column: 1, scope: !6697)
!6728 = distinct !DISubprogram(name: "handle_unscalarized_data_in_subtree", scope: !3, file: !3, line: 2393, type: !6729, scopeLine: 2395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6731)
!6729 = !DISubroutineType(types: !6730)
!6730 = !{!635, !1986, !689, !3228}
!6731 = !{!6732, !6733, !6734}
!6732 = !DILocalVariable(name: "top_racc", arg: 1, scope: !6728, file: !3, line: 2393, type: !1986)
!6733 = !DILocalVariable(name: "lhs", arg: 2, scope: !6728, file: !3, line: 2393, type: !689)
!6734 = !DILocalVariable(name: "gsi", arg: 3, scope: !6728, file: !3, line: 2394, type: !3228)
!6735 = !DILocation(line: 0, scope: !6728)
!6736 = !DILocation(line: 2396, column: 17, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 2396, column: 7)
!6738 = !DILocation(line: 2396, column: 7, scope: !6737)
!6739 = !DILocation(line: 0, scope: !6737)
!6740 = !DILocation(line: 2396, column: 7, scope: !6728)
!6741 = !DILocation(line: 2398, column: 65, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2397, column: 5)
!6743 = !DILocation(line: 2398, column: 7, scope: !6742)
!6744 = !DILocation(line: 2400, column: 7, scope: !6742)
!6745 = !DILocation(line: 2404, column: 70, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2403, column: 5)
!6747 = !DILocation(line: 2404, column: 7, scope: !6746)
!6748 = !DILocation(line: 2406, column: 7, scope: !6746)
!6749 = !DILocation(line: 2408, column: 1, scope: !6728)
!6750 = distinct !DISubprogram(name: "load_assign_lhs_subreplacements", scope: !3, file: !3, line: 2421, type: !6751, scopeLine: 2428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6754)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{null, !1986, !1986, !745, !745, !3228, !3228, !6753, !689}
!6753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!6754 = !{!6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6768, !6769, !6770, !6771, !6776}
!6755 = !DILocalVariable(name: "lacc", arg: 1, scope: !6750, file: !3, line: 2421, type: !1986)
!6756 = !DILocalVariable(name: "top_racc", arg: 2, scope: !6750, file: !3, line: 2421, type: !1986)
!6757 = !DILocalVariable(name: "left_offset", arg: 3, scope: !6750, file: !3, line: 2422, type: !745)
!6758 = !DILocalVariable(name: "right_offset", arg: 4, scope: !6750, file: !3, line: 2423, type: !745)
!6759 = !DILocalVariable(name: "old_gsi", arg: 5, scope: !6750, file: !3, line: 2424, type: !3228)
!6760 = !DILocalVariable(name: "new_gsi", arg: 6, scope: !6750, file: !3, line: 2425, type: !3228)
!6761 = !DILocalVariable(name: "refreshed", arg: 7, scope: !6750, file: !3, line: 2426, type: !6753)
!6762 = !DILocalVariable(name: "lhs", arg: 8, scope: !6750, file: !3, line: 2427, type: !689)
!6763 = !DILocalVariable(name: "loc", scope: !6750, file: !3, line: 2429, type: !814)
!6764 = !DILocalVariable(name: "racc", scope: !6765, file: !3, line: 2434, type: !1986)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 2433, column: 2)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 2432, column: 11)
!6767 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 2431, column: 5)
!6768 = !DILocalVariable(name: "offset", scope: !6765, file: !3, line: 2435, type: !745)
!6769 = !DILocalVariable(name: "stmt", scope: !6765, file: !3, line: 2436, type: !1011)
!6770 = !DILocalVariable(name: "rhs", scope: !6765, file: !3, line: 2437, type: !689)
!6771 = !DILocalVariable(name: "repl_found", scope: !6772, file: !3, line: 2456, type: !679)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 2455, column: 3)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2454, column: 12)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 2447, column: 6)
!6775 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 2440, column: 8)
!6776 = !DILocalVariable(name: "repl_found", scope: !6777, file: !3, line: 2466, type: !679)
!6777 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 2465, column: 3)
!6778 = !DILocation(line: 0, scope: !6750)
!6779 = !DILocation(line: 2429, column: 20, scope: !6750)
!6780 = !DILocation(line: 0, scope: !6765)
!6781 = !DILocation(line: 0, scope: !6777)
!6782 = !DILocation(line: 2430, column: 3, scope: !6750)
!6783 = !DILocation(line: 2432, column: 17, scope: !6766)
!6784 = !DILocation(line: 2432, column: 11, scope: !6766)
!6785 = !DILocation(line: 2432, column: 11, scope: !6767)
!6786 = !DILocation(line: 2435, column: 33, scope: !6765)
!6787 = !DILocation(line: 2435, column: 40, scope: !6765)
!6788 = !DILocation(line: 2435, column: 54, scope: !6765)
!6789 = !DILocation(line: 2437, column: 4, scope: !6765)
!6790 = !DILocation(line: 2439, column: 59, scope: !6765)
!6791 = !DILocation(line: 2439, column: 11, scope: !6765)
!6792 = !DILocation(line: 2440, column: 8, scope: !6775)
!6793 = !DILocation(line: 2440, column: 13, scope: !6775)
!6794 = !DILocation(line: 2440, column: 22, scope: !6775)
!6795 = !DILocation(line: 2440, column: 16, scope: !6775)
!6796 = !DILocation(line: 2440, column: 8, scope: !6765)
!6797 = !DILocation(line: 2442, column: 14, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 2441, column: 6)
!6799 = !DILocation(line: 2442, column: 12, scope: !6798)
!6800 = !DILocation(line: 2443, column: 46, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 2443, column: 12)
!6802 = !DILocation(line: 2443, column: 58, scope: !6801)
!6803 = !DILocation(line: 2443, column: 13, scope: !6801)
!6804 = !DILocation(line: 2443, column: 12, scope: !6798)
!6805 = !DILocation(line: 2444, column: 9, scope: !6801)
!6806 = !DILocation(line: 2444, column: 7, scope: !6801)
!6807 = !DILocation(line: 2444, column: 3, scope: !6801)
!6808 = !DILocation(line: 2450, column: 12, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2450, column: 12)
!6810 = !DILocation(line: 2450, column: 23, scope: !6809)
!6811 = !DILocation(line: 2450, column: 12, scope: !6774)
!6812 = !DILocation(line: 2451, column: 16, scope: !6809)
!6813 = !DILocation(line: 2451, column: 14, scope: !6809)
!6814 = !DILocation(line: 2451, column: 3, scope: !6809)
!6815 = !DILocation(line: 2454, column: 12, scope: !6773)
!6816 = !DILocation(line: 2454, column: 23, scope: !6773)
!6817 = !DILocation(line: 2454, column: 12, scope: !6774)
!6818 = !DILocation(line: 2458, column: 17, scope: !6772)
!6819 = !DILocation(line: 2458, column: 9, scope: !6772)
!6820 = !DILocation(line: 2459, column: 46, scope: !6772)
!6821 = !DILocation(line: 2460, column: 18, scope: !6772)
!6822 = !DILocation(line: 2460, column: 32, scope: !6772)
!6823 = !DILocation(line: 2459, column: 18, scope: !6772)
!6824 = !DILocation(line: 0, scope: !6772)
!6825 = !DILocation(line: 2462, column: 5, scope: !6772)
!6826 = !DILocation(line: 2468, column: 21, scope: !6777)
!6827 = !DILocation(line: 2468, column: 9, scope: !6777)
!6828 = !DILocation(line: 2470, column: 12, scope: !6777)
!6829 = !DILocation(line: 2471, column: 26, scope: !6777)
!6830 = !DILocation(line: 2469, column: 18, scope: !6777)
!6831 = !DILocation(line: 2472, column: 5, scope: !6777)
!6832 = !DILocation(line: 2476, column: 11, scope: !6765)
!6833 = !DILocation(line: 2477, column: 4, scope: !6765)
!6834 = !DILocation(line: 2478, column: 4, scope: !6765)
!6835 = !DILocation(line: 2479, column: 29, scope: !6765)
!6836 = !DILocation(line: 2480, column: 2, scope: !6766)
!6837 = !DILocation(line: 2480, column: 2, scope: !6765)
!6838 = !DILocation(line: 2481, column: 16, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 2481, column: 16)
!6840 = !DILocation(line: 2481, column: 27, scope: !6839)
!6841 = !DILocation(line: 2482, column: 9, scope: !6839)
!6842 = !DILocation(line: 2482, column: 18, scope: !6839)
!6843 = !DILocation(line: 2482, column: 12, scope: !6839)
!6844 = !DILocation(line: 2482, column: 27, scope: !6839)
!6845 = !DILocation(line: 2482, column: 37, scope: !6839)
!6846 = !DILocation(line: 2482, column: 31, scope: !6839)
!6847 = !DILocation(line: 2481, column: 16, scope: !6766)
!6848 = !DILocation(line: 2483, column: 15, scope: !6839)
!6849 = !DILocation(line: 2483, column: 13, scope: !6839)
!6850 = !DILocation(line: 2483, column: 2, scope: !6839)
!6851 = !DILocation(line: 2486, column: 17, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 2486, column: 11)
!6853 = !DILocation(line: 2486, column: 11, scope: !6852)
!6854 = !DILocation(line: 2486, column: 11, scope: !6767)
!6855 = !DILocation(line: 2487, column: 2, scope: !6852)
!6856 = !DILocation(line: 2490, column: 20, scope: !6767)
!6857 = !DILocation(line: 2491, column: 5, scope: !6767)
!6858 = distinct !{!6858, !6782, !6859}
!6859 = !DILocation(line: 2492, column: 14, scope: !6750)
!6860 = !DILocation(line: 2493, column: 1, scope: !6750)
!6861 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !135, file: !135, line: 1537, type: !6862, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6866)
!6862 = !DISubroutineType(types: !6863)
!6863 = !{!7, !6864}
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!6866 = !{!6867}
!6867 = !DILocalVariable(name: "vec_", arg: 1, scope: !6861, file: !135, line: 1537, type: !6864)
!6868 = !DILocation(line: 0, scope: !6861)
!6869 = !DILocation(line: 1537, column: 1, scope: !6861)
!6870 = distinct !DISubprogram(name: "init_subtree_with_zero", scope: !3, file: !3, line: 2236, type: !6871, scopeLine: 2239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6873)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{null, !1986, !3228, !679}
!6873 = !{!6874, !6875, !6876, !6877, !6878}
!6874 = !DILocalVariable(name: "access", arg: 1, scope: !6870, file: !3, line: 2236, type: !1986)
!6875 = !DILocalVariable(name: "gsi", arg: 2, scope: !6870, file: !3, line: 2236, type: !3228)
!6876 = !DILocalVariable(name: "insert_after", arg: 3, scope: !6870, file: !3, line: 2237, type: !679)
!6877 = !DILocalVariable(name: "child", scope: !6870, file: !3, line: 2240, type: !1986)
!6878 = !DILocalVariable(name: "stmt", scope: !6879, file: !3, line: 2244, type: !1011)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 2243, column: 5)
!6880 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 2242, column: 7)
!6881 = !DILocation(line: 0, scope: !6870)
!6882 = !DILocation(line: 2242, column: 15, scope: !6880)
!6883 = !DILocation(line: 2242, column: 7, scope: !6880)
!6884 = !DILocation(line: 2242, column: 7, scope: !6870)
!6885 = !DILocation(line: 2246, column: 14, scope: !6879)
!6886 = !DILocation(line: 0, scope: !6879)
!6887 = !DILocation(line: 2249, column: 11, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 2249, column: 11)
!6889 = !DILocation(line: 2249, column: 11, scope: !6879)
!6890 = !DILocation(line: 2250, column: 2, scope: !6888)
!6891 = !DILocation(line: 2252, column: 2, scope: !6888)
!6892 = !DILocation(line: 2253, column: 7, scope: !6879)
!6893 = !DILocation(line: 2254, column: 5, scope: !6879)
!6894 = !DILocation(line: 2256, column: 24, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 2256, column: 3)
!6896 = !DILocation(line: 2256, column: 8, scope: !6895)
!6897 = !DILocation(line: 0, scope: !6895)
!6898 = !DILocation(line: 2256, column: 3, scope: !6895)
!6899 = !DILocation(line: 2257, column: 5, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 2256, column: 3)
!6901 = !DILocation(line: 2256, column: 59, scope: !6900)
!6902 = !DILocation(line: 2256, column: 3, scope: !6900)
!6903 = distinct !{!6903, !6898, !6904}
!6904 = !DILocation(line: 2257, column: 53, scope: !6895)
!6905 = !DILocation(line: 2258, column: 1, scope: !6870)
!6906 = distinct !DISubprogram(name: "gimple_set_op", scope: !571, file: !571, line: 1663, type: !6907, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6909)
!6907 = !DISubroutineType(types: !6908)
!6908 = !{null, !1011, !7, !689}
!6909 = !{!6910, !6911, !6912}
!6910 = !DILocalVariable(name: "gs", arg: 1, scope: !6906, file: !571, line: 1663, type: !1011)
!6911 = !DILocalVariable(name: "i", arg: 2, scope: !6906, file: !571, line: 1663, type: !7)
!6912 = !DILocalVariable(name: "op", arg: 3, scope: !6906, file: !571, line: 1663, type: !689)
!6913 = !DILocation(line: 0, scope: !6906)
!6914 = !DILocation(line: 1665, column: 3, scope: !6906)
!6915 = !DILocation(line: 1671, column: 3, scope: !6906)
!6916 = !DILocation(line: 1671, column: 22, scope: !6906)
!6917 = !DILocation(line: 1672, column: 1, scope: !6906)
!6918 = distinct !DISubprogram(name: "gsi_start", scope: !571, file: !571, line: 4403, type: !6919, scopeLine: 4404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6921)
!6919 = !DISubroutineType(types: !6920)
!6920 = !{!3229, !1001}
!6921 = !{!6922, !6923}
!6922 = !DILocalVariable(name: "seq", arg: 1, scope: !6918, file: !571, line: 4403, type: !1001)
!6923 = !DILocalVariable(name: "i", scope: !6918, file: !571, line: 4405, type: !3229)
!6924 = !DILocation(line: 0, scope: !6918)
!6925 = !DILocation(line: 4405, column: 24, scope: !6918)
!6926 = !DILocation(line: 4407, column: 11, scope: !6918)
!6927 = !DILocation(line: 4407, column: 5, scope: !6918)
!6928 = !DILocation(line: 4407, column: 9, scope: !6918)
!6929 = !DILocation(line: 4408, column: 5, scope: !6918)
!6930 = !DILocation(line: 4408, column: 9, scope: !6918)
!6931 = !DILocation(line: 4409, column: 11, scope: !6918)
!6932 = !DILocation(line: 4409, column: 17, scope: !6918)
!6933 = !DILocation(line: 4409, column: 27, scope: !6918)
!6934 = !DILocation(line: 4409, column: 20, scope: !6918)
!6935 = !DILocation(line: 4409, column: 10, scope: !6918)
!6936 = !DILocation(line: 4409, column: 35, scope: !6918)
!6937 = !DILocation(line: 4409, column: 5, scope: !6918)
!6938 = !DILocation(line: 4409, column: 8, scope: !6918)
!6939 = !DILocation(line: 4411, column: 3, scope: !6918)
!6940 = distinct !DISubprogram(name: "single_succ_edge", scope: !330, file: !330, line: 643, type: !6941, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6943)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{!991, !4588}
!6943 = !{!6944}
!6944 = !DILocalVariable(name: "bb", arg: 1, scope: !6940, file: !330, line: 643, type: !4588)
!6945 = !DILocation(line: 0, scope: !6940)
!6946 = !DILocation(line: 645, column: 3, scope: !6940)
!6947 = !DILocation(line: 646, column: 10, scope: !6940)
!6948 = !DILocation(line: 646, column: 3, scope: !6940)
!6949 = distinct !DISubprogram(name: "single_succ_p", scope: !330, file: !330, line: 626, type: !6950, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6952)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!679, !4588}
!6952 = !{!6953}
!6953 = !DILocalVariable(name: "bb", arg: 1, scope: !6949, file: !330, line: 626, type: !4588)
!6954 = !DILocation(line: 0, scope: !6949)
!6955 = !DILocation(line: 628, column: 10, scope: !6949)
!6956 = !DILocation(line: 628, column: 33, scope: !6949)
!6957 = !DILocation(line: 628, column: 3, scope: !6949)
!6958 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !330, file: !330, line: 150, type: !6959, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6963)
!6959 = !DISubroutineType(types: !6960)
!6960 = !{!991, !6961, !7}
!6961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6962, size: 64)
!6962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!6963 = !{!6964, !6965}
!6964 = !DILocalVariable(name: "vec_", arg: 1, scope: !6958, file: !330, line: 150, type: !6961)
!6965 = !DILocalVariable(name: "ix_", arg: 2, scope: !6958, file: !330, line: 150, type: !7)
!6966 = !DILocation(line: 0, scope: !6958)
!6967 = !DILocation(line: 150, column: 1, scope: !6958)
!6968 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !330, file: !330, line: 150, type: !6969, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6971)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!7, !6961}
!6971 = !{!6972}
!6972 = !DILocalVariable(name: "vec_", arg: 1, scope: !6968, file: !330, line: 150, type: !6961)
!6973 = !DILocation(line: 0, scope: !6968)
!6974 = !DILocation(line: 150, column: 1, scope: !6968)
!6975 = distinct !DISubprogram(name: "delete_base_accesses", scope: !3, file: !3, line: 577, type: !6976, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6978)
!6976 = !DISubroutineType(types: !6977)
!6977 = !{!679, !1453, !1466, !684}
!6978 = !{!6979, !6980, !6981, !6982}
!6979 = !DILocalVariable(name: "key", arg: 1, scope: !6975, file: !3, line: 577, type: !1453)
!6980 = !DILocalVariable(name: "value", arg: 2, scope: !6975, file: !3, line: 577, type: !1466)
!6981 = !DILocalVariable(name: "data", arg: 3, scope: !6975, file: !3, line: 578, type: !684)
!6982 = !DILocalVariable(name: "access_vec", scope: !6975, file: !3, line: 580, type: !2023)
!6983 = !DILocation(line: 0, scope: !6975)
!6984 = !DILocation(line: 580, column: 3, scope: !6975)
!6985 = !DILocation(line: 581, column: 41, scope: !6975)
!6986 = !DILocation(line: 581, column: 14, scope: !6975)
!6987 = !DILocation(line: 582, column: 3, scope: !6975)
!6988 = !DILocation(line: 585, column: 1, scope: !6975)
!6989 = !DILocation(line: 584, column: 3, scope: !6975)
!6990 = distinct !DISubprogram(name: "VEC_access_p_heap_free", scope: !3, file: !3, line: 229, type: !6991, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6993)
!6991 = !DISubroutineType(types: !6992)
!6992 = !{null, !2038}
!6993 = !{!6994}
!6994 = !DILocalVariable(name: "vec_", arg: 1, scope: !6990, file: !3, line: 229, type: !2038)
!6995 = !DILocation(line: 0, scope: !6990)
!6996 = !DILocation(line: 229, column: 1, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 229, column: 1)
!6998 = !DILocation(line: 229, column: 1, scope: !6990)
!6999 = distinct !DISubprogram(name: "ipa_sra_preliminary_function_checks", scope: !3, file: !3, line: 4110, type: !7000, scopeLine: 4111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7002)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!679, !2800}
!7002 = !{!7003}
!7003 = !DILocalVariable(name: "node", arg: 1, scope: !6999, file: !3, line: 4110, type: !2800)
!7004 = !DILocation(line: 0, scope: !6999)
!7005 = !DILocation(line: 4112, column: 8, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 4112, column: 7)
!7007 = !DILocation(line: 4112, column: 7, scope: !6999)
!7008 = !DILocation(line: 4114, column: 11, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 4114, column: 11)
!7010 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 4113, column: 5)
!7011 = !DILocation(line: 4114, column: 11, scope: !7010)
!7012 = !DILocation(line: 4115, column: 2, scope: !7009)
!7013 = !DILocation(line: 4119, column: 7, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 4119, column: 7)
!7015 = !DILocation(line: 4119, column: 7, scope: !6999)
!7016 = !DILocation(line: 4121, column: 11, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 4121, column: 11)
!7018 = distinct !DILexicalBlock(scope: !7014, file: !3, line: 4120, column: 5)
!7019 = !DILocation(line: 4121, column: 11, scope: !7018)
!7020 = !DILocation(line: 4122, column: 2, scope: !7017)
!7021 = !DILocation(line: 4126, column: 8, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 4126, column: 7)
!7023 = !DILocation(line: 4126, column: 33, scope: !7022)
!7024 = !DILocation(line: 4126, column: 36, scope: !7022)
!7025 = !DILocation(line: 4127, column: 7, scope: !7022)
!7026 = !DILocation(line: 4127, column: 23, scope: !7022)
!7027 = !DILocation(line: 4127, column: 31, scope: !7022)
!7028 = !DILocation(line: 4127, column: 28, scope: !7022)
!7029 = !DILocation(line: 4126, column: 7, scope: !6999)
!7030 = !DILocation(line: 4129, column: 11, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 4129, column: 11)
!7032 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 4128, column: 5)
!7033 = !DILocation(line: 4129, column: 11, scope: !7032)
!7034 = !DILocation(line: 4130, column: 2, scope: !7031)
!7035 = !DILocation(line: 4134, column: 14, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 4134, column: 7)
!7037 = !DILocation(line: 4134, column: 8, scope: !7036)
!7038 = !DILocation(line: 4134, column: 7, scope: !6999)
!7039 = !DILocation(line: 4136, column: 11, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 4136, column: 11)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4135, column: 5)
!7042 = !DILocation(line: 4136, column: 11, scope: !7041)
!7043 = !DILocation(line: 4137, column: 2, scope: !7040)
!7044 = !DILocation(line: 4142, column: 7, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 4142, column: 7)
!7046 = !DILocation(line: 4142, column: 13, scope: !7045)
!7047 = !DILocation(line: 4142, column: 7, scope: !6999)
!7048 = !DILocation(line: 4144, column: 11, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 4144, column: 11)
!7050 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 4143, column: 5)
!7051 = !DILocation(line: 4144, column: 11, scope: !7050)
!7052 = !DILocation(line: 4145, column: 2, scope: !7049)
!7053 = !DILocation(line: 4150, column: 1, scope: !6999)
!7054 = distinct !DISubprogram(name: "find_param_candidates", scope: !3, file: !3, line: 2983, type: !2089, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7055)
!7055 = !{!7056, !7057, !7058, !7059}
!7056 = !DILocalVariable(name: "parm", scope: !7054, file: !3, line: 2985, type: !689)
!7057 = !DILocalVariable(name: "count", scope: !7054, file: !3, line: 2986, type: !680)
!7058 = !DILocalVariable(name: "ret", scope: !7054, file: !3, line: 2987, type: !679)
!7059 = !DILocalVariable(name: "type", scope: !7060, file: !3, line: 2993, type: !689)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2992, column: 5)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 2989, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 2989, column: 3)
!7063 = !DILocation(line: 0, scope: !7054)
!7064 = !DILocation(line: 2989, column: 15, scope: !7062)
!7065 = !DILocation(line: 2989, column: 8, scope: !7062)
!7066 = !DILocation(line: 2987, column: 8, scope: !7054)
!7067 = !DILocation(line: 0, scope: !7062)
!7068 = !DILocation(line: 2989, column: 3, scope: !7062)
!7069 = !DILocation(line: 2993, column: 19, scope: !7060)
!7070 = !DILocation(line: 0, scope: !7060)
!7071 = !DILocation(line: 2995, column: 12, scope: !7060)
!7072 = !DILocation(line: 2997, column: 11, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 2997, column: 11)
!7074 = !DILocation(line: 2998, column: 4, scope: !7073)
!7075 = !DILocation(line: 2998, column: 7, scope: !7073)
!7076 = !DILocation(line: 2999, column: 4, scope: !7073)
!7077 = !DILocation(line: 2999, column: 7, scope: !7073)
!7078 = !DILocation(line: 2997, column: 11, scope: !7060)
!7079 = !DILocation(line: 3002, column: 11, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 3002, column: 11)
!7081 = !DILocation(line: 3002, column: 11, scope: !7060)
!7082 = !DILocation(line: 3008, column: 11, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 3008, column: 11)
!7084 = !DILocation(line: 3008, column: 11, scope: !7060)
!7085 = !DILocation(line: 3010, column: 11, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 3009, column: 2)
!7087 = !DILocation(line: 3012, column: 8, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 3012, column: 8)
!7089 = !DILocation(line: 3012, column: 25, scope: !7088)
!7090 = !DILocation(line: 3013, column: 8, scope: !7088)
!7091 = !DILocation(line: 3013, column: 11, scope: !7088)
!7092 = !DILocation(line: 3014, column: 8, scope: !7088)
!7093 = !DILocation(line: 3014, column: 12, scope: !7088)
!7094 = !DILocation(line: 3015, column: 8, scope: !7088)
!7095 = !DILocation(line: 3015, column: 11, scope: !7088)
!7096 = !DILocation(line: 3016, column: 8, scope: !7088)
!7097 = !DILocation(line: 3016, column: 11, scope: !7088)
!7098 = !DILocation(line: 3012, column: 8, scope: !7086)
!7099 = !DILocation(line: 3019, column: 17, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 3019, column: 16)
!7101 = !DILocation(line: 3019, column: 16, scope: !7083)
!7102 = !DILocation(line: 3022, column: 12, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 3022, column: 11)
!7104 = !DILocation(line: 3023, column: 4, scope: !7103)
!7105 = !DILocation(line: 3023, column: 8, scope: !7103)
!7106 = !DILocation(line: 3024, column: 11, scope: !7103)
!7107 = !DILocation(line: 3024, column: 28, scope: !7103)
!7108 = !DILocation(line: 3024, column: 14, scope: !7103)
!7109 = !DILocation(line: 3024, column: 49, scope: !7103)
!7110 = !DILocation(line: 3025, column: 4, scope: !7103)
!7111 = !DILocation(line: 3025, column: 8, scope: !7103)
!7112 = !DILocation(line: 3026, column: 8, scope: !7103)
!7113 = !DILocation(line: 3026, column: 11, scope: !7103)
!7114 = !DILocation(line: 3022, column: 11, scope: !7060)
!7115 = !DILocation(line: 3029, column: 23, scope: !7060)
!7116 = !DILocation(line: 3029, column: 41, scope: !7060)
!7117 = !DILocation(line: 3029, column: 7, scope: !7060)
!7118 = !DILocation(line: 3031, column: 11, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 3031, column: 11)
!7120 = !DILocation(line: 3031, column: 21, scope: !7119)
!7121 = !DILocation(line: 3031, column: 25, scope: !7119)
!7122 = !DILocation(line: 3031, column: 36, scope: !7119)
!7123 = !DILocation(line: 3031, column: 11, scope: !7060)
!7124 = !DILocation(line: 3033, column: 44, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 3032, column: 2)
!7126 = !DILocation(line: 3033, column: 4, scope: !7125)
!7127 = !DILocation(line: 3034, column: 24, scope: !7125)
!7128 = !DILocation(line: 3034, column: 4, scope: !7125)
!7129 = !DILocation(line: 3035, column: 13, scope: !7125)
!7130 = !DILocation(line: 3035, column: 4, scope: !7125)
!7131 = !DILocation(line: 3036, column: 2, scope: !7125)
!7132 = !DILocation(line: 2991, column: 15, scope: !7061)
!7133 = !DILocation(line: 2989, column: 3, scope: !7061)
!7134 = distinct !{!7134, !7068, !7135}
!7135 = !DILocation(line: 3037, column: 5, scope: !7062)
!7136 = !DILocation(line: 3039, column: 20, scope: !7054)
!7137 = !DILocation(line: 3040, column: 3, scope: !7054)
!7138 = distinct !DISubprogram(name: "all_callers_have_enough_arguments_p", scope: !3, file: !3, line: 3991, type: !7000, scopeLine: 3992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7139)
!7139 = !{!7140, !7141}
!7140 = !DILocalVariable(name: "node", arg: 1, scope: !7138, file: !3, line: 3991, type: !2800)
!7141 = !DILocalVariable(name: "cs", scope: !7138, file: !3, line: 3993, type: !2805)
!7142 = !DILocation(line: 0, scope: !7138)
!7143 = !DILocation(line: 3994, column: 19, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 3994, column: 3)
!7145 = !DILocation(line: 3994, column: 8, scope: !7144)
!7146 = !DILocation(line: 0, scope: !7144)
!7147 = !DILocation(line: 3994, column: 3, scope: !7144)
!7148 = !DILocation(line: 3995, column: 47, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 3995, column: 9)
!7150 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 3994, column: 3)
!7151 = !DILocation(line: 3995, column: 10, scope: !7149)
!7152 = !DILocation(line: 3995, column: 9, scope: !7150)
!7153 = !DILocation(line: 3994, column: 41, scope: !7150)
!7154 = !DILocation(line: 3994, column: 3, scope: !7150)
!7155 = distinct !{!7155, !7147, !7156}
!7156 = !DILocation(line: 3996, column: 14, scope: !7144)
!7157 = !DILocation(line: 3999, column: 1, scope: !7138)
!7158 = distinct !DISubprogram(name: "analyze_all_param_acesses", scope: !3, file: !3, line: 3622, type: !7159, scopeLine: 3623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7161)
!7159 = !DISubroutineType(types: !7160)
!7160 = !{!3006}
!7161 = !{!7162, !7163, !7164, !7165, !7166, !7167, !7168, !7172}
!7162 = !DILocalVariable(name: "repr_state", scope: !7158, file: !3, line: 3624, type: !670)
!7163 = !DILocalVariable(name: "proceed", scope: !7158, file: !3, line: 3625, type: !679)
!7164 = !DILocalVariable(name: "i", scope: !7158, file: !3, line: 3626, type: !680)
!7165 = !DILocalVariable(name: "adjustments_count", scope: !7158, file: !3, line: 3626, type: !680)
!7166 = !DILocalVariable(name: "representatives", scope: !7158, file: !3, line: 3627, type: !2023)
!7167 = !DILocalVariable(name: "adjustments", scope: !7158, file: !3, line: 3628, type: !3006)
!7168 = !DILocalVariable(name: "repr", scope: !7169, file: !3, line: 3644, type: !1986)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 3643, column: 5)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 3642, column: 3)
!7171 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 3642, column: 3)
!7172 = !DILocalVariable(name: "new_components", scope: !7173, file: !3, line: 3662, type: !680)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 3661, column: 6)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 3648, column: 8)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 3647, column: 2)
!7176 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 3646, column: 11)
!7177 = !DILocation(line: 0, scope: !7158)
!7178 = !DILocation(line: 3627, column: 3, scope: !7158)
!7179 = !DILocation(line: 3630, column: 16, scope: !7158)
!7180 = !DILocation(line: 3631, column: 7, scope: !7158)
!7181 = !DILocation(line: 3638, column: 44, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 3637, column: 5)
!7183 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 3636, column: 7)
!7184 = !DILocation(line: 3638, column: 7, scope: !7182)
!7185 = !DILocation(line: 3639, column: 32, scope: !7182)
!7186 = !DILocation(line: 3639, column: 7, scope: !7182)
!7187 = !DILocation(line: 3640, column: 5, scope: !7182)
!7188 = !DILocation(line: 3642, column: 8, scope: !7171)
!7189 = !DILocation(line: 0, scope: !7171)
!7190 = !DILocation(line: 3642, column: 19, scope: !7170)
!7191 = !DILocation(line: 3642, column: 17, scope: !7170)
!7192 = !DILocation(line: 3642, column: 3, scope: !7171)
!7193 = !DILocation(line: 3644, column: 29, scope: !7169)
!7194 = !DILocation(line: 0, scope: !7169)
!7195 = !DILocation(line: 3646, column: 11, scope: !7176)
!7196 = !DILocation(line: 3646, column: 16, scope: !7176)
!7197 = !DILocation(line: 3646, column: 20, scope: !7176)
!7198 = !DILocation(line: 3646, column: 11, scope: !7169)
!7199 = !DILocation(line: 3648, column: 14, scope: !7174)
!7200 = !DILocation(line: 3648, column: 8, scope: !7174)
!7201 = !DILocation(line: 3648, column: 8, scope: !7175)
!7202 = !DILocation(line: 3650, column: 25, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 3649, column: 6)
!7204 = !DILocation(line: 3651, column: 18, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 3651, column: 12)
!7206 = !DILocation(line: 3651, column: 12, scope: !7205)
!7207 = !DILocation(line: 3652, column: 5, scope: !7205)
!7208 = !DILocation(line: 3652, column: 14, scope: !7205)
!7209 = !DILocation(line: 3652, column: 8, scope: !7205)
!7210 = !DILocation(line: 3651, column: 12, scope: !7203)
!7211 = !DILocation(line: 3653, column: 3, scope: !7205)
!7212 = !DILocation(line: 3657, column: 38, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 3655, column: 3)
!7214 = !DILocation(line: 3662, column: 29, scope: !7173)
!7215 = !DILocation(line: 0, scope: !7173)
!7216 = !DILocation(line: 3664, column: 27, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 3664, column: 12)
!7218 = !DILocation(line: 3664, column: 12, scope: !7173)
!7219 = !DILocation(line: 3666, column: 5, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 3665, column: 3)
!7221 = !DILocation(line: 3667, column: 22, scope: !7220)
!7222 = !DILocation(line: 3668, column: 3, scope: !7220)
!7223 = !DILocation(line: 3671, column: 23, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 3670, column: 3)
!7225 = !DILocation(line: 3672, column: 39, scope: !7224)
!7226 = !DILocation(line: 3673, column: 40, scope: !7224)
!7227 = !DILocation(line: 3680, column: 8, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 3680, column: 8)
!7229 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 3679, column: 2)
!7230 = !DILocation(line: 3680, column: 8, scope: !7229)
!7231 = !DILocation(line: 3683, column: 43, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 3681, column: 6)
!7233 = !DILocation(line: 3684, column: 6, scope: !7232)
!7234 = !DILocation(line: 3685, column: 21, scope: !7229)
!7235 = !DILocation(line: 0, scope: !7176)
!7236 = !DILocation(line: 3642, column: 38, scope: !7170)
!7237 = !DILocation(line: 3642, column: 3, scope: !7170)
!7238 = distinct !{!7238, !7192, !7239}
!7239 = !DILocation(line: 3687, column: 5, scope: !7171)
!7240 = !DILocation(line: 3689, column: 8, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 3689, column: 7)
!7242 = !DILocation(line: 3689, column: 19, scope: !7241)
!7243 = !DILocation(line: 3689, column: 16, scope: !7241)
!7244 = !DILocation(line: 3690, column: 5, scope: !7241)
!7245 = !DILocation(line: 3692, column: 7, scope: !7158)
!7246 = !DILocation(line: 3693, column: 58, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 3692, column: 7)
!7248 = !DILocation(line: 3693, column: 19, scope: !7247)
!7249 = !DILocation(line: 3693, column: 5, scope: !7247)
!7250 = !DILocation(line: 0, scope: !7247)
!7251 = !DILocation(line: 3698, column: 3, scope: !7158)
!7252 = !DILocation(line: 3699, column: 3, scope: !7158)
!7253 = !DILocation(line: 3700, column: 1, scope: !7158)
!7254 = distinct !DISubprogram(name: "modify_function", scope: !3, file: !3, line: 4088, type: !7255, scopeLine: 4089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7257)
!7255 = !DISubroutineType(types: !7256)
!7256 = !{null, !2800, !3006}
!7257 = !{!7258, !7259, !7260}
!7258 = !DILocalVariable(name: "node", arg: 1, scope: !7254, file: !3, line: 4088, type: !2800)
!7259 = !DILocalVariable(name: "adjustments", arg: 2, scope: !7254, file: !3, line: 4088, type: !3006)
!7260 = !DILocalVariable(name: "alias", scope: !7254, file: !3, line: 4090, type: !2800)
!7261 = !DILocation(line: 0, scope: !7254)
!7262 = !DILocation(line: 4091, column: 22, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 4091, column: 3)
!7264 = !DILocation(line: 4091, column: 8, scope: !7263)
!7265 = !DILocation(line: 0, scope: !7263)
!7266 = !DILocation(line: 4091, column: 3, scope: !7263)
!7267 = !DILocation(line: 4092, column: 42, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 4091, column: 3)
!7269 = !DILocation(line: 4092, column: 5, scope: !7268)
!7270 = !DILocation(line: 4091, column: 55, scope: !7268)
!7271 = !DILocation(line: 4091, column: 3, scope: !7268)
!7272 = distinct !{!7272, !7266, !7273}
!7273 = !DILocation(line: 4092, column: 67, scope: !7263)
!7274 = !DILocation(line: 4095, column: 27, scope: !7254)
!7275 = !DILocation(line: 4095, column: 3, scope: !7254)
!7276 = !DILocation(line: 4096, column: 33, scope: !7254)
!7277 = !DILocation(line: 4096, column: 3, scope: !7254)
!7278 = !DILocation(line: 4098, column: 45, scope: !7254)
!7279 = !DILocation(line: 4097, column: 3, scope: !7254)
!7280 = !DILocation(line: 4099, column: 3, scope: !7254)
!7281 = !DILocation(line: 4100, column: 3, scope: !7254)
!7282 = !DILocation(line: 4101, column: 3, scope: !7254)
!7283 = !DILocation(line: 4103, column: 1, scope: !7254)
!7284 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_heap_free", scope: !2053, file: !2053, line: 485, type: !7285, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7288)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{null, !7287}
!7287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!7288 = !{!7289}
!7289 = !DILocalVariable(name: "vec_", arg: 1, scope: !7284, file: !2053, line: 485, type: !7287)
!7290 = !DILocation(line: 0, scope: !7284)
!7291 = !DILocation(line: 485, column: 1, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7284, file: !2053, line: 485, column: 1)
!7293 = !DILocation(line: 485, column: 1, scope: !7284)
!7294 = distinct !DISubprogram(name: "is_unused_scalar_param", scope: !3, file: !3, line: 2900, type: !4225, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7295)
!7295 = !{!7296, !7297}
!7296 = !DILocalVariable(name: "parm", arg: 1, scope: !7294, file: !3, line: 2900, type: !689)
!7297 = !DILocalVariable(name: "name", scope: !7294, file: !3, line: 2902, type: !689)
!7298 = !DILocation(line: 0, scope: !7294)
!7299 = !DILocation(line: 2903, column: 11, scope: !7294)
!7300 = !DILocation(line: 2904, column: 4, scope: !7294)
!7301 = !DILocation(line: 2904, column: 37, scope: !7294)
!7302 = !DILocation(line: 2904, column: 17, scope: !7294)
!7303 = !DILocation(line: 2904, column: 15, scope: !7294)
!7304 = !DILocation(line: 2905, column: 8, scope: !7294)
!7305 = !DILocation(line: 2905, column: 11, scope: !7294)
!7306 = !DILocation(line: 2903, column: 3, scope: !7294)
!7307 = distinct !DISubprogram(name: "ptr_parm_has_direct_uses", scope: !3, file: !3, line: 2914, type: !4225, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7308)
!7308 = !{!7309, !7310, !7318, !7319, !7320, !7321, !7325, !7326, !7329, !7332, !7335}
!7309 = !DILocalVariable(name: "parm", arg: 1, scope: !7307, file: !3, line: 2914, type: !689)
!7310 = !DILocalVariable(name: "ui", scope: !7307, file: !3, line: 2916, type: !7311)
!7311 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1350, line: 249, baseType: !7312)
!7312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1350, line: 238, size: 448, elements: !7313)
!7313 = !{!7314, !7315, !7316, !7317}
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !7312, file: !1350, line: 241, baseType: !2044, size: 64)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !7312, file: !1350, line: 243, baseType: !2044, size: 64, offset: 64)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !7312, file: !1350, line: 245, baseType: !2045, size: 256, offset: 128)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !7312, file: !1350, line: 248, baseType: !2044, size: 64, offset: 384)
!7318 = !DILocalVariable(name: "stmt", scope: !7307, file: !3, line: 2917, type: !1011)
!7319 = !DILocalVariable(name: "name", scope: !7307, file: !3, line: 2918, type: !689)
!7320 = !DILocalVariable(name: "ret", scope: !7307, file: !3, line: 2919, type: !679)
!7321 = !DILocalVariable(name: "uses_ok", scope: !7322, file: !3, line: 2923, type: !680)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 2922, column: 5)
!7323 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 2921, column: 3)
!7324 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 2921, column: 3)
!7325 = !DILocalVariable(name: "use_p", scope: !7322, file: !3, line: 2924, type: !2043)
!7326 = !DILocalVariable(name: "lhs", scope: !7327, file: !3, line: 2932, type: !689)
!7327 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 2931, column: 2)
!7328 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2930, column: 11)
!7329 = !DILocalVariable(name: "rhs", scope: !7330, file: !3, line: 2941, type: !689)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 2940, column: 2)
!7331 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2939, column: 11)
!7332 = !DILocalVariable(name: "i", scope: !7333, file: !3, line: 2950, type: !7)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 2949, column: 2)
!7334 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 2948, column: 16)
!7335 = !DILocalVariable(name: "arg", scope: !7336, file: !3, line: 2953, type: !689)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 2952, column: 6)
!7337 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 2951, column: 4)
!7338 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 2951, column: 4)
!7339 = !DILocation(line: 0, scope: !7307)
!7340 = !DILocation(line: 2916, column: 3, scope: !7307)
!7341 = !DILocation(line: 2918, column: 35, scope: !7307)
!7342 = !DILocation(line: 2918, column: 15, scope: !7307)
!7343 = !DILocation(line: 2921, column: 3, scope: !7324)
!7344 = !DILocation(line: 2919, column: 8, scope: !7307)
!7345 = !DILocation(line: 0, scope: !7324)
!7346 = !DILocation(line: 2921, column: 3, scope: !7323)
!7347 = !DILocation(line: 0, scope: !7322)
!7348 = !DILocation(line: 2926, column: 11, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2926, column: 11)
!7350 = !DILocation(line: 2926, column: 11, scope: !7322)
!7351 = !DILocation(line: 2930, column: 11, scope: !7328)
!7352 = !DILocation(line: 2930, column: 11, scope: !7322)
!7353 = !DILocation(line: 2932, column: 15, scope: !7327)
!7354 = !DILocation(line: 0, scope: !7327)
!7355 = !DILocation(line: 2933, column: 4, scope: !7327)
!7356 = !DILocation(line: 2933, column: 11, scope: !7327)
!7357 = !DILocation(line: 2934, column: 12, scope: !7327)
!7358 = distinct !{!7358, !7355, !7357}
!7359 = !DILocation(line: 2935, column: 8, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 2935, column: 8)
!7361 = !DILocation(line: 2936, column: 8, scope: !7360)
!7362 = !DILocation(line: 2936, column: 11, scope: !7360)
!7363 = !DILocation(line: 2936, column: 33, scope: !7360)
!7364 = !DILocation(line: 2935, column: 8, scope: !7327)
!7365 = !DILocation(line: 2939, column: 11, scope: !7331)
!7366 = !DILocation(line: 2939, column: 11, scope: !7322)
!7367 = !DILocation(line: 2941, column: 15, scope: !7330)
!7368 = !DILocation(line: 0, scope: !7330)
!7369 = !DILocation(line: 2942, column: 4, scope: !7330)
!7370 = !DILocation(line: 2942, column: 11, scope: !7330)
!7371 = !DILocation(line: 2943, column: 12, scope: !7330)
!7372 = distinct !{!7372, !7369, !7371}
!7373 = !DILocation(line: 2944, column: 8, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 2944, column: 8)
!7375 = !DILocation(line: 2945, column: 8, scope: !7374)
!7376 = !DILocation(line: 2945, column: 11, scope: !7374)
!7377 = !DILocation(line: 2945, column: 33, scope: !7374)
!7378 = !DILocation(line: 2944, column: 8, scope: !7330)
!7379 = !DILocation(line: 2948, column: 16, scope: !7334)
!7380 = !DILocation(line: 2948, column: 16, scope: !7331)
!7381 = !DILocation(line: 2951, column: 4, scope: !7338)
!7382 = !DILocation(line: 0, scope: !7338)
!7383 = !DILocation(line: 0, scope: !7333)
!7384 = !DILocation(line: 2951, column: 20, scope: !7337)
!7385 = !DILocation(line: 2951, column: 18, scope: !7337)
!7386 = !DILocation(line: 2953, column: 19, scope: !7336)
!7387 = !DILocation(line: 0, scope: !7336)
!7388 = !DILocation(line: 2954, column: 8, scope: !7336)
!7389 = !DILocation(line: 2954, column: 15, scope: !7336)
!7390 = !DILocation(line: 2955, column: 9, scope: !7336)
!7391 = distinct !{!7391, !7388, !7390}
!7392 = !DILocation(line: 2956, column: 12, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2956, column: 12)
!7394 = !DILocation(line: 2957, column: 5, scope: !7393)
!7395 = !DILocation(line: 2957, column: 8, scope: !7393)
!7396 = !DILocation(line: 2957, column: 30, scope: !7393)
!7397 = !DILocation(line: 2956, column: 12, scope: !7336)
!7398 = !DILocation(line: 2951, column: 49, scope: !7337)
!7399 = !DILocation(line: 2951, column: 4, scope: !7337)
!7400 = distinct !{!7400, !7381, !7401}
!7401 = !DILocation(line: 2959, column: 6, scope: !7338)
!7402 = !DILocation(line: 2964, column: 7, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2964, column: 7)
!7404 = !DILocation(line: 2964, column: 7, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 2964, column: 7)
!7406 = !DILocation(line: 2965, column: 2, scope: !7405)
!7407 = distinct !{!7407, !7402, !7408}
!7408 = !DILocation(line: 2965, column: 4, scope: !7403)
!7409 = !DILocation(line: 2967, column: 19, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2967, column: 11)
!7411 = !DILocation(line: 2967, column: 11, scope: !7322)
!7412 = !DILocation(line: 2970, column: 11, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2970, column: 11)
!7414 = !DILocation(line: 2970, column: 11, scope: !7322)
!7415 = !DILocation(line: 2971, column: 2, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 2971, column: 2)
!7417 = distinct !{!7417, !7343, !7418}
!7418 = !DILocation(line: 2972, column: 5, scope: !7324)
!7419 = !DILocation(line: 2975, column: 1, scope: !7307)
!7420 = !DILocation(line: 2974, column: 3, scope: !7307)
!7421 = distinct !DISubprogram(name: "has_zero_uses", scope: !4200, file: !4200, line: 332, type: !4727, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7422)
!7422 = !{!7423, !7424}
!7423 = !DILocalVariable(name: "var", arg: 1, scope: !7421, file: !4200, line: 332, type: !4729)
!7424 = !DILocalVariable(name: "ptr", scope: !7421, file: !4200, line: 334, type: !7425)
!7425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7426)
!7426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7427, size: 64)
!7427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!7428 = !DILocation(line: 0, scope: !7421)
!7429 = !DILocation(line: 334, column: 42, scope: !7421)
!7430 = !DILocation(line: 337, column: 19, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7421, file: !4200, line: 337, column: 7)
!7432 = !DILocation(line: 337, column: 11, scope: !7431)
!7433 = !DILocation(line: 337, column: 7, scope: !7421)
!7434 = !DILocation(line: 342, column: 8, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7421, file: !4200, line: 342, column: 7)
!7436 = !DILocation(line: 342, column: 7, scope: !7421)
!7437 = !DILocation(line: 345, column: 10, scope: !7421)
!7438 = !DILocation(line: 345, column: 3, scope: !7421)
!7439 = !DILocation(line: 346, column: 1, scope: !7421)
!7440 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !4200, file: !4200, line: 1058, type: !7441, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7444)
!7441 = !DISubroutineType(types: !7442)
!7442 = !{!1011, !7443, !689}
!7443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7311, size: 64)
!7444 = !{!7445, !7446}
!7445 = !DILocalVariable(name: "imm", arg: 1, scope: !7440, file: !4200, line: 1058, type: !7443)
!7446 = !DILocalVariable(name: "var", arg: 2, scope: !7440, file: !4200, line: 1058, type: !689)
!7447 = !DILocation(line: 0, scope: !7440)
!7448 = !DILocation(line: 1060, column: 18, scope: !7440)
!7449 = !DILocation(line: 1060, column: 8, scope: !7440)
!7450 = !DILocation(line: 1060, column: 14, scope: !7440)
!7451 = !DILocation(line: 1061, column: 30, scope: !7440)
!7452 = !DILocation(line: 1061, column: 16, scope: !7440)
!7453 = !DILocation(line: 1062, column: 8, scope: !7440)
!7454 = !DILocation(line: 1062, column: 22, scope: !7440)
!7455 = !DILocation(line: 1067, column: 18, scope: !7440)
!7456 = !DILocation(line: 1067, column: 23, scope: !7440)
!7457 = !DILocation(line: 1068, column: 18, scope: !7440)
!7458 = !DILocation(line: 1068, column: 23, scope: !7440)
!7459 = !DILocation(line: 1069, column: 22, scope: !7440)
!7460 = !DILocation(line: 1069, column: 27, scope: !7440)
!7461 = !DILocation(line: 1070, column: 18, scope: !7440)
!7462 = !DILocation(line: 1070, column: 22, scope: !7440)
!7463 = !DILocation(line: 1072, column: 7, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7440, file: !4200, line: 1072, column: 7)
!7465 = !DILocation(line: 1072, column: 7, scope: !7440)
!7466 = !DILocation(line: 1075, column: 30, scope: !7440)
!7467 = !DILocation(line: 1075, column: 3, scope: !7440)
!7468 = !DILocation(line: 1077, column: 10, scope: !7440)
!7469 = !DILocation(line: 1077, column: 3, scope: !7440)
!7470 = !DILocation(line: 1078, column: 1, scope: !7440)
!7471 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !4200, file: !4200, line: 969, type: !7472, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7476)
!7472 = !DISubroutineType(types: !7473)
!7473 = !{!679, !7474}
!7474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7475, size: 64)
!7475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7311)
!7476 = !{!7477}
!7477 = !DILocalVariable(name: "imm", arg: 1, scope: !7471, file: !4200, line: 969, type: !7474)
!7478 = !DILocation(line: 0, scope: !7471)
!7479 = !DILocation(line: 971, column: 16, scope: !7471)
!7480 = !DILocation(line: 971, column: 32, scope: !7471)
!7481 = !DILocation(line: 971, column: 24, scope: !7471)
!7482 = !DILocation(line: 971, column: 10, scope: !7471)
!7483 = !DILocation(line: 971, column: 3, scope: !7471)
!7484 = distinct !DISubprogram(name: "is_gimple_debug", scope: !571, file: !571, line: 3249, type: !4629, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7485)
!7485 = !{!7486}
!7486 = !DILocalVariable(name: "gs", arg: 1, scope: !7484, file: !571, line: 3249, type: !4429)
!7487 = !DILocation(line: 0, scope: !7484)
!7488 = !DILocation(line: 3251, column: 10, scope: !7484)
!7489 = !DILocation(line: 3251, column: 27, scope: !7484)
!7490 = !DILocation(line: 3251, column: 3, scope: !7484)
!7491 = distinct !DISubprogram(name: "gimple_has_lhs", scope: !571, file: !571, line: 2210, type: !4479, scopeLine: 2211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7492)
!7492 = !{!7493}
!7493 = !DILocalVariable(name: "stmt", arg: 1, scope: !7491, file: !571, line: 2210, type: !1011)
!7494 = !DILocation(line: 0, scope: !7491)
!7495 = !DILocation(line: 2212, column: 11, scope: !7491)
!7496 = !DILocation(line: 2213, column: 4, scope: !7491)
!7497 = !DILocation(line: 2213, column: 8, scope: !7491)
!7498 = !DILocation(line: 2214, column: 8, scope: !7491)
!7499 = !DILocation(line: 2214, column: 11, scope: !7491)
!7500 = !DILocation(line: 2214, column: 34, scope: !7491)
!7501 = !DILocation(line: 2212, column: 3, scope: !7491)
!7502 = distinct !DISubprogram(name: "is_gimple_call", scope: !571, file: !571, line: 1870, type: !4629, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7503)
!7503 = !{!7504}
!7504 = !DILocalVariable(name: "gs", arg: 1, scope: !7502, file: !571, line: 1870, type: !4429)
!7505 = !DILocation(line: 0, scope: !7502)
!7506 = !DILocation(line: 1872, column: 10, scope: !7502)
!7507 = !DILocation(line: 1872, column: 27, scope: !7502)
!7508 = !DILocation(line: 1872, column: 3, scope: !7502)
!7509 = distinct !DISubprogram(name: "gimple_call_arg", scope: !571, file: !571, line: 2025, type: !4543, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7510)
!7510 = !{!7511, !7512}
!7511 = !DILocalVariable(name: "gs", arg: 1, scope: !7509, file: !571, line: 2025, type: !4429)
!7512 = !DILocalVariable(name: "index", arg: 2, scope: !7509, file: !571, line: 2025, type: !7)
!7513 = !DILocation(line: 0, scope: !7509)
!7514 = !DILocation(line: 2028, column: 31, scope: !7509)
!7515 = !DILocation(line: 2028, column: 10, scope: !7509)
!7516 = !DILocation(line: 2028, column: 3, scope: !7509)
!7517 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !4200, file: !4200, line: 1101, type: !7518, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7520)
!7518 = !DISubroutineType(types: !7519)
!7519 = !{!2043, !7443}
!7520 = !{!7521}
!7521 = !DILocalVariable(name: "imm", arg: 1, scope: !7517, file: !4200, line: 1101, type: !7443)
!7522 = !DILocation(line: 0, scope: !7517)
!7523 = !DILocation(line: 1103, column: 29, scope: !7517)
!7524 = !DILocation(line: 1103, column: 38, scope: !7517)
!7525 = !DILocation(line: 1103, column: 8, scope: !7517)
!7526 = !DILocation(line: 1103, column: 22, scope: !7517)
!7527 = !DILocation(line: 1104, column: 3, scope: !7517)
!7528 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !4200, file: !4200, line: 1110, type: !7472, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7529)
!7529 = !{!7530}
!7530 = !DILocalVariable(name: "imm", arg: 1, scope: !7528, file: !4200, line: 1110, type: !7474)
!7531 = !DILocation(line: 0, scope: !7528)
!7532 = !DILocation(line: 1112, column: 16, scope: !7528)
!7533 = !DILocation(line: 1112, column: 34, scope: !7528)
!7534 = !DILocation(line: 1112, column: 24, scope: !7528)
!7535 = !DILocation(line: 1112, column: 10, scope: !7528)
!7536 = !DILocation(line: 1112, column: 3, scope: !7528)
!7537 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !4200, file: !4200, line: 1118, type: !7518, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7538)
!7538 = !{!7539}
!7539 = !DILocalVariable(name: "imm", arg: 1, scope: !7537, file: !4200, line: 1118, type: !7443)
!7540 = !DILocation(line: 0, scope: !7537)
!7541 = !DILocation(line: 1120, column: 23, scope: !7537)
!7542 = !DILocation(line: 1120, column: 16, scope: !7537)
!7543 = !DILocation(line: 1121, column: 7, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7537, file: !4200, line: 1121, column: 7)
!7545 = !DILocation(line: 1121, column: 7, scope: !7537)
!7546 = !DILocation(line: 1125, column: 33, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7544, file: !4200, line: 1124, column: 5)
!7548 = !DILocation(line: 1125, column: 42, scope: !7547)
!7549 = !DILocation(line: 1125, column: 26, scope: !7547)
!7550 = !DILocation(line: 1126, column: 7, scope: !7547)
!7551 = !DILocation(line: 0, scope: !7544)
!7552 = !DILocation(line: 1128, column: 1, scope: !7537)
!7553 = distinct !DISubprogram(name: "end_imm_use_stmt_traverse", scope: !4200, file: !4200, line: 978, type: !7554, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7556)
!7554 = !DISubroutineType(types: !7555)
!7555 = !{null, !7443}
!7556 = !{!7557}
!7557 = !DILocalVariable(name: "imm", arg: 1, scope: !7553, file: !4200, line: 978, type: !7443)
!7558 = !DILocation(line: 0, scope: !7553)
!7559 = !DILocation(line: 980, column: 26, scope: !7553)
!7560 = !DILocation(line: 980, column: 3, scope: !7553)
!7561 = !DILocation(line: 981, column: 1, scope: !7553)
!7562 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !4200, file: !4200, line: 1083, type: !7563, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7565)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!1011, !7443}
!7565 = !{!7566}
!7566 = !DILocalVariable(name: "imm", arg: 1, scope: !7562, file: !4200, line: 1083, type: !7443)
!7567 = !DILocation(line: 0, scope: !7562)
!7568 = !DILocation(line: 1085, column: 33, scope: !7562)
!7569 = !DILocation(line: 1085, column: 16, scope: !7562)
!7570 = !DILocation(line: 1086, column: 7, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7562, file: !4200, line: 1086, column: 7)
!7572 = !DILocation(line: 1086, column: 7, scope: !7562)
!7573 = !DILocation(line: 1088, column: 26, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !4200, line: 1088, column: 11)
!7575 = distinct !DILexicalBlock(scope: !7571, file: !4200, line: 1087, column: 5)
!7576 = !DILocation(line: 1088, column: 31, scope: !7574)
!7577 = !DILocation(line: 1088, column: 11, scope: !7575)
!7578 = !DILocation(line: 1089, column: 24, scope: !7574)
!7579 = !DILocation(line: 1089, column: 2, scope: !7574)
!7580 = !DILocation(line: 1093, column: 30, scope: !7562)
!7581 = !DILocation(line: 1093, column: 3, scope: !7562)
!7582 = !DILocation(line: 1094, column: 10, scope: !7562)
!7583 = !DILocation(line: 1094, column: 3, scope: !7562)
!7584 = !DILocation(line: 1095, column: 1, scope: !7562)
!7585 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !4200, file: !4200, line: 1018, type: !7586, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7588)
!7586 = !DISubroutineType(types: !7587)
!7587 = !{null, !2043, !7443}
!7588 = !{!7589, !7590, !7591, !7592, !7593, !7594, !7595, !7608}
!7589 = !DILocalVariable(name: "head", arg: 1, scope: !7585, file: !4200, line: 1018, type: !2043)
!7590 = !DILocalVariable(name: "imm", arg: 2, scope: !7585, file: !4200, line: 1018, type: !7443)
!7591 = !DILocalVariable(name: "use_p", scope: !7585, file: !4200, line: 1020, type: !2043)
!7592 = !DILocalVariable(name: "last_p", scope: !7585, file: !4200, line: 1021, type: !2043)
!7593 = !DILocalVariable(name: "head_stmt", scope: !7585, file: !4200, line: 1022, type: !1011)
!7594 = !DILocalVariable(name: "use", scope: !7585, file: !4200, line: 1023, type: !689)
!7595 = !DILocalVariable(name: "op_iter", scope: !7585, file: !4200, line: 1024, type: !7596)
!7596 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !664, line: 140, baseType: !7597)
!7597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !664, line: 131, size: 320, elements: !7598)
!7598 = !{!7599, !7600, !7601, !7603, !7605, !7606, !7607}
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7597, file: !664, line: 133, baseType: !679, size: 8)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !7597, file: !664, line: 134, baseType: !663, size: 32, offset: 32)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !7597, file: !664, line: 135, baseType: !7602, size: 64, offset: 64)
!7602 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !664, line: 42, baseType: !1040)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !7597, file: !664, line: 136, baseType: !7604, size: 64, offset: 128)
!7604 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !664, line: 50, baseType: !1047)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !7597, file: !664, line: 137, baseType: !680, size: 32, offset: 192)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !7597, file: !664, line: 138, baseType: !680, size: 32, offset: 224)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !7597, file: !664, line: 139, baseType: !1011, size: 64, offset: 256)
!7608 = !DILocalVariable(name: "flag", scope: !7585, file: !4200, line: 1025, type: !680)
!7609 = !DILocation(line: 0, scope: !7585)
!7610 = !DILocation(line: 1022, column: 22, scope: !7585)
!7611 = !DILocation(line: 1023, column: 14, scope: !7585)
!7612 = !DILocation(line: 1024, column: 3, scope: !7585)
!7613 = !DILocation(line: 1028, column: 11, scope: !7585)
!7614 = !DILocation(line: 1030, column: 7, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7585, file: !4200, line: 1030, column: 7)
!7616 = !DILocation(line: 1030, column: 31, scope: !7615)
!7617 = !DILocation(line: 1030, column: 7, scope: !7585)
!7618 = !DILocation(line: 1032, column: 7, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7620, file: !4200, line: 1032, column: 7)
!7620 = distinct !DILexicalBlock(scope: !7615, file: !4200, line: 1031, column: 5)
!7621 = !DILocation(line: 0, scope: !7619)
!7622 = !DILocation(line: 1032, column: 7, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7619, file: !4200, line: 1032, column: 7)
!7624 = !DILocation(line: 1033, column: 6, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7623, file: !4200, line: 1033, column: 6)
!7626 = !DILocation(line: 1033, column: 27, scope: !7625)
!7627 = !DILocation(line: 1033, column: 6, scope: !7623)
!7628 = !DILocation(line: 1034, column: 13, scope: !7625)
!7629 = !DILocation(line: 1034, column: 4, scope: !7625)
!7630 = distinct !{!7630, !7618, !7631}
!7631 = !DILocation(line: 1034, column: 53, scope: !7619)
!7632 = !DILocation(line: 1038, column: 11, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7615, file: !4200, line: 1037, column: 5)
!7634 = !DILocation(line: 1040, column: 4, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !4200, line: 1040, column: 4)
!7636 = distinct !DILexicalBlock(scope: !7637, file: !4200, line: 1039, column: 2)
!7637 = distinct !DILexicalBlock(scope: !7633, file: !4200, line: 1038, column: 11)
!7638 = !DILocation(line: 0, scope: !7635)
!7639 = !DILocation(line: 1040, column: 4, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7635, file: !4200, line: 1040, column: 4)
!7641 = !DILocation(line: 1041, column: 10, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7640, file: !4200, line: 1041, column: 10)
!7643 = !DILocation(line: 1041, column: 31, scope: !7642)
!7644 = !DILocation(line: 1041, column: 10, scope: !7640)
!7645 = !DILocation(line: 1042, column: 17, scope: !7642)
!7646 = !DILocation(line: 1042, column: 8, scope: !7642)
!7647 = distinct !{!7647, !7634, !7648}
!7648 = !DILocation(line: 1042, column: 57, scope: !7635)
!7649 = !DILocation(line: 1044, column: 25, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7637, file: !4200, line: 1044, column: 16)
!7651 = !DILocation(line: 1044, column: 53, scope: !7650)
!7652 = !DILocation(line: 1044, column: 16, scope: !7637)
!7653 = !DILocation(line: 1046, column: 8, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !4200, line: 1046, column: 8)
!7655 = distinct !DILexicalBlock(scope: !7650, file: !4200, line: 1045, column: 2)
!7656 = !DILocation(line: 1046, column: 29, scope: !7654)
!7657 = !DILocation(line: 1046, column: 8, scope: !7655)
!7658 = !DILocation(line: 1047, column: 15, scope: !7654)
!7659 = !DILocation(line: 1047, column: 6, scope: !7654)
!7660 = !DILocation(line: 1051, column: 22, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7585, file: !4200, line: 1051, column: 7)
!7662 = !DILocation(line: 1021, column: 17, scope: !7585)
!7663 = !DILocation(line: 1051, column: 27, scope: !7661)
!7664 = !DILocation(line: 1051, column: 7, scope: !7585)
!7665 = !DILocation(line: 1052, column: 27, scope: !7661)
!7666 = !DILocation(line: 1052, column: 5, scope: !7661)
!7667 = !DILocation(line: 1053, column: 32, scope: !7585)
!7668 = !DILocation(line: 1053, column: 3, scope: !7585)
!7669 = !DILocation(line: 1054, column: 1, scope: !7585)
!7670 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !4200, file: !4200, line: 427, type: !7671, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7673)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!689, !2043}
!7673 = !{!7674}
!7674 = !DILocalVariable(name: "use", arg: 1, scope: !7670, file: !4200, line: 427, type: !2043)
!7675 = !DILocation(line: 0, scope: !7670)
!7676 = !DILocation(line: 429, column: 17, scope: !7670)
!7677 = !DILocation(line: 429, column: 10, scope: !7670)
!7678 = !DILocation(line: 429, column: 3, scope: !7670)
!7679 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !4200, file: !4200, line: 910, type: !7680, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7683)
!7680 = !DISubroutineType(types: !7681)
!7681 = !{!2043, !7682, !1011, !680}
!7682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7596, size: 64)
!7683 = !{!7684, !7685, !7686, !7687, !7688}
!7684 = !DILocalVariable(name: "ptr", arg: 1, scope: !7679, file: !4200, line: 910, type: !7682)
!7685 = !DILocalVariable(name: "phi", arg: 2, scope: !7679, file: !4200, line: 910, type: !1011)
!7686 = !DILocalVariable(name: "flags", arg: 3, scope: !7679, file: !4200, line: 910, type: !680)
!7687 = !DILocalVariable(name: "phi_def", scope: !7679, file: !4200, line: 912, type: !689)
!7688 = !DILocalVariable(name: "comp", scope: !7679, file: !4200, line: 913, type: !680)
!7689 = !DILocation(line: 0, scope: !7679)
!7690 = !DILocation(line: 912, column: 18, scope: !7679)
!7691 = !DILocation(line: 915, column: 3, scope: !7679)
!7692 = !DILocation(line: 916, column: 8, scope: !7679)
!7693 = !DILocation(line: 916, column: 13, scope: !7679)
!7694 = !DILocation(line: 918, column: 3, scope: !7679)
!7695 = !DILocation(line: 920, column: 11, scope: !7679)
!7696 = !DILocation(line: 923, column: 14, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7679, file: !4200, line: 923, column: 7)
!7698 = !DILocation(line: 923, column: 22, scope: !7697)
!7699 = !DILocation(line: 923, column: 7, scope: !7679)
!7700 = !DILocation(line: 925, column: 17, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7697, file: !4200, line: 924, column: 5)
!7702 = !DILocation(line: 926, column: 7, scope: !7701)
!7703 = !DILocation(line: 929, column: 8, scope: !7679)
!7704 = !DILocation(line: 929, column: 17, scope: !7679)
!7705 = !DILocation(line: 930, column: 18, scope: !7679)
!7706 = !DILocation(line: 930, column: 8, scope: !7679)
!7707 = !DILocation(line: 930, column: 16, scope: !7679)
!7708 = !DILocation(line: 931, column: 8, scope: !7679)
!7709 = !DILocation(line: 931, column: 18, scope: !7679)
!7710 = !DILocation(line: 932, column: 10, scope: !7679)
!7711 = !DILocation(line: 932, column: 3, scope: !7679)
!7712 = !DILocation(line: 933, column: 1, scope: !7679)
!7713 = distinct !DISubprogram(name: "op_iter_done", scope: !4200, file: !4200, line: 652, type: !7714, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7718)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{!679, !7716}
!7716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7717, size: 64)
!7717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7596)
!7718 = !{!7719}
!7719 = !DILocalVariable(name: "ptr", arg: 1, scope: !7713, file: !4200, line: 652, type: !7716)
!7720 = !DILocation(line: 0, scope: !7713)
!7721 = !DILocation(line: 654, column: 15, scope: !7713)
!7722 = !DILocation(line: 654, column: 3, scope: !7713)
!7723 = distinct !DISubprogram(name: "move_use_after_head", scope: !4200, file: !4200, line: 990, type: !7724, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7726)
!7724 = !DISubroutineType(types: !7725)
!7725 = !{!2043, !2043, !2043, !2043}
!7726 = !{!7727, !7728, !7729}
!7727 = !DILocalVariable(name: "use_p", arg: 1, scope: !7723, file: !4200, line: 990, type: !2043)
!7728 = !DILocalVariable(name: "head", arg: 2, scope: !7723, file: !4200, line: 990, type: !2043)
!7729 = !DILocalVariable(name: "last_p", arg: 3, scope: !7723, file: !4200, line: 991, type: !2043)
!7730 = !DILocation(line: 0, scope: !7723)
!7731 = !DILocation(line: 997, column: 13, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7723, file: !4200, line: 997, column: 7)
!7733 = !DILocation(line: 997, column: 7, scope: !7723)
!7734 = !DILocation(line: 1000, column: 19, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !4200, line: 1000, column: 11)
!7736 = distinct !DILexicalBlock(scope: !7732, file: !4200, line: 998, column: 5)
!7737 = !DILocation(line: 1000, column: 24, scope: !7735)
!7738 = !DILocation(line: 1000, column: 11, scope: !7736)
!7739 = !DILocation(line: 1005, column: 4, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7735, file: !4200, line: 1003, column: 2)
!7741 = !DILocation(line: 1006, column: 4, scope: !7740)
!7742 = !DILocation(line: 1010, column: 3, scope: !7723)
!7743 = distinct !DISubprogram(name: "op_iter_next_use", scope: !4200, file: !4200, line: 659, type: !7744, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7746)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{!2043, !7682}
!7746 = !{!7747, !7748}
!7747 = !DILocalVariable(name: "ptr", arg: 1, scope: !7743, file: !4200, line: 659, type: !7682)
!7748 = !DILocalVariable(name: "use_p", scope: !7743, file: !4200, line: 661, type: !2043)
!7749 = !DILocation(line: 0, scope: !7743)
!7750 = !DILocation(line: 665, column: 12, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7743, file: !4200, line: 665, column: 7)
!7752 = !DILocation(line: 665, column: 7, scope: !7751)
!7753 = !DILocation(line: 665, column: 7, scope: !7743)
!7754 = !DILocation(line: 667, column: 15, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7751, file: !4200, line: 666, column: 5)
!7756 = !DILocation(line: 668, column: 30, scope: !7755)
!7757 = !DILocation(line: 668, column: 17, scope: !7755)
!7758 = !DILocation(line: 669, column: 7, scope: !7755)
!7759 = !DILocation(line: 671, column: 12, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7743, file: !4200, line: 671, column: 7)
!7761 = !DILocation(line: 671, column: 25, scope: !7760)
!7762 = !DILocation(line: 671, column: 18, scope: !7760)
!7763 = !DILocation(line: 671, column: 7, scope: !7743)
!7764 = !DILocation(line: 673, column: 14, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7760, file: !4200, line: 672, column: 5)
!7766 = !DILocation(line: 673, column: 7, scope: !7765)
!7767 = !DILocation(line: 675, column: 8, scope: !7743)
!7768 = !DILocation(line: 675, column: 13, scope: !7743)
!7769 = !DILocation(line: 676, column: 3, scope: !7743)
!7770 = !DILocation(line: 677, column: 1, scope: !7743)
!7771 = distinct !DISubprogram(name: "op_iter_init_use", scope: !4200, file: !4200, line: 768, type: !7680, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7772)
!7772 = !{!7773, !7774, !7775}
!7773 = !DILocalVariable(name: "ptr", arg: 1, scope: !7771, file: !4200, line: 768, type: !7682)
!7774 = !DILocalVariable(name: "stmt", arg: 2, scope: !7771, file: !4200, line: 768, type: !1011)
!7775 = !DILocalVariable(name: "flags", arg: 3, scope: !7771, file: !4200, line: 768, type: !680)
!7776 = !DILocation(line: 0, scope: !7771)
!7777 = !DILocation(line: 770, column: 3, scope: !7771)
!7778 = !DILocation(line: 772, column: 3, scope: !7771)
!7779 = !DILocation(line: 773, column: 8, scope: !7771)
!7780 = !DILocation(line: 773, column: 18, scope: !7771)
!7781 = !DILocation(line: 774, column: 10, scope: !7771)
!7782 = !DILocation(line: 774, column: 3, scope: !7771)
!7783 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !571, file: !571, line: 1334, type: !7784, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7786)
!7784 = !DISubroutineType(types: !7785)
!7785 = !{!2043, !4429}
!7786 = !{!7787, !7788}
!7787 = !DILocalVariable(name: "g", arg: 1, scope: !7783, file: !571, line: 1334, type: !4429)
!7788 = !DILocalVariable(name: "ops", scope: !7783, file: !571, line: 1336, type: !1047)
!7789 = !DILocation(line: 0, scope: !7783)
!7790 = !DILocation(line: 1337, column: 8, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7783, file: !571, line: 1337, column: 7)
!7792 = !DILocation(line: 1337, column: 7, scope: !7783)
!7793 = !DILocation(line: 1339, column: 25, scope: !7783)
!7794 = !DILocation(line: 1340, column: 7, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7783, file: !571, line: 1340, column: 7)
!7796 = !DILocation(line: 1341, column: 7, scope: !7795)
!7797 = !DILocation(line: 1341, column: 28, scope: !7795)
!7798 = !DILocation(line: 1341, column: 49, scope: !7795)
!7799 = !DILocation(line: 1341, column: 32, scope: !7795)
!7800 = !DILocation(line: 1342, column: 12, scope: !7795)
!7801 = !DILocation(line: 1340, column: 7, scope: !7783)
!7802 = !DILocation(line: 1344, column: 1, scope: !7783)
!7803 = distinct !DISubprogram(name: "delink_imm_use", scope: !4200, file: !4200, line: 188, type: !7804, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7806)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{null, !2044}
!7806 = !{!7807}
!7807 = !DILocalVariable(name: "linknode", arg: 1, scope: !7803, file: !4200, line: 188, type: !2044)
!7808 = !DILocation(line: 0, scope: !7803)
!7809 = !DILocation(line: 191, column: 17, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7803, file: !4200, line: 191, column: 7)
!7811 = !DILocation(line: 191, column: 22, scope: !7810)
!7812 = !DILocation(line: 191, column: 7, scope: !7803)
!7813 = !DILocation(line: 194, column: 36, scope: !7803)
!7814 = !DILocation(line: 194, column: 19, scope: !7803)
!7815 = !DILocation(line: 194, column: 24, scope: !7803)
!7816 = !DILocation(line: 195, column: 36, scope: !7803)
!7817 = !DILocation(line: 195, column: 13, scope: !7803)
!7818 = !DILocation(line: 195, column: 24, scope: !7803)
!7819 = !DILocation(line: 196, column: 18, scope: !7803)
!7820 = !DILocation(line: 197, column: 18, scope: !7803)
!7821 = !DILocation(line: 198, column: 1, scope: !7803)
!7822 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !4200, file: !4200, line: 202, type: !7823, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7825)
!7823 = !DISubroutineType(types: !7824)
!7824 = !{null, !2044, !2044}
!7825 = !{!7826, !7827}
!7826 = !DILocalVariable(name: "linknode", arg: 1, scope: !7822, file: !4200, line: 202, type: !2044)
!7827 = !DILocalVariable(name: "list", arg: 2, scope: !7822, file: !4200, line: 202, type: !2044)
!7828 = !DILocation(line: 0, scope: !7822)
!7829 = !DILocation(line: 206, column: 13, scope: !7822)
!7830 = !DILocation(line: 206, column: 18, scope: !7822)
!7831 = !DILocation(line: 207, column: 26, scope: !7822)
!7832 = !DILocation(line: 207, column: 13, scope: !7822)
!7833 = !DILocation(line: 207, column: 18, scope: !7822)
!7834 = !DILocation(line: 208, column: 9, scope: !7822)
!7835 = !DILocation(line: 208, column: 15, scope: !7822)
!7836 = !DILocation(line: 208, column: 20, scope: !7822)
!7837 = !DILocation(line: 209, column: 14, scope: !7822)
!7838 = !DILocation(line: 210, column: 1, scope: !7822)
!7839 = distinct !DISubprogram(name: "gimple_phi_result", scope: !571, file: !571, line: 3071, type: !4464, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7840)
!7840 = !{!7841}
!7841 = !DILocalVariable(name: "gs", arg: 1, scope: !7839, file: !571, line: 3071, type: !4429)
!7842 = !DILocation(line: 0, scope: !7839)
!7843 = !DILocation(line: 3074, column: 25, scope: !7839)
!7844 = !DILocation(line: 3074, column: 3, scope: !7839)
!7845 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !4200, file: !4200, line: 729, type: !7846, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7848)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{null, !7682}
!7848 = !{!7849}
!7849 = !DILocalVariable(name: "ptr", arg: 1, scope: !7845, file: !4200, line: 729, type: !7682)
!7850 = !DILocation(line: 0, scope: !7845)
!7851 = !DILocation(line: 731, column: 8, scope: !7845)
!7852 = !DILocation(line: 731, column: 13, scope: !7845)
!7853 = !DILocation(line: 732, column: 8, scope: !7845)
!7854 = !DILocation(line: 732, column: 13, scope: !7845)
!7855 = !DILocation(line: 733, column: 8, scope: !7845)
!7856 = !DILocation(line: 733, column: 18, scope: !7845)
!7857 = !DILocation(line: 734, column: 8, scope: !7845)
!7858 = !DILocation(line: 734, column: 14, scope: !7845)
!7859 = !DILocation(line: 735, column: 8, scope: !7845)
!7860 = !DILocation(line: 735, column: 16, scope: !7845)
!7861 = !DILocation(line: 736, column: 8, scope: !7845)
!7862 = !DILocation(line: 736, column: 17, scope: !7845)
!7863 = !DILocation(line: 737, column: 8, scope: !7845)
!7864 = !DILocation(line: 737, column: 13, scope: !7845)
!7865 = !DILocation(line: 738, column: 1, scope: !7845)
!7866 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !571, file: !571, line: 3061, type: !4444, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7867)
!7867 = !{!7868}
!7868 = !DILocalVariable(name: "gs", arg: 1, scope: !7866, file: !571, line: 3061, type: !4429)
!7869 = !DILocation(line: 0, scope: !7866)
!7870 = !DILocation(line: 3064, column: 25, scope: !7866)
!7871 = !DILocation(line: 3064, column: 3, scope: !7866)
!7872 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !4200, file: !4200, line: 442, type: !7873, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7875)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{!2043, !1011, !680}
!7875 = !{!7876, !7877}
!7876 = !DILocalVariable(name: "gs", arg: 1, scope: !7872, file: !4200, line: 442, type: !1011)
!7877 = !DILocalVariable(name: "i", arg: 2, scope: !7872, file: !4200, line: 442, type: !680)
!7878 = !DILocation(line: 0, scope: !7872)
!7879 = !DILocation(line: 444, column: 11, scope: !7872)
!7880 = !DILocation(line: 444, column: 35, scope: !7872)
!7881 = !DILocation(line: 444, column: 3, scope: !7872)
!7882 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !571, file: !571, line: 3100, type: !7883, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7886)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{!7885, !1011, !7}
!7885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!7886 = !{!7887, !7888}
!7887 = !DILocalVariable(name: "gs", arg: 1, scope: !7882, file: !571, line: 3100, type: !1011)
!7888 = !DILocalVariable(name: "index", arg: 2, scope: !7882, file: !571, line: 3100, type: !7)
!7889 = !DILocation(line: 0, scope: !7882)
!7890 = !DILocation(line: 3103, column: 3, scope: !7882)
!7891 = !DILocation(line: 3104, column: 12, scope: !7882)
!7892 = !DILocation(line: 3104, column: 3, scope: !7882)
!7893 = distinct !DISubprogram(name: "op_iter_init", scope: !4200, file: !4200, line: 742, type: !7894, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7896)
!7894 = !DISubroutineType(types: !7895)
!7895 = !{null, !7682, !1011, !680}
!7896 = !{!7897, !7898, !7899}
!7897 = !DILocalVariable(name: "ptr", arg: 1, scope: !7893, file: !4200, line: 742, type: !7682)
!7898 = !DILocalVariable(name: "stmt", arg: 2, scope: !7893, file: !4200, line: 742, type: !1011)
!7899 = !DILocalVariable(name: "flags", arg: 3, scope: !7893, file: !4200, line: 742, type: !680)
!7900 = !DILocation(line: 0, scope: !7893)
!7901 = !DILocation(line: 746, column: 3, scope: !7893)
!7902 = !DILocation(line: 748, column: 22, scope: !7893)
!7903 = !DILocation(line: 748, column: 15, scope: !7893)
!7904 = !DILocation(line: 748, column: 52, scope: !7893)
!7905 = !DILocation(line: 748, column: 8, scope: !7893)
!7906 = !DILocation(line: 748, column: 13, scope: !7893)
!7907 = !DILocation(line: 749, column: 15, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7893, file: !4200, line: 749, column: 7)
!7909 = !DILocation(line: 750, column: 7, scope: !7908)
!7910 = !DILocation(line: 750, column: 10, scope: !7908)
!7911 = !DILocation(line: 751, column: 7, scope: !7908)
!7912 = !DILocation(line: 751, column: 10, scope: !7908)
!7913 = !DILocation(line: 751, column: 29, scope: !7908)
!7914 = !DILocation(line: 749, column: 7, scope: !7893)
!7915 = !DILocation(line: 752, column: 22, scope: !7908)
!7916 = !DILocation(line: 752, column: 28, scope: !7908)
!7917 = !DILocation(line: 752, column: 15, scope: !7908)
!7918 = !DILocation(line: 752, column: 5, scope: !7908)
!7919 = !DILocation(line: 753, column: 22, scope: !7893)
!7920 = !DILocation(line: 753, column: 15, scope: !7893)
!7921 = !DILocation(line: 753, column: 52, scope: !7893)
!7922 = !DILocation(line: 753, column: 8, scope: !7893)
!7923 = !DILocation(line: 753, column: 13, scope: !7893)
!7924 = !DILocation(line: 754, column: 15, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7893, file: !4200, line: 754, column: 7)
!7926 = !DILocation(line: 755, column: 7, scope: !7925)
!7927 = !DILocation(line: 755, column: 10, scope: !7925)
!7928 = !DILocation(line: 756, column: 7, scope: !7925)
!7929 = !DILocation(line: 756, column: 10, scope: !7925)
!7930 = !DILocation(line: 756, column: 29, scope: !7925)
!7931 = !DILocation(line: 754, column: 7, scope: !7893)
!7932 = !DILocation(line: 757, column: 22, scope: !7925)
!7933 = !DILocation(line: 757, column: 28, scope: !7925)
!7934 = !DILocation(line: 757, column: 15, scope: !7925)
!7935 = !DILocation(line: 757, column: 5, scope: !7925)
!7936 = !DILocation(line: 758, column: 8, scope: !7893)
!7937 = !DILocation(line: 758, column: 13, scope: !7893)
!7938 = !DILocation(line: 760, column: 8, scope: !7893)
!7939 = !DILocation(line: 760, column: 14, scope: !7893)
!7940 = !DILocation(line: 761, column: 8, scope: !7893)
!7941 = !DILocation(line: 761, column: 16, scope: !7893)
!7942 = !DILocation(line: 762, column: 8, scope: !7893)
!7943 = !DILocation(line: 762, column: 17, scope: !7893)
!7944 = !DILocation(line: 763, column: 1, scope: !7893)
!7945 = distinct !DISubprogram(name: "gimple_def_ops", scope: !571, file: !571, line: 1292, type: !7946, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7948)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{!1040, !4429}
!7948 = !{!7949}
!7949 = !DILocalVariable(name: "g", arg: 1, scope: !7945, file: !571, line: 1292, type: !4429)
!7950 = !DILocation(line: 0, scope: !7945)
!7951 = !DILocation(line: 1294, column: 8, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7945, file: !571, line: 1294, column: 7)
!7953 = !DILocation(line: 1294, column: 7, scope: !7945)
!7954 = !DILocation(line: 1296, column: 26, scope: !7945)
!7955 = !DILocation(line: 1296, column: 3, scope: !7945)
!7956 = !DILocation(line: 1297, column: 1, scope: !7945)
!7957 = distinct !DISubprogram(name: "gimple_vdef", scope: !571, file: !571, line: 1375, type: !4464, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7958)
!7958 = !{!7959}
!7959 = !DILocalVariable(name: "g", arg: 1, scope: !7957, file: !571, line: 1375, type: !4429)
!7960 = !DILocation(line: 0, scope: !7957)
!7961 = !DILocation(line: 1377, column: 8, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7957, file: !571, line: 1377, column: 7)
!7963 = !DILocation(line: 1377, column: 7, scope: !7957)
!7964 = !DILocation(line: 1379, column: 23, scope: !7957)
!7965 = !DILocation(line: 1379, column: 3, scope: !7957)
!7966 = !DILocation(line: 1380, column: 1, scope: !7957)
!7967 = distinct !DISubprogram(name: "gimple_use_ops", scope: !571, file: !571, line: 1313, type: !7968, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7970)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!1047, !4429}
!7970 = !{!7971}
!7971 = !DILocalVariable(name: "g", arg: 1, scope: !7967, file: !571, line: 1313, type: !4429)
!7972 = !DILocation(line: 0, scope: !7967)
!7973 = !DILocation(line: 1315, column: 8, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7967, file: !571, line: 1315, column: 7)
!7975 = !DILocation(line: 1315, column: 7, scope: !7967)
!7976 = !DILocation(line: 1317, column: 26, scope: !7967)
!7977 = !DILocation(line: 1317, column: 3, scope: !7967)
!7978 = !DILocation(line: 1318, column: 1, scope: !7967)
!7979 = distinct !DISubprogram(name: "gimple_vuse", scope: !571, file: !571, line: 1365, type: !4464, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7980)
!7980 = !{!7981}
!7981 = !DILocalVariable(name: "g", arg: 1, scope: !7979, file: !571, line: 1365, type: !4429)
!7982 = !DILocation(line: 0, scope: !7979)
!7983 = !DILocation(line: 1367, column: 8, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7979, file: !571, line: 1367, column: 7)
!7985 = !DILocation(line: 1367, column: 7, scope: !7979)
!7986 = !DILocation(line: 1369, column: 23, scope: !7979)
!7987 = !DILocation(line: 1369, column: 3, scope: !7979)
!7988 = !DILocation(line: 1370, column: 1, scope: !7979)
!7989 = distinct !DISubprogram(name: "is_gimple_assign", scope: !571, file: !571, line: 1677, type: !4629, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7990)
!7990 = !{!7991}
!7991 = !DILocalVariable(name: "gs", arg: 1, scope: !7989, file: !571, line: 1677, type: !4429)
!7992 = !DILocation(line: 0, scope: !7989)
!7993 = !DILocation(line: 1679, column: 10, scope: !7989)
!7994 = !DILocation(line: 1679, column: 27, scope: !7989)
!7995 = !DILocation(line: 1679, column: 3, scope: !7989)
!7996 = distinct !DISubprogram(name: "splice_all_param_accesses", scope: !3, file: !3, line: 3478, type: !7997, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7999)
!7997 = !DISubroutineType(types: !7998)
!7998 = !{!670, !2038}
!7999 = !{!8000, !8001, !8002, !8003, !8004}
!8000 = !DILocalVariable(name: "representatives", arg: 1, scope: !7996, file: !3, line: 3478, type: !2038)
!8001 = !DILocalVariable(name: "result", scope: !7996, file: !3, line: 3480, type: !670)
!8002 = !DILocalVariable(name: "parm", scope: !7996, file: !3, line: 3481, type: !689)
!8003 = !DILocalVariable(name: "repr", scope: !7996, file: !3, line: 3482, type: !1986)
!8004 = !DILocalVariable(name: "ro_grp", scope: !8005, file: !3, line: 3508, type: !679)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 3507, column: 2)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 3506, column: 16)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 3497, column: 16)
!8008 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 3490, column: 11)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 3489, column: 5)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 3486, column: 3)
!8011 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3486, column: 3)
!8012 = !DILocation(line: 0, scope: !7996)
!8013 = !DILocation(line: 3484, column: 22, scope: !7996)
!8014 = !DILocation(line: 3484, column: 20, scope: !7996)
!8015 = !DILocation(line: 3486, column: 15, scope: !8011)
!8016 = !DILocation(line: 3486, column: 8, scope: !8011)
!8017 = !DILocation(line: 0, scope: !8011)
!8018 = !DILocation(line: 3486, column: 3, scope: !8011)
!8019 = !DILocation(line: 3490, column: 11, scope: !8008)
!8020 = !DILocation(line: 3490, column: 11, scope: !8009)
!8021 = !DILocation(line: 3492, column: 4, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 3491, column: 2)
!8023 = !DILocation(line: 3494, column: 15, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8022, file: !3, line: 3494, column: 8)
!8025 = !DILocation(line: 3494, column: 8, scope: !8022)
!8026 = !DILocation(line: 3496, column: 2, scope: !8022)
!8027 = !DILocation(line: 3497, column: 16, scope: !8007)
!8028 = !DILocation(line: 3498, column: 9, scope: !8007)
!8029 = !DILocation(line: 3498, column: 32, scope: !8007)
!8030 = !DILocation(line: 3498, column: 12, scope: !8007)
!8031 = !DILocation(line: 3499, column: 9, scope: !8007)
!8032 = !DILocation(line: 3499, column: 26, scope: !8007)
!8033 = !DILocation(line: 3499, column: 44, scope: !8007)
!8034 = !DILocation(line: 3499, column: 12, scope: !8007)
!8035 = !DILocation(line: 3497, column: 16, scope: !8008)
!8036 = !DILocation(line: 3501, column: 11, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 3500, column: 2)
!8038 = !DILocation(line: 3502, column: 4, scope: !8037)
!8039 = !DILocation(line: 3503, column: 8, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 3503, column: 8)
!8041 = !DILocation(line: 3503, column: 8, scope: !8037)
!8042 = !DILocation(line: 3505, column: 2, scope: !8037)
!8043 = !DILocation(line: 3506, column: 30, scope: !8006)
!8044 = !DILocation(line: 3506, column: 48, scope: !8006)
!8045 = !DILocation(line: 3506, column: 16, scope: !8006)
!8046 = !DILocation(line: 3506, column: 16, scope: !8007)
!8047 = !DILocation(line: 0, scope: !8005)
!8048 = !DILocation(line: 3508, column: 4, scope: !8005)
!8049 = !DILocation(line: 3508, column: 9, scope: !8005)
!8050 = !DILocation(line: 3509, column: 11, scope: !8005)
!8051 = !DILocation(line: 3510, column: 4, scope: !8005)
!8052 = !DILocation(line: 3512, column: 8, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 3512, column: 8)
!8054 = !DILocation(line: 3512, column: 13, scope: !8053)
!8055 = !DILocation(line: 3512, column: 17, scope: !8053)
!8056 = !DILocation(line: 3512, column: 8, scope: !8005)
!8057 = !DILocation(line: 3514, column: 12, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 3514, column: 12)
!8059 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 3513, column: 6)
!8060 = !DILocation(line: 3514, column: 12, scope: !8059)
!8061 = !DILocation(line: 3516, column: 9, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 3516, column: 9)
!8063 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 3515, column: 3)
!8064 = !DILocation(line: 3516, column: 9, scope: !8063)
!8065 = !DILocation(line: 3521, column: 17, scope: !8058)
!8066 = !DILocation(line: 3524, column: 13, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 3524, column: 13)
!8068 = !DILocation(line: 3524, column: 45, scope: !8067)
!8069 = !DILocation(line: 3524, column: 34, scope: !8067)
!8070 = !DILocation(line: 0, scope: !8053)
!8071 = !DILocation(line: 3526, column: 2, scope: !8006)
!8072 = !DILocation(line: 3526, column: 2, scope: !8005)
!8073 = !DILocation(line: 3528, column: 2, scope: !8006)
!8074 = !DILocation(line: 0, scope: !8008)
!8075 = !DILocation(line: 3488, column: 15, scope: !8010)
!8076 = !DILocation(line: 3486, column: 3, scope: !8010)
!8077 = distinct !{!8077, !8018, !8078}
!8078 = !DILocation(line: 3529, column: 5, scope: !8011)
!8079 = !DILocation(line: 3531, column: 14, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3531, column: 7)
!8081 = !DILocation(line: 3531, column: 7, scope: !7996)
!8082 = !DILocation(line: 3533, column: 7, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 3532, column: 5)
!8084 = !DILocation(line: 3534, column: 24, scope: !8083)
!8085 = !DILocation(line: 3535, column: 7, scope: !8083)
!8086 = !DILocation(line: 3539, column: 1, scope: !7996)
!8087 = distinct !DISubprogram(name: "analyze_caller_dereference_legality", scope: !3, file: !3, line: 3219, type: !8088, scopeLine: 3220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8090)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{null, !2023}
!8090 = !{!8091, !8092, !8093, !8097}
!8091 = !DILocalVariable(name: "representatives", arg: 1, scope: !8087, file: !3, line: 3219, type: !2023)
!8092 = !DILocalVariable(name: "i", scope: !8087, file: !3, line: 3221, type: !680)
!8093 = !DILocalVariable(name: "repr", scope: !8094, file: !3, line: 3237, type: !1986)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3236, column: 5)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 3235, column: 3)
!8096 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 3235, column: 3)
!8097 = !DILocalVariable(name: "idx", scope: !8094, file: !3, line: 3238, type: !680)
!8098 = !DILocation(line: 0, scope: !8087)
!8099 = !DILocation(line: 3223, column: 7, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 3223, column: 7)
!8101 = !DILocation(line: 3223, column: 17, scope: !8100)
!8102 = !DILocation(line: 3223, column: 21, scope: !8100)
!8103 = !DILocation(line: 3223, column: 32, scope: !8100)
!8104 = !DILocation(line: 3223, column: 7, scope: !8087)
!8105 = !DILocation(line: 3226, column: 9, scope: !8100)
!8106 = !DILocation(line: 3224, column: 5, scope: !8100)
!8107 = !DILocation(line: 3228, column: 3, scope: !8087)
!8108 = !DILocation(line: 3230, column: 7, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 3230, column: 7)
!8110 = !DILocation(line: 3230, column: 17, scope: !8109)
!8111 = !DILocation(line: 3230, column: 21, scope: !8109)
!8112 = !DILocation(line: 3230, column: 32, scope: !8109)
!8113 = !DILocation(line: 3230, column: 7, scope: !8087)
!8114 = !DILocation(line: 3233, column: 9, scope: !8109)
!8115 = !DILocation(line: 3231, column: 5, scope: !8109)
!8116 = !DILocation(line: 0, scope: !8094)
!8117 = !DILocation(line: 3235, column: 8, scope: !8096)
!8118 = !DILocation(line: 0, scope: !8096)
!8119 = !DILocation(line: 3235, column: 19, scope: !8095)
!8120 = !DILocation(line: 3235, column: 17, scope: !8095)
!8121 = !DILocation(line: 3235, column: 3, scope: !8096)
!8122 = !DILocation(line: 3237, column: 29, scope: !8094)
!8123 = !DILocation(line: 3238, column: 17, scope: !8094)
!8124 = !DILocation(line: 3238, column: 34, scope: !8094)
!8125 = !DILocation(line: 3238, column: 42, scope: !8094)
!8126 = !DILocation(line: 3238, column: 40, scope: !8094)
!8127 = !DILocation(line: 3238, column: 59, scope: !8094)
!8128 = !DILocation(line: 3240, column: 12, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 3240, column: 11)
!8130 = !DILocation(line: 3240, column: 17, scope: !8129)
!8131 = !DILocation(line: 3240, column: 20, scope: !8129)
!8132 = !DILocation(line: 3240, column: 11, scope: !8094)
!8133 = !DILocation(line: 0, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 3245, column: 8)
!8135 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 3244, column: 2)
!8136 = !DILocation(line: 3245, column: 38, scope: !8134)
!8137 = !DILocation(line: 3243, column: 7, scope: !8094)
!8138 = !DILocation(line: 3245, column: 15, scope: !8134)
!8139 = !DILocation(line: 3245, column: 30, scope: !8134)
!8140 = !DILocation(line: 3245, column: 22, scope: !8134)
!8141 = !DILocation(line: 3245, column: 36, scope: !8134)
!8142 = !DILocation(line: 3245, column: 8, scope: !8135)
!8143 = !DILocation(line: 3246, column: 12, scope: !8134)
!8144 = !DILocation(line: 3246, column: 46, scope: !8134)
!8145 = !DILocation(line: 3246, column: 6, scope: !8134)
!8146 = !DILocation(line: 3247, column: 17, scope: !8135)
!8147 = !DILocation(line: 3248, column: 2, scope: !8135)
!8148 = distinct !{!8148, !8137, !8149}
!8149 = !DILocation(line: 3249, column: 18, scope: !8094)
!8150 = !DILocation(line: 3235, column: 38, scope: !8095)
!8151 = !DILocation(line: 3235, column: 3, scope: !8095)
!8152 = distinct !{!8152, !8121, !8153}
!8153 = !DILocation(line: 3250, column: 5, scope: !8096)
!8154 = !DILocation(line: 3251, column: 1, scope: !8087)
!8155 = distinct !DISubprogram(name: "analyze_modified_params", scope: !3, file: !3, line: 3061, type: !8088, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8156)
!8156 = !{!8157, !8158, !8159, !8163, !8167, !8168}
!8157 = !DILocalVariable(name: "representatives", arg: 1, scope: !8155, file: !3, line: 3061, type: !2023)
!8158 = !DILocalVariable(name: "i", scope: !8155, file: !3, line: 3063, type: !680)
!8159 = !DILocalVariable(name: "repr", scope: !8160, file: !3, line: 3067, type: !1986)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 3066, column: 5)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 3065, column: 3)
!8162 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 3065, column: 3)
!8163 = !DILocalVariable(name: "access", scope: !8164, file: !3, line: 3073, type: !1986)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 3072, column: 2)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 3069, column: 7)
!8166 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 3069, column: 7)
!8167 = !DILocalVariable(name: "visited", scope: !8164, file: !3, line: 3074, type: !1528)
!8168 = !DILocalVariable(name: "ar", scope: !8164, file: !3, line: 3075, type: !8169)
!8169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ao_ref", file: !1519, line: 86, baseType: !8170)
!8170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ao_ref_s", file: !1519, line: 63, size: 384, elements: !8171)
!8171 = !{!8172, !8173, !8174, !8175, !8176, !8177, !8178}
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !8170, file: !1519, line: 67, baseType: !689, size: 64)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8170, file: !1519, line: 73, baseType: !689, size: 64, offset: 64)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8170, file: !1519, line: 75, baseType: !745, size: 64, offset: 128)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8170, file: !1519, line: 77, baseType: !745, size: 64, offset: 192)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !8170, file: !1519, line: 79, baseType: !745, size: 64, offset: 256)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "ref_alias_set", scope: !8170, file: !1519, line: 82, baseType: !1267, size: 32, offset: 320)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "base_alias_set", scope: !8170, file: !1519, line: 85, baseType: !1267, size: 32, offset: 352)
!8179 = !DILocation(line: 0, scope: !8155)
!8180 = !DILocation(line: 0, scope: !8166)
!8181 = !DILocation(line: 0, scope: !8164)
!8182 = !DILocation(line: 3065, column: 8, scope: !8162)
!8183 = !DILocation(line: 0, scope: !8162)
!8184 = !DILocation(line: 3065, column: 19, scope: !8161)
!8185 = !DILocation(line: 3065, column: 17, scope: !8161)
!8186 = !DILocation(line: 3065, column: 3, scope: !8162)
!8187 = !DILocation(line: 3069, column: 19, scope: !8166)
!8188 = !DILocation(line: 0, scope: !8160)
!8189 = !DILocation(line: 3069, column: 12, scope: !8166)
!8190 = !DILocation(line: 3069, column: 7, scope: !8166)
!8191 = !DILocation(line: 3074, column: 4, scope: !8164)
!8192 = !DILocation(line: 3075, column: 4, scope: !8164)
!8193 = !DILocation(line: 3077, column: 8, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 3077, column: 8)
!8195 = !DILocation(line: 3077, column: 8, scope: !8164)
!8196 = !DILocation(line: 3079, column: 9, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 3079, column: 8)
!8198 = !DILocation(line: 3080, column: 8, scope: !8197)
!8199 = !DILocation(line: 3080, column: 17, scope: !8197)
!8200 = !DILocation(line: 3080, column: 11, scope: !8197)
!8201 = !DILocation(line: 3079, column: 8, scope: !8164)
!8202 = !DILocation(line: 3083, column: 28, scope: !8164)
!8203 = !DILocation(line: 3083, column: 4, scope: !8164)
!8204 = !DILocation(line: 3084, column: 14, scope: !8164)
!8205 = !DILocation(line: 3084, column: 12, scope: !8164)
!8206 = !DILocation(line: 0, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 3086, column: 6)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3085, column: 4)
!8209 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 3085, column: 4)
!8210 = !DILocation(line: 3085, column: 9, scope: !8209)
!8211 = !DILocation(line: 0, scope: !8209)
!8212 = !DILocation(line: 3085, column: 4, scope: !8209)
!8213 = !DILocation(line: 3089, column: 54, scope: !8207)
!8214 = !DILocation(line: 3089, column: 33, scope: !8207)
!8215 = !DILocation(line: 3089, column: 8, scope: !8207)
!8216 = !DILocation(line: 3091, column: 18, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 3091, column: 12)
!8218 = !DILocation(line: 3091, column: 12, scope: !8217)
!8219 = !DILocation(line: 3091, column: 12, scope: !8207)
!8220 = !DILocation(line: 3085, column: 49, scope: !8208)
!8221 = !DILocation(line: 3085, column: 4, scope: !8208)
!8222 = distinct !{!8222, !8212, !8223}
!8223 = !DILocation(line: 3093, column: 6, scope: !8209)
!8224 = !DILocation(line: 3094, column: 4, scope: !8164)
!8225 = !DILocation(line: 3095, column: 2, scope: !8165)
!8226 = !DILocation(line: 3071, column: 18, scope: !8165)
!8227 = !DILocation(line: 3069, column: 7, scope: !8165)
!8228 = distinct !{!8228, !8190, !8229}
!8229 = !DILocation(line: 3095, column: 2, scope: !8166)
!8230 = !DILocation(line: 3065, column: 38, scope: !8161)
!8231 = !DILocation(line: 3065, column: 3, scope: !8161)
!8232 = distinct !{!8232, !8186, !8233}
!8233 = !DILocation(line: 3096, column: 5, scope: !8162)
!8234 = !DILocation(line: 3097, column: 1, scope: !8155)
!8235 = distinct !DISubprogram(name: "no_accesses_p", scope: !3, file: !3, line: 292, type: !5556, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8236)
!8236 = !{!8237}
!8237 = !DILocalVariable(name: "access", arg: 1, scope: !8235, file: !3, line: 292, type: !1986)
!8238 = !DILocation(line: 0, scope: !8235)
!8239 = !DILocation(line: 294, column: 17, scope: !8235)
!8240 = !DILocation(line: 294, column: 10, scope: !8235)
!8241 = !DILocation(line: 294, column: 3, scope: !8235)
!8242 = distinct !DISubprogram(name: "VEC_access_p_base_replace", scope: !3, file: !3, line: 228, type: !8243, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8245)
!8243 = !DISubroutineType(types: !8244)
!8244 = !{!2035, !5066, !7, !2035}
!8245 = !{!8246, !8247, !8248, !8249}
!8246 = !DILocalVariable(name: "vec_", arg: 1, scope: !8242, file: !3, line: 228, type: !5066)
!8247 = !DILocalVariable(name: "ix_", arg: 2, scope: !8242, file: !3, line: 228, type: !7)
!8248 = !DILocalVariable(name: "obj_", arg: 3, scope: !8242, file: !3, line: 228, type: !2035)
!8249 = !DILocalVariable(name: "old_obj_", scope: !8242, file: !3, line: 228, type: !2035)
!8250 = !DILocation(line: 0, scope: !8242)
!8251 = !DILocation(line: 228, column: 1, scope: !8242)
!8252 = distinct !DISubprogram(name: "decide_one_param_reduction", scope: !3, file: !3, line: 3403, type: !8253, scopeLine: 3404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8255)
!8253 = !DISubroutineType(types: !8254)
!8254 = !{!680, !1986}
!8255 = !{!8256, !8257, !8258, !8259, !8260, !8261, !8262, !8263, !8264}
!8256 = !DILocalVariable(name: "repr", arg: 1, scope: !8252, file: !3, line: 3403, type: !1986)
!8257 = !DILocalVariable(name: "total_size", scope: !8252, file: !3, line: 3405, type: !680)
!8258 = !DILocalVariable(name: "cur_parm_size", scope: !8252, file: !3, line: 3405, type: !680)
!8259 = !DILocalVariable(name: "agg_size", scope: !8252, file: !3, line: 3405, type: !680)
!8260 = !DILocalVariable(name: "new_param_count", scope: !8252, file: !3, line: 3405, type: !680)
!8261 = !DILocalVariable(name: "parm_size_limit", scope: !8252, file: !3, line: 3405, type: !680)
!8262 = !DILocalVariable(name: "by_ref", scope: !8252, file: !3, line: 3406, type: !679)
!8263 = !DILocalVariable(name: "parm", scope: !8252, file: !3, line: 3407, type: !689)
!8264 = !DILocalVariable(name: "acc", scope: !8265, file: !3, line: 3426, type: !1986)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 3425, column: 5)
!8266 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 3424, column: 7)
!8267 = !DILocation(line: 0, scope: !8252)
!8268 = !DILocation(line: 3409, column: 16, scope: !8252)
!8269 = !DILocation(line: 3410, column: 33, scope: !8252)
!8270 = !DILocation(line: 3410, column: 19, scope: !8252)
!8271 = !DILocation(line: 3411, column: 3, scope: !8252)
!8272 = !DILocation(line: 3413, column: 7, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 3413, column: 7)
!8274 = !DILocation(line: 3413, column: 7, scope: !8252)
!8275 = !DILocation(line: 3416, column: 32, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 3414, column: 5)
!8277 = !DILocation(line: 3416, column: 18, scope: !8276)
!8278 = !DILocation(line: 3417, column: 5, scope: !8276)
!8279 = !DILocation(line: 0, scope: !8273)
!8280 = !DILocation(line: 3424, column: 7, scope: !8266)
!8281 = !DILocation(line: 3424, column: 7, scope: !8252)
!8282 = !DILocation(line: 3427, column: 7, scope: !8265)
!8283 = !DILocation(line: 3428, column: 27, scope: !8265)
!8284 = !DILocation(line: 3428, column: 7, scope: !8265)
!8285 = !DILocation(line: 3429, column: 16, scope: !8265)
!8286 = !DILocation(line: 3429, column: 45, scope: !8265)
!8287 = !DILocation(line: 3429, column: 7, scope: !8265)
!8288 = !DILocation(line: 0, scope: !8265)
!8289 = !DILocation(line: 3430, column: 12, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 3430, column: 7)
!8291 = !DILocation(line: 0, scope: !8290)
!8292 = !DILocation(line: 3430, column: 7, scope: !8290)
!8293 = !DILocation(line: 3431, column: 15, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 3430, column: 7)
!8295 = !DILocation(line: 3431, column: 2, scope: !8294)
!8296 = !DILocation(line: 3430, column: 40, scope: !8294)
!8297 = !DILocation(line: 3430, column: 7, scope: !8294)
!8298 = distinct !{!8298, !8292, !8299}
!8299 = !DILocation(line: 3431, column: 35, scope: !8290)
!8300 = !DILocation(line: 3437, column: 3, scope: !8252)
!8301 = !DILocation(line: 0, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 3442, column: 11)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3438, column: 5)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 3437, column: 3)
!8305 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 3437, column: 3)
!8306 = !DILocation(line: 3437, column: 3, scope: !8305)
!8307 = !DILocation(line: 3439, column: 7, scope: !8303)
!8308 = !DILocation(line: 3440, column: 22, scope: !8303)
!8309 = !DILocation(line: 3444, column: 22, scope: !8302)
!8310 = !DILocation(line: 3444, column: 13, scope: !8302)
!8311 = !DILocation(line: 3437, column: 29, scope: !8304)
!8312 = !DILocation(line: 3437, column: 3, scope: !8304)
!8313 = distinct !{!8313, !8306, !8314}
!8314 = !DILocation(line: 3447, column: 5, scope: !8305)
!8315 = !DILocation(line: 3449, column: 3, scope: !8252)
!8316 = !DILocation(line: 3442, column: 30, scope: !8302)
!8317 = !DILocation(line: 3442, column: 24, scope: !8302)
!8318 = !DILocation(line: 3443, column: 9, scope: !8302)
!8319 = !DILocation(line: 3443, column: 19, scope: !8302)
!8320 = !DILocation(line: 3443, column: 13, scope: !8302)
!8321 = !DILocation(line: 3442, column: 11, scope: !8303)
!8322 = !DILocation(line: 3444, column: 2, scope: !8302)
!8323 = !DILocation(line: 3451, column: 37, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 3451, column: 7)
!8325 = !DILocation(line: 3451, column: 7, scope: !8324)
!8326 = !DILocation(line: 3451, column: 7, scope: !8252)
!8327 = !DILocation(line: 3454, column: 24, scope: !8324)
!8328 = !DILocation(line: 3455, column: 24, scope: !8324)
!8329 = !DILocation(line: 0, scope: !8324)
!8330 = !DILocation(line: 3457, column: 18, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 3457, column: 7)
!8332 = !DILocation(line: 3458, column: 21, scope: !8331)
!8333 = !DILocation(line: 3458, column: 7, scope: !8331)
!8334 = !DILocation(line: 3460, column: 11, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 3460, column: 11)
!8336 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 3459, column: 5)
!8337 = !DILocation(line: 3460, column: 11, scope: !8336)
!8338 = !DILocation(line: 3461, column: 2, scope: !8335)
!8339 = !DILocation(line: 0, scope: !8331)
!8340 = !DILocation(line: 3467, column: 1, scope: !8252)
!8341 = distinct !DISubprogram(name: "turn_representatives_into_adjustments", scope: !3, file: !3, line: 3564, type: !8342, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8344)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!3006, !2023, !680}
!8344 = !{!8345, !8346, !8347, !8353, !8354, !8355, !8356, !8360, !8364, !8366}
!8345 = !DILocalVariable(name: "representatives", arg: 1, scope: !8341, file: !3, line: 3564, type: !2023)
!8346 = !DILocalVariable(name: "adjustments_count", arg: 2, scope: !8341, file: !3, line: 3565, type: !680)
!8347 = !DILocalVariable(name: "parms", scope: !8341, file: !3, line: 3567, type: !8348)
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8349, size: 64)
!8349 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !135, line: 184, baseType: !8350)
!8350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !135, line: 184, size: 128, elements: !8351)
!8351 = !{!8352}
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8350, file: !135, line: 184, baseType: !1510, size: 128)
!8353 = !DILocalVariable(name: "adjustments", scope: !8341, file: !3, line: 3568, type: !3006)
!8354 = !DILocalVariable(name: "parm", scope: !8341, file: !3, line: 3569, type: !689)
!8355 = !DILocalVariable(name: "i", scope: !8341, file: !3, line: 3570, type: !680)
!8356 = !DILocalVariable(name: "repr", scope: !8357, file: !3, line: 3578, type: !1986)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 3577, column: 5)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 3576, column: 3)
!8359 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 3576, column: 3)
!8360 = !DILocalVariable(name: "adj", scope: !8361, file: !3, line: 3582, type: !8363)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 3581, column: 2)
!8362 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 3580, column: 11)
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!8364 = !DILocalVariable(name: "adj", scope: !8365, file: !3, line: 3595, type: !8363)
!8365 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 3594, column: 2)
!8366 = !DILocalVariable(name: "index", scope: !8365, file: !3, line: 3596, type: !680)
!8367 = !DILocation(line: 0, scope: !8341)
!8368 = !DILocation(line: 3567, column: 3, scope: !8341)
!8369 = !DILocation(line: 3572, column: 3, scope: !8341)
!8370 = !DILocation(line: 3573, column: 43, scope: !8341)
!8371 = !DILocation(line: 3573, column: 11, scope: !8341)
!8372 = !DILocation(line: 3573, column: 9, scope: !8341)
!8373 = !DILocation(line: 3574, column: 17, scope: !8341)
!8374 = !DILocation(line: 3575, column: 10, scope: !8341)
!8375 = !DILocation(line: 0, scope: !8357)
!8376 = !DILocation(line: 0, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 3599, column: 6)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3598, column: 4)
!8379 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 3598, column: 4)
!8380 = !DILocation(line: 3576, column: 8, scope: !8359)
!8381 = !DILocation(line: 0, scope: !8359)
!8382 = !DILocation(line: 3576, column: 19, scope: !8358)
!8383 = !DILocation(line: 3576, column: 17, scope: !8358)
!8384 = !DILocation(line: 3576, column: 3, scope: !8359)
!8385 = !DILocation(line: 3578, column: 29, scope: !8357)
!8386 = !DILocation(line: 3580, column: 12, scope: !8362)
!8387 = !DILocation(line: 3580, column: 17, scope: !8362)
!8388 = !DILocation(line: 3580, column: 20, scope: !8362)
!8389 = !DILocation(line: 3580, column: 11, scope: !8357)
!8390 = !DILocation(line: 3584, column: 10, scope: !8361)
!8391 = !DILocation(line: 0, scope: !8361)
!8392 = !DILocation(line: 3585, column: 12, scope: !8361)
!8393 = !DILocation(line: 3585, column: 4, scope: !8361)
!8394 = !DILocation(line: 3586, column: 45, scope: !8361)
!8395 = !DILocation(line: 3586, column: 22, scope: !8361)
!8396 = !DILocation(line: 3586, column: 9, scope: !8361)
!8397 = !DILocation(line: 3586, column: 20, scope: !8361)
!8398 = !DILocation(line: 3587, column: 9, scope: !8361)
!8399 = !DILocation(line: 3587, column: 14, scope: !8361)
!8400 = !DILocation(line: 0, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 3588, column: 8)
!8402 = !DILocation(line: 3588, column: 8, scope: !8361)
!8403 = !DILocation(line: 3589, column: 22, scope: !8401)
!8404 = !DILocation(line: 3589, column: 6, scope: !8401)
!8405 = !DILocation(line: 3591, column: 24, scope: !8401)
!8406 = !DILocation(line: 3596, column: 39, scope: !8365)
!8407 = !DILocation(line: 3596, column: 16, scope: !8365)
!8408 = !DILocation(line: 0, scope: !8365)
!8409 = !DILocation(line: 3598, column: 4, scope: !8365)
!8410 = !DILocation(line: 3598, column: 4, scope: !8379)
!8411 = !DILocation(line: 3600, column: 14, scope: !8377)
!8412 = !DILocation(line: 3601, column: 16, scope: !8377)
!8413 = !DILocation(line: 3601, column: 8, scope: !8377)
!8414 = !DILocation(line: 3602, column: 8, scope: !8377)
!8415 = !DILocation(line: 3603, column: 13, scope: !8377)
!8416 = !DILocation(line: 3603, column: 24, scope: !8377)
!8417 = !DILocation(line: 3604, column: 26, scope: !8377)
!8418 = !DILocation(line: 3604, column: 18, scope: !8377)
!8419 = !DILocation(line: 3605, column: 26, scope: !8377)
!8420 = !DILocation(line: 3605, column: 13, scope: !8377)
!8421 = !DILocation(line: 3605, column: 18, scope: !8377)
!8422 = !DILocation(line: 3606, column: 28, scope: !8377)
!8423 = !DILocation(line: 3606, column: 13, scope: !8377)
!8424 = !DILocation(line: 3606, column: 20, scope: !8377)
!8425 = !DILocation(line: 3607, column: 23, scope: !8377)
!8426 = !DILocation(line: 3608, column: 9, scope: !8377)
!8427 = !DILocation(line: 3608, column: 19, scope: !8377)
!8428 = !DILocation(line: 3608, column: 13, scope: !8377)
!8429 = !DILocation(line: 3609, column: 6, scope: !8377)
!8430 = !DILocation(line: 3609, column: 15, scope: !8377)
!8431 = !DILocation(line: 3607, column: 13, scope: !8377)
!8432 = !DILocation(line: 3607, column: 20, scope: !8377)
!8433 = !DILocation(line: 3598, column: 30, scope: !8378)
!8434 = !DILocation(line: 3598, column: 4, scope: !8378)
!8435 = distinct !{!8435, !8410, !8436}
!8436 = !DILocation(line: 3611, column: 6, scope: !8379)
!8437 = !DILocation(line: 3576, column: 38, scope: !8358)
!8438 = !DILocation(line: 3576, column: 49, scope: !8358)
!8439 = !DILocation(line: 3576, column: 3, scope: !8358)
!8440 = distinct !{!8440, !8384, !8441}
!8441 = !DILocation(line: 3613, column: 5, scope: !8359)
!8442 = !DILocation(line: 3614, column: 3, scope: !8341)
!8443 = !DILocation(line: 3616, column: 1, scope: !8341)
!8444 = !DILocation(line: 3615, column: 3, scope: !8341)
!8445 = distinct !DISubprogram(name: "unmodified_by_ref_scalar_representative", scope: !3, file: !3, line: 3260, type: !5354, scopeLine: 3261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8446)
!8446 = !{!8447, !8448, !8449, !8450, !8451, !8452}
!8447 = !DILocalVariable(name: "parm", arg: 1, scope: !8445, file: !3, line: 3260, type: !689)
!8448 = !DILocalVariable(name: "i", scope: !8445, file: !3, line: 3262, type: !680)
!8449 = !DILocalVariable(name: "access_count", scope: !8445, file: !3, line: 3262, type: !680)
!8450 = !DILocalVariable(name: "repr", scope: !8445, file: !3, line: 3263, type: !1986)
!8451 = !DILocalVariable(name: "access_vec", scope: !8445, file: !3, line: 3264, type: !2023)
!8452 = !DILocalVariable(name: "access", scope: !8453, file: !3, line: 3276, type: !1986)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 3275, column: 5)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 3274, column: 3)
!8455 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 3274, column: 3)
!8456 = !DILocation(line: 0, scope: !8445)
!8457 = !DILocation(line: 3266, column: 16, scope: !8445)
!8458 = !DILocation(line: 3267, column: 3, scope: !8445)
!8459 = !DILocation(line: 3268, column: 10, scope: !8445)
!8460 = !DILocation(line: 3269, column: 13, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 3269, column: 7)
!8462 = !DILocation(line: 3269, column: 7, scope: !8461)
!8463 = !DILocation(line: 3269, column: 7, scope: !8445)
!8464 = !DILocation(line: 3271, column: 9, scope: !8445)
!8465 = !DILocation(line: 3271, column: 30, scope: !8445)
!8466 = !DILocation(line: 3273, column: 18, scope: !8445)
!8467 = !DILocation(line: 0, scope: !8453)
!8468 = !DILocation(line: 3274, column: 8, scope: !8455)
!8469 = !DILocation(line: 0, scope: !8455)
!8470 = !DILocation(line: 3274, column: 17, scope: !8454)
!8471 = !DILocation(line: 3274, column: 3, scope: !8455)
!8472 = !DILocation(line: 3276, column: 31, scope: !8453)
!8473 = !DILocation(line: 3277, column: 19, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 3277, column: 11)
!8475 = !DILocation(line: 3277, column: 11, scope: !8474)
!8476 = !DILocation(line: 3277, column: 11, scope: !8453)
!8477 = !DILocation(line: 3279, column: 15, scope: !8453)
!8478 = !DILocation(line: 3279, column: 36, scope: !8453)
!8479 = !DILocation(line: 3280, column: 36, scope: !8453)
!8480 = !DILocation(line: 3280, column: 15, scope: !8453)
!8481 = !DILocation(line: 3280, column: 28, scope: !8453)
!8482 = !DILocation(line: 3281, column: 26, scope: !8453)
!8483 = !DILocation(line: 3282, column: 5, scope: !8454)
!8484 = !DILocation(line: 3274, column: 34, scope: !8454)
!8485 = !DILocation(line: 3274, column: 3, scope: !8454)
!8486 = distinct !{!8486, !8471, !8487}
!8487 = !DILocation(line: 3282, column: 5, scope: !8455)
!8488 = !DILocation(line: 3284, column: 18, scope: !8445)
!8489 = !DILocation(line: 3285, column: 24, scope: !8445)
!8490 = !DILocation(line: 3286, column: 3, scope: !8445)
!8491 = !DILocation(line: 3287, column: 1, scope: !8445)
!8492 = distinct !DISubprogram(name: "splice_param_accesses", scope: !3, file: !3, line: 3318, type: !8493, scopeLine: 3319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8495)
!8493 = !DISubroutineType(types: !8494)
!8494 = !{!1986, !689, !678}
!8495 = !{!8496, !8497, !8498, !8499, !8500, !8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508, !8510}
!8496 = !DILocalVariable(name: "parm", arg: 1, scope: !8492, file: !3, line: 3318, type: !689)
!8497 = !DILocalVariable(name: "ro_grp", arg: 2, scope: !8492, file: !3, line: 3318, type: !678)
!8498 = !DILocalVariable(name: "i", scope: !8492, file: !3, line: 3320, type: !680)
!8499 = !DILocalVariable(name: "j", scope: !8492, file: !3, line: 3320, type: !680)
!8500 = !DILocalVariable(name: "access_count", scope: !8492, file: !3, line: 3320, type: !680)
!8501 = !DILocalVariable(name: "group_count", scope: !8492, file: !3, line: 3320, type: !680)
!8502 = !DILocalVariable(name: "agg_size", scope: !8492, file: !3, line: 3321, type: !680)
!8503 = !DILocalVariable(name: "total_size", scope: !8492, file: !3, line: 3321, type: !680)
!8504 = !DILocalVariable(name: "access", scope: !8492, file: !3, line: 3322, type: !1986)
!8505 = !DILocalVariable(name: "res", scope: !8492, file: !3, line: 3322, type: !1986)
!8506 = !DILocalVariable(name: "prev_acc_ptr", scope: !8492, file: !3, line: 3322, type: !5363)
!8507 = !DILocalVariable(name: "access_vec", scope: !8492, file: !3, line: 3323, type: !2023)
!8508 = !DILocalVariable(name: "modification", scope: !8509, file: !3, line: 3343, type: !679)
!8509 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 3342, column: 5)
!8510 = !DILocalVariable(name: "ac2", scope: !8511, file: !3, line: 3356, type: !1986)
!8511 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 3355, column: 2)
!8512 = !DILocation(line: 0, scope: !8492)
!8513 = !DILocation(line: 3322, column: 3, scope: !8492)
!8514 = !DILocation(line: 3325, column: 16, scope: !8492)
!8515 = !DILocation(line: 3326, column: 8, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 3326, column: 7)
!8517 = !DILocation(line: 3326, column: 7, scope: !8492)
!8518 = !DILocation(line: 3328, column: 18, scope: !8492)
!8519 = !DILocation(line: 3331, column: 15, scope: !8492)
!8520 = !DILocation(line: 3331, column: 51, scope: !8492)
!8521 = !DILocation(line: 3331, column: 3, scope: !8492)
!8522 = !DILocation(line: 3341, column: 3, scope: !8492)
!8523 = !DILocation(line: 3339, column: 14, scope: !8492)
!8524 = !DILocation(line: 3340, column: 15, scope: !8492)
!8525 = !DILocation(line: 3322, column: 34, scope: !8492)
!8526 = !DILocation(line: 3338, column: 5, scope: !8492)
!8527 = !DILocation(line: 3341, column: 12, scope: !8492)
!8528 = !DILocation(line: 3344, column: 16, scope: !8509)
!8529 = !DILocation(line: 3345, column: 30, scope: !8509)
!8530 = !DILocation(line: 0, scope: !8509)
!8531 = !DILocation(line: 3346, column: 11, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 3346, column: 11)
!8533 = !DILocation(line: 3346, column: 11, scope: !8509)
!8534 = !DILocation(line: 3345, column: 22, scope: !8509)
!8535 = !DILocation(line: 3353, column: 13, scope: !8509)
!8536 = !DILocation(line: 0, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 3357, column: 8)
!8538 = !DILocation(line: 0, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 3360, column: 12)
!8540 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 3358, column: 6)
!8541 = !DILocation(line: 0, scope: !8511)
!8542 = !DILocation(line: 3354, column: 7, scope: !8509)
!8543 = !DILocation(line: 3353, column: 9, scope: !8509)
!8544 = !DILocation(line: 3345, column: 20, scope: !8509)
!8545 = !DILocation(line: 3354, column: 16, scope: !8509)
!8546 = !DILocation(line: 3356, column: 25, scope: !8511)
!8547 = !DILocation(line: 3357, column: 13, scope: !8537)
!8548 = !DILocation(line: 3357, column: 31, scope: !8537)
!8549 = !DILocation(line: 3357, column: 20, scope: !8537)
!8550 = !DILocation(line: 3357, column: 8, scope: !8511)
!8551 = !DILocation(line: 3360, column: 37, scope: !8539)
!8552 = !DILocation(line: 3360, column: 27, scope: !8539)
!8553 = !DILocation(line: 3360, column: 42, scope: !8539)
!8554 = !DILocation(line: 3365, column: 18, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 3365, column: 13)
!8556 = !DILocation(line: 3365, column: 34, scope: !8555)
!8557 = !DILocation(line: 3365, column: 23, scope: !8555)
!8558 = !DILocation(line: 3365, column: 13, scope: !8537)
!8559 = !DILocation(line: 3368, column: 8, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 3368, column: 8)
!8561 = !DILocation(line: 3368, column: 8, scope: !8511)
!8562 = !DILocation(line: 3371, column: 25, scope: !8511)
!8563 = !DILocation(line: 3371, column: 17, scope: !8511)
!8564 = !DILocation(line: 3372, column: 9, scope: !8511)
!8565 = !DILocation(line: 3372, column: 30, scope: !8511)
!8566 = !DILocation(line: 3373, column: 32, scope: !8511)
!8567 = !DILocation(line: 3373, column: 9, scope: !8511)
!8568 = !DILocation(line: 3373, column: 22, scope: !8511)
!8569 = !DILocation(line: 3374, column: 25, scope: !8511)
!8570 = !DILocation(line: 3375, column: 5, scope: !8511)
!8571 = !DILocation(line: 3376, column: 2, scope: !8509)
!8572 = distinct !{!8572, !8542, !8571}
!8573 = !DILocation(line: 3378, column: 18, scope: !8509)
!8574 = !DILocation(line: 3379, column: 34, scope: !8509)
!8575 = !DILocation(line: 3380, column: 12, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 3380, column: 11)
!8577 = !DILocation(line: 3380, column: 11, scope: !8509)
!8578 = !DILocation(line: 3381, column: 10, scope: !8576)
!8579 = !DILocation(line: 3381, column: 2, scope: !8576)
!8580 = !DILocation(line: 3382, column: 21, scope: !8509)
!8581 = !DILocation(line: 3383, column: 31, scope: !8509)
!8582 = !DILocation(line: 3384, column: 29, scope: !8509)
!8583 = !DILocation(line: 3384, column: 18, scope: !8509)
!8584 = !DILocation(line: 3386, column: 5, scope: !8492)
!8585 = distinct !{!8585, !8522, !8584}
!8586 = !DILocation(line: 3388, column: 7, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 3388, column: 7)
!8588 = !DILocation(line: 3388, column: 7, scope: !8492)
!8589 = !DILocation(line: 3389, column: 30, scope: !8587)
!8590 = !DILocation(line: 3389, column: 16, scope: !8587)
!8591 = !DILocation(line: 3389, column: 5, scope: !8587)
!8592 = !DILocation(line: 3391, column: 30, scope: !8587)
!8593 = !DILocation(line: 3391, column: 16, scope: !8587)
!8594 = !DILocation(line: 0, scope: !8587)
!8595 = !DILocation(line: 3392, column: 18, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 3392, column: 7)
!8597 = !DILocation(line: 3392, column: 7, scope: !8492)
!8598 = !DILocation(line: 3395, column: 3, scope: !8492)
!8599 = !DILocation(line: 3396, column: 10, scope: !8492)
!8600 = !DILocation(line: 3396, column: 3, scope: !8492)
!8601 = !DILocation(line: 3397, column: 1, scope: !8492)
!8602 = distinct !DISubprogram(name: "access_precludes_ipa_sra_p", scope: !3, file: !3, line: 3293, type: !5556, scopeLine: 3294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8603)
!8603 = !{!8604}
!8604 = !DILocalVariable(name: "access", arg: 1, scope: !8602, file: !3, line: 3293, type: !1986)
!8605 = !DILocation(line: 0, scope: !8602)
!8606 = !DILocation(line: 3301, column: 15, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 3301, column: 7)
!8608 = !DILocation(line: 3301, column: 7, scope: !8607)
!8609 = !DILocation(line: 3302, column: 7, scope: !8607)
!8610 = !DILocation(line: 3302, column: 35, scope: !8607)
!8611 = !DILocation(line: 3302, column: 11, scope: !8607)
!8612 = !DILocation(line: 3303, column: 4, scope: !8607)
!8613 = !DILocation(line: 3303, column: 28, scope: !8607)
!8614 = !DILocation(line: 3303, column: 7, scope: !8607)
!8615 = !DILocation(line: 3303, column: 34, scope: !8607)
!8616 = !DILocation(line: 3301, column: 7, scope: !8602)
!8617 = !DILocation(line: 3306, column: 3, scope: !8602)
!8618 = !DILocation(line: 3307, column: 1, scope: !8602)
!8619 = distinct !DISubprogram(name: "dump_dereferences_table", scope: !3, file: !3, line: 3178, type: !8620, scopeLine: 3179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8622)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{null, !2211, !685, !2042}
!8622 = !{!8623, !8624, !8625, !8626, !8627, !8633}
!8623 = !DILocalVariable(name: "f", arg: 1, scope: !8619, file: !3, line: 3178, type: !2211)
!8624 = !DILocalVariable(name: "str", arg: 2, scope: !8619, file: !3, line: 3178, type: !685)
!8625 = !DILocalVariable(name: "table", arg: 3, scope: !8619, file: !3, line: 3178, type: !2042)
!8626 = !DILocalVariable(name: "bb", scope: !8619, file: !3, line: 3180, type: !1410)
!8627 = !DILocalVariable(name: "i", scope: !8628, file: !3, line: 3188, type: !680)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 3187, column: 2)
!8629 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 3186, column: 11)
!8630 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 3184, column: 5)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 3183, column: 3)
!8632 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 3183, column: 3)
!8633 = !DILocalVariable(name: "idx", scope: !8634, file: !3, line: 3191, type: !680)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 3190, column: 6)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 3189, column: 4)
!8636 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 3189, column: 4)
!8637 = !DILocation(line: 0, scope: !8619)
!8638 = !DILocation(line: 3182, column: 12, scope: !8619)
!8639 = !DILocation(line: 3182, column: 3, scope: !8619)
!8640 = !DILocation(line: 3183, column: 3, scope: !8632)
!8641 = !DILocation(line: 3183, column: 3, scope: !8631)
!8642 = !DILocation(line: 0, scope: !8632)
!8643 = !DILocation(line: 3185, column: 37, scope: !8630)
!8644 = !DILocation(line: 3185, column: 58, scope: !8630)
!8645 = !DILocation(line: 3185, column: 44, scope: !8630)
!8646 = !DILocation(line: 3185, column: 7, scope: !8630)
!8647 = !DILocation(line: 3186, column: 17, scope: !8629)
!8648 = !DILocation(line: 3186, column: 14, scope: !8629)
!8649 = !DILocation(line: 3186, column: 11, scope: !8630)
!8650 = !DILocation(line: 3189, column: 4, scope: !8636)
!8651 = !DILocation(line: 0, scope: !8636)
!8652 = !DILocation(line: 0, scope: !8628)
!8653 = !DILocation(line: 3189, column: 20, scope: !8635)
!8654 = !DILocation(line: 3189, column: 18, scope: !8635)
!8655 = !DILocation(line: 3191, column: 22, scope: !8634)
!8656 = !DILocation(line: 3191, column: 28, scope: !8634)
!8657 = !DILocation(line: 3191, column: 47, scope: !8634)
!8658 = !DILocation(line: 0, scope: !8634)
!8659 = !DILocation(line: 3192, column: 51, scope: !8634)
!8660 = !DILocation(line: 3192, column: 8, scope: !8634)
!8661 = !DILocation(line: 3189, column: 39, scope: !8635)
!8662 = !DILocation(line: 3189, column: 4, scope: !8635)
!8663 = distinct !{!8663, !8650, !8664}
!8664 = !DILocation(line: 3193, column: 6, scope: !8636)
!8665 = !DILocation(line: 3195, column: 7, scope: !8630)
!8666 = !DILocation(line: 0, scope: !8631)
!8667 = distinct !{!8667, !8640, !8668}
!8668 = !DILocation(line: 3196, column: 5, scope: !8632)
!8669 = !DILocation(line: 3197, column: 12, scope: !8619)
!8670 = !DILocation(line: 3197, column: 3, scope: !8619)
!8671 = !DILocation(line: 3198, column: 1, scope: !8619)
!8672 = distinct !DISubprogram(name: "propagate_dereference_distances", scope: !3, file: !3, line: 3106, type: !2861, scopeLine: 3107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8673)
!8673 = !{!8674, !8675, !8676, !8684, !8685, !8686, !8687, !8691, !8692, !8693}
!8674 = !DILocalVariable(name: "queue", scope: !8672, file: !3, line: 3108, type: !2046)
!8675 = !DILocalVariable(name: "bb", scope: !8672, file: !3, line: 3109, type: !1410)
!8676 = !DILocalVariable(name: "ei", scope: !8677, file: !3, line: 3121, type: !8678)
!8677 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 3120, column: 5)
!8678 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !330, line: 682, baseType: !8679)
!8679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !330, line: 679, size: 128, elements: !8680)
!8680 = !{!8681, !8682}
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8679, file: !330, line: 680, baseType: !7, size: 32)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !8679, file: !330, line: 681, baseType: !8683, size: 64, offset: 64)
!8683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!8684 = !DILocalVariable(name: "e", scope: !8677, file: !3, line: 3122, type: !991)
!8685 = !DILocalVariable(name: "change", scope: !8677, file: !3, line: 3123, type: !679)
!8686 = !DILocalVariable(name: "i", scope: !8677, file: !3, line: 3124, type: !680)
!8687 = !DILocalVariable(name: "idx", scope: !8688, file: !3, line: 3134, type: !680)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 3133, column: 2)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 3132, column: 7)
!8690 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3132, column: 7)
!8691 = !DILocalVariable(name: "first", scope: !8688, file: !3, line: 3135, type: !679)
!8692 = !DILocalVariable(name: "inh", scope: !8688, file: !3, line: 3136, type: !745)
!8693 = !DILocalVariable(name: "succ_idx", scope: !8694, file: !3, line: 3140, type: !680)
!8694 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 3139, column: 4)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 3138, column: 4)
!8696 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3138, column: 4)
!8697 = !DILocation(line: 3108, column: 3, scope: !8672)
!8698 = !DILocation(line: 3111, column: 11, scope: !8672)
!8699 = !DILocation(line: 0, scope: !8672)
!8700 = !DILocation(line: 3111, column: 9, scope: !8672)
!8701 = !DILocation(line: 3112, column: 3, scope: !8672)
!8702 = !DILocation(line: 3113, column: 3, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 3113, column: 3)
!8704 = !DILocation(line: 3113, column: 3, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 3113, column: 3)
!8706 = !DILocation(line: 0, scope: !8703)
!8707 = !DILocation(line: 0, scope: !8677)
!8708 = !DILocation(line: 0, scope: !8696)
!8709 = !DILocation(line: 0, scope: !8695)
!8710 = !DILocation(line: 0, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 3162, column: 2)
!8712 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3161, column: 11)
!8713 = !DILocation(line: 3119, column: 3, scope: !8672)
!8714 = !DILocation(line: 3115, column: 7, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 3114, column: 5)
!8716 = !DILocation(line: 3116, column: 11, scope: !8715)
!8717 = !DILocation(line: 3116, column: 15, scope: !8715)
!8718 = !DILocation(line: 0, scope: !8705)
!8719 = distinct !{!8719, !8702, !8720}
!8720 = !DILocation(line: 3117, column: 5, scope: !8703)
!8721 = !DILocation(line: 3119, column: 11, scope: !8672)
!8722 = !DILocation(line: 3121, column: 7, scope: !8677)
!8723 = !DILocation(line: 3122, column: 7, scope: !8677)
!8724 = !DILocation(line: 3126, column: 12, scope: !8677)
!8725 = !DILocation(line: 3127, column: 11, scope: !8677)
!8726 = !DILocation(line: 3127, column: 15, scope: !8677)
!8727 = !DILocation(line: 3129, column: 25, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3129, column: 11)
!8729 = !DILocation(line: 3129, column: 40, scope: !8728)
!8730 = !DILocation(line: 3129, column: 11, scope: !8728)
!8731 = !DILocation(line: 3129, column: 11, scope: !8677)
!8732 = distinct !{!8732, !8713, !8733}
!8733 = !DILocation(line: 3170, column: 5, scope: !8672)
!8734 = !DILocation(line: 3132, column: 7, scope: !8690)
!8735 = !DILocation(line: 0, scope: !8690)
!8736 = !DILocation(line: 3123, column: 12, scope: !8677)
!8737 = !DILocation(line: 3132, column: 23, scope: !8689)
!8738 = !DILocation(line: 3132, column: 21, scope: !8689)
!8739 = !DILocation(line: 3134, column: 18, scope: !8688)
!8740 = !DILocation(line: 0, scope: !8688)
!8741 = !DILocation(line: 3138, column: 4, scope: !8696)
!8742 = !DILocation(line: 3135, column: 9, scope: !8688)
!8743 = !DILocation(line: 3136, column: 18, scope: !8688)
!8744 = !DILocation(line: 3138, column: 4, scope: !8695)
!8745 = !DILocation(line: 3140, column: 21, scope: !8694)
!8746 = !DILocation(line: 0, scope: !8694)
!8747 = !DILocation(line: 3142, column: 13, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 3142, column: 10)
!8749 = !DILocation(line: 3142, column: 20, scope: !8748)
!8750 = !DILocation(line: 3142, column: 17, scope: !8748)
!8751 = !DILocation(line: 3142, column: 10, scope: !8694)
!8752 = !DILocation(line: 3140, column: 24, scope: !8694)
!8753 = !DILocation(line: 3140, column: 30, scope: !8694)
!8754 = !DILocation(line: 3140, column: 38, scope: !8694)
!8755 = !DILocation(line: 3140, column: 36, scope: !8694)
!8756 = !DILocation(line: 3140, column: 55, scope: !8694)
!8757 = !DILocation(line: 3145, column: 10, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 3145, column: 10)
!8759 = !DILocation(line: 0, scope: !8758)
!8760 = !DILocation(line: 3145, column: 10, scope: !8694)
!8761 = !DILocation(line: 3150, column: 42, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 3150, column: 15)
!8763 = !DILocation(line: 3150, column: 15, scope: !8758)
!8764 = !DILocation(line: 3151, column: 8, scope: !8762)
!8765 = distinct !{!8765, !8741, !8766}
!8766 = !DILocation(line: 3152, column: 4, scope: !8696)
!8767 = !DILocation(line: 3134, column: 24, scope: !8688)
!8768 = !DILocation(line: 3154, column: 9, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3154, column: 8)
!8770 = !DILocation(line: 3154, column: 15, scope: !8769)
!8771 = !DILocation(line: 3134, column: 43, scope: !8688)
!8772 = !DILocation(line: 3154, column: 18, scope: !8769)
!8773 = !DILocation(line: 3154, column: 39, scope: !8769)
!8774 = !DILocation(line: 3154, column: 8, scope: !8688)
!8775 = !DILocation(line: 3156, column: 29, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 3155, column: 6)
!8777 = !DILocation(line: 3158, column: 6, scope: !8776)
!8778 = !DILocation(line: 3132, column: 42, scope: !8689)
!8779 = !DILocation(line: 3132, column: 7, scope: !8689)
!8780 = distinct !{!8780, !8734, !8781}
!8781 = !DILocation(line: 3159, column: 2, scope: !8690)
!8782 = !DILocation(line: 3161, column: 11, scope: !8712)
!8783 = !DILocation(line: 3161, column: 18, scope: !8712)
!8784 = !DILocation(line: 3161, column: 36, scope: !8712)
!8785 = !DILocation(line: 3161, column: 51, scope: !8712)
!8786 = !DILocation(line: 3161, column: 22, scope: !8712)
!8787 = !DILocation(line: 3161, column: 11, scope: !8677)
!8788 = !DILocation(line: 3162, column: 2, scope: !8711)
!8789 = !DILocation(line: 3162, column: 2, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 3162, column: 2)
!8791 = !DILocation(line: 3164, column: 10, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 3164, column: 10)
!8793 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 3163, column: 4)
!8794 = !DILocation(line: 3164, column: 13, scope: !8792)
!8795 = !DILocation(line: 3164, column: 18, scope: !8792)
!8796 = !DILocation(line: 3164, column: 10, scope: !8793)
!8797 = !DILocation(line: 3167, column: 18, scope: !8793)
!8798 = !DILocation(line: 3168, column: 6, scope: !8793)
!8799 = !DILocation(line: 3169, column: 4, scope: !8793)
!8800 = distinct !{!8800, !8788, !8801}
!8801 = !DILocation(line: 3169, column: 4, scope: !8711)
!8802 = !DILocation(line: 3172, column: 3, scope: !8672)
!8803 = !DILocation(line: 3173, column: 1, scope: !8672)
!8804 = distinct !DISubprogram(name: "VEC_basic_block_heap_alloc", scope: !330, file: !330, line: 283, type: !8805, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8807)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!2046, !680}
!8807 = !{!8808}
!8808 = !DILocalVariable(name: "alloc_", arg: 1, scope: !8804, file: !330, line: 283, type: !680)
!8809 = !DILocation(line: 0, scope: !8804)
!8810 = !DILocation(line: 283, column: 1, scope: !8804)
!8811 = distinct !DISubprogram(name: "VEC_basic_block_base_quick_push", scope: !330, file: !330, line: 281, type: !8812, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8816)
!8812 = !DISubroutineType(types: !8813)
!8813 = !{!8814, !8815, !1410}
!8814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!8815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!8816 = !{!8817, !8818, !8819}
!8817 = !DILocalVariable(name: "vec_", arg: 1, scope: !8811, file: !330, line: 281, type: !8815)
!8818 = !DILocalVariable(name: "obj_", arg: 2, scope: !8811, file: !330, line: 281, type: !1410)
!8819 = !DILocalVariable(name: "slot_", scope: !8811, file: !330, line: 281, type: !8814)
!8820 = !DILocation(line: 0, scope: !8811)
!8821 = !DILocation(line: 281, column: 1, scope: !8811)
!8822 = distinct !DISubprogram(name: "VEC_basic_block_base_length", scope: !330, file: !330, line: 281, type: !8823, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8827)
!8823 = !DISubroutineType(types: !8824)
!8824 = !{!7, !8825}
!8825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8826, size: 64)
!8826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1418)
!8827 = !{!8828}
!8828 = !DILocalVariable(name: "vec_", arg: 1, scope: !8822, file: !330, line: 281, type: !8825)
!8829 = !DILocation(line: 0, scope: !8822)
!8830 = !DILocation(line: 281, column: 1, scope: !8822)
!8831 = distinct !DISubprogram(name: "VEC_basic_block_base_pop", scope: !330, file: !330, line: 281, type: !8832, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8834)
!8832 = !DISubroutineType(types: !8833)
!8833 = !{!1410, !8815}
!8834 = !{!8835, !8836}
!8835 = !DILocalVariable(name: "vec_", arg: 1, scope: !8831, file: !330, line: 281, type: !8815)
!8836 = !DILocalVariable(name: "obj_", scope: !8831, file: !330, line: 281, type: !1410)
!8837 = !DILocation(line: 0, scope: !8831)
!8838 = !DILocation(line: 281, column: 1, scope: !8831)
!8839 = distinct !DISubprogram(name: "ei_start_1", scope: !330, file: !330, line: 696, type: !8840, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8842)
!8840 = !DISubroutineType(types: !8841)
!8841 = !{!8678, !8683}
!8842 = !{!8843, !8844}
!8843 = !DILocalVariable(name: "ev", arg: 1, scope: !8839, file: !330, line: 696, type: !8683)
!8844 = !DILocalVariable(name: "i", scope: !8839, file: !330, line: 698, type: !8678)
!8845 = !DILocation(line: 0, scope: !8839)
!8846 = !DILocation(line: 700, column: 5, scope: !8839)
!8847 = !DILocation(line: 700, column: 11, scope: !8839)
!8848 = !DILocation(line: 701, column: 5, scope: !8839)
!8849 = !DILocation(line: 701, column: 15, scope: !8839)
!8850 = !DILocation(line: 703, column: 3, scope: !8839)
!8851 = distinct !DISubprogram(name: "ei_cond", scope: !330, file: !330, line: 771, type: !8852, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8855)
!8852 = !DISubroutineType(types: !8853)
!8853 = !{!679, !8678, !8854}
!8854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!8855 = !{!8856, !8857}
!8856 = !DILocalVariable(name: "ei", arg: 1, scope: !8851, file: !330, line: 771, type: !8678)
!8857 = !DILocalVariable(name: "p", arg: 2, scope: !8851, file: !330, line: 771, type: !8854)
!8858 = !DILocation(line: 0, scope: !8851)
!8859 = !DILocation(line: 773, column: 8, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8851, file: !330, line: 773, column: 7)
!8861 = !DILocation(line: 773, column: 7, scope: !8851)
!8862 = !DILocation(line: 775, column: 12, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8860, file: !330, line: 774, column: 5)
!8864 = !DILocation(line: 776, column: 7, scope: !8863)
!8865 = !DILocation(line: 781, column: 7, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8860, file: !330, line: 779, column: 5)
!8867 = !DILocation(line: 0, scope: !8860)
!8868 = !DILocation(line: 783, column: 1, scope: !8851)
!8869 = distinct !DISubprogram(name: "ei_next", scope: !330, file: !330, line: 736, type: !8870, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8873)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{null, !8872}
!8872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8678, size: 64)
!8873 = !{!8874}
!8874 = !DILocalVariable(name: "i", arg: 1, scope: !8869, file: !330, line: 736, type: !8872)
!8875 = !DILocation(line: 0, scope: !8869)
!8876 = !DILocation(line: 738, column: 3, scope: !8869)
!8877 = !DILocation(line: 739, column: 11, scope: !8869)
!8878 = !DILocation(line: 740, column: 1, scope: !8869)
!8879 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !330, file: !330, line: 283, type: !8880, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8883)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{null, !8882}
!8882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!8883 = !{!8884}
!8884 = !DILocalVariable(name: "vec_", arg: 1, scope: !8879, file: !330, line: 283, type: !8882)
!8885 = !DILocation(line: 0, scope: !8879)
!8886 = !DILocation(line: 283, column: 1, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8879, file: !330, line: 283, column: 1)
!8888 = !DILocation(line: 283, column: 1, scope: !8879)
!8889 = distinct !DISubprogram(name: "ei_end_p", scope: !330, file: !330, line: 721, type: !8890, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8892)
!8890 = !DISubroutineType(types: !8891)
!8891 = !{!679, !8678}
!8892 = !{!8893}
!8893 = !DILocalVariable(name: "i", arg: 1, scope: !8889, file: !330, line: 721, type: !8678)
!8894 = !DILocation(line: 723, column: 22, scope: !8889)
!8895 = !DILocation(line: 723, column: 19, scope: !8889)
!8896 = !DILocation(line: 723, column: 10, scope: !8889)
!8897 = !DILocation(line: 723, column: 3, scope: !8889)
!8898 = distinct !DISubprogram(name: "ei_edge", scope: !330, file: !330, line: 752, type: !8899, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8901)
!8899 = !DISubroutineType(types: !8900)
!8900 = !{!991, !8678}
!8901 = !{!8902}
!8902 = !DILocalVariable(name: "i", arg: 1, scope: !8898, file: !330, line: 752, type: !8678)
!8903 = !DILocation(line: 754, column: 10, scope: !8898)
!8904 = !DILocation(line: 754, column: 3, scope: !8898)
!8905 = distinct !DISubprogram(name: "ei_container", scope: !330, file: !330, line: 685, type: !8906, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8908)
!8906 = !DISubroutineType(types: !8907)
!8907 = !{!979, !8678}
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "i", arg: 1, scope: !8905, file: !330, line: 685, type: !8678)
!8910 = !DILocation(line: 687, column: 3, scope: !8905)
!8911 = !DILocation(line: 688, column: 10, scope: !8905)
!8912 = !DILocation(line: 688, column: 3, scope: !8905)
!8913 = distinct !DISubprogram(name: "mark_maybe_modified", scope: !3, file: !3, line: 3047, type: !8914, scopeLine: 3049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8917)
!8914 = !DISubroutineType(types: !8915)
!8915 = !{!679, !8916, !689, !684}
!8916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8169, size: 64)
!8917 = !{!8918, !8919, !8920, !8921}
!8918 = !DILocalVariable(name: "ao", arg: 1, scope: !8913, file: !3, line: 3047, type: !8916)
!8919 = !DILocalVariable(name: "vdef", arg: 2, scope: !8913, file: !3, line: 3047, type: !689)
!8920 = !DILocalVariable(name: "data", arg: 3, scope: !8913, file: !3, line: 3048, type: !684)
!8921 = !DILocalVariable(name: "repr", scope: !8913, file: !3, line: 3050, type: !1986)
!8922 = !DILocation(line: 0, scope: !8913)
!8923 = !DILocation(line: 3052, column: 9, scope: !8913)
!8924 = !DILocation(line: 3052, column: 28, scope: !8913)
!8925 = !DILocation(line: 3053, column: 3, scope: !8913)
!8926 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_heap_alloc", scope: !2053, file: !2053, line: 485, type: !8927, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8929)
!8927 = !DISubroutineType(types: !8928)
!8928 = !{!2051, !680}
!8929 = !{!8930}
!8930 = !DILocalVariable(name: "alloc_", arg: 1, scope: !8926, file: !2053, line: 485, type: !680)
!8931 = !DILocation(line: 0, scope: !8926)
!8932 = !DILocation(line: 485, column: 1, scope: !8926)
!8933 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_base_quick_push", scope: !2053, file: !2053, line: 484, type: !8934, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8940)
!8934 = !DISubroutineType(types: !8935)
!8935 = !{!8936, !8937, !8938}
!8936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!8937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!8938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8939, size: 64)
!8939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2064)
!8940 = !{!8941, !8942, !8943}
!8941 = !DILocalVariable(name: "vec_", arg: 1, scope: !8933, file: !2053, line: 484, type: !8937)
!8942 = !DILocalVariable(name: "obj_", arg: 2, scope: !8933, file: !2053, line: 484, type: !8938)
!8943 = !DILocalVariable(name: "slot_", scope: !8933, file: !2053, line: 484, type: !8936)
!8944 = !DILocation(line: 0, scope: !8933)
!8945 = !DILocation(line: 484, column: 1, scope: !8933)
!8946 = distinct !DISubprogram(name: "get_param_index", scope: !3, file: !3, line: 3544, type: !8947, scopeLine: 3545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8949)
!8947 = !DISubroutineType(types: !8948)
!8948 = !{!680, !689, !8348}
!8949 = !{!8950, !8951, !8952, !8953}
!8950 = !DILocalVariable(name: "base", arg: 1, scope: !8946, file: !3, line: 3544, type: !689)
!8951 = !DILocalVariable(name: "parms", arg: 2, scope: !8946, file: !3, line: 3544, type: !8348)
!8952 = !DILocalVariable(name: "i", scope: !8946, file: !3, line: 3546, type: !680)
!8953 = !DILocalVariable(name: "len", scope: !8946, file: !3, line: 3546, type: !680)
!8954 = !DILocation(line: 0, scope: !8946)
!8955 = !DILocation(line: 3548, column: 9, scope: !8946)
!8956 = !DILocation(line: 3549, column: 8, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 3549, column: 3)
!8958 = !DILocation(line: 0, scope: !8957)
!8959 = !DILocation(line: 3549, column: 17, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 3549, column: 3)
!8961 = !DILocation(line: 3549, column: 3, scope: !8957)
!8962 = !DILocation(line: 3550, column: 9, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 3550, column: 9)
!8964 = !DILocation(line: 3550, column: 36, scope: !8963)
!8965 = !DILocation(line: 3550, column: 9, scope: !8960)
!8966 = !DILocation(line: 3549, column: 25, scope: !8960)
!8967 = !DILocation(line: 3549, column: 3, scope: !8960)
!8968 = distinct !{!8968, !8961, !8969}
!8969 = !DILocation(line: 3551, column: 14, scope: !8957)
!8970 = !DILocation(line: 3552, column: 3, scope: !8946)
!8971 = !DILocation(line: 3554, column: 5, scope: !8946)
!8972 = !DILocation(line: 3556, column: 1, scope: !8946)
!8973 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !135, file: !135, line: 184, type: !8974, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8977)
!8974 = !DISubroutineType(types: !8975)
!8975 = !{null, !8976}
!8976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8348, size: 64)
!8977 = !{!8978}
!8978 = !DILocalVariable(name: "vec_", arg: 1, scope: !8973, file: !135, line: 184, type: !8976)
!8979 = !DILocation(line: 0, scope: !8973)
!8980 = !DILocation(line: 184, column: 1, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8973, file: !135, line: 184, column: 1)
!8982 = !DILocation(line: 184, column: 1, scope: !8973)
!8983 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !8984, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8988)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!7, !8986}
!8986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8987, size: 64)
!8987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1510)
!8988 = !{!8989}
!8989 = !DILocalVariable(name: "vec_", arg: 1, scope: !8983, file: !135, line: 182, type: !8986)
!8990 = !DILocation(line: 0, scope: !8983)
!8991 = !DILocation(line: 182, column: 1, scope: !8983)
!8992 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !135, file: !135, line: 182, type: !8993, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8995)
!8993 = !DISubroutineType(types: !8994)
!8994 = !{!689, !8986, !7}
!8995 = !{!8996, !8997}
!8996 = !DILocalVariable(name: "vec_", arg: 1, scope: !8992, file: !135, line: 182, type: !8986)
!8997 = !DILocalVariable(name: "ix_", arg: 2, scope: !8992, file: !135, line: 182, type: !7)
!8998 = !DILocation(line: 0, scope: !8992)
!8999 = !DILocation(line: 182, column: 1, scope: !8992)
!9000 = distinct !DISubprogram(name: "create_abstract_origin", scope: !3, file: !3, line: 4069, type: !6551, scopeLine: 4070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9001)
!9001 = !{!9002, !9003}
!9002 = !DILocalVariable(name: "old_decl", arg: 1, scope: !9000, file: !3, line: 4069, type: !689)
!9003 = !DILocalVariable(name: "new_decl", scope: !9004, file: !3, line: 4073, type: !689)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 4072, column: 5)
!9005 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 4071, column: 7)
!9006 = !DILocation(line: 0, scope: !9000)
!9007 = !DILocation(line: 4071, column: 8, scope: !9005)
!9008 = !DILocation(line: 4071, column: 7, scope: !9000)
!9009 = !DILocation(line: 4073, column: 23, scope: !9004)
!9010 = !DILocation(line: 0, scope: !9004)
!9011 = !DILocation(line: 4075, column: 7, scope: !9004)
!9012 = !DILocation(line: 4075, column: 32, scope: !9004)
!9013 = !DILocation(line: 4076, column: 7, scope: !9004)
!9014 = !DILocation(line: 4077, column: 7, scope: !9004)
!9015 = !DILocation(line: 4078, column: 7, scope: !9004)
!9016 = !DILocation(line: 4078, column: 39, scope: !9004)
!9017 = !DILocation(line: 4079, column: 7, scope: !9004)
!9018 = !DILocation(line: 4079, column: 34, scope: !9004)
!9019 = !DILocation(line: 4080, column: 39, scope: !9004)
!9020 = !DILocation(line: 4081, column: 5, scope: !9004)
!9021 = !DILocation(line: 4082, column: 1, scope: !9000)
!9022 = distinct !DISubprogram(name: "sra_ipa_modify_expr", scope: !3, file: !3, line: 3819, type: !3226, scopeLine: 3821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9023)
!9023 = !{!9024, !9025, !9026, !9027, !9028, !9029, !9030, !9031, !9032, !9033, !9034, !9035, !9036, !9037, !9038, !9041}
!9024 = !DILocalVariable(name: "expr", arg: 1, scope: !9022, file: !3, line: 3819, type: !1045)
!9025 = !DILocalVariable(name: "gsi", arg: 2, scope: !9022, file: !3, line: 3819, type: !3228)
!9026 = !DILocalVariable(name: "dont_convert", arg: 3, scope: !9022, file: !3, line: 3820, type: !679)
!9027 = !DILocalVariable(name: "data", arg: 4, scope: !9022, file: !3, line: 3820, type: !684)
!9028 = !DILocalVariable(name: "adjustments", scope: !9022, file: !3, line: 3822, type: !3006)
!9029 = !DILocalVariable(name: "i", scope: !9022, file: !3, line: 3823, type: !680)
!9030 = !DILocalVariable(name: "len", scope: !9022, file: !3, line: 3823, type: !680)
!9031 = !DILocalVariable(name: "adj", scope: !9022, file: !3, line: 3824, type: !8363)
!9032 = !DILocalVariable(name: "cand", scope: !9022, file: !3, line: 3824, type: !8363)
!9033 = !DILocalVariable(name: "offset", scope: !9022, file: !3, line: 3825, type: !745)
!9034 = !DILocalVariable(name: "size", scope: !9022, file: !3, line: 3825, type: !745)
!9035 = !DILocalVariable(name: "max_size", scope: !9022, file: !3, line: 3825, type: !745)
!9036 = !DILocalVariable(name: "base", scope: !9022, file: !3, line: 3826, type: !689)
!9037 = !DILocalVariable(name: "src", scope: !9022, file: !3, line: 3826, type: !689)
!9038 = !DILocalVariable(name: "folded", scope: !9039, file: !3, line: 3866, type: !689)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 3865, column: 5)
!9040 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3864, column: 7)
!9041 = !DILocalVariable(name: "vce", scope: !9042, file: !3, line: 3888, type: !689)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 3887, column: 5)
!9043 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3885, column: 7)
!9044 = !DILocation(line: 0, scope: !9022)
!9045 = !DILocation(line: 3825, column: 3, scope: !9022)
!9046 = !DILocation(line: 3829, column: 9, scope: !9022)
!9047 = !DILocation(line: 3831, column: 7, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3831, column: 7)
!9049 = !DILocation(line: 3831, column: 25, scope: !9048)
!9050 = !DILocation(line: 3832, column: 7, scope: !9048)
!9051 = !DILocation(line: 3832, column: 28, scope: !9048)
!9052 = !DILocation(line: 3833, column: 7, scope: !9048)
!9053 = !DILocation(line: 3833, column: 28, scope: !9048)
!9054 = !DILocation(line: 3831, column: 7, scope: !9022)
!9055 = !DILocation(line: 3835, column: 15, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 3834, column: 5)
!9057 = !DILocation(line: 3839, column: 35, scope: !9022)
!9058 = !DILocation(line: 3837, column: 5, scope: !9056)
!9059 = !DILocation(line: 3839, column: 10, scope: !9022)
!9060 = !DILocation(line: 3840, column: 8, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3840, column: 7)
!9062 = !DILocation(line: 3840, column: 16, scope: !9061)
!9063 = !DILocation(line: 3840, column: 21, scope: !9061)
!9064 = !DILocation(line: 3840, column: 13, scope: !9061)
!9065 = !DILocation(line: 3840, column: 30, scope: !9061)
!9066 = !DILocation(line: 3840, column: 39, scope: !9061)
!9067 = !DILocation(line: 3843, column: 7, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3843, column: 7)
!9069 = !DILocation(line: 3843, column: 7, scope: !9022)
!9070 = !DILocation(line: 3844, column: 12, scope: !9068)
!9071 = !DILocation(line: 3844, column: 5, scope: !9068)
!9072 = !DILocation(line: 3846, column: 10, scope: !9022)
!9073 = !DILocation(line: 3847, column: 8, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3847, column: 7)
!9075 = !DILocation(line: 3847, column: 13, scope: !9074)
!9076 = !DILocation(line: 3847, column: 16, scope: !9074)
!9077 = !DILocation(line: 3847, column: 33, scope: !9074)
!9078 = !DILocation(line: 3847, column: 7, scope: !9022)
!9079 = !DILocation(line: 3850, column: 3, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3850, column: 3)
!9081 = !DILocation(line: 0, scope: !9080)
!9082 = !DILocation(line: 3850, column: 17, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 3850, column: 3)
!9084 = !DILocation(line: 3852, column: 13, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 3851, column: 5)
!9086 = !DILocation(line: 3854, column: 16, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 3854, column: 11)
!9088 = !DILocation(line: 3854, column: 21, scope: !9087)
!9089 = !DILocation(line: 3854, column: 29, scope: !9087)
!9090 = !DILocation(line: 3855, column: 10, scope: !9087)
!9091 = !DILocation(line: 3855, column: 20, scope: !9087)
!9092 = !DILocation(line: 3855, column: 17, scope: !9087)
!9093 = !DILocation(line: 3855, column: 27, scope: !9087)
!9094 = !DILocation(line: 3855, column: 35, scope: !9087)
!9095 = !DILocation(line: 3855, column: 30, scope: !9087)
!9096 = !DILocation(line: 3854, column: 11, scope: !9085)
!9097 = !DILocation(line: 3850, column: 25, scope: !9083)
!9098 = !DILocation(line: 3850, column: 3, scope: !9083)
!9099 = distinct !{!9099, !9079, !9100}
!9100 = !DILocation(line: 3860, column: 5, scope: !9080)
!9101 = !DILocation(line: 3861, column: 8, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3861, column: 7)
!9103 = !DILocation(line: 3861, column: 13, scope: !9102)
!9104 = !DILocation(line: 3861, column: 22, scope: !9102)
!9105 = !DILocation(line: 3861, column: 16, scope: !9102)
!9106 = !DILocation(line: 3861, column: 33, scope: !9102)
!9107 = !DILocation(line: 3861, column: 42, scope: !9102)
!9108 = !DILocation(line: 3861, column: 36, scope: !9102)
!9109 = !DILocation(line: 3861, column: 7, scope: !9022)
!9110 = !DILocation(line: 3864, column: 13, scope: !9040)
!9111 = !DILocation(line: 3864, column: 7, scope: !9040)
!9112 = !DILocation(line: 0, scope: !9040)
!9113 = !DILocation(line: 3864, column: 7, scope: !9022)
!9114 = !DILocation(line: 3867, column: 13, scope: !9039)
!9115 = !DILocation(line: 3869, column: 16, scope: !9039)
!9116 = !DILocation(line: 0, scope: !9039)
!9117 = !DILocation(line: 3870, column: 11, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 3870, column: 11)
!9119 = !DILocation(line: 3870, column: 11, scope: !9039)
!9120 = !DILocation(line: 3872, column: 5, scope: !9039)
!9121 = !DILocation(line: 3876, column: 7, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 3876, column: 7)
!9123 = !DILocation(line: 3876, column: 17, scope: !9122)
!9124 = !DILocation(line: 3876, column: 21, scope: !9122)
!9125 = !DILocation(line: 3876, column: 32, scope: !9122)
!9126 = !DILocation(line: 3876, column: 7, scope: !9022)
!9127 = !DILocation(line: 3878, column: 7, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 3877, column: 5)
!9129 = !DILocation(line: 3879, column: 27, scope: !9128)
!9130 = !DILocation(line: 3879, column: 38, scope: !9128)
!9131 = !DILocation(line: 3879, column: 7, scope: !9128)
!9132 = !DILocation(line: 3880, column: 16, scope: !9128)
!9133 = !DILocation(line: 3880, column: 7, scope: !9128)
!9134 = !DILocation(line: 3881, column: 27, scope: !9128)
!9135 = !DILocation(line: 3881, column: 7, scope: !9128)
!9136 = !DILocation(line: 3882, column: 16, scope: !9128)
!9137 = !DILocation(line: 3882, column: 7, scope: !9128)
!9138 = !DILocation(line: 3883, column: 5, scope: !9128)
!9139 = !DILocation(line: 3885, column: 8, scope: !9043)
!9140 = !DILocation(line: 3886, column: 7, scope: !9043)
!9141 = !DILocation(line: 3886, column: 38, scope: !9043)
!9142 = !DILocation(line: 3886, column: 63, scope: !9043)
!9143 = !DILocation(line: 3886, column: 11, scope: !9043)
!9144 = !DILocation(line: 3885, column: 7, scope: !9022)
!9145 = !DILocation(line: 3888, column: 18, scope: !9042)
!9146 = !DILocation(line: 0, scope: !9042)
!9147 = !DILocation(line: 3889, column: 13, scope: !9042)
!9148 = !DILocation(line: 3890, column: 5, scope: !9042)
!9149 = !DILocation(line: 3892, column: 11, scope: !9043)
!9150 = !DILocation(line: 3894, column: 1, scope: !9022)
!9151 = distinct !DISubprogram(name: "sra_ipa_modify_assign", scope: !3, file: !3, line: 3900, type: !3236, scopeLine: 3901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9152)
!9152 = !{!9153, !9154, !9155, !9156, !9157, !9158, !9159, !9160, !9163}
!9153 = !DILocalVariable(name: "stmt_ptr", arg: 1, scope: !9151, file: !3, line: 3900, type: !2895)
!9154 = !DILocalVariable(name: "gsi", arg: 2, scope: !9151, file: !3, line: 3900, type: !3228)
!9155 = !DILocalVariable(name: "data", arg: 3, scope: !9151, file: !3, line: 3900, type: !684)
!9156 = !DILocalVariable(name: "stmt", scope: !9151, file: !3, line: 3902, type: !1011)
!9157 = !DILocalVariable(name: "lhs_p", scope: !9151, file: !3, line: 3903, type: !1045)
!9158 = !DILocalVariable(name: "rhs_p", scope: !9151, file: !3, line: 3903, type: !1045)
!9159 = !DILocalVariable(name: "any", scope: !9151, file: !3, line: 3904, type: !679)
!9160 = !DILocalVariable(name: "new_rhs", scope: !9161, file: !3, line: 3916, type: !689)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 3915, column: 5)
!9162 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 3914, column: 7)
!9163 = !DILocalVariable(name: "tmp", scope: !9164, file: !3, line: 3943, type: !689)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 3942, column: 2)
!9165 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 3941, column: 11)
!9166 = !DILocation(line: 0, scope: !9151)
!9167 = !DILocation(line: 3902, column: 17, scope: !9151)
!9168 = !DILocation(line: 3906, column: 8, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 3906, column: 7)
!9170 = !DILocation(line: 3906, column: 7, scope: !9151)
!9171 = !DILocation(line: 3909, column: 11, scope: !9151)
!9172 = !DILocation(line: 3910, column: 11, scope: !9151)
!9173 = !DILocation(line: 3912, column: 9, scope: !9151)
!9174 = !DILocation(line: 3913, column: 10, scope: !9151)
!9175 = !DILocation(line: 3913, column: 7, scope: !9151)
!9176 = !DILocation(line: 3914, column: 7, scope: !9162)
!9177 = !DILocation(line: 3914, column: 7, scope: !9151)
!9178 = !DILocation(line: 0, scope: !9161)
!9179 = !DILocation(line: 3918, column: 39, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 3918, column: 11)
!9181 = !DILocation(line: 3918, column: 59, scope: !9180)
!9182 = !DILocation(line: 3918, column: 12, scope: !9180)
!9183 = !DILocation(line: 0, scope: !9180)
!9184 = !DILocation(line: 3918, column: 11, scope: !9161)
!9185 = !DILocation(line: 3920, column: 27, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 3920, column: 8)
!9187 = distinct !DILexicalBlock(scope: !9180, file: !3, line: 3919, column: 2)
!9188 = !DILocation(line: 3920, column: 8, scope: !9187)
!9189 = !DILocation(line: 3923, column: 32, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 3923, column: 12)
!9191 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 3921, column: 6)
!9192 = !DILocation(line: 3923, column: 12, scope: !9190)
!9193 = !DILocation(line: 0, scope: !9190)
!9194 = !DILocation(line: 3923, column: 12, scope: !9191)
!9195 = !DILocation(line: 3924, column: 12, scope: !9190)
!9196 = !DILocation(line: 3924, column: 10, scope: !9190)
!9197 = !DILocation(line: 3924, column: 3, scope: !9190)
!9198 = !DILocation(line: 3926, column: 12, scope: !9190)
!9199 = !DILocation(line: 3926, column: 10, scope: !9190)
!9200 = !DILocation(line: 3929, column: 16, scope: !9186)
!9201 = !DILocation(line: 3933, column: 16, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9180, file: !3, line: 3933, column: 16)
!9203 = !DILocation(line: 3934, column: 9, scope: !9202)
!9204 = !DILocation(line: 3934, column: 32, scope: !9202)
!9205 = !DILocation(line: 3934, column: 12, scope: !9202)
!9206 = !DILocation(line: 3935, column: 9, scope: !9202)
!9207 = !DILocation(line: 3935, column: 28, scope: !9202)
!9208 = !DILocation(line: 3935, column: 13, scope: !9202)
!9209 = !DILocation(line: 3933, column: 16, scope: !9180)
!9210 = !DILocation(line: 3939, column: 12, scope: !9202)
!9211 = !DILocation(line: 3939, column: 2, scope: !9202)
!9212 = !DILocation(line: 3916, column: 12, scope: !9161)
!9213 = !DILocation(line: 3941, column: 11, scope: !9165)
!9214 = !DILocation(line: 3941, column: 11, scope: !9161)
!9215 = !DILocation(line: 3943, column: 15, scope: !9164)
!9216 = !DILocation(line: 0, scope: !9164)
!9217 = !DILocation(line: 3946, column: 4, scope: !9164)
!9218 = !DILocation(line: 3947, column: 2, scope: !9164)
!9219 = !DILocation(line: 3953, column: 1, scope: !9151)
!9220 = distinct !DISubprogram(name: "replace_removed_params_ssa_names", scope: !3, file: !3, line: 3759, type: !3239, scopeLine: 3760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9221)
!9221 = !{!9222, !9223, !9224, !9225, !9226, !9227, !9228, !9229}
!9222 = !DILocalVariable(name: "stmt", arg: 1, scope: !9220, file: !3, line: 3759, type: !1011)
!9223 = !DILocalVariable(name: "data", arg: 2, scope: !9220, file: !3, line: 3759, type: !684)
!9224 = !DILocalVariable(name: "adjustments", scope: !9220, file: !3, line: 3761, type: !2051)
!9225 = !DILocalVariable(name: "adj", scope: !9220, file: !3, line: 3762, type: !8363)
!9226 = !DILocalVariable(name: "lhs", scope: !9220, file: !3, line: 3763, type: !689)
!9227 = !DILocalVariable(name: "decl", scope: !9220, file: !3, line: 3763, type: !689)
!9228 = !DILocalVariable(name: "repl", scope: !9220, file: !3, line: 3763, type: !689)
!9229 = !DILocalVariable(name: "name", scope: !9220, file: !3, line: 3763, type: !689)
!9230 = !DILocation(line: 0, scope: !9220)
!9231 = !DILocation(line: 3765, column: 17, scope: !9220)
!9232 = !DILocation(line: 3766, column: 7, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 3766, column: 7)
!9234 = !DILocation(line: 3766, column: 26, scope: !9233)
!9235 = !DILocation(line: 3766, column: 7, scope: !9220)
!9236 = !DILocation(line: 3767, column: 11, scope: !9233)
!9237 = !DILocation(line: 3767, column: 5, scope: !9233)
!9238 = !DILocation(line: 3768, column: 12, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 3768, column: 12)
!9240 = !DILocation(line: 3768, column: 12, scope: !9233)
!9241 = !DILocation(line: 3769, column: 11, scope: !9239)
!9242 = !DILocation(line: 3769, column: 5, scope: !9239)
!9243 = !DILocation(line: 3770, column: 12, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 3770, column: 12)
!9245 = !DILocation(line: 3770, column: 12, scope: !9239)
!9246 = !DILocation(line: 3771, column: 11, scope: !9244)
!9247 = !DILocation(line: 3771, column: 5, scope: !9244)
!9248 = !DILocation(line: 3773, column: 5, scope: !9244)
!9249 = !DILocation(line: 0, scope: !9233)
!9250 = !DILocation(line: 3775, column: 7, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 3775, column: 7)
!9252 = !DILocation(line: 3775, column: 23, scope: !9251)
!9253 = !DILocation(line: 3775, column: 7, scope: !9220)
!9254 = !DILocation(line: 3777, column: 10, scope: !9220)
!9255 = !DILocation(line: 3778, column: 7, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 3778, column: 7)
!9257 = !DILocation(line: 3778, column: 24, scope: !9256)
!9258 = !DILocation(line: 3778, column: 7, scope: !9220)
!9259 = !DILocation(line: 3781, column: 9, scope: !9220)
!9260 = !DILocation(line: 3782, column: 8, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 3782, column: 7)
!9262 = !DILocation(line: 3782, column: 7, scope: !9220)
!9263 = !DILocation(line: 3785, column: 10, scope: !9220)
!9264 = !DILocation(line: 3786, column: 10, scope: !9220)
!9265 = !DILocation(line: 3788, column: 7, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 3788, column: 7)
!9267 = !DILocation(line: 3788, column: 7, scope: !9220)
!9268 = !DILocation(line: 3790, column: 7, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 3789, column: 5)
!9270 = !DILocation(line: 3791, column: 27, scope: !9269)
!9271 = !DILocation(line: 3791, column: 7, scope: !9269)
!9272 = !DILocation(line: 3792, column: 16, scope: !9269)
!9273 = !DILocation(line: 3792, column: 7, scope: !9269)
!9274 = !DILocation(line: 3793, column: 27, scope: !9269)
!9275 = !DILocation(line: 3793, column: 7, scope: !9269)
!9276 = !DILocation(line: 3794, column: 16, scope: !9269)
!9277 = !DILocation(line: 3794, column: 7, scope: !9269)
!9278 = !DILocation(line: 3795, column: 5, scope: !9269)
!9279 = !DILocation(line: 3797, column: 7, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 3797, column: 7)
!9281 = !DILocation(line: 3797, column: 7, scope: !9220)
!9282 = !DILocation(line: 3798, column: 5, scope: !9280)
!9283 = !DILocation(line: 3799, column: 12, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 3799, column: 12)
!9285 = !DILocation(line: 3799, column: 12, scope: !9280)
!9286 = !DILocation(line: 3800, column: 5, scope: !9284)
!9287 = !DILocation(line: 3802, column: 5, scope: !9284)
!9288 = !DILocation(line: 3804, column: 3, scope: !9220)
!9289 = !DILocation(line: 3805, column: 3, scope: !9220)
!9290 = !DILocation(line: 3806, column: 1, scope: !9220)
!9291 = distinct !DISubprogram(name: "sra_ipa_reset_debug_stmts", scope: !3, file: !3, line: 3959, type: !9292, scopeLine: 3960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9294)
!9292 = !DISubroutineType(types: !9293)
!9293 = !{null, !3006}
!9294 = !{!9295, !9296, !9297, !9298, !9302, !9303, !9304}
!9295 = !DILocalVariable(name: "adjustments", arg: 1, scope: !9291, file: !3, line: 3959, type: !3006)
!9296 = !DILocalVariable(name: "i", scope: !9291, file: !3, line: 3961, type: !680)
!9297 = !DILocalVariable(name: "len", scope: !9291, file: !3, line: 3961, type: !680)
!9298 = !DILocalVariable(name: "adj", scope: !9299, file: !3, line: 3966, type: !8363)
!9299 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 3965, column: 5)
!9300 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 3964, column: 3)
!9301 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 3964, column: 3)
!9302 = !DILocalVariable(name: "ui", scope: !9299, file: !3, line: 3967, type: !7311)
!9303 = !DILocalVariable(name: "stmt", scope: !9299, file: !3, line: 3968, type: !1011)
!9304 = !DILocalVariable(name: "name", scope: !9299, file: !3, line: 3969, type: !689)
!9305 = !DILocation(line: 0, scope: !9291)
!9306 = !DILocation(line: 3963, column: 9, scope: !9291)
!9307 = !DILocation(line: 0, scope: !9299)
!9308 = !DILocation(line: 3964, column: 8, scope: !9301)
!9309 = !DILocation(line: 0, scope: !9301)
!9310 = !DILocation(line: 3964, column: 17, scope: !9300)
!9311 = !DILocation(line: 3964, column: 3, scope: !9301)
!9312 = !DILocation(line: 3967, column: 7, scope: !9299)
!9313 = !DILocation(line: 3971, column: 13, scope: !9299)
!9314 = !DILocation(line: 3972, column: 16, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 3972, column: 11)
!9316 = !DILocation(line: 3972, column: 11, scope: !9315)
!9317 = !DILocation(line: 3972, column: 27, scope: !9315)
!9318 = !DILocation(line: 3972, column: 51, scope: !9315)
!9319 = !DILocation(line: 3972, column: 31, scope: !9315)
!9320 = !DILocation(line: 3972, column: 11, scope: !9299)
!9321 = !DILocation(line: 3974, column: 34, scope: !9299)
!9322 = !DILocation(line: 3974, column: 45, scope: !9299)
!9323 = !DILocation(line: 3974, column: 14, scope: !9299)
!9324 = !DILocation(line: 3975, column: 12, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 3975, column: 11)
!9326 = !DILocation(line: 3975, column: 11, scope: !9299)
!9327 = !DILocation(line: 3977, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 3977, column: 7)
!9329 = !DILocation(line: 0, scope: !9328)
!9330 = !DILocation(line: 3977, column: 7, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 3977, column: 7)
!9332 = !DILocation(line: 3980, column: 4, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 3978, column: 2)
!9334 = !DILocation(line: 3981, column: 4, scope: !9333)
!9335 = !DILocation(line: 3982, column: 4, scope: !9333)
!9336 = distinct !{!9336, !9327, !9337}
!9337 = !DILocation(line: 3983, column: 2, scope: !9328)
!9338 = !DILocation(line: 3984, column: 5, scope: !9300)
!9339 = !DILocation(line: 3964, column: 25, scope: !9300)
!9340 = !DILocation(line: 3964, column: 3, scope: !9300)
!9341 = distinct !{!9341, !9311, !9342}
!9342 = !DILocation(line: 3984, column: 5, scope: !9301)
!9343 = !DILocation(line: 3985, column: 1, scope: !9291)
!9344 = distinct !DISubprogram(name: "convert_callers", scope: !3, file: !3, line: 4005, type: !7255, scopeLine: 4006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9345)
!9345 = !{!9346, !9347, !9348, !9349, !9350, !9351, !9352, !9356, !9360}
!9346 = !DILocalVariable(name: "node", arg: 1, scope: !9344, file: !3, line: 4005, type: !2800)
!9347 = !DILocalVariable(name: "adjustments", arg: 2, scope: !9344, file: !3, line: 4005, type: !3006)
!9348 = !DILocalVariable(name: "old_cur_fndecl", scope: !9344, file: !3, line: 4007, type: !689)
!9349 = !DILocalVariable(name: "cs", scope: !9344, file: !3, line: 4008, type: !2805)
!9350 = !DILocalVariable(name: "this_block", scope: !9344, file: !3, line: 4009, type: !1410)
!9351 = !DILocalVariable(name: "recomputed_callers", scope: !9344, file: !3, line: 4010, type: !1528)
!9352 = !DILocalVariable(name: "gsi", scope: !9353, file: !3, line: 4043, type: !3229)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 4042, column: 5)
!9354 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 4041, column: 3)
!9355 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 4041, column: 3)
!9356 = !DILocalVariable(name: "stmt", scope: !9357, file: !3, line: 4047, type: !1011)
!9357 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 4046, column: 9)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 4045, column: 7)
!9359 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 4045, column: 7)
!9360 = !DILocalVariable(name: "call_fndecl", scope: !9357, file: !3, line: 4048, type: !689)
!9361 = !DILocation(line: 0, scope: !9344)
!9362 = !DILocation(line: 4007, column: 25, scope: !9344)
!9363 = !DILocation(line: 4010, column: 31, scope: !9344)
!9364 = !DILocation(line: 4012, column: 19, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 4012, column: 3)
!9366 = !DILocation(line: 4012, column: 8, scope: !9365)
!9367 = !DILocation(line: 0, scope: !9365)
!9368 = !DILocation(line: 4012, column: 3, scope: !9365)
!9369 = !DILocation(line: 4014, column: 35, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 4013, column: 5)
!9371 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 4012, column: 3)
!9372 = !DILocation(line: 4014, column: 43, scope: !9370)
!9373 = !DILocation(line: 4014, column: 29, scope: !9370)
!9374 = !DILocation(line: 4015, column: 18, scope: !9370)
!9375 = !DILocation(line: 4015, column: 7, scope: !9370)
!9376 = !DILocation(line: 4017, column: 11, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 4017, column: 11)
!9378 = !DILocation(line: 4017, column: 11, scope: !9370)
!9379 = !DILocation(line: 4019, column: 8, scope: !9377)
!9380 = !DILocation(line: 4019, column: 16, scope: !9377)
!9381 = !DILocation(line: 4019, column: 25, scope: !9377)
!9382 = !DILocation(line: 4019, column: 33, scope: !9377)
!9383 = !DILocation(line: 4020, column: 4, scope: !9377)
!9384 = !DILocation(line: 4021, column: 26, scope: !9377)
!9385 = !DILocation(line: 4021, column: 4, scope: !9377)
!9386 = !DILocation(line: 4018, column: 2, scope: !9377)
!9387 = !DILocation(line: 4023, column: 42, scope: !9370)
!9388 = !DILocation(line: 4023, column: 7, scope: !9370)
!9389 = !DILocation(line: 4025, column: 7, scope: !9370)
!9390 = !DILocation(line: 4012, column: 41, scope: !9371)
!9391 = !DILocation(line: 4012, column: 3, scope: !9371)
!9392 = distinct !{!9392, !9368, !9393}
!9393 = !DILocation(line: 4026, column: 5, scope: !9365)
!9394 = !DILocation(line: 4028, column: 8, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 4028, column: 3)
!9396 = !DILocation(line: 0, scope: !9395)
!9397 = !DILocation(line: 4028, column: 3, scope: !9395)
!9398 = !DILocation(line: 4029, column: 48, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 4029, column: 9)
!9400 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 4028, column: 3)
!9401 = !DILocation(line: 4029, column: 56, scope: !9399)
!9402 = !DILocation(line: 4029, column: 10, scope: !9399)
!9403 = !DILocation(line: 4029, column: 9, scope: !9400)
!9404 = !DILocation(line: 4031, column: 33, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9399, file: !3, line: 4030, column: 7)
!9406 = !DILocation(line: 4031, column: 2, scope: !9405)
!9407 = !DILocation(line: 4032, column: 42, scope: !9405)
!9408 = !DILocation(line: 4032, column: 50, scope: !9405)
!9409 = !DILocation(line: 4032, column: 2, scope: !9405)
!9410 = !DILocation(line: 4033, column: 7, scope: !9405)
!9411 = !DILocation(line: 4028, column: 41, scope: !9400)
!9412 = !DILocation(line: 4028, column: 3, scope: !9400)
!9413 = distinct !{!9413, !9397, !9414}
!9414 = !DILocation(line: 4033, column: 7, scope: !9395)
!9415 = !DILocation(line: 4034, column: 3, scope: !9344)
!9416 = !DILocation(line: 4036, column: 25, scope: !9344)
!9417 = !DILocation(line: 4038, column: 8, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 4038, column: 7)
!9419 = !DILocation(line: 4038, column: 7, scope: !9344)
!9420 = !DILocation(line: 4041, column: 3, scope: !9355)
!9421 = !DILocation(line: 0, scope: !9353)
!9422 = !DILocation(line: 0, scope: !9359)
!9423 = !DILocation(line: 4041, column: 3, scope: !9354)
!9424 = !DILocation(line: 0, scope: !9355)
!9425 = !DILocation(line: 4043, column: 7, scope: !9353)
!9426 = !DILocation(line: 4045, column: 18, scope: !9359)
!9427 = !DILocation(line: 4045, column: 12, scope: !9359)
!9428 = !DILocation(line: 4045, column: 46, scope: !9358)
!9429 = !DILocation(line: 4045, column: 45, scope: !9358)
!9430 = !DILocation(line: 4045, column: 7, scope: !9359)
!9431 = !DILocation(line: 4047, column: 18, scope: !9357)
!9432 = !DILocation(line: 0, scope: !9357)
!9433 = !DILocation(line: 4049, column: 8, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9357, file: !3, line: 4049, column: 8)
!9435 = !DILocation(line: 4049, column: 27, scope: !9434)
!9436 = !DILocation(line: 4049, column: 8, scope: !9357)
!9437 = !DILocation(line: 4051, column: 18, scope: !9357)
!9438 = !DILocation(line: 4052, column: 8, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9357, file: !3, line: 4052, column: 8)
!9440 = !DILocation(line: 4052, column: 20, scope: !9439)
!9441 = !DILocation(line: 4052, column: 23, scope: !9439)
!9442 = !DILocation(line: 4052, column: 53, scope: !9439)
!9443 = !DILocation(line: 4052, column: 8, scope: !9357)
!9444 = !DILocation(line: 4054, column: 12, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 4054, column: 12)
!9446 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 4053, column: 6)
!9447 = !DILocation(line: 4054, column: 12, scope: !9446)
!9448 = !DILocation(line: 4055, column: 3, scope: !9445)
!9449 = !DILocation(line: 4056, column: 8, scope: !9446)
!9450 = !DILocation(line: 4057, column: 6, scope: !9446)
!9451 = !DILocation(line: 4045, column: 63, scope: !9358)
!9452 = !DILocation(line: 4045, column: 7, scope: !9358)
!9453 = distinct !{!9453, !9430, !9454}
!9454 = !DILocation(line: 4058, column: 2, scope: !9359)
!9455 = !DILocation(line: 4059, column: 5, scope: !9354)
!9456 = !DILocation(line: 0, scope: !9354)
!9457 = distinct !{!9457, !9420, !9458}
!9458 = !DILocation(line: 4059, column: 5, scope: !9355)
!9459 = !DILocation(line: 4062, column: 1, scope: !9344)
!9460 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_base_length", scope: !2053, file: !2053, line: 484, type: !9461, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9465)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!7, !9463}
!9463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9464, size: 64)
!9464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2057)
!9465 = !{!9466}
!9466 = !DILocalVariable(name: "vec_", arg: 1, scope: !9460, file: !2053, line: 484, type: !9463)
!9467 = !DILocation(line: 0, scope: !9460)
!9468 = !DILocation(line: 484, column: 1, scope: !9460)
!9469 = distinct !DISubprogram(name: "VEC_ipa_parm_adjustment_t_base_index", scope: !2053, file: !2053, line: 484, type: !9470, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9472)
!9470 = !DISubroutineType(types: !9471)
!9471 = !{!8936, !8937, !7}
!9472 = !{!9473, !9474}
!9473 = !DILocalVariable(name: "vec_", arg: 1, scope: !9469, file: !2053, line: 484, type: !8937)
!9474 = !DILocalVariable(name: "ix_", arg: 2, scope: !9469, file: !2053, line: 484, type: !7)
!9475 = !DILocation(line: 0, scope: !9469)
!9476 = !DILocation(line: 484, column: 1, scope: !9469)
!9477 = distinct !DISubprogram(name: "get_adjustment_for_base", scope: !3, file: !3, line: 3735, type: !9478, scopeLine: 3736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9480)
!9478 = !DISubroutineType(types: !9479)
!9479 = !{!8363, !3006, !689}
!9480 = !{!9481, !9482, !9483, !9484, !9485}
!9481 = !DILocalVariable(name: "adjustments", arg: 1, scope: !9477, file: !3, line: 3735, type: !3006)
!9482 = !DILocalVariable(name: "base", arg: 2, scope: !9477, file: !3, line: 3735, type: !689)
!9483 = !DILocalVariable(name: "i", scope: !9477, file: !3, line: 3737, type: !680)
!9484 = !DILocalVariable(name: "len", scope: !9477, file: !3, line: 3737, type: !680)
!9485 = !DILocalVariable(name: "adj", scope: !9486, file: !3, line: 3742, type: !8363)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 3741, column: 5)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 3740, column: 3)
!9488 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 3740, column: 3)
!9489 = !DILocation(line: 0, scope: !9477)
!9490 = !DILocation(line: 3739, column: 9, scope: !9477)
!9491 = !DILocation(line: 3740, column: 8, scope: !9488)
!9492 = !DILocation(line: 0, scope: !9488)
!9493 = !DILocation(line: 3740, column: 17, scope: !9487)
!9494 = !DILocation(line: 3740, column: 3, scope: !9488)
!9495 = !DILocation(line: 3744, column: 13, scope: !9486)
!9496 = !DILocation(line: 0, scope: !9486)
!9497 = !DILocation(line: 3745, column: 17, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 3745, column: 11)
!9499 = !DILocation(line: 3745, column: 12, scope: !9498)
!9500 = !DILocation(line: 3745, column: 28, scope: !9498)
!9501 = !DILocation(line: 3745, column: 36, scope: !9498)
!9502 = !DILocation(line: 3745, column: 41, scope: !9498)
!9503 = !DILocation(line: 3745, column: 11, scope: !9486)
!9504 = !DILocation(line: 3747, column: 5, scope: !9487)
!9505 = !DILocation(line: 3740, column: 25, scope: !9487)
!9506 = !DILocation(line: 3740, column: 3, scope: !9487)
!9507 = distinct !{!9507, !9494, !9508}
!9508 = !DILocation(line: 3747, column: 5, scope: !9488)
!9509 = !DILocation(line: 3750, column: 1, scope: !9477)
!9510 = distinct !DISubprogram(name: "get_replaced_param_substitute", scope: !3, file: !3, line: 3707, type: !9511, scopeLine: 3708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9513)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{!689, !8363}
!9513 = !{!9514, !9515, !9516}
!9514 = !DILocalVariable(name: "adj", arg: 1, scope: !9510, file: !3, line: 3707, type: !8363)
!9515 = !DILocalVariable(name: "repl", scope: !9510, file: !3, line: 3709, type: !689)
!9516 = !DILocalVariable(name: "pretty_name", scope: !9517, file: !3, line: 3712, type: !682)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 3711, column: 5)
!9518 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 3710, column: 7)
!9519 = !DILocation(line: 0, scope: !9510)
!9520 = !DILocation(line: 3710, column: 13, scope: !9518)
!9521 = !DILocation(line: 3710, column: 8, scope: !9518)
!9522 = !DILocation(line: 3710, column: 7, scope: !9510)
!9523 = !DILocation(line: 3712, column: 49, scope: !9517)
!9524 = !DILocation(line: 3712, column: 27, scope: !9517)
!9525 = !DILocation(line: 0, scope: !9517)
!9526 = !DILocation(line: 3714, column: 30, scope: !9517)
!9527 = !DILocation(line: 3714, column: 14, scope: !9517)
!9528 = !DILocation(line: 3715, column: 11, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 3715, column: 11)
!9530 = !DILocation(line: 3715, column: 40, scope: !9529)
!9531 = !DILocation(line: 3716, column: 4, scope: !9529)
!9532 = !DILocation(line: 3716, column: 36, scope: !9529)
!9533 = !DILocation(line: 3715, column: 11, scope: !9517)
!9534 = !DILocation(line: 3717, column: 2, scope: !9529)
!9535 = !DILocation(line: 3717, column: 27, scope: !9529)
!9536 = !DILocation(line: 3718, column: 26, scope: !9517)
!9537 = !DILocation(line: 3718, column: 7, scope: !9517)
!9538 = !DILocation(line: 3718, column: 24, scope: !9517)
!9539 = !DILocation(line: 3719, column: 7, scope: !9517)
!9540 = !DILocation(line: 3721, column: 7, scope: !9517)
!9541 = !DILocation(line: 3722, column: 7, scope: !9517)
!9542 = !DILocation(line: 3723, column: 25, scope: !9517)
!9543 = !DILocation(line: 3724, column: 5, scope: !9517)
!9544 = !DILocation(line: 0, scope: !9518)
!9545 = !DILocation(line: 3727, column: 3, scope: !9510)
!9546 = distinct !DISubprogram(name: "make_ssa_name", scope: !4200, file: !4200, line: 1245, type: !9547, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9549)
!9547 = !DISubroutineType(types: !9548)
!9548 = !{!689, !689, !1011}
!9549 = !{!9550, !9551}
!9550 = !DILocalVariable(name: "var", arg: 1, scope: !9546, file: !4200, line: 1245, type: !689)
!9551 = !DILocalVariable(name: "stmt", arg: 2, scope: !9546, file: !4200, line: 1245, type: !1011)
!9552 = !DILocation(line: 0, scope: !9546)
!9553 = !DILocation(line: 1247, column: 28, scope: !9546)
!9554 = !DILocation(line: 1247, column: 10, scope: !9546)
!9555 = !DILocation(line: 1247, column: 3, scope: !9546)
!9556 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !571, file: !571, line: 1898, type: !6673, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9557)
!9557 = !{!9558, !9559}
!9558 = !DILocalVariable(name: "gs", arg: 1, scope: !9556, file: !571, line: 1898, type: !1011)
!9559 = !DILocalVariable(name: "lhs", arg: 2, scope: !9556, file: !571, line: 1898, type: !689)
!9560 = !DILocation(line: 0, scope: !9556)
!9561 = !DILocation(line: 1901, column: 3, scope: !9556)
!9562 = !DILocation(line: 1902, column: 7, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9556, file: !571, line: 1902, column: 7)
!9564 = !DILocation(line: 1902, column: 11, scope: !9563)
!9565 = !DILocation(line: 1902, column: 14, scope: !9563)
!9566 = !DILocation(line: 1902, column: 30, scope: !9563)
!9567 = !DILocation(line: 1902, column: 7, scope: !9556)
!9568 = !DILocation(line: 1903, column: 5, scope: !9563)
!9569 = !DILocation(line: 1903, column: 29, scope: !9563)
!9570 = !DILocation(line: 1904, column: 1, scope: !9556)
!9571 = distinct !DISubprogram(name: "gimple_phi_set_result", scope: !571, file: !571, line: 3089, type: !6673, scopeLine: 3090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9572)
!9572 = !{!9573, !9574}
!9573 = !DILocalVariable(name: "gs", arg: 1, scope: !9571, file: !571, line: 3089, type: !1011)
!9574 = !DILocalVariable(name: "result", arg: 2, scope: !9571, file: !571, line: 3089, type: !689)
!9575 = !DILocation(line: 0, scope: !9571)
!9576 = !DILocation(line: 3092, column: 18, scope: !9571)
!9577 = !DILocation(line: 3092, column: 25, scope: !9571)
!9578 = !DILocation(line: 3093, column: 1, scope: !9571)
!9579 = distinct !DISubprogram(name: "gimple_debug_bind_reset_value", scope: !571, file: !571, line: 3336, type: !4572, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9580)
!9580 = !{!9581}
!9581 = !DILocalVariable(name: "dbg", arg: 1, scope: !9579, file: !571, line: 3336, type: !1011)
!9582 = !DILocation(line: 0, scope: !9579)
!9583 = !DILocation(line: 3342, column: 3, scope: !9579)
!9584 = !DILocation(line: 3343, column: 1, scope: !9579)
