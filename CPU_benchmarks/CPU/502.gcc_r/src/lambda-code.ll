; ModuleID = 'lambda-code.bc'
source_filename = "lambda-code.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.lambda_body_vector_s = type { i32*, i32, i32 }
%struct.lambda_trans_matrix_s = type { i32**, i32, i32, i32 }
%struct.lambda_linear_expression_s = type { i32*, i32, i32*, i32, %struct.lambda_linear_expression_s* }
%struct.lambda_loop_s = type { %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s*, i32 }
%struct.lambda_loopnest_s = type { %struct.lambda_loop_s**, i32, i32 }
%struct.lambda_lattice_s = type { i32**, i32, i32*, i32**, i32 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.VEC_lambda_loop_heap = type { %struct.VEC_lambda_loop_base }
%struct.VEC_lambda_loop_base = type { i32, i32, [1 x %struct.lambda_loop_s*] }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.VEC_source_location_heap = type { %struct.VEC_source_location_base }
%struct.VEC_source_location_base = type { i32, i32, [1 x i32] }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.VEC_ddr_p_heap = type { %struct.VEC_ddr_p_base }
%struct.VEC_ddr_p_base = type { i32, i32, [1 x %struct.data_dependence_relation*] }
%struct.data_dependence_relation = type { %struct.data_reference*, %struct.data_reference*, %union.tree_node*, %struct.VEC_subscript_p_heap*, %struct.VEC_loop_p_heap*, %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap*, i32, i8, i8, i8 }
%struct.data_reference = type { %union.gimple_statement_d*, %union.tree_node*, i8*, i8, %struct.innermost_loop_behavior, %struct.indices, %struct.dr_alias, %struct.access_matrix* }
%struct.innermost_loop_behavior = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.indices = type { %union.tree_node*, %struct.VEC_tree_heap* }
%struct.dr_alias = type { %struct.ptr_info_def*, %struct.bitmap_head_def* }
%struct.access_matrix = type { %struct.VEC_loop_p_heap*, i32, %struct.VEC_tree_heap*, %struct.VEC_lambda_vector_gc* }
%struct.VEC_lambda_vector_gc = type { %struct.VEC_lambda_vector_base }
%struct.VEC_lambda_vector_base = type { i32, i32, [1 x i32*] }
%struct.VEC_subscript_p_heap = type { %struct.VEC_subscript_p_base }
%struct.VEC_subscript_p_base = type { i32, i32, [1 x %struct.subscript*] }
%struct.subscript = type { %struct.conflict_function*, %struct.conflict_function*, %union.tree_node*, %union.tree_node* }
%struct.conflict_function = type { i32, [2 x %struct.VEC_tree_heap*] }
%struct.VEC_loop_p_heap = type { %struct.VEC_loop_p_base }
%struct.VEC_lambda_vector_heap = type { %struct.VEC_lambda_vector_base }
%struct.VEC_data_reference_p_heap = type { %struct.VEC_data_reference_p_base }
%struct.VEC_data_reference_p_base = type { i32, i32, [1 x %struct.data_reference*] }
%struct.pointer_set_t = type opaque
%struct.tree_map = type { %struct.tree_map_base, i32, %union.tree_node* }
%struct.tree_map_base = type { %union.tree_node* }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [14 x i8] c"lambda-code.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"\09Linear expression: \00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c" constant: %d \00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"  invariants: \00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"  denominator: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"  step size = %d \0A\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"  linear offset: \0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"  lower bound: \0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"  upper bound: \0A\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"Loop %c\0A\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.12 = private unnamed_addr constant [54 x i8] c"Not a perfect loop nest and couldn't convert to one.\0A\00", align 1
@.str.13 = private unnamed_addr constant [56 x i8] c"Successfully converted loop nest to perfect loop nest.\0A\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"Inverse of transformation matrix:\0A\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"lnivtmp\00", align 1
@chrec_dont_know = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@chrec_known = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.16 = private unnamed_addr constant [5 x i8] c"%3d \00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"%d%c\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"./lambda.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.23 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.24 = private unnamed_addr constant [89 x i8] c"Unable to convert loop: Cannot determine exit condition or induction variable for loop.\0A\00", align 1
@.str.25 = private unnamed_addr constant [69 x i8] c"Unable to convert loop: Cannot find PHI node for induction variable\0A\00", align 1
@.str.26 = private unnamed_addr constant [79 x i8] c"Unable to convert loop: Access function for induction variable phi is unknown\0A\00", align 1
@.str.27 = private unnamed_addr constant [56 x i8] c"Unable to convert loop: Cannot determine step of loop.\0A\00", align 1
@.str.28 = private unnamed_addr constant [54 x i8] c"Unable to convert loop: Step of loop is not integer.\0A\00", align 1
@.str.29 = private unnamed_addr constant [74 x i8] c"Unable to convert loop: PHI node for induction variable has >2 arguments\0A\00", align 1
@.str.30 = private unnamed_addr constant [75 x i8] c"Unable to convert loop: PHI edges both inside loop, or both outside loop.\0A\00", align 1
@.str.31 = private unnamed_addr constant [73 x i8] c"Unable to convert loop: Cannot convert lower bound to linear expression\0A\00", align 1
@.str.32 = private unnamed_addr constant [73 x i8] c"Unable to convert loop: Cannot convert upper bound to linear expression\0A\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.33 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"lletmp\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.35 = private unnamed_addr constant [7 x i8] c"lbvtmp\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"perfectiv\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"uboundvar\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@.str.39 = private unnamed_addr constant [11 x i8] c"perfecttmp\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.40 = private unnamed_addr constant [18 x i8] c"./tree-data-ref.h\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2034 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2047, metadata !DIExpression()), !dbg !2049
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2048, metadata !DIExpression()), !dbg !2049
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2050
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2051
  ret i32 %call, !dbg !2052
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2053 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2057
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2058
  ret i32 %call, !dbg !2059
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2060 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2115, metadata !DIExpression()), !dbg !2116
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2117
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2117
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2117
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2117
  %cmp = icmp uge i8* %0, %1, !dbg !2117
  %conv1 = zext i1 %cmp to i64, !dbg !2117
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2117
  %tobool = icmp eq i64 %expval, 0, !dbg !2117
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2117

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2117
  br label %cond.end, !dbg !2117

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2117
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2117
  %2 = load i8, i8* %0, align 1, !dbg !2117
  %conv3 = zext i8 %2 to i32, !dbg !2117
  br label %cond.end, !dbg !2117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2117
  ret i32 %cond, !dbg !2118
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2119 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2121, metadata !DIExpression()), !dbg !2122
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2123
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2123
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2123
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2123
  %cmp = icmp uge i8* %0, %1, !dbg !2123
  %conv1 = zext i1 %cmp to i64, !dbg !2123
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2123
  %tobool = icmp eq i64 %expval, 0, !dbg !2123
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2123

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2123
  br label %cond.end, !dbg !2123

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2123
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2123
  %2 = load i8, i8* %0, align 1, !dbg !2123
  %conv3 = zext i8 %2 to i32, !dbg !2123
  br label %cond.end, !dbg !2123

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2123
  ret i32 %cond, !dbg !2124
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2125 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2126
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2126
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2126
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2126
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2126
  %cmp = icmp uge i8* %1, %2, !dbg !2126
  %conv1 = zext i1 %cmp to i64, !dbg !2126
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2126
  %tobool = icmp eq i64 %expval, 0, !dbg !2126
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2126

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2126
  br label %cond.end, !dbg !2126

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2126
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2126
  %3 = load i8, i8* %1, align 1, !dbg !2126
  %conv3 = zext i8 %3 to i32, !dbg !2126
  br label %cond.end, !dbg !2126

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2126
  ret i32 %cond, !dbg !2127
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2128 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2132, metadata !DIExpression()), !dbg !2133
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2134
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2135
  ret i32 %call, !dbg !2136
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2137 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2141, metadata !DIExpression()), !dbg !2143
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2142, metadata !DIExpression()), !dbg !2143
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2144
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2144
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2144
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2144
  %cmp = icmp uge i8* %0, %1, !dbg !2144
  %conv1 = zext i1 %cmp to i64, !dbg !2144
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2144
  %tobool = icmp eq i64 %expval, 0, !dbg !2144
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2144

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2144
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2144
  br label %cond.end, !dbg !2144

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2144
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2144
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2144
  store i8 %conv2, i8* %0, align 1, !dbg !2144
  %conv6 = and i32 %__c, 255, !dbg !2144
  br label %cond.end, !dbg !2144

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2144
  ret i32 %cond, !dbg !2145
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2146 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2148, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2149, metadata !DIExpression()), !dbg !2150
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2151
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2151
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2151
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2151
  %cmp = icmp uge i8* %0, %1, !dbg !2151
  %conv1 = zext i1 %cmp to i64, !dbg !2151
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2151
  %tobool = icmp eq i64 %expval, 0, !dbg !2151
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2151

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2151
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2151
  br label %cond.end, !dbg !2151

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2151
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2151
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2151
  store i8 %conv2, i8* %0, align 1, !dbg !2151
  %conv6 = and i32 %__c, 255, !dbg !2151
  br label %cond.end, !dbg !2151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2151
  ret i32 %cond, !dbg !2152
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2153 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2155, metadata !DIExpression()), !dbg !2156
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2157
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2157
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2157
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2157
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2157
  %cmp = icmp uge i8* %1, %2, !dbg !2157
  %conv1 = zext i1 %cmp to i64, !dbg !2157
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2157
  %tobool = icmp eq i64 %expval, 0, !dbg !2157
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2157

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2157
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2157
  br label %cond.end, !dbg !2157

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2157
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2157
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2157
  store i8 %conv4, i8* %1, align 1, !dbg !2157
  %conv6 = and i32 %__c, 255, !dbg !2157
  br label %cond.end, !dbg !2157

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2157
  ret i32 %cond, !dbg !2158
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2159 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2165, metadata !DIExpression()), !dbg !2168
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2166, metadata !DIExpression()), !dbg !2168
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2167, metadata !DIExpression()), !dbg !2168
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2169
  ret i64 %call, !dbg !2170
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2171 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2173, metadata !DIExpression()), !dbg !2174
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2175
  %0 = load i32, i32* %_flags, align 8, !dbg !2175
  %and = lshr i32 %0, 4, !dbg !2175
  %and.lobit = and i32 %and, 1, !dbg !2175
  ret i32 %and.lobit, !dbg !2176
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2177 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2179, metadata !DIExpression()), !dbg !2180
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2181
  %0 = load i32, i32* %_flags, align 8, !dbg !2181
  %and = lshr i32 %0, 5, !dbg !2181
  %and.lobit = and i32 %and, 1, !dbg !2181
  ret i32 %and.lobit, !dbg !2182
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2183 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2186, metadata !DIExpression()), !dbg !2187
  %__c.off = add i32 %__c, 128, !dbg !2188
  %0 = icmp ult i32 %__c.off, 384, !dbg !2188
  br i1 %0, label %cond.true, label %cond.end, !dbg !2188

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2189
  %1 = load i32*, i32** %call, align 8, !dbg !2190
  %idxprom = sext i32 %__c to i64, !dbg !2191
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2191
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2191
  br label %cond.end, !dbg !2192

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2192
  ret i32 %cond, !dbg !2193
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2194 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2196, metadata !DIExpression()), !dbg !2197
  %__c.off = add i32 %__c, 128, !dbg !2198
  %0 = icmp ult i32 %__c.off, 384, !dbg !2198
  br i1 %0, label %cond.true, label %cond.end, !dbg !2198

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2199
  %1 = load i32*, i32** %call, align 8, !dbg !2200
  %idxprom = sext i32 %__c to i64, !dbg !2201
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2201
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2201
  br label %cond.end, !dbg !2202

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2202
  ret i32 %cond, !dbg !2203
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2204 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2209, metadata !DIExpression()), !dbg !2210
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2211
  %conv = trunc i64 %call to i32, !dbg !2212
  ret i32 %conv, !dbg !2213
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2214 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2218, metadata !DIExpression()), !dbg !2219
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2220
  ret i64 %call, !dbg !2221
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2222 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2227, metadata !DIExpression()), !dbg !2228
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2229
  ret i64 %call, !dbg !2230
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2231 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2237, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2238, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2239, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2240, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2241, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i64 0, metadata !2242, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2243, metadata !DIExpression()), !dbg !2247
  br label %while.cond, !dbg !2248

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2249
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2247
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2243, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2242, metadata !DIExpression()), !dbg !2247
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2250
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2248

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2251
  %div = lshr i64 %add, 1, !dbg !2253
  call void @llvm.dbg.value(metadata i64 %div, metadata !2244, metadata !DIExpression()), !dbg !2247
  %mul = mul i64 %div, %__size, !dbg !2254
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2255
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2245, metadata !DIExpression()), !dbg !2247
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2256
  call void @llvm.dbg.value(metadata i32 %call, metadata !2246, metadata !DIExpression()), !dbg !2247
  %cmp1 = icmp slt i32 %call, 0, !dbg !2257
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2259

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2260
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2262

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2263
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2242, metadata !DIExpression()), !dbg !2247
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2247
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2247
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2243, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2242, metadata !DIExpression()), !dbg !2247
  br label %while.cond, !dbg !2248, !llvm.loop !2264

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2247
  ret i8* %retval.0, !dbg !2266
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2267 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2273, metadata !DIExpression()), !dbg !2274
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2275
  ret double %call, !dbg !2276
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2277 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2286, metadata !DIExpression()), !dbg !2289
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2287, metadata !DIExpression()), !dbg !2289
  call void @llvm.dbg.value(metadata i32 %base, metadata !2288, metadata !DIExpression()), !dbg !2289
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2290
  ret i64 %call, !dbg !2291
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2292 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2298, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2299, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.value(metadata i32 %base, metadata !2300, metadata !DIExpression()), !dbg !2301
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2302
  ret i64 %call, !dbg !2303
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2304 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2315, metadata !DIExpression()), !dbg !2318
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2316, metadata !DIExpression()), !dbg !2318
  call void @llvm.dbg.value(metadata i32 %base, metadata !2317, metadata !DIExpression()), !dbg !2318
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2319
  ret i64 %call, !dbg !2320
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2321 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2325, metadata !DIExpression()), !dbg !2328
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2326, metadata !DIExpression()), !dbg !2328
  call void @llvm.dbg.value(metadata i32 %base, metadata !2327, metadata !DIExpression()), !dbg !2328
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2329
  ret i64 %call, !dbg !2330
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2331 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2371, metadata !DIExpression()), !dbg !2373
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2372, metadata !DIExpression()), !dbg !2373
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2374
  ret i32 %call, !dbg !2375
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2376 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2378, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2379, metadata !DIExpression()), !dbg !2380
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2381
  ret i32 %call, !dbg !2382
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2383 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2387, metadata !DIExpression()), !dbg !2389
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2388, metadata !DIExpression()), !dbg !2389
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2390
  ret i32 %call, !dbg !2391
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2392 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2396, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2397, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2398, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2399, metadata !DIExpression()), !dbg !2400
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2401
  ret i32 %call, !dbg !2402
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2403 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2407, metadata !DIExpression()), !dbg !2410
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2408, metadata !DIExpression()), !dbg !2410
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2409, metadata !DIExpression()), !dbg !2410
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2409, metadata !DIExpression(DW_OP_deref)), !dbg !2410
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2411
  ret i32 %call, !dbg !2412
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2413 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2417, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2418, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2419, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2420, metadata !DIExpression()), !dbg !2421
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2420, metadata !DIExpression(DW_OP_deref)), !dbg !2421
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2422
  ret i32 %call, !dbg !2423
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2424 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2448, metadata !DIExpression()), !dbg !2450
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2449, metadata !DIExpression()), !dbg !2450
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2451
  ret i32 %call, !dbg !2452
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2453 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2455, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2456, metadata !DIExpression()), !dbg !2457
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2458
  ret i32 %call, !dbg !2459
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2460 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2464, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2465, metadata !DIExpression()), !dbg !2466
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2467
  ret i32 %call, !dbg !2468
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2469 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2473, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2474, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2475, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2476, metadata !DIExpression()), !dbg !2477
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2478
  ret i32 %call, !dbg !2479
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.lambda_body_vector_s* @lambda_body_vector_new(i32 %size, %struct.obstack* %lambda_obstack) local_unnamed_addr #5 !dbg !2480 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !2485, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !2486, metadata !DIExpression()), !dbg !2488
  %temp = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 5, !dbg !2489
  store i64 16, i64* %temp, align 8, !dbg !2489
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 4, !dbg !2489
  %0 = bitcast i8** %chunk_limit to i64*, !dbg !2489
  %1 = load i64, i64* %0, align 8, !dbg !2489
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 3, !dbg !2489
  %2 = bitcast i8** %next_free to i64*, !dbg !2489
  %3 = load i64, i64* %2, align 8, !dbg !2489
  %sub.ptr.sub = sub i64 %1, %3, !dbg !2489
  %cmp = icmp slt i64 %sub.ptr.sub, 16, !dbg !2489
  %4 = inttoptr i64 %3 to i8*, !dbg !2489
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2489

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* %lambda_obstack, i32 16) #6, !dbg !2489
  %.pre = load i64, i64* %temp, align 8, !dbg !2489
  %.pre1 = load i8*, i8** %next_free, align 8, !dbg !2489
  br label %cond.end, !dbg !2489

cond.end:                                         ; preds = %entry, %cond.true
  %5 = phi i8* [ %4, %entry ], [ %.pre1, %cond.true ], !dbg !2489
  %6 = phi i64 [ 16, %entry ], [ %.pre, %cond.true ], !dbg !2489
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !2489
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !2489
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 2, !dbg !2489
  %7 = load i8*, i8** %object_base, align 8, !dbg !2489
  %cmp6 = icmp eq i8* %add.ptr, %7, !dbg !2489
  %8 = ptrtoint i8* %7 to i64, !dbg !2489
  %9 = ptrtoint i8* %add.ptr to i64, !dbg !2489
  br i1 %cmp6, label %cond.true8, label %cond.end10, !dbg !2489

cond.true8:                                       ; preds = %cond.end
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 10, !dbg !2489
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !2489
  %bf.set = or i8 %bf.load, 2, !dbg !2489
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !2489
  br label %cond.end10, !dbg !2489

cond.end10:                                       ; preds = %cond.end, %cond.true8
  %10 = bitcast i8** %object_base to i64*, !dbg !2489
  store i64 %8, i64* %temp, align 8, !dbg !2489
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 6, !dbg !2489
  %11 = load i32, i32* %alignment_mask, align 8, !dbg !2489
  %conv19 = sext i32 %11 to i64, !dbg !2489
  %add = add nsw i64 %9, %conv19, !dbg !2489
  %neg = xor i32 %11, -1, !dbg !2489
  %conv21 = sext i32 %neg to i64, !dbg !2489
  %and = and i64 %add, %conv21, !dbg !2489
  %12 = inttoptr i64 %and to i8*, !dbg !2489
  store i8* %12, i8** %next_free, align 8, !dbg !2489
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 1, !dbg !2489
  %13 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !2489
  %14 = load i64, i64* %13, align 8, !dbg !2489
  %sub.ptr.sub26 = sub i64 %and, %14, !dbg !2489
  %15 = load i64, i64* %0, align 8, !dbg !2489
  %sub.ptr.sub31 = sub i64 %15, %14, !dbg !2489
  %cmp32 = icmp sgt i64 %sub.ptr.sub26, %sub.ptr.sub31, !dbg !2489
  %16 = bitcast i8* %7 to %struct.lambda_body_vector_s*, !dbg !2489
  br i1 %cmp32, label %cond.true34, label %cond.end38, !dbg !2489

cond.true34:                                      ; preds = %cond.end10
  store i64 %15, i64* %2, align 8, !dbg !2489
  br label %cond.end38, !dbg !2489

cond.end38:                                       ; preds = %cond.end10, %cond.true34
  %17 = phi i64 [ %and, %cond.end10 ], [ %15, %cond.true34 ], !dbg !2489
  store i64 %17, i64* %10, align 8, !dbg !2489
  call void @llvm.dbg.value(metadata %struct.lambda_body_vector_s* %16, metadata !2487, metadata !DIExpression()), !dbg !2488
  %call = tail call fastcc i32* @lambda_vector_new(i32 %size) #7, !dbg !2490
  %coefficients = bitcast i8* %7 to i32**, !dbg !2491
  store i32* %call, i32** %coefficients, align 8, !dbg !2492
  %size43 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !2493
  %18 = bitcast i8* %size43 to i32*, !dbg !2493
  store i32 %size, i32* %18, align 8, !dbg !2494
  %denominator = getelementptr inbounds i8, i8* %7, i64 12, !dbg !2495
  %19 = bitcast i8* %denominator to i32*, !dbg !2495
  store i32 1, i32* %19, align 4, !dbg !2496
  ret %struct.lambda_body_vector_s* %16, !dbg !2497
}

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @lambda_vector_new(i32 %size) unnamed_addr #0 !dbg !2498 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !2502, metadata !DIExpression()), !dbg !2503
  %conv = sext i32 %size to i64, !dbg !2504
  %mul = shl nsw i64 %conv, 2, !dbg !2504
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 %mul) #6, !dbg !2504
  %0 = bitcast i8* %call to i32*, !dbg !2504
  ret i32* %0, !dbg !2505
}

; Function Attrs: nounwind uwtable
define dso_local %struct.lambda_body_vector_s* @lambda_body_vector_compute_new(%struct.lambda_trans_matrix_s* %transform, %struct.lambda_body_vector_s* %vect, %struct.obstack* %lambda_obstack) local_unnamed_addr #5 !dbg !2506 {
entry:
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %transform, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %struct.lambda_body_vector_s* %vect, metadata !2519, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !2520, metadata !DIExpression()), !dbg !2523
  %rowsize = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %transform, i64 0, i32 1, !dbg !2524
  %0 = load i32, i32* %rowsize, align 8, !dbg !2524
  %colsize = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %transform, i64 0, i32 2, !dbg !2524
  %1 = load i32, i32* %colsize, align 4, !dbg !2524
  %cmp = icmp eq i32 %0, %1, !dbg !2524
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2524

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 179, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2524
  %.pre = load i32, i32* %rowsize, align 8, !dbg !2525
  br label %cond.end, !dbg !2524

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi i32 [ %0, %entry ], [ %.pre, %cond.true ], !dbg !2525
  call void @llvm.dbg.value(metadata i32 %2, metadata !2522, metadata !DIExpression()), !dbg !2523
  %call = tail call %struct.lambda_body_vector_s* @lambda_body_vector_new(i32 %2, %struct.obstack* %lambda_obstack) #7, !dbg !2526
  call void @llvm.dbg.value(metadata %struct.lambda_body_vector_s* %call, metadata !2521, metadata !DIExpression()), !dbg !2523
  %denominator = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %vect, i64 0, i32 2, !dbg !2527
  %3 = load i32, i32* %denominator, align 4, !dbg !2527
  %denominator2 = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %transform, i64 0, i32 3, !dbg !2528
  %4 = load i32, i32* %denominator2, align 8, !dbg !2528
  %mul = mul nsw i32 %3, %4, !dbg !2529
  %denominator3 = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %call, i64 0, i32 2, !dbg !2530
  store i32 %mul, i32* %denominator3, align 4, !dbg !2531
  %coefficients = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %vect, i64 0, i32 0, !dbg !2532
  %5 = load i32*, i32** %coefficients, align 8, !dbg !2532
  %matrix = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %transform, i64 0, i32 0, !dbg !2533
  %6 = load i32**, i32*** %matrix, align 8, !dbg !2533
  %coefficients4 = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %call, i64 0, i32 0, !dbg !2534
  %7 = load i32*, i32** %coefficients4, align 8, !dbg !2534
  tail call fastcc void @lambda_vector_matrix_mult(i32* %5, i32 %2, i32** %6, i32 %2, i32* %7) #7, !dbg !2535
  %size = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %vect, i64 0, i32 1, !dbg !2536
  %8 = load i32, i32* %size, align 8, !dbg !2536
  %size5 = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %call, i64 0, i32 1, !dbg !2537
  store i32 %8, i32* %size5, align 8, !dbg !2538
  ret %struct.lambda_body_vector_s* %call, !dbg !2539
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @lambda_vector_matrix_mult(i32* %vect, i32 %m, i32** %mat, i32 %n, i32* %dest) unnamed_addr #0 !dbg !2540 {
entry:
  call void @llvm.dbg.value(metadata i32* %vect, metadata !2544, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i32 %m, metadata !2545, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i32** %mat, metadata !2546, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i32 %n, metadata !2547, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i32* %dest, metadata !2548, metadata !DIExpression()), !dbg !2551
  tail call fastcc void @lambda_vector_clear(i32* %dest, i32 %n) #7, !dbg !2552
  call void @llvm.dbg.value(metadata i32 0, metadata !2549, metadata !DIExpression()), !dbg !2551
  %0 = sext i32 %m to i64, !dbg !2553
  %1 = sext i32 %n to i64, !dbg !2553
  br label %for.cond, !dbg !2553

for.cond:                                         ; preds = %for.inc10, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc10 ], [ 0, %entry ], !dbg !2555
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !2549, metadata !DIExpression()), !dbg !2551
  %cmp = icmp slt i64 %indvars.iv1, %1, !dbg !2556
  br i1 %cmp, label %for.cond1.preheader, label %for.end12, !dbg !2558

for.cond1.preheader:                              ; preds = %for.cond
  %arrayidx9 = getelementptr inbounds i32, i32* %dest, i64 %indvars.iv1, !dbg !2559
  br label %for.cond1, !dbg !2562

for.cond1:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ], !dbg !2563
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2550, metadata !DIExpression()), !dbg !2551
  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !2564
  br i1 %cmp2, label %for.body3, label %for.inc10, !dbg !2562

for.body3:                                        ; preds = %for.cond1
  %arrayidx = getelementptr inbounds i32*, i32** %mat, i64 %indvars.iv, !dbg !2565
  %2 = load i32*, i32** %arrayidx, align 8, !dbg !2565
  %arrayidx5 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv1, !dbg !2565
  %3 = load i32, i32* %arrayidx5, align 4, !dbg !2565
  %arrayidx7 = getelementptr inbounds i32, i32* %vect, i64 %indvars.iv, !dbg !2566
  %4 = load i32, i32* %arrayidx7, align 4, !dbg !2566
  %mul = mul nsw i32 %3, %4, !dbg !2567
  %5 = load i32, i32* %arrayidx9, align 4, !dbg !2568
  %add = add nsw i32 %5, %mul, !dbg !2568
  store i32 %add, i32* %arrayidx9, align 4, !dbg !2568
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2569
  call void @llvm.dbg.value(metadata i32 undef, metadata !2550, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2551
  br label %for.cond1, !dbg !2570, !llvm.loop !2571

for.inc10:                                        ; preds = %for.cond1
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !2573
  call void @llvm.dbg.value(metadata i32 undef, metadata !2549, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2551
  br label %for.cond, !dbg !2574, !llvm.loop !2575

for.end12:                                        ; preds = %for.cond
  ret void, !dbg !2577
}

; Function Attrs: nounwind uwtable
define dso_local void @print_lambda_body_vector(%struct._IO_FILE* %outfile, %struct.lambda_body_vector_s* %body) local_unnamed_addr #5 !dbg !2578 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !2582, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata %struct.lambda_body_vector_s* %body, metadata !2583, metadata !DIExpression()), !dbg !2584
  %coefficients = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %body, i64 0, i32 0, !dbg !2585
  %0 = load i32*, i32** %coefficients, align 8, !dbg !2585
  %size = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %body, i64 0, i32 1, !dbg !2586
  %1 = load i32, i32* %size, align 8, !dbg !2586
  tail call fastcc void @print_lambda_vector(%struct._IO_FILE* %outfile, i32* %0, i32 %1) #7, !dbg !2587
  ret void, !dbg !2588
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @print_lambda_vector(%struct._IO_FILE* %outfile, i32* %vector, i32 %n) unnamed_addr #0 !dbg !2589 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !2593, metadata !DIExpression()), !dbg !2597
  call void @llvm.dbg.value(metadata i32* %vector, metadata !2594, metadata !DIExpression()), !dbg !2597
  call void @llvm.dbg.value(metadata i32 %n, metadata !2595, metadata !DIExpression()), !dbg !2597
  call void @llvm.dbg.value(metadata i32 0, metadata !2596, metadata !DIExpression()), !dbg !2597
  %0 = sext i32 %n to i64, !dbg !2598
  br label %for.cond, !dbg !2598

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !2600
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2596, metadata !DIExpression()), !dbg !2597
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !2601
  br i1 %cmp, label %for.body, label %for.end, !dbg !2603

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %vector, i64 %indvars.iv, !dbg !2604
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2604
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i32 %1) #6, !dbg !2605
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2606
  call void @llvm.dbg.value(metadata i32 undef, metadata !2596, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2597
  br label %for.cond, !dbg !2607, !llvm.loop !2608

for.end:                                          ; preds = %for.cond
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2610
  ret void, !dbg !2611
}

; Function Attrs: nounwind uwtable
define dso_local %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %dim, i32 %invariants, %struct.obstack* %lambda_obstack) local_unnamed_addr #5 !dbg !2612 {
entry:
  call void @llvm.dbg.value(metadata i32 %dim, metadata !2616, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.value(metadata i32 %invariants, metadata !2617, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !2618, metadata !DIExpression()), !dbg !2620
  %temp = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 5, !dbg !2621
  store i64 40, i64* %temp, align 8, !dbg !2621
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 4, !dbg !2621
  %0 = bitcast i8** %chunk_limit to i64*, !dbg !2621
  %1 = load i64, i64* %0, align 8, !dbg !2621
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 3, !dbg !2621
  %2 = bitcast i8** %next_free to i64*, !dbg !2621
  %3 = load i64, i64* %2, align 8, !dbg !2621
  %sub.ptr.sub = sub i64 %1, %3, !dbg !2621
  %cmp = icmp slt i64 %sub.ptr.sub, 40, !dbg !2621
  %4 = inttoptr i64 %3 to i8*, !dbg !2621
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2621

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* %lambda_obstack, i32 40) #6, !dbg !2621
  %.pre = load i64, i64* %temp, align 8, !dbg !2621
  %.pre1 = load i8*, i8** %next_free, align 8, !dbg !2621
  br label %cond.end, !dbg !2621

cond.end:                                         ; preds = %entry, %cond.true
  %5 = phi i8* [ %4, %entry ], [ %.pre1, %cond.true ], !dbg !2621
  %6 = phi i64 [ 40, %entry ], [ %.pre, %cond.true ], !dbg !2621
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !2621
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !2621
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 2, !dbg !2621
  %7 = load i8*, i8** %object_base, align 8, !dbg !2621
  %cmp6 = icmp eq i8* %add.ptr, %7, !dbg !2621
  %8 = ptrtoint i8* %7 to i64, !dbg !2621
  %9 = ptrtoint i8* %add.ptr to i64, !dbg !2621
  br i1 %cmp6, label %cond.true8, label %cond.end10, !dbg !2621

cond.true8:                                       ; preds = %cond.end
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 10, !dbg !2621
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !2621
  %bf.set = or i8 %bf.load, 2, !dbg !2621
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !2621
  br label %cond.end10, !dbg !2621

cond.end10:                                       ; preds = %cond.end, %cond.true8
  %10 = bitcast i8** %object_base to i64*, !dbg !2621
  store i64 %8, i64* %temp, align 8, !dbg !2621
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 6, !dbg !2621
  %11 = load i32, i32* %alignment_mask, align 8, !dbg !2621
  %conv19 = sext i32 %11 to i64, !dbg !2621
  %add = add nsw i64 %9, %conv19, !dbg !2621
  %neg = xor i32 %11, -1, !dbg !2621
  %conv21 = sext i32 %neg to i64, !dbg !2621
  %and = and i64 %add, %conv21, !dbg !2621
  %12 = inttoptr i64 %and to i8*, !dbg !2621
  store i8* %12, i8** %next_free, align 8, !dbg !2621
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 1, !dbg !2621
  %13 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !2621
  %14 = load i64, i64* %13, align 8, !dbg !2621
  %sub.ptr.sub26 = sub i64 %and, %14, !dbg !2621
  %15 = load i64, i64* %0, align 8, !dbg !2621
  %sub.ptr.sub31 = sub i64 %15, %14, !dbg !2621
  %cmp32 = icmp sgt i64 %sub.ptr.sub26, %sub.ptr.sub31, !dbg !2621
  %16 = bitcast i8* %7 to %struct.lambda_linear_expression_s*, !dbg !2621
  br i1 %cmp32, label %cond.true34, label %cond.end38, !dbg !2621

cond.true34:                                      ; preds = %cond.end10
  store i64 %15, i64* %2, align 8, !dbg !2621
  br label %cond.end38, !dbg !2621

cond.end38:                                       ; preds = %cond.end10, %cond.true34
  %17 = phi i64 [ %and, %cond.end10 ], [ %15, %cond.true34 ], !dbg !2621
  store i64 %17, i64* %10, align 8, !dbg !2621
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %16, metadata !2619, metadata !DIExpression()), !dbg !2620
  %call = tail call fastcc i32* @lambda_vector_new(i32 %dim) #7, !dbg !2622
  %coefficients = bitcast i8* %7 to i32**, !dbg !2623
  store i32* %call, i32** %coefficients, align 8, !dbg !2624
  %constant = getelementptr inbounds i8, i8* %7, i64 8, !dbg !2625
  %18 = bitcast i8* %constant to i32*, !dbg !2625
  store i32 0, i32* %18, align 8, !dbg !2626
  %call43 = tail call fastcc i32* @lambda_vector_new(i32 %invariants) #7, !dbg !2627
  %invariant_coefficients = getelementptr inbounds i8, i8* %7, i64 16, !dbg !2628
  %19 = bitcast i8* %invariant_coefficients to i32**, !dbg !2628
  store i32* %call43, i32** %19, align 8, !dbg !2629
  %denominator = getelementptr inbounds i8, i8* %7, i64 24, !dbg !2630
  %20 = bitcast i8* %denominator to i32*, !dbg !2630
  store i32 1, i32* %20, align 8, !dbg !2631
  %next = getelementptr inbounds i8, i8* %7, i64 32, !dbg !2632
  %21 = bitcast i8* %next to %struct.lambda_linear_expression_s**, !dbg !2632
  store %struct.lambda_linear_expression_s* null, %struct.lambda_linear_expression_s** %21, align 8, !dbg !2633
  ret %struct.lambda_linear_expression_s* %16, !dbg !2634
}

; Function Attrs: nounwind uwtable
define dso_local void @print_lambda_linear_expression(%struct._IO_FILE* %outfile, %struct.lambda_linear_expression_s* %expr, i32 %depth, i32 %invariants, i8 signext %start) local_unnamed_addr #5 !dbg !2635 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !2639, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %expr, metadata !2640, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i32 %depth, metadata !2641, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i32 %invariants, metadata !2642, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i8 %start, metadata !2643, metadata !DIExpression()), !dbg !2644
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2645
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expr, i64 0, i32 0, !dbg !2646
  %0 = load i32*, i32** %coefficients, align 8, !dbg !2646
  tail call fastcc void @print_linear_expression(%struct._IO_FILE* %outfile, i32* %0, i32 %depth, i8 signext %start) #7, !dbg !2647
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expr, i64 0, i32 1, !dbg !2648
  %1 = load i32, i32* %constant, align 8, !dbg !2648
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i32 %1) #6, !dbg !2649
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2650
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expr, i64 0, i32 2, !dbg !2651
  %2 = load i32*, i32** %invariant_coefficients, align 8, !dbg !2651
  tail call fastcc void @print_linear_expression(%struct._IO_FILE* %outfile, i32* %2, i32 %invariants, i8 signext 65) #7, !dbg !2652
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expr, i64 0, i32 3, !dbg !2653
  %3 = load i32, i32* %denominator, align 8, !dbg !2653
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i32 %3) #6, !dbg !2654
  ret void, !dbg !2655
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @print_linear_expression(%struct._IO_FILE* %outfile, i32* %expr, i32 %size, i8 signext %start) unnamed_addr #5 !dbg !2656 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !2660, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i32* %expr, metadata !2661, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i32 %size, metadata !2662, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i8 %start, metadata !2663, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i8 1, metadata !2665, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i32 0, metadata !2664, metadata !DIExpression()), !dbg !2666
  %conv26 = sext i8 %start to i32, !dbg !2667
  %0 = sext i32 %size to i64, !dbg !2674
  br label %for.cond, !dbg !2674

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !2675
  %first.0 = phi i8 [ %first.2, %for.inc ], [ 1, %entry ], !dbg !2666
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !2665, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2664, metadata !DIExpression()), !dbg !2666
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !2676
  br i1 %cmp, label %for.body, label %for.end, !dbg !2677

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %expr, i64 %indvars.iv, !dbg !2678
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2678
  %cmp1 = icmp eq i32 %1, 0, !dbg !2679
  br i1 %cmp1, label %for.inc, label %if.then, !dbg !2680

if.then:                                          ; preds = %for.body
  %tobool = icmp eq i8 %first.0, 0, !dbg !2681
  br i1 %tobool, label %if.else, label %if.then2, !dbg !2683

if.then2:                                         ; preds = %if.then
  %cmp5 = icmp slt i32 %1, 0, !dbg !2684
  br i1 %cmp5, label %if.then6, label %if.end15, !dbg !2687

if.then6:                                         ; preds = %if.then2
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !2688
  br label %if.end15, !dbg !2688

if.else:                                          ; preds = %if.then
  %cmp9 = icmp sgt i32 %1, 0, !dbg !2689
  br i1 %cmp9, label %if.then10, label %if.else12, !dbg !2691

if.then10:                                        ; preds = %if.else
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !2692
  br label %if.end15, !dbg !2692

if.else12:                                        ; preds = %if.else
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !2693
  br label %if.end15

if.end15:                                         ; preds = %if.then10, %if.else12, %if.then2, %if.then6
  call void @llvm.dbg.value(metadata i8 0, metadata !2665, metadata !DIExpression()), !dbg !2666
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2694
  %call18 = tail call i32 @abs(i32 %2) #6, !dbg !2695
  %cmp19 = icmp eq i32 %call18, 1, !dbg !2696
  br i1 %cmp19, label %if.then20, label %if.else22, !dbg !2697

if.then20:                                        ; preds = %if.end15
  %3 = trunc i64 %indvars.iv to i32, !dbg !2698
  %add = add nsw i32 %3, %conv26, !dbg !2698
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 %add) #6, !dbg !2699
  br label %for.inc, !dbg !2699

if.else22:                                        ; preds = %if.end15
  %4 = load i32, i32* %arrayidx, align 4, !dbg !2700
  %call25 = tail call i32 @abs(i32 %4) #6, !dbg !2701
  %5 = trunc i64 %indvars.iv to i32, !dbg !2702
  %add27 = add nsw i32 %5, %conv26, !dbg !2702
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 %call25, i32 %add27) #6, !dbg !2703
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else22, %if.then20
  %first.2 = phi i8 [ %first.0, %for.body ], [ 0, %if.else22 ], [ 0, %if.then20 ], !dbg !2666
  call void @llvm.dbg.value(metadata i8 %first.2, metadata !2665, metadata !DIExpression()), !dbg !2666
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2704
  call void @llvm.dbg.value(metadata i32 undef, metadata !2664, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2666
  br label %for.cond, !dbg !2705, !llvm.loop !2706

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2708
}

; Function Attrs: nounwind uwtable
define dso_local void @print_lambda_loop(%struct._IO_FILE* %outfile, %struct.lambda_loop_s* %loop, i32 %depth, i32 %invariants, i8 signext %start) local_unnamed_addr #5 !dbg !2709 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !2713, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %loop, metadata !2714, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.value(metadata i32 %depth, metadata !2715, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.value(metadata i32 %invariants, metadata !2716, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.value(metadata i8 %start, metadata !2717, metadata !DIExpression()), !dbg !2720
  %tobool = icmp eq %struct.lambda_loop_s* %loop, null, !dbg !2721
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2721

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 307, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2721
  br label %cond.end, !dbg !2721

cond.end:                                         ; preds = %entry, %cond.true
  %linear_offset = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %loop, i64 0, i32 2, !dbg !2722
  %0 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %linear_offset, align 8, !dbg !2722
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %0, metadata !2719, metadata !DIExpression()), !dbg !2720
  %step1 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %loop, i64 0, i32 3, !dbg !2723
  %1 = load i32, i32* %step1, align 8, !dbg !2723
  call void @llvm.dbg.value(metadata i32 %1, metadata !2718, metadata !DIExpression()), !dbg !2720
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 %1) #6, !dbg !2724
  %tobool2 = icmp eq %struct.lambda_linear_expression_s* %0, null, !dbg !2725
  br i1 %tobool2, label %if.end, label %if.then, !dbg !2727

if.then:                                          ; preds = %cond.end
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2728
  tail call void @print_lambda_linear_expression(%struct._IO_FILE* %outfile, %struct.lambda_linear_expression_s* nonnull %0, i32 %depth, i32 %invariants, i8 signext %start) #7, !dbg !2730
  br label %if.end, !dbg !2731

if.end:                                           ; preds = %cond.end, %if.then
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2732
  %lower_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %loop, i64 0, i32 0, !dbg !2733
  br label %for.cond, !dbg !2735

for.cond:                                         ; preds = %for.body, %if.end
  %expr.0.in = phi %struct.lambda_linear_expression_s** [ %lower_bound, %if.end ], [ %next, %for.body ]
  %expr.0 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %expr.0.in, align 8, !dbg !2736
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %expr.0, metadata !2719, metadata !DIExpression()), !dbg !2720
  %cmp = icmp eq %struct.lambda_linear_expression_s* %expr.0, null, !dbg !2737
  br i1 %cmp, label %for.end, label %for.body, !dbg !2739

for.body:                                         ; preds = %for.cond
  tail call void @print_lambda_linear_expression(%struct._IO_FILE* %outfile, %struct.lambda_linear_expression_s* nonnull %expr.0, i32 %depth, i32 %invariants, i8 signext %start) #7, !dbg !2740
  %next = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expr.0, i64 0, i32 4, !dbg !2741
  br label %for.cond, !dbg !2742, !llvm.loop !2743

for.end:                                          ; preds = %for.cond
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2745
  %upper_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %loop, i64 0, i32 1, !dbg !2746
  br label %for.cond6, !dbg !2748

for.cond6:                                        ; preds = %for.body8, %for.end
  %expr.1.in = phi %struct.lambda_linear_expression_s** [ %upper_bound, %for.end ], [ %next10, %for.body8 ]
  %expr.1 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %expr.1.in, align 8, !dbg !2749
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %expr.1, metadata !2719, metadata !DIExpression()), !dbg !2720
  %cmp7 = icmp eq %struct.lambda_linear_expression_s* %expr.1, null, !dbg !2750
  br i1 %cmp7, label %for.end11, label %for.body8, !dbg !2752

for.body8:                                        ; preds = %for.cond6
  tail call void @print_lambda_linear_expression(%struct._IO_FILE* %outfile, %struct.lambda_linear_expression_s* nonnull %expr.1, i32 %depth, i32 %invariants, i8 signext %start) #7, !dbg !2753
  %next10 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expr.1, i64 0, i32 4, !dbg !2754
  br label %for.cond6, !dbg !2755, !llvm.loop !2756

for.end11:                                        ; preds = %for.cond6
  ret void, !dbg !2758
}

; Function Attrs: nounwind uwtable
define dso_local %struct.lambda_loopnest_s* @lambda_loopnest_new(i32 %depth, i32 %invariants, %struct.obstack* %lambda_obstack) local_unnamed_addr #5 !dbg !2759 {
entry:
  call void @llvm.dbg.value(metadata i32 %depth, metadata !2763, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata i32 %invariants, metadata !2764, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !2765, metadata !DIExpression()), !dbg !2767
  %temp = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 5, !dbg !2768
  store i64 16, i64* %temp, align 8, !dbg !2768
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 4, !dbg !2768
  %0 = bitcast i8** %chunk_limit to i64*, !dbg !2768
  %1 = load i64, i64* %0, align 8, !dbg !2768
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 3, !dbg !2768
  %2 = bitcast i8** %next_free to i64*, !dbg !2768
  %3 = load i64, i64* %2, align 8, !dbg !2768
  %sub.ptr.sub = sub i64 %1, %3, !dbg !2768
  %cmp = icmp slt i64 %sub.ptr.sub, 16, !dbg !2768
  %4 = inttoptr i64 %3 to i8*, !dbg !2768
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2768

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* %lambda_obstack, i32 16) #6, !dbg !2768
  %.pre = load i64, i64* %temp, align 8, !dbg !2768
  %.pre1 = load i8*, i8** %next_free, align 8, !dbg !2768
  br label %cond.end, !dbg !2768

cond.end:                                         ; preds = %entry, %cond.true
  %5 = phi i8* [ %4, %entry ], [ %.pre1, %cond.true ], !dbg !2768
  %6 = phi i64 [ 16, %entry ], [ %.pre, %cond.true ], !dbg !2768
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !2768
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !2768
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 2, !dbg !2768
  %7 = load i8*, i8** %object_base, align 8, !dbg !2768
  %cmp6 = icmp eq i8* %add.ptr, %7, !dbg !2768
  %8 = ptrtoint i8* %7 to i64, !dbg !2768
  %9 = ptrtoint i8* %add.ptr to i64, !dbg !2768
  br i1 %cmp6, label %cond.true8, label %cond.end10, !dbg !2768

cond.true8:                                       ; preds = %cond.end
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 10, !dbg !2768
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !2768
  %bf.set = or i8 %bf.load, 2, !dbg !2768
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !2768
  br label %cond.end10, !dbg !2768

cond.end10:                                       ; preds = %cond.end, %cond.true8
  %10 = bitcast i8** %object_base to i64*, !dbg !2768
  store i64 %8, i64* %temp, align 8, !dbg !2768
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 6, !dbg !2768
  %11 = load i32, i32* %alignment_mask, align 8, !dbg !2768
  %conv19 = sext i32 %11 to i64, !dbg !2768
  %add = add nsw i64 %9, %conv19, !dbg !2768
  %neg = xor i32 %11, -1, !dbg !2768
  %conv21 = sext i32 %neg to i64, !dbg !2768
  %and = and i64 %add, %conv21, !dbg !2768
  %12 = inttoptr i64 %and to i8*, !dbg !2768
  store i8* %12, i8** %next_free, align 8, !dbg !2768
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 1, !dbg !2768
  %13 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !2768
  %14 = load i64, i64* %13, align 8, !dbg !2768
  %sub.ptr.sub26 = sub i64 %and, %14, !dbg !2768
  %15 = load i64, i64* %0, align 8, !dbg !2768
  %sub.ptr.sub31 = sub i64 %15, %14, !dbg !2768
  %cmp32 = icmp sgt i64 %sub.ptr.sub26, %sub.ptr.sub31, !dbg !2768
  %16 = bitcast i8* %7 to %struct.lambda_loopnest_s*, !dbg !2768
  br i1 %cmp32, label %cond.true34, label %cond.end38, !dbg !2768

cond.true34:                                      ; preds = %cond.end10
  store i64 %15, i64* %2, align 8, !dbg !2768
  %17 = inttoptr i64 %15 to i8*, !dbg !2768
  br label %cond.end38, !dbg !2768

cond.end38:                                       ; preds = %cond.end10, %cond.true34
  %.pre-phi = phi i8* [ %12, %cond.end10 ], [ %17, %cond.true34 ], !dbg !2769
  %18 = phi i8* [ %12, %cond.end10 ], [ %17, %cond.true34 ]
  %19 = phi i64 [ %and, %cond.end10 ], [ %15, %cond.true34 ], !dbg !2769
  %20 = phi i64 [ %and, %cond.end10 ], [ %15, %cond.true34 ], !dbg !2768
  store i64 %20, i64* %10, align 8, !dbg !2768
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %16, metadata !2766, metadata !DIExpression()), !dbg !2767
  %conv43 = sext i32 %depth to i64, !dbg !2769
  %mul = shl nsw i64 %conv43, 3, !dbg !2769
  store i64 %mul, i64* %temp, align 8, !dbg !2769
  %sub.ptr.sub49 = sub i64 %15, %19, !dbg !2769
  %cmp51 = icmp slt i64 %sub.ptr.sub49, %mul, !dbg !2769
  br i1 %cmp51, label %cond.true53, label %cond.end57, !dbg !2769

cond.true53:                                      ; preds = %cond.end38
  %conv55 = trunc i64 %mul to i32, !dbg !2769
  tail call void @_obstack_newchunk(%struct.obstack* %lambda_obstack, i32 %conv55) #6, !dbg !2769
  %.pre2 = load i64, i64* %temp, align 8, !dbg !2769
  %.pre3 = load i8*, i8** %next_free, align 8, !dbg !2769
  %.pre4 = load i8*, i8** %object_base, align 8, !dbg !2769
  %21 = ptrtoint i8* %.pre4 to i64, !dbg !2769
  br label %cond.end57, !dbg !2769

cond.end57:                                       ; preds = %cond.end38, %cond.true53
  %22 = phi i64 [ %20, %cond.end38 ], [ %21, %cond.true53 ]
  %23 = phi i8* [ %.pre-phi, %cond.end38 ], [ %.pre4, %cond.true53 ], !dbg !2769
  %24 = phi i8* [ %18, %cond.end38 ], [ %.pre3, %cond.true53 ], !dbg !2769
  %25 = phi i64 [ %mul, %cond.end38 ], [ %.pre2, %cond.true53 ], !dbg !2769
  %add.ptr61 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !2769
  store i8* %add.ptr61, i8** %next_free, align 8, !dbg !2769
  %cmp64 = icmp eq i8* %add.ptr61, %23, !dbg !2769
  %26 = ptrtoint i8* %add.ptr61 to i64, !dbg !2769
  br i1 %cmp64, label %cond.true66, label %cond.end72, !dbg !2769

cond.true66:                                      ; preds = %cond.end57
  %maybe_empty_object67 = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 10, !dbg !2769
  %bf.load68 = load i8, i8* %maybe_empty_object67, align 8, !dbg !2769
  %bf.set70 = or i8 %bf.load68, 2, !dbg !2769
  store i8 %bf.set70, i8* %maybe_empty_object67, align 8, !dbg !2769
  br label %cond.end72, !dbg !2769

cond.end72:                                       ; preds = %cond.end57, %cond.true66
  store i64 %22, i64* %temp, align 8, !dbg !2769
  %27 = load i32, i32* %alignment_mask, align 8, !dbg !2769
  %conv82 = sext i32 %27 to i64, !dbg !2769
  %add83 = add nsw i64 %26, %conv82, !dbg !2769
  %neg85 = xor i32 %27, -1, !dbg !2769
  %conv86 = sext i32 %neg85 to i64, !dbg !2769
  %and87 = and i64 %add83, %conv86, !dbg !2769
  %28 = inttoptr i64 %and87 to i8*, !dbg !2769
  store i8* %28, i8** %next_free, align 8, !dbg !2769
  %29 = load i64, i64* %13, align 8, !dbg !2769
  %sub.ptr.sub93 = sub i64 %and87, %29, !dbg !2769
  %30 = load i64, i64* %0, align 8, !dbg !2769
  %sub.ptr.sub98 = sub i64 %30, %29, !dbg !2769
  %cmp99 = icmp sgt i64 %sub.ptr.sub93, %sub.ptr.sub98, !dbg !2769
  br i1 %cmp99, label %cond.true101, label %cond.end105, !dbg !2769

cond.true101:                                     ; preds = %cond.end72
  store i64 %30, i64* %2, align 8, !dbg !2769
  br label %cond.end105, !dbg !2769

cond.end105:                                      ; preds = %cond.end72, %cond.true101
  %31 = phi i64 [ %and87, %cond.end72 ], [ %30, %cond.true101 ], !dbg !2769
  store i64 %31, i64* %10, align 8, !dbg !2769
  %32 = bitcast i8* %7 to i64*, !dbg !2770
  store i64 %22, i64* %32, align 8, !dbg !2770
  %depth110 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !2771
  %33 = bitcast i8* %depth110 to i32*, !dbg !2771
  store i32 %depth, i32* %33, align 8, !dbg !2772
  %invariants111 = getelementptr inbounds i8, i8* %7, i64 12, !dbg !2773
  %34 = bitcast i8* %invariants111 to i32*, !dbg !2773
  store i32 %invariants, i32* %34, align 4, !dbg !2774
  ret %struct.lambda_loopnest_s* %16, !dbg !2775
}

; Function Attrs: nounwind uwtable
define dso_local void @print_lambda_loopnest(%struct._IO_FILE* %outfile, %struct.lambda_loopnest_s* %nest, i8 signext %start) local_unnamed_addr #5 !dbg !2776 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !2780, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %nest, metadata !2781, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.value(metadata i8 %start, metadata !2782, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.value(metadata i32 0, metadata !2783, metadata !DIExpression()), !dbg !2784
  %depth = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 1, !dbg !2785
  %conv = sext i8 %start to i32, !dbg !2788
  %loops = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 0, !dbg !2788
  %invariants = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 2, !dbg !2788
  br label %for.cond, !dbg !2790

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !2791
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2783, metadata !DIExpression()), !dbg !2784
  %0 = load i32, i32* %depth, align 8, !dbg !2792
  %1 = sext i32 %0 to i64, !dbg !2793
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !2793
  br i1 %cmp, label %for.body, label %for.end, !dbg !2794

for.body:                                         ; preds = %for.cond
  %2 = trunc i64 %indvars.iv to i32, !dbg !2795
  %add = add nsw i32 %2, %conv, !dbg !2795
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i32 %add) #6, !dbg !2796
  %3 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !2797
  %arrayidx = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %3, i64 %indvars.iv, !dbg !2797
  %4 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx, align 8, !dbg !2797
  %5 = load i32, i32* %depth, align 8, !dbg !2798
  %6 = load i32, i32* %invariants, align 4, !dbg !2799
  tail call void @print_lambda_loop(%struct._IO_FILE* %outfile, %struct.lambda_loop_s* %4, i32 %5, i32 %6, i8 signext 105) #7, !dbg !2800
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2801
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2802
  call void @llvm.dbg.value(metadata i32 undef, metadata !2783, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2784
  br label %for.cond, !dbg !2803, !llvm.loop !2804

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2806
}

; Function Attrs: nounwind uwtable
define dso_local i32 @least_common_multiple(i32 %a, i32 %b) local_unnamed_addr #5 !dbg !2807 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, metadata !2811, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 %b, metadata !2812, metadata !DIExpression()), !dbg !2813
  %call = tail call i32 @abs(i32 %a) #6, !dbg !2814
  %call1 = tail call i32 @abs(i32 %b) #6, !dbg !2815
  %mul = mul nsw i32 %call, %call1, !dbg !2816
  %call2 = tail call fastcc i32 @gcd(i32 %a, i32 %b) #7, !dbg !2817
  %div = sdiv i32 %mul, %call2, !dbg !2818
  ret i32 %div, !dbg !2819
}

declare dso_local i32 @abs(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gcd(i32 %a, i32 %b) unnamed_addr #0 !dbg !2820 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, metadata !2822, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.value(metadata i32 %b, metadata !2823, metadata !DIExpression()), !dbg !2827
  %call = tail call i32 @abs(i32 %a) #6, !dbg !2828
  call void @llvm.dbg.value(metadata i32 %call, metadata !2824, metadata !DIExpression()), !dbg !2827
  %call1 = tail call i32 @abs(i32 %b) #6, !dbg !2829
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2825, metadata !DIExpression()), !dbg !2827
  br label %while.cond, !dbg !2830

while.cond:                                       ; preds = %while.body, %entry
  %x.0 = phi i32 [ %call, %entry ], [ %rem, %while.body ], !dbg !2827
  %y.0 = phi i32 [ %call1, %entry ], [ %x.0, %while.body ], !dbg !2827
  call void @llvm.dbg.value(metadata i32 %y.0, metadata !2825, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.value(metadata i32 %x.0, metadata !2824, metadata !DIExpression()), !dbg !2827
  %cmp = icmp sgt i32 %x.0, 0, !dbg !2831
  br i1 %cmp, label %while.body, label %while.end, !dbg !2830

while.body:                                       ; preds = %while.cond
  %rem = srem i32 %y.0, %x.0, !dbg !2832
  call void @llvm.dbg.value(metadata i32 %rem, metadata !2826, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.value(metadata i32 %x.0, metadata !2825, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.value(metadata i32 %rem, metadata !2824, metadata !DIExpression()), !dbg !2827
  br label %while.cond, !dbg !2830, !llvm.loop !2834

while.end:                                        ; preds = %while.cond
  %y.0.lcssa = phi i32 [ %y.0, %while.cond ], !dbg !2827
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !2825, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !2825, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !2825, metadata !DIExpression()), !dbg !2827
  ret i32 %y.0.lcssa, !dbg !2836
}

; Function Attrs: nounwind uwtable
define dso_local %struct.lambda_loopnest_s* @lambda_loopnest_transform(%struct.lambda_loopnest_s* %nest, %struct.lambda_trans_matrix_s* %trans, %struct.obstack* %lambda_obstack) local_unnamed_addr #5 !dbg !2837 {
entry:
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %nest, metadata !2841, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %trans, metadata !2842, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !2843, metadata !DIExpression()), !dbg !2860
  %depth1 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 1, !dbg !2861
  %0 = load i32, i32* %depth1, align 8, !dbg !2861
  call void @llvm.dbg.value(metadata i32 %0, metadata !2846, metadata !DIExpression()), !dbg !2860
  %invariants2 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 2, !dbg !2862
  %1 = load i32, i32* %invariants2, align 4, !dbg !2862
  call void @llvm.dbg.value(metadata i32 %1, metadata !2847, metadata !DIExpression()), !dbg !2860
  %call = tail call fastcc i32* @lambda_vector_new(i32 %0) #7, !dbg !2863
  call void @llvm.dbg.value(metadata i32* %call, metadata !2858, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata i32 0, metadata !2848, metadata !DIExpression()), !dbg !2860
  %loops = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 0, !dbg !2864
  %2 = sext i32 %0 to i64, !dbg !2869
  br label %for.cond, !dbg !2869

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc ], [ 0, %entry ], !dbg !2870
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !2848, metadata !DIExpression()), !dbg !2860
  %cmp = icmp slt i64 %indvars.iv3, %2, !dbg !2871
  br i1 %cmp, label %for.body, label %for.end, !dbg !2872

for.body:                                         ; preds = %for.cond
  %3 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !2873
  %arrayidx = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %3, i64 %indvars.iv3, !dbg !2873
  %4 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx, align 8, !dbg !2873
  %step = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %4, i64 0, i32 3, !dbg !2873
  %5 = load i32, i32* %step, align 8, !dbg !2873
  %cmp3 = icmp sgt i32 %5, 0, !dbg !2874
  %arrayidx5 = getelementptr inbounds i32, i32* %call, i64 %indvars.iv3, !dbg !2864
  br i1 %cmp3, label %if.then, label %if.else, !dbg !2875

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !2876

if.else:                                          ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %storemerge = phi i32 [ -1, %if.else ], [ 1, %if.then ], !dbg !2864
  store i32 %storemerge, i32* %arrayidx5, align 4, !dbg !2864
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !2877
  call void @llvm.dbg.value(metadata i32 undef, metadata !2848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2860
  br label %for.cond, !dbg !2878, !llvm.loop !2879

for.end:                                          ; preds = %for.cond
  %call8 = tail call fastcc %struct.lambda_lattice_s* @lambda_lattice_compute_base(%struct.lambda_loopnest_s* %nest, %struct.obstack* %lambda_obstack) #7, !dbg !2881
  call void @llvm.dbg.value(metadata %struct.lambda_lattice_s* %call8, metadata !2850, metadata !DIExpression()), !dbg !2860
  %call9 = tail call %struct.lambda_trans_matrix_s* @lambda_trans_matrix_new(i32 %0, i32 %0) #6, !dbg !2882
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %call9, metadata !2851, metadata !DIExpression()), !dbg !2860
  %matrix = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %trans, i64 0, i32 0, !dbg !2883
  %6 = load i32**, i32*** %matrix, align 8, !dbg !2883
  %base = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call8, i64 0, i32 0, !dbg !2884
  %7 = load i32**, i32*** %base, align 8, !dbg !2884
  %matrix10 = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %call9, i64 0, i32 0, !dbg !2885
  %8 = load i32**, i32*** %matrix10, align 8, !dbg !2885
  tail call void @lambda_matrix_mult(i32** %6, i32** %7, i32** %8, i32 %0, i32 %0, i32 %0) #6, !dbg !2886
  %call11 = tail call %struct.lambda_trans_matrix_s* @lambda_trans_matrix_new(i32 %0, i32 %0) #6, !dbg !2887
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %call11, metadata !2852, metadata !DIExpression()), !dbg !2860
  %call12 = tail call %struct.lambda_trans_matrix_s* @lambda_trans_matrix_new(i32 %0, i32 %0) #6, !dbg !2888
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %call12, metadata !2853, metadata !DIExpression()), !dbg !2860
  %9 = load i32**, i32*** %matrix10, align 8, !dbg !2889
  %matrix14 = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %call11, i64 0, i32 0, !dbg !2890
  %10 = load i32**, i32*** %matrix14, align 8, !dbg !2890
  %matrix15 = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %call12, i64 0, i32 0, !dbg !2891
  %11 = load i32**, i32*** %matrix15, align 8, !dbg !2891
  tail call void @lambda_matrix_hermite(i32** %9, i32 %0, i32** %10, i32** %11) #6, !dbg !2892
  %call16 = tail call fastcc %struct.lambda_loopnest_s* @lambda_compute_auxillary_space(%struct.lambda_loopnest_s* %nest, %struct.lambda_trans_matrix_s* %call12, %struct.obstack* %lambda_obstack) #7, !dbg !2893
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %call16, metadata !2844, metadata !DIExpression()), !dbg !2860
  %call17 = tail call fastcc i32* @lambda_compute_step_signs(%struct.lambda_trans_matrix_s* %call9, i32* %call) #7, !dbg !2894
  call void @llvm.dbg.value(metadata i32* %call17, metadata !2858, metadata !DIExpression()), !dbg !2860
  %call18 = tail call fastcc %struct.lambda_loopnest_s* @lambda_compute_target_space(%struct.lambda_loopnest_s* %call16, %struct.lambda_trans_matrix_s* %call11, i32* %call17, %struct.obstack* %lambda_obstack) #7, !dbg !2895
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %call18, metadata !2845, metadata !DIExpression()), !dbg !2860
  %call19 = tail call fastcc i32* @lambda_vector_new(i32 %0) #7, !dbg !2896
  call void @llvm.dbg.value(metadata i32* %call19, metadata !2856, metadata !DIExpression()), !dbg !2860
  %call20 = tail call i32** @lambda_matrix_new(i32 %0, i32 %1) #6, !dbg !2897
  call void @llvm.dbg.value(metadata i32** %call20, metadata !2857, metadata !DIExpression()), !dbg !2860
  %12 = load i32**, i32*** %matrix, align 8, !dbg !2898
  %origin22 = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call8, i64 0, i32 2, !dbg !2899
  %13 = load i32*, i32** %origin22, align 8, !dbg !2899
  tail call void @lambda_matrix_vector_mult(i32** %12, i32 %0, i32 %0, i32* %13, i32* %call19) #6, !dbg !2900
  %14 = load i32**, i32*** %matrix, align 8, !dbg !2901
  %origin_invariants24 = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call8, i64 0, i32 3, !dbg !2902
  %15 = load i32**, i32*** %origin_invariants24, align 8, !dbg !2902
  tail call void @lambda_matrix_mult(i32** %14, i32** %15, i32** %call20, i32 %0, i32 %0, i32 %1) #6, !dbg !2903
  call void @llvm.dbg.value(metadata i32 0, metadata !2848, metadata !DIExpression()), !dbg !2860
  %loops28 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %call18, i64 0, i32 0, !dbg !2904
  %16 = sext i32 %1 to i64, !dbg !2908
  %17 = sext i32 %0 to i64, !dbg !2908
  br label %for.cond25, !dbg !2908

for.cond25:                                       ; preds = %for.inc51, %for.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc51 ], [ 0, %for.end ], !dbg !2909
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !2848, metadata !DIExpression()), !dbg !2860
  %cmp26 = icmp slt i64 %indvars.iv1, %17, !dbg !2910
  br i1 %cmp26, label %for.body27, label %for.end53, !dbg !2911

for.body27:                                       ; preds = %for.cond25
  %18 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops28, align 8, !dbg !2912
  %arrayidx30 = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %18, i64 %indvars.iv1, !dbg !2912
  %19 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx30, align 8, !dbg !2912
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %19, metadata !2854, metadata !DIExpression()), !dbg !2860
  %linear_offset = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %19, i64 0, i32 2, !dbg !2913
  %20 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %linear_offset, align 8, !dbg !2913
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %20, metadata !2855, metadata !DIExpression()), !dbg !2860
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %20, i64 0, i32 0, !dbg !2914
  %21 = load i32*, i32** %coefficients, align 8, !dbg !2914
  %call31 = tail call fastcc zeroext i8 @lambda_vector_zerop(i32* %21, i32 %0) #7, !dbg !2916
  %tobool = icmp eq i8 %call31, 0, !dbg !2916
  br i1 %tobool, label %if.else33, label %if.end34, !dbg !2917

if.else33:                                        ; preds = %for.body27
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %20, i64 0, i32 3, !dbg !2918
  %22 = load i32, i32* %denominator, align 8, !dbg !2918
  call void @llvm.dbg.value(metadata i32 %22, metadata !2859, metadata !DIExpression()), !dbg !2860
  br label %if.end34

if.end34:                                         ; preds = %for.body27, %if.else33
  %f.0 = phi i32 [ %22, %if.else33 ], [ 1, %for.body27 ], !dbg !2919
  call void @llvm.dbg.value(metadata i32 %f.0, metadata !2859, metadata !DIExpression()), !dbg !2860
  %arrayidx36 = getelementptr inbounds i32, i32* %call19, i64 %indvars.iv1, !dbg !2920
  %23 = load i32, i32* %arrayidx36, align 4, !dbg !2920
  %mul = mul nsw i32 %f.0, %23, !dbg !2921
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %20, i64 0, i32 1, !dbg !2922
  %24 = load i32, i32* %constant, align 8, !dbg !2923
  %add = add nsw i32 %24, %mul, !dbg !2923
  store i32 %add, i32* %constant, align 8, !dbg !2923
  call void @llvm.dbg.value(metadata i32 0, metadata !2849, metadata !DIExpression()), !dbg !2860
  %arrayidx41 = getelementptr inbounds i32*, i32** %call20, i64 %indvars.iv1, !dbg !2924
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %20, i64 0, i32 2, !dbg !2924
  br label %for.cond37, !dbg !2927

for.cond37:                                       ; preds = %for.body39, %if.end34
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body39 ], [ 0, %if.end34 ], !dbg !2928
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2849, metadata !DIExpression()), !dbg !2860
  %cmp38 = icmp slt i64 %indvars.iv, %16, !dbg !2929
  br i1 %cmp38, label %for.body39, label %for.inc51, !dbg !2930

for.body39:                                       ; preds = %for.cond37
  %25 = load i32*, i32** %arrayidx41, align 8, !dbg !2931
  %arrayidx43 = getelementptr inbounds i32, i32* %25, i64 %indvars.iv, !dbg !2931
  %26 = load i32, i32* %arrayidx43, align 4, !dbg !2931
  %mul44 = mul nsw i32 %f.0, %26, !dbg !2932
  %27 = load i32*, i32** %invariant_coefficients, align 8, !dbg !2933
  %arrayidx46 = getelementptr inbounds i32, i32* %27, i64 %indvars.iv, !dbg !2933
  %28 = load i32, i32* %arrayidx46, align 4, !dbg !2934
  %add47 = add nsw i32 %28, %mul44, !dbg !2934
  store i32 %add47, i32* %arrayidx46, align 4, !dbg !2934
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2935
  call void @llvm.dbg.value(metadata i32 undef, metadata !2849, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2860
  br label %for.cond37, !dbg !2936, !llvm.loop !2937

for.inc51:                                        ; preds = %for.cond37
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !2939
  call void @llvm.dbg.value(metadata i32 undef, metadata !2848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2860
  br label %for.cond25, !dbg !2940, !llvm.loop !2941

for.end53:                                        ; preds = %for.cond25
  ret %struct.lambda_loopnest_s* %call18, !dbg !2943
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lambda_lattice_s* @lambda_lattice_compute_base(%struct.lambda_loopnest_s* %nest, %struct.obstack* %lambda_obstack) unnamed_addr #5 !dbg !2944 {
entry:
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %nest, metadata !2948, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !2949, metadata !DIExpression()), !dbg !2959
  %depth1 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 1, !dbg !2960
  %0 = load i32, i32* %depth1, align 8, !dbg !2960
  call void @llvm.dbg.value(metadata i32 %0, metadata !2951, metadata !DIExpression()), !dbg !2959
  %invariants2 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 2, !dbg !2961
  %1 = load i32, i32* %invariants2, align 4, !dbg !2961
  call void @llvm.dbg.value(metadata i32 %1, metadata !2952, metadata !DIExpression()), !dbg !2959
  %call = tail call fastcc %struct.lambda_lattice_s* @lambda_lattice_new(i32 %0, i32 %1, %struct.obstack* %lambda_obstack) #7, !dbg !2962
  call void @llvm.dbg.value(metadata %struct.lambda_lattice_s* %call, metadata !2950, metadata !DIExpression()), !dbg !2959
  %base3 = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call, i64 0, i32 0, !dbg !2963
  %2 = load i32**, i32*** %base3, align 8, !dbg !2963
  call void @llvm.dbg.value(metadata i32** %2, metadata !2953, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.value(metadata i32 0, metadata !2954, metadata !DIExpression()), !dbg !2959
  %loops = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 0, !dbg !2964
  %origin67 = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call, i64 0, i32 2, !dbg !2968
  %origin_invariants75 = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call, i64 0, i32 3, !dbg !2971
  %3 = sext i32 %1 to i64, !dbg !2974
  %4 = sext i32 %0 to i64, !dbg !2974
  %5 = sext i32 %1 to i64, !dbg !2974
  %6 = sext i32 %0 to i64, !dbg !2974
  br label %for.cond, !dbg !2974

for.cond:                                         ; preds = %for.inc83, %entry
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc83 ], [ 0, %entry ], !dbg !2975
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !2954, metadata !DIExpression()), !dbg !2959
  %cmp = icmp slt i64 %indvars.iv4, %6, !dbg !2976
  br i1 %cmp, label %for.body, label %for.end85, !dbg !2977

for.body:                                         ; preds = %for.cond
  %7 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !2978
  %arrayidx = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %7, i64 %indvars.iv4, !dbg !2978
  %8 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx, align 8, !dbg !2978
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %8, metadata !2957, metadata !DIExpression()), !dbg !2959
  %tobool = icmp eq %struct.lambda_loop_s* %8, null, !dbg !2979
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2979

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 405, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2979
  br label %cond.end, !dbg !2979

cond.end:                                         ; preds = %for.body, %cond.true
  %step4 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %8, i64 0, i32 3, !dbg !2980
  %9 = load i32, i32* %step4, align 8, !dbg !2980
  call void @llvm.dbg.value(metadata i32 %9, metadata !2956, metadata !DIExpression()), !dbg !2959
  %cmp5 = icmp eq i32 %9, 1, !dbg !2981
  br i1 %cmp5, label %for.cond6.preheader, label %if.else, !dbg !2982

for.cond6.preheader:                              ; preds = %cond.end
  %arrayidx10 = getelementptr inbounds i32*, i32** %2, i64 %indvars.iv4, !dbg !2983
  br label %for.cond6, !dbg !2985

for.cond6:                                        ; preds = %for.cond6.preheader, %for.body8
  %indvars.iv10 = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next11, %for.body8 ], !dbg !2987
  call void @llvm.dbg.value(metadata i64 %indvars.iv10, metadata !2955, metadata !DIExpression()), !dbg !2959
  %cmp7 = icmp slt i64 %indvars.iv10, %4, !dbg !2988
  %10 = load i32*, i32** %arrayidx10, align 8, !dbg !2983
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !2985

for.body8:                                        ; preds = %for.cond6
  %arrayidx12 = getelementptr inbounds i32, i32* %10, i64 %indvars.iv10, !dbg !2990
  store i32 0, i32* %arrayidx12, align 4, !dbg !2991
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !2992
  call void @llvm.dbg.value(metadata i32 undef, metadata !2955, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2959
  br label %for.cond6, !dbg !2993, !llvm.loop !2994

for.end:                                          ; preds = %for.cond6
  %.lcssa = phi i32* [ %10, %for.cond6 ], !dbg !2983
  %arrayidx16 = getelementptr inbounds i32, i32* %.lcssa, i64 %indvars.iv4, !dbg !2996
  store i32 1, i32* %arrayidx16, align 4, !dbg !2997
  %11 = load i32*, i32** %origin67, align 8, !dbg !2998
  %arrayidx18 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv4, !dbg !2998
  store i32 0, i32* %arrayidx18, align 4, !dbg !2999
  call void @llvm.dbg.value(metadata i32 0, metadata !2955, metadata !DIExpression()), !dbg !2959
  br label %for.cond19, !dbg !3000

for.cond19:                                       ; preds = %for.body21, %for.end
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.body21 ], [ 0, %for.end ], !dbg !3002
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !2955, metadata !DIExpression()), !dbg !2959
  %cmp20 = icmp slt i64 %indvars.iv12, %5, !dbg !3003
  br i1 %cmp20, label %for.body21, label %for.inc83.loopexit, !dbg !3005

for.body21:                                       ; preds = %for.cond19
  %12 = load i32**, i32*** %origin_invariants75, align 8, !dbg !3006
  %arrayidx23 = getelementptr inbounds i32*, i32** %12, i64 %indvars.iv4, !dbg !3006
  %13 = load i32*, i32** %arrayidx23, align 8, !dbg !3006
  %arrayidx25 = getelementptr inbounds i32, i32* %13, i64 %indvars.iv12, !dbg !3006
  store i32 0, i32* %arrayidx25, align 4, !dbg !3007
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !3008
  call void @llvm.dbg.value(metadata i32 undef, metadata !2955, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2959
  br label %for.cond19, !dbg !3009, !llvm.loop !3010

if.else:                                          ; preds = %cond.end
  %lower_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %8, i64 0, i32 0, !dbg !3012
  %14 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %lower_bound, align 8, !dbg !3012
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %14, metadata !2958, metadata !DIExpression()), !dbg !2959
  %tobool29 = icmp eq %struct.lambda_linear_expression_s* %14, null, !dbg !3013
  br i1 %tobool29, label %cond.true33, label %land.lhs.true, !dbg !3013

land.lhs.true:                                    ; preds = %if.else
  %next = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %14, i64 0, i32 4, !dbg !3013
  %15 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %next, align 8, !dbg !3013
  %tobool30 = icmp eq %struct.lambda_linear_expression_s* %15, null, !dbg !3013
  br i1 %tobool30, label %land.lhs.true31, label %cond.true33, !dbg !3013

land.lhs.true31:                                  ; preds = %land.lhs.true
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %14, i64 0, i32 3, !dbg !3013
  %16 = load i32, i32* %denominator, align 8, !dbg !3013
  %cmp32 = icmp eq i32 %16, 1, !dbg !3013
  br i1 %cmp32, label %cond.end35, label %cond.true33, !dbg !3013

cond.true33:                                      ; preds = %land.lhs.true, %if.else, %land.lhs.true31
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 424, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3013
  br label %cond.end35, !dbg !3013

cond.end35:                                       ; preds = %land.lhs.true31, %cond.true33
  call void @llvm.dbg.value(metadata i32 0, metadata !2955, metadata !DIExpression()), !dbg !2959
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %14, i64 0, i32 0, !dbg !3014
  %arrayidx47 = getelementptr inbounds i32*, i32** %2, i64 %indvars.iv4, !dbg !3014
  br label %for.cond37, !dbg !3017

for.cond37:                                       ; preds = %for.body39, %cond.end35
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body39 ], [ 0, %cond.end35 ], !dbg !3018
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2955, metadata !DIExpression()), !dbg !2959
  %exitcond = icmp eq i64 %indvars.iv, %indvars.iv4, !dbg !3019
  br i1 %exitcond, label %for.end52, label %for.body39, !dbg !3020

for.body39:                                       ; preds = %for.cond37
  %17 = load i32*, i32** %coefficients, align 8, !dbg !3021
  %arrayidx41 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv, !dbg !3021
  %18 = load i32, i32* %arrayidx41, align 4, !dbg !3021
  %19 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !3022
  %arrayidx44 = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %19, i64 %indvars.iv, !dbg !3022
  %20 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx44, align 8, !dbg !3022
  %step45 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %20, i64 0, i32 3, !dbg !3022
  %21 = load i32, i32* %step45, align 8, !dbg !3022
  %mul = mul nsw i32 %18, %21, !dbg !3023
  %22 = load i32*, i32** %arrayidx47, align 8, !dbg !3024
  %arrayidx49 = getelementptr inbounds i32, i32* %22, i64 %indvars.iv, !dbg !3024
  store i32 %mul, i32* %arrayidx49, align 4, !dbg !3025
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3026
  call void @llvm.dbg.value(metadata i32 undef, metadata !2955, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2959
  br label %for.cond37, !dbg !3027, !llvm.loop !3028

for.end52:                                        ; preds = %for.cond37
  %23 = load i32*, i32** %arrayidx47, align 8, !dbg !3030
  %arrayidx56 = getelementptr inbounds i32, i32* %23, i64 %indvars.iv4, !dbg !3030
  store i32 %9, i32* %arrayidx56, align 4, !dbg !3031
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !2955, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2959
  br label %for.cond57, !dbg !3032

for.cond57:                                       ; preds = %for.body59, %for.end52
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.body59 ], [ %indvars.iv4, %for.end52 ]
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !3034
  call void @llvm.dbg.value(metadata i32 undef, metadata !2955, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2959
  %24 = trunc i64 %indvars.iv.next7 to i32, !dbg !3035
  %cmp58 = icmp sgt i32 %0, %24, !dbg !3035
  br i1 %cmp58, label %for.body59, label %for.end66, !dbg !3037

for.body59:                                       ; preds = %for.cond57
  %25 = load i32*, i32** %arrayidx47, align 8, !dbg !3038
  %arrayidx63 = getelementptr inbounds i32, i32* %25, i64 %indvars.iv.next7, !dbg !3038
  store i32 0, i32* %arrayidx63, align 4, !dbg !3039
  call void @llvm.dbg.value(metadata i32 undef, metadata !2955, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2959
  br label %for.cond57, !dbg !3040, !llvm.loop !3041

for.end66:                                        ; preds = %for.cond57
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %14, i64 0, i32 1, !dbg !3043
  %26 = load i32, i32* %constant, align 8, !dbg !3043
  %27 = load i32*, i32** %origin67, align 8, !dbg !3044
  %arrayidx69 = getelementptr inbounds i32, i32* %27, i64 %indvars.iv4, !dbg !3044
  store i32 %26, i32* %arrayidx69, align 4, !dbg !3045
  call void @llvm.dbg.value(metadata i32 0, metadata !2955, metadata !DIExpression()), !dbg !2959
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %14, i64 0, i32 2, !dbg !2971
  br label %for.cond70, !dbg !3046

for.cond70:                                       ; preds = %for.body72, %for.end66
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.body72 ], [ 0, %for.end66 ], !dbg !3047
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !2955, metadata !DIExpression()), !dbg !2959
  %cmp71 = icmp slt i64 %indvars.iv8, %3, !dbg !3048
  br i1 %cmp71, label %for.body72, label %for.inc83.loopexit1, !dbg !3049

for.body72:                                       ; preds = %for.cond70
  %28 = load i32*, i32** %invariant_coefficients, align 8, !dbg !3050
  %arrayidx74 = getelementptr inbounds i32, i32* %28, i64 %indvars.iv8, !dbg !3050
  %29 = load i32, i32* %arrayidx74, align 4, !dbg !3050
  %30 = load i32**, i32*** %origin_invariants75, align 8, !dbg !3051
  %arrayidx77 = getelementptr inbounds i32*, i32** %30, i64 %indvars.iv4, !dbg !3051
  %31 = load i32*, i32** %arrayidx77, align 8, !dbg !3051
  %arrayidx79 = getelementptr inbounds i32, i32* %31, i64 %indvars.iv8, !dbg !3051
  store i32 %29, i32* %arrayidx79, align 4, !dbg !3052
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !3053
  call void @llvm.dbg.value(metadata i32 undef, metadata !2955, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2959
  br label %for.cond70, !dbg !3054, !llvm.loop !3055

for.inc83.loopexit:                               ; preds = %for.cond19
  br label %for.inc83, !dbg !3057

for.inc83.loopexit1:                              ; preds = %for.cond70
  br label %for.inc83, !dbg !3057

for.inc83:                                        ; preds = %for.inc83.loopexit1, %for.inc83.loopexit
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !3057
  call void @llvm.dbg.value(metadata i32 undef, metadata !2954, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2959
  br label %for.cond, !dbg !3058, !llvm.loop !3059

for.end85:                                        ; preds = %for.cond
  ret %struct.lambda_lattice_s* %call, !dbg !3061
}

declare dso_local %struct.lambda_trans_matrix_s* @lambda_trans_matrix_new(i32, i32) local_unnamed_addr #2

declare dso_local void @lambda_matrix_mult(i32**, i32**, i32**, i32, i32, i32) local_unnamed_addr #2

declare dso_local void @lambda_matrix_hermite(i32**, i32, i32**, i32**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lambda_loopnest_s* @lambda_compute_auxillary_space(%struct.lambda_loopnest_s* %nest, %struct.lambda_trans_matrix_s* %trans, %struct.obstack* %lambda_obstack) unnamed_addr #5 !dbg !3062 {
entry:
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %nest, metadata !3064, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %trans, metadata !3065, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !3066, metadata !DIExpression()), !dbg !3082
  %depth1 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 1, !dbg !3083
  %0 = load i32, i32* %depth1, align 8, !dbg !3083
  call void @llvm.dbg.value(metadata i32 %0, metadata !3074, metadata !DIExpression()), !dbg !3082
  %invariants2 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 2, !dbg !3084
  %1 = load i32, i32* %invariants2, align 4, !dbg !3084
  call void @llvm.dbg.value(metadata i32 %1, metadata !3075, metadata !DIExpression()), !dbg !3082
  %call = tail call i32** @lambda_matrix_new(i32 128, i32 %0) #6, !dbg !3085
  call void @llvm.dbg.value(metadata i32** %call, metadata !3067, metadata !DIExpression()), !dbg !3082
  %call3 = tail call i32** @lambda_matrix_new(i32 128, i32 %1) #6, !dbg !3086
  call void @llvm.dbg.value(metadata i32** %call3, metadata !3068, metadata !DIExpression()), !dbg !3082
  %call4 = tail call fastcc i32* @lambda_vector_new(i32 128) #7, !dbg !3087
  call void @llvm.dbg.value(metadata i32* %call4, metadata !3071, metadata !DIExpression()), !dbg !3082
  %call5 = tail call i32** @lambda_matrix_new(i32 128, i32 %0) #6, !dbg !3088
  call void @llvm.dbg.value(metadata i32** %call5, metadata !3069, metadata !DIExpression()), !dbg !3082
  %call6 = tail call i32** @lambda_matrix_new(i32 128, i32 %1) #6, !dbg !3089
  call void @llvm.dbg.value(metadata i32** %call6, metadata !3070, metadata !DIExpression()), !dbg !3082
  %call7 = tail call fastcc i32* @lambda_vector_new(i32 128) #7, !dbg !3090
  call void @llvm.dbg.value(metadata i32* %call7, metadata !3072, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i32 0, metadata !3076, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i32 0, metadata !3077, metadata !DIExpression()), !dbg !3082
  %loops = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %nest, i64 0, i32 0, !dbg !3091
  %2 = sext i32 %1 to i64, !dbg !3095
  %3 = sext i32 %1 to i64, !dbg !3095
  %4 = sext i32 %1 to i64, !dbg !3095
  %5 = sext i32 %0 to i64, !dbg !3095
  br label %for.cond, !dbg !3095

for.cond:                                         ; preds = %for.inc121, %entry
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %for.inc121 ], [ 0, %entry ], !dbg !3096
  %size.0 = phi i32 [ %35, %for.inc121 ], [ 0, %entry ], !dbg !3096
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !3077, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i32 %size.0, metadata !3076, metadata !DIExpression()), !dbg !3082
  %cmp = icmp slt i64 %indvars.iv20, %5, !dbg !3097
  br i1 %cmp, label %for.body, label %for.end123, !dbg !3098

for.body:                                         ; preds = %for.cond
  %6 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !3099
  %arrayidx = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %6, i64 %indvars.iv20, !dbg !3099
  %7 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx, align 8, !dbg !3099
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %7, metadata !3079, metadata !DIExpression()), !dbg !3082
  %step = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %7, i64 0, i32 3, !dbg !3100
  %8 = load i32, i32* %step, align 8, !dbg !3100
  %cmp8 = icmp sgt i32 %8, 0, !dbg !3102
  br i1 %cmp8, label %if.then, label %if.else, !dbg !3103

if.then:                                          ; preds = %for.body
  %lower_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %7, i64 0, i32 0, !dbg !3104
  br label %if.end, !dbg !3105

if.else:                                          ; preds = %for.body
  %upper_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %7, i64 0, i32 1, !dbg !3106
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %expression.0.in = phi %struct.lambda_linear_expression_s** [ %lower_bound, %if.then ], [ %upper_bound, %if.else ]
  %9 = sext i32 %size.0 to i64, !dbg !3107
  br label %for.cond9, !dbg !3107

for.cond9:                                        ; preds = %for.inc55, %if.end
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.inc55 ], [ %9, %if.end ], !dbg !3082
  %expression.1.in = phi %struct.lambda_linear_expression_s** [ %next, %for.inc55 ], [ %expression.0.in, %if.end ]
  %expression.1 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %expression.1.in, align 8, !dbg !3091
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %expression.1, metadata !3080, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !3076, metadata !DIExpression()), !dbg !3082
  %cmp10 = icmp eq %struct.lambda_linear_expression_s* %expression.1, null, !dbg !3108
  br i1 %cmp10, label %for.end56, label %for.cond12.preheader, !dbg !3111

for.cond12.preheader:                             ; preds = %for.cond9
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.1, i64 0, i32 0, !dbg !3112
  %arrayidx18 = getelementptr inbounds i32*, i32** %call, i64 %indvars.iv6, !dbg !3112
  br label %for.cond12, !dbg !3116

for.cond12:                                       ; preds = %for.cond12.preheader, %for.body14
  %indvars.iv = phi i64 [ 0, %for.cond12.preheader ], [ %indvars.iv.next, %for.body14 ], !dbg !3117
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3078, metadata !DIExpression()), !dbg !3082
  %exitcond = icmp eq i64 %indvars.iv, %indvars.iv20, !dbg !3118
  br i1 %exitcond, label %for.cond21.preheader, label %for.body14, !dbg !3116

for.cond21.preheader:                             ; preds = %for.cond12
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.1, i64 0, i32 2, !dbg !3119
  %arrayidx27 = getelementptr inbounds i32*, i32** %call3, i64 %indvars.iv6, !dbg !3119
  br label %for.cond21, !dbg !3122

for.body14:                                       ; preds = %for.cond12
  %10 = load i32*, i32** %coefficients, align 8, !dbg !3123
  %arrayidx16 = getelementptr inbounds i32, i32* %10, i64 %indvars.iv, !dbg !3123
  %11 = load i32, i32* %arrayidx16, align 4, !dbg !3123
  %12 = load i32*, i32** %arrayidx18, align 8, !dbg !3124
  %arrayidx20 = getelementptr inbounds i32, i32* %12, i64 %indvars.iv, !dbg !3124
  store i32 %11, i32* %arrayidx20, align 4, !dbg !3125
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3126
  call void @llvm.dbg.value(metadata i32 undef, metadata !3078, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  br label %for.cond12, !dbg !3127, !llvm.loop !3128

for.cond21:                                       ; preds = %for.cond21.preheader, %for.body23
  %indvars.iv2 = phi i64 [ 0, %for.cond21.preheader ], [ %indvars.iv.next3, %for.body23 ], !dbg !3130
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3078, metadata !DIExpression()), !dbg !3082
  %cmp22 = icmp slt i64 %indvars.iv2, %2, !dbg !3131
  br i1 %cmp22, label %for.body23, label %for.end32, !dbg !3122

for.body23:                                       ; preds = %for.cond21
  %13 = load i32*, i32** %invariant_coefficients, align 8, !dbg !3132
  %arrayidx25 = getelementptr inbounds i32, i32* %13, i64 %indvars.iv2, !dbg !3132
  %14 = load i32, i32* %arrayidx25, align 4, !dbg !3132
  %15 = load i32*, i32** %arrayidx27, align 8, !dbg !3133
  %arrayidx29 = getelementptr inbounds i32, i32* %15, i64 %indvars.iv2, !dbg !3133
  store i32 %14, i32* %arrayidx29, align 4, !dbg !3134
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !3135
  call void @llvm.dbg.value(metadata i32 undef, metadata !3078, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  br label %for.cond21, !dbg !3136, !llvm.loop !3137

for.end32:                                        ; preds = %for.cond21
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.1, i64 0, i32 1, !dbg !3139
  %16 = load i32, i32* %constant, align 8, !dbg !3139
  %arrayidx34 = getelementptr inbounds i32, i32* %call4, i64 %indvars.iv6, !dbg !3140
  store i32 %16, i32* %arrayidx34, align 4, !dbg !3141
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.1, i64 0, i32 3, !dbg !3142
  %17 = load i32, i32* %denominator, align 8, !dbg !3142
  %mul = sub nsw i32 0, %17, !dbg !3143
  %18 = load i32*, i32** %arrayidx18, align 8, !dbg !3144
  %arrayidx38 = getelementptr inbounds i32, i32* %18, i64 %indvars.iv20, !dbg !3144
  store i32 %mul, i32* %arrayidx38, align 4, !dbg !3145
  %19 = load i32, i32* %arrayidx34, align 4, !dbg !3146
  %mul41 = sub nsw i32 0, %19, !dbg !3146
  store i32 %mul41, i32* %arrayidx34, align 4, !dbg !3146
  call void @llvm.dbg.value(metadata i32 0, metadata !3078, metadata !DIExpression()), !dbg !3082
  br label %for.cond42, !dbg !3147

for.cond42:                                       ; preds = %for.body44, %for.end32
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.body44 ], [ 0, %for.end32 ], !dbg !3149
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !3078, metadata !DIExpression()), !dbg !3082
  %cmp43 = icmp slt i64 %indvars.iv4, %3, !dbg !3150
  br i1 %cmp43, label %for.body44, label %for.end52, !dbg !3152

for.body44:                                       ; preds = %for.cond42
  %20 = load i32*, i32** %arrayidx27, align 8, !dbg !3153
  %arrayidx48 = getelementptr inbounds i32, i32* %20, i64 %indvars.iv4, !dbg !3153
  %21 = load i32, i32* %arrayidx48, align 4, !dbg !3154
  %mul49 = sub nsw i32 0, %21, !dbg !3154
  store i32 %mul49, i32* %arrayidx48, align 4, !dbg !3154
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !3155
  call void @llvm.dbg.value(metadata i32 undef, metadata !3078, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  br label %for.cond42, !dbg !3156, !llvm.loop !3157

for.end52:                                        ; preds = %for.cond42
  %indvars.iv.next7 = add i64 %indvars.iv6, 1, !dbg !3159
  call void @llvm.dbg.value(metadata i32 undef, metadata !3076, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  %cmp54 = icmp slt i64 %indvars.iv.next7, 128, !dbg !3160
  br i1 %cmp54, label %for.inc55, label %cond.true, !dbg !3160

cond.true:                                        ; preds = %for.end52
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 702, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3160
  br label %for.inc55, !dbg !3160

for.inc55:                                        ; preds = %cond.true, %for.end52
  %next = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.1, i64 0, i32 4, !dbg !3161
  br label %for.cond9, !dbg !3162, !llvm.loop !3163

for.end56:                                        ; preds = %for.cond9
  %indvars.iv6.lcssa = phi i64 [ %indvars.iv6, %for.cond9 ], !dbg !3082
  call void @llvm.dbg.value(metadata i64 %indvars.iv6.lcssa, metadata !3076, metadata !DIExpression()), !dbg !3082
  %22 = load i32, i32* %step, align 8, !dbg !3165
  %cmp58 = icmp sgt i32 %22, 0, !dbg !3167
  br i1 %cmp58, label %if.then59, label %if.else61, !dbg !3168

if.then59:                                        ; preds = %for.end56
  %upper_bound60 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %7, i64 0, i32 1, !dbg !3169
  br label %if.end63, !dbg !3170

if.else61:                                        ; preds = %for.end56
  %lower_bound62 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %7, i64 0, i32 0, !dbg !3171
  br label %if.end63

if.end63:                                         ; preds = %if.else61, %if.then59
  %expression.2.in = phi %struct.lambda_linear_expression_s** [ %upper_bound60, %if.then59 ], [ %lower_bound62, %if.else61 ]
  %sext = shl i64 %indvars.iv6.lcssa, 32, !dbg !3172
  %23 = ashr exact i64 %sext, 32, !dbg !3172
  br label %for.cond64, !dbg !3172

for.cond64:                                       ; preds = %for.inc118, %if.end63
  %indvars.iv18 = phi i64 [ %indvars.iv.next19, %for.inc118 ], [ %23, %if.end63 ], !dbg !3082
  %expression.3.in = phi %struct.lambda_linear_expression_s** [ %next119, %for.inc118 ], [ %expression.2.in, %if.end63 ]
  %expression.3 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %expression.3.in, align 8, !dbg !3091
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %expression.3, metadata !3080, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !3076, metadata !DIExpression()), !dbg !3082
  %cmp65 = icmp eq %struct.lambda_linear_expression_s* %expression.3, null, !dbg !3173
  br i1 %cmp65, label %for.inc121, label %for.cond67.preheader, !dbg !3176

for.cond67.preheader:                             ; preds = %for.cond64
  %coefficients70 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.3, i64 0, i32 0, !dbg !3177
  %arrayidx74 = getelementptr inbounds i32*, i32** %call, i64 %indvars.iv18, !dbg !3177
  br label %for.cond67, !dbg !3181

for.cond67:                                       ; preds = %for.cond67.preheader, %for.body69
  %indvars.iv8 = phi i64 [ 0, %for.cond67.preheader ], [ %indvars.iv.next9, %for.body69 ], !dbg !3182
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !3078, metadata !DIExpression()), !dbg !3082
  %exitcond11 = icmp eq i64 %indvars.iv8, %indvars.iv20, !dbg !3183
  br i1 %exitcond11, label %for.cond80.preheader, label %for.body69, !dbg !3181

for.cond80.preheader:                             ; preds = %for.cond67
  %invariant_coefficients83 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.3, i64 0, i32 2, !dbg !3184
  %arrayidx87 = getelementptr inbounds i32*, i32** %call3, i64 %indvars.iv18, !dbg !3184
  br label %for.cond80, !dbg !3187

for.body69:                                       ; preds = %for.cond67
  %24 = load i32*, i32** %coefficients70, align 8, !dbg !3188
  %arrayidx72 = getelementptr inbounds i32, i32* %24, i64 %indvars.iv8, !dbg !3188
  %25 = load i32, i32* %arrayidx72, align 4, !dbg !3188
  %26 = load i32*, i32** %arrayidx74, align 8, !dbg !3189
  %arrayidx76 = getelementptr inbounds i32, i32* %26, i64 %indvars.iv8, !dbg !3189
  store i32 %25, i32* %arrayidx76, align 4, !dbg !3190
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !3191
  call void @llvm.dbg.value(metadata i32 undef, metadata !3078, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  br label %for.cond67, !dbg !3192, !llvm.loop !3193

for.cond80:                                       ; preds = %for.cond80.preheader, %for.body82
  %indvars.iv12 = phi i64 [ 0, %for.cond80.preheader ], [ %indvars.iv.next13, %for.body82 ], !dbg !3195
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !3078, metadata !DIExpression()), !dbg !3082
  %cmp81 = icmp slt i64 %indvars.iv12, %4, !dbg !3196
  br i1 %cmp81, label %for.body82, label %for.end92, !dbg !3187

for.body82:                                       ; preds = %for.cond80
  %27 = load i32*, i32** %invariant_coefficients83, align 8, !dbg !3197
  %arrayidx85 = getelementptr inbounds i32, i32* %27, i64 %indvars.iv12, !dbg !3197
  %28 = load i32, i32* %arrayidx85, align 4, !dbg !3197
  %29 = load i32*, i32** %arrayidx87, align 8, !dbg !3198
  %arrayidx89 = getelementptr inbounds i32, i32* %29, i64 %indvars.iv12, !dbg !3198
  store i32 %28, i32* %arrayidx89, align 4, !dbg !3199
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !3200
  call void @llvm.dbg.value(metadata i32 undef, metadata !3078, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  br label %for.cond80, !dbg !3201, !llvm.loop !3202

for.end92:                                        ; preds = %for.cond80
  %constant93 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.3, i64 0, i32 1, !dbg !3204
  %30 = load i32, i32* %constant93, align 8, !dbg !3204
  %arrayidx95 = getelementptr inbounds i32, i32* %call4, i64 %indvars.iv18, !dbg !3205
  store i32 %30, i32* %arrayidx95, align 4, !dbg !3206
  call void @llvm.dbg.value(metadata i32 0, metadata !3078, metadata !DIExpression()), !dbg !3082
  br label %for.cond96, !dbg !3207

for.cond96:                                       ; preds = %for.body98, %for.end92
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %for.body98 ], [ 0, %for.end92 ], !dbg !3209
  call void @llvm.dbg.value(metadata i64 %indvars.iv14, metadata !3078, metadata !DIExpression()), !dbg !3082
  %exitcond17 = icmp eq i64 %indvars.iv14, %indvars.iv20, !dbg !3210
  br i1 %exitcond17, label %for.end106, label %for.body98, !dbg !3212

for.body98:                                       ; preds = %for.cond96
  %31 = load i32*, i32** %arrayidx74, align 8, !dbg !3213
  %arrayidx102 = getelementptr inbounds i32, i32* %31, i64 %indvars.iv14, !dbg !3213
  %32 = load i32, i32* %arrayidx102, align 4, !dbg !3214
  %mul103 = sub nsw i32 0, %32, !dbg !3214
  store i32 %mul103, i32* %arrayidx102, align 4, !dbg !3214
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !3215
  call void @llvm.dbg.value(metadata i32 undef, metadata !3078, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  br label %for.cond96, !dbg !3216, !llvm.loop !3217

for.end106:                                       ; preds = %for.cond96
  %denominator107 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.3, i64 0, i32 3, !dbg !3219
  %33 = load i32, i32* %denominator107, align 8, !dbg !3219
  %34 = load i32*, i32** %arrayidx74, align 8, !dbg !3220
  %arrayidx111 = getelementptr inbounds i32, i32* %34, i64 %indvars.iv20, !dbg !3220
  store i32 %33, i32* %arrayidx111, align 4, !dbg !3221
  %indvars.iv.next19 = add i64 %indvars.iv18, 1, !dbg !3222
  call void @llvm.dbg.value(metadata i32 undef, metadata !3076, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  %cmp113 = icmp slt i64 %indvars.iv.next19, 128, !dbg !3223
  br i1 %cmp113, label %for.inc118, label %cond.true114, !dbg !3223

cond.true114:                                     ; preds = %for.end106
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 731, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3223
  br label %for.inc118, !dbg !3223

for.inc118:                                       ; preds = %cond.true114, %for.end106
  %next119 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %expression.3, i64 0, i32 4, !dbg !3224
  br label %for.cond64, !dbg !3225, !llvm.loop !3226

for.inc121:                                       ; preds = %for.cond64
  %indvars.iv18.lcssa = phi i64 [ %indvars.iv18, %for.cond64 ], !dbg !3082
  call void @llvm.dbg.value(metadata i64 %indvars.iv18.lcssa, metadata !3076, metadata !DIExpression()), !dbg !3082
  %35 = trunc i64 %indvars.iv18.lcssa to i32, !dbg !3082
  call void @llvm.dbg.value(metadata i32 %35, metadata !3076, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i32 %35, metadata !3076, metadata !DIExpression()), !dbg !3082
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1, !dbg !3228
  call void @llvm.dbg.value(metadata i32 undef, metadata !3077, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3082
  br label %for.cond, !dbg !3229, !llvm.loop !3230

for.end123:                                       ; preds = %for.cond
  %size.0.lcssa = phi i32 [ %size.0, %for.cond ], !dbg !3096
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !3076, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !3076, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !3076, metadata !DIExpression()), !dbg !3082
  %call124 = tail call fastcc %struct.lambda_lattice_s* @lambda_lattice_compute_base(%struct.lambda_loopnest_s* %nest, %struct.obstack* %lambda_obstack) #7, !dbg !3232
  call void @llvm.dbg.value(metadata %struct.lambda_lattice_s* %call124, metadata !3081, metadata !DIExpression()), !dbg !3082
  %base = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call124, i64 0, i32 0, !dbg !3233
  %36 = load i32**, i32*** %base, align 8, !dbg !3233
  tail call void @lambda_matrix_mult(i32** %call, i32** %36, i32** %call5, i32 %size.0.lcssa, i32 %0, i32 %0) #6, !dbg !3234
  %origin = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call124, i64 0, i32 2, !dbg !3235
  %37 = load i32*, i32** %origin, align 8, !dbg !3235
  tail call void @lambda_matrix_vector_mult(i32** %call, i32 %size.0.lcssa, i32 %0, i32* %37, i32* %call7) #6, !dbg !3236
  tail call fastcc void @lambda_vector_add_mc(i32* %call4, i32 1, i32* %call7, i32 -1, i32* %call7, i32 %size.0.lcssa) #7, !dbg !3237
  %origin_invariants = getelementptr inbounds %struct.lambda_lattice_s, %struct.lambda_lattice_s* %call124, i64 0, i32 3, !dbg !3238
  %38 = load i32**, i32*** %origin_invariants, align 8, !dbg !3238
  tail call void @lambda_matrix_mult(i32** %call, i32** %38, i32** %call6, i32 %size.0.lcssa, i32 %0, i32 %1) #6, !dbg !3239
  tail call void @lambda_matrix_add_mc(i32** %call3, i32 1, i32** %call6, i32 -1, i32** %call6, i32 %size.0.lcssa, i32 %1) #6, !dbg !3240
  %call125 = tail call i32** @lambda_matrix_new(i32 %0, i32 %0) #6, !dbg !3241
  call void @llvm.dbg.value(metadata i32** %call125, metadata !3073, metadata !DIExpression()), !dbg !3082
  %matrix = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %trans, i64 0, i32 0, !dbg !3242
  %39 = load i32**, i32*** %matrix, align 8, !dbg !3242
  %call126 = tail call i32 @lambda_matrix_inverse(i32** %39, i32** %call125, i32 %0) #6, !dbg !3243
  tail call void @lambda_matrix_mult(i32** %call5, i32** %call125, i32** %call, i32 %size.0.lcssa, i32 %0, i32 %0) #6, !dbg !3244
  %call127 = tail call fastcc %struct.lambda_loopnest_s* @compute_nest_using_fourier_motzkin(i32 %size.0.lcssa, i32 %0, i32 %1, i32** %call, i32** %call6, i32* %call7, %struct.obstack* %lambda_obstack) #7, !dbg !3245
  ret %struct.lambda_loopnest_s* %call127, !dbg !3246
}

; Function Attrs: nounwind uwtable
define internal fastcc i32* @lambda_compute_step_signs(%struct.lambda_trans_matrix_s* %trans, i32* %stepsigns) unnamed_addr #5 !dbg !3247 {
entry:
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %trans, metadata !3251, metadata !DIExpression()), !dbg !3266
  call void @llvm.dbg.value(metadata i32* %stepsigns, metadata !3252, metadata !DIExpression()), !dbg !3266
  %matrix1 = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %trans, i64 0, i32 0, !dbg !3267
  %0 = load i32**, i32*** %matrix1, align 8, !dbg !3267
  call void @llvm.dbg.value(metadata i32** %0, metadata !3253, metadata !DIExpression()), !dbg !3266
  %rowsize = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %trans, i64 0, i32 1, !dbg !3268
  %1 = load i32, i32* %rowsize, align 8, !dbg !3268
  call void @llvm.dbg.value(metadata i32 %1, metadata !3255, metadata !DIExpression()), !dbg !3266
  %call = tail call i32** @lambda_matrix_new(i32 %1, i32 %1) #6, !dbg !3269
  call void @llvm.dbg.value(metadata i32** %call, metadata !3254, metadata !DIExpression()), !dbg !3266
  %call2 = tail call fastcc i32* @lambda_vector_new(i32 %1) #7, !dbg !3270
  call void @llvm.dbg.value(metadata i32* %call2, metadata !3256, metadata !DIExpression()), !dbg !3266
  tail call fastcc void @lambda_vector_copy(i32* %stepsigns, i32* %call2, i32 %1) #7, !dbg !3271
  tail call void @lambda_matrix_copy(i32** %0, i32** %call, i32 %1, i32 %1) #6, !dbg !3272
  call void @llvm.dbg.value(metadata i32 0, metadata !3258, metadata !DIExpression()), !dbg !3266
  %2 = add i32 %1, -1, !dbg !3273
  %3 = sext i32 %1 to i64, !dbg !3273
  br label %for.cond, !dbg !3273

for.cond:                                         ; preds = %for.inc31, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc31 ], [ 0, %entry ], !dbg !3274
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3258, metadata !DIExpression()), !dbg !3266
  %cmp = icmp slt i64 %indvars.iv, %3, !dbg !3275
  br i1 %cmp, label %for.body, label %for.end33, !dbg !3276

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32*, i32** %call, i64 %indvars.iv, !dbg !3277
  %4 = load i32*, i32** %arrayidx, align 8, !dbg !3277
  call void @llvm.dbg.value(metadata i32* %4, metadata !3262, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3257, metadata !DIExpression()), !dbg !3266
  %wide.trip.count = zext i32 %1 to i64, !dbg !3279
  br label %for.cond3, !dbg !3282

for.cond3:                                        ; preds = %for.inc, %for.body
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc ], [ %indvars.iv, %for.body ], !dbg !3283
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3257, metadata !DIExpression()), !dbg !3266
  %exitcond = icmp eq i64 %indvars.iv1, %wide.trip.count, !dbg !3279
  br i1 %exitcond, label %while.cond.preheader, label %for.body5, !dbg !3284

while.cond.preheader:                             ; preds = %for.cond3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3278
  %arrayidx13 = getelementptr inbounds i32, i32* %call2, i64 %indvars.iv, !dbg !3285
  %arrayidx27 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv, !dbg !3287
  br label %while.cond, !dbg !3291

for.body5:                                        ; preds = %for.cond3
  %arrayidx7 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv1, !dbg !3292
  %5 = load i32, i32* %arrayidx7, align 4, !dbg !3292
  %cmp8 = icmp slt i32 %5, 0, !dbg !3294
  br i1 %cmp8, label %if.then, label %for.inc, !dbg !3295

if.then:                                          ; preds = %for.body5
  %6 = trunc i64 %indvars.iv1 to i32, !dbg !3296
  tail call void @lambda_matrix_col_negate(i32** %call, i32 %1, i32 %6) #6, !dbg !3296
  br label %for.inc, !dbg !3296

for.inc:                                          ; preds = %for.body5, %if.then
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3297
  call void @llvm.dbg.value(metadata i32 undef, metadata !3257, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3266
  br label %for.cond3, !dbg !3298, !llvm.loop !3299

while.cond.loopexit:                              ; preds = %for.cond21
  br label %while.cond, !dbg !3291

while.cond:                                       ; preds = %while.cond.preheader, %while.cond.loopexit
  %7 = trunc i64 %indvars.iv.next to i32, !dbg !3301
  %call9 = tail call fastcc i32 @lambda_vector_first_nz(i32* %4, i32 %1, i32 %7) #7, !dbg !3301
  %cmp10 = icmp slt i32 %call9, %1, !dbg !3302
  br i1 %cmp10, label %while.body, label %for.inc31, !dbg !3291

while.body:                                       ; preds = %while.cond
  %8 = trunc i64 %indvars.iv to i32, !dbg !3303
  %call11 = tail call fastcc i32 @lambda_vector_min_nz(i32* %4, i32 %1, i32 %8) #7, !dbg !3303
  call void @llvm.dbg.value(metadata i32 %call11, metadata !3260, metadata !DIExpression()), !dbg !3266
  %9 = trunc i64 %indvars.iv to i32, !dbg !3304
  tail call void @lambda_matrix_col_exchange(i32** %call, i32 %1, i32 %9, i32 %call11) #6, !dbg !3304
  %10 = load i32, i32* %arrayidx13, align 4, !dbg !3305
  call void @llvm.dbg.value(metadata i32 %10, metadata !3261, metadata !DIExpression()), !dbg !3266
  %idxprom14 = sext i32 %call11 to i64, !dbg !3306
  %arrayidx15 = getelementptr inbounds i32, i32* %call2, i64 %idxprom14, !dbg !3306
  %11 = load i32, i32* %arrayidx15, align 4, !dbg !3306
  store i32 %11, i32* %arrayidx13, align 4, !dbg !3307
  store i32 %10, i32* %arrayidx15, align 4, !dbg !3308
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3257, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3266
  %wide.trip.count5 = zext i32 %2 to i64, !dbg !3309
  br label %for.cond21, !dbg !3310

for.cond21:                                       ; preds = %for.body23, %while.body
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.body23 ], [ %indvars.iv, %while.body ]
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !3311
  call void @llvm.dbg.value(metadata i32 undef, metadata !3257, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3266
  %exitcond6 = icmp eq i64 %indvars.iv3, %wide.trip.count5, !dbg !3309
  br i1 %exitcond6, label %while.cond.loopexit, label %for.body23, !dbg !3312, !llvm.loop !3313

for.body23:                                       ; preds = %for.cond21
  %arrayidx25 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv.next4, !dbg !3315
  %12 = load i32, i32* %arrayidx25, align 4, !dbg !3315
  %13 = load i32, i32* %arrayidx27, align 4, !dbg !3316
  %div = sdiv i32 %12, %13, !dbg !3317
  call void @llvm.dbg.value(metadata i32 %div, metadata !3259, metadata !DIExpression()), !dbg !3266
  %mul = sub nsw i32 0, %div, !dbg !3318
  %14 = trunc i64 %indvars.iv.next4 to i32, !dbg !3319
  %15 = trunc i64 %indvars.iv to i32, !dbg !3319
  tail call void @lambda_matrix_col_add(i32** %call, i32 %1, i32 %15, i32 %14, i32 %mul) #6, !dbg !3319
  call void @llvm.dbg.value(metadata i32 undef, metadata !3257, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3266
  br label %for.cond21, !dbg !3320, !llvm.loop !3321

for.inc31:                                        ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32 undef, metadata !3258, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3266
  br label %for.cond, !dbg !3323, !llvm.loop !3324

for.end33:                                        ; preds = %for.cond
  ret i32* %call2, !dbg !3326
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lambda_loopnest_s* @lambda_compute_target_space(%struct.lambda_loopnest_s* %auxillary_nest, %struct.lambda_trans_matrix_s* %H, i32* %stepsigns, %struct.obstack* %lambda_obstack) unnamed_addr #5 !dbg !3327 {
entry:
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %auxillary_nest, metadata !3331, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %H, metadata !3332, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32* %stepsigns, metadata !3333, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !3334, metadata !DIExpression()), !dbg !3353
  %depth1 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %auxillary_nest, i64 0, i32 1, !dbg !3354
  %0 = load i32, i32* %depth1, align 8, !dbg !3354
  call void @llvm.dbg.value(metadata i32 %0, metadata !3344, metadata !DIExpression()), !dbg !3353
  %invariants2 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %auxillary_nest, i64 0, i32 2, !dbg !3355
  %1 = load i32, i32* %invariants2, align 4, !dbg !3355
  call void @llvm.dbg.value(metadata i32 %1, metadata !3345, metadata !DIExpression()), !dbg !3353
  %call = tail call i32** @lambda_matrix_new(i32 %0, i32 %0) #6, !dbg !3356
  call void @llvm.dbg.value(metadata i32** %call, metadata !3335, metadata !DIExpression()), !dbg !3353
  %matrix = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %H, i64 0, i32 0, !dbg !3357
  %2 = load i32**, i32*** %matrix, align 8, !dbg !3357
  %call3 = tail call i32 @lambda_matrix_inverse(i32** %2, i32** %call, i32 %0) #6, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %call3, metadata !3337, metadata !DIExpression()), !dbg !3353
  %call4 = tail call i32** @lambda_matrix_new(i32 %0, i32 %0) #6, !dbg !3359
  call void @llvm.dbg.value(metadata i32** %call4, metadata !3336, metadata !DIExpression()), !dbg !3353
  %3 = load i32**, i32*** %matrix, align 8, !dbg !3360
  tail call void @lambda_matrix_copy(i32** %3, i32** %call4, i32 %0, i32 %0) #6, !dbg !3361
  call void @llvm.dbg.value(metadata i32 0, metadata !3338, metadata !DIExpression()), !dbg !3353
  %4 = sext i32 %0 to i64, !dbg !3362
  br label %for.cond, !dbg !3362

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %for.body ], [ 0, %entry ], !dbg !3364
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !3338, metadata !DIExpression()), !dbg !3353
  %cmp = icmp slt i64 %indvars.iv20, %4, !dbg !3365
  br i1 %cmp, label %for.body, label %for.end, !dbg !3367

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32*, i32** %call4, i64 %indvars.iv20, !dbg !3368
  %5 = load i32*, i32** %arrayidx, align 8, !dbg !3368
  %arrayidx7 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv20, !dbg !3368
  store i32 0, i32* %arrayidx7, align 4, !dbg !3369
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1, !dbg !3370
  call void @llvm.dbg.value(metadata i32 undef, metadata !3338, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond, !dbg !3371, !llvm.loop !3372

for.end:                                          ; preds = %for.cond
  %call8 = tail call i32** @lambda_matrix_new(i32 %0, i32 %0) #6, !dbg !3374
  call void @llvm.dbg.value(metadata i32** %call8, metadata !3346, metadata !DIExpression()), !dbg !3353
  tail call void @lambda_matrix_mult(i32** %call4, i32** %call, i32** %call8, i32 %0, i32 %0, i32 %0) #6, !dbg !3375
  %call9 = tail call %struct.lambda_loopnest_s* @lambda_loopnest_new(i32 %0, i32 %1, %struct.obstack* %lambda_obstack) #7, !dbg !3376
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %call9, metadata !3343, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 0, metadata !3338, metadata !DIExpression()), !dbg !3353
  %loops = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %call9, i64 0, i32 0, !dbg !3377
  %6 = sext i32 %0 to i64, !dbg !3381
  br label %for.cond10, !dbg !3381

for.cond10:                                       ; preds = %for.end33, %for.end
  %indvars.iv18 = phi i64 [ %indvars.iv.next19, %for.end33 ], [ 0, %for.end ], !dbg !3382
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !3338, metadata !DIExpression()), !dbg !3353
  %cmp11 = icmp slt i64 %indvars.iv18, %6, !dbg !3383
  br i1 %cmp11, label %for.body12, label %for.cond41.preheader, !dbg !3384

for.cond41.preheader:                             ; preds = %for.cond10
  %loops44 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %auxillary_nest, i64 0, i32 0, !dbg !3385
  %7 = sext i32 %1 to i64, !dbg !3389
  %8 = sext i32 %1 to i64, !dbg !3389
  %9 = sext i32 %0 to i64, !dbg !3389
  br label %for.cond41, !dbg !3389

for.body12:                                       ; preds = %for.cond10
  %call13 = tail call i8* @ggc_alloc_cleared_stat(i64 32) #6, !dbg !3390
  call void @llvm.dbg.value(metadata i8* %call13, metadata !3348, metadata !DIExpression()), !dbg !3353
  %10 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !3391
  %arrayidx15 = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %10, i64 %indvars.iv18, !dbg !3391
  %11 = bitcast %struct.lambda_loop_s** %arrayidx15 to i8**, !dbg !3392
  store i8* %call13, i8** %11, align 8, !dbg !3392
  %arrayidx17 = getelementptr inbounds i32*, i32** %call8, i64 %indvars.iv18, !dbg !3393
  %12 = load i32*, i32** %arrayidx17, align 8, !dbg !3393
  %13 = trunc i64 %indvars.iv18 to i32, !dbg !3394
  %call18 = tail call fastcc i32 @lambda_vector_gcd(i32* %12, i32 %13) #7, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %call18, metadata !3340, metadata !DIExpression()), !dbg !3353
  %call19 = tail call fastcc i32 @gcd(i32 %call18, i32 %call3) #7, !dbg !3395
  call void @llvm.dbg.value(metadata i32 %call19, metadata !3340, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 0, metadata !3339, metadata !DIExpression()), !dbg !3353
  br label %for.cond20, !dbg !3396

for.cond20:                                       ; preds = %for.body22, %for.body12
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %for.body22 ], [ 0, %for.body12 ], !dbg !3398
  call void @llvm.dbg.value(metadata i64 %indvars.iv14, metadata !3339, metadata !DIExpression()), !dbg !3353
  %exitcond17 = icmp eq i64 %indvars.iv14, %indvars.iv18, !dbg !3399
  br i1 %exitcond17, label %for.end33, label %for.body22, !dbg !3401

for.body22:                                       ; preds = %for.cond20
  %14 = load i32*, i32** %arrayidx17, align 8, !dbg !3402
  %arrayidx26 = getelementptr inbounds i32, i32* %14, i64 %indvars.iv14, !dbg !3402
  %15 = load i32, i32* %arrayidx26, align 4, !dbg !3402
  %div = sdiv i32 %15, %call19, !dbg !3403
  store i32 %div, i32* %arrayidx26, align 4, !dbg !3404
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !3405
  call void @llvm.dbg.value(metadata i32 undef, metadata !3339, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond20, !dbg !3406, !llvm.loop !3407

for.end33:                                        ; preds = %for.cond20
  %call34 = tail call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %0, i32 %1, %struct.obstack* %lambda_obstack) #7, !dbg !3409
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call34, metadata !3349, metadata !DIExpression()), !dbg !3353
  %16 = load i32*, i32** %arrayidx17, align 8, !dbg !3410
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call34, i64 0, i32 0, !dbg !3411
  %17 = load i32*, i32** %coefficients, align 8, !dbg !3411
  tail call fastcc void @lambda_vector_copy(i32* %16, i32* %17, i32 %0) #7, !dbg !3412
  %div37 = sdiv i32 %call3, %call19, !dbg !3413
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call34, i64 0, i32 3, !dbg !3414
  store i32 %div37, i32* %denominator, align 8, !dbg !3415
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call34, i64 0, i32 1, !dbg !3416
  store i32 0, i32* %constant, align 8, !dbg !3417
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call34, i64 0, i32 2, !dbg !3418
  %18 = load i32*, i32** %invariant_coefficients, align 8, !dbg !3418
  tail call fastcc void @lambda_vector_clear(i32* %18, i32 %1) #7, !dbg !3419
  %linear_offset = getelementptr inbounds i8, i8* %call13, i64 16, !dbg !3420
  %19 = bitcast i8* %linear_offset to %struct.lambda_linear_expression_s**, !dbg !3420
  store %struct.lambda_linear_expression_s* %call34, %struct.lambda_linear_expression_s** %19, align 8, !dbg !3421
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1, !dbg !3422
  call void @llvm.dbg.value(metadata i32 undef, metadata !3338, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond10, !dbg !3423, !llvm.loop !3424

for.cond41:                                       ; preds = %for.cond41.preheader, %for.inc203
  %indvars.iv12 = phi i64 [ 0, %for.cond41.preheader ], [ %indvars.iv.next13, %for.inc203 ], !dbg !3426
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !3338, metadata !DIExpression()), !dbg !3353
  %cmp42 = icmp slt i64 %indvars.iv12, %9, !dbg !3427
  br i1 %cmp42, label %for.body43, label %for.cond206.preheader, !dbg !3389

for.cond206.preheader:                            ; preds = %for.cond41
  %20 = sext i32 %0 to i64, !dbg !3428
  br label %for.cond206, !dbg !3428

for.body43:                                       ; preds = %for.cond41
  %21 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops44, align 8, !dbg !3430
  %arrayidx46 = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %21, i64 %indvars.iv12, !dbg !3430
  %22 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx46, align 8, !dbg !3430
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %22, metadata !3347, metadata !DIExpression()), !dbg !3353
  %23 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !3431
  %arrayidx49 = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %23, i64 %indvars.iv12, !dbg !3431
  %24 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx49, align 8, !dbg !3431
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %24, metadata !3348, metadata !DIExpression()), !dbg !3353
  %25 = load i32**, i32*** %matrix, align 8, !dbg !3432
  %arrayidx52 = getelementptr inbounds i32*, i32** %25, i64 %indvars.iv12, !dbg !3432
  %26 = load i32*, i32** %arrayidx52, align 8, !dbg !3432
  %arrayidx54 = getelementptr inbounds i32, i32* %26, i64 %indvars.iv12, !dbg !3432
  %27 = load i32, i32* %arrayidx54, align 4, !dbg !3432
  %step = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %24, i64 0, i32 3, !dbg !3433
  store i32 %27, i32* %step, align 8, !dbg !3434
  %28 = load i32**, i32*** %matrix, align 8, !dbg !3435
  %arrayidx57 = getelementptr inbounds i32*, i32** %28, i64 %indvars.iv12, !dbg !3435
  %29 = load i32*, i32** %arrayidx57, align 8, !dbg !3435
  %arrayidx59 = getelementptr inbounds i32, i32* %29, i64 %indvars.iv12, !dbg !3435
  %30 = load i32, i32* %arrayidx59, align 4, !dbg !3435
  call void @llvm.dbg.value(metadata i32 %30, metadata !3342, metadata !DIExpression()), !dbg !3353
  %lower_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %22, i64 0, i32 0, !dbg !3436
  %lower_bound119 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %24, i64 0, i32 0, !dbg !3437
  %31 = bitcast %struct.lambda_loop_s* %24 to i64*, !dbg !3442
  br label %for.cond60, !dbg !3444

for.cond60:                                       ; preds = %for.inc126, %for.body43
  %auxillary_expr.0.in = phi %struct.lambda_linear_expression_s** [ %lower_bound, %for.body43 ], [ %next127, %for.inc126 ]
  %auxillary_expr.0 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %auxillary_expr.0.in, align 8, !dbg !3385
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %auxillary_expr.0, metadata !3350, metadata !DIExpression()), !dbg !3353
  %cmp61 = icmp eq %struct.lambda_linear_expression_s* %auxillary_expr.0, null, !dbg !3445
  br i1 %cmp61, label %for.end128, label %for.body62, !dbg !3446

for.body62:                                       ; preds = %for.cond60
  %call63 = tail call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %0, i32 %1, %struct.obstack* %lambda_obstack) #7, !dbg !3447
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call63, metadata !3351, metadata !DIExpression()), !dbg !3353
  %coefficients64 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.0, i64 0, i32 0, !dbg !3448
  %32 = load i32*, i32** %coefficients64, align 8, !dbg !3448
  %coefficients65 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call63, i64 0, i32 0, !dbg !3449
  %33 = load i32*, i32** %coefficients65, align 8, !dbg !3449
  tail call fastcc void @lambda_vector_matrix_mult(i32* %32, i32 %0, i32** %call, i32 %0, i32* %33) #7, !dbg !3450
  %34 = load i32*, i32** %coefficients65, align 8, !dbg !3451
  tail call fastcc void @lambda_vector_mult_const(i32* %34, i32* %34, i32 %0, i32 %30) #7, !dbg !3452
  %constant68 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.0, i64 0, i32 1, !dbg !3453
  %35 = load i32, i32* %constant68, align 8, !dbg !3453
  %mul = mul nsw i32 %35, %30, !dbg !3454
  %constant69 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call63, i64 0, i32 1, !dbg !3455
  store i32 %mul, i32* %constant69, align 8, !dbg !3456
  %invariant_coefficients70 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.0, i64 0, i32 2, !dbg !3457
  %36 = load i32*, i32** %invariant_coefficients70, align 8, !dbg !3457
  %invariant_coefficients71 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call63, i64 0, i32 2, !dbg !3458
  %37 = load i32*, i32** %invariant_coefficients71, align 8, !dbg !3458
  tail call fastcc void @lambda_vector_copy(i32* %36, i32* %37, i32 %1) #7, !dbg !3459
  %38 = load i32*, i32** %invariant_coefficients71, align 8, !dbg !3460
  tail call fastcc void @lambda_vector_mult_const(i32* %38, i32* %38, i32 %1, i32 %30) #7, !dbg !3461
  %denominator74 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.0, i64 0, i32 3, !dbg !3462
  %39 = load i32, i32* %denominator74, align 8, !dbg !3462
  %denominator75 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call63, i64 0, i32 3, !dbg !3463
  store i32 %39, i32* %denominator75, align 8, !dbg !3464
  %40 = load i32*, i32** %coefficients65, align 8, !dbg !3465
  %call77 = tail call fastcc zeroext i8 @lambda_vector_zerop(i32* %40, i32 %0) #7, !dbg !3467
  %tobool = icmp eq i8 %call77, 0, !dbg !3467
  br i1 %tobool, label %if.then, label %if.end, !dbg !3468

if.then:                                          ; preds = %for.body62
  %41 = load i32, i32* %constant69, align 8, !dbg !3469
  %mul79 = mul nsw i32 %41, %call3, !dbg !3471
  store i32 %mul79, i32* %constant69, align 8, !dbg !3472
  %42 = load i32*, i32** %invariant_coefficients71, align 8, !dbg !3473
  tail call fastcc void @lambda_vector_mult_const(i32* %42, i32* %42, i32 %1, i32 %call3) #7, !dbg !3474
  %43 = load i32, i32* %denominator75, align 8, !dbg !3475
  %mul84 = mul nsw i32 %43, %call3, !dbg !3476
  store i32 %mul84, i32* %denominator75, align 8, !dbg !3477
  br label %if.end, !dbg !3478

if.end:                                           ; preds = %for.body62, %if.then
  %44 = load i32*, i32** %coefficients65, align 8, !dbg !3479
  %call87 = tail call fastcc i32 @lambda_vector_gcd(i32* %44, i32 %0) #7, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %call87, metadata !3340, metadata !DIExpression()), !dbg !3353
  %45 = load i32*, i32** %invariant_coefficients71, align 8, !dbg !3481
  %call89 = tail call fastcc i32 @lambda_vector_gcd(i32* %45, i32 %1) #7, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %call89, metadata !3341, metadata !DIExpression()), !dbg !3353
  %call90 = tail call fastcc i32 @gcd(i32 %call87, i32 %call89) #7, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %call90, metadata !3340, metadata !DIExpression()), !dbg !3353
  %46 = load i32, i32* %constant69, align 8, !dbg !3484
  %call92 = tail call fastcc i32 @gcd(i32 %call90, i32 %46) #7, !dbg !3485
  call void @llvm.dbg.value(metadata i32 %call92, metadata !3340, metadata !DIExpression()), !dbg !3353
  %47 = load i32, i32* %denominator75, align 8, !dbg !3486
  %call94 = tail call fastcc i32 @gcd(i32 %call92, i32 %47) #7, !dbg !3487
  call void @llvm.dbg.value(metadata i32 %call94, metadata !3340, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 0, metadata !3339, metadata !DIExpression()), !dbg !3353
  %wide.trip.count = zext i32 %0 to i64, !dbg !3488
  br label %for.cond95, !dbg !3491

for.cond95:                                       ; preds = %for.body97, %if.end
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.body97 ], [ 0, %if.end ], !dbg !3492
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3339, metadata !DIExpression()), !dbg !3353
  %exitcond = icmp eq i64 %indvars.iv2, %wide.trip.count, !dbg !3488
  br i1 %exitcond, label %for.cond105.preheader, label %for.body97, !dbg !3493

for.cond105.preheader:                            ; preds = %for.cond95
  br label %for.cond105, !dbg !3494

for.body97:                                       ; preds = %for.cond95
  %48 = load i32*, i32** %coefficients65, align 8, !dbg !3496
  %arrayidx100 = getelementptr inbounds i32, i32* %48, i64 %indvars.iv2, !dbg !3496
  %49 = load i32, i32* %arrayidx100, align 4, !dbg !3497
  %div101 = sdiv i32 %49, %call94, !dbg !3497
  store i32 %div101, i32* %arrayidx100, align 4, !dbg !3497
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !3498
  call void @llvm.dbg.value(metadata i32 undef, metadata !3339, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond95, !dbg !3499, !llvm.loop !3500

for.cond105:                                      ; preds = %for.cond105.preheader, %for.body107
  %indvars.iv4 = phi i64 [ 0, %for.cond105.preheader ], [ %indvars.iv.next5, %for.body107 ], !dbg !3502
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !3339, metadata !DIExpression()), !dbg !3353
  %cmp106 = icmp slt i64 %indvars.iv4, %7, !dbg !3503
  br i1 %cmp106, label %for.body107, label %for.end114, !dbg !3494

for.body107:                                      ; preds = %for.cond105
  %50 = load i32*, i32** %invariant_coefficients71, align 8, !dbg !3505
  %arrayidx110 = getelementptr inbounds i32, i32* %50, i64 %indvars.iv4, !dbg !3505
  %51 = load i32, i32* %arrayidx110, align 4, !dbg !3506
  %div111 = sdiv i32 %51, %call94, !dbg !3506
  store i32 %div111, i32* %arrayidx110, align 4, !dbg !3506
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !3507
  call void @llvm.dbg.value(metadata i32 undef, metadata !3339, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond105, !dbg !3508, !llvm.loop !3509

for.end114:                                       ; preds = %for.cond105
  %52 = load i32, i32* %constant69, align 8, !dbg !3511
  %div116 = sdiv i32 %52, %call94, !dbg !3511
  store i32 %div116, i32* %constant69, align 8, !dbg !3511
  %53 = load i32, i32* %denominator75, align 8, !dbg !3512
  %div118 = sdiv i32 %53, %call94, !dbg !3512
  store i32 %div118, i32* %denominator75, align 8, !dbg !3512
  %54 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %lower_bound119, align 8, !dbg !3513
  %call120 = tail call fastcc zeroext i8 @lle_equal(%struct.lambda_linear_expression_s* %54, %struct.lambda_linear_expression_s* %call63, i32 %0, i32 %1) #7, !dbg !3514
  %tobool121 = icmp eq i8 %call120, 0, !dbg !3514
  br i1 %tobool121, label %if.then122, label %for.inc126, !dbg !3515

if.then122:                                       ; preds = %for.end114
  %55 = load i64, i64* %31, align 8, !dbg !3516
  %next = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call63, i64 0, i32 4, !dbg !3517
  %56 = bitcast %struct.lambda_linear_expression_s** %next to i64*, !dbg !3518
  store i64 %55, i64* %56, align 8, !dbg !3518
  store %struct.lambda_linear_expression_s* %call63, %struct.lambda_linear_expression_s** %lower_bound119, align 8, !dbg !3519
  br label %for.inc126, !dbg !3520

for.inc126:                                       ; preds = %for.end114, %if.then122
  %next127 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.0, i64 0, i32 4, !dbg !3521
  br label %for.cond60, !dbg !3522, !llvm.loop !3523

for.end128:                                       ; preds = %for.cond60
  %upper_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %22, i64 0, i32 1, !dbg !3525
  %upper_bound192 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %24, i64 0, i32 1, !dbg !3526
  %57 = bitcast %struct.lambda_linear_expression_s** %upper_bound192 to i64*, !dbg !3531
  br label %for.cond129, !dbg !3533

for.cond129:                                      ; preds = %for.inc200, %for.end128
  %auxillary_expr.1.in = phi %struct.lambda_linear_expression_s** [ %upper_bound, %for.end128 ], [ %next201, %for.inc200 ]
  %auxillary_expr.1 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %auxillary_expr.1.in, align 8, !dbg !3385
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %auxillary_expr.1, metadata !3350, metadata !DIExpression()), !dbg !3353
  %cmp130 = icmp eq %struct.lambda_linear_expression_s* %auxillary_expr.1, null, !dbg !3534
  br i1 %cmp130, label %for.inc203, label %for.body131, !dbg !3535

for.body131:                                      ; preds = %for.cond129
  %call132 = tail call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %0, i32 %1, %struct.obstack* %lambda_obstack) #7, !dbg !3536
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call132, metadata !3351, metadata !DIExpression()), !dbg !3353
  %coefficients133 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.1, i64 0, i32 0, !dbg !3537
  %58 = load i32*, i32** %coefficients133, align 8, !dbg !3537
  %coefficients134 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call132, i64 0, i32 0, !dbg !3538
  %59 = load i32*, i32** %coefficients134, align 8, !dbg !3538
  tail call fastcc void @lambda_vector_matrix_mult(i32* %58, i32 %0, i32** %call, i32 %0, i32* %59) #7, !dbg !3539
  %60 = load i32*, i32** %coefficients134, align 8, !dbg !3540
  tail call fastcc void @lambda_vector_mult_const(i32* %60, i32* %60, i32 %0, i32 %30) #7, !dbg !3541
  %constant137 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.1, i64 0, i32 1, !dbg !3542
  %61 = load i32, i32* %constant137, align 8, !dbg !3542
  %mul138 = mul nsw i32 %61, %30, !dbg !3543
  %constant139 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call132, i64 0, i32 1, !dbg !3544
  store i32 %mul138, i32* %constant139, align 8, !dbg !3545
  %invariant_coefficients140 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.1, i64 0, i32 2, !dbg !3546
  %62 = load i32*, i32** %invariant_coefficients140, align 8, !dbg !3546
  %invariant_coefficients141 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call132, i64 0, i32 2, !dbg !3547
  %63 = load i32*, i32** %invariant_coefficients141, align 8, !dbg !3547
  tail call fastcc void @lambda_vector_copy(i32* %62, i32* %63, i32 %1) #7, !dbg !3548
  %64 = load i32*, i32** %invariant_coefficients141, align 8, !dbg !3549
  tail call fastcc void @lambda_vector_mult_const(i32* %64, i32* %64, i32 %1, i32 %30) #7, !dbg !3550
  %denominator144 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.1, i64 0, i32 3, !dbg !3551
  %65 = load i32, i32* %denominator144, align 8, !dbg !3551
  %denominator145 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call132, i64 0, i32 3, !dbg !3552
  store i32 %65, i32* %denominator145, align 8, !dbg !3553
  %66 = load i32*, i32** %coefficients134, align 8, !dbg !3554
  %call147 = tail call fastcc zeroext i8 @lambda_vector_zerop(i32* %66, i32 %0) #7, !dbg !3556
  %tobool148 = icmp eq i8 %call147, 0, !dbg !3556
  br i1 %tobool148, label %if.then149, label %if.end158, !dbg !3557

if.then149:                                       ; preds = %for.body131
  %67 = load i32, i32* %constant139, align 8, !dbg !3558
  %mul151 = mul nsw i32 %67, %call3, !dbg !3560
  store i32 %mul151, i32* %constant139, align 8, !dbg !3561
  %68 = load i32*, i32** %invariant_coefficients141, align 8, !dbg !3562
  tail call fastcc void @lambda_vector_mult_const(i32* %68, i32* %68, i32 %1, i32 %call3) #7, !dbg !3563
  %69 = load i32, i32* %denominator145, align 8, !dbg !3564
  %mul156 = mul nsw i32 %69, %call3, !dbg !3565
  store i32 %mul156, i32* %denominator145, align 8, !dbg !3566
  br label %if.end158, !dbg !3567

if.end158:                                        ; preds = %for.body131, %if.then149
  %70 = load i32*, i32** %coefficients134, align 8, !dbg !3568
  %call160 = tail call fastcc i32 @lambda_vector_gcd(i32* %70, i32 %0) #7, !dbg !3569
  call void @llvm.dbg.value(metadata i32 %call160, metadata !3340, metadata !DIExpression()), !dbg !3353
  %71 = load i32*, i32** %invariant_coefficients141, align 8, !dbg !3570
  %call162 = tail call fastcc i32 @lambda_vector_gcd(i32* %71, i32 %1) #7, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %call162, metadata !3341, metadata !DIExpression()), !dbg !3353
  %call163 = tail call fastcc i32 @gcd(i32 %call160, i32 %call162) #7, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %call163, metadata !3340, metadata !DIExpression()), !dbg !3353
  %72 = load i32, i32* %constant139, align 8, !dbg !3573
  %call165 = tail call fastcc i32 @gcd(i32 %call163, i32 %72) #7, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %call165, metadata !3340, metadata !DIExpression()), !dbg !3353
  %73 = load i32, i32* %denominator145, align 8, !dbg !3575
  %call167 = tail call fastcc i32 @gcd(i32 %call165, i32 %73) #7, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %call167, metadata !3340, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 0, metadata !3339, metadata !DIExpression()), !dbg !3353
  %wide.trip.count8 = zext i32 %0 to i64, !dbg !3577
  br label %for.cond168, !dbg !3580

for.cond168:                                      ; preds = %for.body170, %if.end158
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.body170 ], [ 0, %if.end158 ], !dbg !3581
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !3339, metadata !DIExpression()), !dbg !3353
  %exitcond9 = icmp eq i64 %indvars.iv6, %wide.trip.count8, !dbg !3577
  br i1 %exitcond9, label %for.cond178.preheader, label %for.body170, !dbg !3582

for.cond178.preheader:                            ; preds = %for.cond168
  br label %for.cond178, !dbg !3583

for.body170:                                      ; preds = %for.cond168
  %74 = load i32*, i32** %coefficients134, align 8, !dbg !3585
  %arrayidx173 = getelementptr inbounds i32, i32* %74, i64 %indvars.iv6, !dbg !3585
  %75 = load i32, i32* %arrayidx173, align 4, !dbg !3586
  %div174 = sdiv i32 %75, %call167, !dbg !3586
  store i32 %div174, i32* %arrayidx173, align 4, !dbg !3586
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !3587
  call void @llvm.dbg.value(metadata i32 undef, metadata !3339, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond168, !dbg !3588, !llvm.loop !3589

for.cond178:                                      ; preds = %for.cond178.preheader, %for.body180
  %indvars.iv10 = phi i64 [ 0, %for.cond178.preheader ], [ %indvars.iv.next11, %for.body180 ], !dbg !3591
  call void @llvm.dbg.value(metadata i64 %indvars.iv10, metadata !3339, metadata !DIExpression()), !dbg !3353
  %cmp179 = icmp slt i64 %indvars.iv10, %8, !dbg !3592
  br i1 %cmp179, label %for.body180, label %for.end187, !dbg !3583

for.body180:                                      ; preds = %for.cond178
  %76 = load i32*, i32** %invariant_coefficients141, align 8, !dbg !3594
  %arrayidx183 = getelementptr inbounds i32, i32* %76, i64 %indvars.iv10, !dbg !3594
  %77 = load i32, i32* %arrayidx183, align 4, !dbg !3595
  %div184 = sdiv i32 %77, %call167, !dbg !3595
  store i32 %div184, i32* %arrayidx183, align 4, !dbg !3595
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !3596
  call void @llvm.dbg.value(metadata i32 undef, metadata !3339, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond178, !dbg !3597, !llvm.loop !3598

for.end187:                                       ; preds = %for.cond178
  %78 = load i32, i32* %constant139, align 8, !dbg !3600
  %div189 = sdiv i32 %78, %call167, !dbg !3600
  store i32 %div189, i32* %constant139, align 8, !dbg !3600
  %79 = load i32, i32* %denominator145, align 8, !dbg !3601
  %div191 = sdiv i32 %79, %call167, !dbg !3601
  store i32 %div191, i32* %denominator145, align 8, !dbg !3601
  %80 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %upper_bound192, align 8, !dbg !3602
  %call193 = tail call fastcc zeroext i8 @lle_equal(%struct.lambda_linear_expression_s* %80, %struct.lambda_linear_expression_s* %call132, i32 %0, i32 %1) #7, !dbg !3603
  %tobool194 = icmp eq i8 %call193, 0, !dbg !3603
  br i1 %tobool194, label %if.then195, label %for.inc200, !dbg !3604

if.then195:                                       ; preds = %for.end187
  %81 = load i64, i64* %57, align 8, !dbg !3605
  %next197 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call132, i64 0, i32 4, !dbg !3606
  %82 = bitcast %struct.lambda_linear_expression_s** %next197 to i64*, !dbg !3607
  store i64 %81, i64* %82, align 8, !dbg !3607
  store %struct.lambda_linear_expression_s* %call132, %struct.lambda_linear_expression_s** %upper_bound192, align 8, !dbg !3608
  br label %for.inc200, !dbg !3609

for.inc200:                                       ; preds = %for.end187, %if.then195
  %next201 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %auxillary_expr.1, i64 0, i32 4, !dbg !3610
  br label %for.cond129, !dbg !3611, !llvm.loop !3612

for.inc203:                                       ; preds = %for.cond129
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !3614
  call void @llvm.dbg.value(metadata i32 undef, metadata !3338, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond41, !dbg !3615, !llvm.loop !3616

for.cond206:                                      ; preds = %for.cond206.preheader, %for.inc223
  %indvars.iv = phi i64 [ 0, %for.cond206.preheader ], [ %indvars.iv.next, %for.inc223 ], !dbg !3618
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3338, metadata !DIExpression()), !dbg !3353
  %cmp207 = icmp slt i64 %indvars.iv, %20, !dbg !3619
  br i1 %cmp207, label %for.body208, label %for.end225, !dbg !3428

for.body208:                                      ; preds = %for.cond206
  %83 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !3621
  %arrayidx211 = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %83, i64 %indvars.iv, !dbg !3621
  %84 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx211, align 8, !dbg !3621
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %84, metadata !3348, metadata !DIExpression()), !dbg !3353
  %arrayidx213 = getelementptr inbounds i32, i32* %stepsigns, i64 %indvars.iv, !dbg !3623
  %85 = load i32, i32* %arrayidx213, align 4, !dbg !3623
  %cmp214 = icmp slt i32 %85, 0, !dbg !3625
  br i1 %cmp214, label %if.then215, label %for.inc223, !dbg !3626

if.then215:                                       ; preds = %for.body208
  %step216 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %84, i64 0, i32 3, !dbg !3627
  %86 = load i32, i32* %step216, align 8, !dbg !3629
  %mul217 = sub nsw i32 0, %86, !dbg !3629
  store i32 %mul217, i32* %step216, align 8, !dbg !3629
  %87 = bitcast %struct.lambda_loop_s* %84 to i64*, !dbg !3630
  %88 = load i64, i64* %87, align 8, !dbg !3630
  %upper_bound219 = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %84, i64 0, i32 1, !dbg !3631
  %89 = bitcast %struct.lambda_linear_expression_s** %upper_bound219 to i64*, !dbg !3631
  %90 = load i64, i64* %89, align 8, !dbg !3631
  store i64 %90, i64* %87, align 8, !dbg !3632
  store i64 %88, i64* %89, align 8, !dbg !3633
  br label %for.inc223, !dbg !3634

for.inc223:                                       ; preds = %for.body208, %if.then215
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3635
  call void @llvm.dbg.value(metadata i32 undef, metadata !3338, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3353
  br label %for.cond206, !dbg !3636, !llvm.loop !3637

for.end225:                                       ; preds = %for.cond206
  ret %struct.lambda_loopnest_s* %call9, !dbg !3639
}

declare dso_local i32** @lambda_matrix_new(i32, i32) local_unnamed_addr #2

declare dso_local void @lambda_matrix_vector_mult(i32**, i32, i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lambda_vector_zerop(i32* %vec1, i32 %size) unnamed_addr #0 !dbg !3640 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !3644, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata i32 %size, metadata !3645, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata i32 0, metadata !3646, metadata !DIExpression()), !dbg !3647
  %0 = sext i32 %size to i64, !dbg !3648
  br label %for.cond, !dbg !3648

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3650
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3646, metadata !DIExpression()), !dbg !3647
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !3651
  br i1 %cmp, label %for.body, label %cleanup, !dbg !3653

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %vec1, i64 %indvars.iv, !dbg !3654
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3654
  %cmp1 = icmp eq i32 %1, 0, !dbg !3656
  br i1 %cmp1, label %for.inc, label %cleanup, !dbg !3657

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3658
  call void @llvm.dbg.value(metadata i32 undef, metadata !3646, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3647
  br label %for.cond, !dbg !3659, !llvm.loop !3660

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !3647
  ret i8 %retval.0, !dbg !3662
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @find_induction_var_from_exit_cond(%struct.loop* %loop) local_unnamed_addr #5 !dbg !3663 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3667, metadata !DIExpression()), !dbg !3672
  %call = tail call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* %loop) #6, !dbg !3673
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3668, metadata !DIExpression()), !dbg !3672
  %cmp = icmp eq %union.gimple_statement_d* %call, null, !dbg !3674
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3676

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !3677
  %cmp2 = icmp eq i32 %call1, 1, !dbg !3679
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !3680

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* nonnull %call) #7, !dbg !3681
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3670, metadata !DIExpression()), !dbg !3672
  %call6 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* nonnull %call) #7, !dbg !3682
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !3671, metadata !DIExpression()), !dbg !3672
  %call7 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* %call5) #6, !dbg !3683
  %tobool = icmp eq i8 %call7, 0, !dbg !3683
  br i1 %tobool, label %if.else, label %if.end14, !dbg !3685

if.else:                                          ; preds = %if.end4
  %call9 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* %call6) #6, !dbg !3686
  %tobool10 = icmp eq i8 %call9, 0, !dbg !3686
  br i1 %tobool10, label %cleanup, label %if.end14, !dbg !3688

if.end14:                                         ; preds = %if.else, %if.end4
  %ivarop.0 = phi %union.tree_node* [ %call6, %if.end4 ], [ %call5, %if.else ], !dbg !3689
  call void @llvm.dbg.value(metadata %union.tree_node* %ivarop.0, metadata !3669, metadata !DIExpression()), !dbg !3672
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ivarop.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3690
  %bf.load = load i64, i64* %0, align 8, !dbg !3690
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3692
  %cmp15 = icmp eq i64 %bf.cast1, 141, !dbg !3692
  %.ivarop.0 = select i1 %cmp15, %union.tree_node* %ivarop.0, %union.tree_node* null, !dbg !3672
  br label %cleanup, !dbg !3672

cleanup:                                          ; preds = %if.else, %if.end, %if.end14, %entry
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ null, %if.end ], [ null, %if.else ], [ %.ivarop.0, %if.end14 ], !dbg !3672
  ret %union.tree_node* %retval.0, !dbg !3693
}

declare dso_local %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3694 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3699, metadata !DIExpression()), !dbg !3700
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3701
  %bf.load = load i32, i32* %0, align 8, !dbg !3701
  %bf.clear = and i32 %bf.load, 255, !dbg !3701
  ret i32 %bf.clear, !dbg !3702
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3703 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3707, metadata !DIExpression()), !dbg !3708
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !3709
  ret %union.tree_node* %call, !dbg !3710
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3711 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3713, metadata !DIExpression()), !dbg !3714
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !3715
  ret %union.tree_node* %call, !dbg !3716
}

declare dso_local zeroext i8 @expr_invariant_in_loop_p(%struct.loop*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.lambda_loopnest_s* @gcc_loopnest_to_lambda_loopnest(%struct.loop* %loop_nest, %struct.VEC_tree_heap** %inductionvars, %struct.VEC_tree_heap** %invariants, %struct.obstack* %lambda_obstack) local_unnamed_addr #5 !dbg !3717 {
entry:
  %loops = alloca %struct.VEC_lambda_loop_heap*, align 8
  %uboundvars = alloca %struct.VEC_tree_heap*, align 8
  %lboundvars = alloca %struct.VEC_tree_heap*, align 8
  %steps = alloca %struct.VEC_int_heap*, align 8
  %newloop = alloca %struct.lambda_loop_s*, align 8
  %inductionvar = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !3722, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %inductionvars, metadata !3723, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %invariants, metadata !3724, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !3725, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* null, metadata !3726, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !3727, metadata !DIExpression()), !dbg !3738
  %call = tail call fastcc i32 @depth_of_nest(%struct.loop* %loop_nest) #7, !dbg !3739
  call void @llvm.dbg.value(metadata i32 %call, metadata !3728, metadata !DIExpression()), !dbg !3738
  %0 = bitcast %struct.VEC_lambda_loop_heap** %loops to i8*, !dbg !3740
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3740
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_heap* null, metadata !3730, metadata !DIExpression()), !dbg !3738
  store %struct.VEC_lambda_loop_heap* null, %struct.VEC_lambda_loop_heap** %loops, align 8, !dbg !3741
  %1 = bitcast %struct.VEC_tree_heap** %uboundvars to i8*, !dbg !3742
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3742
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3731, metadata !DIExpression()), !dbg !3738
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %uboundvars, align 8, !dbg !3743
  %2 = bitcast %struct.VEC_tree_heap** %lboundvars to i8*, !dbg !3744
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3744
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3732, metadata !DIExpression()), !dbg !3738
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %lboundvars, align 8, !dbg !3745
  %3 = bitcast %struct.VEC_int_heap** %steps to i8*, !dbg !3746
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3746
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* null, metadata !3733, metadata !DIExpression()), !dbg !3738
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %steps, align 8, !dbg !3747
  %4 = bitcast %struct.lambda_loop_s** %newloop to i8*, !dbg !3748
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3748
  %5 = bitcast %union.tree_node** %inductionvar to i8*, !dbg !3749
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3749
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3735, metadata !DIExpression()), !dbg !3738
  store %union.tree_node* null, %union.tree_node** %inductionvar, align 8, !dbg !3750
  %call1 = tail call zeroext i8 @perfect_nest_p(%struct.loop* %loop_nest) #7, !dbg !3751
  call void @llvm.dbg.value(metadata i8 %call1, metadata !3736, metadata !DIExpression()), !dbg !3738
  %tobool = icmp eq i8 %call1, 0, !dbg !3752
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3754

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @can_convert_to_perfect_nest(%struct.loop* %loop_nest) #7, !dbg !3755
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3755
  br i1 %tobool3, label %fail, label %if.end, !dbg !3756

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %while.cond, !dbg !3757

while.cond:                                       ; preds = %if.end8, %if.end
  %temp.0 = phi %struct.loop* [ %loop_nest, %if.end ], [ %9, %if.end8 ], !dbg !3738
  call void @llvm.dbg.value(metadata %struct.loop* %temp.0, metadata !3727, metadata !DIExpression()), !dbg !3738
  %tobool4 = icmp eq %struct.loop* %temp.0, null, !dbg !3757
  br i1 %tobool4, label %while.end, label %while.body, !dbg !3757

while.body:                                       ; preds = %while.cond
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inductionvars, align 8, !dbg !3758
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %uboundvars, metadata !3731, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %lboundvars, metadata !3732, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %steps, metadata !3733, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  call void @llvm.dbg.value(metadata %union.tree_node** %inductionvar, metadata !3735, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  %call5 = call fastcc %struct.lambda_loop_s* @gcc_loop_to_lambda_loop(%struct.loop* nonnull %temp.0, i32 %call, %struct.VEC_tree_heap** %invariants, %union.tree_node** nonnull %inductionvar, %struct.VEC_tree_heap* %6, %struct.VEC_tree_heap** nonnull %lboundvars, %struct.VEC_tree_heap** nonnull %uboundvars, %struct.VEC_int_heap** nonnull %steps, %struct.obstack* %lambda_obstack) #7, !dbg !3760
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %call5, metadata !3734, metadata !DIExpression()), !dbg !3738
  store %struct.lambda_loop_s* %call5, %struct.lambda_loop_s** %newloop, align 8, !dbg !3761
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %call5, metadata !3734, metadata !DIExpression()), !dbg !3738
  %tobool6 = icmp eq %struct.lambda_loop_s* %call5, null, !dbg !3762
  br i1 %tobool6, label %fail.loopexit1, label %if.end8, !dbg !3764

if.end8:                                          ; preds = %while.body
  %7 = load %union.tree_node*, %union.tree_node** %inductionvar, align 8, !dbg !3765
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3735, metadata !DIExpression()), !dbg !3738
  %call9 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %inductionvars, %union.tree_node* %7) #7, !dbg !3765
  %8 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %newloop, align 8, !dbg !3766
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %8, metadata !3734, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_heap** %loops, metadata !3730, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  %call10 = call fastcc %struct.lambda_loop_s** @VEC_lambda_loop_heap_safe_push(%struct.VEC_lambda_loop_heap** nonnull %loops, %struct.lambda_loop_s* %8) #7, !dbg !3766
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %temp.0, i64 0, i32 8, !dbg !3767
  %9 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3767
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !3727, metadata !DIExpression()), !dbg !3738
  br label %while.cond, !dbg !3757, !llvm.loop !3768

while.end:                                        ; preds = %while.cond
  br i1 %tobool, label %if.then12, label %if.end25, !dbg !3770

if.then12:                                        ; preds = %while.end
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %lboundvars, align 8, !dbg !3771
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !3732, metadata !DIExpression()), !dbg !3738
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %uboundvars, align 8, !dbg !3775
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %11, metadata !3731, metadata !DIExpression()), !dbg !3738
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %steps, align 8, !dbg !3776
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %12, metadata !3733, metadata !DIExpression()), !dbg !3738
  %13 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inductionvars, align 8, !dbg !3777
  %call13 = call fastcc zeroext i8 @perfect_nestify(%struct.loop* %loop_nest, %struct.VEC_tree_heap* %10, %struct.VEC_tree_heap* %11, %struct.VEC_int_heap* %12, %struct.VEC_tree_heap* %13) #7, !dbg !3778
  %tobool14 = icmp eq i8 %call13, 0, !dbg !3778
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3779
  %tobool20 = icmp ne %struct._IO_FILE* %14, null, !dbg !3779
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !3780

if.then15:                                        ; preds = %if.then12
  br i1 %tobool20, label %if.then17, label %fail, !dbg !3781

if.then17:                                        ; preds = %if.then15
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3783
  br label %fail, !dbg !3783

if.else:                                          ; preds = %if.then12
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !3785

if.then21:                                        ; preds = %if.else
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3786
  br label %if.end25, !dbg !3786

if.end25:                                         ; preds = %while.end, %if.then21, %if.else
  %mul = shl nsw i32 %call, 1, !dbg !3788
  %call26 = call %struct.lambda_loopnest_s* @lambda_loopnest_new(i32 %call, i32 %mul, %struct.obstack* %lambda_obstack) #7, !dbg !3789
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %call26, metadata !3726, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata i64 0, metadata !3729, metadata !DIExpression()), !dbg !3738
  %15 = bitcast %struct.lambda_loop_s** %newloop to i64*, !dbg !3790
  %loops30 = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %call26, i64 0, i32 0, !dbg !3790
  br label %for.cond, !dbg !3793

for.cond:                                         ; preds = %for.body, %if.end25
  %i.0 = phi i64 [ 0, %if.end25 ], [ %inc, %for.body ], !dbg !3794
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3729, metadata !DIExpression()), !dbg !3738
  %16 = load %struct.VEC_lambda_loop_heap*, %struct.VEC_lambda_loop_heap** %loops, align 8, !dbg !3795
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_heap* %16, metadata !3730, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_heap* %16, metadata !3730, metadata !DIExpression()), !dbg !3738
  %base = getelementptr inbounds %struct.VEC_lambda_loop_heap, %struct.VEC_lambda_loop_heap* %16, i64 0, i32 0, !dbg !3795
  %conv = trunc i64 %i.0 to i32, !dbg !3795
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s** %newloop, metadata !3734, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  %call28 = call fastcc i32 @VEC_lambda_loop_base_iterate(%struct.VEC_lambda_loop_base* %base, i32 %conv, %struct.lambda_loop_s** nonnull %newloop) #7, !dbg !3795
  %tobool29 = icmp eq i32 %call28, 0, !dbg !3796
  br i1 %tobool29, label %fail.loopexit, label %for.body, !dbg !3796

for.body:                                         ; preds = %for.cond
  %17 = load i64, i64* %15, align 8, !dbg !3797
  %18 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops30, align 8, !dbg !3798
  %arrayidx = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %18, i64 %i.0, !dbg !3798
  %19 = bitcast %struct.lambda_loop_s** %arrayidx to i64*, !dbg !3799
  store i64 %17, i64* %19, align 8, !dbg !3799
  %inc = add i64 %i.0, 1, !dbg !3800
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3729, metadata !DIExpression()), !dbg !3738
  br label %for.cond, !dbg !3801, !llvm.loop !3802

fail.loopexit:                                    ; preds = %for.cond
  br label %fail, !dbg !3804

fail.loopexit1:                                   ; preds = %while.body
  br label %fail, !dbg !3804

fail:                                             ; preds = %fail.loopexit1, %fail.loopexit, %land.lhs.true, %if.then15, %if.then17
  %ret.0 = phi %struct.lambda_loopnest_s* [ null, %land.lhs.true ], [ null, %if.then17 ], [ null, %if.then15 ], [ %call26, %fail.loopexit ], [ null, %fail.loopexit1 ], !dbg !3738
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %ret.0, metadata !3726, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.label(metadata !3737), !dbg !3805
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_heap** %loops, metadata !3730, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  call fastcc void @VEC_lambda_loop_heap_free(%struct.VEC_lambda_loop_heap** nonnull %loops) #7, !dbg !3804
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %uboundvars, metadata !3731, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %uboundvars) #7, !dbg !3806
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %lboundvars, metadata !3732, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %lboundvars) #7, !dbg !3807
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %steps, metadata !3733, metadata !DIExpression(DW_OP_deref)), !dbg !3738
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %steps) #7, !dbg !3808
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3809
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3809
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3809
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3809
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3809
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3809
  ret %struct.lambda_loopnest_s* %ret.0, !dbg !3810
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @depth_of_nest(%struct.loop* %nest) unnamed_addr #5 !dbg !3811 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %nest, metadata !3815, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i64 0, metadata !3816, metadata !DIExpression()), !dbg !3817
  br label %while.cond, !dbg !3818

while.cond:                                       ; preds = %while.body, %entry
  %depth.0 = phi i64 [ 0, %entry ], [ %inc, %while.body ], !dbg !3817
  %nest.addr.0 = phi %struct.loop* [ %nest, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %struct.loop* %nest.addr.0, metadata !3815, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i64 %depth.0, metadata !3816, metadata !DIExpression()), !dbg !3817
  %tobool = icmp eq %struct.loop* %nest.addr.0, null, !dbg !3818
  br i1 %tobool, label %while.end, label %while.body, !dbg !3818

while.body:                                       ; preds = %while.cond
  %inc = add i64 %depth.0, 1, !dbg !3819
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3816, metadata !DIExpression()), !dbg !3817
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %nest.addr.0, i64 0, i32 8, !dbg !3821
  %0 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3821
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !3815, metadata !DIExpression()), !dbg !3817
  br label %while.cond, !dbg !3818, !llvm.loop !3822

while.end:                                        ; preds = %while.cond
  %depth.0.lcssa = phi i64 [ %depth.0, %while.cond ], !dbg !3817
  call void @llvm.dbg.value(metadata i64 %depth.0.lcssa, metadata !3816, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i64 %depth.0.lcssa, metadata !3816, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i64 %depth.0.lcssa, metadata !3816, metadata !DIExpression()), !dbg !3817
  %conv = trunc i64 %depth.0.lcssa to i32, !dbg !3824
  ret i32 %conv, !dbg !3825
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @perfect_nest_p(%struct.loop* %loop) local_unnamed_addr #5 !dbg !3826 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3830, metadata !DIExpression()), !dbg !3852
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !3853
  %0 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3853
  %tobool = icmp eq %struct.loop* %0, null, !dbg !3855
  br i1 %tobool, label %cleanup37, label %if.end, !dbg !3856

if.end:                                           ; preds = %entry
  %call = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* %loop) #6, !dbg !3857
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !3831, metadata !DIExpression()), !dbg !3852
  %call1 = tail call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* %loop) #6, !dbg !3858
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !3834, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i64 0, metadata !3833, metadata !DIExpression()), !dbg !3852
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3859
  %1 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !3860
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3861
  %3 = bitcast %struct.basic_block_def** %call to i8*, !dbg !3862
  br label %for.cond, !dbg !3863

for.cond:                                         ; preds = %for.inc33, %if.end
  %i.0 = phi i64 [ 0, %if.end ], [ %inc, %for.inc33 ], !dbg !3864
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3833, metadata !DIExpression()), !dbg !3852
  %4 = load i32, i32* %num_nodes, align 4, !dbg !3865
  %conv = zext i32 %4 to i64, !dbg !3866
  %cmp = icmp ult i64 %i.0, %conv, !dbg !3867
  br i1 %cmp, label %for.body, label %for.end34, !dbg !3868

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %i.0, !dbg !3869
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3869
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 3, !dbg !3870
  %6 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3870
  %cmp3 = icmp eq %struct.loop* %6, %loop, !dbg !3871
  br i1 %cmp3, label %if.then5, label %for.inc33, !dbg !3872

if.then5:                                         ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3873
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3874
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %5) #7, !dbg !3874
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !3874
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3874
  br label %for.cond7, !dbg !3875

for.cond7:                                        ; preds = %for.inc, %if.then5
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !3835, metadata !DIExpression(DW_OP_deref)), !dbg !3860
  %call8 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !3876
  %tobool9 = icmp eq i8 %call8, 0, !dbg !3877
  br i1 %tobool9, label %for.body10, label %cleanup30, !dbg !3878

for.body10:                                       ; preds = %for.cond7
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !3835, metadata !DIExpression(DW_OP_deref)), !dbg !3860
  %call11 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !3879
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !3847, metadata !DIExpression()), !dbg !3862
  %call12 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call11) #7, !dbg !3880
  %cmp13 = icmp eq i32 %call12, 1, !dbg !3882
  %cmp15 = icmp ne %union.gimple_statement_d* %call1, %call11, !dbg !3883
  %or.cond = and i1 %cmp13, %cmp15, !dbg !3884
  br i1 %or.cond, label %non_perfectly_nested, label %if.end18, !dbg !3884

if.end18:                                         ; preds = %for.body10
  %cmp19 = icmp eq %union.gimple_statement_d* %call11, %call1, !dbg !3885
  br i1 %cmp19, label %cleanup, label %lor.lhs.false, !dbg !3887

lor.lhs.false:                                    ; preds = %if.end18
  %call21 = call fastcc zeroext i8 @not_interesting_stmt(%union.gimple_statement_d* %call11) #7, !dbg !3888
  %tobool23 = icmp eq i8 %call21, 0, !dbg !3888
  br i1 %tobool23, label %lor.lhs.false24, label %cleanup, !dbg !3889

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %call25 = call fastcc zeroext i8 @stmt_is_bumper_for_loop(%struct.loop* %loop, %union.gimple_statement_d* %call11) #7, !dbg !3890
  %tobool27 = icmp eq i8 %call25, 0, !dbg !3890
  br i1 %tobool27, label %non_perfectly_nested, label %cleanup, !dbg !3891

non_perfectly_nested:                             ; preds = %lor.lhs.false24, %for.body10
  call void @llvm.dbg.label(metadata !3851), !dbg !3892
  call void @free(i8* %3) #6, !dbg !3893
  br label %cleanup, !dbg !3894

cleanup:                                          ; preds = %lor.lhs.false24, %lor.lhs.false, %if.end18, %non_perfectly_nested
  %cleanup.dest.slot.0 = phi i1 [ false, %non_perfectly_nested ], [ true, %lor.lhs.false24 ], [ true, %lor.lhs.false ], [ true, %if.end18 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup30

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !3835, metadata !DIExpression(DW_OP_deref)), !dbg !3860
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !3895
  br label %for.cond7, !dbg !3896, !llvm.loop !3897

cleanup30:                                        ; preds = %for.cond7, %cleanup
  %cleanup.dest.slot.1 = phi i1 [ false, %cleanup ], [ true, %for.cond7 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3899
  br i1 %cleanup.dest.slot.1, label %for.inc33, label %cleanup37.loopexit

for.inc33:                                        ; preds = %for.body, %cleanup30
  %inc = add nuw nsw i64 %i.0, 1, !dbg !3900
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3833, metadata !DIExpression()), !dbg !3852
  br label %for.cond, !dbg !3901, !llvm.loop !3902

for.end34:                                        ; preds = %for.cond
  call void @free(i8* %3) #6, !dbg !3904
  %7 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3905
  %call36 = call zeroext i8 @perfect_nest_p(%struct.loop* %7) #7, !dbg !3906
  br label %cleanup37, !dbg !3907

cleanup37.loopexit:                               ; preds = %cleanup30
  br label %cleanup37, !dbg !3908

cleanup37:                                        ; preds = %cleanup37.loopexit, %entry, %for.end34
  %retval.5 = phi i8 [ %call36, %for.end34 ], [ 1, %entry ], [ 0, %cleanup37.loopexit ], !dbg !3852
  ret i8 %retval.5, !dbg !3908
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_convert_to_perfect_nest(%struct.loop* %loop) unnamed_addr #5 !dbg !3909 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3911, metadata !DIExpression()), !dbg !3916
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !3917
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3917
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !3918
  %1 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3918
  %tobool = icmp eq %struct.loop* %1, null, !dbg !3920
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !3921

lor.lhs.false:                                    ; preds = %entry
  %inner2 = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 8, !dbg !3922
  %2 = load %struct.loop*, %struct.loop** %inner2, align 8, !dbg !3922
  %tobool3 = icmp eq %struct.loop* %2, null, !dbg !3923
  br i1 %tobool3, label %if.end, label %cleanup, !dbg !3924

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* %loop) #6, !dbg !3925
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !3912, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.value(metadata i64 0, metadata !3913, metadata !DIExpression()), !dbg !3916
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3926
  br label %for.cond, !dbg !3929

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i64 [ 0, %if.end ], [ %inc, %for.inc ], !dbg !3930
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3913, metadata !DIExpression()), !dbg !3916
  %3 = load i32, i32* %num_nodes, align 4, !dbg !3931
  %conv = zext i32 %3 to i64, !dbg !3932
  %cmp = icmp ult i64 %i.0, %conv, !dbg !3933
  br i1 %cmp, label %for.body, label %for.end, !dbg !3934

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %i.0, !dbg !3935
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3935
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 3, !dbg !3937
  %5 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3937
  %cmp5 = icmp eq %struct.loop* %5, %loop, !dbg !3938
  br i1 %cmp5, label %land.lhs.true, label %for.inc, !dbg !3939

land.lhs.true:                                    ; preds = %for.body
  %call8 = tail call fastcc zeroext i8 @cannot_convert_bb_to_perfect_nest(%struct.basic_block_def* %4, %struct.loop* %loop) #7, !dbg !3940
  %tobool10 = icmp eq i8 %call8, 0, !dbg !3940
  br i1 %tobool10, label %for.inc, label %fail.loopexit1, !dbg !3941

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %inc = add nuw nsw i64 %i.0, 1, !dbg !3942
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3913, metadata !DIExpression()), !dbg !3916
  br label %for.cond, !dbg !3943, !llvm.loop !3944

for.end:                                          ; preds = %for.cond
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3946
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !3946
  %call13 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3948
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call13, i64 0, i32 1, !dbg !3949
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3949
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %7) #6, !dbg !3946
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !3946
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !3946
  br label %for.cond14, !dbg !3950

for.cond14:                                       ; preds = %for.inc24, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !3914, metadata !DIExpression(DW_OP_deref)), !dbg !3916
  %call15 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !3951
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3953
  br i1 %tobool16, label %for.body17, label %for.end25, !dbg !3954

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !3914, metadata !DIExpression(DW_OP_deref)), !dbg !3916
  %call18 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !3955
  %call19 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call18) #7, !dbg !3957
  %cmp20 = icmp eq i32 %call19, 1, !dbg !3958
  br i1 %cmp20, label %for.inc24, label %fail.loopexit, !dbg !3959

for.inc24:                                        ; preds = %for.body17
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !3914, metadata !DIExpression(DW_OP_deref)), !dbg !3916
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #7, !dbg !3960
  br label %for.cond14, !dbg !3961, !llvm.loop !3962

for.end25:                                        ; preds = %for.cond14
  %8 = bitcast %struct.basic_block_def** %call to i8*, !dbg !3964
  call void @free(i8* %8) #6, !dbg !3965
  br label %cleanup, !dbg !3966

fail.loopexit:                                    ; preds = %for.body17
  br label %fail, !dbg !3967

fail.loopexit1:                                   ; preds = %land.lhs.true
  br label %fail, !dbg !3967

fail:                                             ; preds = %fail.loopexit1, %fail.loopexit
  call void @llvm.dbg.label(metadata !3915), !dbg !3968
  %9 = bitcast %struct.basic_block_def** %call to i8*, !dbg !3967
  call void @free(i8* %9) #6, !dbg !3969
  br label %cleanup, !dbg !3970

cleanup:                                          ; preds = %lor.lhs.false, %entry, %fail, %for.end25
  %retval.0 = phi i8 [ 0, %fail ], [ 1, %for.end25 ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !3916
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3971
  ret i8 %retval.0, !dbg !3971
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lambda_loop_s* @gcc_loop_to_lambda_loop(%struct.loop* %loop, i32 %depth, %struct.VEC_tree_heap** %invariants, %union.tree_node** %ourinductionvar, %struct.VEC_tree_heap* %outerinductionvars, %struct.VEC_tree_heap** %lboundvars, %struct.VEC_tree_heap** %uboundvars, %struct.VEC_int_heap** %steps, %struct.obstack* %lambda_obstack) unnamed_addr #5 !dbg !3972 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3977, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i32 %depth, metadata !3978, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %invariants, metadata !3979, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %union.tree_node** %ourinductionvar, metadata !3980, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %outerinductionvars, metadata !3981, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %lboundvars, metadata !3982, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %uboundvars, metadata !3983, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %steps, metadata !3984, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !3985, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* null, metadata !3991, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i32 0, metadata !3997, metadata !DIExpression()), !dbg !4004
  %call = tail call %union.tree_node* @find_induction_var_from_exit_cond(%struct.loop* %loop) #7, !dbg !4005
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3989, metadata !DIExpression()), !dbg !4004
  %call1 = tail call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* %loop) #6, !dbg !4006
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !3987, metadata !DIExpression()), !dbg !4004
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !4007
  %cmp2 = icmp eq %union.gimple_statement_d* %call1, null, !dbg !4009
  %or.cond = or i1 %cmp, %cmp2, !dbg !4010
  br i1 %or.cond, label %if.then, label %if.end6, !dbg !4010

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4011
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !4011
  br i1 %tobool, label %cleanup244, label %land.lhs.true, !dbg !4014

land.lhs.true:                                    ; preds = %if.then
  %1 = load i32, i32* @dump_flags, align 4, !dbg !4015
  %and = and i32 %1, 8, !dbg !4016
  %tobool3 = icmp eq i32 %and, 0, !dbg !4016
  br i1 %tobool3, label %cleanup244, label %if.then4, !dbg !4017

if.then4:                                         ; preds = %land.lhs.true
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4018
  br label %cleanup244, !dbg !4018

if.end6:                                          ; preds = %entry
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4019
  %2 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4019
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %2, align 8, !dbg !4019
  %cmp7 = icmp eq %union.gimple_statement_d* %3, null, !dbg !4021
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !4022

if.then8:                                         ; preds = %if.end6
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4023
  %tobool9 = icmp eq %struct._IO_FILE* %4, null, !dbg !4023
  br i1 %tobool9, label %cleanup244, label %land.lhs.true10, !dbg !4026

land.lhs.true10:                                  ; preds = %if.then8
  %5 = load i32, i32* @dump_flags, align 4, !dbg !4027
  %and11 = and i32 %5, 8, !dbg !4028
  %tobool12 = icmp eq i32 %and11, 0, !dbg !4028
  br i1 %tobool12, label %cleanup244, label %if.then13, !dbg !4029

if.then13:                                        ; preds = %land.lhs.true10
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !4030
  br label %cleanup244, !dbg !4030

if.end16:                                         ; preds = %if.end6
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %3, metadata !3986, metadata !DIExpression()), !dbg !4004
  %call19 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %3) #7, !dbg !4031
  %cmp20 = icmp eq i32 %call19, 16, !dbg !4032
  br i1 %cmp20, label %if.end46, label %if.then21, !dbg !4033

if.then21:                                        ; preds = %if.end16
  %call22 = tail call fastcc %union.tree_node* @single_ssa_tree_operand(%union.gimple_statement_d* nonnull %3, i32 1) #7, !dbg !4034
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !4001, metadata !DIExpression()), !dbg !4035
  %tobool23 = icmp eq %union.tree_node* %call22, null, !dbg !4036
  br i1 %tobool23, label %if.then24, label %if.end32, !dbg !4038

if.then24:                                        ; preds = %if.then21
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4039
  %tobool25 = icmp eq %struct._IO_FILE* %6, null, !dbg !4039
  br i1 %tobool25, label %cleanup, label %land.lhs.true26, !dbg !4042

land.lhs.true26:                                  ; preds = %if.then24
  %7 = load i32, i32* @dump_flags, align 4, !dbg !4043
  %and27 = and i32 %7, 8, !dbg !4044
  %tobool28 = icmp eq i32 %and27, 0, !dbg !4044
  br i1 %tobool28, label %cleanup, label %if.then29, !dbg !4045

if.then29:                                        ; preds = %land.lhs.true26
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !4046
  br label %cleanup, !dbg !4046

if.end32:                                         ; preds = %if.then21
  %def_stmt34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4047
  %8 = bitcast %union.tree_node** %def_stmt34 to %union.gimple_statement_d**, !dbg !4047
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %8, align 8, !dbg !4047
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %9, metadata !3986, metadata !DIExpression()), !dbg !4004
  %call35 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %9) #7, !dbg !4048
  %cmp36 = icmp eq i32 %call35, 16, !dbg !4050
  br i1 %cmp36, label %cleanup, label %if.then37, !dbg !4051

if.then37:                                        ; preds = %if.end32
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4052
  %tobool38 = icmp eq %struct._IO_FILE* %10, null, !dbg !4052
  br i1 %tobool38, label %cleanup, label %land.lhs.true39, !dbg !4055

land.lhs.true39:                                  ; preds = %if.then37
  %11 = load i32, i32* @dump_flags, align 4, !dbg !4056
  %and40 = and i32 %11, 8, !dbg !4057
  %tobool41 = icmp eq i32 %and40, 0, !dbg !4057
  br i1 %tobool41, label %cleanup, label %if.then42, !dbg !4058

if.then42:                                        ; preds = %land.lhs.true39
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !4059
  br label %cleanup, !dbg !4059

cleanup:                                          ; preds = %land.lhs.true39, %if.then37, %if.end32, %land.lhs.true26, %if.then24, %if.then42, %if.then29
  %phi.0 = phi %union.gimple_statement_d* [ %3, %if.then29 ], [ %3, %land.lhs.true26 ], [ %3, %if.then24 ], [ %9, %if.then42 ], [ %9, %land.lhs.true39 ], [ %9, %if.then37 ], [ %9, %if.end32 ], !dbg !4004
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then29 ], [ false, %land.lhs.true26 ], [ false, %if.then24 ], [ false, %if.then42 ], [ false, %land.lhs.true39 ], [ false, %if.then37 ], [ true, %if.end32 ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.0, metadata !3986, metadata !DIExpression()), !dbg !4004
  br i1 %cleanup.dest.slot.0, label %if.end46, label %cleanup244

if.end46:                                         ; preds = %if.end16, %cleanup
  %phi.1 = phi %union.gimple_statement_d* [ %3, %if.end16 ], [ %phi.0, %cleanup ], !dbg !4004
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.1, metadata !3986, metadata !DIExpression()), !dbg !4004
  %call47 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi.1) #7, !dbg !4060
  %call48 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call47) #7, !dbg !4060
  store %union.tree_node* %call48, %union.tree_node** %ourinductionvar, align 8, !dbg !4061
  %call49 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi.1) #7, !dbg !4062
  %call50 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call49) #7, !dbg !4062
  %call51 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %call50) #6, !dbg !4063
  %call52 = tail call fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %loop, %union.tree_node* %call51) #7, !dbg !4064
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !3988, metadata !DIExpression()), !dbg !4004
  %12 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4065
  %cmp53 = icmp eq %union.tree_node* %call52, %12, !dbg !4067
  br i1 %cmp53, label %if.then54, label %if.end62, !dbg !4068

if.then54:                                        ; preds = %if.end46
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4069
  %tobool55 = icmp eq %struct._IO_FILE* %13, null, !dbg !4069
  br i1 %tobool55, label %cleanup244, label %land.lhs.true56, !dbg !4072

land.lhs.true56:                                  ; preds = %if.then54
  %14 = load i32, i32* @dump_flags, align 4, !dbg !4073
  %and57 = and i32 %14, 8, !dbg !4074
  %tobool58 = icmp eq i32 %and57, 0, !dbg !4074
  br i1 %tobool58, label %cleanup244, label %if.then59, !dbg !4075

if.then59:                                        ; preds = %land.lhs.true56
  %call60 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !4076
  br label %cleanup244, !dbg !4076

if.end62:                                         ; preds = %if.end46
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !4077
  %15 = load i32, i32* %num, align 8, !dbg !4077
  %call63 = tail call %union.tree_node* @evolution_part_in_loop_num(%union.tree_node* %call52, i32 %15) #6, !dbg !4078
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !3990, metadata !DIExpression()), !dbg !4004
  %tobool64 = icmp eq %union.tree_node* %call63, null, !dbg !4079
  %16 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4081
  %cmp66 = icmp eq %union.tree_node* %call63, %16, !dbg !4082
  %or.cond2 = or i1 %tobool64, %cmp66, !dbg !4083
  br i1 %or.cond2, label %if.then67, label %if.end75, !dbg !4083

if.then67:                                        ; preds = %if.end62
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4084
  %tobool68 = icmp eq %struct._IO_FILE* %17, null, !dbg !4084
  br i1 %tobool68, label %cleanup244, label %land.lhs.true69, !dbg !4087

land.lhs.true69:                                  ; preds = %if.then67
  %18 = load i32, i32* @dump_flags, align 4, !dbg !4088
  %and70 = and i32 %18, 8, !dbg !4089
  %tobool71 = icmp eq i32 %and70, 0, !dbg !4089
  br i1 %tobool71, label %cleanup244, label %if.then72, !dbg !4090

if.then72:                                        ; preds = %land.lhs.true69
  %call73 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %17, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4091
  br label %cleanup244, !dbg !4091

if.end75:                                         ; preds = %if.end62
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4092
  %bf.load = load i64, i64* %19, align 8, !dbg !4092
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !4094
  %cmp76 = icmp eq i64 %bf.cast3, 23, !dbg !4094
  br i1 %cmp76, label %if.end85, label %if.then77, !dbg !4095

if.then77:                                        ; preds = %if.end75
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4096
  %tobool78 = icmp eq %struct._IO_FILE* %20, null, !dbg !4096
  br i1 %tobool78, label %cleanup244, label %land.lhs.true79, !dbg !4099

land.lhs.true79:                                  ; preds = %if.then77
  %21 = load i32, i32* @dump_flags, align 4, !dbg !4100
  %and80 = and i32 %21, 8, !dbg !4101
  %tobool81 = icmp eq i32 %and80, 0, !dbg !4101
  br i1 %tobool81, label %cleanup244, label %if.then82, !dbg !4102

if.then82:                                        ; preds = %land.lhs.true79
  %call83 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !4103
  br label %cleanup244, !dbg !4103

if.end85:                                         ; preds = %if.end75
  %int_cst86 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4104
  %low = bitcast i32* %int_cst86 to i64*, !dbg !4104
  %22 = load i64, i64* %low, align 8, !dbg !4104
  %conv = trunc i64 %22 to i32, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3996, metadata !DIExpression()), !dbg !4004
  %call87 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi.1) #7, !dbg !4105
  %cmp88 = icmp eq i32 %call87, 2, !dbg !4107
  br i1 %cmp88, label %if.end98, label %if.then90, !dbg !4108

if.then90:                                        ; preds = %if.end85
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4109
  %tobool91 = icmp eq %struct._IO_FILE* %23, null, !dbg !4109
  br i1 %tobool91, label %cleanup244, label %land.lhs.true92, !dbg !4112

land.lhs.true92:                                  ; preds = %if.then90
  %24 = load i32, i32* @dump_flags, align 4, !dbg !4113
  %and93 = and i32 %24, 8, !dbg !4114
  %tobool94 = icmp eq i32 %and93, 0, !dbg !4114
  br i1 %tobool94, label %cleanup244, label %if.then95, !dbg !4115

if.then95:                                        ; preds = %land.lhs.true92
  %call96 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %23, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !4116
  br label %cleanup244, !dbg !4116

if.end98:                                         ; preds = %if.end85
  %call99 = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %phi.1, i64 0) #7, !dbg !4117
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call99, i64 0, i32 0, !dbg !4119
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4119
  %call100 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* %25) #6, !dbg !4120
  %tobool102 = icmp eq i8 %call100, 0, !dbg !4120
  br i1 %tobool102, label %if.end117, label %land.lhs.true103, !dbg !4121

land.lhs.true103:                                 ; preds = %if.end98
  %call104 = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %phi.1, i64 1) #7, !dbg !4122
  %src105 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call104, i64 0, i32 0, !dbg !4123
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %src105, align 8, !dbg !4123
  %call106 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* %26) #6, !dbg !4124
  %tobool108 = icmp eq i8 %call106, 0, !dbg !4124
  br i1 %tobool108, label %if.end117, label %if.then109, !dbg !4125

if.then109:                                       ; preds = %land.lhs.true103
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4126
  %tobool110 = icmp eq %struct._IO_FILE* %27, null, !dbg !4126
  br i1 %tobool110, label %cleanup244, label %land.lhs.true111, !dbg !4129

land.lhs.true111:                                 ; preds = %if.then109
  %28 = load i32, i32* @dump_flags, align 4, !dbg !4130
  %and112 = and i32 %28, 8, !dbg !4131
  %tobool113 = icmp eq i32 %and112, 0, !dbg !4131
  br i1 %tobool113, label %cleanup244, label %if.then114, !dbg !4132

if.then114:                                       ; preds = %land.lhs.true111
  %call115 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %27, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !4133
  br label %cleanup244, !dbg !4133

if.end117:                                        ; preds = %land.lhs.true103, %if.end98
  %call118 = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %phi.1, i64 0) #7, !dbg !4134
  %src119 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call118, i64 0, i32 0, !dbg !4136
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %src119, align 8, !dbg !4136
  %call120 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* %29) #6, !dbg !4137
  %tobool121 = icmp eq i8 %call120, 0, !dbg !4137
  br i1 %tobool121, label %if.else, label %if.then122, !dbg !4138

if.then122:                                       ; preds = %if.end117
  %call123 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi.1, i32 1) #7, !dbg !4139
  %call124 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call123) #7, !dbg !4139
  call void @llvm.dbg.value(metadata %union.tree_node* %call124, metadata !3998, metadata !DIExpression()), !dbg !4004
  %30 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %invariants, align 8, !dbg !4141
  %call125 = tail call fastcc %struct.lambda_linear_expression_s* @gcc_tree_to_linear_expression(i32 %depth, %union.tree_node* %call124, %struct.VEC_tree_heap* %outerinductionvars, %struct.VEC_tree_heap* %30, i32 0, %struct.obstack* %lambda_obstack) #7, !dbg !4142
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call125, metadata !3992, metadata !DIExpression()), !dbg !4004
  br label %if.end129, !dbg !4143

if.else:                                          ; preds = %if.end117
  %call126 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi.1, i32 0) #7, !dbg !4144
  %call127 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call126) #7, !dbg !4144
  call void @llvm.dbg.value(metadata %union.tree_node* %call127, metadata !3998, metadata !DIExpression()), !dbg !4004
  %31 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %invariants, align 8, !dbg !4146
  %call128 = tail call fastcc %struct.lambda_linear_expression_s* @gcc_tree_to_linear_expression(i32 %depth, %union.tree_node* %call127, %struct.VEC_tree_heap* %outerinductionvars, %struct.VEC_tree_heap* %31, i32 0, %struct.obstack* %lambda_obstack) #7, !dbg !4147
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call128, metadata !3992, metadata !DIExpression()), !dbg !4004
  br label %if.end129

if.end129:                                        ; preds = %if.else, %if.then122
  %lbound.0 = phi %struct.lambda_linear_expression_s* [ %call125, %if.then122 ], [ %call128, %if.else ], !dbg !4148
  %lboundvar.0 = phi %union.tree_node* [ %call124, %if.then122 ], [ %call127, %if.else ], !dbg !4148
  call void @llvm.dbg.value(metadata %union.tree_node* %lboundvar.0, metadata !3998, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lbound.0, metadata !3992, metadata !DIExpression()), !dbg !4004
  %tobool130 = icmp eq %struct.lambda_linear_expression_s* %lbound.0, null, !dbg !4149
  br i1 %tobool130, label %if.then131, label %if.end139, !dbg !4151

if.then131:                                       ; preds = %if.end129
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4152
  %tobool132 = icmp eq %struct._IO_FILE* %32, null, !dbg !4152
  br i1 %tobool132, label %cleanup244, label %land.lhs.true133, !dbg !4155

land.lhs.true133:                                 ; preds = %if.then131
  %33 = load i32, i32* @dump_flags, align 4, !dbg !4156
  %and134 = and i32 %33, 8, !dbg !4157
  %tobool135 = icmp eq i32 %and134, 0, !dbg !4157
  br i1 %tobool135, label %cleanup244, label %if.then136, !dbg !4158

if.then136:                                       ; preds = %land.lhs.true133
  %call137 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %32, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !4159
  br label %cleanup244, !dbg !4159

if.end139:                                        ; preds = %if.end129
  %call140 = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %invariants, i32 1) #7, !dbg !4160
  %call141 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %call1) #7, !dbg !4161
  call void @llvm.dbg.value(metadata %union.tree_node* %call141, metadata !3994, metadata !DIExpression()), !dbg !4004
  %call142 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call1) #7, !dbg !4162
  call void @llvm.dbg.value(metadata %union.tree_node* %call142, metadata !3995, metadata !DIExpression()), !dbg !4004
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4163
  %bf.load144 = load i64, i64* %34, align 8, !dbg !4163
  %bf.cast1464 = and i64 %bf.load144, 65535, !dbg !4165
  %cmp147 = icmp eq i64 %bf.cast1464, 141, !dbg !4165
  br i1 %cmp147, label %land.lhs.true149, label %if.else157, !dbg !4166

land.lhs.true149:                                 ; preds = %if.end139
  %call150 = tail call fastcc zeroext i8 @invariant_in_loop_and_outer_loops(%struct.loop* %loop, %union.tree_node* %call142) #7, !dbg !4167
  %tobool152 = icmp eq i8 %call150, 0, !dbg !4167
  br i1 %tobool152, label %if.else157, label %if.then153, !dbg !4168

if.then153:                                       ; preds = %land.lhs.true149
  %35 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %invariants, align 8, !dbg !4169
  %tobool154 = icmp eq %struct.VEC_tree_heap* %35, null, !dbg !4169
  br i1 %tobool154, label %cond.end, label %cond.true, !dbg !4169

cond.true:                                        ; preds = %if.then153
  %base155 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %35, i64 0, i32 0, !dbg !4169
  br label %cond.end, !dbg !4169

cond.end:                                         ; preds = %if.then153, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base155, %cond.true ], [ null, %if.then153 ], !dbg !4169
  %call156 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %call142) #7, !dbg !4169
  br label %if.end177, !dbg !4169

if.else157:                                       ; preds = %land.lhs.true149, %if.end139
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %call141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4170
  %bf.load159 = load i64, i64* %36, align 8, !dbg !4170
  %bf.cast1615 = and i64 %bf.load159, 65535, !dbg !4172
  %cmp162 = icmp eq i64 %bf.cast1615, 141, !dbg !4172
  br i1 %cmp162, label %land.lhs.true164, label %if.end177, !dbg !4173

land.lhs.true164:                                 ; preds = %if.else157
  %call165 = tail call fastcc zeroext i8 @invariant_in_loop_and_outer_loops(%struct.loop* %loop, %union.tree_node* %call141) #7, !dbg !4174
  %tobool167 = icmp eq i8 %call165, 0, !dbg !4174
  br i1 %tobool167, label %if.end177, label %if.then168, !dbg !4175

if.then168:                                       ; preds = %land.lhs.true164
  %37 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %invariants, align 8, !dbg !4176
  %tobool169 = icmp eq %struct.VEC_tree_heap* %37, null, !dbg !4176
  br i1 %tobool169, label %cond.end173, label %cond.true170, !dbg !4176

cond.true170:                                     ; preds = %if.then168
  %base171 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %37, i64 0, i32 0, !dbg !4176
  br label %cond.end173, !dbg !4176

cond.end173:                                      ; preds = %if.then168, %cond.true170
  %cond174 = phi %struct.VEC_tree_base* [ %base171, %cond.true170 ], [ null, %if.then168 ], !dbg !4176
  %call175 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond174, %union.tree_node* %call141) #7, !dbg !4176
  br label %if.end177, !dbg !4176

if.end177:                                        ; preds = %land.lhs.true164, %if.else157, %cond.end173, %cond.end
  %cmp178 = icmp eq %union.tree_node* %call141, %call, !dbg !4177
  %call142.call141 = select i1 %cmp178, %union.tree_node* %call142, %union.tree_node* %call141
  call void @llvm.dbg.value(metadata %union.tree_node* %call142.call141, metadata !3999, metadata !DIExpression()), !dbg !4004
  %38 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %invariants, align 8, !dbg !4179
  %tobool183 = icmp eq %struct.VEC_tree_heap* %38, null, !dbg !4179
  br i1 %tobool183, label %cond.end187, label %cond.true184, !dbg !4179

cond.true184:                                     ; preds = %if.end177
  %base185 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %38, i64 0, i32 0, !dbg !4179
  br label %cond.end187, !dbg !4179

cond.end187:                                      ; preds = %if.end177, %cond.true184
  %cond188 = phi %struct.VEC_tree_base* [ %base185, %cond.true184 ], [ null, %if.end177 ], !dbg !4179
  %call189 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond188) #7, !dbg !4179
  %mul = shl nsw i32 %depth, 1, !dbg !4179
  %cmp190 = icmp ugt i32 %call189, %mul, !dbg !4179
  br i1 %cmp190, label %cond.true192, label %cond.end194, !dbg !4179

cond.true192:                                     ; preds = %cond.end187
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1398, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4179
  br label %cond.end194, !dbg !4179

cond.end194:                                      ; preds = %cond.end187, %cond.true192
  %call196 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %call1) #7, !dbg !4180
  %cmp197 = icmp eq i32 %call196, 97, !dbg !4182
  br i1 %cmp197, label %if.then199, label %if.else201, !dbg !4183

if.then199:                                       ; preds = %cond.end194
  %mul200 = sub nsw i32 0, %conv, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %mul200, metadata !3997, metadata !DIExpression()), !dbg !4004
  br label %if.end222, !dbg !4185

if.else201:                                       ; preds = %cond.end194
  %call202 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %call1) #7, !dbg !4186
  %cmp203 = icmp eq i32 %call202, 102, !dbg !4188
  br i1 %cmp203, label %if.then205, label %if.else207, !dbg !4189

if.then205:                                       ; preds = %if.else201
  %mul206 = sub nsw i32 0, %conv, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %mul206, metadata !3997, metadata !DIExpression()), !dbg !4004
  br label %if.end222, !dbg !4191

if.else207:                                       ; preds = %if.else201
  %call208 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %call1) #7, !dbg !4192
  %cmp209 = icmp eq i32 %call208, 99, !dbg !4194
  br i1 %cmp209, label %if.then211, label %if.else213, !dbg !4195

if.then211:                                       ; preds = %if.else207
  %mul212 = sub nsw i32 0, %conv, !dbg !4196
  call void @llvm.dbg.value(metadata i32 %mul212, metadata !3997, metadata !DIExpression()), !dbg !4004
  br label %if.end222, !dbg !4197

if.else213:                                       ; preds = %if.else207
  %call214 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %call1) #7, !dbg !4198
  %cmp215 = icmp eq i32 %call214, 101, !dbg !4200
  %spec.select = select i1 %cmp215, i32 %conv, i32 0, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3997, metadata !DIExpression()), !dbg !4004
  br label %if.end222

if.end222:                                        ; preds = %if.then205, %if.else213, %if.then211, %if.then199
  %extra.3 = phi i32 [ %mul200, %if.then199 ], [ %mul206, %if.then205 ], [ %mul212, %if.then211 ], [ %spec.select, %if.else213 ], !dbg !4202
  call void @llvm.dbg.value(metadata i32 %extra.3, metadata !3997, metadata !DIExpression()), !dbg !4004
  %39 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %invariants, align 8, !dbg !4203
  %call223 = tail call fastcc %struct.lambda_linear_expression_s* @gcc_tree_to_linear_expression(i32 %depth, %union.tree_node* %call142.call141, %struct.VEC_tree_heap* %outerinductionvars, %struct.VEC_tree_heap* %39, i32 %extra.3, %struct.obstack* %lambda_obstack) #7, !dbg !4204
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call223, metadata !3993, metadata !DIExpression()), !dbg !4004
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call142.call141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4205
  %40 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4205
  %conv226 = sext i32 %extra.3 to i64, !dbg !4205
  %call227 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %40, i64 %conv226) #6, !dbg !4205
  %call228 = tail call %union.tree_node* @build2_stat(i32 63, %union.tree_node* %40, %union.tree_node* %call142.call141, %union.tree_node* %call227) #6, !dbg !4205
  call void @llvm.dbg.value(metadata %union.tree_node* %call228, metadata !4000, metadata !DIExpression()), !dbg !4004
  %call229 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %uboundvars, %union.tree_node* %call228) #7, !dbg !4206
  %call230 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %lboundvars, %union.tree_node* %lboundvar.0) #7, !dbg !4207
  %call231 = tail call fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** %steps, i32 %conv) #7, !dbg !4208
  %tobool232 = icmp eq %struct.lambda_linear_expression_s* %call223, null, !dbg !4209
  br i1 %tobool232, label %if.then233, label %if.end241, !dbg !4211

if.then233:                                       ; preds = %if.end222
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4212
  %tobool234 = icmp eq %struct._IO_FILE* %41, null, !dbg !4212
  br i1 %tobool234, label %cleanup244, label %land.lhs.true235, !dbg !4215

land.lhs.true235:                                 ; preds = %if.then233
  %42 = load i32, i32* @dump_flags, align 4, !dbg !4216
  %and236 = and i32 %42, 8, !dbg !4217
  %tobool237 = icmp eq i32 %and236, 0, !dbg !4217
  br i1 %tobool237, label %cleanup244, label %if.then238, !dbg !4218

if.then238:                                       ; preds = %land.lhs.true235
  %call239 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %41, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4219
  br label %cleanup244, !dbg !4219

if.end241:                                        ; preds = %if.end222
  %call242 = tail call i8* @ggc_alloc_cleared_stat(i64 32) #6, !dbg !4220
  %43 = bitcast i8* %call242 to %struct.lambda_loop_s*, !dbg !4220
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %43, metadata !3991, metadata !DIExpression()), !dbg !4004
  %step243 = getelementptr inbounds i8, i8* %call242, i64 24, !dbg !4221
  %44 = bitcast i8* %step243 to i32*, !dbg !4221
  store i32 %conv, i32* %44, align 8, !dbg !4222
  %lower_bound = bitcast i8* %call242 to %struct.lambda_linear_expression_s**, !dbg !4223
  store %struct.lambda_linear_expression_s* %lbound.0, %struct.lambda_linear_expression_s** %lower_bound, align 8, !dbg !4224
  %upper_bound = getelementptr inbounds i8, i8* %call242, i64 8, !dbg !4225
  %45 = bitcast i8* %upper_bound to %struct.lambda_linear_expression_s**, !dbg !4225
  store %struct.lambda_linear_expression_s* %call223, %struct.lambda_linear_expression_s** %45, align 8, !dbg !4226
  br label %cleanup244, !dbg !4227

cleanup244:                                       ; preds = %land.lhs.true, %if.then, %land.lhs.true10, %if.then8, %land.lhs.true56, %if.then54, %land.lhs.true69, %if.then67, %land.lhs.true79, %if.then77, %land.lhs.true92, %if.then90, %land.lhs.true111, %if.then109, %land.lhs.true235, %if.then233, %land.lhs.true133, %if.then131, %if.then238, %if.then136, %if.then114, %if.then95, %if.then82, %if.then72, %if.then59, %if.then13, %if.then4, %cleanup, %if.end241
  %retval.1 = phi %struct.lambda_loop_s* [ null, %cleanup ], [ %43, %if.end241 ], [ null, %if.then4 ], [ null, %land.lhs.true ], [ null, %if.then ], [ null, %if.then13 ], [ null, %land.lhs.true10 ], [ null, %if.then8 ], [ null, %if.then59 ], [ null, %land.lhs.true56 ], [ null, %if.then54 ], [ null, %if.then72 ], [ null, %land.lhs.true69 ], [ null, %if.then67 ], [ null, %if.then82 ], [ null, %land.lhs.true79 ], [ null, %if.then77 ], [ null, %if.then95 ], [ null, %land.lhs.true92 ], [ null, %if.then90 ], [ null, %if.then114 ], [ null, %land.lhs.true111 ], [ null, %if.then109 ], [ null, %if.then136 ], [ null, %land.lhs.true133 ], [ null, %if.then131 ], [ null, %if.then238 ], [ null, %land.lhs.true235 ], [ null, %if.then233 ], !dbg !4004
  ret %struct.lambda_loop_s* %retval.1, !dbg !4228
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !4229 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !4233, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !4234, metadata !DIExpression()), !dbg !4235
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !4236
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4236
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !4236
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4236

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !4236
  br label %cond.end, !dbg !4236

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4236
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !4236
  ret %union.tree_node** %call1, !dbg !4236
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.lambda_loop_s** @VEC_lambda_loop_heap_safe_push(%struct.VEC_lambda_loop_heap** %vec_, %struct.lambda_loop_s* %obj_) unnamed_addr #0 !dbg !4237 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_heap** %vec_, metadata !4242, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %obj_, metadata !4243, metadata !DIExpression()), !dbg !4244
  %call = tail call fastcc i32 @VEC_lambda_loop_heap_reserve(%struct.VEC_lambda_loop_heap** %vec_, i32 1) #7, !dbg !4245
  %0 = load %struct.VEC_lambda_loop_heap*, %struct.VEC_lambda_loop_heap** %vec_, align 8, !dbg !4245
  %tobool = icmp eq %struct.VEC_lambda_loop_heap* %0, null, !dbg !4245
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4245

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_lambda_loop_heap, %struct.VEC_lambda_loop_heap* %0, i64 0, i32 0, !dbg !4245
  br label %cond.end, !dbg !4245

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_lambda_loop_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4245
  %call1 = tail call fastcc %struct.lambda_loop_s** @VEC_lambda_loop_base_quick_push(%struct.VEC_lambda_loop_base* %cond, %struct.lambda_loop_s* %obj_) #7, !dbg !4245
  ret %struct.lambda_loop_s** %call1, !dbg !4245
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @perfect_nestify(%struct.loop* %loop, %struct.VEC_tree_heap* %lbounds, %struct.VEC_tree_heap* %ubounds, %struct.VEC_int_heap* %steps, %struct.VEC_tree_heap* %loopivs) unnamed_addr #5 !dbg !4246 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %firstbsi = alloca %struct.gimple_stmt_iterator, align 8
  %insert_after = alloca i8, align 1
  %ivvar = alloca %union.tree_node*, align 8
  %ivvarinced = alloca %union.tree_node*, align 8
  %phis = alloca %struct.VEC_tree_heap*, align 8
  %locations = alloca %struct.VEC_source_location_heap*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp31 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp80 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp144 = alloca %struct.gimple_stmt_iterator, align 8
  %tobsi = alloca %struct.gimple_stmt_iterator, align 8
  %header_bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp161 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp184 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4250, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %lbounds, metadata !4251, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ubounds, metadata !4252, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %steps, metadata !4253, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %loopivs, metadata !4254, metadata !DIExpression()), !dbg !4300
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4301
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4301
  %1 = bitcast %struct.gimple_stmt_iterator* %firstbsi to i8*, !dbg !4301
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4301
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !4266, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %insert_after) #8, !dbg !4302
  %2 = bitcast %union.tree_node** %ivvar to i8*, !dbg !4303
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4303
  %3 = bitcast %union.tree_node** %ivvarinced to i8*, !dbg !4303
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4303
  %4 = bitcast %struct.VEC_tree_heap** %phis to i8*, !dbg !4304
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4304
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !4275, metadata !DIExpression()), !dbg !4300
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %phis, align 8, !dbg !4305
  %5 = bitcast %struct.VEC_source_location_heap** %locations to i8*, !dbg !4306
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !4306
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_heap* null, metadata !4276, metadata !DIExpression()), !dbg !4300
  store %struct.VEC_source_location_heap* null, %struct.VEC_source_location_heap** %locations, align 8, !dbg !4307
  call void @llvm.dbg.value(metadata %struct.htab* null, metadata !4277, metadata !DIExpression()), !dbg !4300
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !4308
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !4309
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4309
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %6, metadata !4262, metadata !DIExpression()), !dbg !4300
  %call1 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !4310
  %call2 = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %call1) #6, !dbg !4311
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !4258, metadata !DIExpression()), !dbg !4300
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4312
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !4312
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4312
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !4312
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4312
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 5, !dbg !4313
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !4313
  %call3 = tail call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %10) #6, !dbg !4314
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !4259, metadata !DIExpression()), !dbg !4300
  %11 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4315
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !4315
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %6) #6, !dbg !4315
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !4315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !4315
  br label %for.cond, !dbg !4317

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4318
  %tobool = icmp eq i8 %call4, 0, !dbg !4320
  br i1 %tobool, label %for.body, label %for.end, !dbg !4321

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4322
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !4269, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %phis, metadata !4275, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call6 = call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** nonnull %phis, i32 2) #7, !dbg !4324
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_heap** %locations, metadata !4276, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call7 = call fastcc i32 @VEC_source_location_heap_reserve(%struct.VEC_source_location_heap** nonnull %locations, i32 1) #7, !dbg !4325
  %12 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %phis, align 8, !dbg !4326
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %12, metadata !4275, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %12, metadata !4275, metadata !DIExpression()), !dbg !4300
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %12, i64 0, i32 0, !dbg !4326
  %call9 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call5) #7, !dbg !4326
  %call10 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call9) #7, !dbg !4326
  %call11 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %call10) #7, !dbg !4326
  %13 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %phis, align 8, !dbg !4327
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %13, metadata !4275, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %13, metadata !4275, metadata !DIExpression()), !dbg !4300
  %base14 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %13, i64 0, i32 0, !dbg !4327
  %call18 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call5, i32 0) #7, !dbg !4327
  %call19 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call18) #7, !dbg !4327
  %call20 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base14, %union.tree_node* %call19) #7, !dbg !4327
  %14 = load %struct.VEC_source_location_heap*, %struct.VEC_source_location_heap** %locations, align 8, !dbg !4328
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_heap* %14, metadata !4276, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_heap* %14, metadata !4276, metadata !DIExpression()), !dbg !4300
  %base23 = getelementptr inbounds %struct.VEC_source_location_heap, %struct.VEC_source_location_heap* %14, i64 0, i32 0, !dbg !4328
  %call27 = call fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %call5, i64 0) #7, !dbg !4328
  %call28 = call fastcc i32* @VEC_source_location_base_quick_push(%struct.VEC_source_location_base* %base23, i32 %call27) #7, !dbg !4328
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4329
  br label %for.cond, !dbg !4330, !llvm.loop !4331

for.end:                                          ; preds = %for.cond
  %call29 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %call2) #7, !dbg !4333
  %call30 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %call29, %struct.basic_block_def* %call3) #6, !dbg !4334
  call void @llvm.dbg.value(metadata %struct.edge_def* %call30, metadata !4267, metadata !DIExpression()), !dbg !4300
  %15 = bitcast %struct.gimple_stmt_iterator* %tmp31 to i8*, !dbg !4335
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8, !dbg !4335
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp31, %struct.basic_block_def* %6) #6, !dbg !4335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %15, i64 24, i1 false), !dbg !4335
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8, !dbg !4335
  br label %for.cond32, !dbg !4337

for.cond32:                                       ; preds = %for.body36, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call33 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4338
  %tobool34 = icmp eq i8 %call33, 0, !dbg !4340
  br i1 %tobool34, label %for.body36, label %while.cond.preheader, !dbg !4341

while.cond.preheader:                             ; preds = %for.cond32
  br label %while.cond, !dbg !4342

for.body36:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %bsi, i8 zeroext 0) #6, !dbg !4343
  br label %for.cond32, !dbg !4344, !llvm.loop !4345

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %16 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %phis, align 8, !dbg !4347
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %16, metadata !4275, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %16, metadata !4275, metadata !DIExpression()), !dbg !4300
  %base40 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %16, i64 0, i32 0, !dbg !4347
  %call44 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base40) #7, !dbg !4347
  %cmp = icmp eq i32 %call44, 0, !dbg !4348
  br i1 %cmp, label %while.end, label %while.body, !dbg !4342

while.body:                                       ; preds = %while.cond
  %17 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %phis, align 8, !dbg !4349
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !4275, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !4275, metadata !DIExpression()), !dbg !4300
  %base47 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %17, i64 0, i32 0, !dbg !4349
  %call51 = call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base47) #7, !dbg !4349
  call void @llvm.dbg.value(metadata %union.tree_node* %call51, metadata !4278, metadata !DIExpression()), !dbg !4350
  %18 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %phis, align 8, !dbg !4351
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %18, metadata !4275, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %18, metadata !4275, metadata !DIExpression()), !dbg !4300
  %base54 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %18, i64 0, i32 0, !dbg !4351
  %call58 = call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base54) #7, !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !4280, metadata !DIExpression()), !dbg !4350
  %19 = load %struct.VEC_source_location_heap*, %struct.VEC_source_location_heap** %locations, align 8, !dbg !4352
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_heap* %19, metadata !4276, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_heap* %19, metadata !4276, metadata !DIExpression()), !dbg !4300
  %base61 = getelementptr inbounds %struct.VEC_source_location_heap, %struct.VEC_source_location_heap* %19, i64 0, i32 0, !dbg !4352
  %call65 = call fastcc i32 @VEC_source_location_base_pop(%struct.VEC_source_location_base* %base61) #7, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %call65, metadata !4281, metadata !DIExpression()), !dbg !4350
  %call66 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %call58, %struct.basic_block_def* %call2) #6, !dbg !4353
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call66, metadata !4269, metadata !DIExpression()), !dbg !4300
  %call67 = call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %call2) #7, !dbg !4354
  call void @add_phi_arg(%union.gimple_statement_d* %call66, %union.tree_node* %call51, %struct.edge_def* %call67, i32 %call65) #6, !dbg !4355
  br label %while.cond, !dbg !4342, !llvm.loop !4356

while.end:                                        ; preds = %while.cond
  call void @flush_pending_stmts(%struct.edge_def* %call30) #6, !dbg !4358
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %phis, metadata !4275, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %phis) #7, !dbg !4359
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4360
  %cfg69 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !4360
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg69, align 8, !dbg !4360
  %x_exit_block_ptr70 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 1, !dbg !4360
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr70, align 8, !dbg !4360
  %prev_bb71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 5, !dbg !4361
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb71, align 8, !dbg !4361
  %call72 = call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %23) #6, !dbg !4362
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call72, metadata !4260, metadata !DIExpression()), !dbg !4300
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4363
  %cfg74 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !4363
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg74, align 8, !dbg !4363
  %x_exit_block_ptr75 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 1, !dbg !4363
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr75, align 8, !dbg !4363
  %prev_bb76 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 5, !dbg !4364
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb76, align 8, !dbg !4364
  %call77 = call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %27) #6, !dbg !4365
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call77, metadata !4261, metadata !DIExpression()), !dbg !4300
  %call78 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %call3, %struct.basic_block_def* %call72, i32 1) #6, !dbg !4366
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !4367
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !4368
  %call79 = call %union.gimple_statement_d* @gimple_build_cond(i32 102, %union.tree_node* %28, %union.tree_node* %29, %union.tree_node* null, %union.tree_node* null) #6, !dbg !4369
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call79, metadata !4257, metadata !DIExpression()), !dbg !4300
  %30 = bitcast %struct.gimple_stmt_iterator* %tmp80 to i8*, !dbg !4370
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8, !dbg !4370
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp80, %struct.basic_block_def* %call72) #7, !dbg !4370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %30, i64 24, i1 false), !dbg !4370
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8, !dbg !4370
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call79, i32 0) #6, !dbg !4371
  %call81 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %call72, %struct.basic_block_def* %6, i32 2048) #6, !dbg !4372
  call void @llvm.dbg.value(metadata %struct.edge_def* %call81, metadata !4267, metadata !DIExpression()), !dbg !4300
  %call82 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %call72, %struct.basic_block_def* %call77, i32 1024) #6, !dbg !4373
  %call83 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %call77, %struct.basic_block_def* %call3, i32 1) #6, !dbg !4374
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 3, !dbg !4375
  %31 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !4375
  %call84 = call %struct.loop* @duplicate_loop(%struct.loop* %loop, %struct.loop* %31) #6, !dbg !4376
  call void @llvm.dbg.value(metadata %struct.loop* %call84, metadata !4268, metadata !DIExpression()), !dbg !4300
  %header = getelementptr inbounds %struct.loop, %struct.loop* %call84, i64 0, i32 2, !dbg !4377
  store %struct.basic_block_def* %call3, %struct.basic_block_def** %header, align 8, !dbg !4378
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %call84, i64 0, i32 3, !dbg !4379
  store %struct.basic_block_def* %call77, %struct.basic_block_def** %latch, align 8, !dbg !4380
  call void @add_bb_to_loop(%struct.basic_block_def* %call77, %struct.loop* %call84) #6, !dbg !4381
  call void @add_bb_to_loop(%struct.basic_block_def* %call72, %struct.loop* %call84) #6, !dbg !4382
  call void @add_bb_to_loop(%struct.basic_block_def* %call3, %struct.loop* %call84) #6, !dbg !4383
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %call72, %struct.basic_block_def* %call3) #6, !dbg !4384
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %call3, %struct.basic_block_def* %call2) #6, !dbg !4385
  %call85 = call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !4386
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call85, i64 0, i32 0, !dbg !4387
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4387
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %call2, %struct.basic_block_def* %32) #6, !dbg !4388
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %call77, %struct.basic_block_def* %call72) #6, !dbg !4389
  %call86 = call %struct.basic_block_def* @recompute_dominator(i32 1, %struct.basic_block_def* %6) #6, !dbg !4390
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %6, %struct.basic_block_def* %call86) #6, !dbg !4391
  %base89 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %loopivs, i64 0, i32 0, !dbg !4392
  %call93 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base89, i32 0) #7, !dbg !4392
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !4272, metadata !DIExpression()), !dbg !4300
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4393
  %33 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4393
  %call94 = call %union.tree_node* @create_tmp_var(%union.tree_node* %33, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !4394
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !4273, metadata !DIExpression()), !dbg !4300
  store %union.tree_node* %call94, %union.tree_node** %ivvar, align 8, !dbg !4395
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !4273, metadata !DIExpression()), !dbg !4300
  %call95 = call zeroext i8 @add_referenced_var(%union.tree_node* %call94) #6, !dbg !4396
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !4266, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @standard_iv_increment_position(%struct.loop* %call84, %struct.gimple_stmt_iterator* nonnull %bsi, i8* nonnull %insert_after) #6, !dbg !4397
  %base98 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %lbounds, i64 0, i32 0, !dbg !4398
  %call102 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base98, i32 0) #7, !dbg !4398
  %34 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4399
  %base107 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %steps, i64 0, i32 0, !dbg !4400
  %call111 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base107, i32 0) #7, !dbg !4400
  %conv = sext i32 %call111 to i64, !dbg !4400
  %call112 = call %union.tree_node* @build_int_cst(%union.tree_node* %34, i64 %conv) #6, !dbg !4401
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !4273, metadata !DIExpression()), !dbg !4300
  %35 = load i8, i8* %insert_after, align 1, !dbg !4402
  call void @llvm.dbg.value(metadata i8 %35, metadata !4266, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @llvm.dbg.value(metadata %union.tree_node** %ivvar, metadata !4273, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @llvm.dbg.value(metadata %union.tree_node** %ivvarinced, metadata !4274, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @create_iv(%union.tree_node* %call102, %union.tree_node* %call112, %union.tree_node* %call94, %struct.loop* %call84, %struct.gimple_stmt_iterator* nonnull %bsi, i8 zeroext %35, %union.tree_node** nonnull %ivvar, %union.tree_node** nonnull %ivvarinced) #6, !dbg !4403
  %call113 = call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* %call84) #6, !dbg !4404
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call113, metadata !4256, metadata !DIExpression()), !dbg !4300
  %base116 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %ubounds, i64 0, i32 0, !dbg !4405
  %call120 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base116, i32 0) #7, !dbg !4405
  %type122 = getelementptr inbounds %union.tree_node, %union.tree_node* %call120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4405
  %36 = load %union.tree_node*, %union.tree_node** %type122, align 8, !dbg !4405
  %call123 = call %union.tree_node* @create_tmp_var(%union.tree_node* %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !4406
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !4270, metadata !DIExpression()), !dbg !4300
  %call124 = call zeroext i8 @add_referenced_var(%union.tree_node* %call123) #6, !dbg !4407
  %call131 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base116, i32 0) #7, !dbg !4408
  %call132 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call123, %union.tree_node* %call131) #6, !dbg !4408
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call132, metadata !4271, metadata !DIExpression()), !dbg !4300
  %call133 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call123, %union.gimple_statement_d* %call132) #7, !dbg !4409
  call void @llvm.dbg.value(metadata %union.tree_node* %call133, metadata !4270, metadata !DIExpression()), !dbg !4300
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call132, %union.tree_node* %call133) #7, !dbg !4410
  %37 = load i8, i8* %insert_after, align 1, !dbg !4411
  call void @llvm.dbg.value(metadata i8 %37, metadata !4266, metadata !DIExpression()), !dbg !4300
  %tobool134 = icmp eq i8 %37, 0, !dbg !4411
  br i1 %tobool134, label %if.else, label %if.then, !dbg !4413

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call132, i32 1) #6, !dbg !4414
  br label %if.end, !dbg !4414

if.else:                                          ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call132, i32 1) #6, !dbg !4415
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call fastcc void @update_stmt(%union.gimple_statement_d* %call132) #7, !dbg !4416
  %38 = load %union.tree_node*, %union.tree_node** %ivvarinced, align 8, !dbg !4417
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !4274, metadata !DIExpression()), !dbg !4300
  call fastcc void @gimple_cond_set_condition(%union.gimple_statement_d* %call113, i32 100, %union.tree_node* %call133, %union.tree_node* %38) #7, !dbg !4418
  call fastcc void @update_stmt(%union.gimple_statement_d* %call113) #7, !dbg !4419
  %call135 = call %struct.htab* @htab_create_alloc(i64 20, i32 (i8*)* nonnull @tree_map_hash, i32 (i8*, i8*)* nonnull @tree_map_base_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !4420
  call void @llvm.dbg.value(metadata %struct.htab* %call135, metadata !4277, metadata !DIExpression()), !dbg !4300
  %call136 = call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #6, !dbg !4421
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call136, metadata !4255, metadata !DIExpression()), !dbg !4300
  %call143 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base89, i32 0) #7, !dbg !4422
  call void @llvm.dbg.value(metadata %union.tree_node* %call143, metadata !4272, metadata !DIExpression()), !dbg !4300
  %39 = bitcast %struct.gimple_stmt_iterator* %tmp144 to i8*, !dbg !4423
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8, !dbg !4423
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp144, %struct.basic_block_def* %call72) #7, !dbg !4423
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %39, i64 24, i1 false), !dbg !4423
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8, !dbg !4423
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !4424
  %40 = load i32, i32* %num_nodes, align 4, !dbg !4424
  call void @llvm.dbg.value(metadata i32 %40, metadata !4263, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4300
  %41 = bitcast %struct.gimple_stmt_iterator* %tobsi to i8*, !dbg !4425
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !4426
  %42 = bitcast %struct.gimple_stmt_iterator* %header_bsi to i8*, !dbg !4427
  %43 = bitcast %struct.gimple_stmt_iterator* %tmp161 to i8*, !dbg !4428
  %44 = bitcast %struct.gimple_stmt_iterator* %tmp184 to i8*, !dbg !4429
  br label %for.cond145, !dbg !4430

for.cond145:                                      ; preds = %if.end231, %if.end
  %i.0.in = phi i32 [ %40, %if.end ], [ %i.0, %if.end231 ]
  %i.0 = add i32 %i.0.in, -1, !dbg !4431
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4263, metadata !DIExpression()), !dbg !4300
  %cmp146 = icmp sgt i32 %i.0, -1, !dbg !4432
  br i1 %cmp146, label %for.body148, label %for.end233, !dbg !4433

for.body148:                                      ; preds = %for.cond145
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8, !dbg !4434
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %tobsi, metadata !4282, metadata !DIExpression(DW_OP_deref)), !dbg !4425
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tobsi, %struct.basic_block_def* %call72) #7, !dbg !4435
  %idxprom = sext i32 %i.0 to i64, !dbg !4436
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call136, i64 %idxprom, !dbg !4436
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4436
  %loop_father149 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i64 0, i32 3, !dbg !4437
  %46 = load %struct.loop*, %struct.loop** %loop_father149, align 8, !dbg !4437
  %cmp150 = icmp eq %struct.loop* %46, %loop, !dbg !4438
  br i1 %cmp150, label %if.then152, label %if.end231, !dbg !4439

if.then152:                                       ; preds = %for.body148
  %47 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !4440
  %header153 = getelementptr inbounds %struct.loop, %struct.loop* %47, i64 0, i32 2, !dbg !4441
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %header153, align 8, !dbg !4441
  %call156 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %48, %struct.basic_block_def* %45) #6, !dbg !4442
  %tobool157 = icmp eq i8 %call156, 0, !dbg !4442
  br i1 %tobool157, label %if.else183, label %if.then158, !dbg !4443

if.then158:                                       ; preds = %if.then152
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #8, !dbg !4444
  %49 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !4445
  %header160 = getelementptr inbounds %struct.loop, %struct.loop* %49, i64 0, i32 2, !dbg !4446
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %header160, align 8, !dbg !4446
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %header_bsi, metadata !4286, metadata !DIExpression(DW_OP_deref)), !dbg !4427
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %header_bsi, %struct.basic_block_def* %50) #7, !dbg !4447
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8, !dbg !4448
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4449
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp161, %struct.basic_block_def* %51) #7, !dbg !4448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %43, i64 24, i1 false), !dbg !4448
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8, !dbg !4448
  br label %for.cond164, !dbg !4450

for.cond164:                                      ; preds = %cleanup, %if.then158
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call165 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4451
  %tobool166 = icmp eq i8 %call165, 0, !dbg !4452
  br i1 %tobool166, label %for.body168, label %for.end182, !dbg !4453

for.body168:                                      ; preds = %for.cond164
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call170 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4454
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call170, metadata !4291, metadata !DIExpression()), !dbg !4455
  %cmp171 = icmp eq %union.gimple_statement_d* %call170, %call113, !dbg !4456
  br i1 %cmp171, label %if.then180, label %lor.lhs.false, !dbg !4458

lor.lhs.false:                                    ; preds = %for.body168
  %call173 = call fastcc zeroext i8 @not_interesting_stmt(%union.gimple_statement_d* %call170) #7, !dbg !4459
  %tobool175 = icmp eq i8 %call173, 0, !dbg !4459
  br i1 %tobool175, label %lor.lhs.false176, label %if.then180, !dbg !4460

lor.lhs.false176:                                 ; preds = %lor.lhs.false
  %call177 = call fastcc zeroext i8 @stmt_is_bumper_for_loop(%struct.loop* %loop, %union.gimple_statement_d* %call170) #7, !dbg !4461
  %tobool179 = icmp eq i8 %call177, 0, !dbg !4461
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !4462

if.then180:                                       ; preds = %lor.lhs.false176, %lor.lhs.false, %for.body168
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4463
  br label %cleanup, !dbg !4465, !llvm.loop !4466

if.end181:                                        ; preds = %lor.lhs.false176
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %header_bsi, metadata !4286, metadata !DIExpression(DW_OP_deref)), !dbg !4427
  call void @gsi_move_before(%struct.gimple_stmt_iterator* nonnull %bsi, %struct.gimple_stmt_iterator* nonnull %header_bsi) #6, !dbg !4468
  br label %cleanup, !dbg !4469

cleanup:                                          ; preds = %if.end181, %if.then180
  br label %for.cond164

for.end182:                                       ; preds = %for.cond164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #8, !dbg !4470
  br label %if.end231, !dbg !4471

if.else183:                                       ; preds = %if.then152
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #8, !dbg !4472
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4473
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp184, %struct.basic_block_def* %52) #7, !dbg !4472
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %44, i64 24, i1 false), !dbg !4472
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #8, !dbg !4472
  br label %for.cond187, !dbg !4474

for.cond187:                                      ; preds = %cleanup226, %if.else183
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call188 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4475
  %tobool189 = icmp eq i8 %call188, 0, !dbg !4476
  br i1 %tobool189, label %for.body191, label %if.end231.loopexit, !dbg !4477

for.body191:                                      ; preds = %for.cond187
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  %call193 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4478
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call193, metadata !4295, metadata !DIExpression()), !dbg !4479
  %cmp194 = icmp eq %union.gimple_statement_d* %call193, %call113, !dbg !4480
  br i1 %cmp194, label %if.then204, label %lor.lhs.false196, !dbg !4482

lor.lhs.false196:                                 ; preds = %for.body191
  %call197 = call fastcc zeroext i8 @not_interesting_stmt(%union.gimple_statement_d* %call193) #7, !dbg !4483
  %tobool199 = icmp eq i8 %call197, 0, !dbg !4483
  br i1 %tobool199, label %lor.lhs.false200, label %if.then204, !dbg !4484

lor.lhs.false200:                                 ; preds = %lor.lhs.false196
  %call201 = call fastcc zeroext i8 @stmt_is_bumper_for_loop(%struct.loop* %loop, %union.gimple_statement_d* %call193) #7, !dbg !4485
  %tobool203 = icmp eq i8 %call201, 0, !dbg !4485
  br i1 %tobool203, label %if.end205, label %if.then204, !dbg !4486

if.then204:                                       ; preds = %lor.lhs.false200, %lor.lhs.false196, %for.body191
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4487
  br label %cleanup226, !dbg !4489, !llvm.loop !4490

if.end205:                                        ; preds = %lor.lhs.false200
  %call212 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base107, i32 0) #7, !dbg !4492
  %53 = load %union.tree_node*, %union.tree_node** %ivvar, align 8, !dbg !4493
  call void @llvm.dbg.value(metadata %union.tree_node* %53, metadata !4273, metadata !DIExpression()), !dbg !4300
  %call219 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base98, i32 0) #7, !dbg !4494
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %firstbsi, metadata !4265, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call fastcc void @replace_uses_equiv_to_x_with_y(%struct.loop* %loop, %union.gimple_statement_d* %call193, %union.tree_node* %call143, i32 %call212, %union.tree_node* %53, %union.tree_node* %call219, %struct.htab* %call135, %struct.gimple_stmt_iterator* nonnull %firstbsi) #7, !dbg !4495
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4264, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %tobsi, metadata !4282, metadata !DIExpression(DW_OP_deref)), !dbg !4425
  call void @gsi_move_before(%struct.gimple_stmt_iterator* nonnull %bsi, %struct.gimple_stmt_iterator* nonnull %tobsi) #6, !dbg !4496
  %call220 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %call193) #7, !dbg !4497
  %tobool221 = icmp eq %union.tree_node* %call220, null, !dbg !4497
  br i1 %tobool221, label %cleanup226, label %if.then222, !dbg !4499

if.then222:                                       ; preds = %if.end205
  %54 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4500
  %call224 = call fastcc %union.tree_node* @gimple_vop(%struct.function* %54) #7, !dbg !4501
  call void @mark_sym_for_renaming(%union.tree_node* %call224) #6, !dbg !4502
  br label %cleanup226, !dbg !4502

cleanup226:                                       ; preds = %if.end205, %if.then222, %if.then204
  br label %for.cond187

if.end231.loopexit:                               ; preds = %for.cond187
  br label %if.end231, !dbg !4503

if.end231:                                        ; preds = %if.end231.loopexit, %for.end182, %for.body148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4263, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4300
  br label %for.cond145, !dbg !4504, !llvm.loop !4505

for.end233:                                       ; preds = %for.cond145
  %55 = bitcast %struct.basic_block_def** %call136 to i8*, !dbg !4507
  call void @free(i8* %55) #6, !dbg !4508
  call void @htab_delete(%struct.htab* %call135) #6, !dbg !4509
  %call234 = call zeroext i8 @perfect_nest_p(%struct.loop* %loop) #7, !dbg !4510
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !4511
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4511
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4511
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4511
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !4266, metadata !DIExpression(DW_OP_deref)), !dbg !4300
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %insert_after) #8, !dbg !4511
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4511
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4511
  ret i8 %call234, !dbg !4512
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lambda_loop_base_iterate(%struct.VEC_lambda_loop_base* %vec_, i32 %ix_, %struct.lambda_loop_s** %ptr) unnamed_addr #0 !dbg !4513 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_base* %vec_, metadata !4519, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4520, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s** %ptr, metadata !4521, metadata !DIExpression()), !dbg !4522
  %tobool = icmp eq %struct.VEC_lambda_loop_base* %vec_, null, !dbg !4523
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4523

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_lambda_loop_base, %struct.VEC_lambda_loop_base* %vec_, i64 0, i32 0, !dbg !4523
  %0 = load i32, i32* %num, align 8, !dbg !4523
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4523
  br i1 %cmp, label %if.then, label %if.else, !dbg !4525

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4526
  %arrayidx = getelementptr inbounds %struct.VEC_lambda_loop_base, %struct.VEC_lambda_loop_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4526
  %1 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx, align 8, !dbg !4526
  br label %return, !dbg !4526

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4528

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.lambda_loop_s* [ null, %if.else ], [ %1, %if.then ], !dbg !4530
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4530
  store %struct.lambda_loop_s* %storemerge, %struct.lambda_loop_s** %ptr, align 8, !dbg !4530
  ret i32 %retval.0, !dbg !4525
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_lambda_loop_heap_free(%struct.VEC_lambda_loop_heap** %vec_) unnamed_addr #0 !dbg !4531 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_heap** %vec_, metadata !4535, metadata !DIExpression()), !dbg !4536
  %0 = load %struct.VEC_lambda_loop_heap*, %struct.VEC_lambda_loop_heap** %vec_, align 8, !dbg !4537
  %tobool = icmp eq %struct.VEC_lambda_loop_heap* %0, null, !dbg !4537
  br i1 %tobool, label %if.end, label %if.then, !dbg !4539

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_lambda_loop_heap* %0 to i8*, !dbg !4539
  tail call void @free(i8* nonnull %1) #6, !dbg !4537
  br label %if.end, !dbg !4537

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_lambda_loop_heap* null, %struct.VEC_lambda_loop_heap** %vec_, align 8, !dbg !4539
  ret void, !dbg !4539
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !4540 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !4544, metadata !DIExpression()), !dbg !4545
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4546
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !4546
  br i1 %tobool, label %if.end, label %if.then, !dbg !4548

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !4548
  tail call void @free(i8* nonnull %1) #6, !dbg !4546
  br label %if.end, !dbg !4546

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4548
  ret void, !dbg !4548
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !4549 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !4553, metadata !DIExpression()), !dbg !4554
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !4555
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !4555
  br i1 %tobool, label %if.end, label %if.then, !dbg !4557

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !4557
  tail call void @free(i8* nonnull %1) #6, !dbg !4555
  br label %if.end, !dbg !4555

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !4557
  ret void, !dbg !4557
}

; Function Attrs: nounwind uwtable
define dso_local void @remove_iv(%union.gimple_statement_d* %iv_stmt) local_unnamed_addr #5 !dbg !4558 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %iv_stmt, metadata !4562, metadata !DIExpression()), !dbg !4581
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !4582
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4582
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4563, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %si, %union.gimple_statement_d* %iv_stmt) #6, !dbg !4583
  %call = call fastcc i32 @gimple_code(%union.gimple_statement_d* %iv_stmt) #7, !dbg !4584
  %cmp = icmp eq i32 %call, 16, !dbg !4585
  br i1 %cmp, label %for.cond.preheader, label %if.else, !dbg !4586

for.cond.preheader:                               ; preds = %entry
  %1 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !4587
  br label %for.cond, !dbg !4588

for.cond:                                         ; preds = %for.cond.preheader, %cleanup
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %cleanup ], !dbg !4589
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4564, metadata !DIExpression()), !dbg !4590
  %call1 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %iv_stmt) #7, !dbg !4591
  %2 = zext i32 %call1 to i64, !dbg !4592
  %cmp2 = icmp ult i64 %indvars.iv, %2, !dbg !4592
  br i1 %cmp2, label %for.body, label %for.end25, !dbg !4588

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1) #8, !dbg !4593
  %call3 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %iv_stmt, i64 %indvars.iv) #7, !dbg !4594
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !4579, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8 0, metadata !4580, metadata !DIExpression()), !dbg !4587
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4595
  %bf.load = load i64, i64* %3, align 8, !dbg !4595
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4597
  %cmp4 = icmp eq i64 %bf.cast1, 141, !dbg !4597
  br i1 %cmp4, label %if.end, label %cleanup, !dbg !4598

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4587
  %call7 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call3) #7, !dbg !4599
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !4567, metadata !DIExpression()), !dbg !4587
  br label %for.cond8, !dbg !4599

for.cond8:                                        ; preds = %for.inc, %if.end
  %used.0 = phi i8 [ 0, %if.end ], [ %used.1, %for.inc ], !dbg !4601
  %stmt.0 = phi %union.gimple_statement_d* [ %call7, %if.end ], [ %call17, %for.inc ], !dbg !4602
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !4567, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8 %used.0, metadata !4580, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4587
  %call9 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4603
  %tobool = icmp eq i8 %call9, 0, !dbg !4603
  br i1 %tobool, label %for.body10, label %for.end, !dbg !4599

for.body10:                                       ; preds = %for.cond8
  %cmp11 = icmp eq %union.gimple_statement_d* %stmt.0, %iv_stmt, !dbg !4605
  br i1 %cmp11, label %for.inc, label %land.lhs.true, !dbg !4607

land.lhs.true:                                    ; preds = %for.body10
  %call13 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt.0) #7, !dbg !4608
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4608
  %spec.select = select i1 %tobool14, i8 1, i8 %used.0, !dbg !4609
  br label %for.inc, !dbg !4609

for.inc:                                          ; preds = %for.body10, %land.lhs.true
  %used.1 = phi i8 [ %used.0, %for.body10 ], [ %spec.select, %land.lhs.true ], !dbg !4587
  call void @llvm.dbg.value(metadata i8 %used.1, metadata !4580, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4587
  %call17 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4603
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call17, metadata !4567, metadata !DIExpression()), !dbg !4587
  br label %for.cond8, !dbg !4603, !llvm.loop !4610

for.end:                                          ; preds = %for.cond8
  %used.0.lcssa = phi i8 [ %used.0, %for.cond8 ], !dbg !4601
  call void @llvm.dbg.value(metadata i8 %used.0.lcssa, metadata !4580, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8 %used.0.lcssa, metadata !4580, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8 %used.0.lcssa, metadata !4580, metadata !DIExpression()), !dbg !4587
  %tobool18 = icmp eq i8 %used.0.lcssa, 0, !dbg !4612
  br i1 %tobool18, label %if.then19, label %cleanup, !dbg !4614

if.then19:                                        ; preds = %for.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4615
  %4 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4615
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !4615
  call void @remove_iv(%union.gimple_statement_d* %5) #7, !dbg !4616
  br label %cleanup, !dbg !4616

cleanup:                                          ; preds = %for.end, %for.body, %if.then19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1) #8, !dbg !4617
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4618
  br label %for.cond, !dbg !4619, !llvm.loop !4620

for.end25:                                        ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4563, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %si, i8 zeroext 1) #6, !dbg !4622
  br label %if.end26, !dbg !4623

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4563, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %si, i8 zeroext 1) #6, !dbg !4624
  call void @release_defs(%union.gimple_statement_d* %iv_stmt) #6, !dbg !4626
  br label %if.end26

if.end26:                                         ; preds = %if.else, %for.end25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4627
  ret void, !dbg !4627
}

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4628 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4632, metadata !DIExpression()), !dbg !4633
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !4634
  %0 = load i32, i32* %nargs, align 4, !dbg !4634
  ret i32 %0, !dbg !4635
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !4636 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4641, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata i64 %index, metadata !4642, metadata !DIExpression()), !dbg !4645
  %conv = trunc i64 %index to i32, !dbg !4646
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !4647
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !4643, metadata !DIExpression()), !dbg !4645
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !4648
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #7, !dbg !4649
  ret %union.tree_node* %call1, !dbg !4650
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !4651 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4656, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4657, metadata !DIExpression()), !dbg !4658
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4659
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !4660
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !4661
  store i40* %imm_uses, i40** %0, align 8, !dbg !4661
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !4662
  %1 = bitcast i40* %next to i64*, !dbg !4662
  %2 = load i64, i64* %1, align 8, !dbg !4662
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !4663
  store i64 %2, i64* %3, align 8, !dbg !4663
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !4664
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !4665
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !4666
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4667
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !4668
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !4669
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !4670
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !4671
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !4672
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !4673
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !4674
  %tobool = icmp eq i8 %call, 0, !dbg !4674
  br i1 %tobool, label %if.end, label %return, !dbg !4676

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4677
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !4677
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !4678
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !4679
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !4679
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !4679
  br label %return, !dbg !4680

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !4658
  ret %union.gimple_statement_d* %retval.0, !dbg !4681
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !4682 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4688, metadata !DIExpression()), !dbg !4689
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4690
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !4690
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !4691
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !4691
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !4692
  %conv1 = zext i1 %cmp to i8, !dbg !4693
  ret i8 %conv1, !dbg !4694
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4695 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4699, metadata !DIExpression()), !dbg !4700
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4701
  %cmp = icmp eq i32 %call, 2, !dbg !4702
  %conv1 = zext i1 %cmp to i8, !dbg !4701
  ret i8 %conv1, !dbg !4703
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !4704 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4708, metadata !DIExpression()), !dbg !4709
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !4710
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !4710
  %1 = load i64, i64* %0, align 8, !dbg !4710
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !4711
  store i64 %1, i64* %2, align 8, !dbg !4711
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !4712
  %tobool = icmp eq i8 %call, 0, !dbg !4712
  br i1 %tobool, label %if.end4, label %if.then, !dbg !4714

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !4715
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4715
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !4718
  br i1 %cmp, label %return, label %if.then2, !dbg !4719

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !4720
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #7, !dbg !4721
  br label %return, !dbg !4721

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4722
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !4722
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !4723
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !4724
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !4724
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4724
  br label %return, !dbg !4725

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !4709
  ret %union.gimple_statement_d* %retval.0, !dbg !4726
}

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @release_defs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @lambda_loopnest_to_gcc_loopnest(%struct.loop* %old_loopnest, %struct.VEC_tree_heap* %old_ivs, %struct.VEC_tree_heap* %invariants, %struct.VEC_gimple_heap** %remove_ivs, %struct.lambda_loopnest_s* %new_loopnest, %struct.lambda_trans_matrix_s* %transform, %struct.obstack* %lambda_obstack) local_unnamed_addr #5 !dbg !4727 {
entry:
  %new_ivs = alloca %struct.VEC_tree_heap*, align 8
  %oldiv = alloca %union.tree_node*, align 8
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %ivvar = alloca %union.tree_node*, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %insert_after = alloca i8, align 1
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp43 = alloca %struct.gimple_stmt_iterator, align 8
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  %stmts89 = alloca %struct.gimple_seq_d*, align 8
  %tmp116 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %old_loopnest, metadata !4732, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %old_ivs, metadata !4733, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %invariants, metadata !4734, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %remove_ivs, metadata !4735, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %new_loopnest, metadata !4736, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %transform, metadata !4737, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !4738, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata i64 0, metadata !4740, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata i64 0, metadata !4742, metadata !DIExpression()), !dbg !4776
  %0 = bitcast %struct.VEC_tree_heap** %new_ivs to i8*, !dbg !4777
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4777
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !4743, metadata !DIExpression()), !dbg !4776
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %new_ivs, align 8, !dbg !4778
  %1 = bitcast %union.tree_node** %oldiv to i8*, !dbg !4779
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4779
  %2 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4780
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4780
  %call = tail call %struct.lambda_trans_matrix_s* @lambda_trans_matrix_inverse(%struct.lambda_trans_matrix_s* %transform) #6, !dbg !4781
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %call, metadata !4737, metadata !DIExpression()), !dbg !4776
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4782
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !4782
  br i1 %tobool, label %if.end, label %if.then, !dbg !4784

if.then:                                          ; preds = %entry
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4785
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4787
  tail call void @print_lambda_trans_matrix(%struct._IO_FILE* %4, %struct.lambda_trans_matrix_s* %call) #6, !dbg !4788
  br label %if.end, !dbg !4789

if.end:                                           ; preds = %entry, %if.then
  %call2 = tail call fastcc i32 @depth_of_nest(%struct.loop* %old_loopnest) #7, !dbg !4790
  call void @llvm.dbg.value(metadata %struct.loop* %old_loopnest, metadata !4739, metadata !DIExpression()), !dbg !4776
  %5 = bitcast %union.tree_node** %ivvar to i8*, !dbg !4791
  %6 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !4791
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %old_ivs, i64 0, i32 0, !dbg !4791
  %loops = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %new_loopnest, i64 0, i32 0, !dbg !4791
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4791
  %8 = bitcast %union.tree_node** %ivvar to %struct.tree_ssa_name**, !dbg !4791
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp43 to i8*, !dbg !4791
  br label %while.cond, !dbg !4792

while.cond:                                       ; preds = %if.end51, %if.end
  %i.0 = phi i64 [ 0, %if.end ], [ %inc, %if.end51 ], !dbg !4776
  %temp.0 = phi %struct.loop* [ %old_loopnest, %if.end ], [ %43, %if.end51 ], !dbg !4776
  call void @llvm.dbg.value(metadata %struct.loop* %temp.0, metadata !4739, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4740, metadata !DIExpression()), !dbg !4776
  %tobool3 = icmp eq %struct.loop* %temp.0, null, !dbg !4792
  br i1 %tobool3, label %for.cond.preheader, label %while.body, !dbg !4792

for.cond.preheader:                               ; preds = %while.cond
  %10 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !4793
  %11 = bitcast %union.tree_node** %oldiv to %struct.tree_ssa_name**, !dbg !4793
  %12 = bitcast %struct.gimple_seq_d** %stmts89 to i8*, !dbg !4794
  %13 = bitcast %union.tree_node** %oldiv to %struct.tree_common**, !dbg !4794
  %14 = bitcast %struct.gimple_stmt_iterator* %tmp116 to i8*, !dbg !4795
  br label %for.cond, !dbg !4798

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !4799
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !4759, metadata !DIExpression(DW_OP_deref)), !dbg !4791
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %insert_after) #8, !dbg !4801
  %conv5 = trunc i64 %i.0 to i32, !dbg !4802
  %call6 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 %conv5) #7, !dbg !4802
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4744, metadata !DIExpression()), !dbg !4776
  store %union.tree_node* %call6, %union.tree_node** %oldiv, align 8, !dbg !4803
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4804
  %15 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !4804
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !4758, metadata !DIExpression()), !dbg !4791
  %call8 = call %union.tree_node* @create_tmp_var(%union.tree_node* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4805
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4750, metadata !DIExpression()), !dbg !4791
  store %union.tree_node* %call8, %union.tree_node** %ivvar, align 8, !dbg !4806
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4750, metadata !DIExpression()), !dbg !4791
  %call9 = call zeroext i8 @add_referenced_var(%union.tree_node* %call8) #6, !dbg !4807
  %16 = load %union.tree_node*, %union.tree_node** %ivvar, align 8, !dbg !4808
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4750, metadata !DIExpression()), !dbg !4791
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %new_ivs, metadata !4743, metadata !DIExpression(DW_OP_deref)), !dbg !4776
  %call10 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %new_ivs, %union.tree_node* %16) #7, !dbg !4808
  %17 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !4809
  %arrayidx = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %17, i64 %i.0, !dbg !4809
  %18 = load %struct.lambda_loop_s*, %struct.lambda_loop_s** %arrayidx, align 8, !dbg !4809
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %18, metadata !4746, metadata !DIExpression()), !dbg !4791
  %linear_offset = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %18, i64 0, i32 2, !dbg !4810
  %19 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %linear_offset, align 8, !dbg !4810
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %19, metadata !4757, metadata !DIExpression()), !dbg !4791
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %19, i64 0, i32 3, !dbg !4811
  %20 = load i32, i32* %denominator, align 8, !dbg !4811
  %cmp = icmp eq i32 %20, 1, !dbg !4811
  br i1 %cmp, label %land.lhs.true, label %cond.true16, !dbg !4811

land.lhs.true:                                    ; preds = %while.body
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %19, i64 0, i32 0, !dbg !4811
  %21 = load i32*, i32** %coefficients, align 8, !dbg !4811
  %call13 = call fastcc zeroext i8 @lambda_vector_zerop(i32* %21, i32 %call2) #7, !dbg !4811
  %tobool15 = icmp eq i8 %call13, 0, !dbg !4811
  br i1 %tobool15, label %cond.true16, label %cond.end18, !dbg !4811

cond.true16:                                      ; preds = %land.lhs.true, %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4811
  br label %cond.end18, !dbg !4811

cond.end18:                                       ; preds = %land.lhs.true, %cond.true16
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4753, metadata !DIExpression()), !dbg !4791
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !4812
  %lower_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %18, i64 0, i32 0, !dbg !4813
  %22 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %lower_bound, align 8, !dbg !4813
  %23 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %linear_offset, align 8, !dbg !4814
  %24 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_ivs, align 8, !dbg !4815
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %24, metadata !4743, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4753, metadata !DIExpression(DW_OP_deref)), !dbg !4791
  %call21 = call fastcc %union.tree_node* @lle_to_gcc_expression(%struct.lambda_linear_expression_s* %22, %struct.lambda_linear_expression_s* %23, %union.tree_node* %15, %struct.VEC_tree_heap* %24, %struct.VEC_tree_heap* %invariants, i32 81, %struct.gimple_seq_d** nonnull %stmts) #7, !dbg !4816
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !4756, metadata !DIExpression()), !dbg !4791
  %25 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4817
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %25, metadata !4753, metadata !DIExpression()), !dbg !4791
  %tobool22 = icmp eq %struct.gimple_seq_d* %25, null, !dbg !4817
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !4819

if.then23:                                        ; preds = %cond.end18
  %call24 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* nonnull %temp.0) #6, !dbg !4820
  %26 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4822
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %26, metadata !4753, metadata !DIExpression()), !dbg !4791
  call void @gsi_insert_seq_on_edge(%struct.edge_def* %call24, %struct.gimple_seq_d* %26) #6, !dbg !4823
  call void @gsi_commit_edge_inserts() #6, !dbg !4824
  br label %if.end25, !dbg !4825

if.end25:                                         ; preds = %cond.end18, %if.then23
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4753, metadata !DIExpression()), !dbg !4791
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !4826
  %upper_bound = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %18, i64 0, i32 1, !dbg !4827
  %27 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %upper_bound, align 8, !dbg !4827
  %28 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %linear_offset, align 8, !dbg !4828
  %29 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_ivs, align 8, !dbg !4829
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %29, metadata !4743, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4753, metadata !DIExpression(DW_OP_deref)), !dbg !4791
  %call27 = call fastcc %union.tree_node* @lle_to_gcc_expression(%struct.lambda_linear_expression_s* %27, %struct.lambda_linear_expression_s* %28, %union.tree_node* %15, %struct.VEC_tree_heap* %29, %struct.VEC_tree_heap* %invariants, i32 80, %struct.gimple_seq_d** nonnull %stmts) #7, !dbg !4830
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !4755, metadata !DIExpression()), !dbg !4791
  %call28 = call %struct.edge_def* @single_exit(%struct.loop* nonnull %temp.0) #6, !dbg !4831
  call void @llvm.dbg.value(metadata %struct.edge_def* %call28, metadata !4749, metadata !DIExpression()), !dbg !4791
  %call29 = call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* nonnull %temp.0) #6, !dbg !4832
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call29, metadata !4752, metadata !DIExpression()), !dbg !4791
  %call30 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %call29) #7, !dbg !4833
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call30, metadata !4748, metadata !DIExpression()), !dbg !4791
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4834
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call30) #7, !dbg !4834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !4834
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4834
  %30 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4835
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %30, metadata !4753, metadata !DIExpression()), !dbg !4791
  %tobool31 = icmp eq %struct.gimple_seq_d* %30, null, !dbg !4835
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !4837

if.then32:                                        ; preds = %if.end25
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %30, metadata !4753, metadata !DIExpression()), !dbg !4791
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4745, metadata !DIExpression(DW_OP_deref)), !dbg !4776
  call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* nonnull %bsi, %struct.gimple_seq_d* nonnull %30, i32 0) #6, !dbg !4838
  br label %if.end33, !dbg !4838

if.end33:                                         ; preds = %if.end25, %if.then32
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4745, metadata !DIExpression(DW_OP_deref)), !dbg !4776
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !4759, metadata !DIExpression(DW_OP_deref)), !dbg !4791
  call void @standard_iv_increment_position(%struct.loop* nonnull %temp.0, %struct.gimple_stmt_iterator* nonnull %bsi, i8* nonnull %insert_after) #6, !dbg !4839
  %step = getelementptr inbounds %struct.lambda_loop_s, %struct.lambda_loop_s* %18, i64 0, i32 3, !dbg !4840
  %31 = load i32, i32* %step, align 8, !dbg !4840
  %conv34 = sext i32 %31 to i64, !dbg !4840
  %call35 = call %union.tree_node* @build_int_cst(%union.tree_node* %15, i64 %conv34) #6, !dbg !4841
  %32 = load %union.tree_node*, %union.tree_node** %ivvar, align 8, !dbg !4842
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !4750, metadata !DIExpression()), !dbg !4791
  %33 = load i8, i8* %insert_after, align 1, !dbg !4843
  call void @llvm.dbg.value(metadata i8 %33, metadata !4759, metadata !DIExpression()), !dbg !4791
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4745, metadata !DIExpression(DW_OP_deref)), !dbg !4776
  call void @llvm.dbg.value(metadata %union.tree_node** %ivvar, metadata !4750, metadata !DIExpression(DW_OP_deref)), !dbg !4791
  call void @create_iv(%union.tree_node* %call21, %union.tree_node* %call35, %union.tree_node* %32, %struct.loop* nonnull %temp.0, %struct.gimple_stmt_iterator* nonnull %bsi, i8 zeroext %33, %union.tree_node** nonnull %ivvar, %union.tree_node** null) #6, !dbg !4844
  %34 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %8, align 8, !dbg !4845
  %var = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %34, i64 0, i32 1, !dbg !4845
  %35 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4845
  %.cast = bitcast %struct.tree_ssa_name* %34 to %union.tree_node*, !dbg !4845
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !4750, metadata !DIExpression()), !dbg !4791
  %36 = load i32, i32* %step, align 8, !dbg !4845
  %conv37 = sext i32 %36 to i64, !dbg !4845
  %call38 = call %union.tree_node* @build_int_cst(%union.tree_node* %15, i64 %conv37) #6, !dbg !4845
  %call39 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 63, %union.tree_node* %35, %union.tree_node* %.cast, %union.tree_node* %call38) #6, !dbg !4845
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call39, metadata !4760, metadata !DIExpression()), !dbg !4791
  %37 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %8, align 8, !dbg !4846
  %var41 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %37, i64 0, i32 1, !dbg !4846
  %38 = load %union.tree_node*, %union.tree_node** %var41, align 8, !dbg !4846
  %call42 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %38, %union.gimple_statement_d* %call39) #7, !dbg !4847
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !4751, metadata !DIExpression()), !dbg !4791
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call39, %union.tree_node* %call42) #7, !dbg !4848
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4849
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp43, %union.gimple_statement_d* %call29) #6, !dbg !4849
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !4849
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4849
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4745, metadata !DIExpression(DW_OP_deref)), !dbg !4776
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call39, i32 1) #6, !dbg !4850
  %39 = load i32, i32* %step, align 8, !dbg !4851
  %cmp45 = icmp sgt i32 %39, -1, !dbg !4852
  %cond47 = select i1 %cmp45, i32 98, i32 100, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %cond47, metadata !4754, metadata !DIExpression()), !dbg !4791
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call28, i64 0, i32 7, !dbg !4853
  %40 = load i32, i32* %flags, align 8, !dbg !4853
  %and = and i32 %40, 2048, !dbg !4855
  %tobool48 = icmp eq i32 %and, 0, !dbg !4855
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !4856

if.then49:                                        ; preds = %if.end33
  %call50 = call i32 @swap_tree_comparison(i32 %cond47) #6, !dbg !4857
  call void @llvm.dbg.value(metadata i32 %call50, metadata !4754, metadata !DIExpression()), !dbg !4791
  br label %if.end51, !dbg !4858

if.end51:                                         ; preds = %if.end33, %if.then49
  %testtype.0 = phi i32 [ %call50, %if.then49 ], [ %cond47, %if.end33 ], !dbg !4791
  call void @llvm.dbg.value(metadata i32 %testtype.0, metadata !4754, metadata !DIExpression()), !dbg !4791
  call fastcc void @gimple_cond_set_condition(%union.gimple_statement_d* %call29, i32 %testtype.0, %union.tree_node* %call27, %union.tree_node* %call42) #7, !dbg !4859
  call fastcc void @update_stmt(%union.gimple_statement_d* %call29) #7, !dbg !4860
  %41 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_ivs, align 8, !dbg !4861
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %41, metadata !4743, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %41, metadata !4743, metadata !DIExpression()), !dbg !4776
  %base54 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %41, i64 0, i32 0, !dbg !4861
  %42 = load %union.tree_node*, %union.tree_node** %ivvar, align 8, !dbg !4861
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !4750, metadata !DIExpression()), !dbg !4791
  %call59 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base54, i32 %conv5, %union.tree_node* %42) #7, !dbg !4861
  %inc = add i64 %i.0, 1, !dbg !4862
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4740, metadata !DIExpression()), !dbg !4776
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %temp.0, i64 0, i32 8, !dbg !4863
  %43 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !4863
  call void @llvm.dbg.value(metadata %struct.loop* %43, metadata !4739, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !4759, metadata !DIExpression(DW_OP_deref)), !dbg !4791
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %insert_after) #8, !dbg !4864
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !4864
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !4864
  br label %while.cond, !dbg !4792, !llvm.loop !4865

for.cond:                                         ; preds = %for.cond.preheader, %for.end153
  %i.1 = phi i64 [ %inc156, %for.end153 ], [ 0, %for.cond.preheader ], !dbg !4866
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !4740, metadata !DIExpression()), !dbg !4776
  %conv66 = trunc i64 %i.1 to i32, !dbg !4867
  call void @llvm.dbg.value(metadata %union.tree_node** %oldiv, metadata !4744, metadata !DIExpression(DW_OP_deref)), !dbg !4776
  %call67 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %conv66, %union.tree_node** nonnull %oldiv) #7, !dbg !4867
  %tobool68 = icmp eq i32 %call67, 0, !dbg !4798
  br i1 %tobool68, label %for.end157, label %for.body, !dbg !4798

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #8, !dbg !4868
  %44 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %11, align 8, !dbg !4869
  %def_stmt = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %44, i64 0, i32 2, !dbg !4869
  %45 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !4869
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %45, metadata !4767, metadata !DIExpression()), !dbg !4793
  %call70 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %45) #7, !dbg !4870
  %cmp71 = icmp eq i32 %call70, 16, !dbg !4872
  br i1 %cmp71, label %if.then73, label %if.else, !dbg !4873

if.then73:                                        ; preds = %for.body
  %call74 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %45) #7, !dbg !4874
  %call75 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call74) #7, !dbg !4874
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !4766, metadata !DIExpression()), !dbg !4793
  br label %if.end77, !dbg !4875

if.else:                                          ; preds = %for.body
  %call76 = call fastcc %union.tree_node* @single_ssa_tree_operand(%union.gimple_statement_d* %45, i32 2) #7, !dbg !4876
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !4766, metadata !DIExpression()), !dbg !4793
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.then73
  %oldiv_def.0 = phi %union.tree_node* [ %call75, %if.then73 ], [ %call76, %if.else ], !dbg !4877
  call void @llvm.dbg.value(metadata %union.tree_node* %oldiv_def.0, metadata !4766, metadata !DIExpression()), !dbg !4793
  %cmp78 = icmp eq %union.tree_node* %oldiv_def.0, null, !dbg !4878
  br i1 %cmp78, label %cond.true80, label %cond.end82, !dbg !4878

cond.true80:                                      ; preds = %if.end77
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1834, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4878
  br label %cond.end82, !dbg !4878

cond.end82:                                       ; preds = %if.end77, %cond.true80
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4793
  %call84 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %oldiv_def.0) #7, !dbg !4879
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call84, metadata !4768, metadata !DIExpression()), !dbg !4793
  br label %for.cond85, !dbg !4879

for.cond85:                                       ; preds = %cleanup, %cond.end82
  %stmt.0 = phi %union.gimple_statement_d* [ %call84, %cond.end82 ], [ %call152, %cleanup ], !dbg !4880
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !4768, metadata !DIExpression()), !dbg !4793
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4793
  %call86 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4881
  %tobool87 = icmp eq i8 %call86, 0, !dbg !4881
  br i1 %tobool87, label %for.body88, label %for.end153, !dbg !4879

for.body88:                                       ; preds = %for.cond85
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8, !dbg !4882
  %call90 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt.0) #7, !dbg !4883
  %tobool91 = icmp eq i8 %call90, 0, !dbg !4883
  br i1 %tobool91, label %if.end93, label %cleanup, !dbg !4885

if.end93:                                         ; preds = %for.body88
  %46 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_ivs, align 8, !dbg !4886
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %46, metadata !4743, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %46, metadata !4743, metadata !DIExpression()), !dbg !4776
  %base96 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %46, i64 0, i32 0, !dbg !4886
  %call100 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base96) #7, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %call100, metadata !4742, metadata !DIExpression()), !dbg !4776
  %call103 = call %struct.lambda_body_vector_s* @lambda_body_vector_new(i32 %call100, %struct.obstack* %lambda_obstack) #7, !dbg !4887
  call void @llvm.dbg.value(metadata %struct.lambda_body_vector_s* %call103, metadata !4774, metadata !DIExpression()), !dbg !4794
  %coefficients104 = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %call103, i64 0, i32 0, !dbg !4888
  %47 = load i32*, i32** %coefficients104, align 8, !dbg !4888
  %arrayidx105 = getelementptr inbounds i32, i32* %47, i64 %i.1, !dbg !4888
  store i32 1, i32* %arrayidx105, align 4, !dbg !4889
  %call106 = call %struct.lambda_body_vector_s* @lambda_body_vector_compute_new(%struct.lambda_trans_matrix_s* %call, %struct.lambda_body_vector_s* %call103, %struct.obstack* %lambda_obstack) #7, !dbg !4890
  call void @llvm.dbg.value(metadata %struct.lambda_body_vector_s* %call106, metadata !4775, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4773, metadata !DIExpression()), !dbg !4794
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts89, align 8, !dbg !4891
  %48 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !4892
  %type108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %48, i64 0, i32 2, !dbg !4892
  %49 = load %union.tree_node*, %union.tree_node** %type108, align 8, !dbg !4892
  %50 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_ivs, align 8, !dbg !4893
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %50, metadata !4743, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts89, metadata !4773, metadata !DIExpression(DW_OP_deref)), !dbg !4794
  %call109 = call fastcc %union.tree_node* @lbv_to_gcc_expression(%struct.lambda_body_vector_s* %call106, %union.tree_node* %49, %struct.VEC_tree_heap* %50, %struct.gimple_seq_d** nonnull %stmts89) #7, !dbg !4894
  call void @llvm.dbg.value(metadata %union.tree_node* %call109, metadata !4769, metadata !DIExpression()), !dbg !4794
  %51 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts89, align 8, !dbg !4895
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %51, metadata !4773, metadata !DIExpression()), !dbg !4794
  %tobool110 = icmp eq %struct.gimple_seq_d* %51, null, !dbg !4895
  br i1 %tobool110, label %if.end117, label %land.lhs.true111, !dbg !4896

land.lhs.true111:                                 ; preds = %if.end93
  %call112 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #7, !dbg !4897
  %cmp113 = icmp eq i32 %call112, 16, !dbg !4898
  br i1 %cmp113, label %if.end117, label %if.then115, !dbg !4899

if.then115:                                       ; preds = %land.lhs.true111
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8, !dbg !4900
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp116, %union.gimple_statement_d* %stmt.0) #6, !dbg !4900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !4900
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8, !dbg !4900
  %52 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts89, align 8, !dbg !4901
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %52, metadata !4773, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4745, metadata !DIExpression(DW_OP_deref)), !dbg !4776
  call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* nonnull %bsi, %struct.gimple_seq_d* %52, i32 1) #6, !dbg !4902
  br label %if.end117, !dbg !4903

if.end117:                                        ; preds = %land.lhs.true111, %if.end93, %if.then115
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4793
  %call118 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4904
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call118, metadata !4765, metadata !DIExpression()), !dbg !4793
  br label %for.cond119, !dbg !4904

for.cond119:                                      ; preds = %for.body123, %if.end117
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call118, %if.end117 ], [ %call124, %for.body123 ], !dbg !4906
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !4765, metadata !DIExpression()), !dbg !4793
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4793
  %call120 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4907
  %tobool121 = icmp eq i8 %call120, 0, !dbg !4907
  br i1 %tobool121, label %for.body123, label %for.end, !dbg !4904

for.body123:                                      ; preds = %for.cond119
  call void @propagate_value(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %call109) #6, !dbg !4909
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4793
  %call124 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4907
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call124, metadata !4765, metadata !DIExpression()), !dbg !4793
  br label %for.cond119, !dbg !4907, !llvm.loop !4910

for.end:                                          ; preds = %for.cond119
  %53 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts89, align 8, !dbg !4912
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %53, metadata !4773, metadata !DIExpression()), !dbg !4794
  %tobool125 = icmp eq %struct.gimple_seq_d* %53, null, !dbg !4912
  br i1 %tobool125, label %if.end147, label %land.lhs.true126, !dbg !4914

land.lhs.true126:                                 ; preds = %for.end
  %call127 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #7, !dbg !4915
  %cmp128 = icmp eq i32 %call127, 16, !dbg !4916
  br i1 %cmp128, label %for.cond131.preheader, label %if.end147, !dbg !4917

for.cond131.preheader:                            ; preds = %land.lhs.true126
  br label %for.cond131, !dbg !4918

for.cond131:                                      ; preds = %for.cond131.preheader, %for.inc144
  %indvars.iv = phi i64 [ 0, %for.cond131.preheader ], [ %indvars.iv.next, %for.inc144 ], !dbg !4920
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4741, metadata !DIExpression()), !dbg !4776
  %call132 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %stmt.0) #7, !dbg !4921
  %54 = zext i32 %call132 to i64, !dbg !4923
  %cmp133 = icmp ult i64 %indvars.iv, %54, !dbg !4923
  br i1 %cmp133, label %for.body135, label %if.end147.loopexit, !dbg !4918

for.body135:                                      ; preds = %for.cond131
  %call137 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %stmt.0, i64 %indvars.iv) #7, !dbg !4924
  %cmp138 = icmp eq %union.tree_node* %call137, %call109, !dbg !4926
  br i1 %cmp138, label %if.then140, label %for.inc144, !dbg !4927

if.then140:                                       ; preds = %for.body135
  %call142 = call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %stmt.0, i64 %indvars.iv) #7, !dbg !4928
  %55 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts89, align 8, !dbg !4929
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %55, metadata !4773, metadata !DIExpression()), !dbg !4794
  call void @gsi_insert_seq_on_edge(%struct.edge_def* %call142, %struct.gimple_seq_d* %55) #6, !dbg !4930
  br label %for.inc144, !dbg !4930

for.inc144:                                       ; preds = %for.body135, %if.then140
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4931
  br label %for.cond131, !dbg !4932, !llvm.loop !4933

if.end147.loopexit:                               ; preds = %for.cond131
  br label %if.end147, !dbg !4935

if.end147:                                        ; preds = %if.end147.loopexit, %for.end, %land.lhs.true126
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt.0) #7, !dbg !4935
  br label %cleanup, !dbg !4936

cleanup:                                          ; preds = %for.body88, %if.end147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8, !dbg !4936
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4793
  %call152 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4881
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call152, metadata !4768, metadata !DIExpression()), !dbg !4793
  br label %for.cond85, !dbg !4881, !llvm.loop !4937

for.end153:                                       ; preds = %for.cond85
  %call154 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %remove_ivs, %union.gimple_statement_d* %45) #7, !dbg !4939
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #8, !dbg !4940
  %inc156 = add i64 %i.1, 1, !dbg !4941
  call void @llvm.dbg.value(metadata i64 %inc156, metadata !4740, metadata !DIExpression()), !dbg !4776
  br label %for.cond, !dbg !4942, !llvm.loop !4943

for.end157:                                       ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %new_ivs, metadata !4743, metadata !DIExpression(DW_OP_deref)), !dbg !4776
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %new_ivs) #7, !dbg !4945
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4946
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4946
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4946
  ret void, !dbg !4946
}

declare dso_local %struct.lambda_trans_matrix_s* @lambda_trans_matrix_inverse(%struct.lambda_trans_matrix_s*) local_unnamed_addr #2

declare dso_local void @print_lambda_trans_matrix(%struct._IO_FILE*, %struct.lambda_trans_matrix_s*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4947 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4953, metadata !DIExpression()), !dbg !4955
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4954, metadata !DIExpression()), !dbg !4955
  br label %land.end, !dbg !4956

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4956
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4956
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4956
  ret %union.tree_node* %0, !dbg !4956
}

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lle_to_gcc_expression(%struct.lambda_linear_expression_s* %lle, %struct.lambda_linear_expression_s* %offset, %union.tree_node* %type, %struct.VEC_tree_heap* %induction_vars, %struct.VEC_tree_heap* %invariants, i32 %wrap, %struct.gimple_seq_d** %stmts_to_insert) unnamed_addr #5 !dbg !4957 {
entry:
  %results = alloca %struct.VEC_tree_heap*, align 8
  %op = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle, metadata !4962, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %offset, metadata !4963, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4964, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %induction_vars, metadata !4965, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %invariants, metadata !4966, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i32 %wrap, metadata !4967, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts_to_insert, metadata !4968, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4971, metadata !DIExpression()), !dbg !4977
  %0 = bitcast %struct.VEC_tree_heap** %results to i8*, !dbg !4978
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4978
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !4972, metadata !DIExpression()), !dbg !4977
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %results, align 8, !dbg !4979
  %1 = and i32 %wrap, -2, !dbg !4980
  %switch = icmp eq i32 %1, 80, !dbg !4980
  br i1 %switch, label %cond.end, label %cond.true, !dbg !4980

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1590, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4980
  br label %cond.end, !dbg !4980

cond.end:                                         ; preds = %entry, %cond.true
  %constant7 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %offset, i64 0, i32 1, !dbg !4981
  %cmp17 = icmp eq i32 %wrap, 81, !dbg !4985
  %cond19 = select i1 %cmp17, i32 68, i32 69, !dbg !4985
  br label %for.cond, !dbg !4987

for.cond:                                         ; preds = %if.end23, %cond.end
  %expr.0 = phi %union.tree_node* [ null, %cond.end ], [ %call24, %if.end23 ], !dbg !4977
  %lle.addr.0 = phi %struct.lambda_linear_expression_s* [ %lle, %cond.end ], [ %7, %if.end23 ]
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.addr.0, metadata !4962, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !4971, metadata !DIExpression()), !dbg !4977
  %cmp2 = icmp eq %struct.lambda_linear_expression_s* %lle.addr.0, null, !dbg !4988
  br i1 %cmp2, label %for.end, label %for.body, !dbg !4989

for.body:                                         ; preds = %for.cond
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle.addr.0, i64 0, i32 0, !dbg !4990
  %2 = load i32*, i32** %coefficients, align 8, !dbg !4990
  %call = call fastcc %union.tree_node* @build_linear_expr(%union.tree_node* %type, i32* %2, %struct.VEC_tree_heap* %induction_vars) #7, !dbg !4991
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4971, metadata !DIExpression()), !dbg !4977
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle.addr.0, i64 0, i32 2, !dbg !4992
  %3 = load i32*, i32** %invariant_coefficients, align 8, !dbg !4992
  %call3 = call fastcc %union.tree_node* @build_linear_expr(%union.tree_node* %type, i32* %3, %struct.VEC_tree_heap* %invariants) #7, !dbg !4992
  %call4 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %type, %union.tree_node* %call, %union.tree_node* %call3) #6, !dbg !4992
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4971, metadata !DIExpression()), !dbg !4977
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle.addr.0, i64 0, i32 1, !dbg !4993
  %4 = load i32, i32* %constant, align 8, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %4, metadata !4969, metadata !DIExpression()), !dbg !4977
  %tobool = icmp eq i32 %4, 0, !dbg !4994
  br i1 %tobool, label %if.end, label %if.then, !dbg !4996

if.then:                                          ; preds = %for.body
  %conv = sext i32 %4 to i64, !dbg !4997
  %call5 = call %union.tree_node* @build_int_cst(%union.tree_node* %type, i64 %conv) #6, !dbg !4997
  %call6 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %type, %union.tree_node* %call4, %union.tree_node* %call5) #6, !dbg !4997
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4971, metadata !DIExpression()), !dbg !4977
  br label %if.end, !dbg !4998

if.end:                                           ; preds = %for.body, %if.then
  %expr.1 = phi %union.tree_node* [ %call6, %if.then ], [ %call4, %for.body ], !dbg !4981
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1, metadata !4971, metadata !DIExpression()), !dbg !4977
  %5 = load i32, i32* %constant7, align 8, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %5, metadata !4969, metadata !DIExpression()), !dbg !4977
  %tobool8 = icmp eq i32 %5, 0, !dbg !5000
  br i1 %tobool8, label %if.end13, label %if.then9, !dbg !5002

if.then9:                                         ; preds = %if.end
  %conv10 = sext i32 %5 to i64, !dbg !5003
  %call11 = call %union.tree_node* @build_int_cst(%union.tree_node* %type, i64 %conv10) #6, !dbg !5003
  %call12 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %type, %union.tree_node* %expr.1, %union.tree_node* %call11) #6, !dbg !5003
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4971, metadata !DIExpression()), !dbg !4977
  br label %if.end13, !dbg !5004

if.end13:                                         ; preds = %if.end, %if.then9
  %expr.2 = phi %union.tree_node* [ %call12, %if.then9 ], [ %expr.1, %if.end ], !dbg !4981
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.2, metadata !4971, metadata !DIExpression()), !dbg !4977
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle.addr.0, i64 0, i32 3, !dbg !5005
  %6 = load i32, i32* %denominator, align 8, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %6, metadata !4969, metadata !DIExpression()), !dbg !4977
  %cmp14 = icmp eq i32 %6, 1, !dbg !5006
  br i1 %cmp14, label %if.end23, label %if.then16, !dbg !5007

if.then16:                                        ; preds = %if.end13
  %conv20 = sext i32 %6 to i64, !dbg !5008
  %call21 = call %union.tree_node* @build_int_cst(%union.tree_node* %type, i64 %conv20) #6, !dbg !5008
  %call22 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %cond19, %union.tree_node* %type, %union.tree_node* %expr.2, %union.tree_node* %call21) #6, !dbg !5008
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !4971, metadata !DIExpression()), !dbg !4977
  br label %if.end23, !dbg !5009

if.end23:                                         ; preds = %if.end13, %if.then16
  %expr.3 = phi %union.tree_node* [ %call22, %if.then16 ], [ %expr.2, %if.end13 ], !dbg !4981
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.3, metadata !4971, metadata !DIExpression()), !dbg !4977
  %call24 = call %union.tree_node* @fold(%union.tree_node* %expr.3) #6, !dbg !5010
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %results, metadata !4972, metadata !DIExpression(DW_OP_deref)), !dbg !4977
  %call25 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %results, %union.tree_node* %call24) #7, !dbg !5011
  %next = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle.addr.0, i64 0, i32 4, !dbg !5012
  %7 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %next, align 8, !dbg !5012
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %7, metadata !4962, metadata !DIExpression()), !dbg !4977
  br label %for.cond, !dbg !5013, !llvm.loop !5014

for.end:                                          ; preds = %for.cond
  %expr.0.lcssa = phi %union.tree_node* [ %expr.0, %for.cond ], !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0.lcssa, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0.lcssa, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0.lcssa, metadata !4971, metadata !DIExpression()), !dbg !4977
  %tobool26 = icmp eq %union.tree_node* %expr.0.lcssa, null, !dbg !5016
  br i1 %tobool26, label %cond.true27, label %cond.end29, !dbg !5016

cond.true27:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1618, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5016
  br label %cond.end29, !dbg !5016

cond.end29:                                       ; preds = %for.end, %cond.true27
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %results, align 8, !dbg !5017
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !4972, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !4972, metadata !DIExpression()), !dbg !4977
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !5017
  %call36 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !5017
  %cmp37 = icmp ugt i32 %call36, 1, !dbg !5018
  br i1 %cmp37, label %if.then39, label %if.end61, !dbg !5019

if.then39:                                        ; preds = %cond.end29
  %9 = bitcast %union.tree_node** %op to i8*, !dbg !5020
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !5020
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %results, align 8, !dbg !5021
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !4972, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !4972, metadata !DIExpression()), !dbg !4977
  %base42 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !5021
  %call46 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base42, i32 0) #7, !dbg !5021
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i64 1, metadata !4973, metadata !DIExpression()), !dbg !5022
  br label %for.cond47, !dbg !5023

for.cond47:                                       ; preds = %for.body57, %if.then39
  %expr.4 = phi %union.tree_node* [ %call46, %if.then39 ], [ %call58, %for.body57 ], !dbg !5022
  %i.0 = phi i64 [ 1, %if.then39 ], [ %inc, %for.body57 ], !dbg !5025
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4973, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.4, metadata !4971, metadata !DIExpression()), !dbg !4977
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %results, align 8, !dbg !5026
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %11, metadata !4972, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %11, metadata !4972, metadata !DIExpression()), !dbg !4977
  %base50 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %11, i64 0, i32 0, !dbg !5026
  %conv54 = trunc i64 %i.0 to i32, !dbg !5026
  call void @llvm.dbg.value(metadata %union.tree_node** %op, metadata !4976, metadata !DIExpression(DW_OP_deref)), !dbg !5022
  %call55 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base50, i32 %conv54, %union.tree_node** nonnull %op) #7, !dbg !5026
  %tobool56 = icmp eq i32 %call55, 0, !dbg !5028
  br i1 %tobool56, label %for.end60, label %for.body57, !dbg !5028

for.body57:                                       ; preds = %for.cond47
  %12 = load %union.tree_node*, %union.tree_node** %op, align 8, !dbg !5029
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !4976, metadata !DIExpression()), !dbg !5022
  %call58 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %wrap, %union.tree_node* %type, %union.tree_node* %expr.4, %union.tree_node* %12) #6, !dbg !5029
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !4971, metadata !DIExpression()), !dbg !4977
  %inc = add i64 %i.0, 1, !dbg !5030
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4973, metadata !DIExpression()), !dbg !5022
  br label %for.cond47, !dbg !5031, !llvm.loop !5032

for.end60:                                        ; preds = %for.cond47
  %expr.4.lcssa = phi %union.tree_node* [ %expr.4, %for.cond47 ], !dbg !5022
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.4.lcssa, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.4.lcssa, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.4.lcssa, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !5034
  br label %if.end61, !dbg !5035

if.end61:                                         ; preds = %for.end60, %cond.end29
  %expr.5 = phi %union.tree_node* [ %expr.4.lcssa, %for.end60 ], [ %expr.0.lcssa, %cond.end29 ], !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.5, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %results, metadata !4972, metadata !DIExpression(DW_OP_deref)), !dbg !4977
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %results) #7, !dbg !5036
  %call62 = call %union.tree_node* @create_tmp_var(%union.tree_node* %type, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !5037
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !4970, metadata !DIExpression()), !dbg !4977
  %call63 = call zeroext i8 @add_referenced_var(%union.tree_node* %call62) #6, !dbg !5038
  %call64 = call %union.tree_node* @fold(%union.tree_node* %expr.5) #6, !dbg !5039
  %call65 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call64, %struct.gimple_seq_d** %stmts_to_insert, i8 zeroext 1, %union.tree_node* %call62) #6, !dbg !5040
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5041
  ret %union.tree_node* %call65, !dbg !5042
}

declare dso_local void @gsi_insert_seq_on_edge(%struct.edge_def*, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local void @gsi_commit_edge_inserts() local_unnamed_addr #2

declare dso_local %struct.edge_def* @single_exit(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5043 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5047, metadata !DIExpression()), !dbg !5048
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5049
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5049
  ret %struct.basic_block_def* %0, !dbg !5050
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5051 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5055, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5056, metadata !DIExpression()), !dbg !5058
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !5059
  br label %while.cond, !dbg !5060

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !5061
  %tobool = icmp eq i8 %call, 0, !dbg !5061
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !5062

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !5063
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !5064
  %cmp = icmp eq i32 %call2, 4, !dbg !5065
  br i1 %cmp, label %while.body, label %while.end, !dbg !5060

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !5066
  br label %while.cond, !dbg !5060, !llvm.loop !5067

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !5069
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local void @gsi_insert_seq_before(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

declare dso_local void @standard_iv_increment_position(%struct.loop*, %struct.gimple_stmt_iterator*, i8*) local_unnamed_addr #2

declare dso_local void @create_iv(%union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.loop*, %struct.gimple_stmt_iterator*, i8 zeroext, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5070 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5074, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5075, metadata !DIExpression()), !dbg !5076
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5077
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !5078
  ret %union.tree_node* %call, !dbg !5079
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !5080 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5084, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5085, metadata !DIExpression()), !dbg !5086
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !5087
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !5088
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5090

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5091
  %bf.load = load i64, i64* %0, align 8, !dbg !5091
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5092
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5092
  br i1 %cmp, label %if.then, label %if.end, !dbg !5093

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5094
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5094
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !5095
  br label %if.end, !dbg !5094

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !5096
}

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local i32 @swap_tree_comparison(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_condition(%union.gimple_statement_d* %stmt, i32 %code, %union.tree_node* %lhs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !5097 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5101, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata i32 %code, metadata !5102, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5103, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !5104, metadata !DIExpression()), !dbg !5105
  tail call fastcc void @gimple_cond_set_code(%union.gimple_statement_d* %stmt, i32 %code) #7, !dbg !5106
  tail call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %stmt, %union.tree_node* %lhs) #7, !dbg !5107
  tail call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %stmt, %union.tree_node* %rhs) #7, !dbg !5108
  ret void, !dbg !5109
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !5110 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !5112, metadata !DIExpression()), !dbg !5113
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !5114
  %tobool = icmp eq i8 %call, 0, !dbg !5114
  br i1 %tobool, label %if.end, label %if.then, !dbg !5116

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !5117
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !5119
  br label %if.end, !dbg !5120

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5121
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5122 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5127, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5128, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5129, metadata !DIExpression()), !dbg !5131
  %idxprom = zext i32 %ix_ to i64, !dbg !5132
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5132
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5132
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5130, metadata !DIExpression()), !dbg !5131
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5132
  ret %union.tree_node* %0, !dbg !5132
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !5133 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5137, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5138, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !5139, metadata !DIExpression()), !dbg !5140
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5141
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5141

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5141
  %0 = load i32, i32* %num, align 8, !dbg !5141
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5141
  br i1 %cmp, label %if.then, label %if.else, !dbg !5143

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5144
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5144
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5144
  br label %return, !dbg !5144

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5146

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !5148
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5148
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !5148
  ret i32 %retval.0, !dbg !5143
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5149 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5154, metadata !DIExpression()), !dbg !5155
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5156
  ret %union.tree_node* %0, !dbg !5157
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5158 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5162, metadata !DIExpression()), !dbg !5163
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5164
  ret %union.tree_node** %result, !dbg !5165
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @single_ssa_tree_operand(%union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5166 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5170, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5171, metadata !DIExpression()), !dbg !5186
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5187
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5187
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5173, metadata !DIExpression(DW_OP_deref)), !dbg !5186
  %call = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !5188
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5172, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5173, metadata !DIExpression(DW_OP_deref)), !dbg !5186
  %call1 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5189
  %tobool = icmp eq i8 %call1, 0, !dbg !5189
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5191

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5173, metadata !DIExpression(DW_OP_deref)), !dbg !5186
  %call2 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5192
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5173, metadata !DIExpression(DW_OP_deref)), !dbg !5186
  %call3 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5193
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5193
  %call. = select i1 %tobool4, %union.tree_node* null, %union.tree_node* %call, !dbg !5186
  br label %cleanup, !dbg !5186

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %call., %if.end ], !dbg !5186
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5195
  ret %union.tree_node* %retval.0, !dbg !5195
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !5196 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5200, metadata !DIExpression()), !dbg !5201
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5202
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5202

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5202
  %0 = load i32, i32* %num, align 8, !dbg !5202
  br label %cond.end, !dbg !5202

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5202
  ret i32 %cond, !dbg !5202
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lbv_to_gcc_expression(%struct.lambda_body_vector_s* %lbv, %union.tree_node* %type, %struct.VEC_tree_heap* %induction_vars, %struct.gimple_seq_d** %stmts_to_insert) unnamed_addr #5 !dbg !5203 {
entry:
  call void @llvm.dbg.value(metadata %struct.lambda_body_vector_s* %lbv, metadata !5207, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5208, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %induction_vars, metadata !5209, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts_to_insert, metadata !5210, metadata !DIExpression()), !dbg !5214
  %coefficients = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %lbv, i64 0, i32 0, !dbg !5215
  %0 = load i32*, i32** %coefficients, align 8, !dbg !5215
  %call = tail call fastcc %union.tree_node* @build_linear_expr(%union.tree_node* %type, i32* %0, %struct.VEC_tree_heap* %induction_vars) #7, !dbg !5216
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5213, metadata !DIExpression()), !dbg !5214
  %denominator = getelementptr inbounds %struct.lambda_body_vector_s, %struct.lambda_body_vector_s* %lbv, i64 0, i32 2, !dbg !5217
  %1 = load i32, i32* %denominator, align 4, !dbg !5217
  call void @llvm.dbg.value(metadata i32 %1, metadata !5211, metadata !DIExpression()), !dbg !5214
  switch i32 %1, label %if.then [
    i32 0, label %cond.true
    i32 1, label %if.end
  ], !dbg !5218

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5218
  br label %if.then, !dbg !5219

if.then:                                          ; preds = %cond.true, %entry
  %conv = sext i32 %1 to i64, !dbg !5220
  %call2 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %type, i64 %conv) #6, !dbg !5220
  %call3 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 68, %union.tree_node* %type, %union.tree_node* %call, %union.tree_node* %call2) #6, !dbg !5220
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5213, metadata !DIExpression()), !dbg !5214
  br label %if.end, !dbg !5222

if.end:                                           ; preds = %entry, %if.then
  %expr.0 = phi %union.tree_node* [ %call3, %if.then ], [ %call, %entry ], !dbg !5214
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !5213, metadata !DIExpression()), !dbg !5214
  %call4 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %type, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !5223
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5212, metadata !DIExpression()), !dbg !5214
  %call5 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call4) #6, !dbg !5224
  %call6 = tail call %union.tree_node* @fold(%union.tree_node* %expr.0) #6, !dbg !5225
  %call7 = tail call %union.tree_node* @force_gimple_operand(%union.tree_node* %call6, %struct.gimple_seq_d** %stmts_to_insert, i8 zeroext 1, %union.tree_node* %call4) #6, !dbg !5226
  ret %union.tree_node* %call7, !dbg !5227
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5228 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5232, metadata !DIExpression()), !dbg !5233
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5234
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5234
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !5235
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5235
  %2 = load i64, i64* %1, align 8, !dbg !5235
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !5236
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !5237
  store i64 %2, i64* %3, align 8, !dbg !5237
  ret %struct.ssa_use_operand_d* %0, !dbg !5238
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5239 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5241, metadata !DIExpression()), !dbg !5242
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5243
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5243
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !5244
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !5245
  %conv1 = zext i1 %cmp to i8, !dbg !5246
  ret i8 %conv1, !dbg !5247
}

declare dso_local void @propagate_value(%struct.ssa_use_operand_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5248 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5250, metadata !DIExpression()), !dbg !5251
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !5252
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !5252
  %1 = load i64, i64* %0, align 8, !dbg !5252
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5253
  store i64 %1, i64* %2, align 8, !dbg !5253
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !5254
  %tobool = icmp eq i8 %call, 0, !dbg !5254
  br i1 %tobool, label %if.else, label %return, !dbg !5256

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5257
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !5257
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !5259
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5259
  %5 = load i64, i64* %4, align 8, !dbg !5259
  store i64 %5, i64* %0, align 8, !dbg !5260
  br label %return, !dbg !5261

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !5262
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5263
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !5264 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i64 %i, metadata !5269, metadata !DIExpression()), !dbg !5270
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !5271
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !5271
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5271
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5271
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5271

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !5271
  %preds2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call1, i64 0, i32 0, !dbg !5271
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds2, align 8, !dbg !5271
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !5271
  br label %cond.end, !dbg !5271

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5271
  %conv = trunc i64 %i to i32, !dbg !5271
  %call3 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !5271
  ret %struct.edge_def* %call3, !dbg !5272
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !5273 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !5278, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !5279, metadata !DIExpression()), !dbg !5280
  %call = tail call fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 1) #7, !dbg !5281
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !5281
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !5281
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5281

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !5281
  br label %cond.end, !dbg !5281

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5281
  %call1 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond, %union.gimple_statement_d* %obj_) #7, !dbg !5281
  ret %union.gimple_statement_d** %call1, !dbg !5281
}

declare dso_local %struct.basic_block_def** @get_loop_body(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5282 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5284, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5285, metadata !DIExpression()), !dbg !5288
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !5289
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5286, metadata !DIExpression()), !dbg !5287
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !5290
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5291
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5292
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5293
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5294
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5295
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5296
  ret void, !dbg !5297
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5298 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5302, metadata !DIExpression()), !dbg !5303
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5304
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5304
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5305
  %conv1 = zext i1 %cmp to i8, !dbg !5306
  ret i8 %conv1, !dbg !5307
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5308 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5312, metadata !DIExpression()), !dbg !5313
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5314
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5314
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !5315
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5315
  ret %union.gimple_statement_d* %1, !dbg !5316
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @not_interesting_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5317 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5321, metadata !DIExpression()), !dbg !5322
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5323
  %cmp = icmp eq i32 %call, 4, !dbg !5325
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !5326

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5327
  %cmp2 = icmp eq i32 %call1, 3, !dbg !5328
  br i1 %cmp2, label %return, label %lor.lhs.false3, !dbg !5329

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5330
  %cmp5 = icmp eq i32 %call4, 1, !dbg !5331
  br i1 %cmp5, label %return, label %lor.lhs.false6, !dbg !5332

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %call7 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !5333
  %tobool = icmp ne i8 %call7, 0, !dbg !5333
  %spec.select = zext i1 %tobool to i8, !dbg !5334
  ret i8 %spec.select, !dbg !5334

return:                                           ; preds = %entry, %lor.lhs.false, %lor.lhs.false3
  ret i8 1, !dbg !5335
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @stmt_is_bumper_for_loop(%struct.loop* %loop, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5336 {
entry:
  %iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5340, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5341, metadata !DIExpression()), !dbg !5346
  %0 = bitcast %struct.immediate_use_iterator_d* %iter to i8*, !dbg !5347
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5347
  %call = tail call fastcc %union.tree_node* @single_ssa_tree_operand(%union.gimple_statement_d* %stmt, i32 2) #7, !dbg !5348
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5343, metadata !DIExpression()), !dbg !5346
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !5349
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5351

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !5344, metadata !DIExpression(DW_OP_deref)), !dbg !5346
  %call1 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %iter, %union.tree_node* nonnull %call) #7, !dbg !5352
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call1, metadata !5345, metadata !DIExpression()), !dbg !5346
  br label %for.cond, !dbg !5352

for.cond:                                         ; preds = %for.inc, %if.end
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call1, %if.end ], [ %call18, %for.inc ], !dbg !5354
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5345, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !5344, metadata !DIExpression(DW_OP_deref)), !dbg !5346
  %call2 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !5355
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5355
  br i1 %tobool3, label %for.body, label %cleanup.loopexit, !dbg !5352

for.body:                                         ; preds = %for.cond
  %stmt4 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !5357
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt4, align 8, !dbg !5357
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5342, metadata !DIExpression()), !dbg !5346
  %call5 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !5359
  %cmp = icmp eq i32 %call5, 16, !dbg !5361
  br i1 %cmp, label %if.then6, label %for.inc, !dbg !5362

if.then6:                                         ; preds = %for.body
  %call7 = call fastcc zeroext i8 @phi_loop_edge_uses_def(%struct.loop* %loop, %union.gimple_statement_d* %1, %union.tree_node* nonnull %call) #7, !dbg !5363
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5363
  br i1 %tobool8, label %for.inc, label %if.then9, !dbg !5366

if.then9:                                         ; preds = %if.then6
  %call10 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %1) #7, !dbg !5367
  %call11 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call10) #7, !dbg !5367
  %call12 = call fastcc zeroext i8 @stmt_uses_phi_result(%union.gimple_statement_d* %stmt, %union.tree_node* %call11) #7, !dbg !5369
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5369
  br i1 %tobool13, label %for.inc, label %cleanup.loopexit, !dbg !5370

for.inc:                                          ; preds = %if.then9, %if.then6, %for.body
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !5344, metadata !DIExpression(DW_OP_deref)), !dbg !5346
  %call18 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !5355
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call18, metadata !5345, metadata !DIExpression()), !dbg !5346
  br label %for.cond, !dbg !5355, !llvm.loop !5371

cleanup.loopexit:                                 ; preds = %for.cond, %if.then9
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %if.then9 ]
  br label %cleanup, !dbg !5373

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5346
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5373
  ret i8 %retval.0, !dbg !5373
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5374 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5379, metadata !DIExpression()), !dbg !5380
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5381
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5381
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5382
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5382
  %2 = load i64, i64* %1, align 8, !dbg !5382
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5383
  store i64 %2, i64* %3, align 8, !dbg !5383
  ret void, !dbg !5384
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @lambda_transform_legal_p(%struct.lambda_trans_matrix_s* %trans, i32 %nb_loops, %struct.VEC_ddr_p_heap* %dependence_relations) local_unnamed_addr #5 !dbg !5385 {
entry:
  %ddr = alloca %struct.data_dependence_relation*, align 8
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %trans, metadata !5401, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.value(metadata i32 %nb_loops, metadata !5402, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %dependence_relations, metadata !5403, metadata !DIExpression()), !dbg !5408
  %0 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !5409
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5409
  %colsize = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %trans, i64 0, i32 2, !dbg !5410
  %1 = load i32, i32* %colsize, align 4, !dbg !5410
  %cmp = icmp eq i32 %1, %nb_loops, !dbg !5410
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !5410

land.lhs.true:                                    ; preds = %entry
  %rowsize = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %trans, i64 0, i32 1, !dbg !5410
  %2 = load i32, i32* %rowsize, align 8, !dbg !5410
  %cmp1 = icmp eq i32 %2, %nb_loops, !dbg !5410
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !5410

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2608, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5410
  br label %cond.end, !dbg !5410

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %dependence_relations, i64 0, i32 0, !dbg !5411
  %call = tail call fastcc i32 @VEC_ddr_p_base_length(%struct.VEC_ddr_p_base* %base) #7, !dbg !5411
  %cmp6 = icmp eq i32 %call, 0, !dbg !5413
  br i1 %cmp6, label %cleanup, label %if.end, !dbg !5414

if.end:                                           ; preds = %cond.end
  %call13 = tail call fastcc %struct.data_dependence_relation* @VEC_ddr_p_base_index(%struct.VEC_ddr_p_base* %base, i32 0) #7, !dbg !5415
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %call13, metadata !5407, metadata !DIExpression()), !dbg !5408
  store %struct.data_dependence_relation* %call13, %struct.data_dependence_relation** %ddr, align 8, !dbg !5416
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %call13, metadata !5407, metadata !DIExpression()), !dbg !5408
  %cmp14 = icmp eq %struct.data_dependence_relation* %call13, null, !dbg !5417
  br i1 %cmp14, label %cleanup, label %if.end16, !dbg !5419

if.end16:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %call13, metadata !5407, metadata !DIExpression()), !dbg !5408
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %call13, i64 0, i32 2, !dbg !5420
  %3 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !5420
  %4 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5422
  %cmp17 = icmp eq %union.tree_node* %3, %4, !dbg !5423
  br i1 %cmp17, label %cleanup, label %if.end19, !dbg !5424

if.end19:                                         ; preds = %if.end16
  %call20 = tail call fastcc i32* @lambda_vector_new(i32 %nb_loops) #7, !dbg !5425
  call void @llvm.dbg.value(metadata i32* %call20, metadata !5406, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.value(metadata i32 0, metadata !5404, metadata !DIExpression()), !dbg !5408
  %matrix = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %trans, i64 0, i32 0, !dbg !5426
  br label %for.cond, !dbg !5433

for.cond:                                         ; preds = %for.inc81, %if.end19
  %i.0 = phi i32 [ 0, %if.end19 ], [ %inc82, %for.inc81 ], !dbg !5434
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5404, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !5407, metadata !DIExpression(DW_OP_deref)), !dbg !5408
  %call27 = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #7, !dbg !5435
  %tobool28 = icmp eq i32 %call27, 0, !dbg !5436
  br i1 %tobool28, label %cleanup.loopexit1, label %for.body, !dbg !5436

for.body:                                         ; preds = %for.cond
  %5 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !5437
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !5407, metadata !DIExpression()), !dbg !5408
  %are_dependent29 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %5, i64 0, i32 2, !dbg !5437
  %6 = load %union.tree_node*, %union.tree_node** %are_dependent29, align 8, !dbg !5437
  %7 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !5439
  %cmp30 = icmp eq %union.tree_node* %6, %7, !dbg !5440
  br i1 %cmp30, label %for.inc81, label %lor.lhs.false, !dbg !5441

lor.lhs.false:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !5407, metadata !DIExpression()), !dbg !5408
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %5, i64 0, i32 0, !dbg !5442
  %8 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !5442
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %8, i64 0, i32 3, !dbg !5442
  %9 = load i8, i8* %is_read, align 8, !dbg !5442
  %tobool31 = icmp eq i8 %9, 0, !dbg !5442
  br i1 %tobool31, label %if.end37, label %land.lhs.true32, !dbg !5443

land.lhs.true32:                                  ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !5407, metadata !DIExpression()), !dbg !5408
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %5, i64 0, i32 1, !dbg !5444
  %10 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !5444
  %is_read33 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %10, i64 0, i32 3, !dbg !5444
  %11 = load i8, i8* %is_read33, align 8, !dbg !5444
  %tobool35 = icmp eq i8 %11, 0, !dbg !5444
  br i1 %tobool35, label %if.end37, label %for.inc81, !dbg !5445

if.end37:                                         ; preds = %land.lhs.true32, %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !5407, metadata !DIExpression()), !dbg !5408
  %12 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5446
  %cmp39 = icmp eq %union.tree_node* %6, %12, !dbg !5448
  br i1 %cmp39, label %cleanup.loopexit1, label %if.end42, !dbg !5449

if.end42:                                         ; preds = %if.end37
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !5407, metadata !DIExpression()), !dbg !5408
  %dist_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %5, i64 0, i32 6, !dbg !5450
  %13 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !5450
  %tobool43 = icmp eq %struct.VEC_lambda_vector_heap* %13, null, !dbg !5450
  br i1 %tobool43, label %cond.end48, label %cond.true44, !dbg !5450

cond.true44:                                      ; preds = %if.end42
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !5407, metadata !DIExpression()), !dbg !5408
  %base46 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %13, i64 0, i32 0, !dbg !5450
  br label %cond.end48, !dbg !5450

cond.end48:                                       ; preds = %if.end42, %cond.true44
  %cond49 = phi %struct.VEC_lambda_vector_base* [ %base46, %cond.true44 ], [ null, %if.end42 ], !dbg !5450
  %call50 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond49) #7, !dbg !5450
  %cmp51 = icmp eq i32 %call50, 0, !dbg !5452
  br i1 %cmp51, label %cleanup.loopexit1, label %for.cond55.preheader, !dbg !5453

for.cond55.preheader:                             ; preds = %cond.end48
  br label %for.cond55, !dbg !5454

for.cond55:                                       ; preds = %for.cond55.preheader, %for.inc
  %j.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond55.preheader ], !dbg !5455
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5405, metadata !DIExpression()), !dbg !5408
  %14 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !5456
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %14, metadata !5407, metadata !DIExpression()), !dbg !5408
  %dist_vects56 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %14, i64 0, i32 6, !dbg !5456
  %15 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects56, align 8, !dbg !5456
  %tobool57 = icmp eq %struct.VEC_lambda_vector_heap* %15, null, !dbg !5456
  br i1 %tobool57, label %cond.end62, label %cond.true58, !dbg !5456

cond.true58:                                      ; preds = %for.cond55
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %14, metadata !5407, metadata !DIExpression()), !dbg !5408
  %base60 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %15, i64 0, i32 0, !dbg !5456
  br label %cond.end62, !dbg !5456

cond.end62:                                       ; preds = %for.cond55, %cond.true58
  %cond63 = phi %struct.VEC_lambda_vector_base* [ %base60, %cond.true58 ], [ null, %for.cond55 ], !dbg !5456
  %call64 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond63) #7, !dbg !5456
  %cmp65 = icmp ult i32 %j.0, %call64, !dbg !5457
  br i1 %cmp65, label %for.body67, label %for.inc81.loopexit, !dbg !5454

for.body67:                                       ; preds = %cond.end62
  %16 = load i32**, i32*** %matrix, align 8, !dbg !5458
  %17 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !5459
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %17, metadata !5407, metadata !DIExpression()), !dbg !5408
  %dist_vects68 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %17, i64 0, i32 6, !dbg !5459
  %18 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects68, align 8, !dbg !5459
  %tobool69 = icmp eq %struct.VEC_lambda_vector_heap* %18, null, !dbg !5459
  br i1 %tobool69, label %cond.end74, label %cond.true70, !dbg !5459

cond.true70:                                      ; preds = %for.body67
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %17, metadata !5407, metadata !DIExpression()), !dbg !5408
  %base72 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %18, i64 0, i32 0, !dbg !5459
  br label %cond.end74, !dbg !5459

cond.end74:                                       ; preds = %for.body67, %cond.true70
  %cond75 = phi %struct.VEC_lambda_vector_base* [ %base72, %cond.true70 ], [ null, %for.body67 ], !dbg !5459
  %call76 = call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond75, i32 %j.0) #7, !dbg !5459
  call void @lambda_matrix_vector_mult(i32** %16, i32 %nb_loops, i32 %nb_loops, i32* %call76, i32* %call20) #6, !dbg !5460
  %call77 = call fastcc zeroext i8 @lambda_vector_lexico_pos(i32* %call20, i32 %nb_loops) #7, !dbg !5461
  %tobool78 = icmp eq i8 %call77, 0, !dbg !5461
  br i1 %tobool78, label %cleanup.loopexit, label %for.inc, !dbg !5463

for.inc:                                          ; preds = %cond.end74
  %inc = add i32 %j.0, 1, !dbg !5464
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5405, metadata !DIExpression()), !dbg !5408
  br label %for.cond55, !dbg !5465, !llvm.loop !5466

for.inc81.loopexit:                               ; preds = %cond.end62
  br label %for.inc81, !dbg !5468

for.inc81:                                        ; preds = %for.inc81.loopexit, %land.lhs.true32, %for.body
  %inc82 = add i32 %i.0, 1, !dbg !5468
  call void @llvm.dbg.value(metadata i32 %inc82, metadata !5404, metadata !DIExpression()), !dbg !5408
  br label %for.cond, !dbg !5469, !llvm.loop !5470

cleanup.loopexit:                                 ; preds = %cond.end74
  br label %cleanup, !dbg !5472

cleanup.loopexit1:                                ; preds = %if.end37, %cond.end48, %for.cond
  %retval.0.ph = phi i8 [ 1, %for.cond ], [ 0, %cond.end48 ], [ 0, %if.end37 ]
  br label %cleanup, !dbg !5472

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %if.end16, %if.end, %cond.end
  %retval.0 = phi i8 [ 1, %cond.end ], [ 1, %if.end ], [ 0, %if.end16 ], [ 0, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !5408
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5472
  ret i8 %retval.0, !dbg !5472
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ddr_p_base_length(%struct.VEC_ddr_p_base* %vec_) unnamed_addr #0 !dbg !5473 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !5479, metadata !DIExpression()), !dbg !5480
  %tobool = icmp eq %struct.VEC_ddr_p_base* %vec_, null, !dbg !5481
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5481

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 0, !dbg !5481
  %0 = load i32, i32* %num, align 8, !dbg !5481
  br label %cond.end, !dbg !5481

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5481
  ret i32 %cond, !dbg !5481
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_dependence_relation* @VEC_ddr_p_base_index(%struct.VEC_ddr_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5482 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !5486, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.value(metadata i32 0, metadata !5487, metadata !DIExpression()), !dbg !5488
  br label %land.end, !dbg !5489

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %arrayidx = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 2, i64 0, !dbg !5489
  %0 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %arrayidx, align 8, !dbg !5489
  ret %struct.data_dependence_relation* %0, !dbg !5489
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %vec_, i32 %ix_, %struct.data_dependence_relation** %ptr) unnamed_addr #0 !dbg !5490 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !5495, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5496, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ptr, metadata !5497, metadata !DIExpression()), !dbg !5498
  %tobool = icmp eq %struct.VEC_ddr_p_base* %vec_, null, !dbg !5499
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5499

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 0, !dbg !5499
  %0 = load i32, i32* %num, align 8, !dbg !5499
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5499
  br i1 %cmp, label %if.then, label %if.else, !dbg !5501

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5502
  %arrayidx = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5502
  %1 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %arrayidx, align 8, !dbg !5502
  br label %return, !dbg !5502

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5504

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_dependence_relation* [ null, %if.else ], [ %1, %if.then ], !dbg !5506
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5506
  store %struct.data_dependence_relation* %storemerge, %struct.data_dependence_relation** %ptr, align 8, !dbg !5506
  ret i32 %retval.0, !dbg !5501
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %vec_) unnamed_addr #0 !dbg !5507 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_base* %vec_, metadata !5513, metadata !DIExpression()), !dbg !5514
  %tobool = icmp eq %struct.VEC_lambda_vector_base* %vec_, null, !dbg !5515
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5515

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 0, !dbg !5515
  %0 = load i32, i32* %num, align 8, !dbg !5515
  br label %cond.end, !dbg !5515

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5515
  ret i32 %cond, !dbg !5515
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5516 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_base* %vec_, metadata !5520, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5521, metadata !DIExpression()), !dbg !5522
  br label %land.end, !dbg !5523

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5523
  %arrayidx = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5523
  %0 = load i32*, i32** %arrayidx, align 8, !dbg !5523
  ret i32* %0, !dbg !5523
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lambda_vector_lexico_pos(i32* %v, i32 %n) unnamed_addr #0 !dbg !5524 {
entry:
  call void @llvm.dbg.value(metadata i32* %v, metadata !5528, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.value(metadata i32 %n, metadata !5529, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.value(metadata i32 0, metadata !5530, metadata !DIExpression()), !dbg !5531
  %wide.trip.count = zext i32 %n to i64, !dbg !5532
  br label %for.cond, !dbg !5535

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5536
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5530, metadata !DIExpression()), !dbg !5531
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !5532
  br i1 %exitcond, label %cleanup, label %for.body, !dbg !5537

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %v, i64 %indvars.iv, !dbg !5538
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5538
  %cmp1 = icmp eq i32 %0, 0, !dbg !5541
  br i1 %cmp1, label %for.inc, label %if.end, !dbg !5542

if.end:                                           ; preds = %for.body
  %cmp4 = icmp slt i32 %0, 0, !dbg !5543
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !5545

if.end6:                                          ; preds = %if.end
  %cmp9 = icmp eq i32 %0, 0, !dbg !5546
  br i1 %cmp9, label %for.inc, label %cleanup, !dbg !5548

for.inc:                                          ; preds = %if.end6, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5549
  br label %for.cond, !dbg !5550, !llvm.loop !5551

cleanup:                                          ; preds = %if.end6, %for.cond, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %if.end6 ], [ 1, %for.cond ], !dbg !5531
  ret i8 %retval.0, !dbg !5553
}

; Function Attrs: nounwind uwtable
define dso_local void @lambda_collect_parameters(%struct.VEC_data_reference_p_heap* %datarefs, %struct.VEC_tree_heap** %parameters) local_unnamed_addr #5 !dbg !5554 {
entry:
  %data_reference = alloca %struct.data_reference*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %datarefs, metadata !5570, metadata !DIExpression()), !dbg !5578
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %parameters, metadata !5571, metadata !DIExpression()), !dbg !5578
  %call = tail call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !5579
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call, metadata !5574, metadata !DIExpression()), !dbg !5578
  %0 = bitcast %struct.data_reference** %data_reference to i8*, !dbg !5580
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5580
  call void @llvm.dbg.value(metadata i32 0, metadata !5572, metadata !DIExpression()), !dbg !5578
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %datarefs, i64 0, i32 0, !dbg !5581
  br label %for.cond, !dbg !5584

for.cond:                                         ; preds = %for.inc25, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc26, %for.inc25 ], !dbg !5585
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5572, metadata !DIExpression()), !dbg !5578
  call void @llvm.dbg.value(metadata %struct.data_reference** %data_reference, metadata !5577, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  %call1 = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.0, %struct.data_reference** nonnull %data_reference) #7, !dbg !5586
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5587
  br i1 %tobool2, label %for.end27, label %for.cond3.preheader, !dbg !5587

for.cond3.preheader:                              ; preds = %for.cond
  br label %for.cond3, !dbg !5588

for.cond3:                                        ; preds = %for.cond3.preheader, %cond.end22
  %j.0 = phi i32 [ %inc, %cond.end22 ], [ 0, %for.cond3.preheader ], !dbg !5590
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5573, metadata !DIExpression()), !dbg !5578
  %1 = load %struct.data_reference*, %struct.data_reference** %data_reference, align 8, !dbg !5591
  call void @llvm.dbg.value(metadata %struct.data_reference* %1, metadata !5577, metadata !DIExpression()), !dbg !5578
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %1, i64 0, i32 5, i32 1, !dbg !5591
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !5591
  %tobool4 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !5591
  br i1 %tobool4, label %cond.end10, label %cond.true5, !dbg !5591

cond.true5:                                       ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.data_reference* %1, metadata !5577, metadata !DIExpression()), !dbg !5578
  %base8 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !5591
  br label %cond.end10, !dbg !5591

cond.end10:                                       ; preds = %for.cond3, %cond.true5
  %cond11 = phi %struct.VEC_tree_base* [ %base8, %cond.true5 ], [ null, %for.cond3 ], !dbg !5591
  %call12 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond11) #7, !dbg !5591
  %cmp = icmp ult i32 %j.0, %call12, !dbg !5593
  br i1 %cmp, label %for.body13, label %for.inc25, !dbg !5588

for.body13:                                       ; preds = %cond.end10
  %3 = load %struct.data_reference*, %struct.data_reference** %data_reference, align 8, !dbg !5594
  call void @llvm.dbg.value(metadata %struct.data_reference* %3, metadata !5577, metadata !DIExpression()), !dbg !5578
  %access_fns15 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %3, i64 0, i32 5, i32 1, !dbg !5594
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns15, align 8, !dbg !5594
  %tobool16 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !5594
  br i1 %tobool16, label %cond.end22, label %cond.true17, !dbg !5594

cond.true17:                                      ; preds = %for.body13
  call void @llvm.dbg.value(metadata %struct.data_reference* %3, metadata !5577, metadata !DIExpression()), !dbg !5578
  %base20 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !5594
  br label %cond.end22, !dbg !5594

cond.end22:                                       ; preds = %for.body13, %cond.true17
  %cond23 = phi %struct.VEC_tree_base* [ %base20, %cond.true17 ], [ null, %for.body13 ], !dbg !5594
  %call24 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond23, i32 %j.0) #7, !dbg !5594
  call fastcc void @lambda_collect_parameters_from_af(%union.tree_node* %call24, %struct.pointer_set_t* %call, %struct.VEC_tree_heap** %parameters) #7, !dbg !5595
  %inc = add i32 %j.0, 1, !dbg !5596
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5573, metadata !DIExpression()), !dbg !5578
  br label %for.cond3, !dbg !5597, !llvm.loop !5598

for.inc25:                                        ; preds = %cond.end10
  %inc26 = add i32 %i.0, 1, !dbg !5600
  call void @llvm.dbg.value(metadata i32 %inc26, metadata !5572, metadata !DIExpression()), !dbg !5578
  br label %for.cond, !dbg !5601, !llvm.loop !5602

for.end27:                                        ; preds = %for.cond
  call void @pointer_set_destroy(%struct.pointer_set_t* %call) #6, !dbg !5604
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5605
  ret void, !dbg !5605
}

declare dso_local %struct.pointer_set_t* @pointer_set_create() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %vec_, i32 %ix_, %struct.data_reference** %ptr) unnamed_addr #0 !dbg !5606 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_base* %vec_, metadata !5613, metadata !DIExpression()), !dbg !5616
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5614, metadata !DIExpression()), !dbg !5616
  call void @llvm.dbg.value(metadata %struct.data_reference** %ptr, metadata !5615, metadata !DIExpression()), !dbg !5616
  %tobool = icmp eq %struct.VEC_data_reference_p_base* %vec_, null, !dbg !5617
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5617

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 0, !dbg !5617
  %0 = load i32, i32* %num, align 8, !dbg !5617
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5617
  br i1 %cmp, label %if.then, label %if.else, !dbg !5619

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5620
  %arrayidx = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5620
  %1 = load %struct.data_reference*, %struct.data_reference** %arrayidx, align 8, !dbg !5620
  br label %return, !dbg !5620

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5622

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_reference* [ null, %if.else ], [ %1, %if.then ], !dbg !5624
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5624
  store %struct.data_reference* %storemerge, %struct.data_reference** %ptr, align 8, !dbg !5624
  ret i32 %retval.0, !dbg !5619
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lambda_collect_parameters_from_af(%union.tree_node* %access_function, %struct.pointer_set_t* %param_set, %struct.VEC_tree_heap** %parameters) unnamed_addr #5 !dbg !5625 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %access_function, metadata !5629, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %param_set, metadata !5630, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %parameters, metadata !5631, metadata !DIExpression()), !dbg !5636
  %cmp = icmp eq %union.tree_node* %access_function, null, !dbg !5637
  br i1 %cmp, label %if.end8, label %if.end, !dbg !5639

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %access_function, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5640
  %bf.load = load i64, i64* %0, align 8, !dbg !5640
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5641
  %cmp1 = icmp eq i64 %bf.cast1, 141, !dbg !5641
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !5642

land.lhs.true:                                    ; preds = %if.end
  %1 = bitcast %union.tree_node* %access_function to i8*, !dbg !5643
  %call = tail call i32 @pointer_set_contains(%struct.pointer_set_t* %param_set, i8* nonnull %1) #6, !dbg !5644
  %cmp2 = icmp eq i32 %call, 0, !dbg !5645
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !5646

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call i32 @pointer_set_insert(%struct.pointer_set_t* %param_set, i8* nonnull %1) #6, !dbg !5647
  %call5 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %parameters, %union.tree_node* nonnull %access_function) #7, !dbg !5649
  br label %if.end8, !dbg !5650

if.else:                                          ; preds = %land.lhs.true, %if.end
  %call6 = tail call fastcc i32 @tree_operand_length(%union.tree_node* nonnull %access_function) #7, !dbg !5651
  call void @llvm.dbg.value(metadata i32 %call6, metadata !5635, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32 0, metadata !5632, metadata !DIExpression()), !dbg !5652
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %access_function, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5653
  %2 = sext i32 %call6 to i64, !dbg !5656
  br label %for.cond, !dbg !5656

for.cond:                                         ; preds = %for.body, %if.else
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.else ], !dbg !5657
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5632, metadata !DIExpression()), !dbg !5652
  %cmp7 = icmp slt i64 %indvars.iv, %2, !dbg !5658
  br i1 %cmp7, label %for.body, label %if.end8.loopexit, !dbg !5659

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !5660
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5660
  tail call fastcc void @lambda_collect_parameters_from_af(%union.tree_node* %3, %struct.pointer_set_t* %param_set, %struct.VEC_tree_heap** %parameters) #7, !dbg !5661
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5662
  call void @llvm.dbg.value(metadata i32 undef, metadata !5632, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5652
  br label %for.cond, !dbg !5663, !llvm.loop !5664

if.end8.loopexit:                                 ; preds = %for.cond
  br label %if.end8, !dbg !5666

if.end8:                                          ; preds = %if.end8.loopexit, %entry, %if.then3
  ret void, !dbg !5666
}

declare dso_local void @pointer_set_destroy(%struct.pointer_set_t*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @lambda_compute_access_matrices(%struct.VEC_data_reference_p_heap* %datarefs, %struct.VEC_tree_heap* %parameters, %struct.VEC_loop_p_heap* %nest) local_unnamed_addr #5 !dbg !5667 {
entry:
  %dataref = alloca %struct.data_reference*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %datarefs, metadata !5671, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %parameters, metadata !5672, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %nest, metadata !5673, metadata !DIExpression()), !dbg !5676
  %0 = bitcast %struct.data_reference** %dataref to i8*, !dbg !5677
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5677
  call void @llvm.dbg.value(metadata i32 0, metadata !5675, metadata !DIExpression()), !dbg !5676
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %datarefs, i64 0, i32 0, !dbg !5678
  br label %for.cond, !dbg !5681

for.cond:                                         ; preds = %for.inc, %entry
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5682
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !5675, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata %struct.data_reference** %dataref, metadata !5674, metadata !DIExpression(DW_OP_deref)), !dbg !5676
  %call = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %ix.0, %struct.data_reference** nonnull %dataref) #7, !dbg !5683
  %tobool1 = icmp eq i32 %call, 0, !dbg !5684
  br i1 %tobool1, label %cleanup, label %for.body, !dbg !5684

for.body:                                         ; preds = %for.cond
  %1 = load %struct.data_reference*, %struct.data_reference** %dataref, align 8, !dbg !5685
  call void @llvm.dbg.value(metadata %struct.data_reference* %1, metadata !5674, metadata !DIExpression()), !dbg !5676
  %call2 = call fastcc zeroext i8 @build_access_matrix(%struct.data_reference* %1, %struct.VEC_tree_heap* %parameters, %struct.VEC_loop_p_heap* %nest) #7, !dbg !5687
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5687
  br i1 %tobool3, label %cleanup, label %for.inc, !dbg !5688

for.inc:                                          ; preds = %for.body
  %inc = add i32 %ix.0, 1, !dbg !5689
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5675, metadata !DIExpression()), !dbg !5676
  br label %for.cond, !dbg !5690, !llvm.loop !5691

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !5676
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5693
  ret i8 %retval.0, !dbg !5693
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @build_access_matrix(%struct.data_reference* %data_reference, %struct.VEC_tree_heap* %parameters, %struct.VEC_loop_p_heap* %nest) unnamed_addr #5 !dbg !5694 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %data_reference, metadata !5698, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %parameters, metadata !5699, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %nest, metadata !5700, metadata !DIExpression()), !dbg !5711
  %call = tail call i8* @ggc_alloc_stat(i64 32) #6, !dbg !5712
  %0 = bitcast i8* %call to %struct.access_matrix*, !dbg !5712
  call void @llvm.dbg.value(metadata %struct.access_matrix* %0, metadata !5701, metadata !DIExpression()), !dbg !5711
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %data_reference, i64 0, i32 5, i32 1, !dbg !5713
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !5713
  %tobool = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !5713
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5713

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !5713
  br label %cond.end, !dbg !5713

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5713
  %call3 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %call3, metadata !5703, metadata !DIExpression()), !dbg !5711
  %base6 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %nest, i64 0, i32 0, !dbg !5714
  %call10 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %base6) #7, !dbg !5714
  call void @llvm.dbg.value(metadata i32 %call10, metadata !5704, metadata !DIExpression()), !dbg !5711
  %loop_nest = bitcast i8* %call to %struct.VEC_loop_p_heap**, !dbg !5715
  store %struct.VEC_loop_p_heap* %nest, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !5716
  %nb_induction_vars = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5717
  %2 = bitcast i8* %nb_induction_vars to i32*, !dbg !5717
  store i32 %call10, i32* %2, align 8, !dbg !5718
  %parameters11 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !5719
  %3 = bitcast i8* %parameters11 to %struct.VEC_tree_heap**, !dbg !5719
  store %struct.VEC_tree_heap* %parameters, %struct.VEC_tree_heap** %3, align 8, !dbg !5720
  %tobool14 = icmp eq %struct.VEC_tree_heap* %parameters, null, !dbg !5721
  br i1 %tobool14, label %cond.end19, label %cond.true15, !dbg !5721

cond.true15:                                      ; preds = %cond.end
  %base17 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %parameters, i64 0, i32 0, !dbg !5721
  br label %cond.end19, !dbg !5721

cond.end19:                                       ; preds = %cond.end, %cond.true15
  %cond20 = phi %struct.VEC_tree_base* [ %base17, %cond.true15 ], [ null, %cond.end ], !dbg !5721
  %call21 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond20) #7, !dbg !5721
  %add = add i32 %call10, %call21, !dbg !5721
  %add22 = add i32 %add, 1, !dbg !5721
  call void @llvm.dbg.value(metadata i32 %add22, metadata !5705, metadata !DIExpression()), !dbg !5711
  %call23 = tail call fastcc %struct.VEC_lambda_vector_gc* @VEC_lambda_vector_gc_alloc(i32 %call3) #7, !dbg !5722
  %matrix = getelementptr inbounds i8, i8* %call, i64 24, !dbg !5723
  %4 = bitcast i8* %matrix to %struct.VEC_lambda_vector_gc**, !dbg !5723
  store %struct.VEC_lambda_vector_gc* %call23, %struct.VEC_lambda_vector_gc** %4, align 8, !dbg !5724
  call void @llvm.dbg.value(metadata i32 0, metadata !5702, metadata !DIExpression()), !dbg !5711
  br label %for.cond, !dbg !5725

for.cond:                                         ; preds = %for.inc, %cond.end19
  %i.0 = phi i32 [ 0, %cond.end19 ], [ %inc, %for.inc ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5702, metadata !DIExpression()), !dbg !5711
  %exitcond = icmp eq i32 %i.0, %call3, !dbg !5727
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5728

for.body:                                         ; preds = %for.cond
  %call24 = tail call fastcc i32* @lambda_vector_new(i32 %add22) #7, !dbg !5729
  call void @llvm.dbg.value(metadata i32* %call24, metadata !5706, metadata !DIExpression()), !dbg !5730
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !5731
  %tobool27 = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !5731
  br i1 %tobool27, label %cond.end33, label %cond.true28, !dbg !5731

cond.true28:                                      ; preds = %for.body
  %base31 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !5731
  br label %cond.end33, !dbg !5731

cond.end33:                                       ; preds = %for.body, %cond.true28
  %cond34 = phi %struct.VEC_tree_base* [ %base31, %cond.true28 ], [ null, %for.body ], !dbg !5731
  %call35 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond34, i32 %i.0) #7, !dbg !5731
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !5710, metadata !DIExpression()), !dbg !5730
  %call36 = tail call fastcc zeroext i8 @av_for_af(%union.tree_node* %call35, i32* %call24, %struct.access_matrix* %0) #7, !dbg !5732
  %tobool37 = icmp eq i8 %call36, 0, !dbg !5732
  br i1 %tobool37, label %cleanup, label %if.end, !dbg !5734

if.end:                                           ; preds = %cond.end33
  %6 = load %struct.VEC_lambda_vector_gc*, %struct.VEC_lambda_vector_gc** %4, align 8, !dbg !5735
  %tobool39 = icmp eq %struct.VEC_lambda_vector_gc* %6, null, !dbg !5735
  br i1 %tobool39, label %cond.end44, label %cond.true40, !dbg !5735

cond.true40:                                      ; preds = %if.end
  %base42 = getelementptr inbounds %struct.VEC_lambda_vector_gc, %struct.VEC_lambda_vector_gc* %6, i64 0, i32 0, !dbg !5735
  br label %cond.end44, !dbg !5735

cond.end44:                                       ; preds = %if.end, %cond.true40
  %cond45 = phi %struct.VEC_lambda_vector_base* [ %base42, %cond.true40 ], [ null, %if.end ], !dbg !5735
  %call46 = tail call fastcc i32** @VEC_lambda_vector_base_quick_push(%struct.VEC_lambda_vector_base* %cond45, i32* %call24) #7, !dbg !5735
  br label %cleanup, !dbg !5736

cleanup:                                          ; preds = %cond.end33, %cond.end44
  %cleanup.dest.slot.0 = phi i1 [ true, %cond.end44 ], [ false, %cond.end33 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup48.loopexit

for.inc:                                          ; preds = %cleanup
  %inc = add i32 %i.0, 1, !dbg !5737
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5702, metadata !DIExpression()), !dbg !5711
  br label %for.cond, !dbg !5738, !llvm.loop !5739

for.end:                                          ; preds = %for.cond
  %access_matrix = getelementptr inbounds %struct.data_reference, %struct.data_reference* %data_reference, i64 0, i32 7, !dbg !5741
  %7 = bitcast %struct.access_matrix** %access_matrix to i8**, !dbg !5742
  store i8* %call, i8** %7, align 8, !dbg !5742
  br label %cleanup48, !dbg !5743

cleanup48.loopexit:                               ; preds = %cleanup
  br label %cleanup48, !dbg !5744

cleanup48:                                        ; preds = %cleanup48.loopexit, %for.end
  %retval.2 = phi i8 [ 1, %for.end ], [ 0, %cleanup48.loopexit ]
  ret i8 %retval.2, !dbg !5744
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @lambda_vector_clear(i32* %vec1, i32 %size) unnamed_addr #0 !dbg !5745 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !5749, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.value(metadata i32 %size, metadata !5750, metadata !DIExpression()), !dbg !5751
  %0 = bitcast i32* %vec1 to i8*, !dbg !5752
  %conv = sext i32 %size to i64, !dbg !5753
  %mul = shl nsw i64 %conv, 2, !dbg !5754
  %call = tail call i8* @memset(i8* %0, i32 0, i64 %mul) #6, !dbg !5755
  ret void, !dbg !5756
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lambda_lattice_s* @lambda_lattice_new(i32 %depth, i32 %invariants, %struct.obstack* %lambda_obstack) unnamed_addr #5 !dbg !5757 {
entry:
  call void @llvm.dbg.value(metadata i32 %depth, metadata !5761, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i32 %invariants, metadata !5762, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !5763, metadata !DIExpression()), !dbg !5765
  %temp = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 5, !dbg !5766
  store i64 40, i64* %temp, align 8, !dbg !5766
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 4, !dbg !5766
  %0 = bitcast i8** %chunk_limit to i64*, !dbg !5766
  %1 = load i64, i64* %0, align 8, !dbg !5766
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 3, !dbg !5766
  %2 = bitcast i8** %next_free to i64*, !dbg !5766
  %3 = load i64, i64* %2, align 8, !dbg !5766
  %sub.ptr.sub = sub i64 %1, %3, !dbg !5766
  %cmp = icmp slt i64 %sub.ptr.sub, 40, !dbg !5766
  %4 = inttoptr i64 %3 to i8*, !dbg !5766
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5766

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* %lambda_obstack, i32 40) #6, !dbg !5766
  %.pre = load i64, i64* %temp, align 8, !dbg !5766
  %.pre1 = load i8*, i8** %next_free, align 8, !dbg !5766
  br label %cond.end, !dbg !5766

cond.end:                                         ; preds = %entry, %cond.true
  %5 = phi i8* [ %4, %entry ], [ %.pre1, %cond.true ], !dbg !5766
  %6 = phi i64 [ 40, %entry ], [ %.pre, %cond.true ], !dbg !5766
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !5766
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !5766
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 2, !dbg !5766
  %7 = load i8*, i8** %object_base, align 8, !dbg !5766
  %cmp6 = icmp eq i8* %add.ptr, %7, !dbg !5766
  %8 = ptrtoint i8* %7 to i64, !dbg !5766
  %9 = ptrtoint i8* %add.ptr to i64, !dbg !5766
  br i1 %cmp6, label %cond.true8, label %cond.end10, !dbg !5766

cond.true8:                                       ; preds = %cond.end
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 10, !dbg !5766
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !5766
  %bf.set = or i8 %bf.load, 2, !dbg !5766
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !5766
  br label %cond.end10, !dbg !5766

cond.end10:                                       ; preds = %cond.end, %cond.true8
  %10 = bitcast i8** %object_base to i64*, !dbg !5766
  store i64 %8, i64* %temp, align 8, !dbg !5766
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 6, !dbg !5766
  %11 = load i32, i32* %alignment_mask, align 8, !dbg !5766
  %conv19 = sext i32 %11 to i64, !dbg !5766
  %add = add nsw i64 %9, %conv19, !dbg !5766
  %neg = xor i32 %11, -1, !dbg !5766
  %conv21 = sext i32 %neg to i64, !dbg !5766
  %and = and i64 %add, %conv21, !dbg !5766
  %12 = inttoptr i64 %and to i8*, !dbg !5766
  store i8* %12, i8** %next_free, align 8, !dbg !5766
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %lambda_obstack, i64 0, i32 1, !dbg !5766
  %13 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !5766
  %14 = load i64, i64* %13, align 8, !dbg !5766
  %sub.ptr.sub26 = sub i64 %and, %14, !dbg !5766
  %15 = load i64, i64* %0, align 8, !dbg !5766
  %sub.ptr.sub31 = sub i64 %15, %14, !dbg !5766
  %cmp32 = icmp sgt i64 %sub.ptr.sub26, %sub.ptr.sub31, !dbg !5766
  %16 = bitcast i8* %7 to %struct.lambda_lattice_s*, !dbg !5766
  br i1 %cmp32, label %cond.true34, label %cond.end38, !dbg !5766

cond.true34:                                      ; preds = %cond.end10
  store i64 %15, i64* %2, align 8, !dbg !5766
  br label %cond.end38, !dbg !5766

cond.end38:                                       ; preds = %cond.end10, %cond.true34
  %17 = phi i64 [ %and, %cond.end10 ], [ %15, %cond.true34 ], !dbg !5766
  store i64 %17, i64* %10, align 8, !dbg !5766
  call void @llvm.dbg.value(metadata %struct.lambda_lattice_s* %16, metadata !5764, metadata !DIExpression()), !dbg !5765
  %call = tail call i32** @lambda_matrix_new(i32 %depth, i32 %depth) #6, !dbg !5767
  %base = bitcast i8* %7 to i32***, !dbg !5768
  store i32** %call, i32*** %base, align 8, !dbg !5769
  %call43 = tail call fastcc i32* @lambda_vector_new(i32 %depth) #7, !dbg !5770
  %origin = getelementptr inbounds i8, i8* %7, i64 16, !dbg !5771
  %18 = bitcast i8* %origin to i32**, !dbg !5771
  store i32* %call43, i32** %18, align 8, !dbg !5772
  %call44 = tail call i32** @lambda_matrix_new(i32 %depth, i32 %invariants) #6, !dbg !5773
  %origin_invariants = getelementptr inbounds i8, i8* %7, i64 24, !dbg !5774
  %19 = bitcast i8* %origin_invariants to i32***, !dbg !5774
  store i32** %call44, i32*** %19, align 8, !dbg !5775
  %dimension = getelementptr inbounds i8, i8* %7, i64 8, !dbg !5776
  %20 = bitcast i8* %dimension to i32*, !dbg !5776
  store i32 %depth, i32* %20, align 8, !dbg !5777
  %invariants45 = getelementptr inbounds i8, i8* %7, i64 32, !dbg !5778
  %21 = bitcast i8* %invariants45 to i32*, !dbg !5778
  store i32 %invariants, i32* %21, align 8, !dbg !5779
  ret %struct.lambda_lattice_s* %16, !dbg !5780
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @lambda_vector_add_mc(i32* %vec1, i32 %const1, i32* %vec2, i32 %const2, i32* %vec3, i32 %size) unnamed_addr #0 !dbg !5781 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !5785, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 %const1, metadata !5786, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32* %vec2, metadata !5787, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 %const2, metadata !5788, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32* %vec3, metadata !5789, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 %size, metadata !5790, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 0, metadata !5791, metadata !DIExpression()), !dbg !5792
  %0 = sext i32 %size to i64, !dbg !5793
  br label %for.cond, !dbg !5793

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !5795
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5791, metadata !DIExpression()), !dbg !5792
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !5796
  br i1 %cmp, label %for.body, label %for.end, !dbg !5798

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %vec1, i64 %indvars.iv, !dbg !5799
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5799
  %mul = mul nsw i32 %1, %const1, !dbg !5800
  %arrayidx2 = getelementptr inbounds i32, i32* %vec2, i64 %indvars.iv, !dbg !5801
  %2 = load i32, i32* %arrayidx2, align 4, !dbg !5801
  %mul3 = mul nsw i32 %2, %const2, !dbg !5802
  %add = add nsw i32 %mul, %mul3, !dbg !5803
  %arrayidx5 = getelementptr inbounds i32, i32* %vec3, i64 %indvars.iv, !dbg !5804
  store i32 %add, i32* %arrayidx5, align 4, !dbg !5805
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5806
  call void @llvm.dbg.value(metadata i32 undef, metadata !5791, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5792
  br label %for.cond, !dbg !5807, !llvm.loop !5808

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5810
}

declare dso_local void @lambda_matrix_add_mc(i32**, i32, i32**, i32, i32**, i32, i32) local_unnamed_addr #2

declare dso_local i32 @lambda_matrix_inverse(i32**, i32**, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lambda_loopnest_s* @compute_nest_using_fourier_motzkin(i32 %size, i32 %depth, i32 %invariants, i32** %A, i32** %B, i32* %a, %struct.obstack* %lambda_obstack) unnamed_addr #5 !dbg !5811 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !5815, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 %depth, metadata !5816, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 %invariants, metadata !5817, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %A, metadata !5818, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %B, metadata !5819, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32* %a, metadata !5820, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !5821, metadata !DIExpression()), !dbg !5837
  %call = tail call i32** @lambda_matrix_new(i32 128, i32 %depth) #6, !dbg !5838
  call void @llvm.dbg.value(metadata i32** %call, metadata !5832, metadata !DIExpression()), !dbg !5837
  %call1 = tail call i32** @lambda_matrix_new(i32 128, i32 %invariants) #6, !dbg !5839
  call void @llvm.dbg.value(metadata i32** %call1, metadata !5833, metadata !DIExpression()), !dbg !5837
  %call2 = tail call fastcc i32* @lambda_vector_new(i32 128) #7, !dbg !5840
  call void @llvm.dbg.value(metadata i32* %call2, metadata !5835, metadata !DIExpression()), !dbg !5837
  %call3 = tail call %struct.lambda_loopnest_s* @lambda_loopnest_new(i32 %depth, i32 %invariants, %struct.obstack* %lambda_obstack) #7, !dbg !5841
  call void @llvm.dbg.value(metadata %struct.lambda_loopnest_s* %call3, metadata !5830, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 %depth, metadata !5825, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5837
  %loops = getelementptr inbounds %struct.lambda_loopnest_s, %struct.lambda_loopnest_s* %call3, i64 0, i32 0, !dbg !5842
  %0 = sext i32 %invariants to i64, !dbg !5846
  %1 = sext i32 %invariants to i64, !dbg !5846
  %2 = sext i32 %depth to i64, !dbg !5846
  br label %for.cond, !dbg !5846

for.cond:                                         ; preds = %for.inc188, %entry
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc188 ], [ %2, %entry ]
  %indvars.iv2.in = phi i32 [ %indvars.iv2, %for.inc188 ], [ %depth, %entry ]
  %A1.0 = phi i32** [ %A.addr.0, %for.inc188 ], [ %call, %entry ], !dbg !5837
  %B1.0 = phi i32** [ %B.addr.0, %for.inc188 ], [ %call1, %entry ], !dbg !5837
  %a.addr.0 = phi i32* [ %a1.0, %for.inc188 ], [ %a, %entry ]
  %B.addr.0 = phi i32** [ %B1.0, %for.inc188 ], [ %B, %entry ]
  %A.addr.0 = phi i32** [ %A1.0, %for.inc188 ], [ %A, %entry ]
  %a1.0 = phi i32* [ %a.addr.0, %for.inc188 ], [ %call2, %entry ], !dbg !5837
  %size.addr.0 = phi i32 [ %newsize.0.lcssa, %for.inc188 ], [ %size, %entry ]
  %indvars.iv2 = add i32 %indvars.iv2.in, -1, !dbg !5847
  %indvars.iv.next20 = add nsw i64 %indvars.iv19, -1, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %size.addr.0, metadata !5815, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32* %a1.0, metadata !5835, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %A.addr.0, metadata !5818, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %B.addr.0, metadata !5819, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32* %a.addr.0, metadata !5820, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %B1.0, metadata !5833, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %A1.0, metadata !5832, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 undef, metadata !5825, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5837
  %cmp = icmp sgt i64 %indvars.iv19, 0, !dbg !5848
  br i1 %cmp, label %for.body, label %for.end189, !dbg !5849

for.body:                                         ; preds = %for.cond
  %call4 = tail call i8* @ggc_alloc_cleared_stat(i64 32) #6, !dbg !5850
  call void @llvm.dbg.value(metadata i8* %call4, metadata !5829, metadata !DIExpression()), !dbg !5837
  %3 = load %struct.lambda_loop_s**, %struct.lambda_loop_s*** %loops, align 8, !dbg !5851
  %arrayidx = getelementptr inbounds %struct.lambda_loop_s*, %struct.lambda_loop_s** %3, i64 %indvars.iv.next20, !dbg !5851
  %4 = bitcast %struct.lambda_loop_s** %arrayidx to i8**, !dbg !5852
  store i8* %call4, i8** %4, align 8, !dbg !5852
  %step = getelementptr inbounds i8, i8* %call4, i64 24, !dbg !5853
  %5 = bitcast i8* %step to i32*, !dbg !5853
  store i32 1, i32* %5, align 8, !dbg !5854
  call void @llvm.dbg.value(metadata i32 0, metadata !5826, metadata !DIExpression()), !dbg !5837
  %upper_bound = getelementptr inbounds i8, i8* %call4, i64 8, !dbg !5855
  %6 = bitcast i8* %upper_bound to %struct.lambda_linear_expression_s**, !dbg !5855
  %7 = bitcast i8* %upper_bound to i64*, !dbg !5863
  %lower_bound = bitcast i8* %call4 to %struct.lambda_linear_expression_s**, !dbg !5865
  %8 = bitcast i8* %call4 to i64*, !dbg !5868
  %9 = sext i32 %size.addr.0 to i64, !dbg !5870
  br label %for.cond5, !dbg !5870

for.cond5:                                        ; preds = %for.inc98, %for.body
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc98 ], [ 0, %for.body ], !dbg !5871
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !5826, metadata !DIExpression()), !dbg !5837
  %cmp6 = icmp slt i64 %indvars.iv12, %9, !dbg !5872
  br i1 %cmp6, label %for.body7, label %for.cond101.preheader, !dbg !5873

for.cond101.preheader:                            ; preds = %for.cond5
  %10 = sext i32 %size.addr.0 to i64, !dbg !5874
  %11 = sext i32 %size.addr.0 to i64, !dbg !5874
  br label %for.cond101, !dbg !5874

for.body7:                                        ; preds = %for.cond5
  %arrayidx9 = getelementptr inbounds i32*, i32** %A.addr.0, i64 %indvars.iv12, !dbg !5876
  %12 = load i32*, i32** %arrayidx9, align 8, !dbg !5876
  %arrayidx11 = getelementptr inbounds i32, i32* %12, i64 %indvars.iv.next20, !dbg !5876
  %13 = load i32, i32* %arrayidx11, align 4, !dbg !5876
  %cmp12 = icmp slt i32 %13, 0, !dbg !5877
  br i1 %cmp12, label %if.then, label %if.else, !dbg !5878

if.then:                                          ; preds = %for.body7
  %call13 = tail call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %depth, i32 %invariants, %struct.obstack* %lambda_obstack) #7, !dbg !5879
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call13, metadata !5828, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 0, metadata !5827, metadata !DIExpression()), !dbg !5837
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call13, i64 0, i32 0, !dbg !5880
  %wide.trip.count8 = zext i32 %indvars.iv2 to i64, !dbg !5883
  br label %for.cond14, !dbg !5884

for.cond14:                                       ; preds = %for.body16, %if.then
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.body16 ], [ 0, %if.then ], !dbg !5885
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !5827, metadata !DIExpression()), !dbg !5837
  %exitcond9 = icmp eq i64 %indvars.iv6, %wide.trip.count8, !dbg !5883
  br i1 %exitcond9, label %for.cond23.preheader, label %for.body16, !dbg !5886

for.cond23.preheader:                             ; preds = %for.cond14
  %arrayidx27 = getelementptr inbounds i32*, i32** %B.addr.0, i64 %indvars.iv12, !dbg !5887
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call13, i64 0, i32 2, !dbg !5887
  br label %for.cond23, !dbg !5890

for.body16:                                       ; preds = %for.cond14
  %14 = load i32*, i32** %arrayidx9, align 8, !dbg !5891
  %arrayidx20 = getelementptr inbounds i32, i32* %14, i64 %indvars.iv6, !dbg !5891
  %15 = load i32, i32* %arrayidx20, align 4, !dbg !5891
  %16 = load i32*, i32** %coefficients, align 8, !dbg !5892
  %arrayidx22 = getelementptr inbounds i32, i32* %16, i64 %indvars.iv6, !dbg !5892
  store i32 %15, i32* %arrayidx22, align 4, !dbg !5893
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !5894
  call void @llvm.dbg.value(metadata i32 undef, metadata !5827, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5837
  br label %for.cond14, !dbg !5895, !llvm.loop !5896

for.cond23:                                       ; preds = %for.cond23.preheader, %for.body25
  %indvars.iv10 = phi i64 [ 0, %for.cond23.preheader ], [ %indvars.iv.next11, %for.body25 ], !dbg !5898
  call void @llvm.dbg.value(metadata i64 %indvars.iv10, metadata !5827, metadata !DIExpression()), !dbg !5837
  %cmp24 = icmp slt i64 %indvars.iv10, %1, !dbg !5899
  br i1 %cmp24, label %for.body25, label %for.end34, !dbg !5890

for.body25:                                       ; preds = %for.cond23
  %17 = load i32*, i32** %arrayidx27, align 8, !dbg !5900
  %arrayidx29 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv10, !dbg !5900
  %18 = load i32, i32* %arrayidx29, align 4, !dbg !5900
  %mul = sub nsw i32 0, %18, !dbg !5901
  %19 = load i32*, i32** %invariant_coefficients, align 8, !dbg !5902
  %arrayidx31 = getelementptr inbounds i32, i32* %19, i64 %indvars.iv10, !dbg !5902
  store i32 %mul, i32* %arrayidx31, align 4, !dbg !5903
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !5904
  call void @llvm.dbg.value(metadata i32 undef, metadata !5827, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5837
  br label %for.cond23, !dbg !5905, !llvm.loop !5906

for.end34:                                        ; preds = %for.cond23
  %20 = load i32*, i32** %arrayidx9, align 8, !dbg !5908
  %arrayidx38 = getelementptr inbounds i32, i32* %20, i64 %indvars.iv.next20, !dbg !5908
  %21 = load i32, i32* %arrayidx38, align 4, !dbg !5908
  %mul39 = sub nsw i32 0, %21, !dbg !5909
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call13, i64 0, i32 3, !dbg !5910
  store i32 %mul39, i32* %denominator, align 8, !dbg !5911
  %arrayidx41 = getelementptr inbounds i32, i32* %a.addr.0, i64 %indvars.iv12, !dbg !5912
  %22 = load i32, i32* %arrayidx41, align 4, !dbg !5912
  %mul42 = sub nsw i32 0, %22, !dbg !5913
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call13, i64 0, i32 1, !dbg !5914
  store i32 %mul42, i32* %constant, align 8, !dbg !5915
  %23 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %lower_bound, align 8, !dbg !5916
  %call43 = tail call fastcc zeroext i8 @lle_equal(%struct.lambda_linear_expression_s* %23, %struct.lambda_linear_expression_s* %call13, i32 %depth, i32 %invariants) #7, !dbg !5917
  %tobool = icmp eq i8 %call43, 0, !dbg !5917
  br i1 %tobool, label %if.then44, label %for.inc98, !dbg !5918

if.then44:                                        ; preds = %for.end34
  %24 = load i64, i64* %8, align 8, !dbg !5919
  %next = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call13, i64 0, i32 4, !dbg !5920
  %25 = bitcast %struct.lambda_linear_expression_s** %next to i64*, !dbg !5921
  store i64 %24, i64* %25, align 8, !dbg !5921
  store %struct.lambda_linear_expression_s* %call13, %struct.lambda_linear_expression_s** %lower_bound, align 8, !dbg !5922
  br label %for.inc98, !dbg !5923

if.else:                                          ; preds = %for.body7
  %cmp51 = icmp eq i32 %13, 0, !dbg !5924
  br i1 %cmp51, label %for.inc98, label %if.then52, !dbg !5925

if.then52:                                        ; preds = %if.else
  %call53 = tail call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %depth, i32 %invariants, %struct.obstack* %lambda_obstack) #7, !dbg !5926
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call53, metadata !5828, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 0, metadata !5827, metadata !DIExpression()), !dbg !5837
  %coefficients62 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call53, i64 0, i32 0, !dbg !5927
  %wide.trip.count = zext i32 %indvars.iv2 to i64, !dbg !5930
  br label %for.cond54, !dbg !5931

for.cond54:                                       ; preds = %for.body56, %if.then52
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body56 ], [ 0, %if.then52 ], !dbg !5932
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5827, metadata !DIExpression()), !dbg !5837
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !5930
  br i1 %exitcond, label %for.cond68.preheader, label %for.body56, !dbg !5933

for.cond68.preheader:                             ; preds = %for.cond54
  %arrayidx72 = getelementptr inbounds i32*, i32** %B.addr.0, i64 %indvars.iv12, !dbg !5934
  %invariant_coefficients75 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call53, i64 0, i32 2, !dbg !5934
  br label %for.cond68, !dbg !5937

for.body56:                                       ; preds = %for.cond54
  %26 = load i32*, i32** %arrayidx9, align 8, !dbg !5938
  %arrayidx60 = getelementptr inbounds i32, i32* %26, i64 %indvars.iv, !dbg !5938
  %27 = load i32, i32* %arrayidx60, align 4, !dbg !5938
  %mul61 = sub nsw i32 0, %27, !dbg !5939
  %28 = load i32*, i32** %coefficients62, align 8, !dbg !5940
  %arrayidx64 = getelementptr inbounds i32, i32* %28, i64 %indvars.iv, !dbg !5940
  store i32 %mul61, i32* %arrayidx64, align 4, !dbg !5941
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5942
  call void @llvm.dbg.value(metadata i32 undef, metadata !5827, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5837
  br label %for.cond54, !dbg !5943, !llvm.loop !5944

for.cond68:                                       ; preds = %for.cond68.preheader, %for.body70
  %indvars.iv4 = phi i64 [ 0, %for.cond68.preheader ], [ %indvars.iv.next5, %for.body70 ], !dbg !5946
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !5827, metadata !DIExpression()), !dbg !5837
  %cmp69 = icmp slt i64 %indvars.iv4, %0, !dbg !5947
  br i1 %cmp69, label %for.body70, label %for.end80, !dbg !5937

for.body70:                                       ; preds = %for.cond68
  %29 = load i32*, i32** %arrayidx72, align 8, !dbg !5948
  %arrayidx74 = getelementptr inbounds i32, i32* %29, i64 %indvars.iv4, !dbg !5948
  %30 = load i32, i32* %arrayidx74, align 4, !dbg !5948
  %31 = load i32*, i32** %invariant_coefficients75, align 8, !dbg !5949
  %arrayidx77 = getelementptr inbounds i32, i32* %31, i64 %indvars.iv4, !dbg !5949
  store i32 %30, i32* %arrayidx77, align 4, !dbg !5950
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !5951
  call void @llvm.dbg.value(metadata i32 undef, metadata !5827, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5837
  br label %for.cond68, !dbg !5952, !llvm.loop !5953

for.end80:                                        ; preds = %for.cond68
  %32 = load i32*, i32** %arrayidx9, align 8, !dbg !5955
  %arrayidx84 = getelementptr inbounds i32, i32* %32, i64 %indvars.iv.next20, !dbg !5955
  %33 = load i32, i32* %arrayidx84, align 4, !dbg !5955
  %denominator85 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call53, i64 0, i32 3, !dbg !5956
  store i32 %33, i32* %denominator85, align 8, !dbg !5957
  %arrayidx87 = getelementptr inbounds i32, i32* %a.addr.0, i64 %indvars.iv12, !dbg !5958
  %34 = load i32, i32* %arrayidx87, align 4, !dbg !5958
  %constant88 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call53, i64 0, i32 1, !dbg !5959
  store i32 %34, i32* %constant88, align 8, !dbg !5960
  %35 = load %struct.lambda_linear_expression_s*, %struct.lambda_linear_expression_s** %6, align 8, !dbg !5961
  %call89 = tail call fastcc zeroext i8 @lle_equal(%struct.lambda_linear_expression_s* %35, %struct.lambda_linear_expression_s* %call53, i32 %depth, i32 %invariants) #7, !dbg !5962
  %tobool90 = icmp eq i8 %call89, 0, !dbg !5962
  br i1 %tobool90, label %if.then91, label %for.inc98, !dbg !5963

if.then91:                                        ; preds = %for.end80
  %36 = load i64, i64* %7, align 8, !dbg !5964
  %next93 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call53, i64 0, i32 4, !dbg !5965
  %37 = bitcast %struct.lambda_linear_expression_s** %next93 to i64*, !dbg !5966
  store i64 %36, i64* %37, align 8, !dbg !5966
  store %struct.lambda_linear_expression_s* %call53, %struct.lambda_linear_expression_s** %6, align 8, !dbg !5967
  br label %for.inc98, !dbg !5968

for.inc98:                                        ; preds = %if.else, %for.end34, %for.end80, %if.then44, %if.then91
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !5969
  call void @llvm.dbg.value(metadata i32 undef, metadata !5826, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5837
  br label %for.cond5, !dbg !5970, !llvm.loop !5971

for.cond101:                                      ; preds = %for.cond101.preheader, %for.inc185
  %indvars.iv17 = phi i64 [ 0, %for.cond101.preheader ], [ %indvars.iv.next18, %for.inc185 ], !dbg !5973
  %newsize.0 = phi i32 [ 0, %for.cond101.preheader ], [ %newsize.4, %for.inc185 ], !dbg !5842
  call void @llvm.dbg.value(metadata i32 %newsize.0, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i64 %indvars.iv17, metadata !5826, metadata !DIExpression()), !dbg !5837
  %cmp102 = icmp slt i64 %indvars.iv17, %11, !dbg !5974
  br i1 %cmp102, label %for.body103, label %for.inc188, !dbg !5874

for.body103:                                      ; preds = %for.cond101
  %arrayidx105 = getelementptr inbounds i32*, i32** %A.addr.0, i64 %indvars.iv17, !dbg !5976
  %38 = load i32*, i32** %arrayidx105, align 8, !dbg !5976
  %arrayidx107 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv.next20, !dbg !5976
  %39 = load i32, i32* %arrayidx107, align 4, !dbg !5976
  %cmp108 = icmp eq i32 %39, 0, !dbg !5979
  br i1 %cmp108, label %if.then109, label %if.else123, !dbg !5980

if.then109:                                       ; preds = %for.body103
  %idxprom112 = sext i32 %newsize.0 to i64, !dbg !5981
  %arrayidx113 = getelementptr inbounds i32*, i32** %A1.0, i64 %idxprom112, !dbg !5981
  %40 = load i32*, i32** %arrayidx113, align 8, !dbg !5981
  tail call fastcc void @lambda_vector_copy(i32* %38, i32* %40, i32 %depth) #7, !dbg !5983
  %arrayidx115 = getelementptr inbounds i32*, i32** %B.addr.0, i64 %indvars.iv17, !dbg !5984
  %41 = load i32*, i32** %arrayidx115, align 8, !dbg !5984
  %arrayidx117 = getelementptr inbounds i32*, i32** %B1.0, i64 %idxprom112, !dbg !5985
  %42 = load i32*, i32** %arrayidx117, align 8, !dbg !5985
  tail call fastcc void @lambda_vector_copy(i32* %41, i32* %42, i32 %invariants) #7, !dbg !5986
  %arrayidx119 = getelementptr inbounds i32, i32* %a.addr.0, i64 %indvars.iv17, !dbg !5987
  %43 = load i32, i32* %arrayidx119, align 4, !dbg !5987
  %arrayidx121 = getelementptr inbounds i32, i32* %a1.0, i64 %idxprom112, !dbg !5988
  store i32 %43, i32* %arrayidx121, align 4, !dbg !5989
  %inc122 = add nsw i32 %newsize.0, 1, !dbg !5990
  call void @llvm.dbg.value(metadata i32 %inc122, metadata !5836, metadata !DIExpression()), !dbg !5837
  br label %for.inc185, !dbg !5991

if.else123:                                       ; preds = %for.body103
  %cmp128 = icmp sgt i32 %39, 0, !dbg !5992
  br i1 %cmp128, label %for.cond130.preheader, label %for.inc185, !dbg !5994

for.cond130.preheader:                            ; preds = %if.else123
  %arrayidx165 = getelementptr inbounds i32*, i32** %B.addr.0, i64 %indvars.iv17, !dbg !5995
  %arrayidx171 = getelementptr inbounds i32, i32* %a.addr.0, i64 %indvars.iv17, !dbg !5995
  br label %for.cond130, !dbg !6002

for.cond130:                                      ; preds = %for.cond130.preheader, %for.inc180
  %indvars.iv14 = phi i64 [ 0, %for.cond130.preheader ], [ %indvars.iv.next15, %for.inc180 ], !dbg !6003
  %newsize.1 = phi i32 [ %newsize.0, %for.cond130.preheader ], [ %newsize.2, %for.inc180 ], !dbg !5842
  call void @llvm.dbg.value(metadata i32 %newsize.1, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i64 %indvars.iv14, metadata !5827, metadata !DIExpression()), !dbg !5837
  %exitcond16 = icmp eq i64 %indvars.iv14, %10, !dbg !6004
  br i1 %exitcond16, label %for.inc185.loopexit, label %for.body132, !dbg !6002

for.body132:                                      ; preds = %for.cond130
  %arrayidx134 = getelementptr inbounds i32*, i32** %A.addr.0, i64 %indvars.iv14, !dbg !6005
  %44 = load i32*, i32** %arrayidx134, align 8, !dbg !6005
  %arrayidx136 = getelementptr inbounds i32, i32* %44, i64 %indvars.iv.next20, !dbg !6005
  %45 = load i32, i32* %arrayidx136, align 4, !dbg !6005
  %cmp137 = icmp slt i32 %45, 0, !dbg !6006
  br i1 %cmp137, label %if.then138, label %for.inc180, !dbg !6007

if.then138:                                       ; preds = %for.body132
  %46 = load i32*, i32** %arrayidx105, align 8, !dbg !6008
  %arrayidx142 = getelementptr inbounds i32, i32* %46, i64 %indvars.iv.next20, !dbg !6008
  %47 = load i32, i32* %arrayidx142, align 4, !dbg !6008
  %call147 = tail call i32 @least_common_multiple(i32 %47, i32 %45) #7, !dbg !6009
  call void @llvm.dbg.value(metadata i32 %call147, metadata !5822, metadata !DIExpression()), !dbg !5837
  %48 = load i32*, i32** %arrayidx105, align 8, !dbg !6010
  %arrayidx151 = getelementptr inbounds i32, i32* %48, i64 %indvars.iv.next20, !dbg !6010
  %49 = load i32, i32* %arrayidx151, align 4, !dbg !6010
  %div = sdiv i32 %call147, %49, !dbg !6011
  call void @llvm.dbg.value(metadata i32 %div, metadata !5823, metadata !DIExpression()), !dbg !5837
  %50 = load i32*, i32** %arrayidx134, align 8, !dbg !6012
  %arrayidx156 = getelementptr inbounds i32, i32* %50, i64 %indvars.iv.next20, !dbg !6012
  %51 = load i32, i32* %arrayidx156, align 4, !dbg !6012
  %div1571 = sdiv i32 %call147, %51, !dbg !6013
  %div157 = sub nsw i32 0, %div1571, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %div157, metadata !5824, metadata !DIExpression()), !dbg !5837
  %idxprom162 = sext i32 %newsize.1 to i64, !dbg !6014
  %arrayidx163 = getelementptr inbounds i32*, i32** %A1.0, i64 %idxprom162, !dbg !6014
  %52 = load i32*, i32** %arrayidx163, align 8, !dbg !6014
  tail call fastcc void @lambda_vector_add_mc(i32* %48, i32 %div, i32* %50, i32 %div157, i32* %52, i32 %depth) #7, !dbg !6015
  %53 = load i32*, i32** %arrayidx165, align 8, !dbg !6016
  %arrayidx167 = getelementptr inbounds i32*, i32** %B.addr.0, i64 %indvars.iv14, !dbg !6017
  %54 = load i32*, i32** %arrayidx167, align 8, !dbg !6017
  %arrayidx169 = getelementptr inbounds i32*, i32** %B1.0, i64 %idxprom162, !dbg !6018
  %55 = load i32*, i32** %arrayidx169, align 8, !dbg !6018
  tail call fastcc void @lambda_vector_add_mc(i32* %53, i32 %div, i32* %54, i32 %div157, i32* %55, i32 %invariants) #7, !dbg !6019
  %56 = load i32, i32* %arrayidx171, align 4, !dbg !6020
  %mul172 = mul nsw i32 %div, %56, !dbg !6021
  %arrayidx174 = getelementptr inbounds i32, i32* %a.addr.0, i64 %indvars.iv14, !dbg !6022
  %57 = load i32, i32* %arrayidx174, align 4, !dbg !6022
  %mul175 = mul nsw i32 %57, %div157, !dbg !6023
  %add = add nsw i32 %mul172, %mul175, !dbg !6024
  %arrayidx177 = getelementptr inbounds i32, i32* %a1.0, i64 %idxprom162, !dbg !6025
  store i32 %add, i32* %arrayidx177, align 4, !dbg !6026
  %inc178 = add nsw i32 %newsize.1, 1, !dbg !6027
  call void @llvm.dbg.value(metadata i32 %inc178, metadata !5836, metadata !DIExpression()), !dbg !5837
  br label %for.inc180, !dbg !6028

for.inc180:                                       ; preds = %for.body132, %if.then138
  %newsize.2 = phi i32 [ %inc178, %if.then138 ], [ %newsize.1, %for.body132 ], !dbg !5842
  call void @llvm.dbg.value(metadata i32 %newsize.2, metadata !5836, metadata !DIExpression()), !dbg !5837
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !6029
  call void @llvm.dbg.value(metadata i32 undef, metadata !5827, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5837
  br label %for.cond130, !dbg !6030, !llvm.loop !6031

for.inc185.loopexit:                              ; preds = %for.cond130
  %newsize.1.lcssa = phi i32 [ %newsize.1, %for.cond130 ], !dbg !5842
  call void @llvm.dbg.value(metadata i32 %newsize.1.lcssa, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 %newsize.1.lcssa, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 %newsize.1.lcssa, metadata !5836, metadata !DIExpression()), !dbg !5837
  br label %for.inc185, !dbg !6033

for.inc185:                                       ; preds = %for.inc185.loopexit, %if.then109, %if.else123
  %newsize.4 = phi i32 [ %inc122, %if.then109 ], [ %newsize.0, %if.else123 ], [ %newsize.1.lcssa, %for.inc185.loopexit ], !dbg !5842
  call void @llvm.dbg.value(metadata i32 %newsize.4, metadata !5836, metadata !DIExpression()), !dbg !5837
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1, !dbg !6033
  call void @llvm.dbg.value(metadata i32 undef, metadata !5826, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5837
  br label %for.cond101, !dbg !6034, !llvm.loop !6035

for.inc188:                                       ; preds = %for.cond101
  %newsize.0.lcssa = phi i32 [ %newsize.0, %for.cond101 ], !dbg !5842
  call void @llvm.dbg.value(metadata i32 %newsize.0.lcssa, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 %newsize.0.lcssa, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 %newsize.0.lcssa, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %A.addr.0, metadata !5831, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %A1.0, metadata !5818, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %A.addr.0, metadata !5832, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %B.addr.0, metadata !5831, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %B1.0, metadata !5819, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32** %B.addr.0, metadata !5833, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32* %a.addr.0, metadata !5834, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32* %a1.0, metadata !5820, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32* %a.addr.0, metadata !5835, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 %newsize.0.lcssa, metadata !5815, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 undef, metadata !5825, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5837
  br label %for.cond, !dbg !6037, !llvm.loop !6038

for.end189:                                       ; preds = %for.cond
  ret %struct.lambda_loopnest_s* %call3, !dbg !6040
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @lle_equal(%struct.lambda_linear_expression_s* %lle1, %struct.lambda_linear_expression_s* %lle2, i32 %depth, i32 %invariants) unnamed_addr #5 !dbg !6041 {
entry:
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle1, metadata !6045, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle2, metadata !6046, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6047, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.value(metadata i32 %invariants, metadata !6048, metadata !DIExpression()), !dbg !6050
  %cmp = icmp eq %struct.lambda_linear_expression_s* %lle1, null, !dbg !6051
  %cmp1 = icmp eq %struct.lambda_linear_expression_s* %lle2, null, !dbg !6053
  %or.cond = or i1 %cmp, %cmp1, !dbg !6054
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !6054

if.end:                                           ; preds = %entry
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle1, i64 0, i32 1, !dbg !6055
  %0 = load i32, i32* %constant, align 8, !dbg !6055
  %constant2 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle2, i64 0, i32 1, !dbg !6057
  %1 = load i32, i32* %constant2, align 8, !dbg !6057
  %cmp3 = icmp eq i32 %0, %1, !dbg !6058
  br i1 %cmp3, label %if.end5, label %cleanup, !dbg !6059

if.end5:                                          ; preds = %if.end
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle1, i64 0, i32 3, !dbg !6060
  %2 = load i32, i32* %denominator, align 8, !dbg !6060
  %denominator6 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle2, i64 0, i32 3, !dbg !6062
  %3 = load i32, i32* %denominator6, align 8, !dbg !6062
  %cmp7 = icmp eq i32 %2, %3, !dbg !6063
  br i1 %cmp7, label %for.cond.preheader, label %cleanup, !dbg !6064

for.cond.preheader:                               ; preds = %if.end5
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle1, i64 0, i32 0, !dbg !6065
  %coefficients11 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle2, i64 0, i32 0, !dbg !6065
  %4 = sext i32 %depth to i64, !dbg !6069
  br label %for.cond, !dbg !6069

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv2 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next3, %for.inc ], !dbg !6070
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !6049, metadata !DIExpression()), !dbg !6050
  %cmp10 = icmp slt i64 %indvars.iv2, %4, !dbg !6071
  br i1 %cmp10, label %for.body, label %for.cond17.preheader, !dbg !6069

for.cond17.preheader:                             ; preds = %for.cond
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle1, i64 0, i32 2, !dbg !6072
  %invariant_coefficients22 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %lle2, i64 0, i32 2, !dbg !6076
  %5 = sext i32 %invariants to i64, !dbg !6077
  br label %for.cond17, !dbg !6077

for.body:                                         ; preds = %for.cond
  %6 = load i32*, i32** %coefficients, align 8, !dbg !6078
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %indvars.iv2, !dbg !6078
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6078
  %8 = load i32*, i32** %coefficients11, align 8, !dbg !6079
  %arrayidx13 = getelementptr inbounds i32, i32* %8, i64 %indvars.iv2, !dbg !6079
  %9 = load i32, i32* %arrayidx13, align 4, !dbg !6079
  %cmp14 = icmp eq i32 %7, %9, !dbg !6080
  br i1 %cmp14, label %for.inc, label %cleanup.loopexit1, !dbg !6081

for.inc:                                          ; preds = %for.body
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !6082
  call void @llvm.dbg.value(metadata i32 undef, metadata !6049, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6050
  br label %for.cond, !dbg !6083, !llvm.loop !6084

for.cond17:                                       ; preds = %for.cond17.preheader, %for.inc28
  %indvars.iv = phi i64 [ 0, %for.cond17.preheader ], [ %indvars.iv.next, %for.inc28 ], !dbg !6086
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6049, metadata !DIExpression()), !dbg !6050
  %cmp18 = icmp slt i64 %indvars.iv, %5, !dbg !6087
  br i1 %cmp18, label %for.body19, label %cleanup.loopexit, !dbg !6077

for.body19:                                       ; preds = %for.cond17
  %10 = load i32*, i32** %invariant_coefficients, align 8, !dbg !6072
  %arrayidx21 = getelementptr inbounds i32, i32* %10, i64 %indvars.iv, !dbg !6072
  %11 = load i32, i32* %arrayidx21, align 4, !dbg !6072
  %12 = load i32*, i32** %invariant_coefficients22, align 8, !dbg !6088
  %arrayidx24 = getelementptr inbounds i32, i32* %12, i64 %indvars.iv, !dbg !6088
  %13 = load i32, i32* %arrayidx24, align 4, !dbg !6088
  %cmp25 = icmp eq i32 %11, %13, !dbg !6089
  br i1 %cmp25, label %for.inc28, label %cleanup.loopexit, !dbg !6090

for.inc28:                                        ; preds = %for.body19
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6091
  call void @llvm.dbg.value(metadata i32 undef, metadata !6049, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6050
  br label %for.cond17, !dbg !6092, !llvm.loop !6093

cleanup.loopexit:                                 ; preds = %for.cond17, %for.body19
  %retval.0.ph = phi i8 [ 1, %for.cond17 ], [ 0, %for.body19 ]
  br label %cleanup, !dbg !6095

cleanup.loopexit1:                                ; preds = %for.body
  br label %cleanup, !dbg !6095

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %if.end5, %if.end, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end5 ], [ %retval.0.ph, %cleanup.loopexit ], [ 0, %cleanup.loopexit1 ], !dbg !6050
  ret i8 %retval.0, !dbg !6095
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @lambda_vector_copy(i32* %vec1, i32* %vec2, i32 %size) unnamed_addr #0 !dbg !6096 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !6100, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata i32* %vec2, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata i32 %size, metadata !6102, metadata !DIExpression()), !dbg !6103
  %0 = bitcast i32* %vec2 to i8*, !dbg !6104
  %1 = bitcast i32* %vec1 to i8*, !dbg !6105
  %conv = sext i32 %size to i64, !dbg !6106
  %mul = shl nsw i64 %conv, 2, !dbg !6107
  %call = tail call i8* @memcpy(i8* %0, i8* %1, i64 %mul) #6, !dbg !6108
  ret void, !dbg !6109
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local void @lambda_matrix_copy(i32**, i32**, i32, i32) local_unnamed_addr #2

declare dso_local void @lambda_matrix_col_negate(i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lambda_vector_first_nz(i32* %vec1, i32 %n, i32 %start) unnamed_addr #0 !dbg !6110 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !6114, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i32 %n, metadata !6115, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i32 %start, metadata !6116, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i32 %start, metadata !6117, metadata !DIExpression()), !dbg !6118
  %0 = sext i32 %start to i64, !dbg !6119
  %1 = sext i32 %n to i64, !dbg !6119
  br label %while.cond, !dbg !6119

while.cond:                                       ; preds = %while.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body ], [ %0, %entry ], !dbg !6118
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6117, metadata !DIExpression()), !dbg !6118
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !6120
  %2 = trunc i64 %indvars.iv to i32, !dbg !6121
  br i1 %cmp, label %land.rhs, label %while.end, !dbg !6121

land.rhs:                                         ; preds = %while.cond
  %arrayidx = getelementptr inbounds i32, i32* %vec1, i64 %indvars.iv, !dbg !6122
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6122
  %cmp1 = icmp eq i32 %3, 0, !dbg !6123
  br i1 %cmp1, label %while.body, label %while.end, !dbg !6119

while.body:                                       ; preds = %land.rhs
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !6124
  call void @llvm.dbg.value(metadata i32 undef, metadata !6117, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6118
  br label %while.cond, !dbg !6119, !llvm.loop !6125

while.end:                                        ; preds = %while.cond, %land.rhs
  %.lcssa = phi i32 [ %2, %while.cond ], [ %2, %land.rhs ], !dbg !6121
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !6117, metadata !DIExpression()), !dbg !6118
  ret i32 %.lcssa, !dbg !6126
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lambda_vector_min_nz(i32* %vec1, i32 %n, i32 %start) unnamed_addr #0 !dbg !6127 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !6129, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %n, metadata !6130, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %start, metadata !6131, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 -1, metadata !6133, metadata !DIExpression()), !dbg !6134
  %cmp = icmp sgt i32 %start, %n, !dbg !6135
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6135

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i32 345, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6135
  br label %cond.end, !dbg !6135

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i32 %start, metadata !6132, metadata !DIExpression()), !dbg !6134
  %0 = sext i32 %start to i64, !dbg !6136
  %1 = sext i32 %n to i64, !dbg !6136
  br label %for.cond, !dbg !6136

for.cond:                                         ; preds = %for.inc, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %0, %cond.end ], !dbg !6138
  %min.0 = phi i32 [ %min.2, %for.inc ], [ -1, %cond.end ], !dbg !6134
  call void @llvm.dbg.value(metadata i32 %min.0, metadata !6133, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6132, metadata !DIExpression()), !dbg !6134
  %cmp1 = icmp slt i64 %indvars.iv, %1, !dbg !6139
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6141

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %vec1, i64 %indvars.iv, !dbg !6142
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6142
  %tobool = icmp eq i32 %2, 0, !dbg !6142
  br i1 %tobool, label %for.inc, label %if.then, !dbg !6145

if.then:                                          ; preds = %for.body
  %cmp2 = icmp slt i32 %min.0, 0, !dbg !6146
  br i1 %cmp2, label %if.then8, label %lor.lhs.false, !dbg !6148

lor.lhs.false:                                    ; preds = %if.then
  %idxprom5 = sext i32 %min.0 to i64, !dbg !6149
  %arrayidx6 = getelementptr inbounds i32, i32* %vec1, i64 %idxprom5, !dbg !6149
  %3 = load i32, i32* %arrayidx6, align 4, !dbg !6149
  %cmp7 = icmp slt i32 %2, %3, !dbg !6150
  br i1 %cmp7, label %if.then8, label %for.inc, !dbg !6151

if.then8:                                         ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6133, metadata !DIExpression()), !dbg !6134
  %4 = trunc i64 %indvars.iv to i32, !dbg !6152
  br label %for.inc, !dbg !6152

for.inc:                                          ; preds = %for.body, %if.then8, %lor.lhs.false
  %min.2 = phi i32 [ %min.0, %for.body ], [ %4, %if.then8 ], [ %min.0, %lor.lhs.false ], !dbg !6134
  call void @llvm.dbg.value(metadata i32 %min.2, metadata !6133, metadata !DIExpression()), !dbg !6134
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !6153
  call void @llvm.dbg.value(metadata i32 undef, metadata !6132, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6134
  br label %for.cond, !dbg !6154, !llvm.loop !6155

for.end:                                          ; preds = %for.cond
  %min.0.lcssa = phi i32 [ %min.0, %for.cond ], !dbg !6134
  call void @llvm.dbg.value(metadata i32 %min.0.lcssa, metadata !6133, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %min.0.lcssa, metadata !6133, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %min.0.lcssa, metadata !6133, metadata !DIExpression()), !dbg !6134
  %cmp10 = icmp sgt i32 %min.0.lcssa, -1, !dbg !6157
  br i1 %cmp10, label %cond.end13, label %cond.true11, !dbg !6157

cond.true11:                                      ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i32 352, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6157
  br label %cond.end13, !dbg !6157

cond.end13:                                       ; preds = %for.end, %cond.true11
  ret i32 %min.0.lcssa, !dbg !6158
}

declare dso_local void @lambda_matrix_col_exchange(i32**, i32, i32, i32) local_unnamed_addr #2

declare dso_local void @lambda_matrix_col_add(i32**, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lambda_vector_gcd(i32* %vector, i32 %size) unnamed_addr #0 !dbg !6159 {
entry:
  call void @llvm.dbg.value(metadata i32* %vector, metadata !6163, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %size, metadata !6164, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 0, metadata !6166, metadata !DIExpression()), !dbg !6167
  %cmp = icmp sgt i32 %size, 0, !dbg !6168
  br i1 %cmp, label %if.then, label %if.end, !dbg !6170

if.then:                                          ; preds = %entry
  %0 = load i32, i32* %vector, align 4, !dbg !6171
  call void @llvm.dbg.value(metadata i32 %0, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 1, metadata !6165, metadata !DIExpression()), !dbg !6167
  %wide.trip.count = zext i32 %size to i64, !dbg !6173
  br label %for.cond, !dbg !6176

for.cond:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.then ], !dbg !6177
  %gcd1.0 = phi i32 [ %call, %for.body ], [ %0, %if.then ], !dbg !6178
  call void @llvm.dbg.value(metadata i32 %gcd1.0, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6165, metadata !DIExpression()), !dbg !6167
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !6173
  br i1 %exitcond, label %if.end.loopexit, label %for.body, !dbg !6179

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds i32, i32* %vector, i64 %indvars.iv, !dbg !6180
  %1 = load i32, i32* %arrayidx2, align 4, !dbg !6180
  %call = tail call fastcc i32 @gcd(i32 %gcd1.0, i32 %1) #7, !dbg !6181
  call void @llvm.dbg.value(metadata i32 %call, metadata !6166, metadata !DIExpression()), !dbg !6167
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6182
  call void @llvm.dbg.value(metadata i32 undef, metadata !6165, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6167
  br label %for.cond, !dbg !6183, !llvm.loop !6184

if.end.loopexit:                                  ; preds = %for.cond
  %gcd1.0.lcssa = phi i32 [ %gcd1.0, %for.cond ], !dbg !6178
  call void @llvm.dbg.value(metadata i32 %gcd1.0.lcssa, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %gcd1.0.lcssa, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %gcd1.0.lcssa, metadata !6166, metadata !DIExpression()), !dbg !6167
  br label %if.end, !dbg !6186

if.end:                                           ; preds = %if.end.loopexit, %entry
  %gcd1.1 = phi i32 [ 0, %entry ], [ %gcd1.0.lcssa, %if.end.loopexit ], !dbg !6167
  call void @llvm.dbg.value(metadata i32 %gcd1.1, metadata !6166, metadata !DIExpression()), !dbg !6167
  ret i32 %gcd1.1, !dbg !6186
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @lambda_vector_mult_const(i32* %vec1, i32* %vec2, i32 %size, i32 %const1) unnamed_addr #0 !dbg !6187 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !6191, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i32* %vec2, metadata !6192, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i32 %size, metadata !6193, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i32 %const1, metadata !6194, metadata !DIExpression()), !dbg !6196
  %cmp = icmp eq i32 %const1, 0, !dbg !6197
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !6199

for.cond.preheader:                               ; preds = %entry
  %0 = sext i32 %size to i64, !dbg !6200
  br label %for.cond, !dbg !6200

if.then:                                          ; preds = %entry
  tail call fastcc void @lambda_vector_clear(i32* %vec2, i32 %size) #7, !dbg !6202
  br label %if.end, !dbg !6202

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !6203
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6195, metadata !DIExpression()), !dbg !6196
  %cmp1 = icmp slt i64 %indvars.iv, %0, !dbg !6204
  br i1 %cmp1, label %for.body, label %if.end.loopexit, !dbg !6200

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %vec1, i64 %indvars.iv, !dbg !6206
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6206
  %mul = mul nsw i32 %1, %const1, !dbg !6207
  %arrayidx3 = getelementptr inbounds i32, i32* %vec2, i64 %indvars.iv, !dbg !6208
  store i32 %mul, i32* %arrayidx3, align 4, !dbg !6209
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6210
  call void @llvm.dbg.value(metadata i32 undef, metadata !6195, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6196
  br label %for.cond, !dbg !6211, !llvm.loop !6212

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !6214

if.end:                                           ; preds = %if.end.loopexit, %if.then
  ret void, !dbg !6214
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6215 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6219, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.value(metadata i32 %i, metadata !6220, metadata !DIExpression()), !dbg !6221
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !6222
  %tobool = icmp eq i8 %call, 0, !dbg !6222
  br i1 %tobool, label %return, label %if.then, !dbg !6224

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !6225
  %idxprom = zext i32 %i to i64, !dbg !6225
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !6225
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6225
  br label %return, !dbg !6227

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !6228
  ret %union.tree_node* %retval.0, !dbg !6229
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6230 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6232, metadata !DIExpression()), !dbg !6233
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6234
  %cmp = icmp eq i32 %call, 0, !dbg !6235
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !6236

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6237
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6238
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6239
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6240 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6242, metadata !DIExpression()), !dbg !6244
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !6245
  %idxprom = zext i32 %call to i64, !dbg !6246
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !6246
  %0 = load i64, i64* %arrayidx, align 8, !dbg !6246
  call void @llvm.dbg.value(metadata i64 %0, metadata !6243, metadata !DIExpression()), !dbg !6244
  %cmp = icmp eq i64 %0, 0, !dbg !6247
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6247

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6247
  br label %cond.end, !dbg !6247

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !6248
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !6249
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !6250
  ret %union.tree_node** %2, !dbg !6251
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6252 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6256, metadata !DIExpression()), !dbg !6257
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !6258
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !6259
  ret i32 %call1, !dbg !6260
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !6261 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6265, metadata !DIExpression()), !dbg !6266
  %idxprom = zext i32 %code to i64, !dbg !6267
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !6267
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6267
  ret i32 %0, !dbg !6268
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %loop, %union.tree_node* %chrec) unnamed_addr #0 !dbg !6269 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6274, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !6275, metadata !DIExpression()), !dbg !6276
  %call = tail call fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) #7, !dbg !6277
  %call1 = tail call %union.tree_node* @instantiate_scev(%struct.basic_block_def* %call, %struct.loop* %loop, %union.tree_node* %chrec) #6, !dbg !6278
  ret %union.tree_node* %call1, !dbg !6279
}

declare dso_local %union.tree_node* @analyze_scalar_evolution(%struct.loop*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @evolution_part_in_loop_num(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !6280 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !6284, metadata !DIExpression()), !dbg !6285
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !6286
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !6286
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6287
  ret %union.tree_node* %1, !dbg !6288
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6289 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6293, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i32 %i, metadata !6294, metadata !DIExpression()), !dbg !6295
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !6296
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !6297
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !6298
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lambda_linear_expression_s* @gcc_tree_to_linear_expression(i32 %depth, %union.tree_node* %expr, %struct.VEC_tree_heap* %outerinductionvars, %struct.VEC_tree_heap* %invariants, i32 %extra, %struct.obstack* %lambda_obstack) unnamed_addr #5 !dbg !6299 {
entry:
  %iv = alloca %union.tree_node*, align 8
  %invar = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6303, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6304, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %outerinductionvars, metadata !6305, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %invariants, metadata !6306, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata i32 %extra, metadata !6307, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct.obstack* %lambda_obstack, metadata !6308, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* null, metadata !6309, metadata !DIExpression()), !dbg !6315
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6316
  %bf.load = load i64, i64* %0, align 8, !dbg !6316
  %1 = trunc i64 %bf.load to i16, !dbg !6316
  switch i16 %1, label %cleanup [
    i16 23, label %sw.bb
    i16 141, label %sw.bb4
  ], !dbg !6317

sw.bb:                                            ; preds = %entry
  %mul = shl nsw i32 %depth, 1, !dbg !6318
  %call = tail call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %depth, i32 %mul, %struct.obstack* %lambda_obstack) #7, !dbg !6320
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call, metadata !6309, metadata !DIExpression()), !dbg !6315
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6321
  %low = bitcast i32* %int_cst1 to i64*, !dbg !6321
  %2 = load i64, i64* %low, align 8, !dbg !6321
  %conv = trunc i64 %2 to i32, !dbg !6321
  %constant = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call, i64 0, i32 1, !dbg !6322
  %cmp = icmp eq i32 %extra, 0, !dbg !6323
  br i1 %cmp, label %if.end, label %if.then, !dbg !6325

if.then:                                          ; preds = %sw.bb
  %add = add nsw i32 %conv, %extra, !dbg !6326
  br label %if.end, !dbg !6327

if.end:                                           ; preds = %sw.bb, %if.then
  %storemerge = phi i32 [ %add, %if.then ], [ %conv, %sw.bb ], !dbg !6328
  store i32 %storemerge, i32* %constant, align 8, !dbg !6328
  %denominator = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call, i64 0, i32 3, !dbg !6329
  store i32 1, i32* %denominator, align 8, !dbg !6330
  br label %cleanup, !dbg !6331

sw.bb4:                                           ; preds = %entry
  %3 = bitcast %union.tree_node** %iv to i8*, !dbg !6332
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6332
  %4 = bitcast %union.tree_node** %invar to i8*, !dbg !6332
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6332
  call void @llvm.dbg.value(metadata i64 0, metadata !6314, metadata !DIExpression()), !dbg !6333
  %base5 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %outerinductionvars, i64 0, i32 0, !dbg !6334
  %var13 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6337
  %5 = bitcast i32* %var13 to %union.tree_node**, !dbg !6337
  %mul17 = shl nsw i32 %depth, 1, !dbg !6341
  %cmp19 = icmp eq i32 %extra, 0, !dbg !6343
  br i1 %cmp19, label %sw.bb4.split.us, label %sw.bb4.sw.bb4.split_crit_edge, !dbg !6345

sw.bb4.sw.bb4.split_crit_edge:                    ; preds = %sw.bb4
  br label %for.cond, !dbg !6345

sw.bb4.split.us:                                  ; preds = %sw.bb4
  br label %for.cond.us, !dbg !6345

for.cond.us:                                      ; preds = %for.inc.us, %sw.bb4.split.us
  %lle.0.us = phi %struct.lambda_linear_expression_s* [ null, %sw.bb4.split.us ], [ %lle.2.us, %for.inc.us ], !dbg !6315
  %i.0.us = phi i64 [ 0, %sw.bb4.split.us ], [ %inc.us, %for.inc.us ], !dbg !6346
  call void @llvm.dbg.value(metadata i64 %i.0.us, metadata !6314, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.0.us, metadata !6309, metadata !DIExpression()), !dbg !6315
  %conv6.us = trunc i64 %i.0.us to i32, !dbg !6347
  call void @llvm.dbg.value(metadata %union.tree_node** %iv, metadata !6310, metadata !DIExpression(DW_OP_deref)), !dbg !6333
  %call7.us = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base5, i32 %conv6.us, %union.tree_node** nonnull %iv) #7, !dbg !6347
  %tobool8.us = icmp eq i32 %call7.us, 0, !dbg !6348
  br i1 %tobool8.us, label %for.cond27.preheader.us-lcssa.us, label %for.body.us, !dbg !6348

for.body.us:                                      ; preds = %for.cond.us
  %6 = load %union.tree_node*, %union.tree_node** %iv, align 8, !dbg !6349
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6310, metadata !DIExpression()), !dbg !6333
  %cmp9.us = icmp eq %union.tree_node* %6, null, !dbg !6350
  br i1 %cmp9.us, label %for.inc.us, label %if.then11.us, !dbg !6351

if.then11.us:                                     ; preds = %for.body.us
  %var.us = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6352
  %7 = bitcast i32* %var.us to %union.tree_node**, !dbg !6352
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !6352
  %9 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6353
  %cmp14.us = icmp eq %union.tree_node* %8, %9, !dbg !6354
  br i1 %cmp14.us, label %if.then16.us, label %for.inc.us, !dbg !6355

if.then16.us:                                     ; preds = %if.then11.us
  %call18.us = call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %depth, i32 %mul17, %struct.obstack* %lambda_obstack) #7, !dbg !6356
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call18.us, metadata !6309, metadata !DIExpression()), !dbg !6315
  %coefficients.us = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call18.us, i64 0, i32 0, !dbg !6357
  %10 = load i32*, i32** %coefficients.us, align 8, !dbg !6357
  %arrayidx.us = getelementptr inbounds i32, i32* %10, i64 %i.0.us, !dbg !6357
  store i32 1, i32* %arrayidx.us, align 4, !dbg !6358
  %denominator24.us = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call18.us, i64 0, i32 3, !dbg !6359
  store i32 1, i32* %denominator24.us, align 8, !dbg !6360
  br label %for.inc.us, !dbg !6361

for.inc.us:                                       ; preds = %if.then16.us, %if.then11.us, %for.body.us
  %lle.2.us = phi %struct.lambda_linear_expression_s* [ %lle.0.us, %for.body.us ], [ %call18.us, %if.then16.us ], [ %lle.0.us, %if.then11.us ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.2.us, metadata !6309, metadata !DIExpression()), !dbg !6315
  %inc.us = add i64 %i.0.us, 1, !dbg !6362
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !6314, metadata !DIExpression()), !dbg !6333
  br label %for.cond.us, !dbg !6363, !llvm.loop !6364

for.cond27.preheader.us-lcssa.us:                 ; preds = %for.cond.us
  %lle.0.us.lcssa = phi %struct.lambda_linear_expression_s* [ %lle.0.us, %for.cond.us ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.0.us.lcssa, metadata !6309, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.0.us.lcssa, metadata !6309, metadata !DIExpression()), !dbg !6315
  br label %for.cond27.preheader, !dbg !6366

for.cond:                                         ; preds = %for.inc, %sw.bb4.sw.bb4.split_crit_edge
  %lle.0 = phi %struct.lambda_linear_expression_s* [ null, %sw.bb4.sw.bb4.split_crit_edge ], [ %lle.2, %for.inc ], !dbg !6315
  %i.0 = phi i64 [ 0, %sw.bb4.sw.bb4.split_crit_edge ], [ %inc, %for.inc ], !dbg !6346
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6314, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.0, metadata !6309, metadata !DIExpression()), !dbg !6315
  %conv6 = trunc i64 %i.0 to i32, !dbg !6347
  call void @llvm.dbg.value(metadata %union.tree_node** %iv, metadata !6310, metadata !DIExpression(DW_OP_deref)), !dbg !6333
  %call7 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base5, i32 %conv6, %union.tree_node** nonnull %iv) #7, !dbg !6347
  %tobool8 = icmp eq i32 %call7, 0, !dbg !6348
  br i1 %tobool8, label %for.cond27.preheader.us-lcssa, label %for.body, !dbg !6348

for.cond27.preheader.us-lcssa:                    ; preds = %for.cond
  %lle.0.lcssa4 = phi %struct.lambda_linear_expression_s* [ %lle.0, %for.cond ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.0.lcssa4, metadata !6309, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.0.lcssa4, metadata !6309, metadata !DIExpression()), !dbg !6315
  br label %for.cond27.preheader, !dbg !6366

for.cond27.preheader:                             ; preds = %for.cond27.preheader.us-lcssa.us, %for.cond27.preheader.us-lcssa
  %lle.0.lcssa = phi %struct.lambda_linear_expression_s* [ %lle.0.lcssa4, %for.cond27.preheader.us-lcssa ], [ %lle.0.us.lcssa, %for.cond27.preheader.us-lcssa.us ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.0.lcssa, metadata !6309, metadata !DIExpression()), !dbg !6315
  %base30 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %invariants, i64 0, i32 0, !dbg !6366
  br i1 %cmp19, label %for.cond27.preheader.split.us, label %for.cond27.preheader.for.cond27.preheader.split_crit_edge, !dbg !6369

for.cond27.preheader.for.cond27.preheader.split_crit_edge: ; preds = %for.cond27.preheader
  br label %for.cond27, !dbg !6369

for.cond27.preheader.split.us:                    ; preds = %for.cond27.preheader
  br label %for.cond27.us, !dbg !6369

for.cond27.us:                                    ; preds = %for.inc59.us, %for.cond27.preheader.split.us
  %lle.3.us = phi %struct.lambda_linear_expression_s* [ %lle.5.us, %for.inc59.us ], [ %lle.0.lcssa, %for.cond27.preheader.split.us ], !dbg !6315
  %i.1.us = phi i64 [ %inc60.us, %for.inc59.us ], [ 0, %for.cond27.preheader.split.us ], !dbg !6370
  call void @llvm.dbg.value(metadata i64 %i.1.us, metadata !6314, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.3.us, metadata !6309, metadata !DIExpression()), !dbg !6315
  %conv34.us = trunc i64 %i.1.us to i32, !dbg !6371
  call void @llvm.dbg.value(metadata %union.tree_node** %invar, metadata !6313, metadata !DIExpression(DW_OP_deref)), !dbg !6333
  %call35.us = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base30, i32 %conv34.us, %union.tree_node** nonnull %invar) #7, !dbg !6371
  %tobool36.us = icmp eq i32 %call35.us, 0, !dbg !6369
  br i1 %tobool36.us, label %for.end61.us-lcssa.us, label %for.body37.us, !dbg !6369

for.body37.us:                                    ; preds = %for.cond27.us
  %11 = load %union.tree_node*, %union.tree_node** %invar, align 8, !dbg !6372
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !6313, metadata !DIExpression()), !dbg !6333
  %cmp38.us = icmp eq %union.tree_node* %11, null, !dbg !6374
  br i1 %cmp38.us, label %for.inc59.us, label %if.then40.us, !dbg !6375

if.then40.us:                                     ; preds = %for.body37.us
  %var42.us = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6376
  %12 = bitcast i32* %var42.us to %union.tree_node**, !dbg !6376
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !6376
  %14 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6379
  %cmp45.us = icmp eq %union.tree_node* %13, %14, !dbg !6380
  br i1 %cmp45.us, label %if.then47.us, label %for.inc59.us, !dbg !6381

if.then47.us:                                     ; preds = %if.then40.us
  %call49.us = call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %depth, i32 %mul17, %struct.obstack* %lambda_obstack) #7, !dbg !6382
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call49.us, metadata !6309, metadata !DIExpression()), !dbg !6315
  %invariant_coefficients.us = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call49.us, i64 0, i32 2, !dbg !6384
  %15 = load i32*, i32** %invariant_coefficients.us, align 8, !dbg !6384
  %arrayidx50.us = getelementptr inbounds i32, i32* %15, i64 %i.1.us, !dbg !6384
  store i32 1, i32* %arrayidx50.us, align 4, !dbg !6385
  %denominator56.us = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call49.us, i64 0, i32 3, !dbg !6386
  store i32 1, i32* %denominator56.us, align 8, !dbg !6387
  br label %for.inc59.us, !dbg !6388

for.inc59.us:                                     ; preds = %if.then47.us, %if.then40.us, %for.body37.us
  %lle.5.us = phi %struct.lambda_linear_expression_s* [ %lle.3.us, %for.body37.us ], [ %call49.us, %if.then47.us ], [ %lle.3.us, %if.then40.us ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.5.us, metadata !6309, metadata !DIExpression()), !dbg !6315
  %inc60.us = add i64 %i.1.us, 1, !dbg !6389
  call void @llvm.dbg.value(metadata i64 %inc60.us, metadata !6314, metadata !DIExpression()), !dbg !6333
  br label %for.cond27.us, !dbg !6390, !llvm.loop !6391

for.end61.us-lcssa.us:                            ; preds = %for.cond27.us
  %lle.3.us.lcssa = phi %struct.lambda_linear_expression_s* [ %lle.3.us, %for.cond27.us ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.3.us.lcssa, metadata !6309, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.3.us.lcssa, metadata !6309, metadata !DIExpression()), !dbg !6315
  br label %for.end61, !dbg !6393

for.body:                                         ; preds = %for.cond
  %16 = load %union.tree_node*, %union.tree_node** %iv, align 8, !dbg !6349
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !6310, metadata !DIExpression()), !dbg !6333
  %cmp9 = icmp eq %union.tree_node* %16, null, !dbg !6350
  br i1 %cmp9, label %for.inc, label %if.then11, !dbg !6351

if.then11:                                        ; preds = %for.body
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6352
  %17 = bitcast i32* %var to %union.tree_node**, !dbg !6352
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !6352
  %19 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6353
  %cmp14 = icmp eq %union.tree_node* %18, %19, !dbg !6354
  br i1 %cmp14, label %if.then16, label %for.inc, !dbg !6355

if.then16:                                        ; preds = %if.then11
  %call18 = call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %depth, i32 %mul17, %struct.obstack* %lambda_obstack) #7, !dbg !6356
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call18, metadata !6309, metadata !DIExpression()), !dbg !6315
  %coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call18, i64 0, i32 0, !dbg !6357
  %20 = load i32*, i32** %coefficients, align 8, !dbg !6357
  %arrayidx = getelementptr inbounds i32, i32* %20, i64 %i.0, !dbg !6357
  store i32 1, i32* %arrayidx, align 4, !dbg !6358
  %constant22 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call18, i64 0, i32 1, !dbg !6394
  store i32 %extra, i32* %constant22, align 8, !dbg !6395
  %denominator24 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call18, i64 0, i32 3, !dbg !6359
  store i32 1, i32* %denominator24, align 8, !dbg !6360
  br label %for.inc, !dbg !6361

for.inc:                                          ; preds = %for.body, %if.then16, %if.then11
  %lle.2 = phi %struct.lambda_linear_expression_s* [ %lle.0, %for.body ], [ %call18, %if.then16 ], [ %lle.0, %if.then11 ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.2, metadata !6309, metadata !DIExpression()), !dbg !6315
  %inc = add i64 %i.0, 1, !dbg !6362
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6314, metadata !DIExpression()), !dbg !6333
  br label %for.cond, !dbg !6363, !llvm.loop !6364

for.cond27:                                       ; preds = %for.cond27.preheader.for.cond27.preheader.split_crit_edge, %for.inc59
  %lle.3 = phi %struct.lambda_linear_expression_s* [ %lle.5, %for.inc59 ], [ %lle.0.lcssa, %for.cond27.preheader.for.cond27.preheader.split_crit_edge ], !dbg !6315
  %i.1 = phi i64 [ %inc60, %for.inc59 ], [ 0, %for.cond27.preheader.for.cond27.preheader.split_crit_edge ], !dbg !6370
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !6314, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.3, metadata !6309, metadata !DIExpression()), !dbg !6315
  %conv34 = trunc i64 %i.1 to i32, !dbg !6371
  call void @llvm.dbg.value(metadata %union.tree_node** %invar, metadata !6313, metadata !DIExpression(DW_OP_deref)), !dbg !6333
  %call35 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base30, i32 %conv34, %union.tree_node** nonnull %invar) #7, !dbg !6371
  %tobool36 = icmp eq i32 %call35, 0, !dbg !6369
  br i1 %tobool36, label %for.end61.us-lcssa, label %for.body37, !dbg !6369

for.body37:                                       ; preds = %for.cond27
  %21 = load %union.tree_node*, %union.tree_node** %invar, align 8, !dbg !6372
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !6313, metadata !DIExpression()), !dbg !6333
  %cmp38 = icmp eq %union.tree_node* %21, null, !dbg !6374
  br i1 %cmp38, label %for.inc59, label %if.then40, !dbg !6375

if.then40:                                        ; preds = %for.body37
  %var42 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6376
  %22 = bitcast i32* %var42 to %union.tree_node**, !dbg !6376
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !6376
  %24 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6379
  %cmp45 = icmp eq %union.tree_node* %23, %24, !dbg !6380
  br i1 %cmp45, label %if.then47, label %for.inc59, !dbg !6381

if.then47:                                        ; preds = %if.then40
  %call49 = call %struct.lambda_linear_expression_s* @lambda_linear_expression_new(i32 %depth, i32 %mul17, %struct.obstack* %lambda_obstack) #7, !dbg !6382
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %call49, metadata !6309, metadata !DIExpression()), !dbg !6315
  %invariant_coefficients = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call49, i64 0, i32 2, !dbg !6384
  %25 = load i32*, i32** %invariant_coefficients, align 8, !dbg !6384
  %arrayidx50 = getelementptr inbounds i32, i32* %25, i64 %i.1, !dbg !6384
  store i32 1, i32* %arrayidx50, align 4, !dbg !6385
  %constant54 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call49, i64 0, i32 1, !dbg !6396
  store i32 %extra, i32* %constant54, align 8, !dbg !6398
  %denominator56 = getelementptr inbounds %struct.lambda_linear_expression_s, %struct.lambda_linear_expression_s* %call49, i64 0, i32 3, !dbg !6386
  store i32 1, i32* %denominator56, align 8, !dbg !6387
  br label %for.inc59, !dbg !6388

for.inc59:                                        ; preds = %for.body37, %if.then47, %if.then40
  %lle.5 = phi %struct.lambda_linear_expression_s* [ %lle.3, %for.body37 ], [ %call49, %if.then47 ], [ %lle.3, %if.then40 ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.5, metadata !6309, metadata !DIExpression()), !dbg !6315
  %inc60 = add i64 %i.1, 1, !dbg !6389
  call void @llvm.dbg.value(metadata i64 %inc60, metadata !6314, metadata !DIExpression()), !dbg !6333
  br label %for.cond27, !dbg !6390, !llvm.loop !6391

for.end61.us-lcssa:                               ; preds = %for.cond27
  %lle.3.lcssa3 = phi %struct.lambda_linear_expression_s* [ %lle.3, %for.cond27 ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.3.lcssa3, metadata !6309, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.3.lcssa3, metadata !6309, metadata !DIExpression()), !dbg !6315
  br label %for.end61, !dbg !6393

for.end61:                                        ; preds = %for.end61.us-lcssa.us, %for.end61.us-lcssa
  %lle.3.lcssa = phi %struct.lambda_linear_expression_s* [ %lle.3.lcssa3, %for.end61.us-lcssa ], [ %lle.3.us.lcssa, %for.end61.us-lcssa.us ], !dbg !6315
  call void @llvm.dbg.value(metadata %struct.lambda_linear_expression_s* %lle.3.lcssa, metadata !6309, metadata !DIExpression()), !dbg !6315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6393
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6393
  br label %cleanup, !dbg !6399

cleanup:                                          ; preds = %if.end, %for.end61, %entry
  %retval.0 = phi %struct.lambda_linear_expression_s* [ null, %entry ], [ %lle.3.lcssa, %for.end61 ], [ %call, %if.end ], !dbg !6315
  ret %struct.lambda_linear_expression_s* %retval.0, !dbg !6400
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6401 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !6405, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6406, metadata !DIExpression()), !dbg !6408
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !6409
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6409
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6409

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6409
  br label %cond.end, !dbg !6409

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6409
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 %alloc_) #7, !dbg !6409
  %tobool1 = icmp eq i32 %call, 0, !dbg !6409
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6409
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6407, metadata !DIExpression()), !dbg !6408
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6409

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !6410
  %2 = load i8*, i8** %1, align 8, !dbg !6410
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 %alloc_) #6, !dbg !6410
  store i8* %call3, i8** %1, align 8, !dbg !6410
  br label %if.end, !dbg !6410

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6409
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @invariant_in_loop_and_outer_loops(%struct.loop* %loop, %union.tree_node* %op) unnamed_addr #5 !dbg !6412 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6416, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6417, metadata !DIExpression()), !dbg !6418
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %op) #6, !dbg !6419
  %tobool = icmp eq i8 %call, 0, !dbg !6419
  br i1 %tobool, label %if.end, label %return, !dbg !6421

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @loop_depth(%struct.loop* %loop) #7, !dbg !6422
  %cmp = icmp eq i32 %call1, 0, !dbg !6424
  br i1 %cmp, label %return, label %if.end3, !dbg !6425

if.end3:                                          ; preds = %if.end
  %call4 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* %op) #6, !dbg !6426
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6426
  br i1 %tobool5, label %return, label %if.end7, !dbg !6428

if.end7:                                          ; preds = %if.end3
  %call8 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %loop) #7, !dbg !6429
  %call9 = tail call fastcc zeroext i8 @invariant_in_loop_and_outer_loops(%struct.loop* %call8, %union.tree_node* %op) #7, !dbg !6431
  %tobool10 = icmp ne i8 %call9, 0, !dbg !6431
  %. = zext i1 %tobool10 to i8, !dbg !6418
  ret i8 %., !dbg !6432

return:                                           ; preds = %if.end3, %entry, %if.end
  %retval.0 = phi i8 [ 1, %entry ], [ 1, %if.end ], [ 0, %if.end3 ], !dbg !6418
  ret i8 %retval.0, !dbg !6432
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6433 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6437, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6438, metadata !DIExpression()), !dbg !6440
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6441
  %0 = load i32, i32* %num1, align 8, !dbg !6441
  %inc = add i32 %0, 1, !dbg !6441
  store i32 %inc, i32* %num1, align 8, !dbg !6441
  %idxprom = zext i32 %0 to i64, !dbg !6441
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6441
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !6439, metadata !DIExpression()), !dbg !6440
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !6441
  ret %union.tree_node** %arrayidx, !dbg !6441
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6442 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6446, metadata !DIExpression()), !dbg !6447
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !6448
  %bf.load = load i32, i32* %0, align 8, !dbg !6448
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6448
  ret i32 %bf.lshr, !dbg !6449
}

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** %vec_, i32 %obj_) unnamed_addr #0 !dbg !6450 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !6455, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !6456, metadata !DIExpression()), !dbg !6457
  %call = tail call fastcc i32 @VEC_int_heap_reserve(%struct.VEC_int_heap** %vec_, i32 1) #7, !dbg !6458
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !6458
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !6458
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6458

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !6458
  br label %cond.end, !dbg !6458

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6458
  %call1 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond, i32 %obj_) #7, !dbg !6458
  ret i32* %call1, !dbg !6458
}

declare dso_local %union.tree_node* @instantiate_scev(%struct.basic_block_def*, %struct.loop*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) unnamed_addr #0 !dbg !6459 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6463, metadata !DIExpression()), !dbg !6465
  %call = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !6466
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !6464, metadata !DIExpression()), !dbg !6465
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !6467
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6467

cond.true:                                        ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !6468
  br label %cond.end, !dbg !6467

cond.false:                                       ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6469
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6469
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6469
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !6469
  br label %cond.end, !dbg !6467

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.basic_block_def** [ %src, %cond.true ], [ %x_entry_block_ptr, %cond.false ]
  %cond = load %struct.basic_block_def*, %struct.basic_block_def** %cond.in, align 8, !dbg !6467
  ret %struct.basic_block_def* %cond, !dbg !6470
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6471 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6475, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.value(metadata i32 %index, metadata !6476, metadata !DIExpression()), !dbg !6477
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6478
  %0 = load i32, i32* %capacity, align 8, !dbg !6478
  %cmp = icmp ult i32 %0, %index, !dbg !6478
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6478

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6478
  br label %cond.end, !dbg !6478

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !6479
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !6479
  ret %struct.phi_arg_d* %arrayidx, !dbg !6480
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6481 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6486, metadata !DIExpression()), !dbg !6487
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6488
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6488

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !6488
  %0 = load i32, i32* %alloc, align 4, !dbg !6488
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6488
  %1 = load i32, i32* %num, align 8, !dbg !6488
  %sub = sub i32 %0, %1, !dbg !6488
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !6488
  br label %cond.end, !dbg !6488

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !6488
  br label %cond.end, !dbg !6488

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !6488
  ret i32 %cond, !dbg !6488
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !6489 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6495, metadata !DIExpression()), !dbg !6496
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !6497
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6497
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !6497
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6497

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !6497
  br label %cond.end, !dbg !6497

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6497
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !6497
  ret i32 %call, !dbg !6498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !6499 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6503, metadata !DIExpression()), !dbg !6505
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !6506
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6506
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !6506
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6506

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !6506
  br label %cond.end, !dbg !6506

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6506
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !6506
  call void @llvm.dbg.value(metadata i32 %call, metadata !6504, metadata !DIExpression()), !dbg !6505
  %cmp = icmp eq i32 %call, 0, !dbg !6507
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6509

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6510
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !6510
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !6510

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !6510
  br label %cond.end8, !dbg !6510

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !6510
  %sub = add i32 %call, -1, !dbg !6510
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !6510
  br label %cleanup, !dbg !6511

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !6505
  ret %struct.loop* %retval.0, !dbg !6512
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !6513 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !6519, metadata !DIExpression()), !dbg !6520
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !6521
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6521

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !6521
  %0 = load i32, i32* %num, align 8, !dbg !6521
  br label %cond.end, !dbg !6521

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6521
  ret i32 %cond, !dbg !6521
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6522 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !6526, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6527, metadata !DIExpression()), !dbg !6528
  br label %land.end, !dbg !6529

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6529
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6529
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !6529
  ret %struct.loop* %0, !dbg !6529
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_heap_reserve(%struct.VEC_int_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6530 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !6534, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.value(metadata i32 1, metadata !6535, metadata !DIExpression()), !dbg !6537
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !6538
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !6538
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6538

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !6538
  br label %cond.end, !dbg !6538

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6538
  %call = tail call fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %cond, i32 1) #7, !dbg !6538
  %tobool1 = icmp eq i32 %call, 0, !dbg !6538
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6538
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6536, metadata !DIExpression()), !dbg !6537
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6538

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_int_heap** %vec_ to i8**, !dbg !6539
  %2 = load i8*, i8** %1, align 8, !dbg !6539
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 4) #6, !dbg !6539
  store i8* %call3, i8** %1, align 8, !dbg !6539
  br label %if.end, !dbg !6539

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6538
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !6541 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6546, metadata !DIExpression()), !dbg !6549
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !6547, metadata !DIExpression()), !dbg !6549
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6550
  %0 = load i32, i32* %num1, align 4, !dbg !6550
  %inc = add i32 %0, 1, !dbg !6550
  store i32 %inc, i32* %num1, align 4, !dbg !6550
  %idxprom = zext i32 %0 to i64, !dbg !6550
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6550
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !6548, metadata !DIExpression()), !dbg !6549
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !6550
  ret i32* %arrayidx, !dbg !6550
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6551 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6555, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.value(metadata i32 1, metadata !6556, metadata !DIExpression()), !dbg !6557
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !6558
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6558

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 1, !dbg !6558
  %0 = load i32, i32* %alloc, align 4, !dbg !6558
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6558
  %1 = load i32, i32* %num, align 4, !dbg !6558
  %cmp1 = icmp ne i32 %0, %1, !dbg !6558
  %phitmp = zext i1 %cmp1 to i32, !dbg !6558
  br label %cond.end, !dbg !6558

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6558

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6558
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lambda_loop_heap_reserve(%struct.VEC_lambda_loop_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6559 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_heap** %vec_, metadata !6563, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.value(metadata i32 1, metadata !6564, metadata !DIExpression()), !dbg !6566
  %0 = load %struct.VEC_lambda_loop_heap*, %struct.VEC_lambda_loop_heap** %vec_, align 8, !dbg !6567
  %tobool = icmp eq %struct.VEC_lambda_loop_heap* %0, null, !dbg !6567
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6567

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_lambda_loop_heap, %struct.VEC_lambda_loop_heap* %0, i64 0, i32 0, !dbg !6567
  br label %cond.end, !dbg !6567

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_lambda_loop_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6567
  %call = tail call fastcc i32 @VEC_lambda_loop_base_space(%struct.VEC_lambda_loop_base* %cond, i32 1) #7, !dbg !6567
  %tobool1 = icmp eq i32 %call, 0, !dbg !6567
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6567
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6565, metadata !DIExpression()), !dbg !6566
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6567

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_lambda_loop_heap** %vec_ to i8**, !dbg !6568
  %2 = load i8*, i8** %1, align 8, !dbg !6568
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !6568
  store i8* %call3, i8** %1, align 8, !dbg !6568
  br label %if.end, !dbg !6568

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6567
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.lambda_loop_s** @VEC_lambda_loop_base_quick_push(%struct.VEC_lambda_loop_base* %vec_, %struct.lambda_loop_s* %obj_) unnamed_addr #0 !dbg !6570 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_base* %vec_, metadata !6575, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s* %obj_, metadata !6576, metadata !DIExpression()), !dbg !6578
  %num1 = getelementptr inbounds %struct.VEC_lambda_loop_base, %struct.VEC_lambda_loop_base* %vec_, i64 0, i32 0, !dbg !6579
  %0 = load i32, i32* %num1, align 8, !dbg !6579
  %inc = add i32 %0, 1, !dbg !6579
  store i32 %inc, i32* %num1, align 8, !dbg !6579
  %idxprom = zext i32 %0 to i64, !dbg !6579
  %arrayidx = getelementptr inbounds %struct.VEC_lambda_loop_base, %struct.VEC_lambda_loop_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6579
  call void @llvm.dbg.value(metadata %struct.lambda_loop_s** %arrayidx, metadata !6577, metadata !DIExpression()), !dbg !6578
  store %struct.lambda_loop_s* %obj_, %struct.lambda_loop_s** %arrayidx, align 8, !dbg !6579
  ret %struct.lambda_loop_s** %arrayidx, !dbg !6579
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lambda_loop_base_space(%struct.VEC_lambda_loop_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6580 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_loop_base* %vec_, metadata !6584, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 1, metadata !6585, metadata !DIExpression()), !dbg !6586
  %tobool = icmp eq %struct.VEC_lambda_loop_base* %vec_, null, !dbg !6587
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6587

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_lambda_loop_base, %struct.VEC_lambda_loop_base* %vec_, i64 0, i32 1, !dbg !6587
  %0 = load i32, i32* %alloc, align 4, !dbg !6587
  %num = getelementptr inbounds %struct.VEC_lambda_loop_base, %struct.VEC_lambda_loop_base* %vec_, i64 0, i32 0, !dbg !6587
  %1 = load i32, i32* %num, align 8, !dbg !6587
  %cmp1 = icmp ne i32 %0, %1, !dbg !6587
  %phitmp = zext i1 %cmp1 to i32, !dbg !6587
  br label %cond.end, !dbg !6587

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6587

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6587
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6588 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6592, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6593, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6595, metadata !DIExpression()), !dbg !6600
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !6601
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6601
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !6596, metadata !DIExpression()), !dbg !6600
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #7, !dbg !6602
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6597, metadata !DIExpression()), !dbg !6600
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !6603
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !6603
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !6604
  %tobool = icmp eq i8 %call1, 0, !dbg !6604
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !6604
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6599, metadata !DIExpression()), !dbg !6600
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !6605
  %cmp = icmp eq i32 %call2, 16, !dbg !6607
  br i1 %cmp, label %if.then, label %if.else, !dbg !6608

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6598, metadata !DIExpression(DW_OP_deref)), !dbg !6600
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !6609
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !6594, metadata !DIExpression()), !dbg !6600
  br label %for.cond, !dbg !6609

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !6612
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !6595, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !6594, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6598, metadata !DIExpression(DW_OP_deref)), !dbg !6600
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6613
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6613
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !6609

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !6615
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !6617
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !6618

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #7, !dbg !6619
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !6595, metadata !DIExpression()), !dbg !6600
  br label %for.inc, !dbg !6620

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !6595, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6598, metadata !DIExpression(DW_OP_deref)), !dbg !6600
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6613
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !6594, metadata !DIExpression()), !dbg !6600
  br label %for.cond, !dbg !6613, !llvm.loop !6621

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !6623

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6598, metadata !DIExpression(DW_OP_deref)), !dbg !6600
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !6625
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !6594, metadata !DIExpression()), !dbg !6600
  br label %for.cond17, !dbg !6625

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !6629
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !6595, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !6594, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6598, metadata !DIExpression(DW_OP_deref)), !dbg !6600
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6630
  %tobool19 = icmp eq i8 %call18, 0, !dbg !6630
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !6625

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #7, !dbg !6632
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !6634
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !6635

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #7, !dbg !6636
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !6595, metadata !DIExpression()), !dbg !6600
  br label %for.inc28, !dbg !6637

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !6595, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6598, metadata !DIExpression(DW_OP_deref)), !dbg !6600
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6630
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !6594, metadata !DIExpression()), !dbg !6600
  br label %for.cond17, !dbg !6630, !llvm.loop !6638

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #7, !dbg !6640
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !6594, metadata !DIExpression()), !dbg !6600
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !6642
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !6643

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #7, !dbg !6644
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !6647
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !6648

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #7, !dbg !6649
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !6595, metadata !DIExpression()), !dbg !6600
  br label %if.end44, !dbg !6650

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6595, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6595, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6595, metadata !DIExpression()), !dbg !6600
  br label %if.end44, !dbg !6651

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6595, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6595, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6595, metadata !DIExpression()), !dbg !6600
  br label %if.end44, !dbg !6651

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !6653
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !6595, metadata !DIExpression()), !dbg !6600
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6651
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6651
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !6654
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !6655

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6656
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #7, !dbg !6657
  br label %if.end49, !dbg !6657

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6658
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #7, !dbg !6659
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !6660
  ret void, !dbg !6660
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !6661 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6666, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !6667, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6668, metadata !DIExpression()), !dbg !6671
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !6672
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6669, metadata !DIExpression()), !dbg !6671
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6673
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6674
  store i8 0, i8* %done, align 8, !dbg !6675
  %and = and i32 %flags, 5, !dbg !6676
  %cmp = icmp eq i32 %and, 0, !dbg !6676
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6676

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6676
  br label %cond.end, !dbg !6676

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !6677
  %tobool = icmp eq i8 %call1, 0, !dbg !6677
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !6677
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !6670, metadata !DIExpression()), !dbg !6671
  %and3 = and i32 %cond2, %flags, !dbg !6678
  %cmp4 = icmp eq i32 %and3, 0, !dbg !6680
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6681

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !6682
  br label %cleanup, !dbg !6684

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6685
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6686
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !6687
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6688
  store i32 %call7, i32* %num_phi, align 4, !dbg !6689
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6690
  store i32 2, i32* %iter_type, align 4, !dbg !6691
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6692
  br label %cleanup, !dbg !6693

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !6671
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6694
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6695 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6701, metadata !DIExpression()), !dbg !6702
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6703
  %0 = load i8, i8* %done, align 8, !dbg !6703
  ret i8 %0, !dbg !6704
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !6705 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !6709, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6710, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !6711, metadata !DIExpression()), !dbg !6712
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !6713
  br i1 %cmp, label %if.end3, label %if.then, !dbg !6715

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !6716
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !6716
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !6719
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !6720

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #7, !dbg !6721
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #7, !dbg !6723
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !6711, metadata !DIExpression()), !dbg !6712
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !6711, metadata !DIExpression()), !dbg !6712
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !6724
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6725 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6729, metadata !DIExpression()), !dbg !6731
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6732
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !6732
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !6734
  br i1 %tobool, label %if.end, label %if.then, !dbg !6735

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !6736
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !6730, metadata !DIExpression()), !dbg !6731
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !6738
  %2 = load i64, i64* %1, align 8, !dbg !6738
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6739
  store i64 %2, i64* %3, align 8, !dbg !6739
  br label %cleanup, !dbg !6740

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6741
  %4 = load i32, i32* %phi_i, align 8, !dbg !6741
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6743
  %5 = load i32, i32* %num_phi, align 4, !dbg !6743
  %cmp = icmp slt i32 %4, %5, !dbg !6744
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !6745

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6746
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6746
  %inc = add nsw i32 %4, 1, !dbg !6746
  store i32 %inc, i32* %phi_i, align 8, !dbg !6746
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !6746
  br label %cleanup, !dbg !6748

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6749
  store i8 1, i8* %done, align 8, !dbg !6750
  br label %cleanup, !dbg !6751

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !6731
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6752
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6753 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6755, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6756, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6757, metadata !DIExpression()), !dbg !6758
  %0 = and i32 %flags, 11, !dbg !6759
  %1 = icmp eq i32 %0, 1, !dbg !6759
  br i1 %1, label %cond.end, label %cond.true, !dbg !6759

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6759
  br label %cond.end, !dbg !6759

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !6760
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6761
  store i32 2, i32* %iter_type, align 4, !dbg !6762
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6763
  ret %struct.ssa_use_operand_d* %call, !dbg !6764
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6765 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6769, metadata !DIExpression()), !dbg !6771
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6772
  %tobool = icmp eq i8 %call, 0, !dbg !6772
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6774

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6775
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6775
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6775
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !6770, metadata !DIExpression()), !dbg !6771
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !6776
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !6778

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !6779
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !6779
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !6780
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !6780
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !6781
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !6782
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !6783
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !6783

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !6784
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !6785 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !6789, metadata !DIExpression()), !dbg !6790
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !6791
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6791
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !6793
  br i1 %cmp, label %return, label %if.end, !dbg !6794

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !6795
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6795
  %2 = load i64, i64* %1, align 8, !dbg !6795
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6796
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !6797
  store i64 %2, i64* %3, align 8, !dbg !6797
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !6798
  %5 = load i64, i64* %4, align 8, !dbg !6798
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !6799
  %7 = load i64*, i64** %6, align 8, !dbg !6799
  store i64 %5, i64* %7, align 8, !dbg !6800
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6801
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !6802
  br label %return, !dbg !6803

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !6803
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !6804 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !6808, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !6809, metadata !DIExpression()), !dbg !6810
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !6811
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6812
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !6813
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6813
  %1 = load i64, i64* %0, align 8, !dbg !6813
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !6814
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !6815
  store i64 %1, i64* %2, align 8, !dbg !6815
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !6816
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !6817
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !6818
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !6819
  ret void, !dbg !6820
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6821 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6823, metadata !DIExpression()), !dbg !6824
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6825
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6825
  ret %union.tree_node* %0, !dbg !6826
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6827 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6831, metadata !DIExpression()), !dbg !6832
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6833
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !6834
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6835
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !6836
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6837
  store i32 0, i32* %iter_type, align 4, !dbg !6838
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6839
  store i32 0, i32* %phi_i, align 8, !dbg !6840
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6841
  store i32 0, i32* %num_phi, align 4, !dbg !6842
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6843
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6844
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6845
  store i8 1, i8* %done, align 8, !dbg !6846
  ret void, !dbg !6847
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6848 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6852, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6853, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6854, metadata !DIExpression()), !dbg !6855
  %0 = and i32 %flags, 10, !dbg !6856
  %1 = icmp eq i32 %0, 8, !dbg !6856
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !6856

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !6856
  %3 = icmp eq i32 %2, 4, !dbg !6856
  br i1 %3, label %cond.true, label %cond.end, !dbg !6856

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6856
  br label %cond.end, !dbg !6856

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !6857
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !6858

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6859
  br label %cond.end12, !dbg !6858

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !6858
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6860
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !6861
  %and14 = and i32 %flags, 8, !dbg !6862
  %tobool15 = icmp eq i32 %and14, 0, !dbg !6862
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !6864

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !6865
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !6866

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !6867
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !6868
  br i1 %cmp, label %if.end, label %if.then, !dbg !6869

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !6870
  %6 = load i64*, i64** %5, align 8, !dbg !6870
  %7 = load i64, i64* %6, align 8, !dbg !6871
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !6872
  store i64 %7, i64* %8, align 8, !dbg !6872
  br label %if.end, !dbg !6873

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !6874
  %tobool24 = icmp eq i32 %and23, 0, !dbg !6874
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !6875

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6876
  br label %cond.end28, !dbg !6875

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !6875
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6877
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !6878
  %and30 = and i32 %flags, 4, !dbg !6879
  %tobool31 = icmp eq i32 %and30, 0, !dbg !6879
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !6881

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !6882
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !6883

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !6884
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !6885
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !6886

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !6887
  %11 = load i64*, i64** %10, align 8, !dbg !6887
  %12 = load i64, i64* %11, align 8, !dbg !6888
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6889
  store i64 %12, i64* %13, align 8, !dbg !6889
  br label %if.end42, !dbg !6890

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6891
  store i8 0, i8* %done, align 8, !dbg !6892
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6893
  store i32 0, i32* %phi_i, align 8, !dbg !6894
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6895
  store i32 0, i32* %num_phi, align 4, !dbg !6896
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6897
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6898
  ret void, !dbg !6899
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6900 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6904, metadata !DIExpression()), !dbg !6905
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6906
  %tobool = icmp eq i8 %call, 0, !dbg !6906
  br i1 %tobool, label %return, label %if.end, !dbg !6908

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !6909
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !6909
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !6909
  br label %return, !dbg !6910

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6905
  ret %struct.def_optype_d* %retval.0, !dbg !6911
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6912 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6914, metadata !DIExpression()), !dbg !6915
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6916
  %tobool = icmp eq i8 %call, 0, !dbg !6916
  br i1 %tobool, label %return, label %if.end, !dbg !6918

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !6919
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !6919
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6919
  br label %return, !dbg !6920

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6915
  ret %union.tree_node* %retval.0, !dbg !6921
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6922 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6926, metadata !DIExpression()), !dbg !6927
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6928
  %tobool = icmp eq i8 %call, 0, !dbg !6928
  br i1 %tobool, label %return, label %if.end, !dbg !6930

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6931
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6931
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6931
  br label %return, !dbg !6932

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6927
  ret %struct.use_optype_d* %retval.0, !dbg !6933
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6934 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6936, metadata !DIExpression()), !dbg !6937
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6938
  %tobool = icmp eq i8 %call, 0, !dbg !6938
  br i1 %tobool, label %return, label %if.end, !dbg !6940

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !6941
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !6941
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6941
  br label %return, !dbg !6942

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6937
  ret %union.tree_node* %retval.0, !dbg !6943
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6944 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6946, metadata !DIExpression()), !dbg !6947
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6948
  %cmp = icmp ugt i32 %call, 5, !dbg !6949
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6950

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6951
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6952
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6953
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @build_linear_expr(%union.tree_node* %type, i32* %coefs, %struct.VEC_tree_heap* %ivs) unnamed_addr #0 !dbg !6954 {
entry:
  %iv = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6958, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32* %coefs, metadata !6959, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ivs, metadata !6960, metadata !DIExpression()), !dbg !6968
  %0 = bitcast %union.tree_node** %iv to i8*, !dbg !6969
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6969
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6970
  %call = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %1) #6, !dbg !6970
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6963, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32 0, metadata !6961, metadata !DIExpression()), !dbg !6968
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %ivs, i64 0, i32 0, !dbg !6971
  br label %for.cond, !dbg !6972

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6973
  %expr.0 = phi %union.tree_node* [ %call, %entry ], [ %expr.2, %for.inc ], !dbg !6968
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !6963, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6961, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata %union.tree_node** %iv, metadata !6962, metadata !DIExpression(DW_OP_deref)), !dbg !6968
  %call1 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %iv) #7, !dbg !6974
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6975
  br i1 %tobool2, label %for.end, label %for.body, !dbg !6975

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64, !dbg !6976
  %arrayidx = getelementptr inbounds i32, i32* %coefs, i64 %idxprom, !dbg !6976
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6976
  call void @llvm.dbg.value(metadata i32 %2, metadata !6964, metadata !DIExpression()), !dbg !6977
  switch i32 %2, label %if.then5 [
    i32 1, label %if.then
    i32 0, label %for.inc
  ], !dbg !6978

if.then:                                          ; preds = %for.body
  %3 = load %union.tree_node*, %union.tree_node** %iv, align 8, !dbg !6979
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6962, metadata !DIExpression()), !dbg !6968
  %call3 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %type, %union.tree_node* %expr.0, %union.tree_node* %3) #6, !dbg !6979
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !6963, metadata !DIExpression()), !dbg !6968
  br label %for.inc, !dbg !6981

if.then5:                                         ; preds = %for.body
  %4 = load %union.tree_node*, %union.tree_node** %iv, align 8, !dbg !6982
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6962, metadata !DIExpression()), !dbg !6968
  %conv = sext i32 %2 to i64, !dbg !6982
  %call6 = call %union.tree_node* @build_int_cst(%union.tree_node* %type, i64 %conv) #6, !dbg !6982
  %call7 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %type, %union.tree_node* %4, %union.tree_node* %call6) #6, !dbg !6982
  %call8 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %type, %union.tree_node* %expr.0, %union.tree_node* %call7) #6, !dbg !6982
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !6963, metadata !DIExpression()), !dbg !6968
  br label %for.inc, !dbg !6984

for.inc:                                          ; preds = %if.then, %for.body, %if.then5
  %expr.2 = phi %union.tree_node* [ %call3, %if.then ], [ %call8, %if.then5 ], [ %expr.0, %for.body ], !dbg !6985
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.2, metadata !6963, metadata !DIExpression()), !dbg !6968
  %inc = add i32 %i.0, 1, !dbg !6986
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6961, metadata !DIExpression()), !dbg !6968
  br label %for.cond, !dbg !6987, !llvm.loop !6988

for.end:                                          ; preds = %for.cond
  %expr.0.lcssa = phi %union.tree_node* [ %expr.0, %for.cond ], !dbg !6968
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0.lcssa, metadata !6963, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0.lcssa, metadata !6963, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0.lcssa, metadata !6963, metadata !DIExpression()), !dbg !6968
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6990
  ret %union.tree_node* %expr.0.lcssa, !dbg !6991
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand(%union.tree_node*, %struct.gimple_seq_d**, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !6992 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6996, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata i32 %i, metadata !6997, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6998, metadata !DIExpression()), !dbg !6999
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !7000
  %tobool = icmp eq i8 %call, 0, !dbg !7000
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !7000

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !7000
  %cmp = icmp ugt i32 %call1, %i, !dbg !7000
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7000

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7000
  br label %cond.end, !dbg !7000

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !7001
  %idxprom = zext i32 %i to i64, !dbg !7001
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !7001
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !7002
  ret void, !dbg !7003
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7004 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7006, metadata !DIExpression()), !dbg !7007
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !7008
  %0 = load i32, i32* %num_ops, align 4, !dbg !7008
  ret i32 %0, !dbg !7009
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_code(%union.gimple_statement_d* %gs, i32 %code) unnamed_addr #0 !dbg !7010 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7014, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %code, metadata !7015, metadata !DIExpression()), !dbg !7016
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !7017
  %bf.load = load i32, i32* %0, align 8, !dbg !7018
  %bf.shl = shl i32 %code, 16, !dbg !7018
  %bf.clear = and i32 %bf.load, 65535, !dbg !7018
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !7018
  store i32 %bf.set, i32* %0, align 8, !dbg !7018
  ret void, !dbg !7019
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !7020 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7022, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !7023, metadata !DIExpression()), !dbg !7024
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !7025
  ret void, !dbg !7026
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !7027 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7029, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !7030, metadata !DIExpression()), !dbg !7031
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !7032
  ret void, !dbg !7033
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7034 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7038, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7039, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7040, metadata !DIExpression()), !dbg !7041
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !7042
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7043
  store i32 1, i32* %iter_type, align 4, !dbg !7044
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7045
  ret %union.tree_node* %call, !dbg !7046
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7047 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7051, metadata !DIExpression()), !dbg !7053
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7054
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !7054
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !7056
  br i1 %tobool, label %if.end, label %if.then, !dbg !7057

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !7058
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #7, !dbg !7058
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7052, metadata !DIExpression()), !dbg !7053
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !7060
  %2 = load i64*, i64** %1, align 8, !dbg !7060
  %3 = load i64, i64* %2, align 8, !dbg !7061
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !7062
  store i64 %3, i64* %4, align 8, !dbg !7062
  br label %cleanup, !dbg !7063

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7064
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !7064
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !7066
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !7067

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !7068
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !7068
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #7, !dbg !7068
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !7052, metadata !DIExpression()), !dbg !7053
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !7070
  %8 = load i64*, i64** %7, align 8, !dbg !7070
  %9 = load i64, i64* %8, align 8, !dbg !7071
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !7072
  store i64 %9, i64* %10, align 8, !dbg !7072
  br label %cleanup, !dbg !7073

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7074
  store i8 1, i8* %done, align 8, !dbg !7075
  br label %cleanup, !dbg !7076

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !7053
  ret %union.tree_node* %retval.0, !dbg !7077
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7078 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7085, metadata !DIExpression()), !dbg !7086
  br label %land.end, !dbg !7087

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7087
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7087
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !7087
  ret %struct.edge_def* %0, !dbg !7087
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7088 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !7092, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata i32 1, metadata !7093, metadata !DIExpression()), !dbg !7095
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !7096
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !7096
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7096

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !7096
  br label %cond.end, !dbg !7096

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7096
  %call = tail call fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %cond, i32 1) #7, !dbg !7096
  %tobool1 = icmp eq i32 %call, 0, !dbg !7096
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7096
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7094, metadata !DIExpression()), !dbg !7095
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7096

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_gimple_heap** %vec_ to i8**, !dbg !7097
  %2 = load i8*, i8** %1, align 8, !dbg !7097
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !7097
  store i8* %call3, i8** %1, align 8, !dbg !7097
  br label %if.end, !dbg !7097

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7096
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !7099 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !7104, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !7105, metadata !DIExpression()), !dbg !7107
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !7108
  %0 = load i32, i32* %num1, align 8, !dbg !7108
  %inc = add i32 %0, 1, !dbg !7108
  store i32 %inc, i32* %num1, align 8, !dbg !7108
  %idxprom = zext i32 %0 to i64, !dbg !7108
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7108
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %arrayidx, metadata !7106, metadata !DIExpression()), !dbg !7107
  store %union.gimple_statement_d* %obj_, %union.gimple_statement_d** %arrayidx, align 8, !dbg !7108
  ret %union.gimple_statement_d** %arrayidx, !dbg !7108
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7109 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !7113, metadata !DIExpression()), !dbg !7115
  call void @llvm.dbg.value(metadata i32 1, metadata !7114, metadata !DIExpression()), !dbg !7115
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !7116
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7116

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 1, !dbg !7116
  %0 = load i32, i32* %alloc, align 4, !dbg !7116
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !7116
  %1 = load i32, i32* %num, align 8, !dbg !7116
  %cmp1 = icmp ne i32 %0, %1, !dbg !7116
  %phitmp = zext i1 %cmp1 to i32, !dbg !7116
  br label %cond.end, !dbg !7116

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7116

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7116
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7117 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7124, metadata !DIExpression()), !dbg !7125
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !7126
  %0 = load i32, i32* %flags, align 8, !dbg !7126
  %and = and i32 %0, 512, !dbg !7127
  %tobool = icmp eq i32 %and, 0, !dbg !7127
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !7128

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !7129
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !7129
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !7130
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !7131

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !7132
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !7132
  br label %cond.end, !dbg !7131

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !7131
  ret %struct.gimple_seq_d* %cond, !dbg !7133
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !7134 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !7141, metadata !DIExpression()), !dbg !7142
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !7143
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7143

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !7144
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !7144
  br label %cond.end, !dbg !7143

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !7143
  ret %struct.gimple_seq_node_d* %cond, !dbg !7145
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !7146 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7150, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !7151, metadata !DIExpression()), !dbg !7152
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7153
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !7154
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !7155
  store i40* %imm_uses, i40** %0, align 8, !dbg !7155
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !7156
  %1 = bitcast i40* %next to i64*, !dbg !7156
  %2 = load i64, i64* %1, align 8, !dbg !7156
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !7157
  store i64 %2, i64* %3, align 8, !dbg !7157
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !7158
  %tobool = icmp eq i8 %call, 0, !dbg !7158
  br i1 %tobool, label %if.end, label %return, !dbg !7160

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7161
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !7161
  br label %return, !dbg !7162

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !7152
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7163
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7164 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7166, metadata !DIExpression()), !dbg !7167
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7168
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7168
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !7169
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !7169
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !7170
  %conv1 = zext i1 %cmp to i8, !dbg !7171
  ret i8 %conv1, !dbg !7172
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @phi_loop_edge_uses_def(%struct.loop* %loop, %union.gimple_statement_d* %phi, %union.tree_node* %def) unnamed_addr #5 !dbg !7173 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7177, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !7178, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !7179, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.value(metadata i32 0, metadata !7180, metadata !DIExpression()), !dbg !7181
  br label %for.cond, !dbg !7182

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !7184
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7180, metadata !DIExpression()), !dbg !7181
  %call = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !7185
  %0 = zext i32 %call to i64, !dbg !7187
  %cmp = icmp ult i64 %indvars.iv, %0, !dbg !7187
  br i1 %cmp, label %for.body, label %cleanup, !dbg !7188

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %phi, i64 %indvars.iv) #7, !dbg !7189
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 0, !dbg !7191
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7191
  %call2 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* %1) #6, !dbg !7192
  %tobool = icmp eq i8 %call2, 0, !dbg !7192
  br i1 %tobool, label %for.inc, label %if.then, !dbg !7193

if.then:                                          ; preds = %for.body
  %2 = trunc i64 %indvars.iv to i32, !dbg !7194
  %call3 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi, i32 %2) #7, !dbg !7194
  %call4 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call3) #7, !dbg !7194
  %cmp5 = icmp eq %union.tree_node* %call4, %def, !dbg !7196
  br i1 %cmp5, label %cleanup, label %for.inc, !dbg !7197

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7198
  br label %for.cond, !dbg !7199, !llvm.loop !7200

cleanup:                                          ; preds = %for.cond, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %for.cond ], !dbg !7181
  ret i8 %retval.0, !dbg !7202
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @stmt_uses_phi_result(%union.gimple_statement_d* %stmt, %union.tree_node* %phi_result) unnamed_addr #5 !dbg !7203 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7207, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.value(metadata %union.tree_node* %phi_result, metadata !7208, metadata !DIExpression()), !dbg !7210
  %call = tail call fastcc %union.tree_node* @single_ssa_tree_operand(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7211
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7209, metadata !DIExpression()), !dbg !7210
  %cmp = icmp eq %union.tree_node* %call, %phi_result, !dbg !7212
  %conv1 = zext i1 %cmp to i8, !dbg !7213
  ret i8 %conv1, !dbg !7214
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7215 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7217, metadata !DIExpression()), !dbg !7219
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7220
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7220
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !7218, metadata !DIExpression()), !dbg !7219
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !7221
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7221
  %2 = load i64, i64* %1, align 8, !dbg !7221
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !7222
  store i64 %2, i64* %3, align 8, !dbg !7222
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !7223
  %tobool = icmp eq i8 %call, 0, !dbg !7223
  br i1 %tobool, label %if.end, label %cleanup, !dbg !7225

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7226
  br label %cleanup, !dbg !7227

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !7219
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7228
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cannot_convert_bb_to_perfect_nest(%struct.basic_block_def* %bb, %struct.loop* %loop) unnamed_addr #5 !dbg !7229 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7233, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7234, metadata !DIExpression()), !dbg !7241
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !7242
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7242
  %call = tail call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* %loop) #6, !dbg !7243
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7236, metadata !DIExpression()), !dbg !7241
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7244
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7244
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !7244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !7244
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7244
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !7245
  br label %for.cond, !dbg !7249

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !7235, metadata !DIExpression(DW_OP_deref)), !dbg !7241
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !7250
  %tobool = icmp eq i8 %call1, 0, !dbg !7251
  br i1 %tobool, label %for.body, label %cleanup37, !dbg !7252

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !7235, metadata !DIExpression(DW_OP_deref)), !dbg !7241
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !7253
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !7237, metadata !DIExpression()), !dbg !7254
  %cmp = icmp eq %union.gimple_statement_d* %call2, %call, !dbg !7255
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !7257

lor.lhs.false:                                    ; preds = %for.body
  %call3 = call fastcc zeroext i8 @not_interesting_stmt(%union.gimple_statement_d* %call2) #7, !dbg !7258
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7258
  br i1 %tobool4, label %lor.lhs.false5, label %cleanup, !dbg !7259

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %call6 = call fastcc zeroext i8 @stmt_is_bumper_for_loop(%struct.loop* %loop, %union.gimple_statement_d* %call2) #7, !dbg !7260
  %tobool8 = icmp eq i8 %call6, 0, !dbg !7260
  br i1 %tobool8, label %if.end, label %cleanup, !dbg !7261

if.end:                                           ; preds = %lor.lhs.false5
  %call9 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %call2) #7, !dbg !7262
  %tobool10 = icmp eq i8 %call9, 0, !dbg !7262
  br i1 %tobool10, label %if.end30, label %if.then11, !dbg !7263

if.then11:                                        ; preds = %if.end
  %call12 = call fastcc zeroext i8 @cannot_convert_modify_to_perfect_nest(%union.gimple_statement_d* %call2, %struct.loop* %loop) #7, !dbg !7264
  %tobool13 = icmp eq i8 %call12, 0, !dbg !7264
  br i1 %tobool13, label %if.end15, label %cleanup, !dbg !7266

if.end15:                                         ; preds = %if.then11
  %call16 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call2) #7, !dbg !7267
  %call17 = call fastcc zeroext i8 @can_duplicate_iv(%union.tree_node* %call16, %struct.loop* %loop) #7, !dbg !7269
  %tobool18 = icmp eq i8 %call17, 0, !dbg !7269
  br i1 %tobool18, label %if.end20, label %cleanup, !dbg !7270

if.end20:                                         ; preds = %if.end15
  %2 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !7271
  %call21 = call fastcc zeroext i8 @can_put_in_inner_loop(%struct.loop* %2, %union.gimple_statement_d* %call2) #7, !dbg !7272
  %tobool23 = icmp eq i8 %call21, 0, !dbg !7272
  br i1 %tobool23, label %lor.lhs.false24, label %cleanup, !dbg !7273

lor.lhs.false24:                                  ; preds = %if.end20
  %call25 = call fastcc zeroext i8 @can_put_after_inner_loop(%struct.loop* %loop, %union.gimple_statement_d* %call2) #7, !dbg !7274
  %tobool27 = icmp eq i8 %call25, 0, !dbg !7274
  br i1 %tobool27, label %if.end30, label %cleanup, !dbg !7275

if.end30:                                         ; preds = %lor.lhs.false24, %if.end
  %call31 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %call2) #7, !dbg !7276
  %3 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !7278
  %header = getelementptr inbounds %struct.loop, %struct.loop* %3, i64 0, i32 2, !dbg !7279
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !7279
  %call33 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call31, %struct.basic_block_def* %4) #6, !dbg !7280
  %tobool34 = icmp eq i8 %call33, 0, !dbg !7280
  %. = zext i1 %tobool34 to i32, !dbg !7281
  br label %cleanup, !dbg !7281

cleanup:                                          ; preds = %lor.lhs.false24, %if.end20, %if.end15, %if.then11, %lor.lhs.false5, %lor.lhs.false, %if.end30, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %lor.lhs.false5 ], [ 4, %lor.lhs.false ], [ 4, %for.body ], [ 1, %if.then11 ], [ 4, %if.end15 ], [ 4, %lor.lhs.false24 ], [ 4, %if.end20 ], [ %., %if.end30 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup37 [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !7235, metadata !DIExpression(DW_OP_deref)), !dbg !7241
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !7282
  br label %for.cond, !dbg !7283, !llvm.loop !7284

cleanup37:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi i8 [ 1, %cleanup ], [ 0, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7286
  ret i8 %retval.2, !dbg !7286
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7287 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7289, metadata !DIExpression()), !dbg !7290
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7291
  %cmp = icmp eq i32 %call, 6, !dbg !7292
  %conv1 = zext i1 %cmp to i8, !dbg !7291
  ret i8 %conv1, !dbg !7293
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cannot_convert_modify_to_perfect_nest(%union.gimple_statement_d* %stmt, %struct.loop* %loop) unnamed_addr #5 !dbg !7294 {
entry:
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  %op_iter1 = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7298, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7299, metadata !DIExpression()), !dbg !7319
  %0 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !7320
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !7320
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !7321
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !7321
  %2 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter1, i64 0, i32 0, !dbg !7321
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #8, !dbg !7321
  %call = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7322
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7305, metadata !DIExpression()), !dbg !7319
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7323
  %bf.load = load i64, i64* %3, align 8, !dbg !7323
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !7325
  %cmp = icmp eq i64 %bf.cast3, 141, !dbg !7325
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !7326

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @can_duplicate_iv(%union.tree_node* %call, %struct.loop* %loop) #7, !dbg !7327
  %tobool = icmp eq i8 %call1, 0, !dbg !7327
  br i1 %tobool, label %if.then, label %if.end10, !dbg !7328

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7302, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call2 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call) #7, !dbg !7329
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call2, metadata !7300, metadata !DIExpression()), !dbg !7319
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !7331
  br label %for.cond, !dbg !7329

for.cond:                                         ; preds = %for.inc, %if.then
  %use_a.0 = phi %struct.ssa_use_operand_d* [ %call2, %if.then ], [ %call9, %for.inc ], !dbg !7334
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_a.0, metadata !7300, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7302, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call3 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !7335
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7335
  br i1 %tobool4, label %for.body, label %if.end10.loopexit, !dbg !7329

for.body:                                         ; preds = %for.cond
  %stmt5 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_a.0, i64 0, i32 2, i32 0, !dbg !7336
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt5, align 8, !dbg !7336
  %call6 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #7, !dbg !7337
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call6, i64 0, i32 3, !dbg !7338
  %5 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !7338
  %6 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !7339
  %cmp7 = icmp eq %struct.loop* %5, %6, !dbg !7340
  br i1 %cmp7, label %cleanup81.loopexit6, label %for.inc, !dbg !7341

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7302, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call9 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !7335
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call9, metadata !7300, metadata !DIExpression()), !dbg !7319
  br label %for.cond, !dbg !7335, !llvm.loop !7342

if.end10.loopexit:                                ; preds = %for.cond
  br label %if.end10, !dbg !7344

if.end10:                                         ; preds = %if.end10.loopexit, %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7303, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call11 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7344
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !7300, metadata !DIExpression()), !dbg !7319
  %inner31 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !7345
  br label %for.cond12, !dbg !7344

for.cond12:                                       ; preds = %for.inc78, %if.end10
  %use_a.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.end10 ], [ %call79, %for.inc78 ], !dbg !7350
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_a.1, metadata !7300, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7303, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call13 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7351
  %tobool14 = icmp eq i8 %call13, 0, !dbg !7351
  br i1 %tobool14, label %for.body16, label %cleanup81.loopexit, !dbg !7344

for.body16:                                       ; preds = %for.cond12
  %call17 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_a.1) #7, !dbg !7352
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !7310, metadata !DIExpression()), !dbg !7353
  %call18 = call fastcc zeroext i8 @can_duplicate_iv(%union.tree_node* %call17, %struct.loop* %loop) #7, !dbg !7354
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7354
  br i1 %tobool19, label %if.then20, label %if.end38, !dbg !7355

if.then20:                                        ; preds = %for.body16
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7302, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call21 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call17) #7, !dbg !7356
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call21, metadata !7301, metadata !DIExpression()), !dbg !7319
  br label %for.cond22, !dbg !7356

for.cond22:                                       ; preds = %for.inc35, %if.then20
  %use_b.0 = phi %struct.ssa_use_operand_d* [ %call21, %if.then20 ], [ %call36, %for.inc35 ], !dbg !7357
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_b.0, metadata !7301, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7302, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call23 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !7358
  %tobool24 = icmp eq i8 %call23, 0, !dbg !7358
  br i1 %tobool24, label %for.body26, label %if.end38.loopexit, !dbg !7356

for.body26:                                       ; preds = %for.cond22
  %stmt28 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_b.0, i64 0, i32 2, i32 0, !dbg !7359
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt28, align 8, !dbg !7359
  %call29 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %7) #7, !dbg !7360
  %loop_father30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call29, i64 0, i32 3, !dbg !7361
  %8 = load %struct.loop*, %struct.loop** %loop_father30, align 8, !dbg !7361
  %9 = load %struct.loop*, %struct.loop** %inner31, align 8, !dbg !7362
  %cmp32 = icmp eq %struct.loop* %8, %9, !dbg !7363
  br i1 %cmp32, label %cleanup74.loopexit5, label %for.inc35, !dbg !7364

for.inc35:                                        ; preds = %for.body26
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7302, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call36 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !7358
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call36, metadata !7301, metadata !DIExpression()), !dbg !7319
  br label %for.cond22, !dbg !7358, !llvm.loop !7365

if.end38.loopexit:                                ; preds = %for.cond22
  br label %if.end38, !dbg !7367

if.end38:                                         ; preds = %if.end38.loopexit, %for.body16
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7367
  %10 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !7367
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %10, align 8, !dbg !7367
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %11, metadata !7306, metadata !DIExpression()), !dbg !7353
  %call39 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %11) #7, !dbg !7368
  %cmp40 = icmp eq i32 %call39, 16, !dbg !7369
  br i1 %cmp40, label %if.then41, label %cleanup74, !dbg !7370

if.then41:                                        ; preds = %if.end38
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter1, metadata !7304, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call42 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter1, %union.gimple_statement_d* %11, i32 1) #7, !dbg !7371
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call42, metadata !7301, metadata !DIExpression()), !dbg !7319
  br label %for.cond43, !dbg !7371

for.cond43:                                       ; preds = %for.inc70, %if.then41
  %use_b.1 = phi %struct.ssa_use_operand_d* [ %call42, %if.then41 ], [ %call71, %for.inc70 ], !dbg !7372
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_b.1, metadata !7301, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter1, metadata !7304, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call44 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter1) #7, !dbg !7373
  %tobool45 = icmp eq i8 %call44, 0, !dbg !7373
  br i1 %tobool45, label %for.body47, label %cleanup74.loopexit, !dbg !7371

for.body47:                                       ; preds = %for.cond43
  %call48 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_b.1) #7, !dbg !7374
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !7311, metadata !DIExpression()), !dbg !7375
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7376
  %bf.load50 = load i64, i64* %12, align 8, !dbg !7376
  %bf.cast524 = and i64 %bf.load50, 65535, !dbg !7377
  %cmp53 = icmp eq i64 %bf.cast524, 141, !dbg !7377
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !7378

if.then54:                                        ; preds = %for.body47
  %def_stmt56 = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7379
  %13 = bitcast %union.tree_node** %def_stmt56 to %union.gimple_statement_d**, !dbg !7379
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %13, align 8, !dbg !7379
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %14, metadata !7316, metadata !DIExpression()), !dbg !7380
  %call57 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %14) #7, !dbg !7381
  %tobool58 = icmp eq %struct.basic_block_def* %call57, null, !dbg !7381
  br i1 %tobool58, label %if.end65, label %land.lhs.true59, !dbg !7383

land.lhs.true59:                                  ; preds = %if.then54
  %call60 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %14) #7, !dbg !7384
  %loop_father61 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call60, i64 0, i32 3, !dbg !7385
  %15 = load %struct.loop*, %struct.loop** %loop_father61, align 8, !dbg !7385
  %16 = load %struct.loop*, %struct.loop** %inner31, align 8, !dbg !7386
  %cmp63 = icmp eq %struct.loop* %15, %16, !dbg !7387
  br i1 %cmp63, label %cleanup, label %if.end65, !dbg !7388

if.end65:                                         ; preds = %if.then54, %land.lhs.true59
  br label %cleanup, !dbg !7389

cleanup:                                          ; preds = %land.lhs.true59, %if.end65
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end65 ], [ 1, %land.lhs.true59 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end66, label %cleanup67

if.end66:                                         ; preds = %cleanup, %for.body47
  br label %cleanup67, !dbg !7390

cleanup67:                                        ; preds = %cleanup, %if.end66
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end66 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %for.inc70, label %cleanup74.loopexit

for.inc70:                                        ; preds = %cleanup67
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter1, metadata !7304, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call71 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter1) #7, !dbg !7373
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call71, metadata !7301, metadata !DIExpression()), !dbg !7319
  br label %for.cond43, !dbg !7373, !llvm.loop !7391

cleanup74.loopexit:                               ; preds = %cleanup67, %for.cond43
  %cleanup.dest.slot.2.ph = phi i32 [ 0, %for.cond43 ], [ %cleanup.dest.slot.1, %cleanup67 ]
  br label %cleanup74

cleanup74.loopexit5:                              ; preds = %for.body26
  br label %cleanup74

cleanup74:                                        ; preds = %cleanup74.loopexit5, %cleanup74.loopexit, %if.end38
  %cleanup.dest.slot.2 = phi i32 [ 0, %if.end38 ], [ %cleanup.dest.slot.2.ph, %cleanup74.loopexit ], [ 1, %cleanup74.loopexit5 ]
  %cond = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond, label %for.inc78, label %cleanup81.loopexit

for.inc78:                                        ; preds = %cleanup74
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7303, metadata !DIExpression(DW_OP_deref)), !dbg !7319
  %call79 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7351
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call79, metadata !7300, metadata !DIExpression()), !dbg !7319
  br label %for.cond12, !dbg !7351, !llvm.loop !7393

cleanup81.loopexit:                               ; preds = %cleanup74, %for.cond12
  %retval.7.ph = phi i8 [ 0, %for.cond12 ], [ 1, %cleanup74 ]
  br label %cleanup81, !dbg !7395

cleanup81.loopexit6:                              ; preds = %for.body
  br label %cleanup81, !dbg !7395

cleanup81:                                        ; preds = %cleanup81.loopexit6, %cleanup81.loopexit
  %retval.7 = phi i8 [ %retval.7.ph, %cleanup81.loopexit ], [ 1, %cleanup81.loopexit6 ], !dbg !7319
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #8, !dbg !7395
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !7395
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !7395
  ret i8 %retval.7, !dbg !7395
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_duplicate_iv(%union.tree_node* %iv, %struct.loop* %loop) unnamed_addr #5 !dbg !7396 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %iv, metadata !7400, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7401, metadata !DIExpression()), !dbg !7406
  %call = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %iv) #6, !dbg !7407
  %call1 = tail call fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %loop, %union.tree_node* %call) #7, !dbg !7408
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7402, metadata !DIExpression()), !dbg !7406
  %call2 = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %call1) #7, !dbg !7409
  %tobool = icmp eq i8 %call2, 0, !dbg !7409
  br i1 %tobool, label %if.then, label %if.end8, !dbg !7410

if.then:                                          ; preds = %entry
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !7411
  %0 = load i32, i32* %num, align 8, !dbg !7411
  %call3 = tail call %union.tree_node* @evolution_part_in_loop_num(%union.tree_node* %call1, i32 %0) #6, !dbg !7412
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7403, metadata !DIExpression()), !dbg !7413
  %tobool4 = icmp ne %union.tree_node* %call3, null, !dbg !7414
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !7416
  %cmp = icmp ne %union.tree_node* %call3, %1, !dbg !7417
  %or.cond = and i1 %tobool4, %cmp, !dbg !7418
  br i1 %or.cond, label %land.lhs.true5, label %if.end, !dbg !7418

land.lhs.true5:                                   ; preds = %if.then
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7419
  %bf.load = load i64, i64* %2, align 8, !dbg !7419
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7420
  %cmp6 = icmp eq i64 %bf.cast1, 23, !dbg !7420
  br i1 %cmp6, label %cleanup, label %if.end, !dbg !7421

if.end:                                           ; preds = %land.lhs.true5, %if.then
  br label %cleanup, !dbg !7422

cleanup:                                          ; preds = %land.lhs.true5, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %land.lhs.true5 ]
  br i1 %cleanup.dest.slot.0, label %if.end8, label %cleanup9

if.end8:                                          ; preds = %entry, %cleanup
  br label %cleanup9, !dbg !7423

cleanup9:                                         ; preds = %cleanup, %if.end8
  %retval.1 = phi i8 [ 0, %if.end8 ], [ 1, %cleanup ], !dbg !7406
  ret i8 %retval.1, !dbg !7424
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7425 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7427, metadata !DIExpression()), !dbg !7428
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7429
  ret %union.tree_node* %call, !dbg !7430
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_put_in_inner_loop(%struct.loop* %inner, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !7431 {
entry:
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %inner, metadata !7433, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7434, metadata !DIExpression()), !dbg !7443
  %0 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !7444
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !7444
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !7445
  %tobool = icmp eq i8 %call, 0, !dbg !7445
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7445

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7445
  br label %cond.end, !dbg !7445

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7446
  %tobool2 = icmp eq %union.tree_node* %call1, null, !dbg !7446
  br i1 %tobool2, label %lor.lhs.false, label %cleanup22, !dbg !7448

lor.lhs.false:                                    ; preds = %cond.end
  %call3 = tail call zeroext i8 @stmt_invariant_in_loop_p(%struct.loop* %inner, %union.gimple_statement_d* %stmt) #6, !dbg !7449
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7449
  br i1 %tobool4, label %cleanup22, label %if.end, !dbg !7450

if.end:                                           ; preds = %lor.lhs.false
  %call5 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7451
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7435, metadata !DIExpression(DW_OP_deref)), !dbg !7443
  %call6 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call5) #7, !dbg !7451
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call6, metadata !7436, metadata !DIExpression()), !dbg !7443
  br label %for.cond, !dbg !7451

for.cond:                                         ; preds = %for.inc, %if.end
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call6, %if.end ], [ %call21, %for.inc ], !dbg !7452
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7436, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7435, metadata !DIExpression(DW_OP_deref)), !dbg !7443
  %call7 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !7453
  %tobool8 = icmp eq i8 %call7, 0, !dbg !7453
  br i1 %tobool8, label %for.body, label %cleanup22.loopexit, !dbg !7451

for.body:                                         ; preds = %for.cond
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !7454
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !7454
  %call10 = call fastcc zeroext i8 @exit_phi_for_loop_p(%struct.loop* %inner, %union.gimple_statement_d* %1) #7, !dbg !7455
  %tobool11 = icmp eq i8 %call10, 0, !dbg !7455
  br i1 %tobool11, label %if.then12, label %for.inc, !dbg !7456

if.then12:                                        ; preds = %for.body
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !7457
  %call15 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #7, !dbg !7458
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call15, metadata !7437, metadata !DIExpression()), !dbg !7459
  %call16 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %inner, %struct.basic_block_def* %call15) #6, !dbg !7460
  %tobool17 = icmp eq i8 %call16, 0, !dbg !7460
  br i1 %tobool17, label %cleanup22.loopexit, label %for.inc

for.inc:                                          ; preds = %if.then12, %for.body
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7435, metadata !DIExpression(DW_OP_deref)), !dbg !7443
  %call21 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !7453
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call21, metadata !7436, metadata !DIExpression()), !dbg !7443
  br label %for.cond, !dbg !7453, !llvm.loop !7462

cleanup22.loopexit:                               ; preds = %if.then12, %for.cond
  %retval.3.ph = phi i8 [ 1, %for.cond ], [ 0, %if.then12 ]
  br label %cleanup22, !dbg !7464

cleanup22:                                        ; preds = %cleanup22.loopexit, %lor.lhs.false, %cond.end
  %retval.3 = phi i8 [ 0, %lor.lhs.false ], [ 0, %cond.end ], [ %retval.3.ph, %cleanup22.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !7464
  ret i8 %retval.3, !dbg !7464
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_put_after_inner_loop(%struct.loop* %loop, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !7465 {
entry:
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7467, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7468, metadata !DIExpression()), !dbg !7477
  %0 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !7478
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !7478
  %call = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7479
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7479
  br i1 %tobool, label %if.end, label %cleanup21, !dbg !7481

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7482
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7469, metadata !DIExpression(DW_OP_deref)), !dbg !7477
  %call2 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call1) #7, !dbg !7482
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call2, metadata !7470, metadata !DIExpression()), !dbg !7477
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !7483
  br label %for.cond, !dbg !7482

for.cond:                                         ; preds = %for.inc, %if.end
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call2, %if.end ], [ %call20, %for.inc ], !dbg !7485
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7470, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7469, metadata !DIExpression(DW_OP_deref)), !dbg !7477
  %call3 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !7486
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7486
  br i1 %tobool4, label %for.body, label %cleanup21.loopexit, !dbg !7482

for.body:                                         ; preds = %for.cond
  %stmt5 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !7487
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt5, align 8, !dbg !7487
  %call6 = call fastcc zeroext i8 @exit_phi_for_loop_p(%struct.loop* %loop, %union.gimple_statement_d* %1) #7, !dbg !7488
  %tobool7 = icmp eq i8 %call6, 0, !dbg !7488
  br i1 %tobool7, label %if.then8, label %for.inc, !dbg !7489

if.then8:                                         ; preds = %for.body
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt5, align 8, !dbg !7490
  %call11 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #7, !dbg !7491
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call11, metadata !7471, metadata !DIExpression()), !dbg !7492
  %3 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !7493
  %header = getelementptr inbounds %struct.loop, %struct.loop* %3, i64 0, i32 2, !dbg !7494
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !7494
  %call12 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call11, %struct.basic_block_def* %4) #6, !dbg !7495
  %tobool13 = icmp eq i8 %call12, 0, !dbg !7495
  br i1 %tobool13, label %land.lhs.true, label %if.end18, !dbg !7496

land.lhs.true:                                    ; preds = %if.then8
  %5 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !7497
  %call15 = call fastcc zeroext i8 @can_put_in_inner_loop(%struct.loop* %5, %union.gimple_statement_d* %stmt) #7, !dbg !7498
  %tobool16 = icmp eq i8 %call15, 0, !dbg !7498
  br i1 %tobool16, label %cleanup, label %if.end18, !dbg !7499

if.end18:                                         ; preds = %land.lhs.true, %if.then8
  br label %cleanup, !dbg !7500

cleanup:                                          ; preds = %land.lhs.true, %if.end18
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end18 ], [ false, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup21.loopexit

for.inc:                                          ; preds = %for.body, %cleanup
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !7469, metadata !DIExpression(DW_OP_deref)), !dbg !7477
  %call20 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !7486
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call20, metadata !7470, metadata !DIExpression()), !dbg !7477
  br label %for.cond, !dbg !7486, !llvm.loop !7501

cleanup21.loopexit:                               ; preds = %cleanup, %for.cond
  %retval.3.ph = phi i8 [ 1, %for.cond ], [ 0, %cleanup ]
  br label %cleanup21, !dbg !7503

cleanup21:                                        ; preds = %cleanup21.loopexit, %entry
  %retval.3 = phi i8 [ 0, %entry ], [ %retval.3.ph, %cleanup21.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !7503
  ret i8 %retval.3, !dbg !7503
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %chrec) unnamed_addr #0 !dbg !7504 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !7512, metadata !DIExpression()), !dbg !7513
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !7514
  %cmp = icmp eq %union.tree_node* %0, %chrec, !dbg !7515
  %1 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !7516
  %cmp1 = icmp eq %union.tree_node* %1, %chrec, !dbg !7516
  %2 = or i1 %cmp, %cmp1, !dbg !7516
  %conv = zext i1 %2 to i8, !dbg !7517
  ret i8 %conv, !dbg !7518
}

declare dso_local zeroext i8 @stmt_invariant_in_loop_p(%struct.loop*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @exit_phi_for_loop_p(%struct.loop* %loop, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !7519 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7521, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7522, metadata !DIExpression()), !dbg !7523
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !7524
  %cmp = icmp eq i32 %call, 16, !dbg !7526
  br i1 %cmp, label %lor.lhs.false, label %return, !dbg !7527

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !7528
  %cmp2 = icmp eq i32 %call1, 1, !dbg !7529
  br i1 %cmp2, label %lor.lhs.false3, label %return, !dbg !7530

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !7531
  %call5 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !7532
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call5, i64 0, i32 1, !dbg !7533
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7533
  %cmp6 = icmp eq %struct.basic_block_def* %call4, %0, !dbg !7534
  %spec.select = zext i1 %cmp6 to i8, !dbg !7535
  ret i8 %spec.select, !dbg !7535

return:                                           ; preds = %lor.lhs.false, %entry
  ret i8 0, !dbg !7536
}

declare dso_local %struct.basic_block_def* @split_edge(%struct.edge_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_source_location_heap_reserve(%struct.VEC_source_location_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7537 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_heap** %vec_, metadata !7542, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32 1, metadata !7543, metadata !DIExpression()), !dbg !7545
  %0 = load %struct.VEC_source_location_heap*, %struct.VEC_source_location_heap** %vec_, align 8, !dbg !7546
  %tobool = icmp eq %struct.VEC_source_location_heap* %0, null, !dbg !7546
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7546

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_source_location_heap, %struct.VEC_source_location_heap* %0, i64 0, i32 0, !dbg !7546
  br label %cond.end, !dbg !7546

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_source_location_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7546
  %call = tail call fastcc i32 @VEC_source_location_base_space(%struct.VEC_source_location_base* %cond, i32 1) #7, !dbg !7546
  %tobool1 = icmp eq i32 %call, 0, !dbg !7546
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7546
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7544, metadata !DIExpression()), !dbg !7545
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7546

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_source_location_heap** %vec_ to i8**, !dbg !7547
  %2 = load i8*, i8** %1, align 8, !dbg !7547
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 4) #6, !dbg !7547
  store i8* %call3, i8** %1, align 8, !dbg !7547
  br label %if.end, !dbg !7547

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7546
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_source_location_base_quick_push(%struct.VEC_source_location_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !7549 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_base* %vec_, metadata !7555, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !7556, metadata !DIExpression()), !dbg !7558
  %num1 = getelementptr inbounds %struct.VEC_source_location_base, %struct.VEC_source_location_base* %vec_, i64 0, i32 0, !dbg !7559
  %0 = load i32, i32* %num1, align 4, !dbg !7559
  %inc = add i32 %0, 1, !dbg !7559
  store i32 %inc, i32* %num1, align 4, !dbg !7559
  %idxprom = zext i32 %0 to i64, !dbg !7559
  %arrayidx = getelementptr inbounds %struct.VEC_source_location_base, %struct.VEC_source_location_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7559
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !7557, metadata !DIExpression()), !dbg !7558
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !7559
  ret i32* %arrayidx, !dbg !7559
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !7560 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7564, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i64 0, metadata !7565, metadata !DIExpression()), !dbg !7566
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7567
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !7568
  %0 = load i32, i32* %locus, align 8, !dbg !7568
  ret i32 %0, !dbg !7569
}

declare dso_local %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7570 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7574, metadata !DIExpression()), !dbg !7575
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !7576
  %tobool = icmp eq i8 %call, 0, !dbg !7576
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7576

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7576
  br label %cond.end, !dbg !7576

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7577
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7577
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7577
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !7577

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7577
  br label %cond.end5, !dbg !7577

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !7577
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !7577
  ret %struct.edge_def* %call7, !dbg !7578
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !7579 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7583, metadata !DIExpression()), !dbg !7585
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7586
  %0 = load i32, i32* %num1, align 8, !dbg !7586
  %dec = add i32 %0, -1, !dbg !7586
  store i32 %dec, i32* %num1, align 8, !dbg !7586
  %idxprom = zext i32 %dec to i64, !dbg !7586
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7586
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7586
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7584, metadata !DIExpression()), !dbg !7585
  ret %union.tree_node* %1, !dbg !7586
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_source_location_base_pop(%struct.VEC_source_location_base* %vec_) unnamed_addr #0 !dbg !7587 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_base* %vec_, metadata !7591, metadata !DIExpression()), !dbg !7593
  %num1 = getelementptr inbounds %struct.VEC_source_location_base, %struct.VEC_source_location_base* %vec_, i64 0, i32 0, !dbg !7594
  %0 = load i32, i32* %num1, align 4, !dbg !7594
  %dec = add i32 %0, -1, !dbg !7594
  store i32 %dec, i32* %num1, align 4, !dbg !7594
  %idxprom = zext i32 %dec to i64, !dbg !7594
  %arrayidx = getelementptr inbounds %struct.VEC_source_location_base, %struct.VEC_source_location_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7594
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7594
  call void @llvm.dbg.value(metadata i32 %1, metadata !7592, metadata !DIExpression()), !dbg !7593
  ret i32 %1, !dbg !7594
}

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7595 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7597, metadata !DIExpression()), !dbg !7598
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #7, !dbg !7599
  %tobool = icmp eq i8 %call, 0, !dbg !7599
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7599

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7599
  br label %cond.end, !dbg !7599

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7600
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !7600
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7600
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !7600

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7600
  br label %cond.end5, !dbg !7600

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !7600
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !7600
  ret %struct.edge_def* %call7, !dbg !7601
}

declare dso_local void @flush_pending_stmts(%struct.edge_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_cond(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local %struct.loop* @duplicate_loop(%struct.loop*, %struct.loop*) local_unnamed_addr #2

declare dso_local void @add_bb_to_loop(%struct.basic_block_def*, %struct.loop*) local_unnamed_addr #2

declare dso_local void @set_immediate_dominator(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @recompute_dominator(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7602 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !7608, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i32 0, metadata !7609, metadata !DIExpression()), !dbg !7610
  br label %land.end, !dbg !7611

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 0, !dbg !7611
  %0 = load i32, i32* %arrayidx, align 4, !dbg !7611
  ret i32 %0, !dbg !7611
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i32 @tree_map_hash(i8*) #2

declare dso_local i32 @tree_map_base_eq(i8*, i8*) #2

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

declare dso_local %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7612 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7614, metadata !DIExpression()), !dbg !7617
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !7615, metadata !DIExpression()), !dbg !7618
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !7619
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !7616, metadata !DIExpression()), !dbg !7617
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %call) #7, !dbg !7620
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !7621
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !7622
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !7623
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !7624
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !7625
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !7626
  ret void, !dbg !7627
}

declare dso_local void @gsi_move_before(%struct.gimple_stmt_iterator*, %struct.gimple_stmt_iterator*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_uses_equiv_to_x_with_y(%struct.loop* %loop, %union.gimple_statement_d* %stmt, %union.tree_node* %x, i32 %xstep, %union.tree_node* %y, %union.tree_node* %yinit, %struct.htab* %replacements, %struct.gimple_stmt_iterator* %firstbsi) unnamed_addr #5 !dbg !7628 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %in = alloca %struct.tree_map, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7632, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7633, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !7634, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata i32 %xstep, metadata !7635, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata %union.tree_node* %y, metadata !7636, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata %union.tree_node* %yinit, metadata !7637, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata %struct.htab* %replacements, metadata !7638, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %firstbsi, metadata !7639, metadata !DIExpression()), !dbg !7655
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !7656
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !7656
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7640, metadata !DIExpression(DW_OP_deref)), !dbg !7655
  %call = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7657
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call, metadata !7641, metadata !DIExpression()), !dbg !7655
  %1 = bitcast %struct.tree_map* %in to i8*, !dbg !7658
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !7658
  %conv = sext i32 %xstep to i64, !dbg !7659
  %hash = getelementptr inbounds %struct.tree_map, %struct.tree_map* %in, i64 0, i32 1, !dbg !7658
  %from = getelementptr inbounds %struct.tree_map, %struct.tree_map* %in, i64 0, i32 0, i32 0, !dbg !7658
  %type36 = getelementptr inbounds %union.tree_node, %union.tree_node* %y, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7661
  br label %for.cond, !dbg !7657

for.cond:                                         ; preds = %cleanup, %entry
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call, %entry ], [ %call90, %cleanup ], !dbg !7663
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7641, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7640, metadata !DIExpression(DW_OP_deref)), !dbg !7655
  %call1 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7664
  %tobool = icmp eq i8 %call1, 0, !dbg !7664
  br i1 %tobool, label %for.body, label %for.end, !dbg !7657

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !7665
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7642, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7646, metadata !DIExpression()), !dbg !7658
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7666
  %cmp = icmp eq %union.tree_node* %call2, %x, !dbg !7667
  br i1 %cmp, label %if.then, label %if.end, !dbg !7669

if.then:                                          ; preds = %for.body
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %y) #7, !dbg !7670
  br label %cleanup, !dbg !7672

if.end:                                           ; preds = %for.body
  %call3 = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %call2) #6, !dbg !7673
  %call4 = call fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %loop, %union.tree_node* %call3) #7, !dbg !7674
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7647, metadata !DIExpression()), !dbg !7658
  %cmp5 = icmp eq %union.tree_node* %call4, null, !dbg !7675
  %2 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !7677
  %cmp6 = icmp eq %union.tree_node* %call4, %2, !dbg !7678
  %or.cond = or i1 %cmp5, %cmp6, !dbg !7679
  br i1 %or.cond, label %cleanup, label %if.end8, !dbg !7679

if.end8:                                          ; preds = %if.end
  %3 = load i32, i32* %num, align 8, !dbg !7680
  %call9 = call %union.tree_node* @evolution_part_in_loop_num(%union.tree_node* %call4, i32 %3) #6, !dbg !7681
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !7646, metadata !DIExpression()), !dbg !7658
  %cmp10 = icmp eq %union.tree_node* %call9, null, !dbg !7682
  %4 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !7683
  %cmp12 = icmp eq %union.tree_node* %call9, %4, !dbg !7684
  %or.cond1 = or i1 %cmp10, %cmp12, !dbg !7685
  br i1 %or.cond1, label %cleanup, label %lor.lhs.false13, !dbg !7685

lor.lhs.false13:                                  ; preds = %if.end8
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7686
  %bf.load = load i64, i64* %5, align 8, !dbg !7686
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !7687
  %cmp14 = icmp eq i64 %bf.cast3, 23, !dbg !7687
  br i1 %cmp14, label %lor.lhs.false15, label %cleanup, !dbg !7688

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %call16 = call i64 @int_cst_value(%union.tree_node* %call9) #6, !dbg !7689
  %cmp17 = icmp eq i64 %call16, %conv, !dbg !7690
  br i1 %cmp17, label %if.end20, label %cleanup, !dbg !7691

if.end20:                                         ; preds = %lor.lhs.false15
  %6 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !7692
  %7 = bitcast %union.tree_node* %call2 to i8*, !dbg !7693
  %call21 = call i32 %6(i8* %7) #6, !dbg !7692
  store i32 %call21, i32* %hash, align 8, !dbg !7694
  store %union.tree_node* %call2, %union.tree_node** %from, align 8, !dbg !7695
  %call24 = call i8* @htab_find_with_hash(%struct.htab* %replacements, i8* nonnull %1, i32 %call21) #6, !dbg !7696
  call void @llvm.dbg.value(metadata i8* %call24, metadata !7652, metadata !DIExpression()), !dbg !7658
  %cmp25 = icmp eq i8* %call24, null, !dbg !7697
  br i1 %cmp25, label %if.end28, label %if.then27, !dbg !7699

if.then27:                                        ; preds = %if.end20
  call void @llvm.dbg.value(metadata i8* %call24, metadata !7652, metadata !DIExpression()), !dbg !7658
  %to = getelementptr inbounds i8, i8* %call24, i64 16, !dbg !7700
  %8 = bitcast i8* %to to %union.tree_node**, !dbg !7700
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !7700
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %9) #7, !dbg !7700
  br label %cleanup, !dbg !7702

if.end28:                                         ; preds = %if.end20
  %10 = load i32, i32* %num, align 8, !dbg !7703
  %call30 = call %union.tree_node* @initial_condition_in_loop_num(%union.tree_node* %call4, i32 %10) #6, !dbg !7704
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !7648, metadata !DIExpression()), !dbg !7658
  %cmp31 = icmp ne %union.tree_node* %call30, null, !dbg !7705
  %11 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !7705
  %cmp33 = icmp ne %union.tree_node* %call30, %11, !dbg !7705
  %or.cond2 = and i1 %cmp31, %cmp33, !dbg !7705
  br i1 %or.cond2, label %cond.end, label %cond.true, !dbg !7705

cond.true:                                        ; preds = %if.end28
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2083, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7705
  br label %cond.end, !dbg !7705

cond.end:                                         ; preds = %if.end28, %cond.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7706
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7706
  %13 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !7707
  %cmp37 = icmp eq %union.tree_node* %12, %13, !dbg !7708
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !7709

if.then39:                                        ; preds = %cond.end
  %call42 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %12, %union.tree_node* %call30, %union.tree_node* %yinit) #6, !dbg !7710
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !7649, metadata !DIExpression()), !dbg !7658
  %14 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !7712
  %call45 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %14, %union.tree_node* %y, %union.tree_node* %call42) #6, !dbg !7712
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !7649, metadata !DIExpression()), !dbg !7658
  %cmp46 = icmp eq %union.tree_node* %call45, %y, !dbg !7713
  br i1 %cmp46, label %if.then48, label %if.end59, !dbg !7715

if.then48:                                        ; preds = %if.then39
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %y) #7, !dbg !7716
  br label %cleanup, !dbg !7718

if.else:                                          ; preds = %cond.end
  %call52 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %13, %union.tree_node* %y, %union.tree_node* %yinit) #6, !dbg !7719
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !7649, metadata !DIExpression()), !dbg !7658
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7721
  %call55 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %15, %union.tree_node* %call52) #6, !dbg !7721
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !7649, metadata !DIExpression()), !dbg !7658
  %16 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7722
  %call58 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %16, %union.tree_node* %call55, %union.tree_node* %call30) #6, !dbg !7722
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !7649, metadata !DIExpression()), !dbg !7658
  br label %if.end59

if.end59:                                         ; preds = %if.then39, %if.else
  %val.0 = phi %union.tree_node* [ %call58, %if.else ], [ %call45, %if.then39 ], !dbg !7661
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !7649, metadata !DIExpression()), !dbg !7658
  %17 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7723
  %call62 = call %union.tree_node* @create_tmp_var(%union.tree_node* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !7724
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !7650, metadata !DIExpression()), !dbg !7658
  %call63 = call zeroext i8 @add_referenced_var(%union.tree_node* %call62) #6, !dbg !7725
  %call64 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %firstbsi, %union.tree_node* %val.0, i8 zeroext 0, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !7726
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !7649, metadata !DIExpression()), !dbg !7658
  %call65 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call62, %union.tree_node* %call64) #6, !dbg !7727
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call65, metadata !7651, metadata !DIExpression()), !dbg !7658
  %call66 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call62, %union.gimple_statement_d* %call65) #7, !dbg !7728
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !7650, metadata !DIExpression()), !dbg !7658
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call65, %union.tree_node* %call66) #7, !dbg !7729
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* %firstbsi, %union.gimple_statement_d* %call65, i32 1) #6, !dbg !7730
  call fastcc void @update_stmt(%union.gimple_statement_d* %call65) #7, !dbg !7731
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %call66) #7, !dbg !7732
  %call67 = call i8* @ggc_alloc_stat(i64 24) #6, !dbg !7733
  call void @llvm.dbg.value(metadata i8* %call67, metadata !7652, metadata !DIExpression()), !dbg !7658
  %18 = load i32, i32* %hash, align 8, !dbg !7734
  %hash69 = getelementptr inbounds i8, i8* %call67, i64 8, !dbg !7735
  %19 = bitcast i8* %hash69 to i32*, !dbg !7735
  store i32 %18, i32* %19, align 8, !dbg !7736
  %from71 = bitcast i8* %call67 to %union.tree_node**, !dbg !7737
  store %union.tree_node* %call2, %union.tree_node** %from71, align 8, !dbg !7738
  %to72 = getelementptr inbounds i8, i8* %call67, i64 16, !dbg !7739
  %20 = bitcast i8* %to72 to %union.tree_node**, !dbg !7739
  store %union.tree_node* %call66, %union.tree_node** %20, align 8, !dbg !7740
  %21 = load i32, i32* %hash, align 8, !dbg !7741
  %call74 = call i8** @htab_find_slot_with_hash(%struct.htab* %replacements, i8* %call67, i32 %21, i32 1) #6, !dbg !7742
  call void @llvm.dbg.value(metadata i8** %call74, metadata !7654, metadata !DIExpression()), !dbg !7658
  %22 = bitcast i8** %call74 to %struct.tree_map**, !dbg !7743
  %23 = load %struct.tree_map*, %struct.tree_map** %22, align 8, !dbg !7743
  %cmp75 = icmp eq %struct.tree_map* %23, null, !dbg !7743
  br i1 %cmp75, label %cond.end79, label %cond.true77, !dbg !7743

cond.true77:                                      ; preds = %if.end59
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7743
  br label %cond.end79, !dbg !7743

cond.end79:                                       ; preds = %if.end59, %cond.true77
  store i8* %call67, i8** %call74, align 8, !dbg !7744
  br label %cleanup, !dbg !7745

cleanup:                                          ; preds = %lor.lhs.false15, %lor.lhs.false13, %if.end8, %if.end, %cond.end79, %if.then48, %if.then27, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7745
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7640, metadata !DIExpression(DW_OP_deref)), !dbg !7655
  %call90 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7664
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call90, metadata !7641, metadata !DIExpression()), !dbg !7655
  br label %for.cond, !dbg !7664, !llvm.loop !7746

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !7748
  ret void, !dbg !7748
}

declare dso_local void @mark_sym_for_renaming(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vop(%struct.function* %fun) unnamed_addr #0 !dbg !7749 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !7755, metadata !DIExpression()), !dbg !7756
  %tobool = icmp eq %struct.function* %fun, null, !dbg !7757
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !7757

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !7757
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !7757
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !7757
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !7757

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7757
  %gimple_df2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !7756
  %.pre = load %struct.gimple_df*, %struct.gimple_df** %gimple_df2.phi.trans.insert, align 8, !dbg !7758
  br label %cond.end, !dbg !7757

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %1 = phi %struct.gimple_df* [ %0, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !7758
  %vop = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 3, !dbg !7759
  %2 = load %union.tree_node*, %union.tree_node** %vop, align 8, !dbg !7759
  ret %union.tree_node* %2, !dbg !7760
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_source_location_base_space(%struct.VEC_source_location_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7761 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_source_location_base* %vec_, metadata !7765, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i32 1, metadata !7766, metadata !DIExpression()), !dbg !7767
  %tobool = icmp eq %struct.VEC_source_location_base* %vec_, null, !dbg !7768
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7768

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_source_location_base, %struct.VEC_source_location_base* %vec_, i64 0, i32 1, !dbg !7768
  %0 = load i32, i32* %alloc, align 4, !dbg !7768
  %num = getelementptr inbounds %struct.VEC_source_location_base, %struct.VEC_source_location_base* %vec_, i64 0, i32 0, !dbg !7768
  %1 = load i32, i32* %num, align 4, !dbg !7768
  %cmp1 = icmp ne i32 %0, %1, !dbg !7768
  %phitmp = zext i1 %cmp1 to i32, !dbg !7768
  br label %cond.end, !dbg !7768

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7768

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7768
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7769 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7773, metadata !DIExpression()), !dbg !7774
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7775
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7775
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7775
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7775

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7775
  br label %cond.end, !dbg !7775

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7775
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7775
  %cmp = icmp eq i32 %call, 1, !dbg !7776
  %conv2 = zext i1 %cmp to i8, !dbg !7775
  ret i8 %conv2, !dbg !7777
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !7778 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !7782, metadata !DIExpression()), !dbg !7783
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !7784
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7784

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !7784
  %0 = load i32, i32* %num, align 8, !dbg !7784
  br label %cond.end, !dbg !7784

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7784
  ret i32 %cond, !dbg !7784
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7785 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7787, metadata !DIExpression()), !dbg !7788
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7789
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !7789
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7789
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7789

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7789
  br label %cond.end, !dbg !7789

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7789
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7789
  %cmp = icmp eq i32 %call, 1, !dbg !7790
  %conv2 = zext i1 %cmp to i8, !dbg !7789
  ret i8 %conv2, !dbg !7791
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !7792 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !7794, metadata !DIExpression()), !dbg !7795
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !7796
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7796

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !7797
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !7797
  br label %cond.end, !dbg !7796

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !7796
  ret %struct.gimple_seq_node_d* %cond, !dbg !7798
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !7799 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !7804, metadata !DIExpression()), !dbg !7805
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !7806
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !7807
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !7807
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !7808
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !7809
  ret void, !dbg !7810
}

declare dso_local i64 @int_cst_value(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @initial_condition_in_loop_num(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !7811 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7815, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !7816, metadata !DIExpression()), !dbg !7818
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !7819
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7821

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7822
  %bf.load = load i64, i64* %0, align 8, !dbg !7822
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7823
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7823
  br i1 %cmp, label %if.else, label %if.then, !dbg !7824

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7825
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7826
  br label %if.end, !dbg !7827

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7828
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !7828
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !7817, metadata !DIExpression()), !dbg !7818
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !7830
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7831
}

declare dso_local i32 @pointer_set_contains(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

declare dso_local i32 @pointer_set_insert(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !7832 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !7836, metadata !DIExpression()), !dbg !7837
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7838
  %bf.load = load i64, i64* %0, align 8, !dbg !7838
  %bf.cast = and i64 %bf.load, 65535, !dbg !7838
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7838
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7838
  %cmp = icmp eq i32 %1, 9, !dbg !7838
  br i1 %cmp, label %if.then, label %if.else, !dbg !7840

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7841
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !7841
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !7841
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !7841
  %4 = load i64, i64* %low, align 8, !dbg !7841
  %conv = trunc i64 %4 to i32, !dbg !7841
  br label %return, !dbg !7842

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !7843
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !7843
  %conv9 = zext i8 %5 to i32, !dbg !7843
  br label %return, !dbg !7844

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !7845
  ret i32 %retval.0, !dbg !7846
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_lambda_vector_gc* @VEC_lambda_vector_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !7847 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !7851, metadata !DIExpression()), !dbg !7852
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !7853
  %0 = bitcast i8* %call to %struct.VEC_lambda_vector_gc*, !dbg !7853
  ret %struct.VEC_lambda_vector_gc* %0, !dbg !7853
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @av_for_af(%union.tree_node* %access_fun, i32* %cy, %struct.access_matrix* %am) unnamed_addr #5 !dbg !7854 {
entry:
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %access_fun, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7866
  %bf.load.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !7867
  br label %tailrecurse, !dbg !7868

tailrecurse:                                      ; preds = %if.then21, %entry
  %bf.load = phi i64 [ %bf.load.pre, %entry ], [ %bf.load16, %if.then21 ], !dbg !7867
  %access_fun.tr = phi %union.tree_node* [ %access_fun, %entry ], [ %1, %if.then21 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr, metadata !7858, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32* %cy, metadata !7859, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata %struct.access_matrix* %am, metadata !7860, metadata !DIExpression()), !dbg !7866
  %0 = trunc i64 %bf.load to i16, !dbg !7867
  switch i16 %0, label %return.loopexit [
    i16 146, label %sw.bb
    i16 23, label %sw.bb26
  ], !dbg !7870

sw.bb:                                            ; preds = %tailrecurse
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %access_fun.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7871
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7871
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7871
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7861, metadata !DIExpression()), !dbg !7872
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7873
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !7873
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7864, metadata !DIExpression()), !dbg !7872
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7874
  %bf.load5 = load i64, i64* %3, align 8, !dbg !7874
  %bf.cast71 = and i64 %bf.load5, 65535, !dbg !7876
  %cmp = icmp eq i64 %bf.cast71, 23, !dbg !7876
  br i1 %cmp, label %if.end, label %return.loopexit, !dbg !7877

if.end:                                           ; preds = %sw.bb
  %4 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !7878
  %5 = load %struct.tree_int_cst*, %struct.tree_int_cst** %4, align 8, !dbg !7878
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %5, i64 0, i32 1, i32 0, !dbg !7878
  %6 = load i64, i64* %low, align 8, !dbg !7878
  %conv = trunc i64 %6 to i32, !dbg !7878
  %call = tail call fastcc i32 @am_vector_index_for_loop(%struct.access_matrix* %am, i32 %conv) #7, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %call, metadata !7865, metadata !DIExpression()), !dbg !7872
  %call12 = tail call i64 @int_cst_value(%union.tree_node* %2) #6, !dbg !7880
  %conv13 = trunc i64 %call12 to i32, !dbg !7880
  %idxprom = zext i32 %call to i64, !dbg !7881
  %arrayidx14 = getelementptr inbounds i32, i32* %cy, i64 %idxprom, !dbg !7881
  store i32 %conv13, i32* %arrayidx14, align 4, !dbg !7882
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7883
  %bf.load16 = load i64, i64* %7, align 8, !dbg !7883
  %bf.cast182 = and i64 %bf.load16, 65535, !dbg !7884
  %cmp19 = icmp eq i64 %bf.cast182, 146, !dbg !7884
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !7885

if.then21:                                        ; preds = %if.end
  br label %tailrecurse, !dbg !7868

if.else:                                          ; preds = %if.end
  %.lcssa = phi %union.tree_node* [ %1, %if.end ], !dbg !7871
  %call23 = tail call fastcc zeroext i8 @av_for_af_base(%union.tree_node* %.lcssa, i32* %cy, %struct.access_matrix* %am, i32 1) #7, !dbg !7886
  br label %return, !dbg !7887

sw.bb26:                                          ; preds = %tailrecurse
  %access_fun.tr.lcssa9 = phi %union.tree_node* [ %access_fun.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.lcssa9, metadata !7858, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.lcssa9, metadata !7858, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.lcssa9, metadata !7858, metadata !DIExpression()), !dbg !7866
  %call27 = tail call fastcc zeroext i8 @av_for_af_base(%union.tree_node* %access_fun.tr.lcssa9, i32* %cy, %struct.access_matrix* %am, i32 1) #7, !dbg !7888
  br label %return, !dbg !7889

return.loopexit:                                  ; preds = %tailrecurse, %sw.bb
  br label %return, !dbg !7890

return:                                           ; preds = %return.loopexit, %if.else, %sw.bb26
  %retval.1 = phi i8 [ %call27, %sw.bb26 ], [ %call23, %if.else ], [ 0, %return.loopexit ], !dbg !7891
  ret i8 %retval.1, !dbg !7890
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32** @VEC_lambda_vector_base_quick_push(%struct.VEC_lambda_vector_base* %vec_, i32* %obj_) unnamed_addr #0 !dbg !7892 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_base* %vec_, metadata !7897, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32* %obj_, metadata !7898, metadata !DIExpression()), !dbg !7900
  %num1 = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 0, !dbg !7901
  %0 = load i32, i32* %num1, align 8, !dbg !7901
  %inc = add i32 %0, 1, !dbg !7901
  store i32 %inc, i32* %num1, align 8, !dbg !7901
  %idxprom = zext i32 %0 to i64, !dbg !7901
  %arrayidx = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7901
  call void @llvm.dbg.value(metadata i32** %arrayidx, metadata !7899, metadata !DIExpression()), !dbg !7900
  store i32* %obj_, i32** %arrayidx, align 8, !dbg !7901
  ret i32** %arrayidx, !dbg !7901
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @am_vector_index_for_loop(%struct.access_matrix* %access_matrix, i32 %loop_num) unnamed_addr #0 !dbg !7902 {
entry:
  %l = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.access_matrix* %access_matrix, metadata !7906, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata i32 %loop_num, metadata !7907, metadata !DIExpression()), !dbg !7910
  %0 = bitcast %struct.loop** %l to i8*, !dbg !7911
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7911
  call void @llvm.dbg.value(metadata i32 0, metadata !7908, metadata !DIExpression()), !dbg !7910
  %loop_nest = getelementptr inbounds %struct.access_matrix, %struct.access_matrix* %access_matrix, i64 0, i32 0, !dbg !7912
  br label %for.cond, !dbg !7915

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !7916
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7908, metadata !DIExpression()), !dbg !7910
  %1 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !7917
  %tobool = icmp eq %struct.VEC_loop_p_heap* %1, null, !dbg !7917
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7917

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %1, i64 0, i32 0, !dbg !7917
  br label %cond.end, !dbg !7917

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7917
  call void @llvm.dbg.value(metadata %struct.loop** %l, metadata !7909, metadata !DIExpression(DW_OP_deref)), !dbg !7910
  %call = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond, i32 %i.0, %struct.loop** nonnull %l) #7, !dbg !7917
  %tobool2 = icmp eq i32 %call, 0, !dbg !7918
  br i1 %tobool2, label %for.end, label %for.body, !dbg !7918

for.body:                                         ; preds = %cond.end
  %2 = load %struct.loop*, %struct.loop** %l, align 8, !dbg !7919
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !7909, metadata !DIExpression()), !dbg !7910
  %num = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 0, !dbg !7921
  %3 = load i32, i32* %num, align 8, !dbg !7921
  %cmp = icmp eq i32 %3, %loop_num, !dbg !7922
  br i1 %cmp, label %cleanup.loopexit, label %for.inc, !dbg !7923

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7924
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7908, metadata !DIExpression()), !dbg !7910
  br label %for.cond, !dbg !7925, !llvm.loop !7926

for.end:                                          ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.40, i64 0, i64 0), i32 157, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7928
  br label %cleanup, !dbg !7929

cleanup.loopexit:                                 ; preds = %for.body
  %i.0.lcssa3 = phi i32 [ %i.0, %for.body ], !dbg !7916
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !7908, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !7908, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !7908, metadata !DIExpression()), !dbg !7910
  br label %cleanup, !dbg !7930

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %retval.0 = phi i32 [ 0, %for.end ], [ %i.0.lcssa3, %cleanup.loopexit ], !dbg !7910
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7930
  ret i32 %retval.0, !dbg !7930
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @av_for_af_base(%union.tree_node* %base_expr, i32* %cy, %struct.access_matrix* %am, i32 %cst) unnamed_addr #5 !dbg !7931 {
entry:
  br label %tailrecurse, !dbg !7943

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %base_expr.tr = phi %union.tree_node* [ %base_expr, %entry ], [ %base_expr.tr.be, %tailrecurse.backedge ]
  %cst.tr = phi i32 [ %cst, %entry ], [ %cst.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32* %cy, metadata !7936, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %struct.access_matrix* %am, metadata !7937, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i8 1, metadata !7939, metadata !DIExpression()), !dbg !7944
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %base_expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7945
  %bf.load = load i64, i64* %0, align 8, !dbg !7945
  %1 = trunc i64 %bf.load to i16, !dbg !7945
  switch i16 %1, label %cleanup97.loopexit [
    i16 23, label %sw.bb
    i16 141, label %sw.bb7
    i16 63, label %sw.bb15
    i16 64, label %sw.bb27
    i16 65, label %sw.bb45
    i16 79, label %sw.bb91
  ], !dbg !7946

sw.bb:                                            ; preds = %tailrecurse
  %base_expr.tr.lcssa25 = phi %union.tree_node* [ %base_expr.tr, %tailrecurse ]
  %cst.tr.lcssa21 = phi i32 [ %cst.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa25, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa21, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa25, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa21, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa25, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa21, metadata !7938, metadata !DIExpression()), !dbg !7944
  %call = tail call i64 @int_cst_value(%union.tree_node* %base_expr.tr.lcssa25) #6, !dbg !7947
  %nb_induction_vars = getelementptr inbounds %struct.access_matrix, %struct.access_matrix* %am, i64 0, i32 1, !dbg !7948
  %2 = load i32, i32* %nb_induction_vars, align 8, !dbg !7948
  %parameters = getelementptr inbounds %struct.access_matrix, %struct.access_matrix* %am, i64 0, i32 2, !dbg !7948
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %parameters, align 8, !dbg !7948
  %tobool = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !7948
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7948

cond.true:                                        ; preds = %sw.bb
  %base2 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !7948
  br label %cond.end, !dbg !7948

cond.end:                                         ; preds = %sw.bb, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base2, %cond.true ], [ null, %sw.bb ], !dbg !7948
  %call3 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !7948
  %add = add i32 %2, %call3, !dbg !7948
  %idxprom = zext i32 %add to i64, !dbg !7949
  %arrayidx = getelementptr inbounds i32, i32* %cy, i64 %idxprom, !dbg !7949
  %4 = load i32, i32* %arrayidx, align 4, !dbg !7950
  %5 = trunc i64 %call to i32, !dbg !7950
  %6 = mul i32 %cst.tr.lcssa21, %5, !dbg !7950
  %conv6 = add i32 %4, %6, !dbg !7950
  store i32 %conv6, i32* %arrayidx, align 4, !dbg !7950
  br label %cleanup97, !dbg !7951

sw.bb7:                                           ; preds = %tailrecurse
  %base_expr.tr.lcssa26 = phi %union.tree_node* [ %base_expr.tr, %tailrecurse ]
  %cst.tr.lcssa22 = phi i32 [ %cst.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa26, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa22, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa26, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa22, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa26, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa22, metadata !7938, metadata !DIExpression()), !dbg !7944
  %call8 = tail call i32 @access_matrix_get_index_for_parameter(%union.tree_node* %base_expr.tr.lcssa26, %struct.access_matrix* %am) #6, !dbg !7952
  call void @llvm.dbg.value(metadata i32 %call8, metadata !7940, metadata !DIExpression()), !dbg !7953
  %cmp = icmp sgt i32 %call8, -1, !dbg !7954
  br i1 %cmp, label %if.then, label %cleanup97, !dbg !7956

if.then:                                          ; preds = %sw.bb7
  %idxprom10 = sext i32 %call8 to i64, !dbg !7957
  %arrayidx11 = getelementptr inbounds i32, i32* %cy, i64 %idxprom10, !dbg !7957
  %7 = load i32, i32* %arrayidx11, align 4, !dbg !7957
  %add12 = add nsw i32 %7, %cst.tr.lcssa22, !dbg !7959
  store i32 %add12, i32* %arrayidx11, align 4, !dbg !7960
  br label %cleanup97, !dbg !7961

sw.bb15:                                          ; preds = %tailrecurse
  %base_expr.tr.lcssa27 = phi %union.tree_node* [ %base_expr.tr, %tailrecurse ]
  %cst.tr.lcssa23 = phi i32 [ %cst.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa27, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa23, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa27, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa23, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa27, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa23, metadata !7938, metadata !DIExpression()), !dbg !7944
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %base_expr.tr.lcssa27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7962
  %8 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7962
  %call17 = tail call fastcc zeroext i8 @av_for_af_base(%union.tree_node* %8, i32* %cy, %struct.access_matrix* %am, i32 %cst.tr.lcssa23) #7, !dbg !7963
  %tobool19 = icmp eq i8 %call17, 0, !dbg !7963
  br i1 %tobool19, label %land.end, label %land.rhs, !dbg !7964

land.rhs:                                         ; preds = %sw.bb15
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7965
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8, !dbg !7965
  %call23 = tail call fastcc zeroext i8 @av_for_af_base(%union.tree_node* %9, i32* %cy, %struct.access_matrix* %am, i32 %cst.tr.lcssa23) #7, !dbg !7966
  %tobool25 = icmp ne i8 %call23, 0, !dbg !7964
  %phitmp3 = zext i1 %tobool25 to i8
  br label %land.end

land.end:                                         ; preds = %sw.bb15, %land.rhs
  %10 = phi i8 [ 0, %sw.bb15 ], [ %phitmp3, %land.rhs ]
  br label %cleanup97, !dbg !7967

sw.bb27:                                          ; preds = %tailrecurse
  %base_expr.tr.lcssa28 = phi %union.tree_node* [ %base_expr.tr, %tailrecurse ]
  %cst.tr.lcssa24 = phi i32 [ %cst.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa28, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa24, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa28, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa24, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata %union.tree_node* %base_expr.tr.lcssa28, metadata !7935, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 %cst.tr.lcssa24, metadata !7938, metadata !DIExpression()), !dbg !7944
  %operands29 = getelementptr inbounds %union.tree_node, %union.tree_node* %base_expr.tr.lcssa28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7968
  %11 = load %union.tree_node*, %union.tree_node** %operands29, align 8, !dbg !7968
  %call31 = tail call fastcc zeroext i8 @av_for_af_base(%union.tree_node* %11, i32* %cy, %struct.access_matrix* %am, i32 %cst.tr.lcssa24) #7, !dbg !7969
  %tobool33 = icmp eq i8 %call31, 0, !dbg !7969
  br i1 %tobool33, label %land.end42, label %land.rhs34, !dbg !7970

land.rhs34:                                       ; preds = %sw.bb27
  %arrayidx37 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands29, i64 1, !dbg !7971
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx37, align 8, !dbg !7971
  %mul38 = sub nsw i32 0, %cst.tr.lcssa24, !dbg !7972
  %call39 = tail call fastcc zeroext i8 @av_for_af_base(%union.tree_node* %12, i32* %cy, %struct.access_matrix* %am, i32 %mul38) #7, !dbg !7973
  %tobool41 = icmp ne i8 %call39, 0, !dbg !7970
  %phitmp = zext i1 %tobool41 to i8
  br label %land.end42

land.end42:                                       ; preds = %sw.bb27, %land.rhs34
  %13 = phi i8 [ 0, %sw.bb27 ], [ %phitmp, %land.rhs34 ]
  br label %cleanup97, !dbg !7974

sw.bb45:                                          ; preds = %tailrecurse
  %operands47 = getelementptr inbounds %union.tree_node, %union.tree_node* %base_expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7975
  %14 = bitcast %union.tree_node** %operands47 to i64**, !dbg !7975
  %15 = load i64*, i64** %14, align 8, !dbg !7975
  %bf.load50 = load i64, i64* %15, align 8, !dbg !7975
  %bf.cast521 = and i64 %bf.load50, 65535, !dbg !7977
  %cmp53 = icmp eq i64 %bf.cast521, 23, !dbg !7977
  %arrayidx58 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands47, i64 1, !dbg !7978
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx58, align 8, !dbg !7978
  %17 = bitcast i64* %15 to %union.tree_node*, !dbg !7979
  br i1 %cmp53, label %if.then55, label %if.else, !dbg !7979

if.then55:                                        ; preds = %sw.bb45
  %call63 = tail call i64 @int_cst_value(%union.tree_node* %17) #6, !dbg !7980
  %18 = trunc i64 %call63 to i32, !dbg !7981
  %conv65 = mul i32 %cst.tr, %18, !dbg !7981
  br label %tailrecurse.backedge, !dbg !7982

if.else:                                          ; preds = %sw.bb45
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7983
  %bf.load71 = load i64, i64* %19, align 8, !dbg !7983
  %bf.cast732 = and i64 %bf.load71, 65535, !dbg !7985
  %cmp74 = icmp eq i64 %bf.cast732, 23, !dbg !7985
  br i1 %cmp74, label %if.then76, label %cleanup97.loopexit, !dbg !7986

if.then76:                                        ; preds = %if.else
  %call84 = tail call i64 @int_cst_value(%union.tree_node* %16) #6, !dbg !7987
  %20 = trunc i64 %call84 to i32, !dbg !7988
  %conv86 = mul i32 %cst.tr, %20, !dbg !7988
  br label %tailrecurse.backedge, !dbg !7989

sw.bb91:                                          ; preds = %tailrecurse
  %operands93 = getelementptr inbounds %union.tree_node, %union.tree_node* %base_expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7990
  %21 = load %union.tree_node*, %union.tree_node** %operands93, align 8, !dbg !7990
  %mul95 = sub nsw i32 0, %cst.tr, !dbg !7991
  br label %tailrecurse.backedge, !dbg !7943

tailrecurse.backedge:                             ; preds = %sw.bb91, %if.then76, %if.then55
  %base_expr.tr.be = phi %union.tree_node* [ %21, %sw.bb91 ], [ %17, %if.then76 ], [ %16, %if.then55 ]
  %cst.tr.be = phi i32 [ %mul95, %sw.bb91 ], [ %conv86, %if.then76 ], [ %conv65, %if.then55 ]
  br label %tailrecurse, !dbg !7944

cleanup97.loopexit:                               ; preds = %if.else, %tailrecurse
  br label %cleanup97, !dbg !7992

cleanup97:                                        ; preds = %cleanup97.loopexit, %if.then, %sw.bb7, %land.end42, %land.end, %cond.end
  %retval.1 = phi i8 [ %13, %land.end42 ], [ %10, %land.end ], [ 1, %cond.end ], [ 1, %if.then ], [ 0, %sw.bb7 ], [ 0, %cleanup97.loopexit ], !dbg !7993
  ret i8 %retval.1, !dbg !7992
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !7994 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !7999, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8000, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata %struct.loop** %ptr, metadata !8001, metadata !DIExpression()), !dbg !8002
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !8003
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !8003

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !8003
  %0 = load i32, i32* %num, align 8, !dbg !8003
  %cmp = icmp ugt i32 %0, %ix_, !dbg !8003
  br i1 %cmp, label %if.then, label %if.else, !dbg !8005

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !8006
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8006
  %1 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !8006
  br label %return, !dbg !8006

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !8008

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.loop* [ null, %if.else ], [ %1, %if.then ], !dbg !8010
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !8010
  store %struct.loop* %storemerge, %struct.loop** %ptr, align 8, !dbg !8010
  ret i32 %retval.0, !dbg !8005
}

declare dso_local i32 @access_matrix_get_index_for_parameter(%union.tree_node*, %struct.access_matrix*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2030, !2031, !2032}
!llvm.ident = !{!2033}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !460, nameTableKind: None)
!1 = !DIFile(filename: "lambda-code.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2 = !{!3, !132, !327, !336, !340, !346, !351, !356, !374, !381, !388, !427, !453}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !4, line: 7, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!7 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!14 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!15 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!16 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!17 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!18 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!19 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!20 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!21 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!22 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!23 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!25 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!26 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!27 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!28 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!29 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!30 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!31 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!32 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!33 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!34 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!35 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!36 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!37 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!38 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!39 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!40 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!41 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!42 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!43 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!44 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!45 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!46 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!47 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!48 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!49 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!50 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!51 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!52 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!53 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!54 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!55 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!56 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!57 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!58 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!59 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!60 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!61 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!62 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!63 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!64 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!65 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!66 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!67 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!68 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!69 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!70 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!71 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!72 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!73 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!74 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!75 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!76 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!77 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!78 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!79 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!80 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!81 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!82 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!83 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!84 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!85 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!86 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!87 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!88 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!89 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!90 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!91 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!92 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!93 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!94 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!95 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!131 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !133, line: 39, baseType: !5, size: 32, elements: !134)
!133 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!134 = !{!135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326}
!135 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!139 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!140 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!141 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!142 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!143 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!144 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!145 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!146 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!147 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!148 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!149 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!150 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!151 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!152 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!153 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!154 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!155 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!156 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!157 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!158 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!159 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!160 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!161 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!162 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!163 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!164 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!165 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!166 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!167 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!168 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!169 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!170 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!171 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!172 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!173 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!174 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!175 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!176 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!177 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!178 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!179 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!180 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!181 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!182 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!183 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!184 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!185 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!186 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!187 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!188 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!189 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!190 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!191 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!192 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!193 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!194 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!195 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!196 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!197 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!198 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!199 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!200 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!201 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!202 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!203 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!204 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!205 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!206 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!207 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!208 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!209 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!210 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!211 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!212 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!213 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!214 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!215 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!216 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!217 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!218 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!219 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!220 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!221 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!222 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!223 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!226 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!227 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!232 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!233 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!234 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!235 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!236 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!237 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!238 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!239 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!240 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!241 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!242 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!243 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!244 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!245 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!246 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!247 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!248 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!249 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!250 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!251 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!252 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!253 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!254 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!255 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!256 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!257 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!258 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!259 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!260 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!261 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!262 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!263 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!264 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!265 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!266 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!267 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!268 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!269 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!270 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!271 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!272 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!273 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!274 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!275 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!276 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!277 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!278 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!279 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!280 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!281 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!282 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!283 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!284 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!285 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!286 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!287 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!288 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!289 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!299 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!300 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!302 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!303 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!304 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!305 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!306 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!320 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!321 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!322 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!323 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!324 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!325 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!326 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !328, line: 31, baseType: !5, size: 32, elements: !329)
!328 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!329 = !{!330, !331, !332, !333, !334, !335}
!330 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!331 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!332 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!333 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!334 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!335 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !328, line: 91, baseType: !5, size: 32, elements: !337)
!337 = !{!338, !339}
!338 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!339 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !341, line: 363, baseType: !5, size: 32, elements: !342)
!341 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!342 = !{!343, !344, !345}
!343 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!345 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !341, line: 355, baseType: !5, size: 32, elements: !347)
!347 = !{!348, !349, !350}
!348 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!349 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!350 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !352, line: 474, baseType: !5, size: 32, elements: !353)
!352 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!353 = !{!354, !355}
!354 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !133, line: 280, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373}
!358 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !133, line: 1817, baseType: !5, size: 32, elements: !375)
!375 = !{!376, !377, !378, !379, !380}
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!381 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !133, line: 1805, baseType: !5, size: 32, elements: !382)
!382 = !{!383, !384, !385, !386, !387}
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!384 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!385 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !389, line: 51, baseType: !5, size: 32, elements: !390)
!389 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!390 = !{!391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426}
!391 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!395 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!396 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!397 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!398 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!399 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!400 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!401 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!402 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!403 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!404 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!405 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!406 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!407 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!408 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!409 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!410 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!411 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!412 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!413 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!414 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!415 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!416 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!417 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!418 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!419 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!420 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!421 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!422 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!423 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!426 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!427 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !389, line: 727, baseType: !5, size: 32, elements: !428)
!428 = !{!429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452}
!429 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!430 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!431 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!432 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!433 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!434 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!435 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!436 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!437 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!438 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!439 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!440 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!441 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!442 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!443 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!444 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!445 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!446 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!447 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!448 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!449 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!450 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!451 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!452 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!453 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !454, line: 119, baseType: !5, size: 32, elements: !455)
!454 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!455 = !{!456, !457, !458, !459}
!456 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!457 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!458 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!459 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!460 = !{!461, !462, !463, !464, !467, !468, !470, !465, !480, !489, !494, !505, !132, !477, !1857, !495, !830, !1868, !863, !5, !1870, !1875, !1888, !1900, !632, !1903, !1908, !1920, !1929, !1930, !2029, !1962, !1974, !1071}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!463 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_body_vector", file: !471, line: 76, baseType: !472)
!471 = !DIFile(filename: "./lambda.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lambda_body_vector_s", file: !471, line: 71, size: 128, elements: !474)
!474 = !{!475, !478, !479}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "coefficients", scope: !473, file: !471, line: 73, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_vector", file: !471, line: 31, baseType: !477)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !471, line: 74, baseType: !463, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "denominator", scope: !473, file: !471, line: 75, baseType: !463, size: 32, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_linear_expression", file: !471, line: 100, baseType: !481)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lambda_linear_expression_s", file: !471, line: 93, size: 320, elements: !483)
!483 = !{!484, !485, !486, !487, !488}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "coefficients", scope: !482, file: !471, line: 95, baseType: !476, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !482, file: !471, line: 96, baseType: !463, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "invariant_coefficients", scope: !482, file: !471, line: 97, baseType: !476, size: 64, offset: 128)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "denominator", scope: !482, file: !471, line: 98, baseType: !463, size: 32, offset: 192)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !482, file: !471, line: 99, baseType: !481, size: 64, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_loopnest", file: !471, line: 145, baseType: !490)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lambda_loopnest_s", file: !471, line: 140, size: 128, elements: !492)
!492 = !{!493, !503, !504}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "loops", scope: !491, file: !471, line: 142, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_loop", file: !471, line: 127, baseType: !496)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lambda_loop_s", file: !471, line: 121, size: 256, elements: !498)
!498 = !{!499, !500, !501, !502}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "lower_bound", scope: !497, file: !471, line: 123, baseType: !480, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "upper_bound", scope: !497, file: !471, line: 124, baseType: !480, size: 64, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "linear_offset", scope: !497, file: !471, line: 125, baseType: !480, size: 64, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !497, file: !471, line: 126, baseType: !463, size: 32, offset: 192)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !491, file: !471, line: 143, baseType: !463, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "invariants", scope: !491, file: !471, line: 144, baseType: !463, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !506, line: 56, baseType: !507)
!506 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !133, line: 3371, size: 1792, elements: !509)
!509 = !{!510, !543, !549, !562, !581, !592, !597, !606, !612, !625, !637, !675, !1185, !1213, !1230, !1231, !1236, !1245, !1251, !1256, !1260, !1264, !1508, !1555, !1561, !1567, !1574, !1587, !1601, !1618, !1630, !1652, !1667, !1839}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !508, file: !133, line: 3372, baseType: !511, size: 64)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !133, line: 360, size: 64, elements: !512)
!512 = !{!513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !511, file: !133, line: 361, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !511, file: !133, line: 363, baseType: !5, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !511, file: !133, line: 364, baseType: !5, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !511, file: !133, line: 365, baseType: !5, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !511, file: !133, line: 366, baseType: !5, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !511, file: !133, line: 367, baseType: !5, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !511, file: !133, line: 368, baseType: !5, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !511, file: !133, line: 369, baseType: !5, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !511, file: !133, line: 370, baseType: !5, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !511, file: !133, line: 372, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !511, file: !133, line: 373, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !511, file: !133, line: 374, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !511, file: !133, line: 375, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !511, file: !133, line: 376, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !511, file: !133, line: 377, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !511, file: !133, line: 378, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !511, file: !133, line: 379, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !511, file: !133, line: 381, baseType: !5, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !511, file: !133, line: 382, baseType: !5, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !511, file: !133, line: 383, baseType: !5, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !511, file: !133, line: 384, baseType: !5, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !511, file: !133, line: 385, baseType: !5, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !511, file: !133, line: 386, baseType: !5, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !511, file: !133, line: 387, baseType: !5, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !511, file: !133, line: 388, baseType: !5, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !511, file: !133, line: 390, baseType: !5, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !511, file: !133, line: 391, baseType: !5, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !511, file: !133, line: 392, baseType: !5, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !511, file: !133, line: 394, baseType: !5, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !511, file: !133, line: 399, baseType: !5, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !508, file: !133, line: 3373, baseType: !544, size: 192)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !133, line: 402, size: 192, elements: !545)
!545 = !{!546, !547, !548}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !544, file: !133, line: 403, baseType: !511, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !544, file: !133, line: 404, baseType: !505, size: 64, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !544, file: !133, line: 405, baseType: !505, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !508, file: !133, line: 3374, baseType: !550, size: 320)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !133, line: 1384, size: 320, elements: !551)
!551 = !{!552, !553}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !550, file: !133, line: 1385, baseType: !544, size: 192)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !550, file: !133, line: 1386, baseType: !554, size: 128, offset: 192)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !555, line: 58, baseType: !556)
!555 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !555, line: 54, size: 128, elements: !557)
!557 = !{!558, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !556, file: !555, line: 56, baseType: !559, size: 64)
!559 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !556, file: !555, line: 57, baseType: !561, size: 64, offset: 64)
!561 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !508, file: !133, line: 3375, baseType: !563, size: 256)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !133, line: 1397, size: 256, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !563, file: !133, line: 1398, baseType: !544, size: 192)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !563, file: !133, line: 1399, baseType: !567, size: 64, offset: 192)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !569, line: 52, size: 256, elements: !570)
!569 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!570 = !{!571, !572, !573, !574, !575, !576, !577}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !568, file: !569, line: 56, baseType: !5, size: 2, flags: DIFlagBitField, extraData: i64 0)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !568, file: !569, line: 57, baseType: !5, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !568, file: !569, line: 58, baseType: !5, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !568, file: !569, line: 59, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !568, file: !569, line: 60, baseType: !5, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !568, file: !569, line: 61, baseType: !5, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !568, file: !569, line: 62, baseType: !578, size: 192, offset: 64)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, size: 192, elements: !579)
!579 = !{!580}
!580 = !DISubrange(count: 3)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !508, file: !133, line: 3376, baseType: !582, size: 256)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !133, line: 1408, size: 256, elements: !583)
!583 = !{!584, !585}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !582, file: !133, line: 1409, baseType: !544, size: 192)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !582, file: !133, line: 1410, baseType: !586, size: 64, offset: 192)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !588, line: 27, size: 192, elements: !589)
!588 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!589 = !{!590, !591}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !587, file: !588, line: 29, baseType: !554, size: 128)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !587, file: !588, line: 30, baseType: !3, size: 32, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !508, file: !133, line: 3377, baseType: !593, size: 256)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !133, line: 1437, size: 256, elements: !594)
!594 = !{!595, !596}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !593, file: !133, line: 1438, baseType: !544, size: 192)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !593, file: !133, line: 1439, baseType: !505, size: 64, offset: 192)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !508, file: !133, line: 3378, baseType: !598, size: 256)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !133, line: 1418, size: 256, elements: !599)
!599 = !{!600, !601, !602}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !598, file: !133, line: 1419, baseType: !544, size: 192)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !598, file: !133, line: 1420, baseType: !463, size: 32, offset: 192)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !598, file: !133, line: 1421, baseType: !603, size: 8, offset: 224)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 8, elements: !604)
!604 = !{!605}
!605 = !DISubrange(count: 1)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !508, file: !133, line: 3379, baseType: !607, size: 320)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !133, line: 1428, size: 320, elements: !608)
!608 = !{!609, !610, !611}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !607, file: !133, line: 1429, baseType: !544, size: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !607, file: !133, line: 1430, baseType: !505, size: 64, offset: 192)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !607, file: !133, line: 1431, baseType: !505, size: 64, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !508, file: !133, line: 3380, baseType: !613, size: 320)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !133, line: 1460, size: 320, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !613, file: !133, line: 1461, baseType: !544, size: 192)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !613, file: !133, line: 1462, baseType: !617, size: 128, offset: 192)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !618, line: 31, size: 128, elements: !619)
!618 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!619 = !{!620, !623, !624}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !617, file: !618, line: 32, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !617, file: !618, line: 33, baseType: !5, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !617, file: !618, line: 34, baseType: !5, size: 32, offset: 96)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !508, file: !133, line: 3381, baseType: !626, size: 384)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !133, line: 2507, size: 384, elements: !627)
!627 = !{!628, !629, !634, !635, !636}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !626, file: !133, line: 2508, baseType: !544, size: 192)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !626, file: !133, line: 2509, baseType: !630, size: 32, offset: 192)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !631, line: 58, baseType: !632)
!631 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !633, line: 44, baseType: !5)
!633 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!634 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !626, file: !133, line: 2510, baseType: !5, size: 32, offset: 224)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !626, file: !133, line: 2511, baseType: !505, size: 64, offset: 256)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !626, file: !133, line: 2512, baseType: !505, size: 64, offset: 320)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !508, file: !133, line: 3382, baseType: !638, size: 896)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !133, line: 2652, size: 896, elements: !639)
!639 = !{!640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !638, file: !133, line: 2653, baseType: !626, size: 384)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !638, file: !133, line: 2654, baseType: !505, size: 64, offset: 384)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !638, file: !133, line: 2656, baseType: !5, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !638, file: !133, line: 2658, baseType: !5, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !638, file: !133, line: 2659, baseType: !5, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !638, file: !133, line: 2660, baseType: !5, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !638, file: !133, line: 2661, baseType: !5, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !638, file: !133, line: 2662, baseType: !5, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !638, file: !133, line: 2663, baseType: !5, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !638, file: !133, line: 2664, baseType: !5, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !638, file: !133, line: 2666, baseType: !5, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !638, file: !133, line: 2667, baseType: !5, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !638, file: !133, line: 2668, baseType: !5, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !638, file: !133, line: 2669, baseType: !5, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !638, file: !133, line: 2670, baseType: !5, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !638, file: !133, line: 2671, baseType: !5, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !638, file: !133, line: 2672, baseType: !5, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !638, file: !133, line: 2673, baseType: !5, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !638, file: !133, line: 2674, baseType: !5, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !638, file: !133, line: 2678, baseType: !5, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !638, file: !133, line: 2682, baseType: !5, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !638, file: !133, line: 2685, baseType: !5, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !638, file: !133, line: 2688, baseType: !5, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !638, file: !133, line: 2690, baseType: !5, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !638, file: !133, line: 2692, baseType: !5, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !638, file: !133, line: 2695, baseType: !5, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !638, file: !133, line: 2698, baseType: !5, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !638, file: !133, line: 2703, baseType: !5, size: 32, offset: 512)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !638, file: !133, line: 2705, baseType: !505, size: 64, offset: 576)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !638, file: !133, line: 2706, baseType: !505, size: 64, offset: 640)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !638, file: !133, line: 2707, baseType: !505, size: 64, offset: 704)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !638, file: !133, line: 2708, baseType: !505, size: 64, offset: 768)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !638, file: !133, line: 2711, baseType: !673, size: 64, offset: 832)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !133, line: 2711, flags: DIFlagFwdDecl)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !508, file: !133, line: 3383, baseType: !676, size: 960)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !133, line: 2756, size: 960, elements: !677)
!677 = !{!678, !679}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !676, file: !133, line: 2757, baseType: !638, size: 896)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !676, file: !133, line: 2758, baseType: !680, size: 64, offset: 896)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !506, line: 50, baseType: !681)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !683, line: 240, size: 384, elements: !684)
!683 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!684 = !{!685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !682, file: !683, line: 242, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !682, file: !683, line: 245, baseType: !5, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !682, file: !683, line: 252, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !682, file: !683, line: 257, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !682, file: !683, line: 265, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !682, file: !683, line: 277, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !682, file: !683, line: 291, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !682, file: !683, line: 298, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !682, file: !683, line: 305, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !682, file: !683, line: 310, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !682, file: !683, line: 321, baseType: !696, size: 320, offset: 64)
!696 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !683, line: 315, size: 320, elements: !697)
!697 = !{!698, !1152, !1154, !1183, !1184}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !696, file: !683, line: 316, baseType: !699, size: 64)
!699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !700, size: 64, elements: !604)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !683, line: 183, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !683, line: 166, size: 64, elements: !702)
!702 = !{!703, !704, !705, !706, !707, !715, !716, !728, !731, !791, !792, !1129, !1142, !1149}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !701, file: !683, line: 168, baseType: !463, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !701, file: !683, line: 169, baseType: !5, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !701, file: !683, line: 170, baseType: !468, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !701, file: !683, line: 171, baseType: !680, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !701, file: !683, line: 172, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !506, line: 53, baseType: !709)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !683, line: 359, size: 128, elements: !711)
!711 = !{!712, !713}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !710, file: !683, line: 360, baseType: !463, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !710, file: !683, line: 361, baseType: !714, size: 64, offset: 64)
!714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 64, elements: !604)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !701, file: !683, line: 173, baseType: !3, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !701, file: !683, line: 174, baseType: !717, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !683, line: 133, baseType: !718)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !683, line: 115, size: 32, elements: !719)
!719 = !{!720, !721, !722, !723, !724, !725, !726, !727}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !718, file: !683, line: 118, baseType: !5, size: 8, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !718, file: !683, line: 120, baseType: !5, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !718, file: !683, line: 121, baseType: !5, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !718, file: !683, line: 123, baseType: !5, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !718, file: !683, line: 125, baseType: !5, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !718, file: !683, line: 127, baseType: !5, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !718, file: !683, line: 130, baseType: !5, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !718, file: !683, line: 132, baseType: !5, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !701, file: !683, line: 175, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !683, line: 175, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !701, file: !683, line: 176, baseType: !732, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !734, line: 75, size: 256, elements: !735)
!734 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!735 = !{!736, !750, !751, !752}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !733, file: !734, line: 76, baseType: !737, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !734, line: 68, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !734, line: 63, size: 320, elements: !740)
!740 = !{!741, !743, !744, !745}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !739, file: !734, line: 64, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !739, file: !734, line: 65, baseType: !742, size: 64, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !739, file: !734, line: 66, baseType: !5, size: 32, offset: 128)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !739, file: !734, line: 67, baseType: !746, size: 128, offset: 192)
!746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !747, size: 128, elements: !748)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !734, line: 29, baseType: !559)
!748 = !{!749}
!749 = !DISubrange(count: 2)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !733, file: !734, line: 77, baseType: !737, size: 64, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !733, file: !734, line: 78, baseType: !5, size: 32, offset: 128)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !733, file: !734, line: 79, baseType: !753, size: 64, offset: 192)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !734, line: 49, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !734, line: 45, size: 832, elements: !756)
!756 = !{!757, !758, !759}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !755, file: !734, line: 46, baseType: !742, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !755, file: !734, line: 47, baseType: !732, size: 64, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !755, file: !734, line: 48, baseType: !760, size: 704, offset: 128)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !761, line: 164, size: 704, elements: !762)
!761 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!762 = !{!763, !764, !774, !775, !776, !777, !778, !779, !783, !787, !788, !789, !790}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !760, file: !761, line: 166, baseType: !561, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !760, file: !761, line: 167, baseType: !765, size: 64, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !761, line: 157, size: 192, elements: !767)
!767 = !{!768, !769, !770}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !766, file: !761, line: 159, baseType: !465, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !766, file: !761, line: 160, baseType: !765, size: 64, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !766, file: !761, line: 161, baseType: !771, size: 32, offset: 128)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 32, elements: !772)
!772 = !{!773}
!773 = !DISubrange(count: 4)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !760, file: !761, line: 168, baseType: !465, size: 64, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !760, file: !761, line: 169, baseType: !465, size: 64, offset: 192)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !760, file: !761, line: 170, baseType: !465, size: 64, offset: 256)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !760, file: !761, line: 171, baseType: !561, size: 64, offset: 320)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !760, file: !761, line: 172, baseType: !463, size: 32, offset: 384)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !760, file: !761, line: 176, baseType: !780, size: 64, offset: 448)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!765, !467, !561}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !760, file: !761, line: 177, baseType: !784, size: 64, offset: 512)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DISubroutineType(types: !786)
!786 = !{null, !467, !765}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !760, file: !761, line: 178, baseType: !467, size: 64, offset: 576)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !760, file: !761, line: 179, baseType: !5, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !760, file: !761, line: 180, baseType: !5, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !760, file: !761, line: 184, baseType: !5, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !701, file: !683, line: 177, baseType: !505, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !701, file: !683, line: 178, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !341, line: 217, size: 832, elements: !795)
!795 = !{!796, !1041, !1042, !1043, !1099, !1103, !1104, !1105, !1123, !1124, !1125, !1126, !1127, !1128}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !794, file: !341, line: 219, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !341, line: 151, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !341, line: 151, size: 128, elements: !800)
!800 = !{!801}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !799, file: !341, line: 151, baseType: !802, size: 128)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !341, line: 150, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !341, line: 150, size: 128, elements: !804)
!804 = !{!805, !806, !807}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !803, file: !341, line: 150, baseType: !5, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !803, file: !341, line: 150, baseType: !5, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !803, file: !341, line: 150, baseType: !808, size: 64, offset: 64)
!808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !809, size: 64, elements: !604)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !506, line: 108, baseType: !810)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !341, line: 122, size: 512, elements: !812)
!812 = !{!813, !814, !815, !1033, !1034, !1035, !1036, !1037, !1038, !1039}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !811, file: !341, line: 124, baseType: !793, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !811, file: !341, line: 125, baseType: !793, size: 64, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !811, file: !341, line: 131, baseType: !816, size: 64, offset: 128)
!816 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !341, line: 128, size: 64, elements: !817)
!817 = !{!818, !1032}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !816, file: !341, line: 129, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !506, line: 66, baseType: !820)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !389, line: 143, size: 192, elements: !822)
!822 = !{!823, !1030, !1031}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !821, file: !389, line: 145, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !506, line: 69, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !389, line: 136, size: 192, elements: !827)
!827 = !{!828, !1028, !1029}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !826, file: !389, line: 137, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !506, line: 58, baseType: !830)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !389, line: 737, size: 768, elements: !832)
!832 = !{!833, !850, !883, !889, !894, !899, !906, !912, !918, !923, !937, !942, !948, !953, !963, !968, !986, !993, !1000, !1006, !1011, !1017, !1023}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !831, file: !389, line: 738, baseType: !834, size: 256)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !389, line: 271, size: 256, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !834, file: !389, line: 274, baseType: !5, size: 8, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !834, file: !389, line: 277, baseType: !5, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !834, file: !389, line: 281, baseType: !5, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !834, file: !389, line: 284, baseType: !5, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !834, file: !389, line: 291, baseType: !5, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !834, file: !389, line: 295, baseType: !5, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !834, file: !389, line: 298, baseType: !5, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !834, file: !389, line: 301, baseType: !5, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !834, file: !389, line: 307, baseType: !5, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !834, file: !389, line: 312, baseType: !5, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !834, file: !389, line: 316, baseType: !630, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !834, file: !389, line: 319, baseType: !5, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !834, file: !389, line: 323, baseType: !793, size: 64, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !834, file: !389, line: 327, baseType: !505, size: 64, offset: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !831, file: !389, line: 739, baseType: !851, size: 448)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !389, line: 350, size: 448, elements: !852)
!852 = !{!853, !881}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !851, file: !389, line: 353, baseType: !854, size: 384)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !389, line: 333, size: 384, elements: !855)
!855 = !{!856, !857, !864}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !854, file: !389, line: 336, baseType: !834, size: 256)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !854, file: !389, line: 343, baseType: !858, size: 64, offset: 256)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !454, line: 37, size: 128, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !859, file: !454, line: 39, baseType: !858, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !859, file: !454, line: 40, baseType: !863, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !854, file: !389, line: 344, baseType: !865, size: 64, offset: 320)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !454, line: 45, size: 320, elements: !867)
!867 = !{!868, !869}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !866, file: !454, line: 47, baseType: !865, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !866, file: !454, line: 48, baseType: !870, size: 256, offset: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !133, line: 1883, size: 256, elements: !871)
!871 = !{!872, !874, !875, !880}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !870, file: !133, line: 1884, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !870, file: !133, line: 1885, baseType: !873, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !870, file: !133, line: 1891, baseType: !876, size: 64, offset: 128)
!876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !870, file: !133, line: 1891, size: 64, elements: !877)
!877 = !{!878, !879}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !876, file: !133, line: 1891, baseType: !829, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !876, file: !133, line: 1891, baseType: !505, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !870, file: !133, line: 1892, baseType: !863, size: 64, offset: 192)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !851, file: !389, line: 359, baseType: !882, size: 64, offset: 384)
!882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 64, elements: !604)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !831, file: !389, line: 740, baseType: !884, size: 512)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !389, line: 365, size: 512, elements: !885)
!885 = !{!886, !887, !888}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !884, file: !389, line: 368, baseType: !854, size: 384)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !884, file: !389, line: 373, baseType: !505, size: 64, offset: 384)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !884, file: !389, line: 374, baseType: !505, size: 64, offset: 448)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !831, file: !389, line: 741, baseType: !890, size: 576)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !389, line: 380, size: 576, elements: !891)
!891 = !{!892, !893}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !890, file: !389, line: 383, baseType: !884, size: 512)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !890, file: !389, line: 389, baseType: !882, size: 64, offset: 512)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !831, file: !389, line: 742, baseType: !895, size: 320)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !389, line: 395, size: 320, elements: !896)
!896 = !{!897, !898}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !895, file: !389, line: 397, baseType: !834, size: 256)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !895, file: !389, line: 400, baseType: !819, size: 64, offset: 256)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !831, file: !389, line: 743, baseType: !900, size: 448)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !389, line: 406, size: 448, elements: !901)
!901 = !{!902, !903, !904, !905}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !900, file: !389, line: 408, baseType: !834, size: 256)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !900, file: !389, line: 412, baseType: !505, size: 64, offset: 256)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !900, file: !389, line: 420, baseType: !505, size: 64, offset: 320)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !900, file: !389, line: 423, baseType: !819, size: 64, offset: 384)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !831, file: !389, line: 744, baseType: !907, size: 384)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !389, line: 429, size: 384, elements: !908)
!908 = !{!909, !910, !911}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !907, file: !389, line: 431, baseType: !834, size: 256)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !907, file: !389, line: 434, baseType: !505, size: 64, offset: 256)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !907, file: !389, line: 437, baseType: !819, size: 64, offset: 320)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !831, file: !389, line: 745, baseType: !913, size: 384)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !389, line: 443, size: 384, elements: !914)
!914 = !{!915, !916, !917}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !913, file: !389, line: 445, baseType: !834, size: 256)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !913, file: !389, line: 449, baseType: !505, size: 64, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !913, file: !389, line: 453, baseType: !819, size: 64, offset: 320)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !831, file: !389, line: 746, baseType: !919, size: 320)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !389, line: 459, size: 320, elements: !920)
!920 = !{!921, !922}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !919, file: !389, line: 461, baseType: !834, size: 256)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !919, file: !389, line: 464, baseType: !505, size: 64, offset: 256)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !831, file: !389, line: 747, baseType: !924, size: 768)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !389, line: 469, size: 768, elements: !925)
!925 = !{!926, !927, !928, !929, !930}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !924, file: !389, line: 471, baseType: !834, size: 256)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !924, file: !389, line: 474, baseType: !5, size: 32, offset: 256)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !924, file: !389, line: 475, baseType: !5, size: 32, offset: 288)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !924, file: !389, line: 478, baseType: !505, size: 64, offset: 320)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !924, file: !389, line: 481, baseType: !931, size: 384, offset: 384)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 384, elements: !604)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !133, line: 1917, size: 384, elements: !933)
!933 = !{!934, !935, !936}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !932, file: !133, line: 1920, baseType: !870, size: 256)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !932, file: !133, line: 1921, baseType: !505, size: 64, offset: 256)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !932, file: !133, line: 1922, baseType: !630, size: 32, offset: 320)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !831, file: !389, line: 748, baseType: !938, size: 320)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !389, line: 487, size: 320, elements: !939)
!939 = !{!940, !941}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !938, file: !389, line: 490, baseType: !834, size: 256)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !938, file: !389, line: 494, baseType: !463, size: 32, offset: 256)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !831, file: !389, line: 749, baseType: !943, size: 384)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !389, line: 500, size: 384, elements: !944)
!944 = !{!945, !946, !947}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !943, file: !389, line: 502, baseType: !834, size: 256)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !943, file: !389, line: 506, baseType: !819, size: 64, offset: 256)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !943, file: !389, line: 510, baseType: !819, size: 64, offset: 320)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !831, file: !389, line: 750, baseType: !949, size: 320)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !389, line: 529, size: 320, elements: !950)
!950 = !{!951, !952}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !949, file: !389, line: 531, baseType: !834, size: 256)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !949, file: !389, line: 540, baseType: !819, size: 64, offset: 256)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !831, file: !389, line: 751, baseType: !954, size: 704)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !389, line: 546, size: 704, elements: !955)
!955 = !{!956, !957, !958, !959, !960, !961, !962}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !954, file: !389, line: 549, baseType: !884, size: 512)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !954, file: !389, line: 553, baseType: !468, size: 64, offset: 512)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !954, file: !389, line: 557, baseType: !462, size: 8, offset: 576)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !954, file: !389, line: 558, baseType: !462, size: 8, offset: 584)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !954, file: !389, line: 559, baseType: !462, size: 8, offset: 592)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !954, file: !389, line: 560, baseType: !462, size: 8, offset: 600)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !954, file: !389, line: 566, baseType: !882, size: 64, offset: 640)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !831, file: !389, line: 752, baseType: !964, size: 384)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !389, line: 571, size: 384, elements: !965)
!965 = !{!966, !967}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !964, file: !389, line: 573, baseType: !895, size: 320)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !964, file: !389, line: 577, baseType: !505, size: 64, offset: 320)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !831, file: !389, line: 753, baseType: !969, size: 576)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !389, line: 600, size: 576, elements: !970)
!970 = !{!971, !972, !973, !976, !985}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !969, file: !389, line: 602, baseType: !895, size: 320)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !969, file: !389, line: 605, baseType: !505, size: 64, offset: 320)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !969, file: !389, line: 609, baseType: !974, size: 64, offset: 384)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !975, line: 46, baseType: !559)
!975 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!976 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !969, file: !389, line: 612, baseType: !977, size: 64, offset: 448)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !389, line: 581, size: 320, elements: !979)
!979 = !{!980, !981, !982, !983, !984}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !978, file: !389, line: 583, baseType: !132, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !978, file: !389, line: 586, baseType: !505, size: 64, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !978, file: !389, line: 589, baseType: !505, size: 64, offset: 128)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !978, file: !389, line: 592, baseType: !505, size: 64, offset: 192)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !978, file: !389, line: 595, baseType: !505, size: 64, offset: 256)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !969, file: !389, line: 616, baseType: !819, size: 64, offset: 512)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !831, file: !389, line: 754, baseType: !987, size: 512)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !389, line: 622, size: 512, elements: !988)
!988 = !{!989, !990, !991, !992}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !987, file: !389, line: 624, baseType: !895, size: 320)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !987, file: !389, line: 628, baseType: !505, size: 64, offset: 320)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !987, file: !389, line: 632, baseType: !505, size: 64, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !987, file: !389, line: 636, baseType: !505, size: 64, offset: 448)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !831, file: !389, line: 755, baseType: !994, size: 704)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !389, line: 642, size: 704, elements: !995)
!995 = !{!996, !997, !998, !999}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !994, file: !389, line: 644, baseType: !987, size: 512)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !994, file: !389, line: 648, baseType: !505, size: 64, offset: 512)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !994, file: !389, line: 652, baseType: !505, size: 64, offset: 576)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !994, file: !389, line: 653, baseType: !505, size: 64, offset: 640)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !831, file: !389, line: 756, baseType: !1001, size: 448)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !389, line: 663, size: 448, elements: !1002)
!1002 = !{!1003, !1004, !1005}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1001, file: !389, line: 665, baseType: !895, size: 320)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1001, file: !389, line: 668, baseType: !505, size: 64, offset: 320)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1001, file: !389, line: 673, baseType: !505, size: 64, offset: 384)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !831, file: !389, line: 757, baseType: !1007, size: 384)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !389, line: 694, size: 384, elements: !1008)
!1008 = !{!1009, !1010}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1007, file: !389, line: 696, baseType: !895, size: 320)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1007, file: !389, line: 699, baseType: !505, size: 64, offset: 320)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !831, file: !389, line: 758, baseType: !1012, size: 384)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !389, line: 681, size: 384, elements: !1013)
!1013 = !{!1014, !1015, !1016}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1012, file: !389, line: 683, baseType: !834, size: 256)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1012, file: !389, line: 686, baseType: !505, size: 64, offset: 256)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1012, file: !389, line: 689, baseType: !505, size: 64, offset: 320)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !831, file: !389, line: 759, baseType: !1018, size: 384)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !389, line: 707, size: 384, elements: !1019)
!1019 = !{!1020, !1021, !1022}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1018, file: !389, line: 709, baseType: !834, size: 256)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1018, file: !389, line: 712, baseType: !505, size: 64, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1018, file: !389, line: 712, baseType: !505, size: 64, offset: 320)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !831, file: !389, line: 760, baseType: !1024, size: 320)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !389, line: 718, size: 320, elements: !1025)
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1024, file: !389, line: 720, baseType: !834, size: 256)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1024, file: !389, line: 723, baseType: !505, size: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !826, file: !389, line: 138, baseType: !825, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !826, file: !389, line: 139, baseType: !825, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !821, file: !389, line: 146, baseType: !824, size: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !821, file: !389, line: 152, baseType: !819, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !816, file: !341, line: 130, baseType: !680, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !811, file: !341, line: 134, baseType: !467, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !811, file: !341, line: 137, baseType: !505, size: 64, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !811, file: !341, line: 138, baseType: !630, size: 32, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !811, file: !341, line: 142, baseType: !5, size: 32, offset: 352)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !811, file: !341, line: 144, baseType: !463, size: 32, offset: 384)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !811, file: !341, line: 145, baseType: !463, size: 32, offset: 416)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !811, file: !341, line: 146, baseType: !1040, size: 64, offset: 448)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !341, line: 119, baseType: !561)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !794, file: !341, line: 220, baseType: !797, size: 64, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !794, file: !341, line: 223, baseType: !467, size: 64, offset: 128)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !794, file: !341, line: 226, baseType: !1044, size: 64, offset: 192)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !328, line: 100, size: 1216, elements: !1046)
!1046 = !{!1047, !1048, !1049, !1050, !1051, !1056, !1057, !1058, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1089, !1097, !1098}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1045, file: !328, line: 102, baseType: !463, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1045, file: !328, line: 105, baseType: !5, size: 32, offset: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1045, file: !328, line: 108, baseType: !793, size: 64, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1045, file: !328, line: 111, baseType: !793, size: 64, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1045, file: !328, line: 114, baseType: !1052, size: 64, offset: 192)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !328, line: 41, size: 64, elements: !1053)
!1053 = !{!1054, !1055}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1052, file: !328, line: 42, baseType: !327, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1052, file: !328, line: 43, baseType: !5, size: 32, offset: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1045, file: !328, line: 117, baseType: !5, size: 32, offset: 256)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1045, file: !328, line: 120, baseType: !5, size: 32, offset: 288)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1045, file: !328, line: 123, baseType: !1059, size: 64, offset: 320)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !328, line: 87, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !328, line: 87, size: 128, elements: !1062)
!1062 = !{!1063}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1061, file: !328, line: 87, baseType: !1064, size: 128)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !328, line: 85, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !328, line: 85, size: 128, elements: !1066)
!1066 = !{!1067, !1068, !1069}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1065, file: !328, line: 85, baseType: !5, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1065, file: !328, line: 85, baseType: !5, size: 32, offset: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1065, file: !328, line: 85, baseType: !1070, size: 64, offset: 64)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 64, elements: !604)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !328, line: 84, baseType: !1044)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1045, file: !328, line: 126, baseType: !1044, size: 64, offset: 384)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1045, file: !328, line: 129, baseType: !1044, size: 64, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1045, file: !328, line: 132, baseType: !467, size: 64, offset: 512)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1045, file: !328, line: 139, baseType: !505, size: 64, offset: 576)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1045, file: !328, line: 143, baseType: !554, size: 128, offset: 640)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1045, file: !328, line: 146, baseType: !554, size: 128, offset: 768)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1045, file: !328, line: 148, baseType: !462, size: 8, offset: 896)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1045, file: !328, line: 149, baseType: !462, size: 8, offset: 904)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1045, file: !328, line: 153, baseType: !336, size: 32, offset: 928)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1045, file: !328, line: 156, baseType: !1082, size: 64, offset: 960)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !328, line: 48, size: 320, elements: !1084)
!1084 = !{!1085, !1086, !1087, !1088}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1083, file: !328, line: 50, baseType: !829, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1083, file: !328, line: 59, baseType: !554, size: 128, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1083, file: !328, line: 64, baseType: !462, size: 8, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1083, file: !328, line: 67, baseType: !1082, size: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1045, file: !328, line: 159, baseType: !1090, size: 64, offset: 1024)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !328, line: 72, size: 256, elements: !1092)
!1092 = !{!1093, !1094, !1095, !1096}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1091, file: !328, line: 74, baseType: !810, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1091, file: !328, line: 77, baseType: !1090, size: 64, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1091, file: !328, line: 78, baseType: !1090, size: 64, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1091, file: !328, line: 81, baseType: !1090, size: 64, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1045, file: !328, line: 162, baseType: !462, size: 8, offset: 1088)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1045, file: !328, line: 166, baseType: !505, size: 64, offset: 1152)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !794, file: !341, line: 229, baseType: !1100, size: 128, offset: 256)
!1100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1101, size: 128, elements: !748)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !341, line: 229, flags: DIFlagFwdDecl)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !794, file: !341, line: 232, baseType: !793, size: 64, offset: 384)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !794, file: !341, line: 233, baseType: !793, size: 64, offset: 448)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !794, file: !341, line: 238, baseType: !1106, size: 64, offset: 512)
!1106 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !341, line: 235, size: 64, elements: !1107)
!1107 = !{!1108, !1114}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1106, file: !341, line: 236, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !341, line: 273, size: 128, elements: !1111)
!1111 = !{!1112, !1113}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1110, file: !341, line: 275, baseType: !819, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1110, file: !341, line: 278, baseType: !819, size: 64, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1106, file: !341, line: 237, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !341, line: 259, size: 320, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1116, file: !341, line: 261, baseType: !680, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1116, file: !341, line: 262, baseType: !680, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1116, file: !341, line: 266, baseType: !680, size: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1116, file: !341, line: 267, baseType: !680, size: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1116, file: !341, line: 270, baseType: !463, size: 32, offset: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !794, file: !341, line: 241, baseType: !1040, size: 64, offset: 576)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !794, file: !341, line: 244, baseType: !463, size: 32, offset: 640)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !794, file: !341, line: 247, baseType: !463, size: 32, offset: 672)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !794, file: !341, line: 250, baseType: !463, size: 32, offset: 704)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !794, file: !341, line: 253, baseType: !463, size: 32, offset: 736)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !794, file: !341, line: 256, baseType: !463, size: 32, offset: 768)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !701, file: !683, line: 179, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !683, line: 150, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !683, line: 142, size: 320, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1140, !1141}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1132, file: !683, line: 144, baseType: !505, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1132, file: !683, line: 145, baseType: !680, size: 64, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1132, file: !683, line: 146, baseType: !680, size: 64, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1132, file: !683, line: 147, baseType: !1138, size: 32, offset: 192)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1139, line: 31, baseType: !463)
!1139 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1132, file: !683, line: 148, baseType: !5, size: 32, offset: 224)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1132, file: !683, line: 149, baseType: !462, size: 8, offset: 256)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !701, file: !683, line: 180, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !683, line: 162, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !683, line: 159, size: 128, elements: !1146)
!1146 = !{!1147, !1148}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1145, file: !683, line: 160, baseType: !505, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1145, file: !683, line: 161, baseType: !561, size: 64, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !701, file: !683, line: 181, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !683, line: 181, flags: DIFlagFwdDecl)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !696, file: !683, line: 317, baseType: !1153, size: 64)
!1153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 64, elements: !604)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !696, file: !683, line: 318, baseType: !1155, size: 320)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !683, line: 188, size: 320, elements: !1156)
!1156 = !{!1157, !1159, !1182}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1155, file: !683, line: 190, baseType: !1158, size: 192)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !700, size: 192, elements: !579)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1155, file: !683, line: 193, baseType: !1160, size: 64, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !683, line: 206, size: 320, elements: !1162)
!1162 = !{!1163, !1167, !1168, !1169, !1181}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1161, file: !683, line: 208, baseType: !1164, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !506, line: 62, baseType: !1166)
!1166 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !506, line: 61, flags: DIFlagFwdDecl)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1161, file: !683, line: 211, baseType: !5, size: 32, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1161, file: !683, line: 214, baseType: !561, size: 64, offset: 128)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1161, file: !683, line: 224, baseType: !1170, size: 64, offset: 192)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !683, line: 202, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !683, line: 202, size: 128, elements: !1173)
!1173 = !{!1174}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1172, file: !683, line: 202, baseType: !1175, size: 128)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !683, line: 200, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !683, line: 200, size: 128, elements: !1177)
!1177 = !{!1178, !1179, !1180}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1176, file: !683, line: 200, baseType: !5, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1176, file: !683, line: 200, baseType: !5, size: 32, offset: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1176, file: !683, line: 200, baseType: !714, size: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1161, file: !683, line: 234, baseType: !1170, size: 64, offset: 256)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1155, file: !683, line: 197, baseType: !561, size: 64, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !696, file: !683, line: 319, baseType: !568, size: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !696, file: !683, line: 320, baseType: !587, size: 192)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !508, file: !133, line: 3384, baseType: !1186, size: 1472)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !133, line: 3114, size: 1472, elements: !1187)
!1187 = !{!1188, !1209, !1210, !1211, !1212}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1186, file: !133, line: 3115, baseType: !1189, size: 1216)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !133, line: 2984, size: 1216, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1189, file: !133, line: 2985, baseType: !676, size: 960)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1189, file: !133, line: 2986, baseType: !505, size: 64, offset: 960)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1189, file: !133, line: 2987, baseType: !505, size: 64, offset: 1024)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1189, file: !133, line: 2988, baseType: !505, size: 64, offset: 1088)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1189, file: !133, line: 2991, baseType: !5, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1189, file: !133, line: 2992, baseType: !5, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1189, file: !133, line: 2993, baseType: !5, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1189, file: !133, line: 2994, baseType: !5, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1189, file: !133, line: 2995, baseType: !5, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1189, file: !133, line: 2996, baseType: !5, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1189, file: !133, line: 2998, baseType: !5, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1189, file: !133, line: 3000, baseType: !5, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1189, file: !133, line: 3002, baseType: !5, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1189, file: !133, line: 3003, baseType: !5, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1189, file: !133, line: 3004, baseType: !5, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1189, file: !133, line: 3005, baseType: !5, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1189, file: !133, line: 3007, baseType: !5, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1189, file: !133, line: 3010, baseType: !5, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1186, file: !133, line: 3117, baseType: !505, size: 64, offset: 1216)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1186, file: !133, line: 3119, baseType: !505, size: 64, offset: 1280)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1186, file: !133, line: 3121, baseType: !505, size: 64, offset: 1344)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1186, file: !133, line: 3123, baseType: !505, size: 64, offset: 1408)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !508, file: !133, line: 3385, baseType: !1214, size: 1088)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !133, line: 2874, size: 1088, elements: !1215)
!1215 = !{!1216, !1217, !1218}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1214, file: !133, line: 2875, baseType: !676, size: 960)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1214, file: !133, line: 2876, baseType: !680, size: 64, offset: 960)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1214, file: !133, line: 2877, baseType: !1219, size: 64, offset: 1024)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1221, line: 172, size: 128, elements: !1222)
!1221 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1222 = !{!1223, !1224, !1225, !1226, !1227, !1228, !1229}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1220, file: !1221, line: 174, baseType: !5, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1220, file: !1221, line: 178, baseType: !5, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1220, file: !1221, line: 183, baseType: !5, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1220, file: !1221, line: 187, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1220, file: !1221, line: 192, baseType: !5, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1220, file: !1221, line: 195, baseType: !5, size: 32, offset: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1220, file: !1221, line: 199, baseType: !505, size: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !508, file: !133, line: 3386, baseType: !1189, size: 1216)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !508, file: !133, line: 3387, baseType: !1232, size: 1280)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !133, line: 3093, size: 1280, elements: !1233)
!1233 = !{!1234, !1235}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1232, file: !133, line: 3094, baseType: !1189, size: 1216)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1232, file: !133, line: 3095, baseType: !1219, size: 64, offset: 1216)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !508, file: !133, line: 3388, baseType: !1237, size: 1216)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !133, line: 2824, size: 1216, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1237, file: !133, line: 2825, baseType: !638, size: 896)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1237, file: !133, line: 2827, baseType: !505, size: 64, offset: 896)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1237, file: !133, line: 2828, baseType: !505, size: 64, offset: 960)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1237, file: !133, line: 2829, baseType: !505, size: 64, offset: 1024)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1237, file: !133, line: 2830, baseType: !505, size: 64, offset: 1088)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1237, file: !133, line: 2831, baseType: !505, size: 64, offset: 1152)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !508, file: !133, line: 3389, baseType: !1246, size: 1024)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !133, line: 2850, size: 1024, elements: !1247)
!1247 = !{!1248, !1249, !1250}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1246, file: !133, line: 2851, baseType: !676, size: 960)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1246, file: !133, line: 2852, baseType: !463, size: 32, offset: 960)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1246, file: !133, line: 2853, baseType: !463, size: 32, offset: 992)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !508, file: !133, line: 3390, baseType: !1252, size: 1024)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !133, line: 2857, size: 1024, elements: !1253)
!1253 = !{!1254, !1255}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1252, file: !133, line: 2858, baseType: !676, size: 960)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1252, file: !133, line: 2859, baseType: !1219, size: 64, offset: 960)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !508, file: !133, line: 3391, baseType: !1257, size: 960)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !133, line: 2862, size: 960, elements: !1258)
!1258 = !{!1259}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1257, file: !133, line: 2863, baseType: !676, size: 960)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !508, file: !133, line: 3392, baseType: !1261, size: 1472)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !133, line: 3304, size: 1472, elements: !1262)
!1262 = !{!1263}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1261, file: !133, line: 3305, baseType: !1186, size: 1472)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !508, file: !133, line: 3393, baseType: !1265, size: 1792)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !133, line: 3248, size: 1792, elements: !1266)
!1266 = !{!1267, !1268, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1265, file: !133, line: 3249, baseType: !1186, size: 1472)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1265, file: !133, line: 3251, baseType: !1269, size: 64, offset: 1472)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1271, line: 463, size: 1152, elements: !1272)
!1271 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1272 = !{!1273, !1276, !1307, !1308, !1423, !1431, !1432, !1433, !1434, !1435, !1436, !1460, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1270, file: !1271, line: 464, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1271, line: 464, flags: DIFlagFwdDecl)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1270, file: !1271, line: 467, baseType: !1277, size: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !341, line: 374, size: 640, elements: !1279)
!1279 = !{!1280, !1282, !1283, !1296, !1297, !1298, !1299, !1300, !1301, !1303, !1305, !1306}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1278, file: !341, line: 377, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !506, line: 111, baseType: !793)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1278, file: !341, line: 378, baseType: !1281, size: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1278, file: !341, line: 381, baseType: !1284, size: 64, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !341, line: 282, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !341, line: 282, size: 128, elements: !1287)
!1287 = !{!1288}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1286, file: !341, line: 282, baseType: !1289, size: 128)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !341, line: 281, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !341, line: 281, size: 128, elements: !1291)
!1291 = !{!1292, !1293, !1294}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1290, file: !341, line: 281, baseType: !5, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1290, file: !341, line: 281, baseType: !5, size: 32, offset: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1290, file: !341, line: 281, baseType: !1295, size: 64, offset: 64)
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1281, size: 64, elements: !604)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1278, file: !341, line: 384, baseType: !463, size: 32, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1278, file: !341, line: 387, baseType: !463, size: 32, offset: 224)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1278, file: !341, line: 390, baseType: !463, size: 32, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1278, file: !341, line: 394, baseType: !1284, size: 64, offset: 320)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1278, file: !341, line: 396, baseType: !340, size: 32, offset: 384)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1278, file: !341, line: 399, baseType: !1302, size: 64, offset: 416)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 64, elements: !748)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1278, file: !341, line: 402, baseType: !1304, size: 64, offset: 480)
!1304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !748)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1278, file: !341, line: 406, baseType: !463, size: 32, offset: 544)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1278, file: !341, line: 409, baseType: !463, size: 32, offset: 576)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1270, file: !1271, line: 470, baseType: !820, size: 64, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1270, file: !1271, line: 473, baseType: !1309, size: 64, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1221, line: 39, size: 1152, elements: !1311)
!1311 = !{!1312, !1362, !1375, !1387, !1388, !1400, !1401, !1405, !1406, !1407, !1408, !1409}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1310, file: !1221, line: 41, baseType: !1313, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1314, line: 144, baseType: !1315)
!1314 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1314, line: 100, size: 896, elements: !1317)
!1317 = !{!1318, !1326, !1331, !1336, !1338, !1339, !1340, !1341, !1342, !1343, !1348, !1350, !1351, !1356, !1361}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1316, file: !1314, line: 102, baseType: !1319, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1314, line: 52, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!1323, !1324}
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1314, line: 47, baseType: !5)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1316, file: !1314, line: 105, baseType: !1327, size: 64, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1314, line: 59, baseType: !1328)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!463, !1324, !1324}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1316, file: !1314, line: 108, baseType: !1332, size: 64, offset: 128)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1314, line: 63, baseType: !1333)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{null, !467}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1316, file: !1314, line: 111, baseType: !1337, size: 64, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1316, file: !1314, line: 114, baseType: !974, size: 64, offset: 256)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1316, file: !1314, line: 117, baseType: !974, size: 64, offset: 320)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1316, file: !1314, line: 120, baseType: !974, size: 64, offset: 384)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1316, file: !1314, line: 124, baseType: !5, size: 32, offset: 448)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1316, file: !1314, line: 128, baseType: !5, size: 32, offset: 480)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1316, file: !1314, line: 131, baseType: !1344, size: 64, offset: 512)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1314, line: 75, baseType: !1345)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!467, !974, !974}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1316, file: !1314, line: 132, baseType: !1349, size: 64, offset: 576)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1314, line: 78, baseType: !1333)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1316, file: !1314, line: 135, baseType: !467, size: 64, offset: 640)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1316, file: !1314, line: 136, baseType: !1352, size: 64, offset: 704)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1314, line: 82, baseType: !1353)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!467, !467, !974, !974}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1316, file: !1314, line: 137, baseType: !1357, size: 64, offset: 768)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1314, line: 83, baseType: !1358)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{null, !467, !467}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1316, file: !1314, line: 141, baseType: !5, size: 32, offset: 832)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1310, file: !1221, line: 48, baseType: !1363, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !389, line: 35, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !389, line: 35, size: 128, elements: !1366)
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1365, file: !389, line: 35, baseType: !1368, size: 128)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !389, line: 33, baseType: !1369)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !389, line: 33, size: 128, elements: !1370)
!1370 = !{!1371, !1372, !1373}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1369, file: !389, line: 33, baseType: !5, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1369, file: !389, line: 33, baseType: !5, size: 32, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1369, file: !389, line: 33, baseType: !1374, size: 64, offset: 64)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 64, elements: !604)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1310, file: !1221, line: 51, baseType: !1376, size: 64, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !133, line: 183, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !133, line: 183, size: 128, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1378, file: !133, line: 183, baseType: !1381, size: 128)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !133, line: 182, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !133, line: 182, size: 128, elements: !1383)
!1383 = !{!1384, !1385, !1386}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1382, file: !133, line: 182, baseType: !5, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1382, file: !133, line: 182, baseType: !5, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1382, file: !133, line: 182, baseType: !882, size: 64, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1310, file: !1221, line: 54, baseType: !505, size: 64, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1310, file: !1221, line: 57, baseType: !1389, size: 128, offset: 256)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1390, line: 31, size: 128, elements: !1391)
!1390 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1391 = !{!1392, !1393, !1394, !1395, !1396, !1397, !1398}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1389, file: !1390, line: 35, baseType: !5, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1389, file: !1390, line: 39, baseType: !5, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1389, file: !1390, line: 42, baseType: !5, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1389, file: !1390, line: 46, baseType: !5, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1389, file: !1390, line: 50, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1389, file: !1390, line: 53, baseType: !5, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1389, file: !1390, line: 56, baseType: !1399, size: 64, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !506, line: 47, baseType: !732)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1310, file: !1221, line: 60, baseType: !1389, size: 128, offset: 384)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1310, file: !1221, line: 64, baseType: !1402, size: 64, offset: 512)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1404, line: 33, flags: DIFlagFwdDecl)
!1404 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1310, file: !1221, line: 67, baseType: !505, size: 64, offset: 576)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1310, file: !1221, line: 73, baseType: !1313, size: 64, offset: 640)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1310, file: !1221, line: 77, baseType: !1399, size: 64, offset: 704)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1310, file: !1221, line: 80, baseType: !5, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1310, file: !1221, line: 82, baseType: !1410, size: 320, offset: 832)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !454, line: 62, size: 320, elements: !1411)
!1411 = !{!1412, !1418, !1419, !1420, !1421, !1422}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1410, file: !454, line: 63, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !454, line: 56, size: 128, elements: !1415)
!1415 = !{!1416, !1417}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1414, file: !454, line: 57, baseType: !1413, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1414, file: !454, line: 58, baseType: !603, size: 8, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1410, file: !454, line: 64, baseType: !5, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1410, file: !454, line: 66, baseType: !5, size: 32, offset: 96)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1410, file: !454, line: 68, baseType: !462, size: 8, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1410, file: !454, line: 70, baseType: !858, size: 64, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1410, file: !454, line: 71, baseType: !865, size: 64, offset: 256)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1270, file: !1271, line: 476, baseType: !1424, size: 64, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !328, line: 187, size: 256, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1425, file: !328, line: 189, baseType: !463, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1425, file: !328, line: 192, baseType: !1059, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1425, file: !328, line: 197, baseType: !1313, size: 64, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1425, file: !328, line: 200, baseType: !1044, size: 64, offset: 192)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1270, file: !1271, line: 479, baseType: !1313, size: 64, offset: 320)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1270, file: !1271, line: 484, baseType: !505, size: 64, offset: 384)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1270, file: !1271, line: 488, baseType: !505, size: 64, offset: 448)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1270, file: !1271, line: 493, baseType: !505, size: 64, offset: 512)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1270, file: !1271, line: 496, baseType: !505, size: 64, offset: 576)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1270, file: !1271, line: 501, baseType: !1437, size: 64, offset: 640)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !352, line: 2355, size: 576, elements: !1439)
!1439 = !{!1440, !1443, !1444, !1445, !1446, !1448, !1449, !1454, !1455, !1456, !1457, !1458, !1459}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1438, file: !352, line: 2356, baseType: !1441, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !352, line: 2356, flags: DIFlagFwdDecl)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1438, file: !352, line: 2357, baseType: !468, size: 64, offset: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1438, file: !352, line: 2358, baseType: !463, size: 32, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1438, file: !352, line: 2359, baseType: !463, size: 32, offset: 160)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1438, file: !352, line: 2360, baseType: !1447, size: 128, offset: 192)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 128, elements: !772)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1438, file: !352, line: 2364, baseType: !463, size: 32, offset: 320)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1438, file: !352, line: 2367, baseType: !1450, size: 128, offset: 384)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !352, line: 2349, size: 128, elements: !1451)
!1451 = !{!1452, !1453}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1450, file: !352, line: 2351, baseType: !680, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1450, file: !352, line: 2352, baseType: !561, size: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1438, file: !352, line: 2371, baseType: !351, size: 32, offset: 512)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1438, file: !352, line: 2374, baseType: !5, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1438, file: !352, line: 2377, baseType: !5, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1438, file: !352, line: 2381, baseType: !5, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1438, file: !352, line: 2392, baseType: !5, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1438, file: !352, line: 2396, baseType: !5, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1270, file: !1271, line: 504, baseType: !1461, size: 64, offset: 704)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1271, line: 504, flags: DIFlagFwdDecl)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1270, file: !1271, line: 507, baseType: !1313, size: 64, offset: 768)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1270, file: !1271, line: 510, baseType: !463, size: 32, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1270, file: !1271, line: 513, baseType: !463, size: 32, offset: 864)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1270, file: !1271, line: 516, baseType: !630, size: 32, offset: 896)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1270, file: !1271, line: 519, baseType: !630, size: 32, offset: 928)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1270, file: !1271, line: 522, baseType: !5, size: 32, offset: 960)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1270, file: !1271, line: 523, baseType: !5, size: 32, offset: 992)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1270, file: !1271, line: 528, baseType: !468, size: 64, offset: 1024)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1270, file: !1271, line: 535, baseType: !5, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1270, file: !1271, line: 539, baseType: !5, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1270, file: !1271, line: 543, baseType: !5, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1270, file: !1271, line: 546, baseType: !5, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1270, file: !1271, line: 550, baseType: !5, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1270, file: !1271, line: 554, baseType: !5, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1270, file: !1271, line: 559, baseType: !5, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1270, file: !1271, line: 562, baseType: !5, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1270, file: !1271, line: 571, baseType: !5, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1270, file: !1271, line: 573, baseType: !5, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1270, file: !1271, line: 574, baseType: !5, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1270, file: !1271, line: 581, baseType: !5, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1270, file: !1271, line: 585, baseType: !5, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1270, file: !1271, line: 588, baseType: !5, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1270, file: !1271, line: 592, baseType: !5, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1270, file: !1271, line: 598, baseType: !5, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1265, file: !133, line: 3254, baseType: !505, size: 64, offset: 1536)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1265, file: !133, line: 3257, baseType: !505, size: 64, offset: 1600)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1265, file: !133, line: 3258, baseType: !505, size: 64, offset: 1664)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1265, file: !133, line: 3264, baseType: !5, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1265, file: !133, line: 3265, baseType: !5, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1265, file: !133, line: 3267, baseType: !5, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1265, file: !133, line: 3268, baseType: !5, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1265, file: !133, line: 3269, baseType: !5, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1265, file: !133, line: 3271, baseType: !5, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1265, file: !133, line: 3272, baseType: !5, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1265, file: !133, line: 3273, baseType: !5, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1265, file: !133, line: 3274, baseType: !5, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1265, file: !133, line: 3275, baseType: !5, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1265, file: !133, line: 3276, baseType: !5, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1265, file: !133, line: 3277, baseType: !5, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1265, file: !133, line: 3279, baseType: !5, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1265, file: !133, line: 3280, baseType: !5, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1265, file: !133, line: 3281, baseType: !5, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1265, file: !133, line: 3282, baseType: !5, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1265, file: !133, line: 3283, baseType: !5, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1265, file: !133, line: 3284, baseType: !5, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !508, file: !133, line: 3394, baseType: !1509, size: 1344)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !133, line: 2279, size: 1344, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1509, file: !133, line: 2280, baseType: !544, size: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1509, file: !133, line: 2281, baseType: !505, size: 64, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1509, file: !133, line: 2282, baseType: !505, size: 64, offset: 256)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1509, file: !133, line: 2283, baseType: !505, size: 64, offset: 320)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1509, file: !133, line: 2284, baseType: !505, size: 64, offset: 384)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1509, file: !133, line: 2285, baseType: !5, size: 32, offset: 448)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1509, file: !133, line: 2287, baseType: !5, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1509, file: !133, line: 2288, baseType: !5, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1509, file: !133, line: 2289, baseType: !5, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1509, file: !133, line: 2290, baseType: !5, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1509, file: !133, line: 2291, baseType: !5, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1509, file: !133, line: 2292, baseType: !5, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1509, file: !133, line: 2294, baseType: !5, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1509, file: !133, line: 2296, baseType: !5, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1509, file: !133, line: 2297, baseType: !5, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1509, file: !133, line: 2298, baseType: !5, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1509, file: !133, line: 2299, baseType: !5, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1509, file: !133, line: 2300, baseType: !5, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1509, file: !133, line: 2301, baseType: !5, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1509, file: !133, line: 2302, baseType: !5, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1509, file: !133, line: 2303, baseType: !5, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1509, file: !133, line: 2305, baseType: !5, size: 32, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1509, file: !133, line: 2306, baseType: !1138, size: 32, offset: 544)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1509, file: !133, line: 2307, baseType: !505, size: 64, offset: 576)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1509, file: !133, line: 2308, baseType: !505, size: 64, offset: 640)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1509, file: !133, line: 2314, baseType: !1537, size: 64, offset: 704)
!1537 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !133, line: 2309, size: 64, elements: !1538)
!1538 = !{!1539, !1540, !1541}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1537, file: !133, line: 2310, baseType: !463, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1537, file: !133, line: 2311, baseType: !468, size: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1537, file: !133, line: 2312, baseType: !1542, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !133, line: 2277, flags: DIFlagFwdDecl)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1509, file: !133, line: 2315, baseType: !505, size: 64, offset: 768)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1509, file: !133, line: 2316, baseType: !505, size: 64, offset: 832)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1509, file: !133, line: 2317, baseType: !505, size: 64, offset: 896)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1509, file: !133, line: 2318, baseType: !505, size: 64, offset: 960)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1509, file: !133, line: 2319, baseType: !505, size: 64, offset: 1024)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1509, file: !133, line: 2320, baseType: !505, size: 64, offset: 1088)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1509, file: !133, line: 2321, baseType: !505, size: 64, offset: 1152)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1509, file: !133, line: 2322, baseType: !505, size: 64, offset: 1216)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1509, file: !133, line: 2324, baseType: !1553, size: 64, offset: 1280)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !133, line: 2324, flags: DIFlagFwdDecl)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !508, file: !133, line: 3395, baseType: !1556, size: 320)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !133, line: 1469, size: 320, elements: !1557)
!1557 = !{!1558, !1559, !1560}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1556, file: !133, line: 1470, baseType: !544, size: 192)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1556, file: !133, line: 1471, baseType: !505, size: 64, offset: 192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1556, file: !133, line: 1472, baseType: !505, size: 64, offset: 256)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !508, file: !133, line: 3396, baseType: !1562, size: 320)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !133, line: 1482, size: 320, elements: !1563)
!1563 = !{!1564, !1565, !1566}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1562, file: !133, line: 1483, baseType: !544, size: 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1562, file: !133, line: 1484, baseType: !463, size: 32, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1562, file: !133, line: 1485, baseType: !882, size: 64, offset: 256)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !508, file: !133, line: 3397, baseType: !1568, size: 384)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !133, line: 1829, size: 384, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1568, file: !133, line: 1830, baseType: !544, size: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1568, file: !133, line: 1831, baseType: !630, size: 32, offset: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1568, file: !133, line: 1832, baseType: !505, size: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1568, file: !133, line: 1835, baseType: !882, size: 64, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !508, file: !133, line: 3398, baseType: !1575, size: 704)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !133, line: 1898, size: 704, elements: !1576)
!1576 = !{!1577, !1578, !1579, !1580, !1581, !1586}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1575, file: !133, line: 1899, baseType: !544, size: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1575, file: !133, line: 1902, baseType: !505, size: 64, offset: 192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1575, file: !133, line: 1905, baseType: !829, size: 64, offset: 256)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1575, file: !133, line: 1908, baseType: !5, size: 32, offset: 320)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1575, file: !133, line: 1911, baseType: !1582, size: 64, offset: 384)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1221, line: 117, size: 128, elements: !1584)
!1584 = !{!1585}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1583, file: !1221, line: 120, baseType: !1389, size: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1575, file: !133, line: 1914, baseType: !870, size: 256, offset: 448)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !508, file: !133, line: 3399, baseType: !1588, size: 704)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !133, line: 2008, size: 704, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1588, file: !133, line: 2009, baseType: !544, size: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1588, file: !133, line: 2011, baseType: !5, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1588, file: !133, line: 2012, baseType: !5, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1588, file: !133, line: 2014, baseType: !630, size: 32, offset: 224)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1588, file: !133, line: 2016, baseType: !505, size: 64, offset: 256)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1588, file: !133, line: 2017, baseType: !1376, size: 64, offset: 320)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1588, file: !133, line: 2019, baseType: !505, size: 64, offset: 384)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1588, file: !133, line: 2020, baseType: !505, size: 64, offset: 448)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1588, file: !133, line: 2021, baseType: !505, size: 64, offset: 512)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1588, file: !133, line: 2022, baseType: !505, size: 64, offset: 576)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1588, file: !133, line: 2023, baseType: !505, size: 64, offset: 640)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !508, file: !133, line: 3400, baseType: !1602, size: 832)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !133, line: 2430, size: 832, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1602, file: !133, line: 2431, baseType: !544, size: 192)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1602, file: !133, line: 2433, baseType: !505, size: 64, offset: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1602, file: !133, line: 2434, baseType: !505, size: 64, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1602, file: !133, line: 2435, baseType: !505, size: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1602, file: !133, line: 2436, baseType: !505, size: 64, offset: 384)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1602, file: !133, line: 2437, baseType: !1376, size: 64, offset: 448)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1602, file: !133, line: 2438, baseType: !505, size: 64, offset: 512)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1602, file: !133, line: 2440, baseType: !505, size: 64, offset: 576)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1602, file: !133, line: 2441, baseType: !505, size: 64, offset: 640)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1602, file: !133, line: 2443, baseType: !1614, size: 128, offset: 704)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !133, line: 182, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !133, line: 182, size: 128, elements: !1616)
!1616 = !{!1617}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1615, file: !133, line: 182, baseType: !1381, size: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !508, file: !133, line: 3401, baseType: !1619, size: 320)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !133, line: 3327, size: 320, elements: !1620)
!1620 = !{!1621, !1622, !1629}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1619, file: !133, line: 3329, baseType: !544, size: 192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1619, file: !133, line: 3330, baseType: !1623, size: 64, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !133, line: 3320, size: 192, elements: !1625)
!1625 = !{!1626, !1627, !1628}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1624, file: !133, line: 3322, baseType: !1623, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1624, file: !133, line: 3323, baseType: !1623, size: 64, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1624, file: !133, line: 3324, baseType: !505, size: 64, offset: 128)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1619, file: !133, line: 3331, baseType: !1623, size: 64, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !508, file: !133, line: 3402, baseType: !1631, size: 256)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !133, line: 1540, size: 256, elements: !1632)
!1632 = !{!1633, !1634}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1631, file: !133, line: 1541, baseType: !544, size: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1631, file: !133, line: 1542, baseType: !1635, size: 64, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !133, line: 1538, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !133, line: 1538, size: 192, elements: !1638)
!1638 = !{!1639}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1637, file: !133, line: 1538, baseType: !1640, size: 192)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !133, line: 1537, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !133, line: 1537, size: 192, elements: !1642)
!1642 = !{!1643, !1644, !1645}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1641, file: !133, line: 1537, baseType: !5, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1641, file: !133, line: 1537, baseType: !5, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1641, file: !133, line: 1537, baseType: !1646, size: 128, offset: 64)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 128, elements: !604)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !133, line: 1535, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !133, line: 1532, size: 128, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1648, file: !133, line: 1533, baseType: !505, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1648, file: !133, line: 1534, baseType: !505, size: 64, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !508, file: !133, line: 3403, baseType: !1653, size: 512)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !133, line: 1938, size: 512, elements: !1654)
!1654 = !{!1655, !1656, !1657, !1658, !1664, !1665, !1666}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1653, file: !133, line: 1939, baseType: !544, size: 192)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1653, file: !133, line: 1940, baseType: !630, size: 32, offset: 192)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1653, file: !133, line: 1941, baseType: !356, size: 32, offset: 224)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1653, file: !133, line: 1946, baseType: !1659, size: 32, offset: 256)
!1659 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !133, line: 1942, size: 32, elements: !1660)
!1660 = !{!1661, !1662, !1663}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1659, file: !133, line: 1943, baseType: !374, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1659, file: !133, line: 1944, baseType: !381, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1659, file: !133, line: 1945, baseType: !132, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1653, file: !133, line: 1950, baseType: !819, size: 64, offset: 320)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1653, file: !133, line: 1951, baseType: !819, size: 64, offset: 384)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1653, file: !133, line: 1953, baseType: !882, size: 64, offset: 448)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !508, file: !133, line: 3404, baseType: !1668, size: 1664)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !133, line: 3337, size: 1664, elements: !1669)
!1669 = !{!1670, !1671}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1668, file: !133, line: 3338, baseType: !544, size: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1668, file: !133, line: 3341, baseType: !1672, size: 1472, offset: 192)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1673, line: 410, size: 1472, elements: !1674)
!1673 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1674 = !{!1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1672, file: !1673, line: 412, baseType: !463, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1672, file: !1673, line: 413, baseType: !463, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1672, file: !1673, line: 414, baseType: !463, size: 32, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1672, file: !1673, line: 415, baseType: !463, size: 32, offset: 96)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1672, file: !1673, line: 416, baseType: !463, size: 32, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1672, file: !1673, line: 417, baseType: !463, size: 32, offset: 160)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1672, file: !1673, line: 418, baseType: !462, size: 8, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1672, file: !1673, line: 419, baseType: !462, size: 8, offset: 200)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1672, file: !1673, line: 420, baseType: !1684, size: 8, offset: 208)
!1684 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1672, file: !1673, line: 421, baseType: !1684, size: 8, offset: 216)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1672, file: !1673, line: 422, baseType: !1684, size: 8, offset: 224)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1672, file: !1673, line: 423, baseType: !1684, size: 8, offset: 232)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1672, file: !1673, line: 424, baseType: !1684, size: 8, offset: 240)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1672, file: !1673, line: 425, baseType: !1684, size: 8, offset: 248)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1672, file: !1673, line: 426, baseType: !1684, size: 8, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1672, file: !1673, line: 427, baseType: !1684, size: 8, offset: 264)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1672, file: !1673, line: 428, baseType: !1684, size: 8, offset: 272)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1672, file: !1673, line: 429, baseType: !1684, size: 8, offset: 280)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1672, file: !1673, line: 430, baseType: !1684, size: 8, offset: 288)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1672, file: !1673, line: 431, baseType: !1684, size: 8, offset: 296)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1672, file: !1673, line: 432, baseType: !1684, size: 8, offset: 304)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1672, file: !1673, line: 433, baseType: !1684, size: 8, offset: 312)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1672, file: !1673, line: 434, baseType: !1684, size: 8, offset: 320)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1672, file: !1673, line: 435, baseType: !1684, size: 8, offset: 328)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1672, file: !1673, line: 436, baseType: !1684, size: 8, offset: 336)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1672, file: !1673, line: 437, baseType: !1684, size: 8, offset: 344)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1672, file: !1673, line: 438, baseType: !1684, size: 8, offset: 352)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1672, file: !1673, line: 439, baseType: !1684, size: 8, offset: 360)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1672, file: !1673, line: 440, baseType: !1684, size: 8, offset: 368)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1672, file: !1673, line: 441, baseType: !1684, size: 8, offset: 376)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1672, file: !1673, line: 442, baseType: !1684, size: 8, offset: 384)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1672, file: !1673, line: 443, baseType: !1684, size: 8, offset: 392)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1672, file: !1673, line: 444, baseType: !1684, size: 8, offset: 400)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1672, file: !1673, line: 445, baseType: !1684, size: 8, offset: 408)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1672, file: !1673, line: 446, baseType: !1684, size: 8, offset: 416)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1672, file: !1673, line: 447, baseType: !1684, size: 8, offset: 424)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1672, file: !1673, line: 448, baseType: !1684, size: 8, offset: 432)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1672, file: !1673, line: 449, baseType: !1684, size: 8, offset: 440)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1672, file: !1673, line: 450, baseType: !1684, size: 8, offset: 448)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1672, file: !1673, line: 451, baseType: !1684, size: 8, offset: 456)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1672, file: !1673, line: 452, baseType: !1684, size: 8, offset: 464)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1672, file: !1673, line: 453, baseType: !1684, size: 8, offset: 472)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1672, file: !1673, line: 454, baseType: !1684, size: 8, offset: 480)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1672, file: !1673, line: 455, baseType: !1684, size: 8, offset: 488)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1672, file: !1673, line: 456, baseType: !1684, size: 8, offset: 496)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1672, file: !1673, line: 457, baseType: !1684, size: 8, offset: 504)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1672, file: !1673, line: 458, baseType: !1684, size: 8, offset: 512)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1672, file: !1673, line: 459, baseType: !1684, size: 8, offset: 520)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1672, file: !1673, line: 460, baseType: !1684, size: 8, offset: 528)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1672, file: !1673, line: 461, baseType: !1684, size: 8, offset: 536)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1672, file: !1673, line: 462, baseType: !1684, size: 8, offset: 544)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1672, file: !1673, line: 463, baseType: !1684, size: 8, offset: 552)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1672, file: !1673, line: 464, baseType: !1684, size: 8, offset: 560)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1672, file: !1673, line: 465, baseType: !1684, size: 8, offset: 568)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1672, file: !1673, line: 466, baseType: !1684, size: 8, offset: 576)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1672, file: !1673, line: 467, baseType: !1684, size: 8, offset: 584)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1672, file: !1673, line: 468, baseType: !1684, size: 8, offset: 592)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1672, file: !1673, line: 469, baseType: !1684, size: 8, offset: 600)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1672, file: !1673, line: 470, baseType: !1684, size: 8, offset: 608)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1672, file: !1673, line: 471, baseType: !1684, size: 8, offset: 616)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1672, file: !1673, line: 472, baseType: !1684, size: 8, offset: 624)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1672, file: !1673, line: 473, baseType: !1684, size: 8, offset: 632)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1672, file: !1673, line: 474, baseType: !1684, size: 8, offset: 640)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1672, file: !1673, line: 475, baseType: !1684, size: 8, offset: 648)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1672, file: !1673, line: 476, baseType: !1684, size: 8, offset: 656)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1672, file: !1673, line: 477, baseType: !1684, size: 8, offset: 664)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1672, file: !1673, line: 478, baseType: !1684, size: 8, offset: 672)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1672, file: !1673, line: 479, baseType: !1684, size: 8, offset: 680)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1672, file: !1673, line: 480, baseType: !1684, size: 8, offset: 688)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1672, file: !1673, line: 481, baseType: !1684, size: 8, offset: 696)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1672, file: !1673, line: 482, baseType: !1684, size: 8, offset: 704)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1672, file: !1673, line: 483, baseType: !1684, size: 8, offset: 712)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1672, file: !1673, line: 484, baseType: !1684, size: 8, offset: 720)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1672, file: !1673, line: 485, baseType: !1684, size: 8, offset: 728)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1672, file: !1673, line: 486, baseType: !1684, size: 8, offset: 736)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1672, file: !1673, line: 487, baseType: !1684, size: 8, offset: 744)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1672, file: !1673, line: 488, baseType: !1684, size: 8, offset: 752)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1672, file: !1673, line: 489, baseType: !1684, size: 8, offset: 760)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1672, file: !1673, line: 490, baseType: !1684, size: 8, offset: 768)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1672, file: !1673, line: 491, baseType: !1684, size: 8, offset: 776)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1672, file: !1673, line: 492, baseType: !1684, size: 8, offset: 784)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1672, file: !1673, line: 493, baseType: !1684, size: 8, offset: 792)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1672, file: !1673, line: 494, baseType: !1684, size: 8, offset: 800)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1672, file: !1673, line: 495, baseType: !1684, size: 8, offset: 808)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1672, file: !1673, line: 496, baseType: !1684, size: 8, offset: 816)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1672, file: !1673, line: 497, baseType: !1684, size: 8, offset: 824)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1672, file: !1673, line: 498, baseType: !1684, size: 8, offset: 832)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1672, file: !1673, line: 499, baseType: !1684, size: 8, offset: 840)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1672, file: !1673, line: 500, baseType: !1684, size: 8, offset: 848)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1672, file: !1673, line: 501, baseType: !1684, size: 8, offset: 856)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1672, file: !1673, line: 502, baseType: !1684, size: 8, offset: 864)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1672, file: !1673, line: 503, baseType: !1684, size: 8, offset: 872)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1672, file: !1673, line: 504, baseType: !1684, size: 8, offset: 880)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1672, file: !1673, line: 505, baseType: !1684, size: 8, offset: 888)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1672, file: !1673, line: 506, baseType: !1684, size: 8, offset: 896)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1672, file: !1673, line: 507, baseType: !1684, size: 8, offset: 904)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1672, file: !1673, line: 508, baseType: !1684, size: 8, offset: 912)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1672, file: !1673, line: 509, baseType: !1684, size: 8, offset: 920)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1672, file: !1673, line: 510, baseType: !1684, size: 8, offset: 928)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1672, file: !1673, line: 511, baseType: !1684, size: 8, offset: 936)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1672, file: !1673, line: 512, baseType: !1684, size: 8, offset: 944)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1672, file: !1673, line: 513, baseType: !1684, size: 8, offset: 952)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1672, file: !1673, line: 514, baseType: !1684, size: 8, offset: 960)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1672, file: !1673, line: 515, baseType: !1684, size: 8, offset: 968)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1672, file: !1673, line: 516, baseType: !1684, size: 8, offset: 976)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1672, file: !1673, line: 517, baseType: !1684, size: 8, offset: 984)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1672, file: !1673, line: 518, baseType: !1684, size: 8, offset: 992)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1672, file: !1673, line: 519, baseType: !1684, size: 8, offset: 1000)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1672, file: !1673, line: 520, baseType: !1684, size: 8, offset: 1008)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1672, file: !1673, line: 521, baseType: !1684, size: 8, offset: 1016)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1672, file: !1673, line: 522, baseType: !1684, size: 8, offset: 1024)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1672, file: !1673, line: 523, baseType: !1684, size: 8, offset: 1032)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1672, file: !1673, line: 524, baseType: !1684, size: 8, offset: 1040)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1672, file: !1673, line: 525, baseType: !1684, size: 8, offset: 1048)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1672, file: !1673, line: 526, baseType: !1684, size: 8, offset: 1056)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1672, file: !1673, line: 527, baseType: !1684, size: 8, offset: 1064)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1672, file: !1673, line: 528, baseType: !1684, size: 8, offset: 1072)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1672, file: !1673, line: 529, baseType: !1684, size: 8, offset: 1080)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1672, file: !1673, line: 530, baseType: !1684, size: 8, offset: 1088)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1672, file: !1673, line: 531, baseType: !1684, size: 8, offset: 1096)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1672, file: !1673, line: 532, baseType: !1684, size: 8, offset: 1104)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1672, file: !1673, line: 533, baseType: !1684, size: 8, offset: 1112)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1672, file: !1673, line: 534, baseType: !1684, size: 8, offset: 1120)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1672, file: !1673, line: 535, baseType: !1684, size: 8, offset: 1128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1672, file: !1673, line: 536, baseType: !1684, size: 8, offset: 1136)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1672, file: !1673, line: 537, baseType: !1684, size: 8, offset: 1144)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1672, file: !1673, line: 538, baseType: !1684, size: 8, offset: 1152)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1672, file: !1673, line: 539, baseType: !1684, size: 8, offset: 1160)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1672, file: !1673, line: 540, baseType: !1684, size: 8, offset: 1168)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1672, file: !1673, line: 541, baseType: !1684, size: 8, offset: 1176)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1672, file: !1673, line: 542, baseType: !1684, size: 8, offset: 1184)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1672, file: !1673, line: 543, baseType: !1684, size: 8, offset: 1192)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1672, file: !1673, line: 544, baseType: !1684, size: 8, offset: 1200)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1672, file: !1673, line: 545, baseType: !1684, size: 8, offset: 1208)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1672, file: !1673, line: 546, baseType: !1684, size: 8, offset: 1216)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1672, file: !1673, line: 547, baseType: !1684, size: 8, offset: 1224)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1672, file: !1673, line: 548, baseType: !1684, size: 8, offset: 1232)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1672, file: !1673, line: 549, baseType: !1684, size: 8, offset: 1240)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1672, file: !1673, line: 550, baseType: !1684, size: 8, offset: 1248)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1672, file: !1673, line: 551, baseType: !1684, size: 8, offset: 1256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1672, file: !1673, line: 552, baseType: !1684, size: 8, offset: 1264)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1672, file: !1673, line: 553, baseType: !1684, size: 8, offset: 1272)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1672, file: !1673, line: 554, baseType: !1684, size: 8, offset: 1280)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1672, file: !1673, line: 555, baseType: !1684, size: 8, offset: 1288)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1672, file: !1673, line: 556, baseType: !1684, size: 8, offset: 1296)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1672, file: !1673, line: 557, baseType: !1684, size: 8, offset: 1304)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1672, file: !1673, line: 558, baseType: !1684, size: 8, offset: 1312)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1672, file: !1673, line: 559, baseType: !1684, size: 8, offset: 1320)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1672, file: !1673, line: 560, baseType: !1684, size: 8, offset: 1328)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1672, file: !1673, line: 561, baseType: !1684, size: 8, offset: 1336)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1672, file: !1673, line: 562, baseType: !1684, size: 8, offset: 1344)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1672, file: !1673, line: 563, baseType: !1684, size: 8, offset: 1352)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1672, file: !1673, line: 564, baseType: !1684, size: 8, offset: 1360)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1672, file: !1673, line: 565, baseType: !1684, size: 8, offset: 1368)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1672, file: !1673, line: 566, baseType: !1684, size: 8, offset: 1376)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1672, file: !1673, line: 567, baseType: !1684, size: 8, offset: 1384)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1672, file: !1673, line: 568, baseType: !1684, size: 8, offset: 1392)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1672, file: !1673, line: 569, baseType: !1684, size: 8, offset: 1400)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1672, file: !1673, line: 570, baseType: !1684, size: 8, offset: 1408)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1672, file: !1673, line: 571, baseType: !1684, size: 8, offset: 1416)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1672, file: !1673, line: 572, baseType: !1684, size: 8, offset: 1424)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1672, file: !1673, line: 573, baseType: !1684, size: 8, offset: 1432)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1672, file: !1673, line: 574, baseType: !1684, size: 8, offset: 1440)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !508, file: !133, line: 3405, baseType: !1840, size: 384)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !133, line: 3352, size: 384, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1840, file: !133, line: 3353, baseType: !544, size: 192)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1840, file: !133, line: 3356, baseType: !1844, size: 192, offset: 192)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1673, line: 578, size: 192, elements: !1845)
!1845 = !{!1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1844, file: !1673, line: 580, baseType: !463, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1844, file: !1673, line: 581, baseType: !463, size: 32, offset: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1844, file: !1673, line: 582, baseType: !463, size: 32, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1844, file: !1673, line: 583, baseType: !463, size: 32, offset: 96)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1844, file: !1673, line: 584, baseType: !462, size: 8, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1844, file: !1673, line: 585, baseType: !462, size: 8, offset: 136)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1844, file: !1673, line: 586, baseType: !462, size: 8, offset: 144)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1844, file: !1673, line: 587, baseType: !462, size: 8, offset: 152)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1844, file: !1673, line: 588, baseType: !462, size: 8, offset: 160)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1844, file: !1673, line: 589, baseType: !462, size: 8, offset: 168)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1844, file: !1673, line: 590, baseType: !462, size: 8, offset: 176)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_lattice", file: !1, line: 137, baseType: !1858)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lambda_lattice_s", file: !1, line: 125, size: 320, elements: !1860)
!1860 = !{!1861, !1864, !1865, !1866, !1867}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1859, file: !1, line: 128, baseType: !1862, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_matrix", file: !471, line: 42, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "dimension", scope: !1859, file: !1, line: 130, baseType: !463, size: 32, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !1859, file: !1, line: 132, baseType: !476, size: 64, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "origin_invariants", scope: !1859, file: !1, line: 134, baseType: !1862, size: 64, offset: 192)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "invariants", scope: !1859, file: !1, line: 136, baseType: !463, size: 32, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !831)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !133, line: 184, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !133, line: 184, size: 128, elements: !1873)
!1873 = !{!1874}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1872, file: !133, line: 184, baseType: !1381, size: 128)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1877, line: 32, baseType: !1878)
!1877 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1877, line: 32, size: 96, elements: !1879)
!1879 = !{!1880}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1878, file: !1877, line: 32, baseType: !1881, size: 96)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1877, line: 31, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1877, line: 31, size: 96, elements: !1883)
!1883 = !{!1884, !1885, !1886}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1882, file: !1877, line: 31, baseType: !5, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1882, file: !1877, line: 31, baseType: !5, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1882, file: !1877, line: 31, baseType: !1887, size: 32, offset: 64)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 32, elements: !604)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_loop_heap", file: !1, line: 1466, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_loop_heap", file: !1, line: 1466, size: 128, elements: !1891)
!1891 = !{!1892}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1890, file: !1, line: 1466, baseType: !1893, size: 128)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_loop_base", file: !1, line: 1465, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_loop_base", file: !1, line: 1465, size: 128, elements: !1895)
!1895 = !{!1896, !1897, !1898}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1894, file: !1, line: 1465, baseType: !5, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1894, file: !1, line: 1465, baseType: !5, size: 32, offset: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1894, file: !1, line: 1465, baseType: !1899, size: 64, offset: 64)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 64, elements: !604)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !454, line: 30, baseType: !1901)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !133, line: 1893, baseType: !870)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !389, line: 34, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !389, line: 34, size: 128, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1905, file: !389, line: 34, baseType: !1368, size: 128)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_source_location_heap", file: !1, line: 2352, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_source_location_heap", file: !1, line: 2352, size: 96, elements: !1911)
!1911 = !{!1912}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1910, file: !1, line: 2352, baseType: !1913, size: 96)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_source_location_base", file: !1, line: 2351, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_source_location_base", file: !1, line: 2351, size: 96, elements: !1915)
!1915 = !{!1916, !1917, !1918}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1914, file: !1, line: 2351, baseType: !5, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1914, file: !1, line: 2351, baseType: !5, size: 32, offset: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1914, file: !1, line: 2351, baseType: !1919, size: 32, offset: 64)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 32, elements: !604)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map", file: !133, line: 5278, size: 192, elements: !1922)
!1922 = !{!1923, !1927, !1928}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1921, file: !133, line: 5279, baseType: !1924, size: 64)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map_base", file: !133, line: 5267, size: 64, elements: !1925)
!1925 = !{!1926}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1924, file: !133, line: 5268, baseType: !505, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1921, file: !133, line: 5280, baseType: !5, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1921, file: !133, line: 5281, baseType: !505, size: 64, offset: 128)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddr_p", file: !1931, line: 331, baseType: !1932)
!1931 = !DIFile(filename: "./tree-data-ref.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_dependence_relation", file: !1931, line: 282, size: 512, elements: !1934)
!1934 = !{!1935, !1986, !1987, !1988, !2017, !2018, !2024, !2025, !2026, !2027, !2028}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1933, file: !1931, line: 285, baseType: !1936, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_reference", file: !1931, line: 165, size: 896, elements: !1938)
!1938 = !{!1939, !1940, !1941, !1942, !1943, !1951, !1956, !1961}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1937, file: !1931, line: 168, baseType: !829, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1937, file: !1931, line: 171, baseType: !505, size: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1937, file: !1931, line: 174, baseType: !467, size: 64, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "is_read", scope: !1937, file: !1931, line: 177, baseType: !462, size: 8, offset: 192)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "innermost", scope: !1937, file: !1931, line: 180, baseType: !1944, size: 320, offset: 256)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "innermost_loop_behavior", file: !1931, line: 51, size: 320, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949, !1950}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !1944, file: !1931, line: 53, baseType: !505, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1944, file: !1931, line: 54, baseType: !505, size: 64, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1944, file: !1931, line: 55, baseType: !505, size: 64, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1944, file: !1931, line: 56, baseType: !505, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_to", scope: !1944, file: !1931, line: 60, baseType: !505, size: 64, offset: 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !1937, file: !1931, line: 183, baseType: !1952, size: 128, offset: 576)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "indices", file: !1931, line: 78, size: 128, elements: !1953)
!1953 = !{!1954, !1955}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "base_object", scope: !1952, file: !1931, line: 81, baseType: !505, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "access_fns", scope: !1952, file: !1931, line: 84, baseType: !1870, size: 64, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1937, file: !1931, line: 186, baseType: !1957, size: 128, offset: 704)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dr_alias", file: !1931, line: 87, size: 128, elements: !1958)
!1958 = !{!1959, !1960}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1957, file: !1931, line: 91, baseType: !1582, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "vops", scope: !1957, file: !1931, line: 96, baseType: !1399, size: 64, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "access_matrix", scope: !1937, file: !1931, line: 189, baseType: !1962, size: 64, offset: 832)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access_matrix", file: !1931, line: 127, size: 256, elements: !1964)
!1964 = !{!1965, !1971, !1972, !1973}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1963, file: !1931, line: 129, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_heap", file: !328, line: 86, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_heap", file: !328, line: 86, size: 128, elements: !1969)
!1969 = !{!1970}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1968, file: !328, line: 86, baseType: !1064, size: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "nb_induction_vars", scope: !1963, file: !1931, line: 130, baseType: !463, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1963, file: !1931, line: 131, baseType: !1870, size: 64, offset: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !1963, file: !1931, line: 132, baseType: !1974, size: 64, offset: 192)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_gc", file: !471, line: 34, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_gc", file: !471, line: 34, size: 128, elements: !1977)
!1977 = !{!1978}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1976, file: !471, line: 34, baseType: !1979, size: 128)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_base", file: !471, line: 32, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_base", file: !471, line: 32, size: 128, elements: !1981)
!1981 = !{!1982, !1983, !1984}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1980, file: !471, line: 32, baseType: !5, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1980, file: !471, line: 32, baseType: !5, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1980, file: !471, line: 32, baseType: !1985, size: 64, offset: 64)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 64, elements: !604)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1933, file: !1931, line: 286, baseType: !1936, size: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "are_dependent", scope: !1933, file: !1931, line: 299, baseType: !505, size: 64, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "subscripts", scope: !1933, file: !1931, line: 304, baseType: !1989, size: 64, offset: 192)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_heap", file: !1931, line: 272, baseType: !1991)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_heap", file: !1931, line: 272, size: 128, elements: !1992)
!1992 = !{!1993}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1991, file: !1931, line: 272, baseType: !1994, size: 128)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_base", file: !1931, line: 271, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_base", file: !1931, line: 271, size: 128, elements: !1996)
!1996 = !{!1997, !1998, !1999}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1995, file: !1931, line: 271, baseType: !5, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1995, file: !1931, line: 271, baseType: !5, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1995, file: !1931, line: 271, baseType: !2000, size: 64, offset: 64)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2001, size: 64, elements: !604)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "subscript_p", file: !1931, line: 270, baseType: !2002)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subscript", file: !1931, line: 252, size: 256, elements: !2004)
!2004 = !{!2005, !2014, !2015, !2016}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_a", scope: !2003, file: !1931, line: 256, baseType: !2006, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "conflict_function", file: !1931, line: 243, baseType: !2008)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1931, line: 239, size: 192, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2008, file: !1931, line: 241, baseType: !5, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "fns", scope: !2008, file: !1931, line: 242, baseType: !2012, size: 128, offset: 64)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 128, elements: !748)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_fn", file: !1931, line: 237, baseType: !1870)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_b", scope: !2003, file: !1931, line: 257, baseType: !2006, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "last_conflict", scope: !2003, file: !1931, line: 261, baseType: !505, size: 64, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2003, file: !1931, line: 267, baseType: !505, size: 64, offset: 192)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1933, file: !1931, line: 307, baseType: !1966, size: 64, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "dir_vects", scope: !1933, file: !1931, line: 310, baseType: !2019, size: 64, offset: 320)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_heap", file: !471, line: 33, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_heap", file: !471, line: 33, size: 128, elements: !2022)
!2022 = !{!2023}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2021, file: !471, line: 33, baseType: !1979, size: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "dist_vects", scope: !1933, file: !1931, line: 313, baseType: !2019, size: 64, offset: 384)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "inner_loop", scope: !1933, file: !1931, line: 317, baseType: !5, size: 32, offset: 448)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "reversed_p", scope: !1933, file: !1931, line: 320, baseType: !462, size: 8, offset: 480)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "affine_p", scope: !1933, file: !1931, line: 324, baseType: !462, size: 8, offset: 488)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "self_reference_p", scope: !1933, file: !1931, line: 328, baseType: !462, size: 8, offset: 496)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "data_reference_p", file: !1931, line: 207, baseType: !1936)
!2030 = !{i32 2, !"Dwarf Version", i32 4}
!2031 = !{i32 2, !"Debug Info Version", i32 3}
!2032 = !{i32 1, !"wchar_size", i32 4}
!2033 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2034 = distinct !DISubprogram(name: "vprintf", scope: !2035, file: !2035, line: 39, type: !2036, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2046)
!2035 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2036 = !DISubroutineType(types: !2037)
!2037 = !{!463, !2038, !2039}
!2038 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !468)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, size: 192, elements: !2041)
!2041 = !{!2042, !2043, !2044, !2045}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2040, file: !1, baseType: !5, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2040, file: !1, baseType: !5, size: 32, offset: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2040, file: !1, baseType: !467, size: 64, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2040, file: !1, baseType: !467, size: 64, offset: 128)
!2046 = !{!2047, !2048}
!2047 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2034, file: !2035, line: 39, type: !2038)
!2048 = !DILocalVariable(name: "__arg", arg: 2, scope: !2034, file: !2035, line: 39, type: !2039)
!2049 = !DILocation(line: 0, scope: !2034)
!2050 = !DILocation(line: 41, column: 20, scope: !2034)
!2051 = !DILocation(line: 41, column: 10, scope: !2034)
!2052 = !DILocation(line: 41, column: 3, scope: !2034)
!2053 = distinct !DISubprogram(name: "getchar", scope: !2035, file: !2035, line: 47, type: !2054, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2056)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!463}
!2056 = !{}
!2057 = !DILocation(line: 49, column: 16, scope: !2053)
!2058 = !DILocation(line: 49, column: 10, scope: !2053)
!2059 = !DILocation(line: 49, column: 3, scope: !2053)
!2060 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2035, file: !2035, line: 56, type: !2061, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2114)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!463, !2063}
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2065, line: 7, baseType: !2066)
!2065 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2067, line: 49, size: 1728, elements: !2068)
!2067 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2068 = !{!2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2084, !2086, !2087, !2088, !2091, !2093, !2094, !2095, !2098, !2100, !2103, !2106, !2107, !2108, !2109, !2110}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2066, file: !2067, line: 51, baseType: !463, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2066, file: !2067, line: 54, baseType: !465, size: 64, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2066, file: !2067, line: 55, baseType: !465, size: 64, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2066, file: !2067, line: 56, baseType: !465, size: 64, offset: 192)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2066, file: !2067, line: 57, baseType: !465, size: 64, offset: 256)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2066, file: !2067, line: 58, baseType: !465, size: 64, offset: 320)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2066, file: !2067, line: 59, baseType: !465, size: 64, offset: 384)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2066, file: !2067, line: 60, baseType: !465, size: 64, offset: 448)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2066, file: !2067, line: 61, baseType: !465, size: 64, offset: 512)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2066, file: !2067, line: 64, baseType: !465, size: 64, offset: 576)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2066, file: !2067, line: 65, baseType: !465, size: 64, offset: 640)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2066, file: !2067, line: 66, baseType: !465, size: 64, offset: 704)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2066, file: !2067, line: 68, baseType: !2082, size: 64, offset: 768)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2067, line: 36, flags: DIFlagFwdDecl)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2066, file: !2067, line: 70, baseType: !2085, size: 64, offset: 832)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2066, file: !2067, line: 72, baseType: !463, size: 32, offset: 896)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2066, file: !2067, line: 73, baseType: !463, size: 32, offset: 928)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2066, file: !2067, line: 74, baseType: !2089, size: 64, offset: 960)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2090, line: 152, baseType: !561)
!2090 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2066, file: !2067, line: 77, baseType: !2092, size: 16, offset: 1024)
!2092 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2066, file: !2067, line: 78, baseType: !1684, size: 8, offset: 1040)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2066, file: !2067, line: 79, baseType: !603, size: 8, offset: 1048)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2066, file: !2067, line: 81, baseType: !2096, size: 64, offset: 1088)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2067, line: 43, baseType: null)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2066, file: !2067, line: 89, baseType: !2099, size: 64, offset: 1152)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2090, line: 153, baseType: !561)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2066, file: !2067, line: 91, baseType: !2101, size: 64, offset: 1216)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2067, line: 37, flags: DIFlagFwdDecl)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2066, file: !2067, line: 92, baseType: !2104, size: 64, offset: 1280)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2067, line: 38, flags: DIFlagFwdDecl)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2066, file: !2067, line: 93, baseType: !2085, size: 64, offset: 1344)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2066, file: !2067, line: 94, baseType: !467, size: 64, offset: 1408)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2066, file: !2067, line: 95, baseType: !974, size: 64, offset: 1472)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2066, file: !2067, line: 96, baseType: !463, size: 32, offset: 1536)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2066, file: !2067, line: 98, baseType: !2111, size: 160, offset: 1568)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 160, elements: !2112)
!2112 = !{!2113}
!2113 = !DISubrange(count: 20)
!2114 = !{!2115}
!2115 = !DILocalVariable(name: "__fp", arg: 1, scope: !2060, file: !2035, line: 56, type: !2063)
!2116 = !DILocation(line: 0, scope: !2060)
!2117 = !DILocation(line: 58, column: 10, scope: !2060)
!2118 = !DILocation(line: 58, column: 3, scope: !2060)
!2119 = distinct !DISubprogram(name: "getc_unlocked", scope: !2035, file: !2035, line: 66, type: !2061, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2120)
!2120 = !{!2121}
!2121 = !DILocalVariable(name: "__fp", arg: 1, scope: !2119, file: !2035, line: 66, type: !2063)
!2122 = !DILocation(line: 0, scope: !2119)
!2123 = !DILocation(line: 68, column: 10, scope: !2119)
!2124 = !DILocation(line: 68, column: 3, scope: !2119)
!2125 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2035, file: !2035, line: 73, type: !2054, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2056)
!2126 = !DILocation(line: 75, column: 10, scope: !2125)
!2127 = !DILocation(line: 75, column: 3, scope: !2125)
!2128 = distinct !DISubprogram(name: "putchar", scope: !2035, file: !2035, line: 82, type: !2129, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2131)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!463, !463}
!2131 = !{!2132}
!2132 = !DILocalVariable(name: "__c", arg: 1, scope: !2128, file: !2035, line: 82, type: !463)
!2133 = !DILocation(line: 0, scope: !2128)
!2134 = !DILocation(line: 84, column: 21, scope: !2128)
!2135 = !DILocation(line: 84, column: 10, scope: !2128)
!2136 = !DILocation(line: 84, column: 3, scope: !2128)
!2137 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2035, file: !2035, line: 91, type: !2138, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2140)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!463, !463, !2063}
!2140 = !{!2141, !2142}
!2141 = !DILocalVariable(name: "__c", arg: 1, scope: !2137, file: !2035, line: 91, type: !463)
!2142 = !DILocalVariable(name: "__stream", arg: 2, scope: !2137, file: !2035, line: 91, type: !2063)
!2143 = !DILocation(line: 0, scope: !2137)
!2144 = !DILocation(line: 93, column: 10, scope: !2137)
!2145 = !DILocation(line: 93, column: 3, scope: !2137)
!2146 = distinct !DISubprogram(name: "putc_unlocked", scope: !2035, file: !2035, line: 101, type: !2138, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2147)
!2147 = !{!2148, !2149}
!2148 = !DILocalVariable(name: "__c", arg: 1, scope: !2146, file: !2035, line: 101, type: !463)
!2149 = !DILocalVariable(name: "__stream", arg: 2, scope: !2146, file: !2035, line: 101, type: !2063)
!2150 = !DILocation(line: 0, scope: !2146)
!2151 = !DILocation(line: 103, column: 10, scope: !2146)
!2152 = !DILocation(line: 103, column: 3, scope: !2146)
!2153 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2035, file: !2035, line: 108, type: !2129, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2154)
!2154 = !{!2155}
!2155 = !DILocalVariable(name: "__c", arg: 1, scope: !2153, file: !2035, line: 108, type: !463)
!2156 = !DILocation(line: 0, scope: !2153)
!2157 = !DILocation(line: 110, column: 10, scope: !2153)
!2158 = !DILocation(line: 110, column: 3, scope: !2153)
!2159 = distinct !DISubprogram(name: "getline", scope: !2035, file: !2035, line: 118, type: !2160, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2164)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!2162, !464, !2163, !2063}
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2090, line: 193, baseType: !561)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!2164 = !{!2165, !2166, !2167}
!2165 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2159, file: !2035, line: 118, type: !464)
!2166 = !DILocalVariable(name: "__n", arg: 2, scope: !2159, file: !2035, line: 118, type: !2163)
!2167 = !DILocalVariable(name: "__stream", arg: 3, scope: !2159, file: !2035, line: 118, type: !2063)
!2168 = !DILocation(line: 0, scope: !2159)
!2169 = !DILocation(line: 120, column: 10, scope: !2159)
!2170 = !DILocation(line: 120, column: 3, scope: !2159)
!2171 = distinct !DISubprogram(name: "feof_unlocked", scope: !2035, file: !2035, line: 128, type: !2061, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2172)
!2172 = !{!2173}
!2173 = !DILocalVariable(name: "__stream", arg: 1, scope: !2171, file: !2035, line: 128, type: !2063)
!2174 = !DILocation(line: 0, scope: !2171)
!2175 = !DILocation(line: 130, column: 10, scope: !2171)
!2176 = !DILocation(line: 130, column: 3, scope: !2171)
!2177 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2035, file: !2035, line: 135, type: !2061, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2178)
!2178 = !{!2179}
!2179 = !DILocalVariable(name: "__stream", arg: 1, scope: !2177, file: !2035, line: 135, type: !2063)
!2180 = !DILocation(line: 0, scope: !2177)
!2181 = !DILocation(line: 137, column: 10, scope: !2177)
!2182 = !DILocation(line: 137, column: 3, scope: !2177)
!2183 = distinct !DISubprogram(name: "tolower", scope: !2184, file: !2184, line: 207, type: !2129, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2185)
!2184 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2185 = !{!2186}
!2186 = !DILocalVariable(name: "__c", arg: 1, scope: !2183, file: !2184, line: 207, type: !463)
!2187 = !DILocation(line: 0, scope: !2183)
!2188 = !DILocation(line: 209, column: 22, scope: !2183)
!2189 = !DILocation(line: 209, column: 39, scope: !2183)
!2190 = !DILocation(line: 209, column: 38, scope: !2183)
!2191 = !DILocation(line: 209, column: 37, scope: !2183)
!2192 = !DILocation(line: 209, column: 10, scope: !2183)
!2193 = !DILocation(line: 209, column: 3, scope: !2183)
!2194 = distinct !DISubprogram(name: "toupper", scope: !2184, file: !2184, line: 213, type: !2129, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2195)
!2195 = !{!2196}
!2196 = !DILocalVariable(name: "__c", arg: 1, scope: !2194, file: !2184, line: 213, type: !463)
!2197 = !DILocation(line: 0, scope: !2194)
!2198 = !DILocation(line: 215, column: 22, scope: !2194)
!2199 = !DILocation(line: 215, column: 39, scope: !2194)
!2200 = !DILocation(line: 215, column: 38, scope: !2194)
!2201 = !DILocation(line: 215, column: 37, scope: !2194)
!2202 = !DILocation(line: 215, column: 10, scope: !2194)
!2203 = !DILocation(line: 215, column: 3, scope: !2194)
!2204 = distinct !DISubprogram(name: "atoi", scope: !2205, file: !2205, line: 361, type: !2206, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2208)
!2205 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!463, !468}
!2208 = !{!2209}
!2209 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2204, file: !2205, line: 361, type: !468)
!2210 = !DILocation(line: 0, scope: !2204)
!2211 = !DILocation(line: 363, column: 16, scope: !2204)
!2212 = !DILocation(line: 363, column: 10, scope: !2204)
!2213 = !DILocation(line: 363, column: 3, scope: !2204)
!2214 = distinct !DISubprogram(name: "atol", scope: !2205, file: !2205, line: 366, type: !2215, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2217)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!561, !468}
!2217 = !{!2218}
!2218 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2214, file: !2205, line: 366, type: !468)
!2219 = !DILocation(line: 0, scope: !2214)
!2220 = !DILocation(line: 368, column: 10, scope: !2214)
!2221 = !DILocation(line: 368, column: 3, scope: !2214)
!2222 = distinct !DISubprogram(name: "atoll", scope: !2205, file: !2205, line: 373, type: !2223, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2226)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!2225, !468}
!2225 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2226 = !{!2227}
!2227 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2222, file: !2205, line: 373, type: !468)
!2228 = !DILocation(line: 0, scope: !2222)
!2229 = !DILocation(line: 375, column: 10, scope: !2222)
!2230 = !DILocation(line: 375, column: 3, scope: !2222)
!2231 = distinct !DISubprogram(name: "bsearch", scope: !2232, file: !2232, line: 20, type: !2233, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2236)
!2232 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!467, !1324, !1324, !974, !974, !2235}
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2205, line: 808, baseType: !1328)
!2236 = !{!2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246}
!2237 = !DILocalVariable(name: "__key", arg: 1, scope: !2231, file: !2232, line: 20, type: !1324)
!2238 = !DILocalVariable(name: "__base", arg: 2, scope: !2231, file: !2232, line: 20, type: !1324)
!2239 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2231, file: !2232, line: 20, type: !974)
!2240 = !DILocalVariable(name: "__size", arg: 4, scope: !2231, file: !2232, line: 20, type: !974)
!2241 = !DILocalVariable(name: "__compar", arg: 5, scope: !2231, file: !2232, line: 21, type: !2235)
!2242 = !DILocalVariable(name: "__l", scope: !2231, file: !2232, line: 23, type: !974)
!2243 = !DILocalVariable(name: "__u", scope: !2231, file: !2232, line: 23, type: !974)
!2244 = !DILocalVariable(name: "__idx", scope: !2231, file: !2232, line: 23, type: !974)
!2245 = !DILocalVariable(name: "__p", scope: !2231, file: !2232, line: 24, type: !1324)
!2246 = !DILocalVariable(name: "__comparison", scope: !2231, file: !2232, line: 25, type: !463)
!2247 = !DILocation(line: 0, scope: !2231)
!2248 = !DILocation(line: 29, column: 3, scope: !2231)
!2249 = !DILocation(line: 27, column: 7, scope: !2231)
!2250 = !DILocation(line: 29, column: 14, scope: !2231)
!2251 = !DILocation(line: 31, column: 20, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2231, file: !2232, line: 30, column: 5)
!2253 = !DILocation(line: 31, column: 27, scope: !2252)
!2254 = !DILocation(line: 32, column: 56, scope: !2252)
!2255 = !DILocation(line: 32, column: 47, scope: !2252)
!2256 = !DILocation(line: 33, column: 22, scope: !2252)
!2257 = !DILocation(line: 34, column: 24, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2252, file: !2232, line: 34, column: 11)
!2259 = !DILocation(line: 34, column: 11, scope: !2252)
!2260 = !DILocation(line: 36, column: 29, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2258, file: !2232, line: 36, column: 16)
!2262 = !DILocation(line: 36, column: 16, scope: !2258)
!2263 = !DILocation(line: 37, column: 14, scope: !2261)
!2264 = distinct !{!2264, !2248, !2265}
!2265 = !DILocation(line: 40, column: 5, scope: !2231)
!2266 = !DILocation(line: 43, column: 1, scope: !2231)
!2267 = distinct !DISubprogram(name: "atof", scope: !2268, file: !2268, line: 25, type: !2269, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2272)
!2268 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!2271, !468}
!2271 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2272 = !{!2273}
!2273 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2267, file: !2268, line: 25, type: !468)
!2274 = !DILocation(line: 0, scope: !2267)
!2275 = !DILocation(line: 27, column: 10, scope: !2267)
!2276 = !DILocation(line: 27, column: 3, scope: !2267)
!2277 = distinct !DISubprogram(name: "strtoimax", scope: !2278, file: !2278, line: 324, type: !2279, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2285)
!2278 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!2281, !2038, !2284, !463}
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2282, line: 101, baseType: !2283)
!2282 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2090, line: 72, baseType: !561)
!2284 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !464)
!2285 = !{!2286, !2287, !2288}
!2286 = !DILocalVariable(name: "nptr", arg: 1, scope: !2277, file: !2278, line: 324, type: !2038)
!2287 = !DILocalVariable(name: "endptr", arg: 2, scope: !2277, file: !2278, line: 324, type: !2284)
!2288 = !DILocalVariable(name: "base", arg: 3, scope: !2277, file: !2278, line: 324, type: !463)
!2289 = !DILocation(line: 0, scope: !2277)
!2290 = !DILocation(line: 327, column: 10, scope: !2277)
!2291 = !DILocation(line: 327, column: 3, scope: !2277)
!2292 = distinct !DISubprogram(name: "strtoumax", scope: !2278, file: !2278, line: 336, type: !2293, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2297)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!2295, !2038, !2284, !463}
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2282, line: 102, baseType: !2296)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2090, line: 73, baseType: !559)
!2297 = !{!2298, !2299, !2300}
!2298 = !DILocalVariable(name: "nptr", arg: 1, scope: !2292, file: !2278, line: 336, type: !2038)
!2299 = !DILocalVariable(name: "endptr", arg: 2, scope: !2292, file: !2278, line: 336, type: !2284)
!2300 = !DILocalVariable(name: "base", arg: 3, scope: !2292, file: !2278, line: 336, type: !463)
!2301 = !DILocation(line: 0, scope: !2292)
!2302 = !DILocation(line: 339, column: 10, scope: !2292)
!2303 = !DILocation(line: 339, column: 3, scope: !2292)
!2304 = distinct !DISubprogram(name: "wcstoimax", scope: !2278, file: !2278, line: 348, type: !2305, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2314)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!2281, !2307, !2311, !463}
!2307 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2308)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2278, line: 34, baseType: !463)
!2311 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2312)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2314 = !{!2315, !2316, !2317}
!2315 = !DILocalVariable(name: "nptr", arg: 1, scope: !2304, file: !2278, line: 348, type: !2307)
!2316 = !DILocalVariable(name: "endptr", arg: 2, scope: !2304, file: !2278, line: 348, type: !2311)
!2317 = !DILocalVariable(name: "base", arg: 3, scope: !2304, file: !2278, line: 348, type: !463)
!2318 = !DILocation(line: 0, scope: !2304)
!2319 = !DILocation(line: 351, column: 10, scope: !2304)
!2320 = !DILocation(line: 351, column: 3, scope: !2304)
!2321 = distinct !DISubprogram(name: "wcstoumax", scope: !2278, file: !2278, line: 362, type: !2322, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2324)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!2295, !2307, !2311, !463}
!2324 = !{!2325, !2326, !2327}
!2325 = !DILocalVariable(name: "nptr", arg: 1, scope: !2321, file: !2278, line: 362, type: !2307)
!2326 = !DILocalVariable(name: "endptr", arg: 2, scope: !2321, file: !2278, line: 362, type: !2311)
!2327 = !DILocalVariable(name: "base", arg: 3, scope: !2321, file: !2278, line: 362, type: !463)
!2328 = !DILocation(line: 0, scope: !2321)
!2329 = !DILocation(line: 365, column: 10, scope: !2321)
!2330 = !DILocation(line: 365, column: 3, scope: !2321)
!2331 = distinct !DISubprogram(name: "stat", scope: !2332, file: !2332, line: 453, type: !2333, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2370)
!2332 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!463, !468, !2335}
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2337, line: 46, size: 1152, elements: !2338)
!2337 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2338 = !{!2339, !2341, !2343, !2345, !2347, !2349, !2351, !2352, !2353, !2354, !2356, !2358, !2366, !2367, !2368}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2336, file: !2337, line: 48, baseType: !2340, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2090, line: 145, baseType: !559)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2336, file: !2337, line: 53, baseType: !2342, size: 64, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2090, line: 148, baseType: !559)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2336, file: !2337, line: 61, baseType: !2344, size: 64, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2090, line: 151, baseType: !559)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2336, file: !2337, line: 62, baseType: !2346, size: 32, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2090, line: 150, baseType: !5)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2336, file: !2337, line: 64, baseType: !2348, size: 32, offset: 224)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2090, line: 146, baseType: !5)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2336, file: !2337, line: 65, baseType: !2350, size: 32, offset: 256)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2090, line: 147, baseType: !5)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2336, file: !2337, line: 67, baseType: !463, size: 32, offset: 288)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2336, file: !2337, line: 69, baseType: !2340, size: 64, offset: 320)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2336, file: !2337, line: 74, baseType: !2089, size: 64, offset: 384)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2336, file: !2337, line: 78, baseType: !2355, size: 64, offset: 448)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2090, line: 174, baseType: !561)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2336, file: !2337, line: 80, baseType: !2357, size: 64, offset: 512)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2090, line: 179, baseType: !561)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2336, file: !2337, line: 91, baseType: !2359, size: 128, offset: 576)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2360, line: 10, size: 128, elements: !2361)
!2360 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2361 = !{!2362, !2364}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2359, file: !2360, line: 12, baseType: !2363, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2090, line: 160, baseType: !561)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2359, file: !2360, line: 16, baseType: !2365, size: 64, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2090, line: 196, baseType: !561)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2336, file: !2337, line: 92, baseType: !2359, size: 128, offset: 704)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2336, file: !2337, line: 93, baseType: !2359, size: 128, offset: 832)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2336, file: !2337, line: 106, baseType: !2369, size: 192, offset: 960)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2365, size: 192, elements: !579)
!2370 = !{!2371, !2372}
!2371 = !DILocalVariable(name: "__path", arg: 1, scope: !2331, file: !2332, line: 453, type: !468)
!2372 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2331, file: !2332, line: 453, type: !2335)
!2373 = !DILocation(line: 0, scope: !2331)
!2374 = !DILocation(line: 455, column: 10, scope: !2331)
!2375 = !DILocation(line: 455, column: 3, scope: !2331)
!2376 = distinct !DISubprogram(name: "lstat", scope: !2332, file: !2332, line: 460, type: !2333, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2377)
!2377 = !{!2378, !2379}
!2378 = !DILocalVariable(name: "__path", arg: 1, scope: !2376, file: !2332, line: 460, type: !468)
!2379 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2376, file: !2332, line: 460, type: !2335)
!2380 = !DILocation(line: 0, scope: !2376)
!2381 = !DILocation(line: 462, column: 10, scope: !2376)
!2382 = !DILocation(line: 462, column: 3, scope: !2376)
!2383 = distinct !DISubprogram(name: "fstat", scope: !2332, file: !2332, line: 467, type: !2384, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2386)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{!463, !463, !2335}
!2386 = !{!2387, !2388}
!2387 = !DILocalVariable(name: "__fd", arg: 1, scope: !2383, file: !2332, line: 467, type: !463)
!2388 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2383, file: !2332, line: 467, type: !2335)
!2389 = !DILocation(line: 0, scope: !2383)
!2390 = !DILocation(line: 469, column: 10, scope: !2383)
!2391 = !DILocation(line: 469, column: 3, scope: !2383)
!2392 = distinct !DISubprogram(name: "fstatat", scope: !2332, file: !2332, line: 474, type: !2393, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2395)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!463, !463, !468, !2335, !463}
!2395 = !{!2396, !2397, !2398, !2399}
!2396 = !DILocalVariable(name: "__fd", arg: 1, scope: !2392, file: !2332, line: 474, type: !463)
!2397 = !DILocalVariable(name: "__filename", arg: 2, scope: !2392, file: !2332, line: 474, type: !468)
!2398 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2392, file: !2332, line: 474, type: !2335)
!2399 = !DILocalVariable(name: "__flag", arg: 4, scope: !2392, file: !2332, line: 474, type: !463)
!2400 = !DILocation(line: 0, scope: !2392)
!2401 = !DILocation(line: 477, column: 10, scope: !2392)
!2402 = !DILocation(line: 477, column: 3, scope: !2392)
!2403 = distinct !DISubprogram(name: "mknod", scope: !2332, file: !2332, line: 483, type: !2404, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2406)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{!463, !468, !2346, !2340}
!2406 = !{!2407, !2408, !2409}
!2407 = !DILocalVariable(name: "__path", arg: 1, scope: !2403, file: !2332, line: 483, type: !468)
!2408 = !DILocalVariable(name: "__mode", arg: 2, scope: !2403, file: !2332, line: 483, type: !2346)
!2409 = !DILocalVariable(name: "__dev", arg: 3, scope: !2403, file: !2332, line: 483, type: !2340)
!2410 = !DILocation(line: 0, scope: !2403)
!2411 = !DILocation(line: 485, column: 10, scope: !2403)
!2412 = !DILocation(line: 485, column: 3, scope: !2403)
!2413 = distinct !DISubprogram(name: "mknodat", scope: !2332, file: !2332, line: 491, type: !2414, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2416)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!463, !463, !468, !2346, !2340}
!2416 = !{!2417, !2418, !2419, !2420}
!2417 = !DILocalVariable(name: "__fd", arg: 1, scope: !2413, file: !2332, line: 491, type: !463)
!2418 = !DILocalVariable(name: "__path", arg: 2, scope: !2413, file: !2332, line: 491, type: !468)
!2419 = !DILocalVariable(name: "__mode", arg: 3, scope: !2413, file: !2332, line: 491, type: !2346)
!2420 = !DILocalVariable(name: "__dev", arg: 4, scope: !2413, file: !2332, line: 491, type: !2340)
!2421 = !DILocation(line: 0, scope: !2413)
!2422 = !DILocation(line: 494, column: 10, scope: !2413)
!2423 = !DILocation(line: 494, column: 3, scope: !2413)
!2424 = distinct !DISubprogram(name: "stat64", scope: !2332, file: !2332, line: 502, type: !2425, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2447)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!463, !468, !2427}
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2337, line: 119, size: 1152, elements: !2429)
!2429 = !{!2430, !2431, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2443, !2444, !2445, !2446}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2428, file: !2337, line: 121, baseType: !2340, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2428, file: !2337, line: 123, baseType: !2432, size: 64, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2090, line: 149, baseType: !559)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2428, file: !2337, line: 124, baseType: !2344, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2428, file: !2337, line: 125, baseType: !2346, size: 32, offset: 192)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2428, file: !2337, line: 132, baseType: !2348, size: 32, offset: 224)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2428, file: !2337, line: 133, baseType: !2350, size: 32, offset: 256)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2428, file: !2337, line: 135, baseType: !463, size: 32, offset: 288)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2428, file: !2337, line: 136, baseType: !2340, size: 64, offset: 320)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2428, file: !2337, line: 137, baseType: !2089, size: 64, offset: 384)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2428, file: !2337, line: 143, baseType: !2355, size: 64, offset: 448)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2428, file: !2337, line: 144, baseType: !2442, size: 64, offset: 512)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2090, line: 180, baseType: !561)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2428, file: !2337, line: 152, baseType: !2359, size: 128, offset: 576)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2428, file: !2337, line: 153, baseType: !2359, size: 128, offset: 704)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2428, file: !2337, line: 154, baseType: !2359, size: 128, offset: 832)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2428, file: !2337, line: 164, baseType: !2369, size: 192, offset: 960)
!2447 = !{!2448, !2449}
!2448 = !DILocalVariable(name: "__path", arg: 1, scope: !2424, file: !2332, line: 502, type: !468)
!2449 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2424, file: !2332, line: 502, type: !2427)
!2450 = !DILocation(line: 0, scope: !2424)
!2451 = !DILocation(line: 504, column: 10, scope: !2424)
!2452 = !DILocation(line: 504, column: 3, scope: !2424)
!2453 = distinct !DISubprogram(name: "lstat64", scope: !2332, file: !2332, line: 509, type: !2425, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2454)
!2454 = !{!2455, !2456}
!2455 = !DILocalVariable(name: "__path", arg: 1, scope: !2453, file: !2332, line: 509, type: !468)
!2456 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2453, file: !2332, line: 509, type: !2427)
!2457 = !DILocation(line: 0, scope: !2453)
!2458 = !DILocation(line: 511, column: 10, scope: !2453)
!2459 = !DILocation(line: 511, column: 3, scope: !2453)
!2460 = distinct !DISubprogram(name: "fstat64", scope: !2332, file: !2332, line: 516, type: !2461, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2463)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{!463, !463, !2427}
!2463 = !{!2464, !2465}
!2464 = !DILocalVariable(name: "__fd", arg: 1, scope: !2460, file: !2332, line: 516, type: !463)
!2465 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2460, file: !2332, line: 516, type: !2427)
!2466 = !DILocation(line: 0, scope: !2460)
!2467 = !DILocation(line: 518, column: 10, scope: !2460)
!2468 = !DILocation(line: 518, column: 3, scope: !2460)
!2469 = distinct !DISubprogram(name: "fstatat64", scope: !2332, file: !2332, line: 523, type: !2470, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2472)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!463, !463, !468, !2427, !463}
!2472 = !{!2473, !2474, !2475, !2476}
!2473 = !DILocalVariable(name: "__fd", arg: 1, scope: !2469, file: !2332, line: 523, type: !463)
!2474 = !DILocalVariable(name: "__filename", arg: 2, scope: !2469, file: !2332, line: 523, type: !468)
!2475 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2469, file: !2332, line: 523, type: !2427)
!2476 = !DILocalVariable(name: "__flag", arg: 4, scope: !2469, file: !2332, line: 523, type: !463)
!2477 = !DILocation(line: 0, scope: !2469)
!2478 = !DILocation(line: 526, column: 10, scope: !2469)
!2479 = !DILocation(line: 526, column: 3, scope: !2469)
!2480 = distinct !DISubprogram(name: "lambda_body_vector_new", scope: !1, file: !1, line: 156, type: !2481, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2484)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!470, !463, !2483}
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!2484 = !{!2485, !2486, !2487}
!2485 = !DILocalVariable(name: "size", arg: 1, scope: !2480, file: !1, line: 156, type: !463)
!2486 = !DILocalVariable(name: "lambda_obstack", arg: 2, scope: !2480, file: !1, line: 156, type: !2483)
!2487 = !DILocalVariable(name: "ret", scope: !2480, file: !1, line: 158, type: !470)
!2488 = !DILocation(line: 0, scope: !2480)
!2489 = !DILocation(line: 160, column: 29, scope: !2480)
!2490 = !DILocation(line: 161, column: 28, scope: !2480)
!2491 = !DILocation(line: 161, column: 3, scope: !2480)
!2492 = !DILocation(line: 161, column: 26, scope: !2480)
!2493 = !DILocation(line: 162, column: 3, scope: !2480)
!2494 = !DILocation(line: 162, column: 18, scope: !2480)
!2495 = !DILocation(line: 163, column: 3, scope: !2480)
!2496 = !DILocation(line: 163, column: 25, scope: !2480)
!2497 = !DILocation(line: 164, column: 3, scope: !2480)
!2498 = distinct !DISubprogram(name: "lambda_vector_new", scope: !471, file: !471, line: 240, type: !2499, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2501)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{!476, !463}
!2501 = !{!2502}
!2502 = !DILocalVariable(name: "size", arg: 1, scope: !2498, file: !471, line: 240, type: !463)
!2503 = !DILocation(line: 0, scope: !2498)
!2504 = !DILocation(line: 242, column: 10, scope: !2498)
!2505 = !DILocation(line: 242, column: 3, scope: !2498)
!2506 = distinct !DISubprogram(name: "lambda_body_vector_compute_new", scope: !1, file: !1, line: 171, type: !2507, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2517)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{!470, !2509, !470, !2483}
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_trans_matrix", file: !471, line: 56, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lambda_trans_matrix_s", file: !471, line: 50, size: 192, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2516}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !2511, file: !471, line: 52, baseType: !1862, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "rowsize", scope: !2511, file: !471, line: 53, baseType: !463, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "colsize", scope: !2511, file: !471, line: 54, baseType: !463, size: 32, offset: 96)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "denominator", scope: !2511, file: !471, line: 55, baseType: !463, size: 32, offset: 128)
!2517 = !{!2518, !2519, !2520, !2521, !2522}
!2518 = !DILocalVariable(name: "transform", arg: 1, scope: !2506, file: !1, line: 171, type: !2509)
!2519 = !DILocalVariable(name: "vect", arg: 2, scope: !2506, file: !1, line: 172, type: !470)
!2520 = !DILocalVariable(name: "lambda_obstack", arg: 3, scope: !2506, file: !1, line: 173, type: !2483)
!2521 = !DILocalVariable(name: "temp", scope: !2506, file: !1, line: 175, type: !470)
!2522 = !DILocalVariable(name: "depth", scope: !2506, file: !1, line: 176, type: !463)
!2523 = !DILocation(line: 0, scope: !2506)
!2524 = !DILocation(line: 179, column: 3, scope: !2506)
!2525 = !DILocation(line: 181, column: 11, scope: !2506)
!2526 = !DILocation(line: 183, column: 10, scope: !2506)
!2527 = !DILocation(line: 185, column: 5, scope: !2506)
!2528 = !DILocation(line: 185, column: 30, scope: !2506)
!2529 = !DILocation(line: 185, column: 28, scope: !2506)
!2530 = !DILocation(line: 184, column: 3, scope: !2506)
!2531 = !DILocation(line: 184, column: 26, scope: !2506)
!2532 = !DILocation(line: 186, column: 30, scope: !2506)
!2533 = !DILocation(line: 187, column: 9, scope: !2506)
!2534 = !DILocation(line: 188, column: 9, scope: !2506)
!2535 = !DILocation(line: 186, column: 3, scope: !2506)
!2536 = !DILocation(line: 189, column: 21, scope: !2506)
!2537 = !DILocation(line: 189, column: 3, scope: !2506)
!2538 = !DILocation(line: 189, column: 19, scope: !2506)
!2539 = !DILocation(line: 190, column: 3, scope: !2506)
!2540 = distinct !DISubprogram(name: "lambda_vector_matrix_mult", scope: !471, file: !471, line: 373, type: !2541, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2543)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{null, !476, !463, !1862, !463, !476}
!2543 = !{!2544, !2545, !2546, !2547, !2548, !2549, !2550}
!2544 = !DILocalVariable(name: "vect", arg: 1, scope: !2540, file: !471, line: 373, type: !476)
!2545 = !DILocalVariable(name: "m", arg: 2, scope: !2540, file: !471, line: 373, type: !463)
!2546 = !DILocalVariable(name: "mat", arg: 3, scope: !2540, file: !471, line: 373, type: !1862)
!2547 = !DILocalVariable(name: "n", arg: 4, scope: !2540, file: !471, line: 374, type: !463)
!2548 = !DILocalVariable(name: "dest", arg: 5, scope: !2540, file: !471, line: 374, type: !476)
!2549 = !DILocalVariable(name: "i", scope: !2540, file: !471, line: 376, type: !463)
!2550 = !DILocalVariable(name: "j", scope: !2540, file: !471, line: 376, type: !463)
!2551 = !DILocation(line: 0, scope: !2540)
!2552 = !DILocation(line: 377, column: 3, scope: !2540)
!2553 = !DILocation(line: 378, column: 8, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2540, file: !471, line: 378, column: 3)
!2555 = !DILocation(line: 0, scope: !2554)
!2556 = !DILocation(line: 378, column: 17, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2554, file: !471, line: 378, column: 3)
!2558 = !DILocation(line: 378, column: 3, scope: !2554)
!2559 = !DILocation(line: 0, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !471, line: 379, column: 5)
!2561 = distinct !DILexicalBlock(scope: !2557, file: !471, line: 379, column: 5)
!2562 = !DILocation(line: 379, column: 5, scope: !2561)
!2563 = !DILocation(line: 0, scope: !2561)
!2564 = !DILocation(line: 379, column: 19, scope: !2560)
!2565 = !DILocation(line: 380, column: 18, scope: !2560)
!2566 = !DILocation(line: 380, column: 30, scope: !2560)
!2567 = !DILocation(line: 380, column: 28, scope: !2560)
!2568 = !DILocation(line: 380, column: 15, scope: !2560)
!2569 = !DILocation(line: 379, column: 25, scope: !2560)
!2570 = !DILocation(line: 379, column: 5, scope: !2560)
!2571 = distinct !{!2571, !2562, !2572}
!2572 = !DILocation(line: 380, column: 36, scope: !2561)
!2573 = !DILocation(line: 378, column: 23, scope: !2557)
!2574 = !DILocation(line: 378, column: 3, scope: !2557)
!2575 = distinct !{!2575, !2558, !2576}
!2576 = !DILocation(line: 380, column: 36, scope: !2554)
!2577 = !DILocation(line: 381, column: 1, scope: !2540)
!2578 = distinct !DISubprogram(name: "print_lambda_body_vector", scope: !1, file: !1, line: 196, type: !2579, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2581)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{null, !2063, !470}
!2581 = !{!2582, !2583}
!2582 = !DILocalVariable(name: "outfile", arg: 1, scope: !2578, file: !1, line: 196, type: !2063)
!2583 = !DILocalVariable(name: "body", arg: 2, scope: !2578, file: !1, line: 196, type: !470)
!2584 = !DILocation(line: 0, scope: !2578)
!2585 = !DILocation(line: 198, column: 33, scope: !2578)
!2586 = !DILocation(line: 198, column: 58, scope: !2578)
!2587 = !DILocation(line: 198, column: 3, scope: !2578)
!2588 = !DILocation(line: 199, column: 1, scope: !2578)
!2589 = distinct !DISubprogram(name: "print_lambda_vector", scope: !471, file: !471, line: 414, type: !2590, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2592)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{null, !2063, !476, !463}
!2592 = !{!2593, !2594, !2595, !2596}
!2593 = !DILocalVariable(name: "outfile", arg: 1, scope: !2589, file: !471, line: 414, type: !2063)
!2594 = !DILocalVariable(name: "vector", arg: 2, scope: !2589, file: !471, line: 414, type: !476)
!2595 = !DILocalVariable(name: "n", arg: 3, scope: !2589, file: !471, line: 414, type: !463)
!2596 = !DILocalVariable(name: "i", scope: !2589, file: !471, line: 416, type: !463)
!2597 = !DILocation(line: 0, scope: !2589)
!2598 = !DILocation(line: 418, column: 8, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2589, file: !471, line: 418, column: 3)
!2600 = !DILocation(line: 0, scope: !2599)
!2601 = !DILocation(line: 418, column: 17, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2599, file: !471, line: 418, column: 3)
!2603 = !DILocation(line: 418, column: 3, scope: !2599)
!2604 = !DILocation(line: 419, column: 31, scope: !2602)
!2605 = !DILocation(line: 419, column: 5, scope: !2602)
!2606 = !DILocation(line: 418, column: 23, scope: !2602)
!2607 = !DILocation(line: 418, column: 3, scope: !2602)
!2608 = distinct !{!2608, !2603, !2609}
!2609 = !DILocation(line: 419, column: 40, scope: !2599)
!2610 = !DILocation(line: 420, column: 3, scope: !2589)
!2611 = !DILocation(line: 421, column: 1, scope: !2589)
!2612 = distinct !DISubprogram(name: "lambda_linear_expression_new", scope: !1, file: !1, line: 229, type: !2613, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2615)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!480, !463, !463, !2483}
!2615 = !{!2616, !2617, !2618, !2619}
!2616 = !DILocalVariable(name: "dim", arg: 1, scope: !2612, file: !1, line: 229, type: !463)
!2617 = !DILocalVariable(name: "invariants", arg: 2, scope: !2612, file: !1, line: 229, type: !463)
!2618 = !DILocalVariable(name: "lambda_obstack", arg: 3, scope: !2612, file: !1, line: 230, type: !2483)
!2619 = !DILocalVariable(name: "ret", scope: !2612, file: !1, line: 232, type: !480)
!2620 = !DILocation(line: 0, scope: !2612)
!2621 = !DILocation(line: 234, column: 35, scope: !2612)
!2622 = !DILocation(line: 236, column: 28, scope: !2612)
!2623 = !DILocation(line: 236, column: 3, scope: !2612)
!2624 = !DILocation(line: 236, column: 26, scope: !2612)
!2625 = !DILocation(line: 237, column: 3, scope: !2612)
!2626 = !DILocation(line: 237, column: 22, scope: !2612)
!2627 = !DILocation(line: 238, column: 38, scope: !2612)
!2628 = !DILocation(line: 238, column: 3, scope: !2612)
!2629 = !DILocation(line: 238, column: 36, scope: !2612)
!2630 = !DILocation(line: 239, column: 3, scope: !2612)
!2631 = !DILocation(line: 239, column: 25, scope: !2612)
!2632 = !DILocation(line: 240, column: 3, scope: !2612)
!2633 = !DILocation(line: 240, column: 18, scope: !2612)
!2634 = !DILocation(line: 242, column: 3, scope: !2612)
!2635 = distinct !DISubprogram(name: "print_lambda_linear_expression", scope: !1, file: !1, line: 282, type: !2636, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2638)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{null, !2063, !480, !463, !463, !466}
!2638 = !{!2639, !2640, !2641, !2642, !2643}
!2639 = !DILocalVariable(name: "outfile", arg: 1, scope: !2635, file: !1, line: 282, type: !2063)
!2640 = !DILocalVariable(name: "expr", arg: 2, scope: !2635, file: !1, line: 283, type: !480)
!2641 = !DILocalVariable(name: "depth", arg: 3, scope: !2635, file: !1, line: 284, type: !463)
!2642 = !DILocalVariable(name: "invariants", arg: 4, scope: !2635, file: !1, line: 284, type: !463)
!2643 = !DILocalVariable(name: "start", arg: 5, scope: !2635, file: !1, line: 284, type: !466)
!2644 = !DILocation(line: 0, scope: !2635)
!2645 = !DILocation(line: 286, column: 3, scope: !2635)
!2646 = !DILocation(line: 287, column: 37, scope: !2635)
!2647 = !DILocation(line: 287, column: 3, scope: !2635)
!2648 = !DILocation(line: 288, column: 39, scope: !2635)
!2649 = !DILocation(line: 288, column: 3, scope: !2635)
!2650 = !DILocation(line: 289, column: 3, scope: !2635)
!2651 = !DILocation(line: 290, column: 37, scope: !2635)
!2652 = !DILocation(line: 290, column: 3, scope: !2635)
!2653 = !DILocation(line: 292, column: 44, scope: !2635)
!2654 = !DILocation(line: 292, column: 3, scope: !2635)
!2655 = !DILocation(line: 293, column: 1, scope: !2635)
!2656 = distinct !DISubprogram(name: "print_linear_expression", scope: !1, file: !1, line: 249, type: !2657, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2659)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{null, !2063, !476, !463, !466}
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665}
!2660 = !DILocalVariable(name: "outfile", arg: 1, scope: !2656, file: !1, line: 249, type: !2063)
!2661 = !DILocalVariable(name: "expr", arg: 2, scope: !2656, file: !1, line: 249, type: !476)
!2662 = !DILocalVariable(name: "size", arg: 3, scope: !2656, file: !1, line: 249, type: !463)
!2663 = !DILocalVariable(name: "start", arg: 4, scope: !2656, file: !1, line: 250, type: !466)
!2664 = !DILocalVariable(name: "i", scope: !2656, file: !1, line: 252, type: !463)
!2665 = !DILocalVariable(name: "first", scope: !2656, file: !1, line: 253, type: !462)
!2666 = !DILocation(line: 0, scope: !2656)
!2667 = !DILocation(line: 0, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 268, column: 8)
!2669 = distinct !DILexicalBlock(scope: !2670, file: !1, line: 257, column: 2)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !1, line: 256, column: 11)
!2671 = distinct !DILexicalBlock(scope: !2672, file: !1, line: 255, column: 5)
!2672 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 254, column: 3)
!2673 = distinct !DILexicalBlock(scope: !2656, file: !1, line: 254, column: 3)
!2674 = !DILocation(line: 254, column: 8, scope: !2673)
!2675 = !DILocation(line: 0, scope: !2673)
!2676 = !DILocation(line: 254, column: 17, scope: !2672)
!2677 = !DILocation(line: 254, column: 3, scope: !2673)
!2678 = !DILocation(line: 256, column: 11, scope: !2670)
!2679 = !DILocation(line: 256, column: 19, scope: !2670)
!2680 = !DILocation(line: 256, column: 11, scope: !2671)
!2681 = !DILocation(line: 258, column: 8, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 258, column: 8)
!2683 = !DILocation(line: 258, column: 8, scope: !2669)
!2684 = !DILocation(line: 260, column: 20, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2686, file: !1, line: 260, column: 12)
!2686 = distinct !DILexicalBlock(scope: !2682, file: !1, line: 259, column: 6)
!2687 = !DILocation(line: 260, column: 12, scope: !2686)
!2688 = !DILocation(line: 261, column: 3, scope: !2685)
!2689 = !DILocation(line: 264, column: 21, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2682, file: !1, line: 264, column: 13)
!2691 = !DILocation(line: 264, column: 13, scope: !2682)
!2692 = !DILocation(line: 265, column: 6, scope: !2690)
!2693 = !DILocation(line: 267, column: 6, scope: !2690)
!2694 = !DILocation(line: 268, column: 13, scope: !2668)
!2695 = !DILocation(line: 268, column: 8, scope: !2668)
!2696 = !DILocation(line: 268, column: 22, scope: !2668)
!2697 = !DILocation(line: 268, column: 8, scope: !2669)
!2698 = !DILocation(line: 269, column: 36, scope: !2668)
!2699 = !DILocation(line: 269, column: 6, scope: !2668)
!2700 = !DILocation(line: 271, column: 37, scope: !2668)
!2701 = !DILocation(line: 271, column: 32, scope: !2668)
!2702 = !DILocation(line: 271, column: 53, scope: !2668)
!2703 = !DILocation(line: 271, column: 6, scope: !2668)
!2704 = !DILocation(line: 254, column: 26, scope: !2672)
!2705 = !DILocation(line: 254, column: 3, scope: !2672)
!2706 = distinct !{!2706, !2677, !2707}
!2707 = !DILocation(line: 273, column: 5, scope: !2673)
!2708 = !DILocation(line: 274, column: 1, scope: !2656)
!2709 = distinct !DISubprogram(name: "print_lambda_loop", scope: !1, file: !1, line: 301, type: !2710, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2712)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{null, !2063, !495, !463, !463, !466}
!2712 = !{!2713, !2714, !2715, !2716, !2717, !2718, !2719}
!2713 = !DILocalVariable(name: "outfile", arg: 1, scope: !2709, file: !1, line: 301, type: !2063)
!2714 = !DILocalVariable(name: "loop", arg: 2, scope: !2709, file: !1, line: 301, type: !495)
!2715 = !DILocalVariable(name: "depth", arg: 3, scope: !2709, file: !1, line: 301, type: !463)
!2716 = !DILocalVariable(name: "invariants", arg: 4, scope: !2709, file: !1, line: 302, type: !463)
!2717 = !DILocalVariable(name: "start", arg: 5, scope: !2709, file: !1, line: 302, type: !466)
!2718 = !DILocalVariable(name: "step", scope: !2709, file: !1, line: 304, type: !463)
!2719 = !DILocalVariable(name: "expr", scope: !2709, file: !1, line: 305, type: !480)
!2720 = !DILocation(line: 0, scope: !2709)
!2721 = !DILocation(line: 307, column: 3, scope: !2709)
!2722 = !DILocation(line: 309, column: 10, scope: !2709)
!2723 = !DILocation(line: 310, column: 10, scope: !2709)
!2724 = !DILocation(line: 311, column: 3, scope: !2709)
!2725 = !DILocation(line: 313, column: 7, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2709, file: !1, line: 313, column: 7)
!2727 = !DILocation(line: 313, column: 7, scope: !2709)
!2728 = !DILocation(line: 315, column: 7, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2726, file: !1, line: 314, column: 5)
!2730 = !DILocation(line: 316, column: 7, scope: !2729)
!2731 = !DILocation(line: 318, column: 5, scope: !2729)
!2732 = !DILocation(line: 320, column: 3, scope: !2709)
!2733 = !DILocation(line: 321, column: 15, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2709, file: !1, line: 321, column: 3)
!2735 = !DILocation(line: 321, column: 8, scope: !2734)
!2736 = !DILocation(line: 0, scope: !2734)
!2737 = !DILocation(line: 321, column: 43, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2734, file: !1, line: 321, column: 3)
!2739 = !DILocation(line: 321, column: 3, scope: !2734)
!2740 = !DILocation(line: 322, column: 5, scope: !2738)
!2741 = !DILocation(line: 321, column: 59, scope: !2738)
!2742 = !DILocation(line: 321, column: 3, scope: !2738)
!2743 = distinct !{!2743, !2739, !2744}
!2744 = !DILocation(line: 322, column: 76, scope: !2734)
!2745 = !DILocation(line: 323, column: 3, scope: !2709)
!2746 = !DILocation(line: 324, column: 15, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2709, file: !1, line: 324, column: 3)
!2748 = !DILocation(line: 324, column: 8, scope: !2747)
!2749 = !DILocation(line: 0, scope: !2747)
!2750 = !DILocation(line: 324, column: 43, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2747, file: !1, line: 324, column: 3)
!2752 = !DILocation(line: 324, column: 3, scope: !2747)
!2753 = !DILocation(line: 325, column: 5, scope: !2751)
!2754 = !DILocation(line: 324, column: 59, scope: !2751)
!2755 = !DILocation(line: 324, column: 3, scope: !2751)
!2756 = distinct !{!2756, !2752, !2757}
!2757 = !DILocation(line: 325, column: 76, scope: !2747)
!2758 = !DILocation(line: 326, column: 1, scope: !2709)
!2759 = distinct !DISubprogram(name: "lambda_loopnest_new", scope: !1, file: !1, line: 332, type: !2760, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2762)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{!489, !463, !463, !2483}
!2762 = !{!2763, !2764, !2765, !2766}
!2763 = !DILocalVariable(name: "depth", arg: 1, scope: !2759, file: !1, line: 332, type: !463)
!2764 = !DILocalVariable(name: "invariants", arg: 2, scope: !2759, file: !1, line: 332, type: !463)
!2765 = !DILocalVariable(name: "lambda_obstack", arg: 3, scope: !2759, file: !1, line: 333, type: !2483)
!2766 = !DILocalVariable(name: "ret", scope: !2759, file: !1, line: 335, type: !489)
!2767 = !DILocation(line: 0, scope: !2759)
!2768 = !DILocation(line: 336, column: 26, scope: !2759)
!2769 = !DILocation(line: 339, column: 7, scope: !2759)
!2770 = !DILocation(line: 338, column: 18, scope: !2759)
!2771 = !DILocation(line: 340, column: 3, scope: !2759)
!2772 = !DILocation(line: 340, column: 18, scope: !2759)
!2773 = !DILocation(line: 341, column: 3, scope: !2759)
!2774 = !DILocation(line: 341, column: 23, scope: !2759)
!2775 = !DILocation(line: 343, column: 3, scope: !2759)
!2776 = distinct !DISubprogram(name: "print_lambda_loopnest", scope: !1, file: !1, line: 350, type: !2777, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2779)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{null, !2063, !489, !466}
!2779 = !{!2780, !2781, !2782, !2783}
!2780 = !DILocalVariable(name: "outfile", arg: 1, scope: !2776, file: !1, line: 350, type: !2063)
!2781 = !DILocalVariable(name: "nest", arg: 2, scope: !2776, file: !1, line: 350, type: !489)
!2782 = !DILocalVariable(name: "start", arg: 3, scope: !2776, file: !1, line: 350, type: !466)
!2783 = !DILocalVariable(name: "i", scope: !2776, file: !1, line: 352, type: !463)
!2784 = !DILocation(line: 0, scope: !2776)
!2785 = !DILocation(line: 0, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !1, line: 353, column: 3)
!2787 = distinct !DILexicalBlock(scope: !2776, file: !1, line: 353, column: 3)
!2788 = !DILocation(line: 0, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2786, file: !1, line: 354, column: 5)
!2790 = !DILocation(line: 353, column: 8, scope: !2787)
!2791 = !DILocation(line: 0, scope: !2787)
!2792 = !DILocation(line: 353, column: 19, scope: !2786)
!2793 = !DILocation(line: 353, column: 17, scope: !2786)
!2794 = !DILocation(line: 353, column: 3, scope: !2787)
!2795 = !DILocation(line: 355, column: 44, scope: !2789)
!2796 = !DILocation(line: 355, column: 7, scope: !2789)
!2797 = !DILocation(line: 356, column: 35, scope: !2789)
!2798 = !DILocation(line: 356, column: 55, scope: !2789)
!2799 = !DILocation(line: 357, column: 5, scope: !2789)
!2800 = !DILocation(line: 356, column: 7, scope: !2789)
!2801 = !DILocation(line: 358, column: 7, scope: !2789)
!2802 = !DILocation(line: 353, column: 37, scope: !2786)
!2803 = !DILocation(line: 353, column: 3, scope: !2786)
!2804 = distinct !{!2804, !2794, !2805}
!2805 = !DILocation(line: 359, column: 5, scope: !2787)
!2806 = !DILocation(line: 360, column: 1, scope: !2776)
!2807 = distinct !DISubprogram(name: "least_common_multiple", scope: !1, file: !1, line: 452, type: !2808, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2810)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!463, !463, !463}
!2810 = !{!2811, !2812}
!2811 = !DILocalVariable(name: "a", arg: 1, scope: !2807, file: !1, line: 452, type: !463)
!2812 = !DILocalVariable(name: "b", arg: 2, scope: !2807, file: !1, line: 452, type: !463)
!2813 = !DILocation(line: 0, scope: !2807)
!2814 = !DILocation(line: 454, column: 11, scope: !2807)
!2815 = !DILocation(line: 454, column: 21, scope: !2807)
!2816 = !DILocation(line: 454, column: 19, scope: !2807)
!2817 = !DILocation(line: 454, column: 31, scope: !2807)
!2818 = !DILocation(line: 454, column: 29, scope: !2807)
!2819 = !DILocation(line: 454, column: 3, scope: !2807)
!2820 = distinct !DISubprogram(name: "gcd", scope: !471, file: !471, line: 427, type: !2808, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2821)
!2821 = !{!2822, !2823, !2824, !2825, !2826}
!2822 = !DILocalVariable(name: "a", arg: 1, scope: !2820, file: !471, line: 427, type: !463)
!2823 = !DILocalVariable(name: "b", arg: 2, scope: !2820, file: !471, line: 427, type: !463)
!2824 = !DILocalVariable(name: "x", scope: !2820, file: !471, line: 429, type: !463)
!2825 = !DILocalVariable(name: "y", scope: !2820, file: !471, line: 429, type: !463)
!2826 = !DILocalVariable(name: "z", scope: !2820, file: !471, line: 429, type: !463)
!2827 = !DILocation(line: 0, scope: !2820)
!2828 = !DILocation(line: 431, column: 7, scope: !2820)
!2829 = !DILocation(line: 432, column: 7, scope: !2820)
!2830 = !DILocation(line: 434, column: 3, scope: !2820)
!2831 = !DILocation(line: 434, column: 12, scope: !2820)
!2832 = !DILocation(line: 436, column: 13, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2820, file: !471, line: 435, column: 5)
!2834 = distinct !{!2834, !2830, !2835}
!2835 = !DILocation(line: 439, column: 5, scope: !2820)
!2836 = !DILocation(line: 441, column: 3, scope: !2820)
!2837 = distinct !DISubprogram(name: "lambda_loopnest_transform", scope: !1, file: !1, line: 1039, type: !2838, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2840)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!489, !489, !2509, !2483}
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859}
!2841 = !DILocalVariable(name: "nest", arg: 1, scope: !2837, file: !1, line: 1039, type: !489)
!2842 = !DILocalVariable(name: "trans", arg: 2, scope: !2837, file: !1, line: 1039, type: !2509)
!2843 = !DILocalVariable(name: "lambda_obstack", arg: 3, scope: !2837, file: !1, line: 1040, type: !2483)
!2844 = !DILocalVariable(name: "auxillary_nest", scope: !2837, file: !1, line: 1042, type: !489)
!2845 = !DILocalVariable(name: "target_nest", scope: !2837, file: !1, line: 1042, type: !489)
!2846 = !DILocalVariable(name: "depth", scope: !2837, file: !1, line: 1044, type: !463)
!2847 = !DILocalVariable(name: "invariants", scope: !2837, file: !1, line: 1044, type: !463)
!2848 = !DILocalVariable(name: "i", scope: !2837, file: !1, line: 1045, type: !463)
!2849 = !DILocalVariable(name: "j", scope: !2837, file: !1, line: 1045, type: !463)
!2850 = !DILocalVariable(name: "lattice", scope: !2837, file: !1, line: 1046, type: !1857)
!2851 = !DILocalVariable(name: "trans1", scope: !2837, file: !1, line: 1047, type: !2509)
!2852 = !DILocalVariable(name: "H", scope: !2837, file: !1, line: 1047, type: !2509)
!2853 = !DILocalVariable(name: "U", scope: !2837, file: !1, line: 1047, type: !2509)
!2854 = !DILocalVariable(name: "loop", scope: !2837, file: !1, line: 1048, type: !495)
!2855 = !DILocalVariable(name: "expression", scope: !2837, file: !1, line: 1049, type: !480)
!2856 = !DILocalVariable(name: "origin", scope: !2837, file: !1, line: 1050, type: !476)
!2857 = !DILocalVariable(name: "origin_invariants", scope: !2837, file: !1, line: 1051, type: !1862)
!2858 = !DILocalVariable(name: "stepsigns", scope: !2837, file: !1, line: 1052, type: !476)
!2859 = !DILocalVariable(name: "f", scope: !2837, file: !1, line: 1053, type: !463)
!2860 = !DILocation(line: 0, scope: !2837)
!2861 = !DILocation(line: 1055, column: 11, scope: !2837)
!2862 = !DILocation(line: 1056, column: 16, scope: !2837)
!2863 = !DILocation(line: 1059, column: 15, scope: !2837)
!2864 = !DILocation(line: 0, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2866, file: !1, line: 1062, column: 11)
!2866 = distinct !DILexicalBlock(scope: !2867, file: !1, line: 1061, column: 5)
!2867 = distinct !DILexicalBlock(scope: !2868, file: !1, line: 1060, column: 3)
!2868 = distinct !DILexicalBlock(scope: !2837, file: !1, line: 1060, column: 3)
!2869 = !DILocation(line: 1060, column: 8, scope: !2868)
!2870 = !DILocation(line: 0, scope: !2868)
!2871 = !DILocation(line: 1060, column: 17, scope: !2867)
!2872 = !DILocation(line: 1060, column: 3, scope: !2868)
!2873 = !DILocation(line: 1062, column: 11, scope: !2865)
!2874 = !DILocation(line: 1062, column: 40, scope: !2865)
!2875 = !DILocation(line: 1062, column: 11, scope: !2866)
!2876 = !DILocation(line: 1063, column: 2, scope: !2865)
!2877 = !DILocation(line: 1060, column: 27, scope: !2867)
!2878 = !DILocation(line: 1060, column: 3, scope: !2867)
!2879 = distinct !{!2879, !2872, !2880}
!2880 = !DILocation(line: 1066, column: 5, scope: !2868)
!2881 = !DILocation(line: 1069, column: 13, scope: !2837)
!2882 = !DILocation(line: 1070, column: 12, scope: !2837)
!2883 = !DILocation(line: 1074, column: 23, scope: !2837)
!2884 = !DILocation(line: 1074, column: 43, scope: !2837)
!2885 = !DILocation(line: 1075, column: 9, scope: !2837)
!2886 = !DILocation(line: 1074, column: 3, scope: !2837)
!2887 = !DILocation(line: 1078, column: 7, scope: !2837)
!2888 = !DILocation(line: 1079, column: 7, scope: !2837)
!2889 = !DILocation(line: 1080, column: 26, scope: !2837)
!2890 = !DILocation(line: 1080, column: 54, scope: !2837)
!2891 = !DILocation(line: 1081, column: 5, scope: !2837)
!2892 = !DILocation(line: 1080, column: 3, scope: !2837)
!2893 = !DILocation(line: 1085, column: 20, scope: !2837)
!2894 = !DILocation(line: 1089, column: 15, scope: !2837)
!2895 = !DILocation(line: 1093, column: 17, scope: !2837)
!2896 = !DILocation(line: 1095, column: 12, scope: !2837)
!2897 = !DILocation(line: 1096, column: 23, scope: !2837)
!2898 = !DILocation(line: 1097, column: 30, scope: !2837)
!2899 = !DILocation(line: 1098, column: 9, scope: !2837)
!2900 = !DILocation(line: 1097, column: 3, scope: !2837)
!2901 = !DILocation(line: 1099, column: 23, scope: !2837)
!2902 = !DILocation(line: 1099, column: 43, scope: !2837)
!2903 = !DILocation(line: 1099, column: 3, scope: !2837)
!2904 = !DILocation(line: 0, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !1, line: 1103, column: 5)
!2906 = distinct !DILexicalBlock(scope: !2907, file: !1, line: 1102, column: 3)
!2907 = distinct !DILexicalBlock(scope: !2837, file: !1, line: 1102, column: 3)
!2908 = !DILocation(line: 1102, column: 8, scope: !2907)
!2909 = !DILocation(line: 0, scope: !2907)
!2910 = !DILocation(line: 1102, column: 17, scope: !2906)
!2911 = !DILocation(line: 1102, column: 3, scope: !2907)
!2912 = !DILocation(line: 1104, column: 14, scope: !2905)
!2913 = !DILocation(line: 1105, column: 20, scope: !2905)
!2914 = !DILocation(line: 1106, column: 32, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2905, file: !1, line: 1106, column: 11)
!2916 = !DILocation(line: 1106, column: 11, scope: !2915)
!2917 = !DILocation(line: 1106, column: 11, scope: !2905)
!2918 = !DILocation(line: 1109, column: 6, scope: !2915)
!2919 = !DILocation(line: 0, scope: !2915)
!2920 = !DILocation(line: 1111, column: 40, scope: !2905)
!2921 = !DILocation(line: 1111, column: 38, scope: !2905)
!2922 = !DILocation(line: 1111, column: 7, scope: !2905)
!2923 = !DILocation(line: 1111, column: 33, scope: !2905)
!2924 = !DILocation(line: 0, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2926, file: !1, line: 1113, column: 7)
!2926 = distinct !DILexicalBlock(scope: !2905, file: !1, line: 1113, column: 7)
!2927 = !DILocation(line: 1113, column: 12, scope: !2926)
!2928 = !DILocation(line: 0, scope: !2926)
!2929 = !DILocation(line: 1113, column: 21, scope: !2925)
!2930 = !DILocation(line: 1113, column: 7, scope: !2926)
!2931 = !DILocation(line: 1115, column: 8, scope: !2925)
!2932 = !DILocation(line: 1115, column: 6, scope: !2925)
!2933 = !DILocation(line: 1114, column: 2, scope: !2925)
!2934 = !DILocation(line: 1114, column: 45, scope: !2925)
!2935 = !DILocation(line: 1113, column: 36, scope: !2925)
!2936 = !DILocation(line: 1113, column: 7, scope: !2925)
!2937 = distinct !{!2937, !2930, !2938}
!2938 = !DILocation(line: 1115, column: 30, scope: !2926)
!2939 = !DILocation(line: 1102, column: 27, scope: !2906)
!2940 = !DILocation(line: 1102, column: 3, scope: !2906)
!2941 = distinct !{!2941, !2911, !2942}
!2942 = !DILocation(line: 1116, column: 5, scope: !2907)
!2943 = !DILocation(line: 1118, column: 3, scope: !2837)
!2944 = distinct !DISubprogram(name: "lambda_lattice_compute_base", scope: !1, file: !1, line: 386, type: !2945, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2947)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!1857, !489, !2483}
!2947 = !{!2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958}
!2948 = !DILocalVariable(name: "nest", arg: 1, scope: !2944, file: !1, line: 386, type: !489)
!2949 = !DILocalVariable(name: "lambda_obstack", arg: 2, scope: !2944, file: !1, line: 387, type: !2483)
!2950 = !DILocalVariable(name: "ret", scope: !2944, file: !1, line: 389, type: !1857)
!2951 = !DILocalVariable(name: "depth", scope: !2944, file: !1, line: 390, type: !463)
!2952 = !DILocalVariable(name: "invariants", scope: !2944, file: !1, line: 390, type: !463)
!2953 = !DILocalVariable(name: "base", scope: !2944, file: !1, line: 391, type: !1862)
!2954 = !DILocalVariable(name: "i", scope: !2944, file: !1, line: 393, type: !463)
!2955 = !DILocalVariable(name: "j", scope: !2944, file: !1, line: 393, type: !463)
!2956 = !DILocalVariable(name: "step", scope: !2944, file: !1, line: 393, type: !463)
!2957 = !DILocalVariable(name: "loop", scope: !2944, file: !1, line: 394, type: !495)
!2958 = !DILocalVariable(name: "expression", scope: !2944, file: !1, line: 395, type: !480)
!2959 = !DILocation(line: 0, scope: !2944)
!2960 = !DILocation(line: 397, column: 11, scope: !2944)
!2961 = !DILocation(line: 398, column: 16, scope: !2944)
!2962 = !DILocation(line: 400, column: 9, scope: !2944)
!2963 = !DILocation(line: 401, column: 10, scope: !2944)
!2964 = !DILocation(line: 0, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2966, file: !1, line: 403, column: 5)
!2966 = distinct !DILexicalBlock(scope: !2967, file: !1, line: 402, column: 3)
!2967 = distinct !DILexicalBlock(scope: !2944, file: !1, line: 402, column: 3)
!2968 = !DILocation(line: 0, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2970, file: !1, line: 419, column: 2)
!2970 = distinct !DILexicalBlock(scope: !2965, file: !1, line: 409, column: 11)
!2971 = !DILocation(line: 0, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !1, line: 441, column: 4)
!2973 = distinct !DILexicalBlock(scope: !2969, file: !1, line: 441, column: 4)
!2974 = !DILocation(line: 402, column: 8, scope: !2967)
!2975 = !DILocation(line: 0, scope: !2967)
!2976 = !DILocation(line: 402, column: 17, scope: !2966)
!2977 = !DILocation(line: 402, column: 3, scope: !2967)
!2978 = !DILocation(line: 404, column: 14, scope: !2965)
!2979 = !DILocation(line: 405, column: 7, scope: !2965)
!2980 = !DILocation(line: 406, column: 14, scope: !2965)
!2981 = !DILocation(line: 409, column: 16, scope: !2970)
!2982 = !DILocation(line: 409, column: 11, scope: !2965)
!2983 = !DILocation(line: 0, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2970, file: !1, line: 410, column: 2)
!2985 = !DILocation(line: 411, column: 4, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 411, column: 4)
!2987 = !DILocation(line: 0, scope: !2986)
!2988 = !DILocation(line: 411, column: 18, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2986, file: !1, line: 411, column: 4)
!2990 = !DILocation(line: 412, column: 6, scope: !2989)
!2991 = !DILocation(line: 412, column: 17, scope: !2989)
!2992 = !DILocation(line: 411, column: 28, scope: !2989)
!2993 = !DILocation(line: 411, column: 4, scope: !2989)
!2994 = distinct !{!2994, !2985, !2995}
!2995 = !DILocation(line: 412, column: 19, scope: !2986)
!2996 = !DILocation(line: 413, column: 4, scope: !2984)
!2997 = !DILocation(line: 413, column: 15, scope: !2984)
!2998 = !DILocation(line: 414, column: 4, scope: !2984)
!2999 = !DILocation(line: 414, column: 28, scope: !2984)
!3000 = !DILocation(line: 415, column: 9, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 415, column: 4)
!3002 = !DILocation(line: 0, scope: !3001)
!3003 = !DILocation(line: 415, column: 18, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !3001, file: !1, line: 415, column: 4)
!3005 = !DILocation(line: 415, column: 4, scope: !3001)
!3006 = !DILocation(line: 416, column: 6, scope: !3004)
!3007 = !DILocation(line: 416, column: 44, scope: !3004)
!3008 = !DILocation(line: 415, column: 33, scope: !3004)
!3009 = !DILocation(line: 415, column: 4, scope: !3004)
!3010 = distinct !{!3010, !3005, !3011}
!3011 = !DILocation(line: 416, column: 46, scope: !3001)
!3012 = !DILocation(line: 422, column: 17, scope: !2969)
!3013 = !DILocation(line: 423, column: 4, scope: !2969)
!3014 = !DILocation(line: 0, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !1, line: 428, column: 4)
!3016 = distinct !DILexicalBlock(scope: !2969, file: !1, line: 428, column: 4)
!3017 = !DILocation(line: 428, column: 9, scope: !3016)
!3018 = !DILocation(line: 0, scope: !3016)
!3019 = !DILocation(line: 428, column: 18, scope: !3015)
!3020 = !DILocation(line: 428, column: 4, scope: !3016)
!3021 = !DILocation(line: 429, column: 19, scope: !3015)
!3022 = !DILocation(line: 430, column: 10, scope: !3015)
!3023 = !DILocation(line: 430, column: 8, scope: !3015)
!3024 = !DILocation(line: 429, column: 6, scope: !3015)
!3025 = !DILocation(line: 429, column: 17, scope: !3015)
!3026 = !DILocation(line: 428, column: 24, scope: !3015)
!3027 = !DILocation(line: 428, column: 4, scope: !3015)
!3028 = distinct !{!3028, !3020, !3029}
!3029 = !DILocation(line: 430, column: 10, scope: !3016)
!3030 = !DILocation(line: 431, column: 4, scope: !2969)
!3031 = !DILocation(line: 431, column: 15, scope: !2969)
!3032 = !DILocation(line: 432, column: 9, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !2969, file: !1, line: 432, column: 4)
!3034 = !DILocation(line: 0, scope: !3033)
!3035 = !DILocation(line: 432, column: 22, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3033, file: !1, line: 432, column: 4)
!3037 = !DILocation(line: 432, column: 4, scope: !3033)
!3038 = !DILocation(line: 433, column: 6, scope: !3036)
!3039 = !DILocation(line: 433, column: 17, scope: !3036)
!3040 = !DILocation(line: 432, column: 4, scope: !3036)
!3041 = distinct !{!3041, !3037, !3042}
!3042 = !DILocation(line: 433, column: 19, scope: !3033)
!3043 = !DILocation(line: 437, column: 30, scope: !2969)
!3044 = !DILocation(line: 437, column: 4, scope: !2969)
!3045 = !DILocation(line: 437, column: 28, scope: !2969)
!3046 = !DILocation(line: 441, column: 9, scope: !2973)
!3047 = !DILocation(line: 0, scope: !2973)
!3048 = !DILocation(line: 441, column: 18, scope: !2972)
!3049 = !DILocation(line: 441, column: 4, scope: !2973)
!3050 = !DILocation(line: 443, column: 8, scope: !2972)
!3051 = !DILocation(line: 442, column: 6, scope: !2972)
!3052 = !DILocation(line: 442, column: 44, scope: !2972)
!3053 = !DILocation(line: 441, column: 33, scope: !2972)
!3054 = !DILocation(line: 441, column: 4, scope: !2972)
!3055 = distinct !{!3055, !3049, !3056}
!3056 = !DILocation(line: 443, column: 49, scope: !2973)
!3057 = !DILocation(line: 402, column: 27, scope: !2966)
!3058 = !DILocation(line: 402, column: 3, scope: !2966)
!3059 = distinct !{!3059, !2977, !3060}
!3060 = !DILocation(line: 445, column: 5, scope: !2967)
!3061 = !DILocation(line: 446, column: 3, scope: !2944)
!3062 = distinct !DISubprogram(name: "lambda_compute_auxillary_space", scope: !1, file: !1, line: 638, type: !2838, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3063)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081}
!3064 = !DILocalVariable(name: "nest", arg: 1, scope: !3062, file: !1, line: 638, type: !489)
!3065 = !DILocalVariable(name: "trans", arg: 2, scope: !3062, file: !1, line: 639, type: !2509)
!3066 = !DILocalVariable(name: "lambda_obstack", arg: 3, scope: !3062, file: !1, line: 640, type: !2483)
!3067 = !DILocalVariable(name: "A", scope: !3062, file: !1, line: 642, type: !1862)
!3068 = !DILocalVariable(name: "B", scope: !3062, file: !1, line: 642, type: !1862)
!3069 = !DILocalVariable(name: "A1", scope: !3062, file: !1, line: 642, type: !1862)
!3070 = !DILocalVariable(name: "B1", scope: !3062, file: !1, line: 642, type: !1862)
!3071 = !DILocalVariable(name: "a", scope: !3062, file: !1, line: 643, type: !476)
!3072 = !DILocalVariable(name: "a1", scope: !3062, file: !1, line: 643, type: !476)
!3073 = !DILocalVariable(name: "invertedtrans", scope: !3062, file: !1, line: 644, type: !1862)
!3074 = !DILocalVariable(name: "depth", scope: !3062, file: !1, line: 645, type: !463)
!3075 = !DILocalVariable(name: "invariants", scope: !3062, file: !1, line: 645, type: !463)
!3076 = !DILocalVariable(name: "size", scope: !3062, file: !1, line: 645, type: !463)
!3077 = !DILocalVariable(name: "i", scope: !3062, file: !1, line: 646, type: !463)
!3078 = !DILocalVariable(name: "j", scope: !3062, file: !1, line: 646, type: !463)
!3079 = !DILocalVariable(name: "loop", scope: !3062, file: !1, line: 647, type: !495)
!3080 = !DILocalVariable(name: "expression", scope: !3062, file: !1, line: 648, type: !480)
!3081 = !DILocalVariable(name: "lattice", scope: !3062, file: !1, line: 649, type: !1857)
!3082 = !DILocation(line: 0, scope: !3062)
!3083 = !DILocation(line: 651, column: 11, scope: !3062)
!3084 = !DILocation(line: 652, column: 16, scope: !3062)
!3085 = !DILocation(line: 657, column: 7, scope: !3062)
!3086 = !DILocation(line: 658, column: 7, scope: !3062)
!3087 = !DILocation(line: 659, column: 7, scope: !3062)
!3088 = !DILocation(line: 661, column: 8, scope: !3062)
!3089 = !DILocation(line: 662, column: 8, scope: !3062)
!3090 = !DILocation(line: 663, column: 8, scope: !3062)
!3091 = !DILocation(line: 0, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 671, column: 5)
!3093 = distinct !DILexicalBlock(scope: !3094, file: !1, line: 670, column: 3)
!3094 = distinct !DILexicalBlock(scope: !3062, file: !1, line: 670, column: 3)
!3095 = !DILocation(line: 670, column: 8, scope: !3094)
!3096 = !DILocation(line: 669, column: 8, scope: !3062)
!3097 = !DILocation(line: 670, column: 17, scope: !3093)
!3098 = !DILocation(line: 670, column: 3, scope: !3094)
!3099 = !DILocation(line: 672, column: 14, scope: !3092)
!3100 = !DILocation(line: 675, column: 11, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3092, file: !1, line: 675, column: 11)
!3102 = !DILocation(line: 675, column: 26, scope: !3101)
!3103 = !DILocation(line: 675, column: 11, scope: !3092)
!3104 = !DILocation(line: 676, column: 15, scope: !3101)
!3105 = !DILocation(line: 676, column: 2, scope: !3101)
!3106 = !DILocation(line: 678, column: 15, scope: !3101)
!3107 = !DILocation(line: 680, column: 7, scope: !3092)
!3108 = !DILocation(line: 680, column: 25, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !1, line: 680, column: 7)
!3110 = distinct !DILexicalBlock(scope: !3092, file: !1, line: 680, column: 7)
!3111 = !DILocation(line: 680, column: 7, scope: !3110)
!3112 = !DILocation(line: 0, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3114, file: !1, line: 683, column: 4)
!3114 = distinct !DILexicalBlock(scope: !3115, file: !1, line: 683, column: 4)
!3115 = distinct !DILexicalBlock(scope: !3109, file: !1, line: 681, column: 2)
!3116 = !DILocation(line: 683, column: 4, scope: !3114)
!3117 = !DILocation(line: 0, scope: !3114)
!3118 = !DILocation(line: 683, column: 18, scope: !3113)
!3119 = !DILocation(line: 0, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !1, line: 687, column: 4)
!3121 = distinct !DILexicalBlock(scope: !3115, file: !1, line: 687, column: 4)
!3122 = !DILocation(line: 687, column: 4, scope: !3121)
!3123 = !DILocation(line: 684, column: 19, scope: !3113)
!3124 = !DILocation(line: 684, column: 6, scope: !3113)
!3125 = !DILocation(line: 684, column: 17, scope: !3113)
!3126 = !DILocation(line: 683, column: 24, scope: !3113)
!3127 = !DILocation(line: 683, column: 4, scope: !3113)
!3128 = distinct !{!3128, !3116, !3129}
!3129 = !DILocation(line: 684, column: 50, scope: !3114)
!3130 = !DILocation(line: 0, scope: !3121)
!3131 = !DILocation(line: 687, column: 18, scope: !3120)
!3132 = !DILocation(line: 688, column: 19, scope: !3120)
!3133 = !DILocation(line: 688, column: 6, scope: !3120)
!3134 = !DILocation(line: 688, column: 17, scope: !3120)
!3135 = !DILocation(line: 687, column: 33, scope: !3120)
!3136 = !DILocation(line: 687, column: 4, scope: !3120)
!3137 = distinct !{!3137, !3122, !3138}
!3138 = !DILocation(line: 688, column: 60, scope: !3121)
!3139 = !DILocation(line: 691, column: 14, scope: !3115)
!3140 = !DILocation(line: 691, column: 4, scope: !3115)
!3141 = !DILocation(line: 691, column: 12, scope: !3115)
!3142 = !DILocation(line: 695, column: 22, scope: !3115)
!3143 = !DILocation(line: 695, column: 20, scope: !3115)
!3144 = !DILocation(line: 695, column: 4, scope: !3115)
!3145 = !DILocation(line: 695, column: 15, scope: !3115)
!3146 = !DILocation(line: 696, column: 12, scope: !3115)
!3147 = !DILocation(line: 697, column: 9, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3115, file: !1, line: 697, column: 4)
!3149 = !DILocation(line: 0, scope: !3148)
!3150 = !DILocation(line: 697, column: 18, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3148, file: !1, line: 697, column: 4)
!3152 = !DILocation(line: 697, column: 4, scope: !3148)
!3153 = !DILocation(line: 698, column: 6, scope: !3151)
!3154 = !DILocation(line: 698, column: 17, scope: !3151)
!3155 = !DILocation(line: 697, column: 33, scope: !3151)
!3156 = !DILocation(line: 697, column: 4, scope: !3151)
!3157 = distinct !{!3157, !3152, !3158}
!3158 = !DILocation(line: 698, column: 21, scope: !3148)
!3159 = !DILocation(line: 700, column: 8, scope: !3115)
!3160 = !DILocation(line: 702, column: 4, scope: !3115)
!3161 = !DILocation(line: 680, column: 47, scope: !3109)
!3162 = !DILocation(line: 680, column: 7, scope: !3109)
!3163 = distinct !{!3163, !3111, !3164}
!3164 = !DILocation(line: 704, column: 2, scope: !3110)
!3165 = !DILocation(line: 707, column: 11, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3092, file: !1, line: 707, column: 11)
!3167 = !DILocation(line: 707, column: 26, scope: !3166)
!3168 = !DILocation(line: 707, column: 11, scope: !3092)
!3169 = !DILocation(line: 708, column: 15, scope: !3166)
!3170 = !DILocation(line: 708, column: 2, scope: !3166)
!3171 = !DILocation(line: 710, column: 15, scope: !3166)
!3172 = !DILocation(line: 712, column: 7, scope: !3092)
!3173 = !DILocation(line: 712, column: 25, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3175, file: !1, line: 712, column: 7)
!3175 = distinct !DILexicalBlock(scope: !3092, file: !1, line: 712, column: 7)
!3176 = !DILocation(line: 712, column: 7, scope: !3175)
!3177 = !DILocation(line: 0, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !1, line: 715, column: 4)
!3179 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 715, column: 4)
!3180 = distinct !DILexicalBlock(scope: !3174, file: !1, line: 713, column: 2)
!3181 = !DILocation(line: 715, column: 4, scope: !3179)
!3182 = !DILocation(line: 0, scope: !3179)
!3183 = !DILocation(line: 715, column: 18, scope: !3178)
!3184 = !DILocation(line: 0, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !1, line: 719, column: 4)
!3186 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 719, column: 4)
!3187 = !DILocation(line: 719, column: 4, scope: !3186)
!3188 = !DILocation(line: 716, column: 19, scope: !3178)
!3189 = !DILocation(line: 716, column: 6, scope: !3178)
!3190 = !DILocation(line: 716, column: 17, scope: !3178)
!3191 = !DILocation(line: 715, column: 24, scope: !3178)
!3192 = !DILocation(line: 715, column: 4, scope: !3178)
!3193 = distinct !{!3193, !3181, !3194}
!3194 = !DILocation(line: 716, column: 50, scope: !3179)
!3195 = !DILocation(line: 0, scope: !3186)
!3196 = !DILocation(line: 719, column: 18, scope: !3185)
!3197 = !DILocation(line: 720, column: 19, scope: !3185)
!3198 = !DILocation(line: 720, column: 6, scope: !3185)
!3199 = !DILocation(line: 720, column: 17, scope: !3185)
!3200 = !DILocation(line: 719, column: 33, scope: !3185)
!3201 = !DILocation(line: 719, column: 4, scope: !3185)
!3202 = distinct !{!3202, !3187, !3203}
!3203 = !DILocation(line: 720, column: 60, scope: !3186)
!3204 = !DILocation(line: 723, column: 14, scope: !3180)
!3205 = !DILocation(line: 723, column: 4, scope: !3180)
!3206 = !DILocation(line: 723, column: 12, scope: !3180)
!3207 = !DILocation(line: 726, column: 9, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 726, column: 4)
!3209 = !DILocation(line: 0, scope: !3208)
!3210 = !DILocation(line: 726, column: 18, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3208, file: !1, line: 726, column: 4)
!3212 = !DILocation(line: 726, column: 4, scope: !3208)
!3213 = !DILocation(line: 727, column: 6, scope: !3211)
!3214 = !DILocation(line: 727, column: 17, scope: !3211)
!3215 = !DILocation(line: 726, column: 24, scope: !3211)
!3216 = !DILocation(line: 726, column: 4, scope: !3211)
!3217 = distinct !{!3217, !3212, !3218}
!3218 = !DILocation(line: 727, column: 21, scope: !3208)
!3219 = !DILocation(line: 728, column: 17, scope: !3180)
!3220 = !DILocation(line: 728, column: 4, scope: !3180)
!3221 = !DILocation(line: 728, column: 15, scope: !3180)
!3222 = !DILocation(line: 729, column: 8, scope: !3180)
!3223 = !DILocation(line: 731, column: 4, scope: !3180)
!3224 = !DILocation(line: 712, column: 47, scope: !3174)
!3225 = !DILocation(line: 712, column: 7, scope: !3174)
!3226 = distinct !{!3226, !3176, !3227}
!3227 = !DILocation(line: 733, column: 2, scope: !3175)
!3228 = !DILocation(line: 670, column: 27, scope: !3093)
!3229 = !DILocation(line: 670, column: 3, scope: !3093)
!3230 = distinct !{!3230, !3098, !3231}
!3231 = !DILocation(line: 734, column: 5, scope: !3094)
!3232 = !DILocation(line: 738, column: 13, scope: !3062)
!3233 = !DILocation(line: 743, column: 26, scope: !3062)
!3234 = !DILocation(line: 743, column: 3, scope: !3062)
!3235 = !DILocation(line: 746, column: 46, scope: !3062)
!3236 = !DILocation(line: 746, column: 3, scope: !3062)
!3237 = !DILocation(line: 747, column: 3, scope: !3062)
!3238 = !DILocation(line: 750, column: 26, scope: !3062)
!3239 = !DILocation(line: 750, column: 3, scope: !3062)
!3240 = !DILocation(line: 752, column: 3, scope: !3062)
!3241 = !DILocation(line: 757, column: 19, scope: !3062)
!3242 = !DILocation(line: 760, column: 26, scope: !3062)
!3243 = !DILocation(line: 760, column: 3, scope: !3062)
!3244 = !DILocation(line: 764, column: 3, scope: !3062)
!3245 = !DILocation(line: 766, column: 10, scope: !3062)
!3246 = !DILocation(line: 766, column: 3, scope: !3062)
!3247 = distinct !DISubprogram(name: "lambda_compute_step_signs", scope: !1, file: !1, line: 985, type: !3248, scopeLine: 986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3250)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{!476, !2509, !476}
!3250 = !{!3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262}
!3251 = !DILocalVariable(name: "trans", arg: 1, scope: !3247, file: !1, line: 985, type: !2509)
!3252 = !DILocalVariable(name: "stepsigns", arg: 2, scope: !3247, file: !1, line: 985, type: !476)
!3253 = !DILocalVariable(name: "matrix", scope: !3247, file: !1, line: 987, type: !1862)
!3254 = !DILocalVariable(name: "H", scope: !3247, file: !1, line: 987, type: !1862)
!3255 = !DILocalVariable(name: "size", scope: !3247, file: !1, line: 988, type: !463)
!3256 = !DILocalVariable(name: "newsteps", scope: !3247, file: !1, line: 989, type: !476)
!3257 = !DILocalVariable(name: "i", scope: !3247, file: !1, line: 990, type: !463)
!3258 = !DILocalVariable(name: "j", scope: !3247, file: !1, line: 990, type: !463)
!3259 = !DILocalVariable(name: "factor", scope: !3247, file: !1, line: 990, type: !463)
!3260 = !DILocalVariable(name: "minimum_column", scope: !3247, file: !1, line: 990, type: !463)
!3261 = !DILocalVariable(name: "temp", scope: !3247, file: !1, line: 991, type: !463)
!3262 = !DILocalVariable(name: "row", scope: !3263, file: !1, line: 1004, type: !476)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !1, line: 1003, column: 5)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !1, line: 1002, column: 3)
!3265 = distinct !DILexicalBlock(scope: !3247, file: !1, line: 1002, column: 3)
!3266 = !DILocation(line: 0, scope: !3247)
!3267 = !DILocation(line: 993, column: 12, scope: !3247)
!3268 = !DILocation(line: 994, column: 10, scope: !3247)
!3269 = !DILocation(line: 995, column: 7, scope: !3247)
!3270 = !DILocation(line: 997, column: 14, scope: !3247)
!3271 = !DILocation(line: 998, column: 3, scope: !3247)
!3272 = !DILocation(line: 1000, column: 3, scope: !3247)
!3273 = !DILocation(line: 1002, column: 8, scope: !3265)
!3274 = !DILocation(line: 0, scope: !3265)
!3275 = !DILocation(line: 1002, column: 17, scope: !3264)
!3276 = !DILocation(line: 1002, column: 3, scope: !3265)
!3277 = !DILocation(line: 1005, column: 13, scope: !3263)
!3278 = !DILocation(line: 0, scope: !3263)
!3279 = !DILocation(line: 1006, column: 21, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !1, line: 1006, column: 7)
!3281 = distinct !DILexicalBlock(scope: !3263, file: !1, line: 1006, column: 7)
!3282 = !DILocation(line: 1006, column: 12, scope: !3281)
!3283 = !DILocation(line: 0, scope: !3281)
!3284 = !DILocation(line: 1006, column: 7, scope: !3281)
!3285 = !DILocation(line: 0, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3263, file: !1, line: 1010, column: 2)
!3287 = !DILocation(line: 0, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !1, line: 1019, column: 6)
!3289 = distinct !DILexicalBlock(scope: !3290, file: !1, line: 1018, column: 4)
!3290 = distinct !DILexicalBlock(scope: !3286, file: !1, line: 1018, column: 4)
!3291 = !DILocation(line: 1009, column: 7, scope: !3263)
!3292 = !DILocation(line: 1007, column: 6, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3280, file: !1, line: 1007, column: 6)
!3294 = !DILocation(line: 1007, column: 13, scope: !3293)
!3295 = !DILocation(line: 1007, column: 6, scope: !3280)
!3296 = !DILocation(line: 1008, column: 4, scope: !3293)
!3297 = !DILocation(line: 1006, column: 30, scope: !3280)
!3298 = !DILocation(line: 1006, column: 7, scope: !3280)
!3299 = distinct !{!3299, !3284, !3300}
!3300 = !DILocation(line: 1008, column: 40, scope: !3281)
!3301 = !DILocation(line: 1009, column: 14, scope: !3263)
!3302 = !DILocation(line: 1009, column: 56, scope: !3263)
!3303 = !DILocation(line: 1011, column: 21, scope: !3286)
!3304 = !DILocation(line: 1012, column: 4, scope: !3286)
!3305 = !DILocation(line: 1014, column: 11, scope: !3286)
!3306 = !DILocation(line: 1015, column: 18, scope: !3286)
!3307 = !DILocation(line: 1015, column: 16, scope: !3286)
!3308 = !DILocation(line: 1016, column: 29, scope: !3286)
!3309 = !DILocation(line: 1018, column: 22, scope: !3289)
!3310 = !DILocation(line: 1018, column: 9, scope: !3290)
!3311 = !DILocation(line: 0, scope: !3290)
!3312 = !DILocation(line: 1018, column: 4, scope: !3290)
!3313 = distinct !{!3313, !3291, !3314}
!3314 = !DILocation(line: 1023, column: 2, scope: !3263)
!3315 = !DILocation(line: 1020, column: 17, scope: !3288)
!3316 = !DILocation(line: 1020, column: 26, scope: !3288)
!3317 = !DILocation(line: 1020, column: 24, scope: !3288)
!3318 = !DILocation(line: 1021, column: 49, scope: !3288)
!3319 = !DILocation(line: 1021, column: 8, scope: !3288)
!3320 = !DILocation(line: 1018, column: 4, scope: !3289)
!3321 = distinct !{!3321, !3312, !3322}
!3322 = !DILocation(line: 1022, column: 6, scope: !3290)
!3323 = !DILocation(line: 1002, column: 3, scope: !3264)
!3324 = distinct !{!3324, !3276, !3325}
!3325 = !DILocation(line: 1024, column: 5, scope: !3265)
!3326 = !DILocation(line: 1025, column: 3, scope: !3247)
!3327 = distinct !DISubprogram(name: "lambda_compute_target_space", scope: !1, file: !1, line: 779, type: !3328, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!489, !489, !2509, !476, !2483}
!3330 = !{!3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352}
!3331 = !DILocalVariable(name: "auxillary_nest", arg: 1, scope: !3327, file: !1, line: 779, type: !489)
!3332 = !DILocalVariable(name: "H", arg: 2, scope: !3327, file: !1, line: 780, type: !2509)
!3333 = !DILocalVariable(name: "stepsigns", arg: 3, scope: !3327, file: !1, line: 780, type: !476)
!3334 = !DILocalVariable(name: "lambda_obstack", arg: 4, scope: !3327, file: !1, line: 781, type: !2483)
!3335 = !DILocalVariable(name: "inverse", scope: !3327, file: !1, line: 783, type: !1862)
!3336 = !DILocalVariable(name: "H1", scope: !3327, file: !1, line: 783, type: !1862)
!3337 = !DILocalVariable(name: "determinant", scope: !3327, file: !1, line: 784, type: !463)
!3338 = !DILocalVariable(name: "i", scope: !3327, file: !1, line: 784, type: !463)
!3339 = !DILocalVariable(name: "j", scope: !3327, file: !1, line: 784, type: !463)
!3340 = !DILocalVariable(name: "gcd1", scope: !3327, file: !1, line: 785, type: !463)
!3341 = !DILocalVariable(name: "gcd2", scope: !3327, file: !1, line: 785, type: !463)
!3342 = !DILocalVariable(name: "factor", scope: !3327, file: !1, line: 786, type: !463)
!3343 = !DILocalVariable(name: "target_nest", scope: !3327, file: !1, line: 788, type: !489)
!3344 = !DILocalVariable(name: "depth", scope: !3327, file: !1, line: 789, type: !463)
!3345 = !DILocalVariable(name: "invariants", scope: !3327, file: !1, line: 789, type: !463)
!3346 = !DILocalVariable(name: "target", scope: !3327, file: !1, line: 790, type: !1862)
!3347 = !DILocalVariable(name: "auxillary_loop", scope: !3327, file: !1, line: 792, type: !495)
!3348 = !DILocalVariable(name: "target_loop", scope: !3327, file: !1, line: 792, type: !495)
!3349 = !DILocalVariable(name: "expression", scope: !3327, file: !1, line: 793, type: !480)
!3350 = !DILocalVariable(name: "auxillary_expr", scope: !3327, file: !1, line: 793, type: !480)
!3351 = !DILocalVariable(name: "target_expr", scope: !3327, file: !1, line: 793, type: !480)
!3352 = !DILocalVariable(name: "tmp_expr", scope: !3327, file: !1, line: 793, type: !480)
!3353 = !DILocation(line: 0, scope: !3327)
!3354 = !DILocation(line: 795, column: 11, scope: !3327)
!3355 = !DILocation(line: 796, column: 16, scope: !3327)
!3356 = !DILocation(line: 798, column: 13, scope: !3327)
!3357 = !DILocation(line: 799, column: 40, scope: !3327)
!3358 = !DILocation(line: 799, column: 17, scope: !3327)
!3359 = !DILocation(line: 802, column: 8, scope: !3327)
!3360 = !DILocation(line: 803, column: 23, scope: !3327)
!3361 = !DILocation(line: 803, column: 3, scope: !3327)
!3362 = !DILocation(line: 805, column: 8, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3327, file: !1, line: 805, column: 3)
!3364 = !DILocation(line: 0, scope: !3363)
!3365 = !DILocation(line: 805, column: 17, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !1, line: 805, column: 3)
!3367 = !DILocation(line: 805, column: 3, scope: !3363)
!3368 = !DILocation(line: 806, column: 5, scope: !3366)
!3369 = !DILocation(line: 806, column: 14, scope: !3366)
!3370 = !DILocation(line: 805, column: 27, scope: !3366)
!3371 = !DILocation(line: 805, column: 3, scope: !3366)
!3372 = distinct !{!3372, !3367, !3373}
!3373 = !DILocation(line: 806, column: 16, scope: !3363)
!3374 = !DILocation(line: 809, column: 12, scope: !3327)
!3375 = !DILocation(line: 810, column: 3, scope: !3327)
!3376 = !DILocation(line: 812, column: 17, scope: !3327)
!3377 = !DILocation(line: 0, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !1, line: 815, column: 5)
!3379 = distinct !DILexicalBlock(scope: !3380, file: !1, line: 814, column: 3)
!3380 = distinct !DILexicalBlock(scope: !3327, file: !1, line: 814, column: 3)
!3381 = !DILocation(line: 814, column: 8, scope: !3380)
!3382 = !DILocation(line: 0, scope: !3380)
!3383 = !DILocation(line: 814, column: 17, scope: !3379)
!3384 = !DILocation(line: 814, column: 3, scope: !3380)
!3385 = !DILocation(line: 0, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !1, line: 843, column: 5)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !1, line: 842, column: 3)
!3388 = distinct !DILexicalBlock(scope: !3327, file: !1, line: 842, column: 3)
!3389 = !DILocation(line: 842, column: 3, scope: !3388)
!3390 = !DILocation(line: 818, column: 21, scope: !3378)
!3391 = !DILocation(line: 819, column: 7, scope: !3378)
!3392 = !DILocation(line: 819, column: 33, scope: !3378)
!3393 = !DILocation(line: 822, column: 33, scope: !3378)
!3394 = !DILocation(line: 822, column: 14, scope: !3378)
!3395 = !DILocation(line: 825, column: 14, scope: !3378)
!3396 = !DILocation(line: 828, column: 12, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3378, file: !1, line: 828, column: 7)
!3398 = !DILocation(line: 0, scope: !3397)
!3399 = !DILocation(line: 828, column: 21, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3397, file: !1, line: 828, column: 7)
!3401 = !DILocation(line: 828, column: 7, scope: !3397)
!3402 = !DILocation(line: 829, column: 17, scope: !3400)
!3403 = !DILocation(line: 829, column: 30, scope: !3400)
!3404 = !DILocation(line: 829, column: 15, scope: !3400)
!3405 = !DILocation(line: 828, column: 27, scope: !3400)
!3406 = !DILocation(line: 828, column: 7, scope: !3400)
!3407 = distinct !{!3407, !3401, !3408}
!3408 = !DILocation(line: 829, column: 32, scope: !3397)
!3409 = !DILocation(line: 831, column: 20, scope: !3378)
!3410 = !DILocation(line: 833, column: 27, scope: !3378)
!3411 = !DILocation(line: 833, column: 38, scope: !3378)
!3412 = !DILocation(line: 833, column: 7, scope: !3378)
!3413 = !DILocation(line: 834, column: 50, scope: !3378)
!3414 = !DILocation(line: 834, column: 7, scope: !3378)
!3415 = !DILocation(line: 834, column: 36, scope: !3378)
!3416 = !DILocation(line: 835, column: 7, scope: !3378)
!3417 = !DILocation(line: 835, column: 33, scope: !3378)
!3418 = !DILocation(line: 836, column: 28, scope: !3378)
!3419 = !DILocation(line: 836, column: 7, scope: !3378)
!3420 = !DILocation(line: 838, column: 7, scope: !3378)
!3421 = !DILocation(line: 838, column: 38, scope: !3378)
!3422 = !DILocation(line: 814, column: 27, scope: !3379)
!3423 = !DILocation(line: 814, column: 3, scope: !3379)
!3424 = distinct !{!3424, !3384, !3425}
!3425 = !DILocation(line: 839, column: 5, scope: !3380)
!3426 = !DILocation(line: 0, scope: !3388)
!3427 = !DILocation(line: 842, column: 17, scope: !3387)
!3428 = !DILocation(line: 965, column: 3, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3327, file: !1, line: 965, column: 3)
!3430 = !DILocation(line: 844, column: 24, scope: !3386)
!3431 = !DILocation(line: 845, column: 21, scope: !3386)
!3432 = !DILocation(line: 846, column: 31, scope: !3386)
!3433 = !DILocation(line: 846, column: 7, scope: !3386)
!3434 = !DILocation(line: 846, column: 29, scope: !3386)
!3435 = !DILocation(line: 847, column: 16, scope: !3386)
!3436 = !DILocation(line: 850, column: 24, scope: !3386)
!3437 = !DILocation(line: 0, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !1, line: 900, column: 8)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !1, line: 854, column: 2)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !1, line: 852, column: 7)
!3441 = distinct !DILexicalBlock(scope: !3386, file: !1, line: 852, column: 7)
!3442 = !DILocation(line: 0, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3438, file: !1, line: 902, column: 6)
!3444 = !DILocation(line: 852, column: 7, scope: !3386)
!3445 = !DILocation(line: 852, column: 29, scope: !3440)
!3446 = !DILocation(line: 852, column: 7, scope: !3441)
!3447 = !DILocation(line: 855, column: 25, scope: !3439)
!3448 = !DILocation(line: 857, column: 31, scope: !3439)
!3449 = !DILocation(line: 859, column: 10, scope: !3439)
!3450 = !DILocation(line: 857, column: 4, scope: !3439)
!3451 = !DILocation(line: 860, column: 30, scope: !3439)
!3452 = !DILocation(line: 860, column: 4, scope: !3439)
!3453 = !DILocation(line: 864, column: 33, scope: !3439)
!3454 = !DILocation(line: 864, column: 63, scope: !3439)
!3455 = !DILocation(line: 864, column: 4, scope: !3439)
!3456 = !DILocation(line: 864, column: 31, scope: !3439)
!3457 = !DILocation(line: 865, column: 24, scope: !3439)
!3458 = !DILocation(line: 866, column: 10, scope: !3439)
!3459 = !DILocation(line: 865, column: 4, scope: !3439)
!3460 = !DILocation(line: 868, column: 30, scope: !3439)
!3461 = !DILocation(line: 868, column: 4, scope: !3439)
!3462 = !DILocation(line: 871, column: 36, scope: !3439)
!3463 = !DILocation(line: 871, column: 4, scope: !3439)
!3464 = !DILocation(line: 871, column: 34, scope: !3439)
!3465 = !DILocation(line: 873, column: 30, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3439, file: !1, line: 873, column: 8)
!3467 = !DILocation(line: 873, column: 9, scope: !3466)
!3468 = !DILocation(line: 873, column: 8, scope: !3439)
!3469 = !DILocation(line: 875, column: 37, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3466, file: !1, line: 874, column: 6)
!3471 = !DILocation(line: 876, column: 3, scope: !3470)
!3472 = !DILocation(line: 875, column: 35, scope: !3470)
!3473 = !DILocation(line: 877, column: 34, scope: !3470)
!3474 = !DILocation(line: 877, column: 8, scope: !3470)
!3475 = !DILocation(line: 883, column: 3, scope: !3470)
!3476 = !DILocation(line: 883, column: 33, scope: !3470)
!3477 = !DILocation(line: 882, column: 38, scope: !3470)
!3478 = !DILocation(line: 884, column: 6, scope: !3470)
!3479 = !DILocation(line: 887, column: 30, scope: !3439)
!3480 = !DILocation(line: 887, column: 11, scope: !3439)
!3481 = !DILocation(line: 888, column: 30, scope: !3439)
!3482 = !DILocation(line: 888, column: 11, scope: !3439)
!3483 = !DILocation(line: 890, column: 11, scope: !3439)
!3484 = !DILocation(line: 891, column: 22, scope: !3439)
!3485 = !DILocation(line: 891, column: 11, scope: !3439)
!3486 = !DILocation(line: 892, column: 22, scope: !3439)
!3487 = !DILocation(line: 892, column: 11, scope: !3439)
!3488 = !DILocation(line: 893, column: 18, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !1, line: 893, column: 4)
!3490 = distinct !DILexicalBlock(scope: !3439, file: !1, line: 893, column: 4)
!3491 = !DILocation(line: 893, column: 9, scope: !3490)
!3492 = !DILocation(line: 0, scope: !3490)
!3493 = !DILocation(line: 893, column: 4, scope: !3490)
!3494 = !DILocation(line: 895, column: 4, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3439, file: !1, line: 895, column: 4)
!3496 = !DILocation(line: 894, column: 6, scope: !3489)
!3497 = !DILocation(line: 894, column: 40, scope: !3489)
!3498 = !DILocation(line: 893, column: 28, scope: !3489)
!3499 = !DILocation(line: 893, column: 4, scope: !3489)
!3500 = distinct !{!3500, !3493, !3501}
!3501 = !DILocation(line: 894, column: 43, scope: !3490)
!3502 = !DILocation(line: 0, scope: !3495)
!3503 = !DILocation(line: 895, column: 18, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3495, file: !1, line: 895, column: 4)
!3505 = !DILocation(line: 896, column: 6, scope: !3504)
!3506 = !DILocation(line: 896, column: 50, scope: !3504)
!3507 = !DILocation(line: 895, column: 33, scope: !3504)
!3508 = !DILocation(line: 895, column: 4, scope: !3504)
!3509 = distinct !{!3509, !3494, !3510}
!3510 = !DILocation(line: 896, column: 53, scope: !3495)
!3511 = !DILocation(line: 897, column: 31, scope: !3439)
!3512 = !DILocation(line: 898, column: 34, scope: !3439)
!3513 = !DILocation(line: 900, column: 20, scope: !3438)
!3514 = !DILocation(line: 900, column: 9, scope: !3438)
!3515 = !DILocation(line: 900, column: 8, scope: !3439)
!3516 = !DILocation(line: 903, column: 33, scope: !3443)
!3517 = !DILocation(line: 903, column: 8, scope: !3443)
!3518 = !DILocation(line: 903, column: 31, scope: !3443)
!3519 = !DILocation(line: 904, column: 37, scope: !3443)
!3520 = !DILocation(line: 905, column: 6, scope: !3443)
!3521 = !DILocation(line: 853, column: 22, scope: !3440)
!3522 = !DILocation(line: 852, column: 7, scope: !3440)
!3523 = distinct !{!3523, !3446, !3524}
!3524 = !DILocation(line: 906, column: 2, scope: !3441)
!3525 = !DILocation(line: 908, column: 24, scope: !3386)
!3526 = !DILocation(line: 0, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !1, line: 957, column: 8)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !1, line: 912, column: 2)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !1, line: 910, column: 7)
!3530 = distinct !DILexicalBlock(scope: !3386, file: !1, line: 910, column: 7)
!3531 = !DILocation(line: 0, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 959, column: 6)
!3533 = !DILocation(line: 910, column: 7, scope: !3386)
!3534 = !DILocation(line: 910, column: 29, scope: !3529)
!3535 = !DILocation(line: 910, column: 7, scope: !3530)
!3536 = !DILocation(line: 913, column: 25, scope: !3528)
!3537 = !DILocation(line: 915, column: 31, scope: !3528)
!3538 = !DILocation(line: 917, column: 10, scope: !3528)
!3539 = !DILocation(line: 915, column: 4, scope: !3528)
!3540 = !DILocation(line: 918, column: 30, scope: !3528)
!3541 = !DILocation(line: 918, column: 4, scope: !3528)
!3542 = !DILocation(line: 921, column: 33, scope: !3528)
!3543 = !DILocation(line: 921, column: 63, scope: !3528)
!3544 = !DILocation(line: 921, column: 4, scope: !3528)
!3545 = !DILocation(line: 921, column: 31, scope: !3528)
!3546 = !DILocation(line: 922, column: 24, scope: !3528)
!3547 = !DILocation(line: 923, column: 10, scope: !3528)
!3548 = !DILocation(line: 922, column: 4, scope: !3528)
!3549 = !DILocation(line: 925, column: 30, scope: !3528)
!3550 = !DILocation(line: 925, column: 4, scope: !3528)
!3551 = !DILocation(line: 928, column: 36, scope: !3528)
!3552 = !DILocation(line: 928, column: 4, scope: !3528)
!3553 = !DILocation(line: 928, column: 34, scope: !3528)
!3554 = !DILocation(line: 930, column: 30, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3528, file: !1, line: 930, column: 8)
!3556 = !DILocation(line: 930, column: 9, scope: !3555)
!3557 = !DILocation(line: 930, column: 8, scope: !3528)
!3558 = !DILocation(line: 932, column: 37, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3555, file: !1, line: 931, column: 6)
!3560 = !DILocation(line: 933, column: 3, scope: !3559)
!3561 = !DILocation(line: 932, column: 35, scope: !3559)
!3562 = !DILocation(line: 934, column: 34, scope: !3559)
!3563 = !DILocation(line: 934, column: 8, scope: !3559)
!3564 = !DILocation(line: 940, column: 3, scope: !3559)
!3565 = !DILocation(line: 940, column: 33, scope: !3559)
!3566 = !DILocation(line: 939, column: 38, scope: !3559)
!3567 = !DILocation(line: 941, column: 6, scope: !3559)
!3568 = !DILocation(line: 944, column: 30, scope: !3528)
!3569 = !DILocation(line: 944, column: 11, scope: !3528)
!3570 = !DILocation(line: 945, column: 30, scope: !3528)
!3571 = !DILocation(line: 945, column: 11, scope: !3528)
!3572 = !DILocation(line: 947, column: 11, scope: !3528)
!3573 = !DILocation(line: 948, column: 22, scope: !3528)
!3574 = !DILocation(line: 948, column: 11, scope: !3528)
!3575 = !DILocation(line: 949, column: 22, scope: !3528)
!3576 = !DILocation(line: 949, column: 11, scope: !3528)
!3577 = !DILocation(line: 950, column: 18, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !1, line: 950, column: 4)
!3579 = distinct !DILexicalBlock(scope: !3528, file: !1, line: 950, column: 4)
!3580 = !DILocation(line: 950, column: 9, scope: !3579)
!3581 = !DILocation(line: 0, scope: !3579)
!3582 = !DILocation(line: 950, column: 4, scope: !3579)
!3583 = !DILocation(line: 952, column: 4, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3528, file: !1, line: 952, column: 4)
!3585 = !DILocation(line: 951, column: 6, scope: !3578)
!3586 = !DILocation(line: 951, column: 40, scope: !3578)
!3587 = !DILocation(line: 950, column: 28, scope: !3578)
!3588 = !DILocation(line: 950, column: 4, scope: !3578)
!3589 = distinct !{!3589, !3582, !3590}
!3590 = !DILocation(line: 951, column: 43, scope: !3579)
!3591 = !DILocation(line: 0, scope: !3584)
!3592 = !DILocation(line: 952, column: 18, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3584, file: !1, line: 952, column: 4)
!3594 = !DILocation(line: 953, column: 6, scope: !3593)
!3595 = !DILocation(line: 953, column: 50, scope: !3593)
!3596 = !DILocation(line: 952, column: 33, scope: !3593)
!3597 = !DILocation(line: 952, column: 4, scope: !3593)
!3598 = distinct !{!3598, !3583, !3599}
!3599 = !DILocation(line: 953, column: 53, scope: !3584)
!3600 = !DILocation(line: 954, column: 31, scope: !3528)
!3601 = !DILocation(line: 955, column: 34, scope: !3528)
!3602 = !DILocation(line: 957, column: 20, scope: !3527)
!3603 = !DILocation(line: 957, column: 9, scope: !3527)
!3604 = !DILocation(line: 957, column: 8, scope: !3528)
!3605 = !DILocation(line: 960, column: 33, scope: !3532)
!3606 = !DILocation(line: 960, column: 8, scope: !3532)
!3607 = !DILocation(line: 960, column: 31, scope: !3532)
!3608 = !DILocation(line: 961, column: 37, scope: !3532)
!3609 = !DILocation(line: 962, column: 6, scope: !3532)
!3610 = !DILocation(line: 911, column: 22, scope: !3529)
!3611 = !DILocation(line: 910, column: 7, scope: !3529)
!3612 = distinct !{!3612, !3535, !3613}
!3613 = !DILocation(line: 963, column: 2, scope: !3530)
!3614 = !DILocation(line: 842, column: 27, scope: !3387)
!3615 = !DILocation(line: 842, column: 3, scope: !3387)
!3616 = distinct !{!3616, !3389, !3617}
!3617 = !DILocation(line: 964, column: 5, scope: !3388)
!3618 = !DILocation(line: 0, scope: !3429)
!3619 = !DILocation(line: 965, column: 17, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3429, file: !1, line: 965, column: 3)
!3621 = !DILocation(line: 967, column: 21, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3620, file: !1, line: 966, column: 5)
!3623 = !DILocation(line: 970, column: 11, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3622, file: !1, line: 970, column: 11)
!3625 = !DILocation(line: 970, column: 24, scope: !3624)
!3626 = !DILocation(line: 970, column: 11, scope: !3622)
!3627 = !DILocation(line: 972, column: 4, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3624, file: !1, line: 971, column: 2)
!3629 = !DILocation(line: 972, column: 26, scope: !3628)
!3630 = !DILocation(line: 973, column: 15, scope: !3628)
!3631 = !DILocation(line: 974, column: 35, scope: !3628)
!3632 = !DILocation(line: 974, column: 33, scope: !3628)
!3633 = !DILocation(line: 975, column: 33, scope: !3628)
!3634 = !DILocation(line: 976, column: 2, scope: !3628)
!3635 = !DILocation(line: 965, column: 27, scope: !3620)
!3636 = !DILocation(line: 965, column: 3, scope: !3620)
!3637 = distinct !{!3637, !3428, !3638}
!3638 = !DILocation(line: 977, column: 5, scope: !3429)
!3639 = !DILocation(line: 978, column: 3, scope: !3327)
!3640 = distinct !DISubprogram(name: "lambda_vector_zerop", scope: !471, file: !471, line: 307, type: !3641, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3643)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{!462, !476, !463}
!3643 = !{!3644, !3645, !3646}
!3644 = !DILocalVariable(name: "vec1", arg: 1, scope: !3640, file: !471, line: 307, type: !476)
!3645 = !DILocalVariable(name: "size", arg: 2, scope: !3640, file: !471, line: 307, type: !463)
!3646 = !DILocalVariable(name: "i", scope: !3640, file: !471, line: 309, type: !463)
!3647 = !DILocation(line: 0, scope: !3640)
!3648 = !DILocation(line: 310, column: 8, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3640, file: !471, line: 310, column: 3)
!3650 = !DILocation(line: 0, scope: !3649)
!3651 = !DILocation(line: 310, column: 17, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3649, file: !471, line: 310, column: 3)
!3653 = !DILocation(line: 310, column: 3, scope: !3649)
!3654 = !DILocation(line: 311, column: 9, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3652, file: !471, line: 311, column: 9)
!3656 = !DILocation(line: 311, column: 17, scope: !3655)
!3657 = !DILocation(line: 311, column: 9, scope: !3652)
!3658 = !DILocation(line: 310, column: 26, scope: !3652)
!3659 = !DILocation(line: 310, column: 3, scope: !3652)
!3660 = distinct !{!3660, !3653, !3661}
!3661 = !DILocation(line: 312, column: 14, scope: !3649)
!3662 = !DILocation(line: 314, column: 1, scope: !3640)
!3663 = distinct !DISubprogram(name: "find_induction_var_from_exit_cond", scope: !1, file: !1, line: 1438, type: !3664, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3666)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!505, !1044}
!3666 = !{!3667, !3668, !3669, !3670, !3671}
!3667 = !DILocalVariable(name: "loop", arg: 1, scope: !3663, file: !1, line: 1438, type: !1044)
!3668 = !DILocalVariable(name: "expr", scope: !3663, file: !1, line: 1440, type: !829)
!3669 = !DILocalVariable(name: "ivarop", scope: !3663, file: !1, line: 1441, type: !505)
!3670 = !DILocalVariable(name: "test_lhs", scope: !3663, file: !1, line: 1442, type: !505)
!3671 = !DILocalVariable(name: "test_rhs", scope: !3663, file: !1, line: 1442, type: !505)
!3672 = !DILocation(line: 0, scope: !3663)
!3673 = !DILocation(line: 1440, column: 17, scope: !3663)
!3674 = !DILocation(line: 1443, column: 12, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3663, file: !1, line: 1443, column: 7)
!3676 = !DILocation(line: 1443, column: 7, scope: !3663)
!3677 = !DILocation(line: 1445, column: 7, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3663, file: !1, line: 1445, column: 7)
!3679 = !DILocation(line: 1445, column: 26, scope: !3678)
!3680 = !DILocation(line: 1445, column: 7, scope: !3663)
!3681 = !DILocation(line: 1447, column: 14, scope: !3663)
!3682 = !DILocation(line: 1448, column: 14, scope: !3663)
!3683 = !DILocation(line: 1453, column: 7, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3663, file: !1, line: 1453, column: 7)
!3685 = !DILocation(line: 1453, column: 7, scope: !3663)
!3686 = !DILocation(line: 1455, column: 12, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3684, file: !1, line: 1455, column: 12)
!3688 = !DILocation(line: 1455, column: 12, scope: !3684)
!3689 = !DILocation(line: 0, scope: !3684)
!3690 = !DILocation(line: 1460, column: 7, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3663, file: !1, line: 1460, column: 7)
!3692 = !DILocation(line: 1460, column: 26, scope: !3691)
!3693 = !DILocation(line: 1463, column: 1, scope: !3663)
!3694 = distinct !DISubprogram(name: "gimple_code", scope: !389, file: !389, line: 1052, type: !3695, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3698)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!388, !3697}
!3697 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !506, line: 60, baseType: !1868)
!3698 = !{!3699}
!3699 = !DILocalVariable(name: "g", arg: 1, scope: !3694, file: !389, line: 1052, type: !3697)
!3700 = !DILocation(line: 0, scope: !3694)
!3701 = !DILocation(line: 1054, column: 20, scope: !3694)
!3702 = !DILocation(line: 1054, column: 3, scope: !3694)
!3703 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !389, file: !389, line: 2241, type: !3704, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3706)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!505, !3697}
!3706 = !{!3707}
!3707 = !DILocalVariable(name: "gs", arg: 1, scope: !3703, file: !389, line: 2241, type: !3697)
!3708 = !DILocation(line: 0, scope: !3703)
!3709 = !DILocation(line: 2244, column: 10, scope: !3703)
!3710 = !DILocation(line: 2244, column: 3, scope: !3703)
!3711 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !389, file: !389, line: 2271, type: !3704, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3712)
!3712 = !{!3713}
!3713 = !DILocalVariable(name: "gs", arg: 1, scope: !3711, file: !389, line: 2271, type: !3697)
!3714 = !DILocation(line: 0, scope: !3711)
!3715 = !DILocation(line: 2274, column: 10, scope: !3711)
!3716 = !DILocation(line: 2274, column: 3, scope: !3711)
!3717 = distinct !DISubprogram(name: "gcc_loopnest_to_lambda_loopnest", scope: !1, file: !1, line: 1476, type: !3718, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3721)
!3718 = !DISubroutineType(types: !3719)
!3719 = !{!489, !1044, !3720, !3720, !2483}
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737}
!3722 = !DILocalVariable(name: "loop_nest", arg: 1, scope: !3717, file: !1, line: 1476, type: !1044)
!3723 = !DILocalVariable(name: "inductionvars", arg: 2, scope: !3717, file: !1, line: 1477, type: !3720)
!3724 = !DILocalVariable(name: "invariants", arg: 3, scope: !3717, file: !1, line: 1478, type: !3720)
!3725 = !DILocalVariable(name: "lambda_obstack", arg: 4, scope: !3717, file: !1, line: 1479, type: !2483)
!3726 = !DILocalVariable(name: "ret", scope: !3717, file: !1, line: 1481, type: !489)
!3727 = !DILocalVariable(name: "temp", scope: !3717, file: !1, line: 1482, type: !1044)
!3728 = !DILocalVariable(name: "depth", scope: !3717, file: !1, line: 1483, type: !463)
!3729 = !DILocalVariable(name: "i", scope: !3717, file: !1, line: 1484, type: !974)
!3730 = !DILocalVariable(name: "loops", scope: !3717, file: !1, line: 1485, type: !1888)
!3731 = !DILocalVariable(name: "uboundvars", scope: !3717, file: !1, line: 1486, type: !1870)
!3732 = !DILocalVariable(name: "lboundvars", scope: !3717, file: !1, line: 1487, type: !1870)
!3733 = !DILocalVariable(name: "steps", scope: !3717, file: !1, line: 1488, type: !1875)
!3734 = !DILocalVariable(name: "newloop", scope: !3717, file: !1, line: 1489, type: !495)
!3735 = !DILocalVariable(name: "inductionvar", scope: !3717, file: !1, line: 1490, type: !505)
!3736 = !DILocalVariable(name: "perfect_nest", scope: !3717, file: !1, line: 1491, type: !462)
!3737 = !DILabel(scope: !3717, name: "fail", file: !1, line: 1530)
!3738 = !DILocation(line: 0, scope: !3717)
!3739 = !DILocation(line: 1483, column: 15, scope: !3717)
!3740 = !DILocation(line: 1485, column: 3, scope: !3717)
!3741 = !DILocation(line: 1485, column: 26, scope: !3717)
!3742 = !DILocation(line: 1486, column: 3, scope: !3717)
!3743 = !DILocation(line: 1486, column: 19, scope: !3717)
!3744 = !DILocation(line: 1487, column: 3, scope: !3717)
!3745 = !DILocation(line: 1487, column: 19, scope: !3717)
!3746 = !DILocation(line: 1488, column: 3, scope: !3717)
!3747 = !DILocation(line: 1488, column: 18, scope: !3717)
!3748 = !DILocation(line: 1489, column: 3, scope: !3717)
!3749 = !DILocation(line: 1490, column: 3, scope: !3717)
!3750 = !DILocation(line: 1490, column: 8, scope: !3717)
!3751 = !DILocation(line: 1491, column: 23, scope: !3717)
!3752 = !DILocation(line: 1493, column: 8, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3717, file: !1, line: 1493, column: 7)
!3754 = !DILocation(line: 1493, column: 21, scope: !3753)
!3755 = !DILocation(line: 1493, column: 25, scope: !3753)
!3756 = !DILocation(line: 1493, column: 7, scope: !3717)
!3757 = !DILocation(line: 1496, column: 3, scope: !3717)
!3758 = !DILocation(line: 1499, column: 22, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3717, file: !1, line: 1497, column: 5)
!3760 = !DILocation(line: 1498, column: 17, scope: !3759)
!3761 = !DILocation(line: 1498, column: 15, scope: !3759)
!3762 = !DILocation(line: 1502, column: 12, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1502, column: 11)
!3764 = !DILocation(line: 1502, column: 11, scope: !3759)
!3765 = !DILocation(line: 1505, column: 7, scope: !3759)
!3766 = !DILocation(line: 1506, column: 7, scope: !3759)
!3767 = !DILocation(line: 1507, column: 20, scope: !3759)
!3768 = distinct !{!3768, !3757, !3769}
!3769 = !DILocation(line: 1508, column: 5, scope: !3717)
!3770 = !DILocation(line: 1510, column: 7, scope: !3717)
!3771 = !DILocation(line: 1512, column: 40, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !1, line: 1512, column: 11)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !1, line: 1511, column: 5)
!3774 = distinct !DILexicalBlock(scope: !3717, file: !1, line: 1510, column: 7)
!3775 = !DILocation(line: 1512, column: 52, scope: !3772)
!3776 = !DILocation(line: 1512, column: 64, scope: !3772)
!3777 = !DILocation(line: 1513, column: 8, scope: !3772)
!3778 = !DILocation(line: 1512, column: 12, scope: !3772)
!3779 = !DILocation(line: 0, scope: !3772)
!3780 = !DILocation(line: 1512, column: 11, scope: !3773)
!3781 = !DILocation(line: 1515, column: 8, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3772, file: !1, line: 1514, column: 2)
!3783 = !DILocation(line: 1516, column: 6, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3782, file: !1, line: 1515, column: 8)
!3785 = !DILocation(line: 1520, column: 16, scope: !3772)
!3786 = !DILocation(line: 1521, column: 2, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3772, file: !1, line: 1520, column: 16)
!3788 = !DILocation(line: 1525, column: 39, scope: !3717)
!3789 = !DILocation(line: 1525, column: 9, scope: !3717)
!3790 = !DILocation(line: 0, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !1, line: 1527, column: 3)
!3792 = distinct !DILexicalBlock(scope: !3717, file: !1, line: 1527, column: 3)
!3793 = !DILocation(line: 1527, column: 8, scope: !3792)
!3794 = !DILocation(line: 0, scope: !3792)
!3795 = !DILocation(line: 1527, column: 15, scope: !3791)
!3796 = !DILocation(line: 1527, column: 3, scope: !3792)
!3797 = !DILocation(line: 1528, column: 25, scope: !3791)
!3798 = !DILocation(line: 1528, column: 5, scope: !3791)
!3799 = !DILocation(line: 1528, column: 23, scope: !3791)
!3800 = !DILocation(line: 1527, column: 62, scope: !3791)
!3801 = !DILocation(line: 1527, column: 3, scope: !3791)
!3802 = distinct !{!3802, !3796, !3803}
!3803 = !DILocation(line: 1528, column: 25, scope: !3792)
!3804 = !DILocation(line: 1531, column: 3, scope: !3717)
!3805 = !DILocation(line: 1530, column: 2, scope: !3717)
!3806 = !DILocation(line: 1532, column: 3, scope: !3717)
!3807 = !DILocation(line: 1533, column: 3, scope: !3717)
!3808 = !DILocation(line: 1534, column: 3, scope: !3717)
!3809 = !DILocation(line: 1537, column: 1, scope: !3717)
!3810 = !DILocation(line: 1536, column: 3, scope: !3717)
!3811 = distinct !DISubprogram(name: "depth_of_nest", scope: !1, file: !1, line: 1191, type: !3812, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3814)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!463, !1044}
!3814 = !{!3815, !3816}
!3815 = !DILocalVariable(name: "nest", arg: 1, scope: !3811, file: !1, line: 1191, type: !1044)
!3816 = !DILocalVariable(name: "depth", scope: !3811, file: !1, line: 1193, type: !974)
!3817 = !DILocation(line: 0, scope: !3811)
!3818 = !DILocation(line: 1194, column: 3, scope: !3811)
!3819 = !DILocation(line: 1196, column: 12, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3811, file: !1, line: 1195, column: 5)
!3821 = !DILocation(line: 1197, column: 20, scope: !3820)
!3822 = distinct !{!3822, !3818, !3823}
!3823 = !DILocation(line: 1198, column: 5, scope: !3811)
!3824 = !DILocation(line: 1199, column: 10, scope: !3811)
!3825 = !DILocation(line: 1199, column: 3, scope: !3811)
!3826 = distinct !DISubprogram(name: "perfect_nest_p", scope: !1, file: !1, line: 1981, type: !3827, scopeLine: 1982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3829)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!462, !1044}
!3829 = !{!3830, !3831, !3833, !3834, !3835, !3847, !3851}
!3830 = !DILocalVariable(name: "loop", arg: 1, scope: !3826, file: !1, line: 1981, type: !1044)
!3831 = !DILocalVariable(name: "bbs", scope: !3826, file: !1, line: 1983, type: !3832)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!3833 = !DILocalVariable(name: "i", scope: !3826, file: !1, line: 1984, type: !974)
!3834 = !DILocalVariable(name: "exit_cond", scope: !3826, file: !1, line: 1985, type: !829)
!3835 = !DILocalVariable(name: "bsi", scope: !3836, file: !1, line: 1998, type: !3841)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !1, line: 1997, column: 2)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !1, line: 1996, column: 11)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !1, line: 1995, column: 5)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !1, line: 1994, column: 3)
!3840 = distinct !DILexicalBlock(scope: !3826, file: !1, line: 1994, column: 3)
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !389, line: 265, baseType: !3842)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !389, line: 254, size: 192, elements: !3843)
!3843 = !{!3844, !3845, !3846}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3842, file: !389, line: 257, baseType: !824, size: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3842, file: !389, line: 263, baseType: !819, size: 64, offset: 64)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3842, file: !389, line: 264, baseType: !1281, size: 64, offset: 128)
!3847 = !DILocalVariable(name: "stmt", scope: !3848, file: !1, line: 2002, type: !829)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !1, line: 2001, column: 6)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !1, line: 2000, column: 4)
!3850 = distinct !DILexicalBlock(scope: !3836, file: !1, line: 2000, column: 4)
!3851 = !DILabel(scope: !3848, name: "non_perfectly_nested", file: !1, line: 2013)
!3852 = !DILocation(line: 0, scope: !3826)
!3853 = !DILocation(line: 1988, column: 14, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3826, file: !1, line: 1988, column: 7)
!3855 = !DILocation(line: 1988, column: 8, scope: !3854)
!3856 = !DILocation(line: 1988, column: 7, scope: !3826)
!3857 = !DILocation(line: 1991, column: 9, scope: !3826)
!3858 = !DILocation(line: 1992, column: 15, scope: !3826)
!3859 = !DILocation(line: 0, scope: !3839)
!3860 = !DILocation(line: 0, scope: !3836)
!3861 = !DILocation(line: 0, scope: !3850)
!3862 = !DILocation(line: 0, scope: !3848)
!3863 = !DILocation(line: 1994, column: 8, scope: !3840)
!3864 = !DILocation(line: 0, scope: !3840)
!3865 = !DILocation(line: 1994, column: 25, scope: !3839)
!3866 = !DILocation(line: 1994, column: 19, scope: !3839)
!3867 = !DILocation(line: 1994, column: 17, scope: !3839)
!3868 = !DILocation(line: 1994, column: 3, scope: !3840)
!3869 = !DILocation(line: 1996, column: 11, scope: !3837)
!3870 = !DILocation(line: 1996, column: 19, scope: !3837)
!3871 = !DILocation(line: 1996, column: 31, scope: !3837)
!3872 = !DILocation(line: 1996, column: 11, scope: !3838)
!3873 = !DILocation(line: 1998, column: 4, scope: !3836)
!3874 = !DILocation(line: 2000, column: 15, scope: !3850)
!3875 = !DILocation(line: 2000, column: 9, scope: !3850)
!3876 = !DILocation(line: 2000, column: 39, scope: !3849)
!3877 = !DILocation(line: 2000, column: 38, scope: !3849)
!3878 = !DILocation(line: 2000, column: 4, scope: !3850)
!3879 = !DILocation(line: 2002, column: 22, scope: !3848)
!3880 = !DILocation(line: 2004, column: 12, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3848, file: !1, line: 2004, column: 12)
!3882 = !DILocation(line: 2004, column: 31, scope: !3881)
!3883 = !DILocation(line: 2005, column: 18, scope: !3881)
!3884 = !DILocation(line: 2005, column: 5, scope: !3881)
!3885 = !DILocation(line: 2008, column: 17, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3848, file: !1, line: 2008, column: 12)
!3887 = !DILocation(line: 2009, column: 5, scope: !3886)
!3888 = !DILocation(line: 2009, column: 8, scope: !3886)
!3889 = !DILocation(line: 2010, column: 5, scope: !3886)
!3890 = !DILocation(line: 2010, column: 8, scope: !3886)
!3891 = !DILocation(line: 2008, column: 12, scope: !3848)
!3892 = !DILocation(line: 2013, column: 6, scope: !3848)
!3893 = !DILocation(line: 2014, column: 8, scope: !3848)
!3894 = !DILocation(line: 2015, column: 8, scope: !3848)
!3895 = !DILocation(line: 2000, column: 56, scope: !3849)
!3896 = !DILocation(line: 2000, column: 4, scope: !3849)
!3897 = distinct !{!3897, !3878, !3898}
!3898 = !DILocation(line: 2016, column: 6, scope: !3850)
!3899 = !DILocation(line: 2017, column: 2, scope: !3837)
!3900 = !DILocation(line: 1994, column: 37, scope: !3839)
!3901 = !DILocation(line: 1994, column: 3, scope: !3839)
!3902 = distinct !{!3902, !3868, !3903}
!3903 = !DILocation(line: 2018, column: 5, scope: !3840)
!3904 = !DILocation(line: 2020, column: 3, scope: !3826)
!3905 = !DILocation(line: 2022, column: 32, scope: !3826)
!3906 = !DILocation(line: 2022, column: 10, scope: !3826)
!3907 = !DILocation(line: 2022, column: 3, scope: !3826)
!3908 = !DILocation(line: 2023, column: 1, scope: !3826)
!3909 = distinct !DISubprogram(name: "can_convert_to_perfect_nest", scope: !1, file: !1, line: 2318, type: !3827, scopeLine: 2319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3910)
!3910 = !{!3911, !3912, !3913, !3914, !3915}
!3911 = !DILocalVariable(name: "loop", arg: 1, scope: !3909, file: !1, line: 2318, type: !1044)
!3912 = !DILocalVariable(name: "bbs", scope: !3909, file: !1, line: 2320, type: !3832)
!3913 = !DILocalVariable(name: "i", scope: !3909, file: !1, line: 2321, type: !974)
!3914 = !DILocalVariable(name: "si", scope: !3909, file: !1, line: 2322, type: !3841)
!3915 = !DILabel(scope: !3909, name: "fail", file: !1, line: 2345)
!3916 = !DILocation(line: 0, scope: !3909)
!3917 = !DILocation(line: 2322, column: 3, scope: !3909)
!3918 = !DILocation(line: 2325, column: 14, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3909, file: !1, line: 2325, column: 7)
!3920 = !DILocation(line: 2325, column: 8, scope: !3919)
!3921 = !DILocation(line: 2325, column: 20, scope: !3919)
!3922 = !DILocation(line: 2325, column: 36, scope: !3919)
!3923 = !DILocation(line: 2325, column: 23, scope: !3919)
!3924 = !DILocation(line: 2325, column: 7, scope: !3909)
!3925 = !DILocation(line: 2328, column: 9, scope: !3909)
!3926 = !DILocation(line: 0, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !1, line: 2329, column: 3)
!3928 = distinct !DILexicalBlock(scope: !3909, file: !1, line: 2329, column: 3)
!3929 = !DILocation(line: 2329, column: 8, scope: !3928)
!3930 = !DILocation(line: 0, scope: !3928)
!3931 = !DILocation(line: 2329, column: 25, scope: !3927)
!3932 = !DILocation(line: 2329, column: 19, scope: !3927)
!3933 = !DILocation(line: 2329, column: 17, scope: !3927)
!3934 = !DILocation(line: 2329, column: 3, scope: !3928)
!3935 = !DILocation(line: 2330, column: 9, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3927, file: !1, line: 2330, column: 9)
!3937 = !DILocation(line: 2330, column: 17, scope: !3936)
!3938 = !DILocation(line: 2330, column: 29, scope: !3936)
!3939 = !DILocation(line: 2331, column: 2, scope: !3936)
!3940 = !DILocation(line: 2331, column: 5, scope: !3936)
!3941 = !DILocation(line: 2330, column: 9, scope: !3927)
!3942 = !DILocation(line: 2329, column: 37, scope: !3927)
!3943 = !DILocation(line: 2329, column: 3, scope: !3927)
!3944 = distinct !{!3944, !3934, !3945}
!3945 = !DILocation(line: 2332, column: 12, scope: !3928)
!3946 = !DILocation(line: 2336, column: 13, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3909, file: !1, line: 2336, column: 3)
!3948 = !DILocation(line: 2336, column: 29, scope: !3947)
!3949 = !DILocation(line: 2336, column: 49, scope: !3947)
!3950 = !DILocation(line: 2336, column: 8, scope: !3947)
!3951 = !DILocation(line: 2337, column: 9, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3947, file: !1, line: 2336, column: 3)
!3953 = !DILocation(line: 2337, column: 8, scope: !3952)
!3954 = !DILocation(line: 2336, column: 3, scope: !3947)
!3955 = !DILocation(line: 2339, column: 30, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3952, file: !1, line: 2339, column: 9)
!3957 = !DILocation(line: 2339, column: 9, scope: !3956)
!3958 = !DILocation(line: 2339, column: 45, scope: !3956)
!3959 = !DILocation(line: 2339, column: 9, scope: !3952)
!3960 = !DILocation(line: 2338, column: 8, scope: !3952)
!3961 = !DILocation(line: 2336, column: 3, scope: !3952)
!3962 = distinct !{!3962, !3954, !3963}
!3963 = !DILocation(line: 2340, column: 12, scope: !3947)
!3964 = !DILocation(line: 2342, column: 9, scope: !3909)
!3965 = !DILocation(line: 2342, column: 3, scope: !3909)
!3966 = !DILocation(line: 2343, column: 3, scope: !3909)
!3967 = !DILocation(line: 2346, column: 9, scope: !3909)
!3968 = !DILocation(line: 2345, column: 2, scope: !3909)
!3969 = !DILocation(line: 2346, column: 3, scope: !3909)
!3970 = !DILocation(line: 2347, column: 3, scope: !3909)
!3971 = !DILocation(line: 2348, column: 1, scope: !3909)
!3972 = distinct !DISubprogram(name: "gcc_loop_to_lambda_loop", scope: !1, file: !1, line: 1228, type: !3973, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3976)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!495, !1044, !463, !3720, !863, !1870, !3720, !3720, !3975, !2483}
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!3976 = !{!3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001}
!3977 = !DILocalVariable(name: "loop", arg: 1, scope: !3972, file: !1, line: 1228, type: !1044)
!3978 = !DILocalVariable(name: "depth", arg: 2, scope: !3972, file: !1, line: 1228, type: !463)
!3979 = !DILocalVariable(name: "invariants", arg: 3, scope: !3972, file: !1, line: 1229, type: !3720)
!3980 = !DILocalVariable(name: "ourinductionvar", arg: 4, scope: !3972, file: !1, line: 1230, type: !863)
!3981 = !DILocalVariable(name: "outerinductionvars", arg: 5, scope: !3972, file: !1, line: 1231, type: !1870)
!3982 = !DILocalVariable(name: "lboundvars", arg: 6, scope: !3972, file: !1, line: 1232, type: !3720)
!3983 = !DILocalVariable(name: "uboundvars", arg: 7, scope: !3972, file: !1, line: 1233, type: !3720)
!3984 = !DILocalVariable(name: "steps", arg: 8, scope: !3972, file: !1, line: 1234, type: !3975)
!3985 = !DILocalVariable(name: "lambda_obstack", arg: 9, scope: !3972, file: !1, line: 1235, type: !2483)
!3986 = !DILocalVariable(name: "phi", scope: !3972, file: !1, line: 1237, type: !829)
!3987 = !DILocalVariable(name: "exit_cond", scope: !3972, file: !1, line: 1238, type: !829)
!3988 = !DILocalVariable(name: "access_fn", scope: !3972, file: !1, line: 1239, type: !505)
!3989 = !DILocalVariable(name: "inductionvar", scope: !3972, file: !1, line: 1239, type: !505)
!3990 = !DILocalVariable(name: "step", scope: !3972, file: !1, line: 1240, type: !505)
!3991 = !DILocalVariable(name: "lloop", scope: !3972, file: !1, line: 1241, type: !495)
!3992 = !DILocalVariable(name: "lbound", scope: !3972, file: !1, line: 1242, type: !480)
!3993 = !DILocalVariable(name: "ubound", scope: !3972, file: !1, line: 1242, type: !480)
!3994 = !DILocalVariable(name: "test_lhs", scope: !3972, file: !1, line: 1243, type: !505)
!3995 = !DILocalVariable(name: "test_rhs", scope: !3972, file: !1, line: 1243, type: !505)
!3996 = !DILocalVariable(name: "stepint", scope: !3972, file: !1, line: 1244, type: !463)
!3997 = !DILocalVariable(name: "extra", scope: !3972, file: !1, line: 1245, type: !463)
!3998 = !DILocalVariable(name: "lboundvar", scope: !3972, file: !1, line: 1246, type: !505)
!3999 = !DILocalVariable(name: "uboundvar", scope: !3972, file: !1, line: 1246, type: !505)
!4000 = !DILocalVariable(name: "uboundresult", scope: !3972, file: !1, line: 1246, type: !505)
!4001 = !DILocalVariable(name: "op", scope: !4002, file: !1, line: 1273, type: !505)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !1, line: 1272, column: 5)
!4003 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1271, column: 7)
!4004 = !DILocation(line: 0, scope: !3972)
!4005 = !DILocation(line: 1249, column: 18, scope: !3972)
!4006 = !DILocation(line: 1250, column: 15, scope: !3972)
!4007 = !DILocation(line: 1252, column: 20, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1252, column: 7)
!4009 = !DILocation(line: 1252, column: 41, scope: !4008)
!4010 = !DILocation(line: 1252, column: 28, scope: !4008)
!4011 = !DILocation(line: 1254, column: 11, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !1, line: 1254, column: 11)
!4013 = distinct !DILexicalBlock(scope: !4008, file: !1, line: 1253, column: 5)
!4014 = !DILocation(line: 1254, column: 21, scope: !4012)
!4015 = !DILocation(line: 1254, column: 25, scope: !4012)
!4016 = !DILocation(line: 1254, column: 36, scope: !4012)
!4017 = !DILocation(line: 1254, column: 11, scope: !4013)
!4018 = !DILocation(line: 1255, column: 2, scope: !4012)
!4019 = !DILocation(line: 1260, column: 7, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1260, column: 7)
!4021 = !DILocation(line: 1260, column: 40, scope: !4020)
!4022 = !DILocation(line: 1260, column: 7, scope: !3972)
!4023 = !DILocation(line: 1263, column: 11, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !1, line: 1263, column: 11)
!4025 = distinct !DILexicalBlock(scope: !4020, file: !1, line: 1261, column: 5)
!4026 = !DILocation(line: 1263, column: 21, scope: !4024)
!4027 = !DILocation(line: 1263, column: 25, scope: !4024)
!4028 = !DILocation(line: 1263, column: 36, scope: !4024)
!4029 = !DILocation(line: 1263, column: 11, scope: !4025)
!4030 = !DILocation(line: 1264, column: 2, scope: !4024)
!4031 = !DILocation(line: 1271, column: 7, scope: !4003)
!4032 = !DILocation(line: 1271, column: 25, scope: !4003)
!4033 = !DILocation(line: 1271, column: 7, scope: !3972)
!4034 = !DILocation(line: 1273, column: 17, scope: !4002)
!4035 = !DILocation(line: 0, scope: !4002)
!4036 = !DILocation(line: 1274, column: 12, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 1274, column: 11)
!4038 = !DILocation(line: 1274, column: 11, scope: !4002)
!4039 = !DILocation(line: 1277, column: 8, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !1, line: 1277, column: 8)
!4041 = distinct !DILexicalBlock(scope: !4037, file: !1, line: 1275, column: 2)
!4042 = !DILocation(line: 1277, column: 18, scope: !4040)
!4043 = !DILocation(line: 1277, column: 22, scope: !4040)
!4044 = !DILocation(line: 1277, column: 33, scope: !4040)
!4045 = !DILocation(line: 1277, column: 8, scope: !4041)
!4046 = !DILocation(line: 1278, column: 6, scope: !4040)
!4047 = !DILocation(line: 1284, column: 13, scope: !4002)
!4048 = !DILocation(line: 1285, column: 11, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 1285, column: 11)
!4050 = !DILocation(line: 1285, column: 29, scope: !4049)
!4051 = !DILocation(line: 1285, column: 11, scope: !4002)
!4052 = !DILocation(line: 1287, column: 8, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !1, line: 1287, column: 8)
!4054 = distinct !DILexicalBlock(scope: !4049, file: !1, line: 1286, column: 2)
!4055 = !DILocation(line: 1287, column: 18, scope: !4053)
!4056 = !DILocation(line: 1287, column: 22, scope: !4053)
!4057 = !DILocation(line: 1287, column: 33, scope: !4053)
!4058 = !DILocation(line: 1287, column: 8, scope: !4054)
!4059 = !DILocation(line: 1288, column: 6, scope: !4053)
!4060 = !DILocation(line: 1296, column: 22, scope: !3972)
!4061 = !DILocation(line: 1296, column: 20, scope: !3972)
!4062 = !DILocation(line: 1298, column: 44, scope: !3972)
!4063 = !DILocation(line: 1298, column: 12, scope: !3972)
!4064 = !DILocation(line: 1297, column: 15, scope: !3972)
!4065 = !DILocation(line: 1299, column: 20, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1299, column: 7)
!4067 = !DILocation(line: 1299, column: 17, scope: !4066)
!4068 = !DILocation(line: 1299, column: 7, scope: !3972)
!4069 = !DILocation(line: 1301, column: 11, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !1, line: 1301, column: 11)
!4071 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 1300, column: 5)
!4072 = !DILocation(line: 1301, column: 21, scope: !4070)
!4073 = !DILocation(line: 1301, column: 25, scope: !4070)
!4074 = !DILocation(line: 1301, column: 36, scope: !4070)
!4075 = !DILocation(line: 1301, column: 11, scope: !4071)
!4076 = !DILocation(line: 1302, column: 2, scope: !4070)
!4077 = !DILocation(line: 1308, column: 55, scope: !3972)
!4078 = !DILocation(line: 1308, column: 10, scope: !3972)
!4079 = !DILocation(line: 1309, column: 8, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1309, column: 7)
!4081 = !DILocation(line: 1309, column: 24, scope: !4080)
!4082 = !DILocation(line: 1309, column: 21, scope: !4080)
!4083 = !DILocation(line: 1309, column: 13, scope: !4080)
!4084 = !DILocation(line: 1311, column: 11, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !1, line: 1311, column: 11)
!4086 = distinct !DILexicalBlock(scope: !4080, file: !1, line: 1310, column: 5)
!4087 = !DILocation(line: 1311, column: 21, scope: !4085)
!4088 = !DILocation(line: 1311, column: 25, scope: !4085)
!4089 = !DILocation(line: 1311, column: 36, scope: !4085)
!4090 = !DILocation(line: 1311, column: 11, scope: !4086)
!4091 = !DILocation(line: 1312, column: 2, scope: !4085)
!4092 = !DILocation(line: 1317, column: 7, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1317, column: 7)
!4094 = !DILocation(line: 1317, column: 24, scope: !4093)
!4095 = !DILocation(line: 1317, column: 7, scope: !3972)
!4096 = !DILocation(line: 1320, column: 11, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !1, line: 1320, column: 11)
!4098 = distinct !DILexicalBlock(scope: !4093, file: !1, line: 1318, column: 5)
!4099 = !DILocation(line: 1320, column: 21, scope: !4097)
!4100 = !DILocation(line: 1320, column: 25, scope: !4097)
!4101 = !DILocation(line: 1320, column: 36, scope: !4097)
!4102 = !DILocation(line: 1320, column: 11, scope: !4098)
!4103 = !DILocation(line: 1321, column: 2, scope: !4097)
!4104 = !DILocation(line: 1326, column: 13, scope: !3972)
!4105 = !DILocation(line: 1330, column: 7, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1330, column: 7)
!4107 = !DILocation(line: 1330, column: 33, scope: !4106)
!4108 = !DILocation(line: 1330, column: 7, scope: !3972)
!4109 = !DILocation(line: 1332, column: 11, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !1, line: 1332, column: 11)
!4111 = distinct !DILexicalBlock(scope: !4106, file: !1, line: 1331, column: 5)
!4112 = !DILocation(line: 1332, column: 21, scope: !4110)
!4113 = !DILocation(line: 1332, column: 25, scope: !4110)
!4114 = !DILocation(line: 1332, column: 36, scope: !4110)
!4115 = !DILocation(line: 1332, column: 11, scope: !4111)
!4116 = !DILocation(line: 1333, column: 2, scope: !4110)
!4117 = !DILocation(line: 1340, column: 36, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1340, column: 7)
!4119 = !DILocation(line: 1340, column: 66, scope: !4118)
!4120 = !DILocation(line: 1340, column: 7, scope: !4118)
!4121 = !DILocation(line: 1341, column: 7, scope: !4118)
!4122 = !DILocation(line: 1341, column: 39, scope: !4118)
!4123 = !DILocation(line: 1341, column: 69, scope: !4118)
!4124 = !DILocation(line: 1341, column: 10, scope: !4118)
!4125 = !DILocation(line: 1340, column: 7, scope: !3972)
!4126 = !DILocation(line: 1344, column: 11, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !1, line: 1344, column: 11)
!4128 = distinct !DILexicalBlock(scope: !4118, file: !1, line: 1342, column: 5)
!4129 = !DILocation(line: 1344, column: 21, scope: !4127)
!4130 = !DILocation(line: 1344, column: 25, scope: !4127)
!4131 = !DILocation(line: 1344, column: 36, scope: !4127)
!4132 = !DILocation(line: 1344, column: 11, scope: !4128)
!4133 = !DILocation(line: 1345, column: 2, scope: !4127)
!4134 = !DILocation(line: 1351, column: 36, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1351, column: 7)
!4136 = !DILocation(line: 1351, column: 66, scope: !4135)
!4137 = !DILocation(line: 1351, column: 7, scope: !4135)
!4138 = !DILocation(line: 1351, column: 7, scope: !3972)
!4139 = !DILocation(line: 1353, column: 19, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4135, file: !1, line: 1352, column: 5)
!4141 = !DILocation(line: 1355, column: 32, scope: !4140)
!4142 = !DILocation(line: 1354, column: 16, scope: !4140)
!4143 = !DILocation(line: 1357, column: 5, scope: !4140)
!4144 = !DILocation(line: 1360, column: 19, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4135, file: !1, line: 1359, column: 5)
!4146 = !DILocation(line: 1362, column: 32, scope: !4145)
!4147 = !DILocation(line: 1361, column: 16, scope: !4145)
!4148 = !DILocation(line: 0, scope: !4135)
!4149 = !DILocation(line: 1366, column: 8, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1366, column: 7)
!4151 = !DILocation(line: 1366, column: 7, scope: !3972)
!4152 = !DILocation(line: 1369, column: 11, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !1, line: 1369, column: 11)
!4154 = distinct !DILexicalBlock(scope: !4150, file: !1, line: 1367, column: 5)
!4155 = !DILocation(line: 1369, column: 21, scope: !4153)
!4156 = !DILocation(line: 1369, column: 25, scope: !4153)
!4157 = !DILocation(line: 1369, column: 36, scope: !4153)
!4158 = !DILocation(line: 1369, column: 11, scope: !4154)
!4159 = !DILocation(line: 1370, column: 2, scope: !4153)
!4160 = !DILocation(line: 1376, column: 3, scope: !3972)
!4161 = !DILocation(line: 1377, column: 14, scope: !3972)
!4162 = !DILocation(line: 1378, column: 14, scope: !3972)
!4163 = !DILocation(line: 1380, column: 7, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1380, column: 7)
!4165 = !DILocation(line: 1380, column: 28, scope: !4164)
!4166 = !DILocation(line: 1381, column: 7, scope: !4164)
!4167 = !DILocation(line: 1381, column: 10, scope: !4164)
!4168 = !DILocation(line: 1380, column: 7, scope: !3972)
!4169 = !DILocation(line: 1382, column: 5, scope: !4164)
!4170 = !DILocation(line: 1383, column: 12, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4164, file: !1, line: 1383, column: 12)
!4172 = !DILocation(line: 1383, column: 33, scope: !4171)
!4173 = !DILocation(line: 1384, column: 5, scope: !4171)
!4174 = !DILocation(line: 1384, column: 8, scope: !4171)
!4175 = !DILocation(line: 1383, column: 12, scope: !4164)
!4176 = !DILocation(line: 1385, column: 5, scope: !4171)
!4177 = !DILocation(line: 1389, column: 16, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1389, column: 7)
!4179 = !DILocation(line: 1398, column: 3, scope: !3972)
!4180 = !DILocation(line: 1402, column: 7, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1402, column: 7)
!4182 = !DILocation(line: 1402, column: 36, scope: !4181)
!4183 = !DILocation(line: 1402, column: 7, scope: !3972)
!4184 = !DILocation(line: 1403, column: 16, scope: !4181)
!4185 = !DILocation(line: 1403, column: 5, scope: !4181)
!4186 = !DILocation(line: 1404, column: 12, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4181, file: !1, line: 1404, column: 12)
!4188 = !DILocation(line: 1404, column: 41, scope: !4187)
!4189 = !DILocation(line: 1404, column: 12, scope: !4181)
!4190 = !DILocation(line: 1405, column: 16, scope: !4187)
!4191 = !DILocation(line: 1405, column: 5, scope: !4187)
!4192 = !DILocation(line: 1406, column: 12, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4187, file: !1, line: 1406, column: 12)
!4194 = !DILocation(line: 1406, column: 41, scope: !4193)
!4195 = !DILocation(line: 1406, column: 12, scope: !4187)
!4196 = !DILocation(line: 1407, column: 16, scope: !4193)
!4197 = !DILocation(line: 1407, column: 5, scope: !4193)
!4198 = !DILocation(line: 1408, column: 12, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4193, file: !1, line: 1408, column: 12)
!4200 = !DILocation(line: 1408, column: 41, scope: !4199)
!4201 = !DILocation(line: 1408, column: 12, scope: !4193)
!4202 = !DILocation(line: 0, scope: !4181)
!4203 = !DILocation(line: 1413, column: 43, scope: !3972)
!4204 = !DILocation(line: 1411, column: 12, scope: !3972)
!4205 = !DILocation(line: 1414, column: 18, scope: !3972)
!4206 = !DILocation(line: 1416, column: 3, scope: !3972)
!4207 = !DILocation(line: 1417, column: 3, scope: !3972)
!4208 = !DILocation(line: 1418, column: 3, scope: !3972)
!4209 = !DILocation(line: 1419, column: 8, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1419, column: 7)
!4211 = !DILocation(line: 1419, column: 7, scope: !3972)
!4212 = !DILocation(line: 1421, column: 11, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !1, line: 1421, column: 11)
!4214 = distinct !DILexicalBlock(scope: !4210, file: !1, line: 1420, column: 5)
!4215 = !DILocation(line: 1421, column: 21, scope: !4213)
!4216 = !DILocation(line: 1421, column: 25, scope: !4213)
!4217 = !DILocation(line: 1421, column: 36, scope: !4213)
!4218 = !DILocation(line: 1421, column: 11, scope: !4214)
!4219 = !DILocation(line: 1422, column: 2, scope: !4213)
!4220 = !DILocation(line: 1427, column: 11, scope: !3972)
!4221 = !DILocation(line: 1428, column: 3, scope: !3972)
!4222 = !DILocation(line: 1428, column: 19, scope: !3972)
!4223 = !DILocation(line: 1429, column: 3, scope: !3972)
!4224 = !DILocation(line: 1429, column: 26, scope: !3972)
!4225 = !DILocation(line: 1430, column: 3, scope: !3972)
!4226 = !DILocation(line: 1430, column: 26, scope: !3972)
!4227 = !DILocation(line: 1431, column: 3, scope: !3972)
!4228 = !DILocation(line: 1432, column: 1, scope: !3972)
!4229 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !133, file: !133, line: 184, type: !4230, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4232)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{!863, !3720, !505}
!4232 = !{!4233, !4234}
!4233 = !DILocalVariable(name: "vec_", arg: 1, scope: !4229, file: !133, line: 184, type: !3720)
!4234 = !DILocalVariable(name: "obj_", arg: 2, scope: !4229, file: !133, line: 184, type: !505)
!4235 = !DILocation(line: 0, scope: !4229)
!4236 = !DILocation(line: 184, column: 1, scope: !4229)
!4237 = distinct !DISubprogram(name: "VEC_lambda_loop_heap_safe_push", scope: !1, file: !1, line: 1466, type: !4238, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4241)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!494, !4240, !495}
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!4241 = !{!4242, !4243}
!4242 = !DILocalVariable(name: "vec_", arg: 1, scope: !4237, file: !1, line: 1466, type: !4240)
!4243 = !DILocalVariable(name: "obj_", arg: 2, scope: !4237, file: !1, line: 1466, type: !495)
!4244 = !DILocation(line: 0, scope: !4237)
!4245 = !DILocation(line: 1466, column: 1, scope: !4237)
!4246 = distinct !DISubprogram(name: "perfect_nestify", scope: !1, file: !1, line: 2391, type: !4247, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4249)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{!462, !1044, !1870, !1870, !1875, !1870}
!4249 = !{!4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4280, !4281, !4282, !4286, !4291, !4295}
!4250 = !DILocalVariable(name: "loop", arg: 1, scope: !4246, file: !1, line: 2391, type: !1044)
!4251 = !DILocalVariable(name: "lbounds", arg: 2, scope: !4246, file: !1, line: 2392, type: !1870)
!4252 = !DILocalVariable(name: "ubounds", arg: 3, scope: !4246, file: !1, line: 2393, type: !1870)
!4253 = !DILocalVariable(name: "steps", arg: 4, scope: !4246, file: !1, line: 2394, type: !1875)
!4254 = !DILocalVariable(name: "loopivs", arg: 5, scope: !4246, file: !1, line: 2395, type: !1870)
!4255 = !DILocalVariable(name: "bbs", scope: !4246, file: !1, line: 2397, type: !3832)
!4256 = !DILocalVariable(name: "exit_condition", scope: !4246, file: !1, line: 2398, type: !829)
!4257 = !DILocalVariable(name: "cond_stmt", scope: !4246, file: !1, line: 2399, type: !829)
!4258 = !DILocalVariable(name: "preheaderbb", scope: !4246, file: !1, line: 2400, type: !1281)
!4259 = !DILocalVariable(name: "headerbb", scope: !4246, file: !1, line: 2400, type: !1281)
!4260 = !DILocalVariable(name: "bodybb", scope: !4246, file: !1, line: 2400, type: !1281)
!4261 = !DILocalVariable(name: "latchbb", scope: !4246, file: !1, line: 2400, type: !1281)
!4262 = !DILocalVariable(name: "olddest", scope: !4246, file: !1, line: 2400, type: !1281)
!4263 = !DILocalVariable(name: "i", scope: !4246, file: !1, line: 2401, type: !463)
!4264 = !DILocalVariable(name: "bsi", scope: !4246, file: !1, line: 2402, type: !3841)
!4265 = !DILocalVariable(name: "firstbsi", scope: !4246, file: !1, line: 2402, type: !3841)
!4266 = !DILocalVariable(name: "insert_after", scope: !4246, file: !1, line: 2403, type: !462)
!4267 = !DILocalVariable(name: "e", scope: !4246, file: !1, line: 2404, type: !809)
!4268 = !DILocalVariable(name: "newloop", scope: !4246, file: !1, line: 2405, type: !1044)
!4269 = !DILocalVariable(name: "phi", scope: !4246, file: !1, line: 2406, type: !829)
!4270 = !DILocalVariable(name: "uboundvar", scope: !4246, file: !1, line: 2407, type: !505)
!4271 = !DILocalVariable(name: "stmt", scope: !4246, file: !1, line: 2408, type: !829)
!4272 = !DILocalVariable(name: "oldivvar", scope: !4246, file: !1, line: 2409, type: !505)
!4273 = !DILocalVariable(name: "ivvar", scope: !4246, file: !1, line: 2409, type: !505)
!4274 = !DILocalVariable(name: "ivvarinced", scope: !4246, file: !1, line: 2409, type: !505)
!4275 = !DILocalVariable(name: "phis", scope: !4246, file: !1, line: 2410, type: !1870)
!4276 = !DILocalVariable(name: "locations", scope: !4246, file: !1, line: 2411, type: !1908)
!4277 = !DILocalVariable(name: "replacements", scope: !4246, file: !1, line: 2412, type: !1313)
!4278 = !DILocalVariable(name: "def", scope: !4279, file: !1, line: 2439, type: !505)
!4279 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 2438, column: 5)
!4280 = !DILocalVariable(name: "phiname", scope: !4279, file: !1, line: 2440, type: !505)
!4281 = !DILocalVariable(name: "locus", scope: !4279, file: !1, line: 2441, type: !632)
!4282 = !DILocalVariable(name: "tobsi", scope: !4283, file: !1, line: 2512, type: !3841)
!4283 = distinct !DILexicalBlock(scope: !4284, file: !1, line: 2511, column: 5)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !1, line: 2510, column: 3)
!4285 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 2510, column: 3)
!4286 = !DILocalVariable(name: "header_bsi", scope: !4287, file: !1, line: 2528, type: !3841)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !1, line: 2527, column: 6)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !1, line: 2526, column: 8)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !1, line: 2514, column: 2)
!4290 = distinct !DILexicalBlock(scope: !4283, file: !1, line: 2513, column: 11)
!4291 = !DILocalVariable(name: "stmt", scope: !4292, file: !1, line: 2533, type: !829)
!4292 = distinct !DILexicalBlock(scope: !4293, file: !1, line: 2532, column: 3)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !1, line: 2531, column: 8)
!4294 = distinct !DILexicalBlock(scope: !4287, file: !1, line: 2531, column: 8)
!4295 = !DILocalVariable(name: "stmt", scope: !4296, file: !1, line: 2553, type: !829)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 2552, column: 3)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !1, line: 2551, column: 8)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !1, line: 2551, column: 8)
!4299 = distinct !DILexicalBlock(scope: !4288, file: !1, line: 2547, column: 6)
!4300 = !DILocation(line: 0, scope: !4246)
!4301 = !DILocation(line: 2402, column: 3, scope: !4246)
!4302 = !DILocation(line: 2403, column: 3, scope: !4246)
!4303 = !DILocation(line: 2409, column: 3, scope: !4246)
!4304 = !DILocation(line: 2410, column: 3, scope: !4246)
!4305 = !DILocation(line: 2410, column: 19, scope: !4246)
!4306 = !DILocation(line: 2411, column: 3, scope: !4246)
!4307 = !DILocation(line: 2411, column: 30, scope: !4246)
!4308 = !DILocation(line: 2415, column: 13, scope: !4246)
!4309 = !DILocation(line: 2415, column: 33, scope: !4246)
!4310 = !DILocation(line: 2416, column: 29, scope: !4246)
!4311 = !DILocation(line: 2416, column: 17, scope: !4246)
!4312 = !DILocation(line: 2417, column: 31, scope: !4246)
!4313 = !DILocation(line: 2417, column: 47, scope: !4246)
!4314 = !DILocation(line: 2417, column: 14, scope: !4246)
!4315 = !DILocation(line: 2420, column: 14, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 2420, column: 3)
!4317 = !DILocation(line: 2420, column: 8, scope: !4316)
!4318 = !DILocation(line: 2420, column: 41, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4316, file: !1, line: 2420, column: 3)
!4320 = !DILocation(line: 2420, column: 40, scope: !4319)
!4321 = !DILocation(line: 2420, column: 3, scope: !4316)
!4322 = !DILocation(line: 2422, column: 13, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4319, file: !1, line: 2421, column: 5)
!4324 = !DILocation(line: 2423, column: 7, scope: !4323)
!4325 = !DILocation(line: 2424, column: 7, scope: !4323)
!4326 = !DILocation(line: 2425, column: 7, scope: !4323)
!4327 = !DILocation(line: 2426, column: 7, scope: !4323)
!4328 = !DILocation(line: 2427, column: 7, scope: !4323)
!4329 = !DILocation(line: 2420, column: 58, scope: !4319)
!4330 = !DILocation(line: 2420, column: 3, scope: !4319)
!4331 = distinct !{!4331, !4321, !4332}
!4332 = !DILocation(line: 2429, column: 5, scope: !4316)
!4333 = !DILocation(line: 2430, column: 33, scope: !4246)
!4334 = !DILocation(line: 2430, column: 7, scope: !4246)
!4335 = !DILocation(line: 2433, column: 14, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 2433, column: 3)
!4337 = !DILocation(line: 2433, column: 8, scope: !4336)
!4338 = !DILocation(line: 2433, column: 41, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4336, file: !1, line: 2433, column: 3)
!4340 = !DILocation(line: 2433, column: 40, scope: !4339)
!4341 = !DILocation(line: 2433, column: 3, scope: !4336)
!4342 = !DILocation(line: 2437, column: 3, scope: !4246)
!4343 = !DILocation(line: 2434, column: 5, scope: !4339)
!4344 = !DILocation(line: 2433, column: 3, scope: !4339)
!4345 = distinct !{!4345, !4341, !4346}
!4346 = !DILocation(line: 2434, column: 33, scope: !4336)
!4347 = !DILocation(line: 2437, column: 10, scope: !4246)
!4348 = !DILocation(line: 2437, column: 34, scope: !4246)
!4349 = !DILocation(line: 2442, column: 13, scope: !4279)
!4350 = !DILocation(line: 0, scope: !4279)
!4351 = !DILocation(line: 2443, column: 17, scope: !4279)
!4352 = !DILocation(line: 2444, column: 15, scope: !4279)
!4353 = !DILocation(line: 2445, column: 13, scope: !4279)
!4354 = !DILocation(line: 2446, column: 30, scope: !4279)
!4355 = !DILocation(line: 2446, column: 7, scope: !4279)
!4356 = distinct !{!4356, !4342, !4357}
!4357 = !DILocation(line: 2447, column: 5, scope: !4246)
!4358 = !DILocation(line: 2448, column: 3, scope: !4246)
!4359 = !DILocation(line: 2449, column: 3, scope: !4246)
!4360 = !DILocation(line: 2451, column: 29, scope: !4246)
!4361 = !DILocation(line: 2451, column: 45, scope: !4246)
!4362 = !DILocation(line: 2451, column: 12, scope: !4246)
!4363 = !DILocation(line: 2452, column: 30, scope: !4246)
!4364 = !DILocation(line: 2452, column: 46, scope: !4246)
!4365 = !DILocation(line: 2452, column: 13, scope: !4246)
!4366 = !DILocation(line: 2453, column: 3, scope: !4246)
!4367 = !DILocation(line: 2454, column: 43, scope: !4246)
!4368 = !DILocation(line: 2454, column: 61, scope: !4246)
!4369 = !DILocation(line: 2454, column: 15, scope: !4246)
!4370 = !DILocation(line: 2456, column: 9, scope: !4246)
!4371 = !DILocation(line: 2457, column: 3, scope: !4246)
!4372 = !DILocation(line: 2458, column: 7, scope: !4246)
!4373 = !DILocation(line: 2459, column: 3, scope: !4246)
!4374 = !DILocation(line: 2460, column: 3, scope: !4246)
!4375 = !DILocation(line: 2463, column: 44, scope: !4246)
!4376 = !DILocation(line: 2463, column: 13, scope: !4246)
!4377 = !DILocation(line: 2464, column: 12, scope: !4246)
!4378 = !DILocation(line: 2464, column: 19, scope: !4246)
!4379 = !DILocation(line: 2465, column: 12, scope: !4246)
!4380 = !DILocation(line: 2465, column: 18, scope: !4246)
!4381 = !DILocation(line: 2466, column: 3, scope: !4246)
!4382 = !DILocation(line: 2467, column: 3, scope: !4246)
!4383 = !DILocation(line: 2468, column: 3, scope: !4246)
!4384 = !DILocation(line: 2469, column: 3, scope: !4246)
!4385 = !DILocation(line: 2470, column: 3, scope: !4246)
!4386 = !DILocation(line: 2472, column: 7, scope: !4246)
!4387 = !DILocation(line: 2472, column: 27, scope: !4246)
!4388 = !DILocation(line: 2471, column: 3, scope: !4246)
!4389 = !DILocation(line: 2473, column: 3, scope: !4246)
!4390 = !DILocation(line: 2475, column: 7, scope: !4246)
!4391 = !DILocation(line: 2474, column: 3, scope: !4246)
!4392 = !DILocation(line: 2477, column: 14, scope: !4246)
!4393 = !DILocation(line: 2478, column: 27, scope: !4246)
!4394 = !DILocation(line: 2478, column: 11, scope: !4246)
!4395 = !DILocation(line: 2478, column: 9, scope: !4246)
!4396 = !DILocation(line: 2479, column: 3, scope: !4246)
!4397 = !DILocation(line: 2480, column: 3, scope: !4246)
!4398 = !DILocation(line: 2481, column: 14, scope: !4246)
!4399 = !DILocation(line: 2482, column: 22, scope: !4246)
!4400 = !DILocation(line: 2482, column: 44, scope: !4246)
!4401 = !DILocation(line: 2482, column: 7, scope: !4246)
!4402 = !DILocation(line: 2483, column: 29, scope: !4246)
!4403 = !DILocation(line: 2481, column: 3, scope: !4246)
!4404 = !DILocation(line: 2488, column: 20, scope: !4246)
!4405 = !DILocation(line: 2489, column: 31, scope: !4246)
!4406 = !DILocation(line: 2489, column: 15, scope: !4246)
!4407 = !DILocation(line: 2491, column: 3, scope: !4246)
!4408 = !DILocation(line: 2492, column: 10, scope: !4246)
!4409 = !DILocation(line: 2493, column: 15, scope: !4246)
!4410 = !DILocation(line: 2494, column: 3, scope: !4246)
!4411 = !DILocation(line: 2496, column: 7, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 2496, column: 7)
!4413 = !DILocation(line: 2496, column: 7, scope: !4246)
!4414 = !DILocation(line: 2497, column: 5, scope: !4412)
!4415 = !DILocation(line: 2499, column: 5, scope: !4412)
!4416 = !DILocation(line: 2500, column: 3, scope: !4246)
!4417 = !DILocation(line: 2501, column: 66, scope: !4246)
!4418 = !DILocation(line: 2501, column: 3, scope: !4246)
!4419 = !DILocation(line: 2502, column: 3, scope: !4246)
!4420 = !DILocation(line: 2503, column: 18, scope: !4246)
!4421 = !DILocation(line: 2505, column: 9, scope: !4246)
!4422 = !DILocation(line: 2508, column: 14, scope: !4246)
!4423 = !DILocation(line: 2509, column: 14, scope: !4246)
!4424 = !DILocation(line: 2510, column: 18, scope: !4285)
!4425 = !DILocation(line: 0, scope: !4283)
!4426 = !DILocation(line: 0, scope: !4288)
!4427 = !DILocation(line: 0, scope: !4287)
!4428 = !DILocation(line: 0, scope: !4294)
!4429 = !DILocation(line: 0, scope: !4298)
!4430 = !DILocation(line: 2510, column: 8, scope: !4285)
!4431 = !DILocation(line: 0, scope: !4285)
!4432 = !DILocation(line: 2510, column: 35, scope: !4284)
!4433 = !DILocation(line: 2510, column: 3, scope: !4285)
!4434 = !DILocation(line: 2512, column: 7, scope: !4283)
!4435 = !DILocation(line: 2512, column: 36, scope: !4283)
!4436 = !DILocation(line: 2513, column: 11, scope: !4290)
!4437 = !DILocation(line: 2513, column: 19, scope: !4290)
!4438 = !DILocation(line: 2513, column: 31, scope: !4290)
!4439 = !DILocation(line: 2513, column: 11, scope: !4283)
!4440 = !DILocation(line: 2526, column: 46, scope: !4288)
!4441 = !DILocation(line: 2526, column: 53, scope: !4288)
!4442 = !DILocation(line: 2526, column: 8, scope: !4288)
!4443 = !DILocation(line: 2526, column: 8, scope: !4289)
!4444 = !DILocation(line: 2528, column: 8, scope: !4287)
!4445 = !DILocation(line: 2529, column: 29, scope: !4287)
!4446 = !DILocation(line: 2529, column: 36, scope: !4287)
!4447 = !DILocation(line: 2529, column: 5, scope: !4287)
!4448 = !DILocation(line: 2531, column: 19, scope: !4294)
!4449 = !DILocation(line: 2531, column: 33, scope: !4294)
!4450 = !DILocation(line: 2531, column: 13, scope: !4294)
!4451 = !DILocation(line: 2531, column: 43, scope: !4293)
!4452 = !DILocation(line: 2531, column: 42, scope: !4293)
!4453 = !DILocation(line: 2531, column: 8, scope: !4294)
!4454 = !DILocation(line: 2533, column: 19, scope: !4292)
!4455 = !DILocation(line: 0, scope: !4292)
!4456 = !DILocation(line: 2535, column: 14, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4292, file: !1, line: 2535, column: 9)
!4458 = !DILocation(line: 2536, column: 9, scope: !4457)
!4459 = !DILocation(line: 2536, column: 12, scope: !4457)
!4460 = !DILocation(line: 2537, column: 9, scope: !4457)
!4461 = !DILocation(line: 2537, column: 12, scope: !4457)
!4462 = !DILocation(line: 2535, column: 9, scope: !4292)
!4463 = !DILocation(line: 2539, column: 9, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4457, file: !1, line: 2538, column: 7)
!4465 = !DILocation(line: 2540, column: 9, scope: !4464)
!4466 = distinct !{!4466, !4453, !4467}
!4467 = !DILocation(line: 2544, column: 3, scope: !4294)
!4468 = !DILocation(line: 2543, column: 5, scope: !4292)
!4469 = !DILocation(line: 2544, column: 3, scope: !4293)
!4470 = !DILocation(line: 2545, column: 6, scope: !4288)
!4471 = !DILocation(line: 2545, column: 6, scope: !4287)
!4472 = !DILocation(line: 2551, column: 19, scope: !4298)
!4473 = !DILocation(line: 2551, column: 33, scope: !4298)
!4474 = !DILocation(line: 2551, column: 13, scope: !4298)
!4475 = !DILocation(line: 2551, column: 43, scope: !4297)
!4476 = !DILocation(line: 2551, column: 42, scope: !4297)
!4477 = !DILocation(line: 2551, column: 8, scope: !4298)
!4478 = !DILocation(line: 2553, column: 19, scope: !4296)
!4479 = !DILocation(line: 0, scope: !4296)
!4480 = !DILocation(line: 2555, column: 14, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4296, file: !1, line: 2555, column: 9)
!4482 = !DILocation(line: 2556, column: 9, scope: !4481)
!4483 = !DILocation(line: 2556, column: 12, scope: !4481)
!4484 = !DILocation(line: 2557, column: 9, scope: !4481)
!4485 = !DILocation(line: 2557, column: 12, scope: !4481)
!4486 = !DILocation(line: 2555, column: 9, scope: !4296)
!4487 = !DILocation(line: 2559, column: 9, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4481, file: !1, line: 2558, column: 7)
!4489 = !DILocation(line: 2560, column: 9, scope: !4488)
!4490 = distinct !{!4490, !4477, !4491}
!4491 = !DILocation(line: 2574, column: 3, scope: !4298)
!4492 = !DILocation(line: 2564, column: 30, scope: !4296)
!4493 = !DILocation(line: 2564, column: 57, scope: !4296)
!4494 = !DILocation(line: 2565, column: 8, scope: !4296)
!4495 = !DILocation(line: 2563, column: 5, scope: !4296)
!4496 = !DILocation(line: 2567, column: 5, scope: !4296)
!4497 = !DILocation(line: 2572, column: 9, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4296, file: !1, line: 2572, column: 9)
!4499 = !DILocation(line: 2572, column: 9, scope: !4296)
!4500 = !DILocation(line: 2573, column: 42, scope: !4498)
!4501 = !DILocation(line: 2573, column: 30, scope: !4498)
!4502 = !DILocation(line: 2573, column: 7, scope: !4498)
!4503 = !DILocation(line: 2578, column: 5, scope: !4284)
!4504 = !DILocation(line: 2510, column: 3, scope: !4284)
!4505 = distinct !{!4505, !4433, !4506}
!4506 = !DILocation(line: 2578, column: 5, scope: !4285)
!4507 = !DILocation(line: 2580, column: 9, scope: !4246)
!4508 = !DILocation(line: 2580, column: 3, scope: !4246)
!4509 = !DILocation(line: 2581, column: 3, scope: !4246)
!4510 = !DILocation(line: 2582, column: 10, scope: !4246)
!4511 = !DILocation(line: 2583, column: 1, scope: !4246)
!4512 = !DILocation(line: 2582, column: 3, scope: !4246)
!4513 = distinct !DISubprogram(name: "VEC_lambda_loop_base_iterate", scope: !1, file: !1, line: 1465, type: !4514, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4518)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{!463, !4516, !5, !494}
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1893)
!4518 = !{!4519, !4520, !4521}
!4519 = !DILocalVariable(name: "vec_", arg: 1, scope: !4513, file: !1, line: 1465, type: !4516)
!4520 = !DILocalVariable(name: "ix_", arg: 2, scope: !4513, file: !1, line: 1465, type: !5)
!4521 = !DILocalVariable(name: "ptr", arg: 3, scope: !4513, file: !1, line: 1465, type: !494)
!4522 = !DILocation(line: 0, scope: !4513)
!4523 = !DILocation(line: 1465, column: 1, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4513, file: !1, line: 1465, column: 1)
!4525 = !DILocation(line: 1465, column: 1, scope: !4513)
!4526 = !DILocation(line: 1465, column: 1, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1465, column: 1)
!4528 = !DILocation(line: 1465, column: 1, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1465, column: 1)
!4530 = !DILocation(line: 0, scope: !4524)
!4531 = distinct !DISubprogram(name: "VEC_lambda_loop_heap_free", scope: !1, file: !1, line: 1466, type: !4532, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4534)
!4532 = !DISubroutineType(types: !4533)
!4533 = !{null, !4240}
!4534 = !{!4535}
!4535 = !DILocalVariable(name: "vec_", arg: 1, scope: !4531, file: !1, line: 1466, type: !4240)
!4536 = !DILocation(line: 0, scope: !4531)
!4537 = !DILocation(line: 1466, column: 1, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4531, file: !1, line: 1466, column: 1)
!4539 = !DILocation(line: 1466, column: 1, scope: !4531)
!4540 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !133, file: !133, line: 184, type: !4541, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4543)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{null, !3720}
!4543 = !{!4544}
!4544 = !DILocalVariable(name: "vec_", arg: 1, scope: !4540, file: !133, line: 184, type: !3720)
!4545 = !DILocation(line: 0, scope: !4540)
!4546 = !DILocation(line: 184, column: 1, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4540, file: !133, line: 184, column: 1)
!4548 = !DILocation(line: 184, column: 1, scope: !4540)
!4549 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1877, file: !1877, line: 32, type: !4550, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4552)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{null, !3975}
!4552 = !{!4553}
!4553 = !DILocalVariable(name: "vec_", arg: 1, scope: !4549, file: !1877, line: 32, type: !3975)
!4554 = !DILocation(line: 0, scope: !4549)
!4555 = !DILocation(line: 32, column: 1, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4549, file: !1877, line: 32, column: 1)
!4557 = !DILocation(line: 32, column: 1, scope: !4549)
!4558 = distinct !DISubprogram(name: "remove_iv", scope: !1, file: !1, line: 1641, type: !4559, scopeLine: 1642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4561)
!4559 = !DISubroutineType(types: !4560)
!4560 = !{null, !829}
!4561 = !{!4562, !4563, !4564, !4567, !4571, !4579, !4580}
!4562 = !DILocalVariable(name: "iv_stmt", arg: 1, scope: !4558, file: !1, line: 1641, type: !829)
!4563 = !DILocalVariable(name: "si", scope: !4558, file: !1, line: 1643, type: !3841)
!4564 = !DILocalVariable(name: "i", scope: !4565, file: !1, line: 1647, type: !5)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !1, line: 1646, column: 5)
!4566 = distinct !DILexicalBlock(scope: !4558, file: !1, line: 1645, column: 7)
!4567 = !DILocalVariable(name: "stmt", scope: !4568, file: !1, line: 1651, type: !829)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !1, line: 1650, column: 2)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !1, line: 1649, column: 7)
!4570 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 1649, column: 7)
!4571 = !DILocalVariable(name: "imm_iter", scope: !4568, file: !1, line: 1652, type: !4572)
!4572 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1221, line: 249, baseType: !4573)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1221, line: 238, size: 448, elements: !4574)
!4574 = !{!4575, !4576, !4577, !4578}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !4573, file: !1221, line: 241, baseType: !1901, size: 64)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !4573, file: !1221, line: 243, baseType: !1901, size: 64, offset: 64)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !4573, file: !1221, line: 245, baseType: !1902, size: 256, offset: 128)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !4573, file: !1221, line: 248, baseType: !1901, size: 64, offset: 384)
!4579 = !DILocalVariable(name: "arg", scope: !4568, file: !1, line: 1653, type: !505)
!4580 = !DILocalVariable(name: "used", scope: !4568, file: !1, line: 1654, type: !462)
!4581 = !DILocation(line: 0, scope: !4558)
!4582 = !DILocation(line: 1643, column: 3, scope: !4558)
!4583 = !DILocation(line: 1643, column: 29, scope: !4558)
!4584 = !DILocation(line: 1645, column: 7, scope: !4566)
!4585 = !DILocation(line: 1645, column: 29, scope: !4566)
!4586 = !DILocation(line: 1645, column: 7, scope: !4558)
!4587 = !DILocation(line: 0, scope: !4568)
!4588 = !DILocation(line: 1649, column: 7, scope: !4570)
!4589 = !DILocation(line: 0, scope: !4570)
!4590 = !DILocation(line: 0, scope: !4565)
!4591 = !DILocation(line: 1649, column: 23, scope: !4569)
!4592 = !DILocation(line: 1649, column: 21, scope: !4569)
!4593 = !DILocation(line: 1652, column: 4, scope: !4568)
!4594 = !DILocation(line: 1653, column: 15, scope: !4568)
!4595 = !DILocation(line: 1656, column: 8, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4568, file: !1, line: 1656, column: 8)
!4597 = !DILocation(line: 1656, column: 24, scope: !4596)
!4598 = !DILocation(line: 1656, column: 8, scope: !4568)
!4599 = !DILocation(line: 1659, column: 4, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4568, file: !1, line: 1659, column: 4)
!4601 = !DILocation(line: 1654, column: 9, scope: !4568)
!4602 = !DILocation(line: 0, scope: !4600)
!4603 = !DILocation(line: 1659, column: 4, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4600, file: !1, line: 1659, column: 4)
!4605 = !DILocation(line: 1660, column: 15, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4604, file: !1, line: 1660, column: 10)
!4607 = !DILocation(line: 1660, column: 26, scope: !4606)
!4608 = !DILocation(line: 1660, column: 30, scope: !4606)
!4609 = !DILocation(line: 1660, column: 10, scope: !4604)
!4610 = distinct !{!4610, !4599, !4611}
!4611 = !DILocation(line: 1661, column: 15, scope: !4600)
!4612 = !DILocation(line: 1663, column: 9, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4568, file: !1, line: 1663, column: 8)
!4614 = !DILocation(line: 1663, column: 8, scope: !4568)
!4615 = !DILocation(line: 1664, column: 17, scope: !4613)
!4616 = !DILocation(line: 1664, column: 6, scope: !4613)
!4617 = !DILocation(line: 1665, column: 2, scope: !4569)
!4618 = !DILocation(line: 1649, column: 55, scope: !4569)
!4619 = !DILocation(line: 1649, column: 7, scope: !4569)
!4620 = distinct !{!4620, !4588, !4621}
!4621 = !DILocation(line: 1665, column: 2, scope: !4570)
!4622 = !DILocation(line: 1667, column: 7, scope: !4565)
!4623 = !DILocation(line: 1668, column: 5, scope: !4565)
!4624 = !DILocation(line: 1671, column: 7, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4566, file: !1, line: 1670, column: 5)
!4626 = !DILocation(line: 1672, column: 7, scope: !4625)
!4627 = !DILocation(line: 1674, column: 1, scope: !4558)
!4628 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !389, file: !389, line: 3061, type: !4629, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4631)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!5, !3697}
!4631 = !{!4632}
!4632 = !DILocalVariable(name: "gs", arg: 1, scope: !4628, file: !389, line: 3061, type: !3697)
!4633 = !DILocation(line: 0, scope: !4628)
!4634 = !DILocation(line: 3064, column: 25, scope: !4628)
!4635 = !DILocation(line: 3064, column: 3, scope: !4628)
!4636 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !4637, file: !4637, line: 450, type: !4638, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4640)
!4637 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4638 = !DISubroutineType(types: !4639)
!4639 = !{!505, !829, !974}
!4640 = !{!4641, !4642, !4643}
!4641 = !DILocalVariable(name: "gs", arg: 1, scope: !4636, file: !4637, line: 450, type: !829)
!4642 = !DILocalVariable(name: "index", arg: 2, scope: !4636, file: !4637, line: 450, type: !974)
!4643 = !DILocalVariable(name: "pd", scope: !4636, file: !4637, line: 452, type: !4644)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!4645 = !DILocation(line: 0, scope: !4636)
!4646 = !DILocation(line: 452, column: 46, scope: !4636)
!4647 = !DILocation(line: 452, column: 26, scope: !4636)
!4648 = !DILocation(line: 453, column: 33, scope: !4636)
!4649 = !DILocation(line: 453, column: 10, scope: !4636)
!4650 = !DILocation(line: 453, column: 3, scope: !4636)
!4651 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !4637, file: !4637, line: 1058, type: !4652, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4655)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{!829, !4654, !505}
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64)
!4655 = !{!4656, !4657}
!4656 = !DILocalVariable(name: "imm", arg: 1, scope: !4651, file: !4637, line: 1058, type: !4654)
!4657 = !DILocalVariable(name: "var", arg: 2, scope: !4651, file: !4637, line: 1058, type: !505)
!4658 = !DILocation(line: 0, scope: !4651)
!4659 = !DILocation(line: 1060, column: 18, scope: !4651)
!4660 = !DILocation(line: 1060, column: 8, scope: !4651)
!4661 = !DILocation(line: 1060, column: 14, scope: !4651)
!4662 = !DILocation(line: 1061, column: 30, scope: !4651)
!4663 = !DILocation(line: 1061, column: 16, scope: !4651)
!4664 = !DILocation(line: 1062, column: 8, scope: !4651)
!4665 = !DILocation(line: 1062, column: 22, scope: !4651)
!4666 = !DILocation(line: 1067, column: 18, scope: !4651)
!4667 = !DILocation(line: 1067, column: 23, scope: !4651)
!4668 = !DILocation(line: 1068, column: 18, scope: !4651)
!4669 = !DILocation(line: 1068, column: 23, scope: !4651)
!4670 = !DILocation(line: 1069, column: 22, scope: !4651)
!4671 = !DILocation(line: 1069, column: 27, scope: !4651)
!4672 = !DILocation(line: 1070, column: 18, scope: !4651)
!4673 = !DILocation(line: 1070, column: 22, scope: !4651)
!4674 = !DILocation(line: 1072, column: 7, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4651, file: !4637, line: 1072, column: 7)
!4676 = !DILocation(line: 1072, column: 7, scope: !4651)
!4677 = !DILocation(line: 1075, column: 30, scope: !4651)
!4678 = !DILocation(line: 1075, column: 3, scope: !4651)
!4679 = !DILocation(line: 1077, column: 10, scope: !4651)
!4680 = !DILocation(line: 1077, column: 3, scope: !4651)
!4681 = !DILocation(line: 1078, column: 1, scope: !4651)
!4682 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !4637, file: !4637, line: 969, type: !4683, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4687)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!462, !4685}
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4572)
!4687 = !{!4688}
!4688 = !DILocalVariable(name: "imm", arg: 1, scope: !4682, file: !4637, line: 969, type: !4685)
!4689 = !DILocation(line: 0, scope: !4682)
!4690 = !DILocation(line: 971, column: 16, scope: !4682)
!4691 = !DILocation(line: 971, column: 32, scope: !4682)
!4692 = !DILocation(line: 971, column: 24, scope: !4682)
!4693 = !DILocation(line: 971, column: 10, scope: !4682)
!4694 = !DILocation(line: 971, column: 3, scope: !4682)
!4695 = distinct !DISubprogram(name: "is_gimple_debug", scope: !389, file: !389, line: 3249, type: !4696, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4698)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!462, !3697}
!4698 = !{!4699}
!4699 = !DILocalVariable(name: "gs", arg: 1, scope: !4695, file: !389, line: 3249, type: !3697)
!4700 = !DILocation(line: 0, scope: !4695)
!4701 = !DILocation(line: 3251, column: 10, scope: !4695)
!4702 = !DILocation(line: 3251, column: 27, scope: !4695)
!4703 = !DILocation(line: 3251, column: 3, scope: !4695)
!4704 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !4637, file: !4637, line: 1083, type: !4705, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4707)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!829, !4654}
!4707 = !{!4708}
!4708 = !DILocalVariable(name: "imm", arg: 1, scope: !4704, file: !4637, line: 1083, type: !4654)
!4709 = !DILocation(line: 0, scope: !4704)
!4710 = !DILocation(line: 1085, column: 33, scope: !4704)
!4711 = !DILocation(line: 1085, column: 16, scope: !4704)
!4712 = !DILocation(line: 1086, column: 7, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4704, file: !4637, line: 1086, column: 7)
!4714 = !DILocation(line: 1086, column: 7, scope: !4704)
!4715 = !DILocation(line: 1088, column: 26, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !4637, line: 1088, column: 11)
!4717 = distinct !DILexicalBlock(scope: !4713, file: !4637, line: 1087, column: 5)
!4718 = !DILocation(line: 1088, column: 31, scope: !4716)
!4719 = !DILocation(line: 1088, column: 11, scope: !4717)
!4720 = !DILocation(line: 1089, column: 24, scope: !4716)
!4721 = !DILocation(line: 1089, column: 2, scope: !4716)
!4722 = !DILocation(line: 1093, column: 30, scope: !4704)
!4723 = !DILocation(line: 1093, column: 3, scope: !4704)
!4724 = !DILocation(line: 1094, column: 10, scope: !4704)
!4725 = !DILocation(line: 1094, column: 3, scope: !4704)
!4726 = !DILocation(line: 1095, column: 1, scope: !4704)
!4727 = distinct !DISubprogram(name: "lambda_loopnest_to_gcc_loopnest", scope: !1, file: !1, line: 1689, type: !4728, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4731)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{null, !1044, !1870, !1870, !4730, !489, !2509, !2483}
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!4731 = !{!4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4748, !4749, !4750, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4765, !4766, !4767, !4768, !4769, !4773, !4774, !4775}
!4732 = !DILocalVariable(name: "old_loopnest", arg: 1, scope: !4727, file: !1, line: 1689, type: !1044)
!4733 = !DILocalVariable(name: "old_ivs", arg: 2, scope: !4727, file: !1, line: 1690, type: !1870)
!4734 = !DILocalVariable(name: "invariants", arg: 3, scope: !4727, file: !1, line: 1691, type: !1870)
!4735 = !DILocalVariable(name: "remove_ivs", arg: 4, scope: !4727, file: !1, line: 1692, type: !4730)
!4736 = !DILocalVariable(name: "new_loopnest", arg: 5, scope: !4727, file: !1, line: 1693, type: !489)
!4737 = !DILocalVariable(name: "transform", arg: 6, scope: !4727, file: !1, line: 1694, type: !2509)
!4738 = !DILocalVariable(name: "lambda_obstack", arg: 7, scope: !4727, file: !1, line: 1695, type: !2483)
!4739 = !DILocalVariable(name: "temp", scope: !4727, file: !1, line: 1697, type: !1044)
!4740 = !DILocalVariable(name: "i", scope: !4727, file: !1, line: 1698, type: !974)
!4741 = !DILocalVariable(name: "j", scope: !4727, file: !1, line: 1699, type: !5)
!4742 = !DILocalVariable(name: "depth", scope: !4727, file: !1, line: 1700, type: !974)
!4743 = !DILocalVariable(name: "new_ivs", scope: !4727, file: !1, line: 1701, type: !1870)
!4744 = !DILocalVariable(name: "oldiv", scope: !4727, file: !1, line: 1702, type: !505)
!4745 = !DILocalVariable(name: "bsi", scope: !4727, file: !1, line: 1703, type: !3841)
!4746 = !DILocalVariable(name: "newloop", scope: !4747, file: !1, line: 1717, type: !495)
!4747 = distinct !DILexicalBlock(scope: !4727, file: !1, line: 1716, column: 5)
!4748 = !DILocalVariable(name: "bb", scope: !4747, file: !1, line: 1718, type: !1281)
!4749 = !DILocalVariable(name: "exit", scope: !4747, file: !1, line: 1719, type: !809)
!4750 = !DILocalVariable(name: "ivvar", scope: !4747, file: !1, line: 1720, type: !505)
!4751 = !DILocalVariable(name: "ivvarinced", scope: !4747, file: !1, line: 1720, type: !505)
!4752 = !DILocalVariable(name: "exitcond", scope: !4747, file: !1, line: 1721, type: !829)
!4753 = !DILocalVariable(name: "stmts", scope: !4747, file: !1, line: 1722, type: !819)
!4754 = !DILocalVariable(name: "testtype", scope: !4747, file: !1, line: 1723, type: !132)
!4755 = !DILocalVariable(name: "newupperbound", scope: !4747, file: !1, line: 1724, type: !505)
!4756 = !DILocalVariable(name: "newlowerbound", scope: !4747, file: !1, line: 1724, type: !505)
!4757 = !DILocalVariable(name: "offset", scope: !4747, file: !1, line: 1725, type: !480)
!4758 = !DILocalVariable(name: "type", scope: !4747, file: !1, line: 1726, type: !505)
!4759 = !DILocalVariable(name: "insert_after", scope: !4747, file: !1, line: 1727, type: !462)
!4760 = !DILocalVariable(name: "inc_stmt", scope: !4747, file: !1, line: 1728, type: !829)
!4761 = !DILocalVariable(name: "imm_iter", scope: !4762, file: !1, line: 1824, type: !4572)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !1, line: 1823, column: 5)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !1, line: 1822, column: 3)
!4764 = distinct !DILexicalBlock(scope: !4727, file: !1, line: 1822, column: 3)
!4765 = !DILocalVariable(name: "use_p", scope: !4762, file: !1, line: 1825, type: !1900)
!4766 = !DILocalVariable(name: "oldiv_def", scope: !4762, file: !1, line: 1826, type: !505)
!4767 = !DILocalVariable(name: "oldiv_stmt", scope: !4762, file: !1, line: 1827, type: !829)
!4768 = !DILocalVariable(name: "stmt", scope: !4762, file: !1, line: 1828, type: !829)
!4769 = !DILocalVariable(name: "newiv", scope: !4770, file: !1, line: 1838, type: !505)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !1, line: 1837, column: 9)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !1, line: 1836, column: 7)
!4772 = distinct !DILexicalBlock(scope: !4762, file: !1, line: 1836, column: 7)
!4773 = !DILocalVariable(name: "stmts", scope: !4770, file: !1, line: 1839, type: !819)
!4774 = !DILocalVariable(name: "lbv", scope: !4770, file: !1, line: 1840, type: !470)
!4775 = !DILocalVariable(name: "newlbv", scope: !4770, file: !1, line: 1840, type: !470)
!4776 = !DILocation(line: 0, scope: !4727)
!4777 = !DILocation(line: 1701, column: 3, scope: !4727)
!4778 = !DILocation(line: 1701, column: 19, scope: !4727)
!4779 = !DILocation(line: 1702, column: 3, scope: !4727)
!4780 = !DILocation(line: 1703, column: 3, scope: !4727)
!4781 = !DILocation(line: 1705, column: 15, scope: !4727)
!4782 = !DILocation(line: 1707, column: 7, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4727, file: !1, line: 1707, column: 7)
!4784 = !DILocation(line: 1707, column: 7, scope: !4727)
!4785 = !DILocation(line: 1709, column: 7, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4783, file: !1, line: 1708, column: 5)
!4787 = !DILocation(line: 1710, column: 34, scope: !4786)
!4788 = !DILocation(line: 1710, column: 7, scope: !4786)
!4789 = !DILocation(line: 1711, column: 5, scope: !4786)
!4790 = !DILocation(line: 1712, column: 11, scope: !4727)
!4791 = !DILocation(line: 0, scope: !4747)
!4792 = !DILocation(line: 1715, column: 3, scope: !4727)
!4793 = !DILocation(line: 0, scope: !4762)
!4794 = !DILocation(line: 0, scope: !4770)
!4795 = !DILocation(line: 0, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !1, line: 1859, column: 6)
!4797 = distinct !DILexicalBlock(scope: !4770, file: !1, line: 1858, column: 8)
!4798 = !DILocation(line: 1822, column: 3, scope: !4764)
!4799 = !DILocation(line: 1720, column: 7, scope: !4747)
!4800 = !DILocation(line: 1722, column: 7, scope: !4747)
!4801 = !DILocation(line: 1727, column: 7, scope: !4747)
!4802 = !DILocation(line: 1730, column: 15, scope: !4747)
!4803 = !DILocation(line: 1730, column: 13, scope: !4747)
!4804 = !DILocation(line: 1731, column: 14, scope: !4747)
!4805 = !DILocation(line: 1735, column: 15, scope: !4747)
!4806 = !DILocation(line: 1735, column: 13, scope: !4747)
!4807 = !DILocation(line: 1736, column: 7, scope: !4747)
!4808 = !DILocation(line: 1738, column: 7, scope: !4747)
!4809 = !DILocation(line: 1740, column: 17, scope: !4747)
!4810 = !DILocation(line: 1744, column: 16, scope: !4747)
!4811 = !DILocation(line: 1746, column: 7, scope: !4747)
!4812 = !DILocation(line: 1751, column: 13, scope: !4747)
!4813 = !DILocation(line: 1752, column: 46, scope: !4747)
!4814 = !DILocation(line: 1753, column: 11, scope: !4747)
!4815 = !DILocation(line: 1755, column: 11, scope: !4747)
!4816 = !DILocation(line: 1752, column: 23, scope: !4747)
!4817 = !DILocation(line: 1758, column: 11, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 1758, column: 11)
!4819 = !DILocation(line: 1758, column: 11, scope: !4747)
!4820 = !DILocation(line: 1760, column: 28, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4818, file: !1, line: 1759, column: 2)
!4822 = !DILocation(line: 1760, column: 56, scope: !4821)
!4823 = !DILocation(line: 1760, column: 4, scope: !4821)
!4824 = !DILocation(line: 1761, column: 4, scope: !4821)
!4825 = !DILocation(line: 1762, column: 2, scope: !4821)
!4826 = !DILocation(line: 1765, column: 13, scope: !4747)
!4827 = !DILocation(line: 1766, column: 46, scope: !4747)
!4828 = !DILocation(line: 1767, column: 11, scope: !4747)
!4829 = !DILocation(line: 1769, column: 11, scope: !4747)
!4830 = !DILocation(line: 1766, column: 23, scope: !4747)
!4831 = !DILocation(line: 1771, column: 14, scope: !4747)
!4832 = !DILocation(line: 1772, column: 18, scope: !4747)
!4833 = !DILocation(line: 1773, column: 12, scope: !4747)
!4834 = !DILocation(line: 1774, column: 13, scope: !4747)
!4835 = !DILocation(line: 1775, column: 11, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 1775, column: 11)
!4837 = !DILocation(line: 1775, column: 11, scope: !4747)
!4838 = !DILocation(line: 1776, column: 2, scope: !4836)
!4839 = !DILocation(line: 1780, column: 7, scope: !4747)
!4840 = !DILocation(line: 1782, column: 25, scope: !4747)
!4841 = !DILocation(line: 1782, column: 4, scope: !4747)
!4842 = !DILocation(line: 1783, column: 4, scope: !4747)
!4843 = !DILocation(line: 1783, column: 23, scope: !4747)
!4844 = !DILocation(line: 1781, column: 7, scope: !4747)
!4845 = !DILocation(line: 1790, column: 18, scope: !4747)
!4846 = !DILocation(line: 1794, column: 35, scope: !4747)
!4847 = !DILocation(line: 1794, column: 20, scope: !4747)
!4848 = !DILocation(line: 1795, column: 7, scope: !4747)
!4849 = !DILocation(line: 1796, column: 13, scope: !4747)
!4850 = !DILocation(line: 1797, column: 7, scope: !4747)
!4851 = !DILocation(line: 1802, column: 18, scope: !4747)
!4852 = !DILocation(line: 1802, column: 36, scope: !4747)
!4853 = !DILocation(line: 1808, column: 17, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 1808, column: 11)
!4855 = !DILocation(line: 1808, column: 23, scope: !4854)
!4856 = !DILocation(line: 1808, column: 11, scope: !4747)
!4857 = !DILocation(line: 1809, column: 13, scope: !4854)
!4858 = !DILocation(line: 1809, column: 2, scope: !4854)
!4859 = !DILocation(line: 1811, column: 7, scope: !4747)
!4860 = !DILocation(line: 1812, column: 7, scope: !4747)
!4861 = !DILocation(line: 1813, column: 7, scope: !4747)
!4862 = !DILocation(line: 1815, column: 8, scope: !4747)
!4863 = !DILocation(line: 1816, column: 20, scope: !4747)
!4864 = !DILocation(line: 1817, column: 5, scope: !4727)
!4865 = distinct !{!4865, !4792, !4864}
!4866 = !DILocation(line: 0, scope: !4764)
!4867 = !DILocation(line: 1822, column: 15, scope: !4763)
!4868 = !DILocation(line: 1824, column: 7, scope: !4762)
!4869 = !DILocation(line: 1827, column: 27, scope: !4762)
!4870 = !DILocation(line: 1830, column: 11, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4762, file: !1, line: 1830, column: 11)
!4872 = !DILocation(line: 1830, column: 36, scope: !4871)
!4873 = !DILocation(line: 1830, column: 11, scope: !4762)
!4874 = !DILocation(line: 1831, column: 21, scope: !4871)
!4875 = !DILocation(line: 1831, column: 9, scope: !4871)
!4876 = !DILocation(line: 1833, column: 14, scope: !4871)
!4877 = !DILocation(line: 0, scope: !4871)
!4878 = !DILocation(line: 1834, column: 7, scope: !4762)
!4879 = !DILocation(line: 1836, column: 7, scope: !4772)
!4880 = !DILocation(line: 0, scope: !4772)
!4881 = !DILocation(line: 1836, column: 7, scope: !4771)
!4882 = !DILocation(line: 1839, column: 4, scope: !4770)
!4883 = !DILocation(line: 1842, column: 8, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4770, file: !1, line: 1842, column: 8)
!4885 = !DILocation(line: 1842, column: 8, scope: !4770)
!4886 = !DILocation(line: 1847, column: 12, scope: !4770)
!4887 = !DILocation(line: 1848, column: 17, scope: !4770)
!4888 = !DILocation(line: 1849, column: 4, scope: !4770)
!4889 = !DILocation(line: 1849, column: 30, scope: !4770)
!4890 = !DILocation(line: 1851, column: 20, scope: !4770)
!4891 = !DILocation(line: 1854, column: 10, scope: !4770)
!4892 = !DILocation(line: 1855, column: 43, scope: !4770)
!4893 = !DILocation(line: 1856, column: 7, scope: !4770)
!4894 = !DILocation(line: 1855, column: 12, scope: !4770)
!4895 = !DILocation(line: 1858, column: 8, scope: !4797)
!4896 = !DILocation(line: 1858, column: 14, scope: !4797)
!4897 = !DILocation(line: 1858, column: 17, scope: !4797)
!4898 = !DILocation(line: 1858, column: 36, scope: !4797)
!4899 = !DILocation(line: 1858, column: 8, scope: !4770)
!4900 = !DILocation(line: 1860, column: 14, scope: !4796)
!4901 = !DILocation(line: 1861, column: 37, scope: !4796)
!4902 = !DILocation(line: 1861, column: 8, scope: !4796)
!4903 = !DILocation(line: 1862, column: 6, scope: !4796)
!4904 = !DILocation(line: 1864, column: 4, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4770, file: !1, line: 1864, column: 4)
!4906 = !DILocation(line: 0, scope: !4905)
!4907 = !DILocation(line: 1864, column: 4, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4905, file: !1, line: 1864, column: 4)
!4909 = !DILocation(line: 1865, column: 6, scope: !4908)
!4910 = distinct !{!4910, !4904, !4911}
!4911 = !DILocation(line: 1865, column: 35, scope: !4905)
!4912 = !DILocation(line: 1867, column: 8, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4770, file: !1, line: 1867, column: 8)
!4914 = !DILocation(line: 1867, column: 14, scope: !4913)
!4915 = !DILocation(line: 1867, column: 17, scope: !4913)
!4916 = !DILocation(line: 1867, column: 36, scope: !4913)
!4917 = !DILocation(line: 1867, column: 8, scope: !4770)
!4918 = !DILocation(line: 1868, column: 6, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4913, file: !1, line: 1868, column: 6)
!4920 = !DILocation(line: 0, scope: !4919)
!4921 = !DILocation(line: 1868, column: 22, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4919, file: !1, line: 1868, column: 6)
!4923 = !DILocation(line: 1868, column: 20, scope: !4922)
!4924 = !DILocation(line: 1869, column: 12, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4922, file: !1, line: 1869, column: 12)
!4926 = !DILocation(line: 1869, column: 41, scope: !4925)
!4927 = !DILocation(line: 1869, column: 12, scope: !4922)
!4928 = !DILocation(line: 1870, column: 27, scope: !4925)
!4929 = !DILocation(line: 1870, column: 58, scope: !4925)
!4930 = !DILocation(line: 1870, column: 3, scope: !4925)
!4931 = !DILocation(line: 1868, column: 51, scope: !4922)
!4932 = !DILocation(line: 1868, column: 6, scope: !4922)
!4933 = distinct !{!4933, !4918, !4934}
!4934 = !DILocation(line: 1870, column: 63, scope: !4919)
!4935 = !DILocation(line: 1872, column: 4, scope: !4770)
!4936 = !DILocation(line: 1873, column: 2, scope: !4771)
!4937 = distinct !{!4937, !4879, !4938}
!4938 = !DILocation(line: 1873, column: 2, scope: !4772)
!4939 = !DILocation(line: 1876, column: 7, scope: !4762)
!4940 = !DILocation(line: 1877, column: 5, scope: !4763)
!4941 = !DILocation(line: 1822, column: 55, scope: !4763)
!4942 = !DILocation(line: 1822, column: 3, scope: !4763)
!4943 = distinct !{!4943, !4798, !4944}
!4944 = !DILocation(line: 1877, column: 5, scope: !4764)
!4945 = !DILocation(line: 1878, column: 3, scope: !4727)
!4946 = !DILocation(line: 1879, column: 1, scope: !4727)
!4947 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !133, file: !133, line: 182, type: !4948, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4952)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{!505, !4950, !5}
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!4952 = !{!4953, !4954}
!4953 = !DILocalVariable(name: "vec_", arg: 1, scope: !4947, file: !133, line: 182, type: !4950)
!4954 = !DILocalVariable(name: "ix_", arg: 2, scope: !4947, file: !133, line: 182, type: !5)
!4955 = !DILocation(line: 0, scope: !4947)
!4956 = !DILocation(line: 182, column: 1, scope: !4947)
!4957 = distinct !DISubprogram(name: "lle_to_gcc_expression", scope: !1, file: !1, line: 1578, type: !4958, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4961)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{!505, !480, !480, !505, !1870, !1870, !132, !4960}
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!4961 = !{!4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973, !4976}
!4962 = !DILocalVariable(name: "lle", arg: 1, scope: !4957, file: !1, line: 1578, type: !480)
!4963 = !DILocalVariable(name: "offset", arg: 2, scope: !4957, file: !1, line: 1579, type: !480)
!4964 = !DILocalVariable(name: "type", arg: 3, scope: !4957, file: !1, line: 1580, type: !505)
!4965 = !DILocalVariable(name: "induction_vars", arg: 4, scope: !4957, file: !1, line: 1581, type: !1870)
!4966 = !DILocalVariable(name: "invariants", arg: 5, scope: !4957, file: !1, line: 1582, type: !1870)
!4967 = !DILocalVariable(name: "wrap", arg: 6, scope: !4957, file: !1, line: 1583, type: !132)
!4968 = !DILocalVariable(name: "stmts_to_insert", arg: 7, scope: !4957, file: !1, line: 1583, type: !4960)
!4969 = !DILocalVariable(name: "k", scope: !4957, file: !1, line: 1585, type: !463)
!4970 = !DILocalVariable(name: "resvar", scope: !4957, file: !1, line: 1586, type: !505)
!4971 = !DILocalVariable(name: "expr", scope: !4957, file: !1, line: 1587, type: !505)
!4972 = !DILocalVariable(name: "results", scope: !4957, file: !1, line: 1588, type: !1870)
!4973 = !DILocalVariable(name: "i", scope: !4974, file: !1, line: 1623, type: !974)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !1, line: 1622, column: 5)
!4975 = distinct !DILexicalBlock(scope: !4957, file: !1, line: 1621, column: 7)
!4976 = !DILocalVariable(name: "op", scope: !4974, file: !1, line: 1624, type: !505)
!4977 = !DILocation(line: 0, scope: !4957)
!4978 = !DILocation(line: 1588, column: 3, scope: !4957)
!4979 = !DILocation(line: 1588, column: 19, scope: !4957)
!4980 = !DILocation(line: 1590, column: 3, scope: !4957)
!4981 = !DILocation(line: 0, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4983, file: !1, line: 1594, column: 5)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !1, line: 1593, column: 3)
!4984 = distinct !DILexicalBlock(scope: !4957, file: !1, line: 1593, column: 3)
!4985 = !DILocation(line: 0, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4982, file: !1, line: 1610, column: 11)
!4987 = !DILocation(line: 1593, column: 3, scope: !4957)
!4988 = !DILocation(line: 1593, column: 14, scope: !4983)
!4989 = !DILocation(line: 1593, column: 3, scope: !4984)
!4990 = !DILocation(line: 1595, column: 39, scope: !4982)
!4991 = !DILocation(line: 1595, column: 14, scope: !4982)
!4992 = !DILocation(line: 1596, column: 14, scope: !4982)
!4993 = !DILocation(line: 1601, column: 11, scope: !4982)
!4994 = !DILocation(line: 1602, column: 11, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4982, file: !1, line: 1602, column: 11)
!4996 = !DILocation(line: 1602, column: 11, scope: !4982)
!4997 = !DILocation(line: 1603, column: 9, scope: !4995)
!4998 = !DILocation(line: 1603, column: 2, scope: !4995)
!4999 = !DILocation(line: 1605, column: 11, scope: !4982)
!5000 = !DILocation(line: 1606, column: 11, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4982, file: !1, line: 1606, column: 11)
!5002 = !DILocation(line: 1606, column: 11, scope: !4982)
!5003 = !DILocation(line: 1607, column: 9, scope: !5001)
!5004 = !DILocation(line: 1607, column: 2, scope: !5001)
!5005 = !DILocation(line: 1609, column: 11, scope: !4982)
!5006 = !DILocation(line: 1610, column: 13, scope: !4986)
!5007 = !DILocation(line: 1610, column: 11, scope: !4982)
!5008 = !DILocation(line: 1611, column: 9, scope: !4986)
!5009 = !DILocation(line: 1611, column: 2, scope: !4986)
!5010 = !DILocation(line: 1614, column: 14, scope: !4982)
!5011 = !DILocation(line: 1615, column: 7, scope: !4982)
!5012 = !DILocation(line: 1593, column: 29, scope: !4983)
!5013 = !DILocation(line: 1593, column: 3, scope: !4983)
!5014 = distinct !{!5014, !4989, !5015}
!5015 = !DILocation(line: 1616, column: 5, scope: !4984)
!5016 = !DILocation(line: 1618, column: 3, scope: !4957)
!5017 = !DILocation(line: 1621, column: 7, scope: !4975)
!5018 = !DILocation(line: 1621, column: 34, scope: !4975)
!5019 = !DILocation(line: 1621, column: 7, scope: !4957)
!5020 = !DILocation(line: 1624, column: 7, scope: !4974)
!5021 = !DILocation(line: 1626, column: 14, scope: !4974)
!5022 = !DILocation(line: 0, scope: !4974)
!5023 = !DILocation(line: 1627, column: 12, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4974, file: !1, line: 1627, column: 7)
!5025 = !DILocation(line: 0, scope: !5024)
!5026 = !DILocation(line: 1627, column: 19, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5024, file: !1, line: 1627, column: 7)
!5028 = !DILocation(line: 1627, column: 7, scope: !5024)
!5029 = !DILocation(line: 1628, column: 9, scope: !5027)
!5030 = !DILocation(line: 1627, column: 56, scope: !5027)
!5031 = !DILocation(line: 1627, column: 7, scope: !5027)
!5032 = distinct !{!5032, !5028, !5033}
!5033 = !DILocation(line: 1628, column: 9, scope: !5024)
!5034 = !DILocation(line: 1629, column: 5, scope: !4975)
!5035 = !DILocation(line: 1629, column: 5, scope: !4974)
!5036 = !DILocation(line: 1631, column: 3, scope: !4957)
!5037 = !DILocation(line: 1633, column: 12, scope: !4957)
!5038 = !DILocation(line: 1634, column: 3, scope: !4957)
!5039 = !DILocation(line: 1635, column: 32, scope: !4957)
!5040 = !DILocation(line: 1635, column: 10, scope: !4957)
!5041 = !DILocation(line: 1636, column: 1, scope: !4957)
!5042 = !DILocation(line: 1635, column: 3, scope: !4957)
!5043 = distinct !DISubprogram(name: "gimple_bb", scope: !389, file: !389, line: 1112, type: !5044, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5046)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!793, !3697}
!5046 = !{!5047}
!5047 = !DILocalVariable(name: "g", arg: 1, scope: !5043, file: !389, line: 1112, type: !3697)
!5048 = !DILocation(line: 0, scope: !5043)
!5049 = !DILocation(line: 1114, column: 20, scope: !5043)
!5050 = !DILocation(line: 1114, column: 3, scope: !5043)
!5051 = distinct !DISubprogram(name: "gsi_after_labels", scope: !389, file: !389, line: 4510, type: !5052, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5054)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{!3841, !1281}
!5054 = !{!5055, !5056}
!5055 = !DILocalVariable(name: "bb", arg: 1, scope: !5051, file: !389, line: 4510, type: !1281)
!5056 = !DILocalVariable(name: "gsi", scope: !5051, file: !389, line: 4512, type: !3841)
!5057 = !DILocation(line: 0, scope: !5051)
!5058 = !DILocation(line: 4512, column: 24, scope: !5051)
!5059 = !DILocation(line: 4512, column: 30, scope: !5051)
!5060 = !DILocation(line: 4514, column: 3, scope: !5051)
!5061 = !DILocation(line: 4514, column: 11, scope: !5051)
!5062 = !DILocation(line: 4514, column: 27, scope: !5051)
!5063 = !DILocation(line: 4514, column: 43, scope: !5051)
!5064 = !DILocation(line: 4514, column: 30, scope: !5051)
!5065 = !DILocation(line: 4514, column: 59, scope: !5051)
!5066 = !DILocation(line: 4515, column: 5, scope: !5051)
!5067 = distinct !{!5067, !5060, !5068}
!5068 = !DILocation(line: 4515, column: 19, scope: !5051)
!5069 = !DILocation(line: 4517, column: 3, scope: !5051)
!5070 = distinct !DISubprogram(name: "make_ssa_name", scope: !4637, file: !4637, line: 1245, type: !5071, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!505, !505, !829}
!5073 = !{!5074, !5075}
!5074 = !DILocalVariable(name: "var", arg: 1, scope: !5070, file: !4637, line: 1245, type: !505)
!5075 = !DILocalVariable(name: "stmt", arg: 2, scope: !5070, file: !4637, line: 1245, type: !829)
!5076 = !DILocation(line: 0, scope: !5070)
!5077 = !DILocation(line: 1247, column: 28, scope: !5070)
!5078 = !DILocation(line: 1247, column: 10, scope: !5070)
!5079 = !DILocation(line: 1247, column: 3, scope: !5070)
!5080 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !389, file: !389, line: 1714, type: !5081, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5083)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{null, !829, !505}
!5083 = !{!5084, !5085}
!5084 = !DILocalVariable(name: "gs", arg: 1, scope: !5080, file: !389, line: 1714, type: !829)
!5085 = !DILocalVariable(name: "lhs", arg: 2, scope: !5080, file: !389, line: 1714, type: !505)
!5086 = !DILocation(line: 0, scope: !5080)
!5087 = !DILocation(line: 1717, column: 3, scope: !5080)
!5088 = !DILocation(line: 1719, column: 7, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5080, file: !389, line: 1719, column: 7)
!5090 = !DILocation(line: 1719, column: 11, scope: !5089)
!5091 = !DILocation(line: 1719, column: 14, scope: !5089)
!5092 = !DILocation(line: 1719, column: 30, scope: !5089)
!5093 = !DILocation(line: 1719, column: 7, scope: !5080)
!5094 = !DILocation(line: 1720, column: 5, scope: !5089)
!5095 = !DILocation(line: 1720, column: 29, scope: !5089)
!5096 = !DILocation(line: 1721, column: 1, scope: !5080)
!5097 = distinct !DISubprogram(name: "gimple_cond_set_condition", scope: !389, file: !389, line: 2434, type: !5098, scopeLine: 2435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5100)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{null, !829, !132, !505, !505}
!5100 = !{!5101, !5102, !5103, !5104}
!5101 = !DILocalVariable(name: "stmt", arg: 1, scope: !5097, file: !389, line: 2434, type: !829)
!5102 = !DILocalVariable(name: "code", arg: 2, scope: !5097, file: !389, line: 2434, type: !132)
!5103 = !DILocalVariable(name: "lhs", arg: 3, scope: !5097, file: !389, line: 2434, type: !505)
!5104 = !DILocalVariable(name: "rhs", arg: 4, scope: !5097, file: !389, line: 2434, type: !505)
!5105 = !DILocation(line: 0, scope: !5097)
!5106 = !DILocation(line: 2436, column: 3, scope: !5097)
!5107 = !DILocation(line: 2437, column: 3, scope: !5097)
!5108 = !DILocation(line: 2438, column: 3, scope: !5097)
!5109 = !DILocation(line: 2439, column: 1, scope: !5097)
!5110 = distinct !DISubprogram(name: "update_stmt", scope: !389, file: !389, line: 1456, type: !4559, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5111)
!5111 = !{!5112}
!5112 = !DILocalVariable(name: "s", arg: 1, scope: !5110, file: !389, line: 1456, type: !829)
!5113 = !DILocation(line: 0, scope: !5110)
!5114 = !DILocation(line: 1458, column: 7, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5110, file: !389, line: 1458, column: 7)
!5116 = !DILocation(line: 1458, column: 7, scope: !5110)
!5117 = !DILocation(line: 1460, column: 7, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5115, file: !389, line: 1459, column: 5)
!5119 = !DILocation(line: 1461, column: 7, scope: !5118)
!5120 = !DILocation(line: 1462, column: 5, scope: !5118)
!5121 = !DILocation(line: 1463, column: 1, scope: !5110)
!5122 = distinct !DISubprogram(name: "VEC_tree_base_replace", scope: !133, file: !133, line: 182, type: !5123, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5126)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{!505, !5125, !5, !505}
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!5126 = !{!5127, !5128, !5129, !5130}
!5127 = !DILocalVariable(name: "vec_", arg: 1, scope: !5122, file: !133, line: 182, type: !5125)
!5128 = !DILocalVariable(name: "ix_", arg: 2, scope: !5122, file: !133, line: 182, type: !5)
!5129 = !DILocalVariable(name: "obj_", arg: 3, scope: !5122, file: !133, line: 182, type: !505)
!5130 = !DILocalVariable(name: "old_obj_", scope: !5122, file: !133, line: 182, type: !505)
!5131 = !DILocation(line: 0, scope: !5122)
!5132 = !DILocation(line: 182, column: 1, scope: !5122)
!5133 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !133, file: !133, line: 182, type: !5134, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5136)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{!463, !4950, !5, !863}
!5136 = !{!5137, !5138, !5139}
!5137 = !DILocalVariable(name: "vec_", arg: 1, scope: !5133, file: !133, line: 182, type: !4950)
!5138 = !DILocalVariable(name: "ix_", arg: 2, scope: !5133, file: !133, line: 182, type: !5)
!5139 = !DILocalVariable(name: "ptr", arg: 3, scope: !5133, file: !133, line: 182, type: !863)
!5140 = !DILocation(line: 0, scope: !5133)
!5141 = !DILocation(line: 182, column: 1, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5133, file: !133, line: 182, column: 1)
!5143 = !DILocation(line: 182, column: 1, scope: !5133)
!5144 = !DILocation(line: 182, column: 1, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !133, line: 182, column: 1)
!5146 = !DILocation(line: 182, column: 1, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5142, file: !133, line: 182, column: 1)
!5148 = !DILocation(line: 0, scope: !5142)
!5149 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !4637, file: !4637, line: 434, type: !5150, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5153)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{!505, !5152}
!5152 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !454, line: 27, baseType: !863)
!5153 = !{!5154}
!5154 = !DILocalVariable(name: "def", arg: 1, scope: !5149, file: !4637, line: 434, type: !5152)
!5155 = !DILocation(line: 0, scope: !5149)
!5156 = !DILocation(line: 436, column: 10, scope: !5149)
!5157 = !DILocation(line: 436, column: 3, scope: !5149)
!5158 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !389, file: !389, line: 3080, type: !5159, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5161)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{!863, !829}
!5161 = !{!5162}
!5162 = !DILocalVariable(name: "gs", arg: 1, scope: !5158, file: !389, line: 3080, type: !829)
!5163 = !DILocation(line: 0, scope: !5158)
!5164 = !DILocation(line: 3083, column: 26, scope: !5158)
!5165 = !DILocation(line: 3083, column: 3, scope: !5158)
!5166 = distinct !DISubprogram(name: "single_ssa_tree_operand", scope: !4637, file: !4637, line: 803, type: !5167, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5169)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!505, !829, !463}
!5169 = !{!5170, !5171, !5172, !5173}
!5170 = !DILocalVariable(name: "stmt", arg: 1, scope: !5166, file: !4637, line: 803, type: !829)
!5171 = !DILocalVariable(name: "flags", arg: 2, scope: !5166, file: !4637, line: 803, type: !463)
!5172 = !DILocalVariable(name: "var", scope: !5166, file: !4637, line: 805, type: !505)
!5173 = !DILocalVariable(name: "iter", scope: !5166, file: !4637, line: 806, type: !5174)
!5174 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !454, line: 140, baseType: !5175)
!5175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !454, line: 131, size: 320, elements: !5176)
!5176 = !{!5177, !5178, !5179, !5181, !5183, !5184, !5185}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5175, file: !454, line: 133, baseType: !462, size: 8)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !5175, file: !454, line: 134, baseType: !453, size: 32, offset: 32)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !5175, file: !454, line: 135, baseType: !5180, size: 64, offset: 64)
!5180 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !454, line: 42, baseType: !858)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !5175, file: !454, line: 136, baseType: !5182, size: 64, offset: 128)
!5182 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !454, line: 50, baseType: !865)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !5175, file: !454, line: 137, baseType: !463, size: 32, offset: 192)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !5175, file: !454, line: 138, baseType: !463, size: 32, offset: 224)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !5175, file: !454, line: 139, baseType: !829, size: 64, offset: 256)
!5186 = !DILocation(line: 0, scope: !5166)
!5187 = !DILocation(line: 806, column: 3, scope: !5166)
!5188 = !DILocation(line: 808, column: 9, scope: !5166)
!5189 = !DILocation(line: 809, column: 7, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5166, file: !4637, line: 809, column: 7)
!5191 = !DILocation(line: 809, column: 7, scope: !5166)
!5192 = !DILocation(line: 811, column: 3, scope: !5166)
!5193 = !DILocation(line: 812, column: 7, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5166, file: !4637, line: 812, column: 7)
!5195 = !DILocation(line: 815, column: 1, scope: !5166)
!5196 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !133, file: !133, line: 182, type: !5197, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5199)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{!5, !4950}
!5199 = !{!5200}
!5200 = !DILocalVariable(name: "vec_", arg: 1, scope: !5196, file: !133, line: 182, type: !4950)
!5201 = !DILocation(line: 0, scope: !5196)
!5202 = !DILocation(line: 182, column: 1, scope: !5196)
!5203 = distinct !DISubprogram(name: "lbv_to_gcc_expression", scope: !1, file: !1, line: 1546, type: !5204, scopeLine: 1549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5206)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{!505, !470, !505, !1870, !4960}
!5206 = !{!5207, !5208, !5209, !5210, !5211, !5212, !5213}
!5207 = !DILocalVariable(name: "lbv", arg: 1, scope: !5203, file: !1, line: 1546, type: !470)
!5208 = !DILocalVariable(name: "type", arg: 2, scope: !5203, file: !1, line: 1547, type: !505)
!5209 = !DILocalVariable(name: "induction_vars", arg: 3, scope: !5203, file: !1, line: 1547, type: !1870)
!5210 = !DILocalVariable(name: "stmts_to_insert", arg: 4, scope: !5203, file: !1, line: 1548, type: !4960)
!5211 = !DILocalVariable(name: "k", scope: !5203, file: !1, line: 1550, type: !463)
!5212 = !DILocalVariable(name: "resvar", scope: !5203, file: !1, line: 1551, type: !505)
!5213 = !DILocalVariable(name: "expr", scope: !5203, file: !1, line: 1552, type: !505)
!5214 = !DILocation(line: 0, scope: !5203)
!5215 = !DILocation(line: 1552, column: 40, scope: !5203)
!5216 = !DILocation(line: 1552, column: 15, scope: !5203)
!5217 = !DILocation(line: 1554, column: 7, scope: !5203)
!5218 = !DILocation(line: 1555, column: 3, scope: !5203)
!5219 = !DILocation(line: 1556, column: 7, scope: !5203)
!5220 = !DILocation(line: 1557, column: 12, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5203, file: !1, line: 1556, column: 7)
!5222 = !DILocation(line: 1557, column: 5, scope: !5221)
!5223 = !DILocation(line: 1559, column: 12, scope: !5203)
!5224 = !DILocation(line: 1560, column: 3, scope: !5203)
!5225 = !DILocation(line: 1561, column: 32, scope: !5203)
!5226 = !DILocation(line: 1561, column: 10, scope: !5203)
!5227 = !DILocation(line: 1561, column: 3, scope: !5203)
!5228 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !4637, file: !4637, line: 1101, type: !5229, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5231)
!5229 = !DISubroutineType(types: !5230)
!5230 = !{!1900, !4654}
!5231 = !{!5232}
!5232 = !DILocalVariable(name: "imm", arg: 1, scope: !5228, file: !4637, line: 1101, type: !4654)
!5233 = !DILocation(line: 0, scope: !5228)
!5234 = !DILocation(line: 1103, column: 29, scope: !5228)
!5235 = !DILocation(line: 1103, column: 38, scope: !5228)
!5236 = !DILocation(line: 1103, column: 8, scope: !5228)
!5237 = !DILocation(line: 1103, column: 22, scope: !5228)
!5238 = !DILocation(line: 1104, column: 3, scope: !5228)
!5239 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !4637, file: !4637, line: 1110, type: !4683, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5240)
!5240 = !{!5241}
!5241 = !DILocalVariable(name: "imm", arg: 1, scope: !5239, file: !4637, line: 1110, type: !4685)
!5242 = !DILocation(line: 0, scope: !5239)
!5243 = !DILocation(line: 1112, column: 16, scope: !5239)
!5244 = !DILocation(line: 1112, column: 34, scope: !5239)
!5245 = !DILocation(line: 1112, column: 24, scope: !5239)
!5246 = !DILocation(line: 1112, column: 10, scope: !5239)
!5247 = !DILocation(line: 1112, column: 3, scope: !5239)
!5248 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !4637, file: !4637, line: 1118, type: !5229, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5249)
!5249 = !{!5250}
!5250 = !DILocalVariable(name: "imm", arg: 1, scope: !5248, file: !4637, line: 1118, type: !4654)
!5251 = !DILocation(line: 0, scope: !5248)
!5252 = !DILocation(line: 1120, column: 23, scope: !5248)
!5253 = !DILocation(line: 1120, column: 16, scope: !5248)
!5254 = !DILocation(line: 1121, column: 7, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5248, file: !4637, line: 1121, column: 7)
!5256 = !DILocation(line: 1121, column: 7, scope: !5248)
!5257 = !DILocation(line: 1125, column: 33, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5255, file: !4637, line: 1124, column: 5)
!5259 = !DILocation(line: 1125, column: 42, scope: !5258)
!5260 = !DILocation(line: 1125, column: 26, scope: !5258)
!5261 = !DILocation(line: 1126, column: 7, scope: !5258)
!5262 = !DILocation(line: 0, scope: !5255)
!5263 = !DILocation(line: 1128, column: 1, scope: !5248)
!5264 = distinct !DISubprogram(name: "gimple_phi_arg_edge", scope: !4637, file: !4637, line: 467, type: !5265, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5267)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{!809, !829, !974}
!5267 = !{!5268, !5269}
!5268 = !DILocalVariable(name: "gs", arg: 1, scope: !5264, file: !4637, line: 467, type: !829)
!5269 = !DILocalVariable(name: "i", arg: 2, scope: !5264, file: !4637, line: 467, type: !974)
!5270 = !DILocation(line: 0, scope: !5264)
!5271 = !DILocation(line: 469, column: 10, scope: !5264)
!5272 = !DILocation(line: 469, column: 3, scope: !5264)
!5273 = distinct !DISubprogram(name: "VEC_gimple_heap_safe_push", scope: !389, file: !389, line: 34, type: !5274, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5277)
!5274 = !DISubroutineType(types: !5275)
!5275 = !{!5276, !4730, !829}
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!5277 = !{!5278, !5279}
!5278 = !DILocalVariable(name: "vec_", arg: 1, scope: !5273, file: !389, line: 34, type: !4730)
!5279 = !DILocalVariable(name: "obj_", arg: 2, scope: !5273, file: !389, line: 34, type: !829)
!5280 = !DILocation(line: 0, scope: !5273)
!5281 = !DILocation(line: 34, column: 1, scope: !5273)
!5282 = distinct !DISubprogram(name: "gsi_start_bb", scope: !389, file: !389, line: 4418, type: !5052, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5283)
!5283 = !{!5284, !5285, !5286}
!5284 = !DILocalVariable(name: "bb", arg: 1, scope: !5282, file: !389, line: 4418, type: !1281)
!5285 = !DILocalVariable(name: "i", scope: !5282, file: !389, line: 4420, type: !3841)
!5286 = !DILocalVariable(name: "seq", scope: !5282, file: !389, line: 4421, type: !819)
!5287 = !DILocation(line: 0, scope: !5282)
!5288 = !DILocation(line: 4420, column: 24, scope: !5282)
!5289 = !DILocation(line: 4423, column: 9, scope: !5282)
!5290 = !DILocation(line: 4424, column: 11, scope: !5282)
!5291 = !DILocation(line: 4424, column: 5, scope: !5282)
!5292 = !DILocation(line: 4424, column: 9, scope: !5282)
!5293 = !DILocation(line: 4425, column: 5, scope: !5282)
!5294 = !DILocation(line: 4425, column: 9, scope: !5282)
!5295 = !DILocation(line: 4426, column: 5, scope: !5282)
!5296 = !DILocation(line: 4426, column: 8, scope: !5282)
!5297 = !DILocation(line: 4429, column: 1, scope: !5282)
!5298 = distinct !DISubprogram(name: "gsi_end_p", scope: !389, file: !389, line: 4467, type: !5299, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5301)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{!462, !3841}
!5301 = !{!5302}
!5302 = !DILocalVariable(name: "i", arg: 1, scope: !5298, file: !389, line: 4467, type: !3841)
!5303 = !DILocation(line: 4467, column: 33, scope: !5298)
!5304 = !DILocation(line: 4469, column: 12, scope: !5298)
!5305 = !DILocation(line: 4469, column: 16, scope: !5298)
!5306 = !DILocation(line: 4469, column: 10, scope: !5298)
!5307 = !DILocation(line: 4469, column: 3, scope: !5298)
!5308 = distinct !DISubprogram(name: "gsi_stmt", scope: !389, file: !389, line: 4501, type: !5309, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5311)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{!829, !3841}
!5311 = !{!5312}
!5312 = !DILocalVariable(name: "i", arg: 1, scope: !5308, file: !389, line: 4501, type: !3841)
!5313 = !DILocation(line: 4501, column: 32, scope: !5308)
!5314 = !DILocation(line: 4503, column: 12, scope: !5308)
!5315 = !DILocation(line: 4503, column: 17, scope: !5308)
!5316 = !DILocation(line: 4503, column: 3, scope: !5308)
!5317 = distinct !DISubprogram(name: "not_interesting_stmt", scope: !1, file: !1, line: 1885, type: !5318, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5320)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!462, !829}
!5320 = !{!5321}
!5321 = !DILocalVariable(name: "stmt", arg: 1, scope: !5317, file: !1, line: 1885, type: !829)
!5322 = !DILocation(line: 0, scope: !5317)
!5323 = !DILocation(line: 1889, column: 7, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5317, file: !1, line: 1889, column: 7)
!5325 = !DILocation(line: 1889, column: 26, scope: !5324)
!5326 = !DILocation(line: 1890, column: 7, scope: !5324)
!5327 = !DILocation(line: 1890, column: 10, scope: !5324)
!5328 = !DILocation(line: 1890, column: 29, scope: !5324)
!5329 = !DILocation(line: 1891, column: 7, scope: !5324)
!5330 = !DILocation(line: 1891, column: 10, scope: !5324)
!5331 = !DILocation(line: 1891, column: 29, scope: !5324)
!5332 = !DILocation(line: 1892, column: 7, scope: !5324)
!5333 = !DILocation(line: 1892, column: 10, scope: !5324)
!5334 = !DILocation(line: 1889, column: 7, scope: !5317)
!5335 = !DILocation(line: 1895, column: 1, scope: !5317)
!5336 = distinct !DISubprogram(name: "stmt_is_bumper_for_loop", scope: !1, file: !1, line: 1929, type: !5337, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5339)
!5337 = !DISubroutineType(types: !5338)
!5338 = !{!462, !1044, !829}
!5339 = !{!5340, !5341, !5342, !5343, !5344, !5345}
!5340 = !DILocalVariable(name: "loop", arg: 1, scope: !5336, file: !1, line: 1929, type: !1044)
!5341 = !DILocalVariable(name: "stmt", arg: 2, scope: !5336, file: !1, line: 1929, type: !829)
!5342 = !DILocalVariable(name: "use", scope: !5336, file: !1, line: 1931, type: !829)
!5343 = !DILocalVariable(name: "def", scope: !5336, file: !1, line: 1932, type: !505)
!5344 = !DILocalVariable(name: "iter", scope: !5336, file: !1, line: 1933, type: !4572)
!5345 = !DILocalVariable(name: "use_p", scope: !5336, file: !1, line: 1934, type: !1900)
!5346 = !DILocation(line: 0, scope: !5336)
!5347 = !DILocation(line: 1933, column: 3, scope: !5336)
!5348 = !DILocation(line: 1936, column: 9, scope: !5336)
!5349 = !DILocation(line: 1937, column: 8, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5336, file: !1, line: 1937, column: 7)
!5351 = !DILocation(line: 1937, column: 7, scope: !5336)
!5352 = !DILocation(line: 1940, column: 3, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5336, file: !1, line: 1940, column: 3)
!5354 = !DILocation(line: 0, scope: !5353)
!5355 = !DILocation(line: 1940, column: 3, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5353, file: !1, line: 1940, column: 3)
!5357 = !DILocation(line: 1942, column: 13, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5356, file: !1, line: 1941, column: 5)
!5359 = !DILocation(line: 1943, column: 11, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5358, file: !1, line: 1943, column: 11)
!5361 = !DILocation(line: 1943, column: 29, scope: !5360)
!5362 = !DILocation(line: 1943, column: 11, scope: !5358)
!5363 = !DILocation(line: 1945, column: 8, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5365, file: !1, line: 1945, column: 8)
!5365 = distinct !DILexicalBlock(scope: !5360, file: !1, line: 1944, column: 2)
!5366 = !DILocation(line: 1945, column: 8, scope: !5365)
!5367 = !DILocation(line: 1946, column: 38, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5364, file: !1, line: 1946, column: 10)
!5369 = !DILocation(line: 1946, column: 10, scope: !5368)
!5370 = !DILocation(line: 1946, column: 10, scope: !5364)
!5371 = distinct !{!5371, !5352, !5372}
!5372 = !DILocation(line: 1949, column: 5, scope: !5353)
!5373 = !DILocation(line: 1951, column: 1, scope: !5336)
!5374 = distinct !DISubprogram(name: "gsi_next", scope: !389, file: !389, line: 4485, type: !5375, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5378)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{null, !5377}
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!5378 = !{!5379}
!5379 = !DILocalVariable(name: "i", arg: 1, scope: !5374, file: !389, line: 4485, type: !5377)
!5380 = !DILocation(line: 0, scope: !5374)
!5381 = !DILocation(line: 4487, column: 15, scope: !5374)
!5382 = !DILocation(line: 4487, column: 20, scope: !5374)
!5383 = !DILocation(line: 4487, column: 10, scope: !5374)
!5384 = !DILocation(line: 4488, column: 1, scope: !5374)
!5385 = distinct !DISubprogram(name: "lambda_transform_legal_p", scope: !1, file: !1, line: 2599, type: !5386, scopeLine: 2602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5400)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!462, !2509, !463, !5388}
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_heap", file: !1931, line: 333, baseType: !5390)
!5390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_heap", file: !1931, line: 333, size: 128, elements: !5391)
!5391 = !{!5392}
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5390, file: !1931, line: 333, baseType: !5393, size: 128)
!5393 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_base", file: !1931, line: 332, baseType: !5394)
!5394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_base", file: !1931, line: 332, size: 128, elements: !5395)
!5395 = !{!5396, !5397, !5398}
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5394, file: !1931, line: 332, baseType: !5, size: 32)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5394, file: !1931, line: 332, baseType: !5, size: 32, offset: 32)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5394, file: !1931, line: 332, baseType: !5399, size: 64, offset: 64)
!5399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1930, size: 64, elements: !604)
!5400 = !{!5401, !5402, !5403, !5404, !5405, !5406, !5407}
!5401 = !DILocalVariable(name: "trans", arg: 1, scope: !5385, file: !1, line: 2599, type: !2509)
!5402 = !DILocalVariable(name: "nb_loops", arg: 2, scope: !5385, file: !1, line: 2600, type: !463)
!5403 = !DILocalVariable(name: "dependence_relations", arg: 3, scope: !5385, file: !1, line: 2601, type: !5388)
!5404 = !DILocalVariable(name: "i", scope: !5385, file: !1, line: 2603, type: !5)
!5405 = !DILocalVariable(name: "j", scope: !5385, file: !1, line: 2603, type: !5)
!5406 = !DILocalVariable(name: "distres", scope: !5385, file: !1, line: 2604, type: !476)
!5407 = !DILocalVariable(name: "ddr", scope: !5385, file: !1, line: 2605, type: !1932)
!5408 = !DILocation(line: 0, scope: !5385)
!5409 = !DILocation(line: 2605, column: 3, scope: !5385)
!5410 = !DILocation(line: 2607, column: 3, scope: !5385)
!5411 = !DILocation(line: 2611, column: 7, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5385, file: !1, line: 2611, column: 7)
!5413 = !DILocation(line: 2611, column: 48, scope: !5412)
!5414 = !DILocation(line: 2611, column: 7, scope: !5385)
!5415 = !DILocation(line: 2614, column: 9, scope: !5385)
!5416 = !DILocation(line: 2614, column: 7, scope: !5385)
!5417 = !DILocation(line: 2615, column: 11, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5385, file: !1, line: 2615, column: 7)
!5419 = !DILocation(line: 2615, column: 7, scope: !5385)
!5420 = !DILocation(line: 2620, column: 7, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5385, file: !1, line: 2620, column: 7)
!5422 = !DILocation(line: 2620, column: 34, scope: !5421)
!5423 = !DILocation(line: 2620, column: 31, scope: !5421)
!5424 = !DILocation(line: 2620, column: 7, scope: !5385)
!5425 = !DILocation(line: 2623, column: 13, scope: !5385)
!5426 = !DILocation(line: 0, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !1, line: 2646, column: 2)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !1, line: 2645, column: 7)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 2645, column: 7)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !1, line: 2627, column: 5)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !1, line: 2626, column: 3)
!5432 = distinct !DILexicalBlock(scope: !5385, file: !1, line: 2626, column: 3)
!5433 = !DILocation(line: 2626, column: 8, scope: !5432)
!5434 = !DILocation(line: 0, scope: !5432)
!5435 = !DILocation(line: 2626, column: 15, scope: !5431)
!5436 = !DILocation(line: 2626, column: 3, scope: !5432)
!5437 = !DILocation(line: 2631, column: 11, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 2631, column: 11)
!5439 = !DILocation(line: 2631, column: 38, scope: !5438)
!5440 = !DILocation(line: 2631, column: 35, scope: !5438)
!5441 = !DILocation(line: 2632, column: 4, scope: !5438)
!5442 = !DILocation(line: 2632, column: 8, scope: !5438)
!5443 = !DILocation(line: 2632, column: 33, scope: !5438)
!5444 = !DILocation(line: 2632, column: 36, scope: !5438)
!5445 = !DILocation(line: 2631, column: 11, scope: !5430)
!5446 = !DILocation(line: 2636, column: 38, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 2636, column: 11)
!5448 = !DILocation(line: 2636, column: 35, scope: !5447)
!5449 = !DILocation(line: 2636, column: 11, scope: !5430)
!5450 = !DILocation(line: 2641, column: 11, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 2641, column: 11)
!5452 = !DILocation(line: 2641, column: 36, scope: !5451)
!5453 = !DILocation(line: 2641, column: 11, scope: !5430)
!5454 = !DILocation(line: 2645, column: 7, scope: !5429)
!5455 = !DILocation(line: 0, scope: !5429)
!5456 = !DILocation(line: 2645, column: 23, scope: !5428)
!5457 = !DILocation(line: 2645, column: 21, scope: !5428)
!5458 = !DILocation(line: 2647, column: 31, scope: !5427)
!5459 = !DILocation(line: 2648, column: 10, scope: !5427)
!5460 = !DILocation(line: 2647, column: 4, scope: !5427)
!5461 = !DILocation(line: 2650, column: 9, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5427, file: !1, line: 2650, column: 8)
!5463 = !DILocation(line: 2650, column: 8, scope: !5427)
!5464 = !DILocation(line: 2645, column: 50, scope: !5428)
!5465 = !DILocation(line: 2645, column: 7, scope: !5428)
!5466 = distinct !{!5466, !5454, !5467}
!5467 = !DILocation(line: 2652, column: 2, scope: !5429)
!5468 = !DILocation(line: 2626, column: 67, scope: !5431)
!5469 = !DILocation(line: 2626, column: 3, scope: !5431)
!5470 = distinct !{!5470, !5436, !5471}
!5471 = !DILocation(line: 2653, column: 5, scope: !5432)
!5472 = !DILocation(line: 2655, column: 1, scope: !5385)
!5473 = distinct !DISubprogram(name: "VEC_ddr_p_base_length", scope: !1931, file: !1931, line: 332, type: !5474, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5478)
!5474 = !DISubroutineType(types: !5475)
!5475 = !{!5, !5476}
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5393)
!5478 = !{!5479}
!5479 = !DILocalVariable(name: "vec_", arg: 1, scope: !5473, file: !1931, line: 332, type: !5476)
!5480 = !DILocation(line: 0, scope: !5473)
!5481 = !DILocation(line: 332, column: 1, scope: !5473)
!5482 = distinct !DISubprogram(name: "VEC_ddr_p_base_index", scope: !1931, file: !1931, line: 332, type: !5483, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5485)
!5483 = !DISubroutineType(types: !5484)
!5484 = !{!1930, !5476, !5}
!5485 = !{!5486, !5487}
!5486 = !DILocalVariable(name: "vec_", arg: 1, scope: !5482, file: !1931, line: 332, type: !5476)
!5487 = !DILocalVariable(name: "ix_", arg: 2, scope: !5482, file: !1931, line: 332, type: !5)
!5488 = !DILocation(line: 0, scope: !5482)
!5489 = !DILocation(line: 332, column: 1, scope: !5482)
!5490 = distinct !DISubprogram(name: "VEC_ddr_p_base_iterate", scope: !1931, file: !1931, line: 332, type: !5491, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5494)
!5491 = !DISubroutineType(types: !5492)
!5492 = !{!463, !5476, !5, !5493}
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!5494 = !{!5495, !5496, !5497}
!5495 = !DILocalVariable(name: "vec_", arg: 1, scope: !5490, file: !1931, line: 332, type: !5476)
!5496 = !DILocalVariable(name: "ix_", arg: 2, scope: !5490, file: !1931, line: 332, type: !5)
!5497 = !DILocalVariable(name: "ptr", arg: 3, scope: !5490, file: !1931, line: 332, type: !5493)
!5498 = !DILocation(line: 0, scope: !5490)
!5499 = !DILocation(line: 332, column: 1, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5490, file: !1931, line: 332, column: 1)
!5501 = !DILocation(line: 332, column: 1, scope: !5490)
!5502 = !DILocation(line: 332, column: 1, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5500, file: !1931, line: 332, column: 1)
!5504 = !DILocation(line: 332, column: 1, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5500, file: !1931, line: 332, column: 1)
!5506 = !DILocation(line: 0, scope: !5500)
!5507 = distinct !DISubprogram(name: "VEC_lambda_vector_base_length", scope: !471, file: !471, line: 32, type: !5508, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5512)
!5508 = !DISubroutineType(types: !5509)
!5509 = !{!5, !5510}
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 64)
!5511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1979)
!5512 = !{!5513}
!5513 = !DILocalVariable(name: "vec_", arg: 1, scope: !5507, file: !471, line: 32, type: !5510)
!5514 = !DILocation(line: 0, scope: !5507)
!5515 = !DILocation(line: 32, column: 1, scope: !5507)
!5516 = distinct !DISubprogram(name: "VEC_lambda_vector_base_index", scope: !471, file: !471, line: 32, type: !5517, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5519)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{!476, !5510, !5}
!5519 = !{!5520, !5521}
!5520 = !DILocalVariable(name: "vec_", arg: 1, scope: !5516, file: !471, line: 32, type: !5510)
!5521 = !DILocalVariable(name: "ix_", arg: 2, scope: !5516, file: !471, line: 32, type: !5)
!5522 = !DILocation(line: 0, scope: !5516)
!5523 = !DILocation(line: 32, column: 1, scope: !5516)
!5524 = distinct !DISubprogram(name: "lambda_vector_lexico_pos", scope: !471, file: !471, line: 465, type: !5525, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5527)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!462, !476, !5}
!5527 = !{!5528, !5529, !5530}
!5528 = !DILocalVariable(name: "v", arg: 1, scope: !5524, file: !471, line: 465, type: !476)
!5529 = !DILocalVariable(name: "n", arg: 2, scope: !5524, file: !471, line: 466, type: !5)
!5530 = !DILocalVariable(name: "i", scope: !5524, file: !471, line: 468, type: !5)
!5531 = !DILocation(line: 0, scope: !5524)
!5532 = !DILocation(line: 469, column: 17, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5534, file: !471, line: 469, column: 3)
!5534 = distinct !DILexicalBlock(scope: !5524, file: !471, line: 469, column: 3)
!5535 = !DILocation(line: 469, column: 8, scope: !5534)
!5536 = !DILocation(line: 0, scope: !5534)
!5537 = !DILocation(line: 469, column: 3, scope: !5534)
!5538 = !DILocation(line: 471, column: 11, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !471, line: 471, column: 11)
!5540 = distinct !DILexicalBlock(scope: !5533, file: !471, line: 470, column: 5)
!5541 = !DILocation(line: 471, column: 16, scope: !5539)
!5542 = !DILocation(line: 471, column: 11, scope: !5540)
!5543 = !DILocation(line: 473, column: 16, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5540, file: !471, line: 473, column: 11)
!5545 = !DILocation(line: 473, column: 11, scope: !5540)
!5546 = !DILocation(line: 475, column: 16, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5540, file: !471, line: 475, column: 11)
!5548 = !DILocation(line: 475, column: 11, scope: !5540)
!5549 = !DILocation(line: 469, column: 23, scope: !5533)
!5550 = !DILocation(line: 469, column: 3, scope: !5533)
!5551 = distinct !{!5551, !5537, !5552}
!5552 = !DILocation(line: 477, column: 5, scope: !5534)
!5553 = !DILocation(line: 479, column: 1, scope: !5524)
!5554 = distinct !DISubprogram(name: "lambda_collect_parameters", scope: !1, file: !1, line: 2688, type: !5555, scopeLine: 2690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5569)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{null, !5557, !3720}
!5557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5558, size: 64)
!5558 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_heap", file: !1931, line: 209, baseType: !5559)
!5559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_heap", file: !1931, line: 209, size: 128, elements: !5560)
!5560 = !{!5561}
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5559, file: !1931, line: 209, baseType: !5562, size: 128)
!5562 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_base", file: !1931, line: 208, baseType: !5563)
!5563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_base", file: !1931, line: 208, size: 128, elements: !5564)
!5564 = !{!5565, !5566, !5567}
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5563, file: !1931, line: 208, baseType: !5, size: 32)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5563, file: !1931, line: 208, baseType: !5, size: 32, offset: 32)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5563, file: !1931, line: 208, baseType: !5568, size: 64, offset: 64)
!5568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2029, size: 64, elements: !604)
!5569 = !{!5570, !5571, !5572, !5573, !5574, !5577}
!5570 = !DILocalVariable(name: "datarefs", arg: 1, scope: !5554, file: !1, line: 2688, type: !5557)
!5571 = !DILocalVariable(name: "parameters", arg: 2, scope: !5554, file: !1, line: 2689, type: !3720)
!5572 = !DILocalVariable(name: "i", scope: !5554, file: !1, line: 2691, type: !5)
!5573 = !DILocalVariable(name: "j", scope: !5554, file: !1, line: 2691, type: !5)
!5574 = !DILocalVariable(name: "parameter_set", scope: !5554, file: !1, line: 2692, type: !5575)
!5575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 64)
!5576 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !133, line: 5199, flags: DIFlagFwdDecl)
!5577 = !DILocalVariable(name: "data_reference", scope: !5554, file: !1, line: 2693, type: !2029)
!5578 = !DILocation(line: 0, scope: !5554)
!5579 = !DILocation(line: 2692, column: 41, scope: !5554)
!5580 = !DILocation(line: 2693, column: 3, scope: !5554)
!5581 = !DILocation(line: 0, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !1, line: 2695, column: 3)
!5583 = distinct !DILexicalBlock(scope: !5554, file: !1, line: 2695, column: 3)
!5584 = !DILocation(line: 2695, column: 8, scope: !5583)
!5585 = !DILocation(line: 0, scope: !5583)
!5586 = !DILocation(line: 2695, column: 15, scope: !5582)
!5587 = !DILocation(line: 2695, column: 3, scope: !5583)
!5588 = !DILocation(line: 2696, column: 5, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5582, file: !1, line: 2696, column: 5)
!5590 = !DILocation(line: 0, scope: !5589)
!5591 = !DILocation(line: 2696, column: 21, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5589, file: !1, line: 2696, column: 5)
!5593 = !DILocation(line: 2696, column: 19, scope: !5592)
!5594 = !DILocation(line: 2697, column: 42, scope: !5592)
!5595 = !DILocation(line: 2697, column: 7, scope: !5592)
!5596 = !DILocation(line: 2696, column: 58, scope: !5592)
!5597 = !DILocation(line: 2696, column: 5, scope: !5592)
!5598 = distinct !{!5598, !5588, !5599}
!5599 = !DILocation(line: 2698, column: 32, scope: !5589)
!5600 = !DILocation(line: 2695, column: 77, scope: !5582)
!5601 = !DILocation(line: 2695, column: 3, scope: !5582)
!5602 = distinct !{!5602, !5587, !5603}
!5603 = !DILocation(line: 2698, column: 32, scope: !5583)
!5604 = !DILocation(line: 2699, column: 3, scope: !5554)
!5605 = !DILocation(line: 2700, column: 1, scope: !5554)
!5606 = distinct !DISubprogram(name: "VEC_data_reference_p_base_iterate", scope: !1931, file: !1931, line: 208, type: !5607, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5612)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{!463, !5609, !5, !5611}
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 64)
!5610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5562)
!5611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!5612 = !{!5613, !5614, !5615}
!5613 = !DILocalVariable(name: "vec_", arg: 1, scope: !5606, file: !1931, line: 208, type: !5609)
!5614 = !DILocalVariable(name: "ix_", arg: 2, scope: !5606, file: !1931, line: 208, type: !5)
!5615 = !DILocalVariable(name: "ptr", arg: 3, scope: !5606, file: !1931, line: 208, type: !5611)
!5616 = !DILocation(line: 0, scope: !5606)
!5617 = !DILocation(line: 208, column: 1, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5606, file: !1931, line: 208, column: 1)
!5619 = !DILocation(line: 208, column: 1, scope: !5606)
!5620 = !DILocation(line: 208, column: 1, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5618, file: !1931, line: 208, column: 1)
!5622 = !DILocation(line: 208, column: 1, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5618, file: !1931, line: 208, column: 1)
!5624 = !DILocation(line: 0, scope: !5618)
!5625 = distinct !DISubprogram(name: "lambda_collect_parameters_from_af", scope: !1, file: !1, line: 2662, type: !5626, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5628)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{null, !505, !5575, !3720}
!5628 = !{!5629, !5630, !5631, !5632, !5635}
!5629 = !DILocalVariable(name: "access_function", arg: 1, scope: !5625, file: !1, line: 2662, type: !505)
!5630 = !DILocalVariable(name: "param_set", arg: 2, scope: !5625, file: !1, line: 2663, type: !5575)
!5631 = !DILocalVariable(name: "parameters", arg: 3, scope: !5625, file: !1, line: 2664, type: !3720)
!5632 = !DILocalVariable(name: "i", scope: !5633, file: !1, line: 2677, type: !463)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !1, line: 2676, column: 5)
!5634 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 2669, column: 7)
!5635 = !DILocalVariable(name: "num_operands", scope: !5633, file: !1, line: 2677, type: !463)
!5636 = !DILocation(line: 0, scope: !5625)
!5637 = !DILocation(line: 2666, column: 23, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 2666, column: 7)
!5639 = !DILocation(line: 2666, column: 7, scope: !5625)
!5640 = !DILocation(line: 2669, column: 7, scope: !5634)
!5641 = !DILocation(line: 2669, column: 35, scope: !5634)
!5642 = !DILocation(line: 2670, column: 7, scope: !5634)
!5643 = !DILocation(line: 2670, column: 43, scope: !5634)
!5644 = !DILocation(line: 2670, column: 10, scope: !5634)
!5645 = !DILocation(line: 2670, column: 60, scope: !5634)
!5646 = !DILocation(line: 2669, column: 7, scope: !5625)
!5647 = !DILocation(line: 2672, column: 7, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5634, file: !1, line: 2671, column: 5)
!5649 = !DILocation(line: 2673, column: 7, scope: !5648)
!5650 = !DILocation(line: 2674, column: 5, scope: !5648)
!5651 = !DILocation(line: 2677, column: 29, scope: !5633)
!5652 = !DILocation(line: 0, scope: !5633)
!5653 = !DILocation(line: 0, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !1, line: 2679, column: 7)
!5655 = distinct !DILexicalBlock(scope: !5633, file: !1, line: 2679, column: 7)
!5656 = !DILocation(line: 2679, column: 12, scope: !5655)
!5657 = !DILocation(line: 0, scope: !5655)
!5658 = !DILocation(line: 2679, column: 21, scope: !5654)
!5659 = !DILocation(line: 2679, column: 7, scope: !5655)
!5660 = !DILocation(line: 2680, column: 37, scope: !5654)
!5661 = !DILocation(line: 2680, column: 2, scope: !5654)
!5662 = !DILocation(line: 2679, column: 38, scope: !5654)
!5663 = !DILocation(line: 2679, column: 7, scope: !5654)
!5664 = distinct !{!5664, !5659, !5665}
!5665 = !DILocation(line: 2681, column: 30, scope: !5655)
!5666 = !DILocation(line: 2683, column: 1, scope: !5625)
!5667 = distinct !DISubprogram(name: "lambda_compute_access_matrices", scope: !1, file: !1, line: 2836, type: !5668, scopeLine: 2839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5670)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{!462, !5557, !1870, !1966}
!5670 = !{!5671, !5672, !5673, !5674, !5675}
!5671 = !DILocalVariable(name: "datarefs", arg: 1, scope: !5667, file: !1, line: 2836, type: !5557)
!5672 = !DILocalVariable(name: "parameters", arg: 2, scope: !5667, file: !1, line: 2837, type: !1870)
!5673 = !DILocalVariable(name: "nest", arg: 3, scope: !5667, file: !1, line: 2838, type: !1966)
!5674 = !DILocalVariable(name: "dataref", scope: !5667, file: !1, line: 2840, type: !2029)
!5675 = !DILocalVariable(name: "ix", scope: !5667, file: !1, line: 2841, type: !5)
!5676 = !DILocation(line: 0, scope: !5667)
!5677 = !DILocation(line: 2840, column: 3, scope: !5667)
!5678 = !DILocation(line: 0, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !1, line: 2843, column: 3)
!5680 = distinct !DILexicalBlock(scope: !5667, file: !1, line: 2843, column: 3)
!5681 = !DILocation(line: 2843, column: 8, scope: !5680)
!5682 = !DILocation(line: 0, scope: !5680)
!5683 = !DILocation(line: 2843, column: 16, scope: !5679)
!5684 = !DILocation(line: 2843, column: 3, scope: !5680)
!5685 = !DILocation(line: 2844, column: 31, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5679, file: !1, line: 2844, column: 9)
!5687 = !DILocation(line: 2844, column: 10, scope: !5686)
!5688 = !DILocation(line: 2844, column: 9, scope: !5679)
!5689 = !DILocation(line: 2843, column: 73, scope: !5679)
!5690 = !DILocation(line: 2843, column: 3, scope: !5679)
!5691 = distinct !{!5691, !5684, !5692}
!5692 = !DILocation(line: 2845, column: 14, scope: !5680)
!5693 = !DILocation(line: 2848, column: 1, scope: !5667)
!5694 = distinct !DISubprogram(name: "build_access_matrix", scope: !1, file: !1, line: 2803, type: !5695, scopeLine: 2805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5697)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{!462, !2029, !1870, !1966}
!5697 = !{!5698, !5699, !5700, !5701, !5702, !5703, !5704, !5705, !5706, !5710}
!5698 = !DILocalVariable(name: "data_reference", arg: 1, scope: !5694, file: !1, line: 2803, type: !2029)
!5699 = !DILocalVariable(name: "parameters", arg: 2, scope: !5694, file: !1, line: 2804, type: !1870)
!5700 = !DILocalVariable(name: "nest", arg: 3, scope: !5694, file: !1, line: 2804, type: !1966)
!5701 = !DILocalVariable(name: "am", scope: !5694, file: !1, line: 2806, type: !1962)
!5702 = !DILocalVariable(name: "i", scope: !5694, file: !1, line: 2807, type: !5)
!5703 = !DILocalVariable(name: "ndim", scope: !5694, file: !1, line: 2807, type: !5)
!5704 = !DILocalVariable(name: "nivs", scope: !5694, file: !1, line: 2808, type: !5)
!5705 = !DILocalVariable(name: "lambda_nb_columns", scope: !5694, file: !1, line: 2809, type: !5)
!5706 = !DILocalVariable(name: "access_vector", scope: !5707, file: !1, line: 2820, type: !476)
!5707 = distinct !DILexicalBlock(scope: !5708, file: !1, line: 2819, column: 5)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !1, line: 2818, column: 3)
!5709 = distinct !DILexicalBlock(scope: !5694, file: !1, line: 2818, column: 3)
!5710 = !DILocalVariable(name: "access_function", scope: !5707, file: !1, line: 2821, type: !505)
!5711 = !DILocation(line: 0, scope: !5694)
!5712 = !DILocation(line: 2806, column: 30, scope: !5694)
!5713 = !DILocation(line: 2807, column: 22, scope: !5694)
!5714 = !DILocation(line: 2808, column: 19, scope: !5694)
!5715 = !DILocation(line: 2811, column: 3, scope: !5694)
!5716 = !DILocation(line: 2811, column: 21, scope: !5694)
!5717 = !DILocation(line: 2812, column: 3, scope: !5694)
!5718 = !DILocation(line: 2812, column: 29, scope: !5694)
!5719 = !DILocation(line: 2813, column: 3, scope: !5694)
!5720 = !DILocation(line: 2813, column: 22, scope: !5694)
!5721 = !DILocation(line: 2815, column: 23, scope: !5694)
!5722 = !DILocation(line: 2816, column: 20, scope: !5694)
!5723 = !DILocation(line: 2816, column: 3, scope: !5694)
!5724 = !DILocation(line: 2816, column: 18, scope: !5694)
!5725 = !DILocation(line: 2818, column: 8, scope: !5709)
!5726 = !DILocation(line: 0, scope: !5709)
!5727 = !DILocation(line: 2818, column: 17, scope: !5708)
!5728 = !DILocation(line: 2818, column: 3, scope: !5709)
!5729 = !DILocation(line: 2820, column: 37, scope: !5707)
!5730 = !DILocation(line: 0, scope: !5707)
!5731 = !DILocation(line: 2821, column: 30, scope: !5707)
!5732 = !DILocation(line: 2823, column: 12, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5707, file: !1, line: 2823, column: 11)
!5734 = !DILocation(line: 2823, column: 11, scope: !5707)
!5735 = !DILocation(line: 2826, column: 7, scope: !5707)
!5736 = !DILocation(line: 2827, column: 5, scope: !5708)
!5737 = !DILocation(line: 2818, column: 26, scope: !5708)
!5738 = !DILocation(line: 2818, column: 3, scope: !5708)
!5739 = distinct !{!5739, !5728, !5740}
!5740 = !DILocation(line: 2827, column: 5, scope: !5709)
!5741 = !DILocation(line: 2829, column: 3, scope: !5694)
!5742 = !DILocation(line: 2829, column: 37, scope: !5694)
!5743 = !DILocation(line: 2830, column: 3, scope: !5694)
!5744 = !DILocation(line: 2831, column: 1, scope: !5694)
!5745 = distinct !DISubprogram(name: "lambda_vector_clear", scope: !471, file: !471, line: 319, type: !5746, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5748)
!5746 = !DISubroutineType(types: !5747)
!5747 = !{null, !476, !463}
!5748 = !{!5749, !5750}
!5749 = !DILocalVariable(name: "vec1", arg: 1, scope: !5745, file: !471, line: 319, type: !476)
!5750 = !DILocalVariable(name: "size", arg: 2, scope: !5745, file: !471, line: 319, type: !463)
!5751 = !DILocation(line: 0, scope: !5745)
!5752 = !DILocation(line: 321, column: 11, scope: !5745)
!5753 = !DILocation(line: 321, column: 20, scope: !5745)
!5754 = !DILocation(line: 321, column: 25, scope: !5745)
!5755 = !DILocation(line: 321, column: 3, scope: !5745)
!5756 = !DILocation(line: 322, column: 1, scope: !5745)
!5757 = distinct !DISubprogram(name: "lambda_lattice_new", scope: !1, file: !1, line: 366, type: !5758, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5760)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!1857, !463, !463, !2483}
!5760 = !{!5761, !5762, !5763, !5764}
!5761 = !DILocalVariable(name: "depth", arg: 1, scope: !5757, file: !1, line: 366, type: !463)
!5762 = !DILocalVariable(name: "invariants", arg: 2, scope: !5757, file: !1, line: 366, type: !463)
!5763 = !DILocalVariable(name: "lambda_obstack", arg: 3, scope: !5757, file: !1, line: 366, type: !2483)
!5764 = !DILocalVariable(name: "ret", scope: !5757, file: !1, line: 368, type: !1857)
!5765 = !DILocation(line: 0, scope: !5757)
!5766 = !DILocation(line: 369, column: 25, scope: !5757)
!5767 = !DILocation(line: 370, column: 24, scope: !5757)
!5768 = !DILocation(line: 370, column: 3, scope: !5757)
!5769 = !DILocation(line: 370, column: 22, scope: !5757)
!5770 = !DILocation(line: 371, column: 26, scope: !5757)
!5771 = !DILocation(line: 371, column: 3, scope: !5757)
!5772 = !DILocation(line: 371, column: 24, scope: !5757)
!5773 = !DILocation(line: 372, column: 37, scope: !5757)
!5774 = !DILocation(line: 372, column: 3, scope: !5757)
!5775 = !DILocation(line: 372, column: 35, scope: !5757)
!5776 = !DILocation(line: 373, column: 3, scope: !5757)
!5777 = !DILocation(line: 373, column: 27, scope: !5757)
!5778 = !DILocation(line: 374, column: 3, scope: !5757)
!5779 = !DILocation(line: 374, column: 28, scope: !5757)
!5780 = !DILocation(line: 375, column: 3, scope: !5757)
!5781 = distinct !DISubprogram(name: "lambda_vector_add_mc", scope: !471, file: !471, line: 286, type: !5782, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5784)
!5782 = !DISubroutineType(types: !5783)
!5783 = !{null, !476, !463, !476, !463, !476, !463}
!5784 = !{!5785, !5786, !5787, !5788, !5789, !5790, !5791}
!5785 = !DILocalVariable(name: "vec1", arg: 1, scope: !5781, file: !471, line: 286, type: !476)
!5786 = !DILocalVariable(name: "const1", arg: 2, scope: !5781, file: !471, line: 286, type: !463)
!5787 = !DILocalVariable(name: "vec2", arg: 3, scope: !5781, file: !471, line: 287, type: !476)
!5788 = !DILocalVariable(name: "const2", arg: 4, scope: !5781, file: !471, line: 287, type: !463)
!5789 = !DILocalVariable(name: "vec3", arg: 5, scope: !5781, file: !471, line: 288, type: !476)
!5790 = !DILocalVariable(name: "size", arg: 6, scope: !5781, file: !471, line: 288, type: !463)
!5791 = !DILocalVariable(name: "i", scope: !5781, file: !471, line: 290, type: !463)
!5792 = !DILocation(line: 0, scope: !5781)
!5793 = !DILocation(line: 291, column: 8, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5781, file: !471, line: 291, column: 3)
!5795 = !DILocation(line: 0, scope: !5794)
!5796 = !DILocation(line: 291, column: 17, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5794, file: !471, line: 291, column: 3)
!5798 = !DILocation(line: 291, column: 3, scope: !5794)
!5799 = !DILocation(line: 292, column: 24, scope: !5797)
!5800 = !DILocation(line: 292, column: 22, scope: !5797)
!5801 = !DILocation(line: 292, column: 43, scope: !5797)
!5802 = !DILocation(line: 292, column: 41, scope: !5797)
!5803 = !DILocation(line: 292, column: 32, scope: !5797)
!5804 = !DILocation(line: 292, column: 5, scope: !5797)
!5805 = !DILocation(line: 292, column: 13, scope: !5797)
!5806 = !DILocation(line: 291, column: 26, scope: !5797)
!5807 = !DILocation(line: 291, column: 3, scope: !5797)
!5808 = distinct !{!5808, !5798, !5809}
!5809 = !DILocation(line: 292, column: 49, scope: !5794)
!5810 = !DILocation(line: 293, column: 1, scope: !5781)
!5811 = distinct !DISubprogram(name: "compute_nest_using_fourier_motzkin", scope: !1, file: !1, line: 485, type: !5812, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5814)
!5812 = !DISubroutineType(types: !5813)
!5813 = !{!489, !463, !463, !463, !1862, !1862, !476, !2483}
!5814 = !{!5815, !5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836}
!5815 = !DILocalVariable(name: "size", arg: 1, scope: !5811, file: !1, line: 485, type: !463)
!5816 = !DILocalVariable(name: "depth", arg: 2, scope: !5811, file: !1, line: 486, type: !463)
!5817 = !DILocalVariable(name: "invariants", arg: 3, scope: !5811, file: !1, line: 487, type: !463)
!5818 = !DILocalVariable(name: "A", arg: 4, scope: !5811, file: !1, line: 488, type: !1862)
!5819 = !DILocalVariable(name: "B", arg: 5, scope: !5811, file: !1, line: 489, type: !1862)
!5820 = !DILocalVariable(name: "a", arg: 6, scope: !5811, file: !1, line: 490, type: !476)
!5821 = !DILocalVariable(name: "lambda_obstack", arg: 7, scope: !5811, file: !1, line: 491, type: !2483)
!5822 = !DILocalVariable(name: "multiple", scope: !5811, file: !1, line: 494, type: !463)
!5823 = !DILocalVariable(name: "f1", scope: !5811, file: !1, line: 494, type: !463)
!5824 = !DILocalVariable(name: "f2", scope: !5811, file: !1, line: 494, type: !463)
!5825 = !DILocalVariable(name: "i", scope: !5811, file: !1, line: 495, type: !463)
!5826 = !DILocalVariable(name: "j", scope: !5811, file: !1, line: 495, type: !463)
!5827 = !DILocalVariable(name: "k", scope: !5811, file: !1, line: 495, type: !463)
!5828 = !DILocalVariable(name: "expression", scope: !5811, file: !1, line: 496, type: !480)
!5829 = !DILocalVariable(name: "loop", scope: !5811, file: !1, line: 497, type: !495)
!5830 = !DILocalVariable(name: "auxillary_nest", scope: !5811, file: !1, line: 498, type: !489)
!5831 = !DILocalVariable(name: "swapmatrix", scope: !5811, file: !1, line: 499, type: !1862)
!5832 = !DILocalVariable(name: "A1", scope: !5811, file: !1, line: 499, type: !1862)
!5833 = !DILocalVariable(name: "B1", scope: !5811, file: !1, line: 499, type: !1862)
!5834 = !DILocalVariable(name: "swapvector", scope: !5811, file: !1, line: 500, type: !476)
!5835 = !DILocalVariable(name: "a1", scope: !5811, file: !1, line: 500, type: !476)
!5836 = !DILocalVariable(name: "newsize", scope: !5811, file: !1, line: 501, type: !463)
!5837 = !DILocation(line: 0, scope: !5811)
!5838 = !DILocation(line: 503, column: 8, scope: !5811)
!5839 = !DILocation(line: 504, column: 8, scope: !5811)
!5840 = !DILocation(line: 505, column: 8, scope: !5811)
!5841 = !DILocation(line: 507, column: 20, scope: !5811)
!5842 = !DILocation(line: 0, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !1, line: 510, column: 5)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !1, line: 509, column: 3)
!5845 = distinct !DILexicalBlock(scope: !5811, file: !1, line: 509, column: 3)
!5846 = !DILocation(line: 509, column: 8, scope: !5845)
!5847 = !DILocation(line: 0, scope: !5845)
!5848 = !DILocation(line: 509, column: 25, scope: !5844)
!5849 = !DILocation(line: 509, column: 3, scope: !5845)
!5850 = !DILocation(line: 511, column: 14, scope: !5843)
!5851 = !DILocation(line: 512, column: 7, scope: !5843)
!5852 = !DILocation(line: 512, column: 36, scope: !5843)
!5853 = !DILocation(line: 513, column: 7, scope: !5843)
!5854 = !DILocation(line: 513, column: 22, scope: !5843)
!5855 = !DILocation(line: 0, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !1, line: 558, column: 12)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !1, line: 543, column: 6)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !1, line: 542, column: 13)
!5859 = distinct !DILexicalBlock(scope: !5860, file: !1, line: 517, column: 8)
!5860 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 516, column: 2)
!5861 = distinct !DILexicalBlock(scope: !5862, file: !1, line: 515, column: 7)
!5862 = distinct !DILexicalBlock(scope: !5843, file: !1, line: 515, column: 7)
!5863 = !DILocation(line: 0, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5856, file: !1, line: 560, column: 3)
!5865 = !DILocation(line: 0, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5867, file: !1, line: 534, column: 12)
!5867 = distinct !DILexicalBlock(scope: !5859, file: !1, line: 518, column: 6)
!5868 = !DILocation(line: 0, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5866, file: !1, line: 536, column: 3)
!5870 = !DILocation(line: 515, column: 12, scope: !5862)
!5871 = !DILocation(line: 0, scope: !5862)
!5872 = !DILocation(line: 515, column: 21, scope: !5861)
!5873 = !DILocation(line: 515, column: 7, scope: !5862)
!5874 = !DILocation(line: 571, column: 7, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5843, file: !1, line: 571, column: 7)
!5876 = !DILocation(line: 517, column: 8, scope: !5859)
!5877 = !DILocation(line: 517, column: 16, scope: !5859)
!5878 = !DILocation(line: 517, column: 8, scope: !5860)
!5879 = !DILocation(line: 521, column: 28, scope: !5867)
!5880 = !DILocation(line: 0, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 524, column: 8)
!5882 = distinct !DILexicalBlock(scope: !5867, file: !1, line: 524, column: 8)
!5883 = !DILocation(line: 524, column: 22, scope: !5881)
!5884 = !DILocation(line: 524, column: 13, scope: !5882)
!5885 = !DILocation(line: 0, scope: !5882)
!5886 = !DILocation(line: 524, column: 8, scope: !5882)
!5887 = !DILocation(line: 0, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !1, line: 527, column: 8)
!5889 = distinct !DILexicalBlock(scope: !5867, file: !1, line: 527, column: 8)
!5890 = !DILocation(line: 527, column: 8, scope: !5889)
!5891 = !DILocation(line: 525, column: 38, scope: !5881)
!5892 = !DILocation(line: 525, column: 3, scope: !5881)
!5893 = !DILocation(line: 525, column: 36, scope: !5881)
!5894 = !DILocation(line: 524, column: 28, scope: !5881)
!5895 = !DILocation(line: 524, column: 8, scope: !5881)
!5896 = distinct !{!5896, !5886, !5897}
!5897 = !DILocation(line: 525, column: 44, scope: !5882)
!5898 = !DILocation(line: 0, scope: !5889)
!5899 = !DILocation(line: 527, column: 22, scope: !5888)
!5900 = !DILocation(line: 528, column: 53, scope: !5888)
!5901 = !DILocation(line: 528, column: 51, scope: !5888)
!5902 = !DILocation(line: 528, column: 3, scope: !5888)
!5903 = !DILocation(line: 528, column: 46, scope: !5888)
!5904 = !DILocation(line: 527, column: 37, scope: !5888)
!5905 = !DILocation(line: 527, column: 8, scope: !5888)
!5906 = distinct !{!5906, !5890, !5907}
!5907 = !DILocation(line: 528, column: 59, scope: !5889)
!5908 = !DILocation(line: 530, column: 44, scope: !5867)
!5909 = !DILocation(line: 530, column: 42, scope: !5867)
!5910 = !DILocation(line: 530, column: 8, scope: !5867)
!5911 = !DILocation(line: 530, column: 37, scope: !5867)
!5912 = !DILocation(line: 531, column: 41, scope: !5867)
!5913 = !DILocation(line: 531, column: 39, scope: !5867)
!5914 = !DILocation(line: 531, column: 8, scope: !5867)
!5915 = !DILocation(line: 531, column: 34, scope: !5867)
!5916 = !DILocation(line: 534, column: 24, scope: !5866)
!5917 = !DILocation(line: 534, column: 13, scope: !5866)
!5918 = !DILocation(line: 534, column: 12, scope: !5867)
!5919 = !DILocation(line: 537, column: 29, scope: !5869)
!5920 = !DILocation(line: 537, column: 5, scope: !5869)
!5921 = !DILocation(line: 537, column: 27, scope: !5869)
!5922 = !DILocation(line: 538, column: 27, scope: !5869)
!5923 = !DILocation(line: 539, column: 3, scope: !5869)
!5924 = !DILocation(line: 542, column: 21, scope: !5858)
!5925 = !DILocation(line: 542, column: 13, scope: !5859)
!5926 = !DILocation(line: 546, column: 28, scope: !5857)
!5927 = !DILocation(line: 0, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5929, file: !1, line: 548, column: 8)
!5929 = distinct !DILexicalBlock(scope: !5857, file: !1, line: 548, column: 8)
!5930 = !DILocation(line: 548, column: 22, scope: !5928)
!5931 = !DILocation(line: 548, column: 13, scope: !5929)
!5932 = !DILocation(line: 0, scope: !5929)
!5933 = !DILocation(line: 548, column: 8, scope: !5929)
!5934 = !DILocation(line: 0, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5936, file: !1, line: 551, column: 8)
!5936 = distinct !DILexicalBlock(scope: !5857, file: !1, line: 551, column: 8)
!5937 = !DILocation(line: 551, column: 8, scope: !5936)
!5938 = !DILocation(line: 549, column: 43, scope: !5928)
!5939 = !DILocation(line: 549, column: 41, scope: !5928)
!5940 = !DILocation(line: 549, column: 3, scope: !5928)
!5941 = !DILocation(line: 549, column: 36, scope: !5928)
!5942 = !DILocation(line: 548, column: 28, scope: !5928)
!5943 = !DILocation(line: 548, column: 8, scope: !5928)
!5944 = distinct !{!5944, !5933, !5945}
!5945 = !DILocation(line: 549, column: 49, scope: !5929)
!5946 = !DILocation(line: 0, scope: !5936)
!5947 = !DILocation(line: 551, column: 22, scope: !5935)
!5948 = !DILocation(line: 552, column: 48, scope: !5935)
!5949 = !DILocation(line: 552, column: 3, scope: !5935)
!5950 = !DILocation(line: 552, column: 46, scope: !5935)
!5951 = !DILocation(line: 551, column: 37, scope: !5935)
!5952 = !DILocation(line: 551, column: 8, scope: !5935)
!5953 = distinct !{!5953, !5937, !5954}
!5954 = !DILocation(line: 552, column: 54, scope: !5936)
!5955 = !DILocation(line: 554, column: 39, scope: !5857)
!5956 = !DILocation(line: 554, column: 8, scope: !5857)
!5957 = !DILocation(line: 554, column: 37, scope: !5857)
!5958 = !DILocation(line: 555, column: 36, scope: !5857)
!5959 = !DILocation(line: 555, column: 8, scope: !5857)
!5960 = !DILocation(line: 555, column: 34, scope: !5857)
!5961 = !DILocation(line: 558, column: 24, scope: !5856)
!5962 = !DILocation(line: 558, column: 13, scope: !5856)
!5963 = !DILocation(line: 558, column: 12, scope: !5857)
!5964 = !DILocation(line: 561, column: 29, scope: !5864)
!5965 = !DILocation(line: 561, column: 5, scope: !5864)
!5966 = !DILocation(line: 561, column: 27, scope: !5864)
!5967 = !DILocation(line: 562, column: 27, scope: !5864)
!5968 = !DILocation(line: 563, column: 3, scope: !5864)
!5969 = !DILocation(line: 515, column: 30, scope: !5861)
!5970 = !DILocation(line: 515, column: 7, scope: !5861)
!5971 = distinct !{!5971, !5873, !5972}
!5972 = !DILocation(line: 566, column: 2, scope: !5862)
!5973 = !DILocation(line: 0, scope: !5875)
!5974 = !DILocation(line: 571, column: 21, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5875, file: !1, line: 571, column: 7)
!5976 = !DILocation(line: 576, column: 8, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !1, line: 576, column: 8)
!5978 = distinct !DILexicalBlock(scope: !5975, file: !1, line: 572, column: 2)
!5979 = !DILocation(line: 576, column: 16, scope: !5977)
!5980 = !DILocation(line: 576, column: 8, scope: !5978)
!5981 = !DILocation(line: 578, column: 34, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 577, column: 6)
!5983 = !DILocation(line: 578, column: 8, scope: !5982)
!5984 = !DILocation(line: 579, column: 28, scope: !5982)
!5985 = !DILocation(line: 579, column: 34, scope: !5982)
!5986 = !DILocation(line: 579, column: 8, scope: !5982)
!5987 = !DILocation(line: 580, column: 22, scope: !5982)
!5988 = !DILocation(line: 580, column: 8, scope: !5982)
!5989 = !DILocation(line: 580, column: 20, scope: !5982)
!5990 = !DILocation(line: 581, column: 15, scope: !5982)
!5991 = !DILocation(line: 582, column: 6, scope: !5982)
!5992 = !DILocation(line: 583, column: 21, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 583, column: 13)
!5994 = !DILocation(line: 583, column: 13, scope: !5977)
!5995 = !DILocation(line: 0, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !1, line: 588, column: 7)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !1, line: 587, column: 9)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !1, line: 586, column: 3)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !1, line: 585, column: 8)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !1, line: 585, column: 8)
!6001 = distinct !DILexicalBlock(scope: !5993, file: !1, line: 584, column: 6)
!6002 = !DILocation(line: 585, column: 8, scope: !6000)
!6003 = !DILocation(line: 0, scope: !6000)
!6004 = !DILocation(line: 585, column: 22, scope: !5999)
!6005 = !DILocation(line: 587, column: 9, scope: !5997)
!6006 = !DILocation(line: 587, column: 17, scope: !5997)
!6007 = !DILocation(line: 587, column: 9, scope: !5998)
!6008 = !DILocation(line: 589, column: 43, scope: !5996)
!6009 = !DILocation(line: 589, column: 20, scope: !5996)
!6010 = !DILocation(line: 590, column: 25, scope: !5996)
!6011 = !DILocation(line: 590, column: 23, scope: !5996)
!6012 = !DILocation(line: 591, column: 30, scope: !5996)
!6013 = !DILocation(line: 591, column: 28, scope: !5996)
!6014 = !DILocation(line: 594, column: 10, scope: !5996)
!6015 = !DILocation(line: 593, column: 9, scope: !5996)
!6016 = !DILocation(line: 595, column: 31, scope: !5996)
!6017 = !DILocation(line: 595, column: 41, scope: !5996)
!6018 = !DILocation(line: 596, column: 10, scope: !5996)
!6019 = !DILocation(line: 595, column: 9, scope: !5996)
!6020 = !DILocation(line: 597, column: 28, scope: !5996)
!6021 = !DILocation(line: 597, column: 26, scope: !5996)
!6022 = !DILocation(line: 597, column: 40, scope: !5996)
!6023 = !DILocation(line: 597, column: 38, scope: !5996)
!6024 = !DILocation(line: 597, column: 33, scope: !5996)
!6025 = !DILocation(line: 597, column: 9, scope: !5996)
!6026 = !DILocation(line: 597, column: 21, scope: !5996)
!6027 = !DILocation(line: 598, column: 16, scope: !5996)
!6028 = !DILocation(line: 599, column: 7, scope: !5996)
!6029 = !DILocation(line: 585, column: 31, scope: !5999)
!6030 = !DILocation(line: 585, column: 8, scope: !5999)
!6031 = distinct !{!6031, !6002, !6032}
!6032 = !DILocation(line: 600, column: 3, scope: !6000)
!6033 = !DILocation(line: 571, column: 30, scope: !5975)
!6034 = !DILocation(line: 571, column: 7, scope: !5975)
!6035 = distinct !{!6035, !5874, !6036}
!6036 = !DILocation(line: 602, column: 2, scope: !5875)
!6037 = !DILocation(line: 509, column: 3, scope: !5844)
!6038 = distinct !{!6038, !5849, !6039}
!6039 = !DILocation(line: 617, column: 5, scope: !5845)
!6040 = !DILocation(line: 619, column: 3, scope: !5811)
!6041 = distinct !DISubprogram(name: "lle_equal", scope: !1, file: !1, line: 204, type: !6042, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6044)
!6042 = !DISubroutineType(types: !6043)
!6043 = !{!462, !480, !480, !463, !463}
!6044 = !{!6045, !6046, !6047, !6048, !6049}
!6045 = !DILocalVariable(name: "lle1", arg: 1, scope: !6041, file: !1, line: 204, type: !480)
!6046 = !DILocalVariable(name: "lle2", arg: 2, scope: !6041, file: !1, line: 204, type: !480)
!6047 = !DILocalVariable(name: "depth", arg: 3, scope: !6041, file: !1, line: 205, type: !463)
!6048 = !DILocalVariable(name: "invariants", arg: 4, scope: !6041, file: !1, line: 205, type: !463)
!6049 = !DILocalVariable(name: "i", scope: !6041, file: !1, line: 207, type: !463)
!6050 = !DILocation(line: 0, scope: !6041)
!6051 = !DILocation(line: 209, column: 12, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6041, file: !1, line: 209, column: 7)
!6053 = !DILocation(line: 209, column: 28, scope: !6052)
!6054 = !DILocation(line: 209, column: 20, scope: !6052)
!6055 = !DILocation(line: 211, column: 7, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6041, file: !1, line: 211, column: 7)
!6057 = !DILocation(line: 211, column: 30, scope: !6056)
!6058 = !DILocation(line: 211, column: 27, scope: !6056)
!6059 = !DILocation(line: 211, column: 7, scope: !6041)
!6060 = !DILocation(line: 213, column: 7, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6041, file: !1, line: 213, column: 7)
!6062 = !DILocation(line: 213, column: 33, scope: !6061)
!6063 = !DILocation(line: 213, column: 30, scope: !6061)
!6064 = !DILocation(line: 213, column: 7, scope: !6041)
!6065 = !DILocation(line: 0, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !1, line: 216, column: 9)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !1, line: 215, column: 3)
!6068 = distinct !DILexicalBlock(scope: !6041, file: !1, line: 215, column: 3)
!6069 = !DILocation(line: 215, column: 3, scope: !6068)
!6070 = !DILocation(line: 0, scope: !6068)
!6071 = !DILocation(line: 215, column: 17, scope: !6067)
!6072 = !DILocation(line: 219, column: 9, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6074, file: !1, line: 219, column: 9)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !1, line: 218, column: 3)
!6075 = distinct !DILexicalBlock(scope: !6041, file: !1, line: 218, column: 3)
!6076 = !DILocation(line: 0, scope: !6073)
!6077 = !DILocation(line: 218, column: 3, scope: !6075)
!6078 = !DILocation(line: 216, column: 9, scope: !6066)
!6079 = !DILocation(line: 216, column: 39, scope: !6066)
!6080 = !DILocation(line: 216, column: 36, scope: !6066)
!6081 = !DILocation(line: 216, column: 9, scope: !6067)
!6082 = !DILocation(line: 215, column: 27, scope: !6067)
!6083 = !DILocation(line: 215, column: 3, scope: !6067)
!6084 = distinct !{!6084, !6069, !6085}
!6085 = !DILocation(line: 217, column: 14, scope: !6068)
!6086 = !DILocation(line: 0, scope: !6075)
!6087 = !DILocation(line: 218, column: 17, scope: !6074)
!6088 = !DILocation(line: 220, column: 2, scope: !6073)
!6089 = !DILocation(line: 219, column: 46, scope: !6073)
!6090 = !DILocation(line: 219, column: 9, scope: !6074)
!6091 = !DILocation(line: 218, column: 32, scope: !6074)
!6092 = !DILocation(line: 218, column: 3, scope: !6074)
!6093 = distinct !{!6093, !6077, !6094}
!6094 = !DILocation(line: 221, column: 14, scope: !6075)
!6095 = !DILocation(line: 223, column: 1, scope: !6041)
!6096 = distinct !DISubprogram(name: "lambda_vector_copy", scope: !471, file: !471, line: 298, type: !6097, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6099)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{null, !476, !476, !463}
!6099 = !{!6100, !6101, !6102}
!6100 = !DILocalVariable(name: "vec1", arg: 1, scope: !6096, file: !471, line: 298, type: !476)
!6101 = !DILocalVariable(name: "vec2", arg: 2, scope: !6096, file: !471, line: 298, type: !476)
!6102 = !DILocalVariable(name: "size", arg: 3, scope: !6096, file: !471, line: 299, type: !463)
!6103 = !DILocation(line: 0, scope: !6096)
!6104 = !DILocation(line: 301, column: 11, scope: !6096)
!6105 = !DILocation(line: 301, column: 17, scope: !6096)
!6106 = !DILocation(line: 301, column: 23, scope: !6096)
!6107 = !DILocation(line: 301, column: 28, scope: !6096)
!6108 = !DILocation(line: 301, column: 3, scope: !6096)
!6109 = !DILocation(line: 302, column: 1, scope: !6096)
!6110 = distinct !DISubprogram(name: "lambda_vector_first_nz", scope: !471, file: !471, line: 361, type: !6111, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6113)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{!463, !476, !463, !463}
!6113 = !{!6114, !6115, !6116, !6117}
!6114 = !DILocalVariable(name: "vec1", arg: 1, scope: !6110, file: !471, line: 361, type: !476)
!6115 = !DILocalVariable(name: "n", arg: 2, scope: !6110, file: !471, line: 361, type: !463)
!6116 = !DILocalVariable(name: "start", arg: 3, scope: !6110, file: !471, line: 361, type: !463)
!6117 = !DILocalVariable(name: "j", scope: !6110, file: !471, line: 363, type: !463)
!6118 = !DILocation(line: 0, scope: !6110)
!6119 = !DILocation(line: 364, column: 3, scope: !6110)
!6120 = !DILocation(line: 364, column: 12, scope: !6110)
!6121 = !DILocation(line: 364, column: 16, scope: !6110)
!6122 = !DILocation(line: 364, column: 19, scope: !6110)
!6123 = !DILocation(line: 364, column: 27, scope: !6110)
!6124 = !DILocation(line: 365, column: 6, scope: !6110)
!6125 = distinct !{!6125, !6119, !6124}
!6126 = !DILocation(line: 366, column: 3, scope: !6110)
!6127 = distinct !DISubprogram(name: "lambda_vector_min_nz", scope: !471, file: !471, line: 340, type: !6111, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6128)
!6128 = !{!6129, !6130, !6131, !6132, !6133}
!6129 = !DILocalVariable(name: "vec1", arg: 1, scope: !6127, file: !471, line: 340, type: !476)
!6130 = !DILocalVariable(name: "n", arg: 2, scope: !6127, file: !471, line: 340, type: !463)
!6131 = !DILocalVariable(name: "start", arg: 3, scope: !6127, file: !471, line: 340, type: !463)
!6132 = !DILocalVariable(name: "j", scope: !6127, file: !471, line: 342, type: !463)
!6133 = !DILocalVariable(name: "min", scope: !6127, file: !471, line: 343, type: !463)
!6134 = !DILocation(line: 0, scope: !6127)
!6135 = !DILocation(line: 345, column: 3, scope: !6127)
!6136 = !DILocation(line: 346, column: 8, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6127, file: !471, line: 346, column: 3)
!6138 = !DILocation(line: 0, scope: !6137)
!6139 = !DILocation(line: 346, column: 21, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6137, file: !471, line: 346, column: 3)
!6141 = !DILocation(line: 346, column: 3, scope: !6137)
!6142 = !DILocation(line: 348, column: 11, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6144, file: !471, line: 348, column: 11)
!6144 = distinct !DILexicalBlock(scope: !6140, file: !471, line: 347, column: 5)
!6145 = !DILocation(line: 348, column: 11, scope: !6144)
!6146 = !DILocation(line: 349, column: 10, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6143, file: !471, line: 349, column: 6)
!6148 = !DILocation(line: 349, column: 14, scope: !6147)
!6149 = !DILocation(line: 349, column: 27, scope: !6147)
!6150 = !DILocation(line: 349, column: 25, scope: !6147)
!6151 = !DILocation(line: 349, column: 6, scope: !6143)
!6152 = !DILocation(line: 350, column: 4, scope: !6147)
!6153 = !DILocation(line: 346, column: 27, scope: !6140)
!6154 = !DILocation(line: 346, column: 3, scope: !6140)
!6155 = distinct !{!6155, !6141, !6156}
!6156 = !DILocation(line: 351, column: 5, scope: !6137)
!6157 = !DILocation(line: 352, column: 3, scope: !6127)
!6158 = !DILocation(line: 354, column: 3, scope: !6127)
!6159 = distinct !DISubprogram(name: "lambda_vector_gcd", scope: !471, file: !471, line: 447, type: !6160, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6162)
!6160 = !DISubroutineType(types: !6161)
!6161 = !{!463, !476, !463}
!6162 = !{!6163, !6164, !6165, !6166}
!6163 = !DILocalVariable(name: "vector", arg: 1, scope: !6159, file: !471, line: 447, type: !476)
!6164 = !DILocalVariable(name: "size", arg: 2, scope: !6159, file: !471, line: 447, type: !463)
!6165 = !DILocalVariable(name: "i", scope: !6159, file: !471, line: 449, type: !463)
!6166 = !DILocalVariable(name: "gcd1", scope: !6159, file: !471, line: 450, type: !463)
!6167 = !DILocation(line: 0, scope: !6159)
!6168 = !DILocation(line: 452, column: 12, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6159, file: !471, line: 452, column: 7)
!6170 = !DILocation(line: 452, column: 7, scope: !6159)
!6171 = !DILocation(line: 454, column: 14, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6169, file: !471, line: 453, column: 5)
!6173 = !DILocation(line: 455, column: 21, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !471, line: 455, column: 7)
!6175 = distinct !DILexicalBlock(scope: !6172, file: !471, line: 455, column: 7)
!6176 = !DILocation(line: 455, column: 12, scope: !6175)
!6177 = !DILocation(line: 0, scope: !6175)
!6178 = !DILocation(line: 0, scope: !6172)
!6179 = !DILocation(line: 455, column: 7, scope: !6175)
!6180 = !DILocation(line: 456, column: 20, scope: !6174)
!6181 = !DILocation(line: 456, column: 9, scope: !6174)
!6182 = !DILocation(line: 455, column: 30, scope: !6174)
!6183 = !DILocation(line: 455, column: 7, scope: !6174)
!6184 = distinct !{!6184, !6179, !6185}
!6185 = !DILocation(line: 456, column: 29, scope: !6175)
!6186 = !DILocation(line: 458, column: 3, scope: !6159)
!6187 = distinct !DISubprogram(name: "lambda_vector_mult_const", scope: !471, file: !471, line: 251, type: !6188, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6190)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{null, !476, !476, !463, !463}
!6190 = !{!6191, !6192, !6193, !6194, !6195}
!6191 = !DILocalVariable(name: "vec1", arg: 1, scope: !6187, file: !471, line: 251, type: !476)
!6192 = !DILocalVariable(name: "vec2", arg: 2, scope: !6187, file: !471, line: 251, type: !476)
!6193 = !DILocalVariable(name: "size", arg: 3, scope: !6187, file: !471, line: 252, type: !463)
!6194 = !DILocalVariable(name: "const1", arg: 4, scope: !6187, file: !471, line: 252, type: !463)
!6195 = !DILocalVariable(name: "i", scope: !6187, file: !471, line: 254, type: !463)
!6196 = !DILocation(line: 0, scope: !6187)
!6197 = !DILocation(line: 256, column: 14, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6187, file: !471, line: 256, column: 7)
!6199 = !DILocation(line: 256, column: 7, scope: !6187)
!6200 = !DILocation(line: 259, column: 5, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6198, file: !471, line: 259, column: 5)
!6202 = !DILocation(line: 257, column: 5, scope: !6198)
!6203 = !DILocation(line: 0, scope: !6201)
!6204 = !DILocation(line: 259, column: 19, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6201, file: !471, line: 259, column: 5)
!6206 = !DILocation(line: 260, column: 26, scope: !6205)
!6207 = !DILocation(line: 260, column: 24, scope: !6205)
!6208 = !DILocation(line: 260, column: 7, scope: !6205)
!6209 = !DILocation(line: 260, column: 15, scope: !6205)
!6210 = !DILocation(line: 259, column: 28, scope: !6205)
!6211 = !DILocation(line: 259, column: 5, scope: !6205)
!6212 = distinct !{!6212, !6200, !6213}
!6213 = !DILocation(line: 260, column: 32, scope: !6201)
!6214 = !DILocation(line: 261, column: 1, scope: !6187)
!6215 = distinct !DISubprogram(name: "gimple_op", scope: !389, file: !389, line: 1631, type: !6216, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6218)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!505, !3697, !5}
!6218 = !{!6219, !6220}
!6219 = !DILocalVariable(name: "gs", arg: 1, scope: !6215, file: !389, line: 1631, type: !3697)
!6220 = !DILocalVariable(name: "i", arg: 2, scope: !6215, file: !389, line: 1631, type: !5)
!6221 = !DILocation(line: 0, scope: !6215)
!6222 = !DILocation(line: 1633, column: 7, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6215, file: !389, line: 1633, column: 7)
!6224 = !DILocation(line: 1633, column: 7, scope: !6215)
!6225 = !DILocation(line: 1638, column: 14, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6223, file: !389, line: 1634, column: 5)
!6227 = !DILocation(line: 1638, column: 7, scope: !6226)
!6228 = !DILocation(line: 0, scope: !6223)
!6229 = !DILocation(line: 1642, column: 1, scope: !6215)
!6230 = distinct !DISubprogram(name: "gimple_has_ops", scope: !389, file: !389, line: 1274, type: !4696, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6231)
!6231 = !{!6232}
!6232 = !DILocalVariable(name: "g", arg: 1, scope: !6230, file: !389, line: 1274, type: !3697)
!6233 = !DILocation(line: 0, scope: !6230)
!6234 = !DILocation(line: 1276, column: 10, scope: !6230)
!6235 = !DILocation(line: 1276, column: 26, scope: !6230)
!6236 = !DILocation(line: 1276, column: 41, scope: !6230)
!6237 = !DILocation(line: 1276, column: 44, scope: !6230)
!6238 = !DILocation(line: 1276, column: 60, scope: !6230)
!6239 = !DILocation(line: 1276, column: 3, scope: !6230)
!6240 = distinct !DISubprogram(name: "gimple_ops", scope: !389, file: !389, line: 1614, type: !5159, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6241)
!6241 = !{!6242, !6243}
!6242 = !DILocalVariable(name: "gs", arg: 1, scope: !6240, file: !389, line: 1614, type: !829)
!6243 = !DILocalVariable(name: "off", scope: !6240, file: !389, line: 1616, type: !974)
!6244 = !DILocation(line: 0, scope: !6240)
!6245 = !DILocation(line: 1621, column: 28, scope: !6240)
!6246 = !DILocation(line: 1621, column: 9, scope: !6240)
!6247 = !DILocation(line: 1622, column: 3, scope: !6240)
!6248 = !DILocation(line: 1624, column: 20, scope: !6240)
!6249 = !DILocation(line: 1624, column: 32, scope: !6240)
!6250 = !DILocation(line: 1624, column: 10, scope: !6240)
!6251 = !DILocation(line: 1624, column: 3, scope: !6240)
!6252 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !389, file: !389, line: 1073, type: !6253, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6255)
!6253 = !DISubroutineType(types: !6254)
!6254 = !{!427, !829}
!6255 = !{!6256}
!6256 = !DILocalVariable(name: "gs", arg: 1, scope: !6252, file: !389, line: 1073, type: !829)
!6257 = !DILocation(line: 0, scope: !6252)
!6258 = !DILocation(line: 1075, column: 24, scope: !6252)
!6259 = !DILocation(line: 1075, column: 10, scope: !6252)
!6260 = !DILocation(line: 1075, column: 3, scope: !6252)
!6261 = distinct !DISubprogram(name: "gss_for_code", scope: !389, file: !389, line: 1061, type: !6262, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6264)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!427, !388}
!6264 = !{!6265}
!6265 = !DILocalVariable(name: "code", arg: 1, scope: !6261, file: !389, line: 1061, type: !388)
!6266 = !DILocation(line: 0, scope: !6261)
!6267 = !DILocation(line: 1066, column: 10, scope: !6261)
!6268 = !DILocation(line: 1066, column: 3, scope: !6261)
!6269 = distinct !DISubprogram(name: "instantiate_parameters", scope: !6270, file: !6270, line: 57, type: !6271, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6273)
!6270 = !DIFile(filename: "./tree-scalar-evolution.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6271 = !DISubroutineType(types: !6272)
!6272 = !{!505, !1044, !505}
!6273 = !{!6274, !6275}
!6274 = !DILocalVariable(name: "loop", arg: 1, scope: !6269, file: !6270, line: 57, type: !1044)
!6275 = !DILocalVariable(name: "chrec", arg: 2, scope: !6269, file: !6270, line: 57, type: !505)
!6276 = !DILocation(line: 0, scope: !6269)
!6277 = !DILocation(line: 59, column: 28, scope: !6269)
!6278 = !DILocation(line: 59, column: 10, scope: !6269)
!6279 = !DILocation(line: 59, column: 3, scope: !6269)
!6280 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !4637, file: !4637, line: 427, type: !6281, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6283)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!505, !1900}
!6283 = !{!6284}
!6284 = !DILocalVariable(name: "use", arg: 1, scope: !6280, file: !4637, line: 427, type: !1900)
!6285 = !DILocation(line: 0, scope: !6280)
!6286 = !DILocation(line: 429, column: 17, scope: !6280)
!6287 = !DILocation(line: 429, column: 10, scope: !6280)
!6288 = !DILocation(line: 429, column: 3, scope: !6280)
!6289 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !4637, file: !4637, line: 442, type: !6290, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6292)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{!1900, !829, !463}
!6292 = !{!6293, !6294}
!6293 = !DILocalVariable(name: "gs", arg: 1, scope: !6289, file: !4637, line: 442, type: !829)
!6294 = !DILocalVariable(name: "i", arg: 2, scope: !6289, file: !4637, line: 442, type: !463)
!6295 = !DILocation(line: 0, scope: !6289)
!6296 = !DILocation(line: 444, column: 11, scope: !6289)
!6297 = !DILocation(line: 444, column: 35, scope: !6289)
!6298 = !DILocation(line: 444, column: 3, scope: !6289)
!6299 = distinct !DISubprogram(name: "gcc_tree_to_linear_expression", scope: !1, file: !1, line: 1130, type: !6300, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6302)
!6300 = !DISubroutineType(types: !6301)
!6301 = !{!480, !463, !505, !1870, !1870, !463, !2483}
!6302 = !{!6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6313, !6314}
!6303 = !DILocalVariable(name: "depth", arg: 1, scope: !6299, file: !1, line: 1130, type: !463)
!6304 = !DILocalVariable(name: "expr", arg: 2, scope: !6299, file: !1, line: 1130, type: !505)
!6305 = !DILocalVariable(name: "outerinductionvars", arg: 3, scope: !6299, file: !1, line: 1131, type: !1870)
!6306 = !DILocalVariable(name: "invariants", arg: 4, scope: !6299, file: !1, line: 1132, type: !1870)
!6307 = !DILocalVariable(name: "extra", arg: 5, scope: !6299, file: !1, line: 1132, type: !463)
!6308 = !DILocalVariable(name: "lambda_obstack", arg: 6, scope: !6299, file: !1, line: 1133, type: !2483)
!6309 = !DILocalVariable(name: "lle", scope: !6299, file: !1, line: 1135, type: !480)
!6310 = !DILocalVariable(name: "iv", scope: !6311, file: !1, line: 1150, type: !505)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !1, line: 1149, column: 7)
!6312 = distinct !DILexicalBlock(scope: !6299, file: !1, line: 1137, column: 5)
!6313 = !DILocalVariable(name: "invar", scope: !6311, file: !1, line: 1150, type: !505)
!6314 = !DILocalVariable(name: "i", scope: !6311, file: !1, line: 1151, type: !974)
!6315 = !DILocation(line: 0, scope: !6299)
!6316 = !DILocation(line: 1136, column: 11, scope: !6299)
!6317 = !DILocation(line: 1136, column: 3, scope: !6299)
!6318 = !DILocation(line: 1140, column: 54, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6312, file: !1, line: 1139, column: 7)
!6320 = !DILocation(line: 1140, column: 15, scope: !6319)
!6321 = !DILocation(line: 1141, column: 23, scope: !6319)
!6322 = !DILocation(line: 1141, column: 2, scope: !6319)
!6323 = !DILocation(line: 1142, column: 12, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6319, file: !1, line: 1142, column: 6)
!6325 = !DILocation(line: 1142, column: 6, scope: !6319)
!6326 = !DILocation(line: 1143, column: 23, scope: !6324)
!6327 = !DILocation(line: 1143, column: 4, scope: !6324)
!6328 = !DILocation(line: 0, scope: !6319)
!6329 = !DILocation(line: 1145, column: 2, scope: !6319)
!6330 = !DILocation(line: 1145, column: 24, scope: !6319)
!6331 = !DILocation(line: 1147, column: 7, scope: !6312)
!6332 = !DILocation(line: 1150, column: 2, scope: !6311)
!6333 = !DILocation(line: 0, scope: !6311)
!6334 = !DILocation(line: 0, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !1, line: 1152, column: 2)
!6336 = distinct !DILexicalBlock(scope: !6311, file: !1, line: 1152, column: 2)
!6337 = !DILocation(line: 0, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !1, line: 1155, column: 12)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !1, line: 1154, column: 6)
!6340 = distinct !DILexicalBlock(scope: !6335, file: !1, line: 1153, column: 8)
!6341 = !DILocation(line: 0, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6338, file: !1, line: 1156, column: 3)
!6343 = !DILocation(line: 0, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6342, file: !1, line: 1160, column: 9)
!6345 = !DILocation(line: 1152, column: 7, scope: !6336)
!6346 = !DILocation(line: 0, scope: !6336)
!6347 = !DILocation(line: 1152, column: 14, scope: !6335)
!6348 = !DILocation(line: 1152, column: 2, scope: !6336)
!6349 = !DILocation(line: 1153, column: 8, scope: !6340)
!6350 = !DILocation(line: 1153, column: 11, scope: !6340)
!6351 = !DILocation(line: 1153, column: 8, scope: !6335)
!6352 = !DILocation(line: 1155, column: 12, scope: !6338)
!6353 = !DILocation(line: 1155, column: 33, scope: !6338)
!6354 = !DILocation(line: 1155, column: 30, scope: !6338)
!6355 = !DILocation(line: 1155, column: 12, scope: !6339)
!6356 = !DILocation(line: 1157, column: 25, scope: !6342)
!6357 = !DILocation(line: 1159, column: 5, scope: !6342)
!6358 = !DILocation(line: 1159, column: 31, scope: !6342)
!6359 = !DILocation(line: 1163, column: 5, scope: !6342)
!6360 = !DILocation(line: 1163, column: 27, scope: !6342)
!6361 = !DILocation(line: 1164, column: 3, scope: !6342)
!6362 = !DILocation(line: 1152, column: 62, scope: !6335)
!6363 = !DILocation(line: 1152, column: 2, scope: !6335)
!6364 = distinct !{!6364, !6348, !6365}
!6365 = !DILocation(line: 1165, column: 6, scope: !6336)
!6366 = !DILocation(line: 0, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !1, line: 1166, column: 2)
!6368 = distinct !DILexicalBlock(scope: !6311, file: !1, line: 1166, column: 2)
!6369 = !DILocation(line: 1166, column: 2, scope: !6368)
!6370 = !DILocation(line: 0, scope: !6368)
!6371 = !DILocation(line: 1166, column: 14, scope: !6367)
!6372 = !DILocation(line: 1167, column: 8, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6367, file: !1, line: 1167, column: 8)
!6374 = !DILocation(line: 1167, column: 14, scope: !6373)
!6375 = !DILocation(line: 1167, column: 8, scope: !6367)
!6376 = !DILocation(line: 1169, column: 12, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !1, line: 1169, column: 12)
!6378 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 1168, column: 6)
!6379 = !DILocation(line: 1169, column: 36, scope: !6377)
!6380 = !DILocation(line: 1169, column: 33, scope: !6377)
!6381 = !DILocation(line: 1169, column: 12, scope: !6378)
!6382 = !DILocation(line: 1171, column: 25, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6377, file: !1, line: 1170, column: 3)
!6384 = !DILocation(line: 1173, column: 5, scope: !6383)
!6385 = !DILocation(line: 1173, column: 41, scope: !6383)
!6386 = !DILocation(line: 1176, column: 5, scope: !6383)
!6387 = !DILocation(line: 1176, column: 27, scope: !6383)
!6388 = !DILocation(line: 1177, column: 3, scope: !6383)
!6389 = !DILocation(line: 1166, column: 57, scope: !6367)
!6390 = !DILocation(line: 1166, column: 2, scope: !6367)
!6391 = distinct !{!6391, !6369, !6392}
!6392 = !DILocation(line: 1178, column: 6, scope: !6368)
!6393 = !DILocation(line: 1179, column: 7, scope: !6312)
!6394 = !DILocation(line: 1161, column: 7, scope: !6344)
!6395 = !DILocation(line: 1161, column: 26, scope: !6344)
!6396 = !DILocation(line: 1175, column: 7, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6383, file: !1, line: 1174, column: 9)
!6398 = !DILocation(line: 1175, column: 26, scope: !6397)
!6399 = !DILocation(line: 1180, column: 7, scope: !6312)
!6400 = !DILocation(line: 1186, column: 1, scope: !6299)
!6401 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !133, file: !133, line: 184, type: !6402, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6404)
!6402 = !DISubroutineType(types: !6403)
!6403 = !{!463, !3720, !463}
!6404 = !{!6405, !6406, !6407}
!6405 = !DILocalVariable(name: "vec_", arg: 1, scope: !6401, file: !133, line: 184, type: !3720)
!6406 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6401, file: !133, line: 184, type: !463)
!6407 = !DILocalVariable(name: "extend", scope: !6401, file: !133, line: 184, type: !463)
!6408 = !DILocation(line: 0, scope: !6401)
!6409 = !DILocation(line: 184, column: 1, scope: !6401)
!6410 = !DILocation(line: 184, column: 1, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6401, file: !133, line: 184, column: 1)
!6412 = distinct !DISubprogram(name: "invariant_in_loop_and_outer_loops", scope: !1, file: !1, line: 1206, type: !6413, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6415)
!6413 = !DISubroutineType(types: !6414)
!6414 = !{!462, !1044, !505}
!6415 = !{!6416, !6417}
!6416 = !DILocalVariable(name: "loop", arg: 1, scope: !6412, file: !1, line: 1206, type: !1044)
!6417 = !DILocalVariable(name: "op", arg: 2, scope: !6412, file: !1, line: 1206, type: !505)
!6418 = !DILocation(line: 0, scope: !6412)
!6419 = !DILocation(line: 1208, column: 7, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6412, file: !1, line: 1208, column: 7)
!6421 = !DILocation(line: 1208, column: 7, scope: !6412)
!6422 = !DILocation(line: 1210, column: 7, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6412, file: !1, line: 1210, column: 7)
!6424 = !DILocation(line: 1210, column: 25, scope: !6423)
!6425 = !DILocation(line: 1210, column: 7, scope: !6412)
!6426 = !DILocation(line: 1212, column: 8, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6412, file: !1, line: 1212, column: 7)
!6428 = !DILocation(line: 1212, column: 7, scope: !6412)
!6429 = !DILocation(line: 1214, column: 43, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6412, file: !1, line: 1214, column: 7)
!6431 = !DILocation(line: 1214, column: 8, scope: !6430)
!6432 = !DILocation(line: 1217, column: 1, scope: !6412)
!6433 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !133, file: !133, line: 182, type: !6434, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6436)
!6434 = !DISubroutineType(types: !6435)
!6435 = !{!863, !5125, !505}
!6436 = !{!6437, !6438, !6439}
!6437 = !DILocalVariable(name: "vec_", arg: 1, scope: !6433, file: !133, line: 182, type: !5125)
!6438 = !DILocalVariable(name: "obj_", arg: 2, scope: !6433, file: !133, line: 182, type: !505)
!6439 = !DILocalVariable(name: "slot_", scope: !6433, file: !133, line: 182, type: !863)
!6440 = !DILocation(line: 0, scope: !6433)
!6441 = !DILocation(line: 182, column: 1, scope: !6433)
!6442 = distinct !DISubprogram(name: "gimple_cond_code", scope: !389, file: !389, line: 2221, type: !6443, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6445)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{!132, !3697}
!6445 = !{!6446}
!6446 = !DILocalVariable(name: "gs", arg: 1, scope: !6442, file: !389, line: 2221, type: !3697)
!6447 = !DILocation(line: 0, scope: !6442)
!6448 = !DILocation(line: 2224, column: 38, scope: !6442)
!6449 = !DILocation(line: 2224, column: 3, scope: !6442)
!6450 = distinct !DISubprogram(name: "VEC_int_heap_safe_push", scope: !1877, file: !1877, line: 32, type: !6451, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6454)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!477, !3975, !6453}
!6453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!6454 = !{!6455, !6456}
!6455 = !DILocalVariable(name: "vec_", arg: 1, scope: !6450, file: !1877, line: 32, type: !3975)
!6456 = !DILocalVariable(name: "obj_", arg: 2, scope: !6450, file: !1877, line: 32, type: !6453)
!6457 = !DILocation(line: 0, scope: !6450)
!6458 = !DILocation(line: 32, column: 1, scope: !6450)
!6459 = distinct !DISubprogram(name: "block_before_loop", scope: !6270, file: !6270, line: 46, type: !6460, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6462)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{!1281, !1071}
!6462 = !{!6463, !6464}
!6463 = !DILocalVariable(name: "loop", arg: 1, scope: !6459, file: !6270, line: 46, type: !1071)
!6464 = !DILocalVariable(name: "preheader", scope: !6459, file: !6270, line: 48, type: !809)
!6465 = !DILocation(line: 0, scope: !6459)
!6466 = !DILocation(line: 48, column: 20, scope: !6459)
!6467 = !DILocation(line: 49, column: 11, scope: !6459)
!6468 = !DILocation(line: 49, column: 34, scope: !6459)
!6469 = !DILocation(line: 49, column: 40, scope: !6459)
!6470 = !DILocation(line: 49, column: 3, scope: !6459)
!6471 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !389, file: !389, line: 3100, type: !6472, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6474)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!4644, !829, !5}
!6474 = !{!6475, !6476}
!6475 = !DILocalVariable(name: "gs", arg: 1, scope: !6471, file: !389, line: 3100, type: !829)
!6476 = !DILocalVariable(name: "index", arg: 2, scope: !6471, file: !389, line: 3100, type: !5)
!6477 = !DILocation(line: 0, scope: !6471)
!6478 = !DILocation(line: 3103, column: 3, scope: !6471)
!6479 = !DILocation(line: 3104, column: 12, scope: !6471)
!6480 = !DILocation(line: 3104, column: 3, scope: !6471)
!6481 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !133, file: !133, line: 182, type: !6482, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6484)
!6482 = !DISubroutineType(types: !6483)
!6483 = !{!463, !5125, !463}
!6484 = !{!6485, !6486}
!6485 = !DILocalVariable(name: "vec_", arg: 1, scope: !6481, file: !133, line: 182, type: !5125)
!6486 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6481, file: !133, line: 182, type: !463)
!6487 = !DILocation(line: 0, scope: !6481)
!6488 = !DILocation(line: 182, column: 1, scope: !6481)
!6489 = distinct !DISubprogram(name: "loop_depth", scope: !328, file: !328, line: 425, type: !6490, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6494)
!6490 = !DISubroutineType(types: !6491)
!6491 = !{!5, !6492}
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6493, size: 64)
!6493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!6494 = !{!6495}
!6495 = !DILocalVariable(name: "loop", arg: 1, scope: !6489, file: !328, line: 425, type: !6492)
!6496 = !DILocation(line: 0, scope: !6489)
!6497 = !DILocation(line: 427, column: 10, scope: !6489)
!6498 = !DILocation(line: 427, column: 3, scope: !6489)
!6499 = distinct !DISubprogram(name: "loop_outer", scope: !328, file: !328, line: 434, type: !6500, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6502)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!1044, !6492}
!6502 = !{!6503, !6504}
!6503 = !DILocalVariable(name: "loop", arg: 1, scope: !6499, file: !328, line: 434, type: !6492)
!6504 = !DILocalVariable(name: "n", scope: !6499, file: !328, line: 436, type: !5)
!6505 = !DILocation(line: 0, scope: !6499)
!6506 = !DILocation(line: 436, column: 16, scope: !6499)
!6507 = !DILocation(line: 438, column: 9, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6499, file: !328, line: 438, column: 7)
!6509 = !DILocation(line: 438, column: 7, scope: !6499)
!6510 = !DILocation(line: 441, column: 10, scope: !6499)
!6511 = !DILocation(line: 441, column: 3, scope: !6499)
!6512 = !DILocation(line: 442, column: 1, scope: !6499)
!6513 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !328, file: !328, line: 85, type: !6514, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6518)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!5, !6516}
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 64)
!6517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!6518 = !{!6519}
!6519 = !DILocalVariable(name: "vec_", arg: 1, scope: !6513, file: !328, line: 85, type: !6516)
!6520 = !DILocation(line: 0, scope: !6513)
!6521 = !DILocation(line: 85, column: 1, scope: !6513)
!6522 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !328, file: !328, line: 85, type: !6523, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6525)
!6523 = !DISubroutineType(types: !6524)
!6524 = !{!1071, !6516, !5}
!6525 = !{!6526, !6527}
!6526 = !DILocalVariable(name: "vec_", arg: 1, scope: !6522, file: !328, line: 85, type: !6516)
!6527 = !DILocalVariable(name: "ix_", arg: 2, scope: !6522, file: !328, line: 85, type: !5)
!6528 = !DILocation(line: 0, scope: !6522)
!6529 = !DILocation(line: 85, column: 1, scope: !6522)
!6530 = distinct !DISubprogram(name: "VEC_int_heap_reserve", scope: !1877, file: !1877, line: 32, type: !6531, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6533)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{!463, !3975, !463}
!6533 = !{!6534, !6535, !6536}
!6534 = !DILocalVariable(name: "vec_", arg: 1, scope: !6530, file: !1877, line: 32, type: !3975)
!6535 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6530, file: !1877, line: 32, type: !463)
!6536 = !DILocalVariable(name: "extend", scope: !6530, file: !1877, line: 32, type: !463)
!6537 = !DILocation(line: 0, scope: !6530)
!6538 = !DILocation(line: 32, column: 1, scope: !6530)
!6539 = !DILocation(line: 32, column: 1, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6530, file: !1877, line: 32, column: 1)
!6541 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1877, file: !1877, line: 31, type: !6542, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6545)
!6542 = !DISubroutineType(types: !6543)
!6543 = !{!477, !6544, !463}
!6544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!6545 = !{!6546, !6547, !6548}
!6546 = !DILocalVariable(name: "vec_", arg: 1, scope: !6541, file: !1877, line: 31, type: !6544)
!6547 = !DILocalVariable(name: "obj_", arg: 2, scope: !6541, file: !1877, line: 31, type: !463)
!6548 = !DILocalVariable(name: "slot_", scope: !6541, file: !1877, line: 31, type: !477)
!6549 = !DILocation(line: 0, scope: !6541)
!6550 = !DILocation(line: 31, column: 1, scope: !6541)
!6551 = distinct !DISubprogram(name: "VEC_int_base_space", scope: !1877, file: !1877, line: 31, type: !6552, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6554)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{!463, !6544, !463}
!6554 = !{!6555, !6556}
!6555 = !DILocalVariable(name: "vec_", arg: 1, scope: !6551, file: !1877, line: 31, type: !6544)
!6556 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6551, file: !1877, line: 31, type: !463)
!6557 = !DILocation(line: 0, scope: !6551)
!6558 = !DILocation(line: 31, column: 1, scope: !6551)
!6559 = distinct !DISubprogram(name: "VEC_lambda_loop_heap_reserve", scope: !1, file: !1, line: 1466, type: !6560, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6562)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!463, !4240, !463}
!6562 = !{!6563, !6564, !6565}
!6563 = !DILocalVariable(name: "vec_", arg: 1, scope: !6559, file: !1, line: 1466, type: !4240)
!6564 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6559, file: !1, line: 1466, type: !463)
!6565 = !DILocalVariable(name: "extend", scope: !6559, file: !1, line: 1466, type: !463)
!6566 = !DILocation(line: 0, scope: !6559)
!6567 = !DILocation(line: 1466, column: 1, scope: !6559)
!6568 = !DILocation(line: 1466, column: 1, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6559, file: !1, line: 1466, column: 1)
!6570 = distinct !DISubprogram(name: "VEC_lambda_loop_base_quick_push", scope: !1, file: !1, line: 1465, type: !6571, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6574)
!6571 = !DISubroutineType(types: !6572)
!6572 = !{!494, !6573, !495}
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!6574 = !{!6575, !6576, !6577}
!6575 = !DILocalVariable(name: "vec_", arg: 1, scope: !6570, file: !1, line: 1465, type: !6573)
!6576 = !DILocalVariable(name: "obj_", arg: 2, scope: !6570, file: !1, line: 1465, type: !495)
!6577 = !DILocalVariable(name: "slot_", scope: !6570, file: !1, line: 1465, type: !494)
!6578 = !DILocation(line: 0, scope: !6570)
!6579 = !DILocation(line: 1465, column: 1, scope: !6570)
!6580 = distinct !DISubprogram(name: "VEC_lambda_loop_base_space", scope: !1, file: !1, line: 1465, type: !6581, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6583)
!6581 = !DISubroutineType(types: !6582)
!6582 = !{!463, !6573, !463}
!6583 = !{!6584, !6585}
!6584 = !DILocalVariable(name: "vec_", arg: 1, scope: !6580, file: !1, line: 1465, type: !6573)
!6585 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6580, file: !1, line: 1465, type: !463)
!6586 = !DILocation(line: 0, scope: !6580)
!6587 = !DILocation(line: 1465, column: 1, scope: !6580)
!6588 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !4637, file: !4637, line: 1018, type: !6589, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6591)
!6589 = !DISubroutineType(types: !6590)
!6590 = !{null, !1900, !4654}
!6591 = !{!6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599}
!6592 = !DILocalVariable(name: "head", arg: 1, scope: !6588, file: !4637, line: 1018, type: !1900)
!6593 = !DILocalVariable(name: "imm", arg: 2, scope: !6588, file: !4637, line: 1018, type: !4654)
!6594 = !DILocalVariable(name: "use_p", scope: !6588, file: !4637, line: 1020, type: !1900)
!6595 = !DILocalVariable(name: "last_p", scope: !6588, file: !4637, line: 1021, type: !1900)
!6596 = !DILocalVariable(name: "head_stmt", scope: !6588, file: !4637, line: 1022, type: !829)
!6597 = !DILocalVariable(name: "use", scope: !6588, file: !4637, line: 1023, type: !505)
!6598 = !DILocalVariable(name: "op_iter", scope: !6588, file: !4637, line: 1024, type: !5174)
!6599 = !DILocalVariable(name: "flag", scope: !6588, file: !4637, line: 1025, type: !463)
!6600 = !DILocation(line: 0, scope: !6588)
!6601 = !DILocation(line: 1022, column: 22, scope: !6588)
!6602 = !DILocation(line: 1023, column: 14, scope: !6588)
!6603 = !DILocation(line: 1024, column: 3, scope: !6588)
!6604 = !DILocation(line: 1028, column: 11, scope: !6588)
!6605 = !DILocation(line: 1030, column: 7, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6588, file: !4637, line: 1030, column: 7)
!6607 = !DILocation(line: 1030, column: 31, scope: !6606)
!6608 = !DILocation(line: 1030, column: 7, scope: !6588)
!6609 = !DILocation(line: 1032, column: 7, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6611, file: !4637, line: 1032, column: 7)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !4637, line: 1031, column: 5)
!6612 = !DILocation(line: 0, scope: !6610)
!6613 = !DILocation(line: 1032, column: 7, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6610, file: !4637, line: 1032, column: 7)
!6615 = !DILocation(line: 1033, column: 6, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6614, file: !4637, line: 1033, column: 6)
!6617 = !DILocation(line: 1033, column: 27, scope: !6616)
!6618 = !DILocation(line: 1033, column: 6, scope: !6614)
!6619 = !DILocation(line: 1034, column: 13, scope: !6616)
!6620 = !DILocation(line: 1034, column: 4, scope: !6616)
!6621 = distinct !{!6621, !6609, !6622}
!6622 = !DILocation(line: 1034, column: 53, scope: !6610)
!6623 = !DILocation(line: 1038, column: 11, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6606, file: !4637, line: 1037, column: 5)
!6625 = !DILocation(line: 1040, column: 4, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !4637, line: 1040, column: 4)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !4637, line: 1039, column: 2)
!6628 = distinct !DILexicalBlock(scope: !6624, file: !4637, line: 1038, column: 11)
!6629 = !DILocation(line: 0, scope: !6626)
!6630 = !DILocation(line: 1040, column: 4, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6626, file: !4637, line: 1040, column: 4)
!6632 = !DILocation(line: 1041, column: 10, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6631, file: !4637, line: 1041, column: 10)
!6634 = !DILocation(line: 1041, column: 31, scope: !6633)
!6635 = !DILocation(line: 1041, column: 10, scope: !6631)
!6636 = !DILocation(line: 1042, column: 17, scope: !6633)
!6637 = !DILocation(line: 1042, column: 8, scope: !6633)
!6638 = distinct !{!6638, !6625, !6639}
!6639 = !DILocation(line: 1042, column: 57, scope: !6626)
!6640 = !DILocation(line: 1044, column: 25, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6628, file: !4637, line: 1044, column: 16)
!6642 = !DILocation(line: 1044, column: 53, scope: !6641)
!6643 = !DILocation(line: 1044, column: 16, scope: !6628)
!6644 = !DILocation(line: 1046, column: 8, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !4637, line: 1046, column: 8)
!6646 = distinct !DILexicalBlock(scope: !6641, file: !4637, line: 1045, column: 2)
!6647 = !DILocation(line: 1046, column: 29, scope: !6645)
!6648 = !DILocation(line: 1046, column: 8, scope: !6646)
!6649 = !DILocation(line: 1047, column: 15, scope: !6645)
!6650 = !DILocation(line: 1047, column: 6, scope: !6645)
!6651 = !DILocation(line: 1051, column: 22, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6588, file: !4637, line: 1051, column: 7)
!6653 = !DILocation(line: 1021, column: 17, scope: !6588)
!6654 = !DILocation(line: 1051, column: 27, scope: !6652)
!6655 = !DILocation(line: 1051, column: 7, scope: !6588)
!6656 = !DILocation(line: 1052, column: 27, scope: !6652)
!6657 = !DILocation(line: 1052, column: 5, scope: !6652)
!6658 = !DILocation(line: 1053, column: 32, scope: !6588)
!6659 = !DILocation(line: 1053, column: 3, scope: !6588)
!6660 = !DILocation(line: 1054, column: 1, scope: !6588)
!6661 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !4637, file: !4637, line: 910, type: !6662, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6665)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{!1900, !6664, !829, !463}
!6664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5174, size: 64)
!6665 = !{!6666, !6667, !6668, !6669, !6670}
!6666 = !DILocalVariable(name: "ptr", arg: 1, scope: !6661, file: !4637, line: 910, type: !6664)
!6667 = !DILocalVariable(name: "phi", arg: 2, scope: !6661, file: !4637, line: 910, type: !829)
!6668 = !DILocalVariable(name: "flags", arg: 3, scope: !6661, file: !4637, line: 910, type: !463)
!6669 = !DILocalVariable(name: "phi_def", scope: !6661, file: !4637, line: 912, type: !505)
!6670 = !DILocalVariable(name: "comp", scope: !6661, file: !4637, line: 913, type: !463)
!6671 = !DILocation(line: 0, scope: !6661)
!6672 = !DILocation(line: 912, column: 18, scope: !6661)
!6673 = !DILocation(line: 915, column: 3, scope: !6661)
!6674 = !DILocation(line: 916, column: 8, scope: !6661)
!6675 = !DILocation(line: 916, column: 13, scope: !6661)
!6676 = !DILocation(line: 918, column: 3, scope: !6661)
!6677 = !DILocation(line: 920, column: 11, scope: !6661)
!6678 = !DILocation(line: 923, column: 14, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6661, file: !4637, line: 923, column: 7)
!6680 = !DILocation(line: 923, column: 22, scope: !6679)
!6681 = !DILocation(line: 923, column: 7, scope: !6661)
!6682 = !DILocation(line: 925, column: 17, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6679, file: !4637, line: 924, column: 5)
!6684 = !DILocation(line: 926, column: 7, scope: !6683)
!6685 = !DILocation(line: 929, column: 8, scope: !6661)
!6686 = !DILocation(line: 929, column: 17, scope: !6661)
!6687 = !DILocation(line: 930, column: 18, scope: !6661)
!6688 = !DILocation(line: 930, column: 8, scope: !6661)
!6689 = !DILocation(line: 930, column: 16, scope: !6661)
!6690 = !DILocation(line: 931, column: 8, scope: !6661)
!6691 = !DILocation(line: 931, column: 18, scope: !6661)
!6692 = !DILocation(line: 932, column: 10, scope: !6661)
!6693 = !DILocation(line: 932, column: 3, scope: !6661)
!6694 = !DILocation(line: 933, column: 1, scope: !6661)
!6695 = distinct !DISubprogram(name: "op_iter_done", scope: !4637, file: !4637, line: 652, type: !6696, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6700)
!6696 = !DISubroutineType(types: !6697)
!6697 = !{!462, !6698}
!6698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6699, size: 64)
!6699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5174)
!6700 = !{!6701}
!6701 = !DILocalVariable(name: "ptr", arg: 1, scope: !6695, file: !4637, line: 652, type: !6698)
!6702 = !DILocation(line: 0, scope: !6695)
!6703 = !DILocation(line: 654, column: 15, scope: !6695)
!6704 = !DILocation(line: 654, column: 3, scope: !6695)
!6705 = distinct !DISubprogram(name: "move_use_after_head", scope: !4637, file: !4637, line: 990, type: !6706, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6708)
!6706 = !DISubroutineType(types: !6707)
!6707 = !{!1900, !1900, !1900, !1900}
!6708 = !{!6709, !6710, !6711}
!6709 = !DILocalVariable(name: "use_p", arg: 1, scope: !6705, file: !4637, line: 990, type: !1900)
!6710 = !DILocalVariable(name: "head", arg: 2, scope: !6705, file: !4637, line: 990, type: !1900)
!6711 = !DILocalVariable(name: "last_p", arg: 3, scope: !6705, file: !4637, line: 991, type: !1900)
!6712 = !DILocation(line: 0, scope: !6705)
!6713 = !DILocation(line: 997, column: 13, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6705, file: !4637, line: 997, column: 7)
!6715 = !DILocation(line: 997, column: 7, scope: !6705)
!6716 = !DILocation(line: 1000, column: 19, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !4637, line: 1000, column: 11)
!6718 = distinct !DILexicalBlock(scope: !6714, file: !4637, line: 998, column: 5)
!6719 = !DILocation(line: 1000, column: 24, scope: !6717)
!6720 = !DILocation(line: 1000, column: 11, scope: !6718)
!6721 = !DILocation(line: 1005, column: 4, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6717, file: !4637, line: 1003, column: 2)
!6723 = !DILocation(line: 1006, column: 4, scope: !6722)
!6724 = !DILocation(line: 1010, column: 3, scope: !6705)
!6725 = distinct !DISubprogram(name: "op_iter_next_use", scope: !4637, file: !4637, line: 659, type: !6726, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6728)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!1900, !6664}
!6728 = !{!6729, !6730}
!6729 = !DILocalVariable(name: "ptr", arg: 1, scope: !6725, file: !4637, line: 659, type: !6664)
!6730 = !DILocalVariable(name: "use_p", scope: !6725, file: !4637, line: 661, type: !1900)
!6731 = !DILocation(line: 0, scope: !6725)
!6732 = !DILocation(line: 665, column: 12, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6725, file: !4637, line: 665, column: 7)
!6734 = !DILocation(line: 665, column: 7, scope: !6733)
!6735 = !DILocation(line: 665, column: 7, scope: !6725)
!6736 = !DILocation(line: 667, column: 15, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6733, file: !4637, line: 666, column: 5)
!6738 = !DILocation(line: 668, column: 30, scope: !6737)
!6739 = !DILocation(line: 668, column: 17, scope: !6737)
!6740 = !DILocation(line: 669, column: 7, scope: !6737)
!6741 = !DILocation(line: 671, column: 12, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6725, file: !4637, line: 671, column: 7)
!6743 = !DILocation(line: 671, column: 25, scope: !6742)
!6744 = !DILocation(line: 671, column: 18, scope: !6742)
!6745 = !DILocation(line: 671, column: 7, scope: !6725)
!6746 = !DILocation(line: 673, column: 14, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6742, file: !4637, line: 672, column: 5)
!6748 = !DILocation(line: 673, column: 7, scope: !6747)
!6749 = !DILocation(line: 675, column: 8, scope: !6725)
!6750 = !DILocation(line: 675, column: 13, scope: !6725)
!6751 = !DILocation(line: 676, column: 3, scope: !6725)
!6752 = !DILocation(line: 677, column: 1, scope: !6725)
!6753 = distinct !DISubprogram(name: "op_iter_init_use", scope: !4637, file: !4637, line: 768, type: !6662, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6754)
!6754 = !{!6755, !6756, !6757}
!6755 = !DILocalVariable(name: "ptr", arg: 1, scope: !6753, file: !4637, line: 768, type: !6664)
!6756 = !DILocalVariable(name: "stmt", arg: 2, scope: !6753, file: !4637, line: 768, type: !829)
!6757 = !DILocalVariable(name: "flags", arg: 3, scope: !6753, file: !4637, line: 768, type: !463)
!6758 = !DILocation(line: 0, scope: !6753)
!6759 = !DILocation(line: 770, column: 3, scope: !6753)
!6760 = !DILocation(line: 772, column: 3, scope: !6753)
!6761 = !DILocation(line: 773, column: 8, scope: !6753)
!6762 = !DILocation(line: 773, column: 18, scope: !6753)
!6763 = !DILocation(line: 774, column: 10, scope: !6753)
!6764 = !DILocation(line: 774, column: 3, scope: !6753)
!6765 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !389, file: !389, line: 1334, type: !6766, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6768)
!6766 = !DISubroutineType(types: !6767)
!6767 = !{!1900, !3697}
!6768 = !{!6769, !6770}
!6769 = !DILocalVariable(name: "g", arg: 1, scope: !6765, file: !389, line: 1334, type: !3697)
!6770 = !DILocalVariable(name: "ops", scope: !6765, file: !389, line: 1336, type: !865)
!6771 = !DILocation(line: 0, scope: !6765)
!6772 = !DILocation(line: 1337, column: 8, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6765, file: !389, line: 1337, column: 7)
!6774 = !DILocation(line: 1337, column: 7, scope: !6765)
!6775 = !DILocation(line: 1339, column: 25, scope: !6765)
!6776 = !DILocation(line: 1340, column: 7, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6765, file: !389, line: 1340, column: 7)
!6778 = !DILocation(line: 1341, column: 7, scope: !6777)
!6779 = !DILocation(line: 1341, column: 28, scope: !6777)
!6780 = !DILocation(line: 1341, column: 49, scope: !6777)
!6781 = !DILocation(line: 1341, column: 32, scope: !6777)
!6782 = !DILocation(line: 1342, column: 12, scope: !6777)
!6783 = !DILocation(line: 1340, column: 7, scope: !6765)
!6784 = !DILocation(line: 1344, column: 1, scope: !6765)
!6785 = distinct !DISubprogram(name: "delink_imm_use", scope: !4637, file: !4637, line: 188, type: !6786, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6788)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{null, !1901}
!6788 = !{!6789}
!6789 = !DILocalVariable(name: "linknode", arg: 1, scope: !6785, file: !4637, line: 188, type: !1901)
!6790 = !DILocation(line: 0, scope: !6785)
!6791 = !DILocation(line: 191, column: 17, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6785, file: !4637, line: 191, column: 7)
!6793 = !DILocation(line: 191, column: 22, scope: !6792)
!6794 = !DILocation(line: 191, column: 7, scope: !6785)
!6795 = !DILocation(line: 194, column: 36, scope: !6785)
!6796 = !DILocation(line: 194, column: 19, scope: !6785)
!6797 = !DILocation(line: 194, column: 24, scope: !6785)
!6798 = !DILocation(line: 195, column: 36, scope: !6785)
!6799 = !DILocation(line: 195, column: 13, scope: !6785)
!6800 = !DILocation(line: 195, column: 24, scope: !6785)
!6801 = !DILocation(line: 196, column: 18, scope: !6785)
!6802 = !DILocation(line: 197, column: 18, scope: !6785)
!6803 = !DILocation(line: 198, column: 1, scope: !6785)
!6804 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !4637, file: !4637, line: 202, type: !6805, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6807)
!6805 = !DISubroutineType(types: !6806)
!6806 = !{null, !1901, !1901}
!6807 = !{!6808, !6809}
!6808 = !DILocalVariable(name: "linknode", arg: 1, scope: !6804, file: !4637, line: 202, type: !1901)
!6809 = !DILocalVariable(name: "list", arg: 2, scope: !6804, file: !4637, line: 202, type: !1901)
!6810 = !DILocation(line: 0, scope: !6804)
!6811 = !DILocation(line: 206, column: 13, scope: !6804)
!6812 = !DILocation(line: 206, column: 18, scope: !6804)
!6813 = !DILocation(line: 207, column: 26, scope: !6804)
!6814 = !DILocation(line: 207, column: 13, scope: !6804)
!6815 = !DILocation(line: 207, column: 18, scope: !6804)
!6816 = !DILocation(line: 208, column: 9, scope: !6804)
!6817 = !DILocation(line: 208, column: 15, scope: !6804)
!6818 = !DILocation(line: 208, column: 20, scope: !6804)
!6819 = !DILocation(line: 209, column: 14, scope: !6804)
!6820 = !DILocation(line: 210, column: 1, scope: !6804)
!6821 = distinct !DISubprogram(name: "gimple_phi_result", scope: !389, file: !389, line: 3071, type: !3704, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6822)
!6822 = !{!6823}
!6823 = !DILocalVariable(name: "gs", arg: 1, scope: !6821, file: !389, line: 3071, type: !3697)
!6824 = !DILocation(line: 0, scope: !6821)
!6825 = !DILocation(line: 3074, column: 25, scope: !6821)
!6826 = !DILocation(line: 3074, column: 3, scope: !6821)
!6827 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !4637, file: !4637, line: 729, type: !6828, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6830)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{null, !6664}
!6830 = !{!6831}
!6831 = !DILocalVariable(name: "ptr", arg: 1, scope: !6827, file: !4637, line: 729, type: !6664)
!6832 = !DILocation(line: 0, scope: !6827)
!6833 = !DILocation(line: 731, column: 8, scope: !6827)
!6834 = !DILocation(line: 731, column: 13, scope: !6827)
!6835 = !DILocation(line: 732, column: 8, scope: !6827)
!6836 = !DILocation(line: 732, column: 13, scope: !6827)
!6837 = !DILocation(line: 733, column: 8, scope: !6827)
!6838 = !DILocation(line: 733, column: 18, scope: !6827)
!6839 = !DILocation(line: 734, column: 8, scope: !6827)
!6840 = !DILocation(line: 734, column: 14, scope: !6827)
!6841 = !DILocation(line: 735, column: 8, scope: !6827)
!6842 = !DILocation(line: 735, column: 16, scope: !6827)
!6843 = !DILocation(line: 736, column: 8, scope: !6827)
!6844 = !DILocation(line: 736, column: 17, scope: !6827)
!6845 = !DILocation(line: 737, column: 8, scope: !6827)
!6846 = !DILocation(line: 737, column: 13, scope: !6827)
!6847 = !DILocation(line: 738, column: 1, scope: !6827)
!6848 = distinct !DISubprogram(name: "op_iter_init", scope: !4637, file: !4637, line: 742, type: !6849, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6851)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{null, !6664, !829, !463}
!6851 = !{!6852, !6853, !6854}
!6852 = !DILocalVariable(name: "ptr", arg: 1, scope: !6848, file: !4637, line: 742, type: !6664)
!6853 = !DILocalVariable(name: "stmt", arg: 2, scope: !6848, file: !4637, line: 742, type: !829)
!6854 = !DILocalVariable(name: "flags", arg: 3, scope: !6848, file: !4637, line: 742, type: !463)
!6855 = !DILocation(line: 0, scope: !6848)
!6856 = !DILocation(line: 746, column: 3, scope: !6848)
!6857 = !DILocation(line: 748, column: 22, scope: !6848)
!6858 = !DILocation(line: 748, column: 15, scope: !6848)
!6859 = !DILocation(line: 748, column: 52, scope: !6848)
!6860 = !DILocation(line: 748, column: 8, scope: !6848)
!6861 = !DILocation(line: 748, column: 13, scope: !6848)
!6862 = !DILocation(line: 749, column: 15, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6848, file: !4637, line: 749, column: 7)
!6864 = !DILocation(line: 750, column: 7, scope: !6863)
!6865 = !DILocation(line: 750, column: 10, scope: !6863)
!6866 = !DILocation(line: 751, column: 7, scope: !6863)
!6867 = !DILocation(line: 751, column: 10, scope: !6863)
!6868 = !DILocation(line: 751, column: 29, scope: !6863)
!6869 = !DILocation(line: 749, column: 7, scope: !6848)
!6870 = !DILocation(line: 752, column: 22, scope: !6863)
!6871 = !DILocation(line: 752, column: 28, scope: !6863)
!6872 = !DILocation(line: 752, column: 15, scope: !6863)
!6873 = !DILocation(line: 752, column: 5, scope: !6863)
!6874 = !DILocation(line: 753, column: 22, scope: !6848)
!6875 = !DILocation(line: 753, column: 15, scope: !6848)
!6876 = !DILocation(line: 753, column: 52, scope: !6848)
!6877 = !DILocation(line: 753, column: 8, scope: !6848)
!6878 = !DILocation(line: 753, column: 13, scope: !6848)
!6879 = !DILocation(line: 754, column: 15, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6848, file: !4637, line: 754, column: 7)
!6881 = !DILocation(line: 755, column: 7, scope: !6880)
!6882 = !DILocation(line: 755, column: 10, scope: !6880)
!6883 = !DILocation(line: 756, column: 7, scope: !6880)
!6884 = !DILocation(line: 756, column: 10, scope: !6880)
!6885 = !DILocation(line: 756, column: 29, scope: !6880)
!6886 = !DILocation(line: 754, column: 7, scope: !6848)
!6887 = !DILocation(line: 757, column: 22, scope: !6880)
!6888 = !DILocation(line: 757, column: 28, scope: !6880)
!6889 = !DILocation(line: 757, column: 15, scope: !6880)
!6890 = !DILocation(line: 757, column: 5, scope: !6880)
!6891 = !DILocation(line: 758, column: 8, scope: !6848)
!6892 = !DILocation(line: 758, column: 13, scope: !6848)
!6893 = !DILocation(line: 760, column: 8, scope: !6848)
!6894 = !DILocation(line: 760, column: 14, scope: !6848)
!6895 = !DILocation(line: 761, column: 8, scope: !6848)
!6896 = !DILocation(line: 761, column: 16, scope: !6848)
!6897 = !DILocation(line: 762, column: 8, scope: !6848)
!6898 = !DILocation(line: 762, column: 17, scope: !6848)
!6899 = !DILocation(line: 763, column: 1, scope: !6848)
!6900 = distinct !DISubprogram(name: "gimple_def_ops", scope: !389, file: !389, line: 1292, type: !6901, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6903)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{!858, !3697}
!6903 = !{!6904}
!6904 = !DILocalVariable(name: "g", arg: 1, scope: !6900, file: !389, line: 1292, type: !3697)
!6905 = !DILocation(line: 0, scope: !6900)
!6906 = !DILocation(line: 1294, column: 8, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6900, file: !389, line: 1294, column: 7)
!6908 = !DILocation(line: 1294, column: 7, scope: !6900)
!6909 = !DILocation(line: 1296, column: 26, scope: !6900)
!6910 = !DILocation(line: 1296, column: 3, scope: !6900)
!6911 = !DILocation(line: 1297, column: 1, scope: !6900)
!6912 = distinct !DISubprogram(name: "gimple_vdef", scope: !389, file: !389, line: 1375, type: !3704, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6913)
!6913 = !{!6914}
!6914 = !DILocalVariable(name: "g", arg: 1, scope: !6912, file: !389, line: 1375, type: !3697)
!6915 = !DILocation(line: 0, scope: !6912)
!6916 = !DILocation(line: 1377, column: 8, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6912, file: !389, line: 1377, column: 7)
!6918 = !DILocation(line: 1377, column: 7, scope: !6912)
!6919 = !DILocation(line: 1379, column: 23, scope: !6912)
!6920 = !DILocation(line: 1379, column: 3, scope: !6912)
!6921 = !DILocation(line: 1380, column: 1, scope: !6912)
!6922 = distinct !DISubprogram(name: "gimple_use_ops", scope: !389, file: !389, line: 1313, type: !6923, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6925)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!865, !3697}
!6925 = !{!6926}
!6926 = !DILocalVariable(name: "g", arg: 1, scope: !6922, file: !389, line: 1313, type: !3697)
!6927 = !DILocation(line: 0, scope: !6922)
!6928 = !DILocation(line: 1315, column: 8, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6922, file: !389, line: 1315, column: 7)
!6930 = !DILocation(line: 1315, column: 7, scope: !6922)
!6931 = !DILocation(line: 1317, column: 26, scope: !6922)
!6932 = !DILocation(line: 1317, column: 3, scope: !6922)
!6933 = !DILocation(line: 1318, column: 1, scope: !6922)
!6934 = distinct !DISubprogram(name: "gimple_vuse", scope: !389, file: !389, line: 1365, type: !3704, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6935)
!6935 = !{!6936}
!6936 = !DILocalVariable(name: "g", arg: 1, scope: !6934, file: !389, line: 1365, type: !3697)
!6937 = !DILocation(line: 0, scope: !6934)
!6938 = !DILocation(line: 1367, column: 8, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6934, file: !389, line: 1367, column: 7)
!6940 = !DILocation(line: 1367, column: 7, scope: !6934)
!6941 = !DILocation(line: 1369, column: 23, scope: !6934)
!6942 = !DILocation(line: 1369, column: 3, scope: !6934)
!6943 = !DILocation(line: 1370, column: 1, scope: !6934)
!6944 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !389, file: !389, line: 1283, type: !4696, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6945)
!6945 = !{!6946}
!6946 = !DILocalVariable(name: "g", arg: 1, scope: !6944, file: !389, line: 1283, type: !3697)
!6947 = !DILocation(line: 0, scope: !6944)
!6948 = !DILocation(line: 1285, column: 10, scope: !6944)
!6949 = !DILocation(line: 1285, column: 26, scope: !6944)
!6950 = !DILocation(line: 1285, column: 43, scope: !6944)
!6951 = !DILocation(line: 1285, column: 46, scope: !6944)
!6952 = !DILocation(line: 1285, column: 62, scope: !6944)
!6953 = !DILocation(line: 1285, column: 3, scope: !6944)
!6954 = distinct !DISubprogram(name: "build_linear_expr", scope: !471, file: !471, line: 486, type: !6955, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6957)
!6955 = !DISubroutineType(types: !6956)
!6956 = !{!505, !505, !476, !1870}
!6957 = !{!6958, !6959, !6960, !6961, !6962, !6963, !6964}
!6958 = !DILocalVariable(name: "type", arg: 1, scope: !6954, file: !471, line: 486, type: !505)
!6959 = !DILocalVariable(name: "coefs", arg: 2, scope: !6954, file: !471, line: 486, type: !476)
!6960 = !DILocalVariable(name: "ivs", arg: 3, scope: !6954, file: !471, line: 486, type: !1870)
!6961 = !DILocalVariable(name: "i", scope: !6954, file: !471, line: 488, type: !5)
!6962 = !DILocalVariable(name: "iv", scope: !6954, file: !471, line: 489, type: !505)
!6963 = !DILocalVariable(name: "expr", scope: !6954, file: !471, line: 490, type: !505)
!6964 = !DILocalVariable(name: "k", scope: !6965, file: !471, line: 494, type: !463)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !471, line: 493, column: 5)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !471, line: 492, column: 3)
!6967 = distinct !DILexicalBlock(scope: !6954, file: !471, line: 492, column: 3)
!6968 = !DILocation(line: 0, scope: !6954)
!6969 = !DILocation(line: 489, column: 3, scope: !6954)
!6970 = !DILocation(line: 490, column: 15, scope: !6954)
!6971 = !DILocation(line: 0, scope: !6966)
!6972 = !DILocation(line: 492, column: 8, scope: !6967)
!6973 = !DILocation(line: 0, scope: !6967)
!6974 = !DILocation(line: 492, column: 15, scope: !6966)
!6975 = !DILocation(line: 492, column: 3, scope: !6967)
!6976 = !DILocation(line: 494, column: 15, scope: !6965)
!6977 = !DILocation(line: 0, scope: !6965)
!6978 = !DILocation(line: 496, column: 11, scope: !6965)
!6979 = !DILocation(line: 497, column: 9, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6965, file: !471, line: 496, column: 11)
!6981 = !DILocation(line: 497, column: 2, scope: !6980)
!6982 = !DILocation(line: 500, column: 9, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6980, file: !471, line: 499, column: 16)
!6984 = !DILocation(line: 500, column: 2, scope: !6983)
!6985 = !DILocation(line: 0, scope: !6980)
!6986 = !DILocation(line: 492, column: 48, scope: !6966)
!6987 = !DILocation(line: 492, column: 3, scope: !6966)
!6988 = distinct !{!6988, !6975, !6989}
!6989 = !DILocation(line: 503, column: 5, scope: !6967)
!6990 = !DILocation(line: 506, column: 1, scope: !6954)
!6991 = !DILocation(line: 505, column: 3, scope: !6954)
!6992 = distinct !DISubprogram(name: "gimple_set_op", scope: !389, file: !389, line: 1663, type: !6993, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6995)
!6993 = !DISubroutineType(types: !6994)
!6994 = !{null, !829, !5, !505}
!6995 = !{!6996, !6997, !6998}
!6996 = !DILocalVariable(name: "gs", arg: 1, scope: !6992, file: !389, line: 1663, type: !829)
!6997 = !DILocalVariable(name: "i", arg: 2, scope: !6992, file: !389, line: 1663, type: !5)
!6998 = !DILocalVariable(name: "op", arg: 3, scope: !6992, file: !389, line: 1663, type: !505)
!6999 = !DILocation(line: 0, scope: !6992)
!7000 = !DILocation(line: 1665, column: 3, scope: !6992)
!7001 = !DILocation(line: 1671, column: 3, scope: !6992)
!7002 = !DILocation(line: 1671, column: 22, scope: !6992)
!7003 = !DILocation(line: 1672, column: 1, scope: !6992)
!7004 = distinct !DISubprogram(name: "gimple_num_ops", scope: !389, file: !389, line: 1596, type: !4629, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7005)
!7005 = !{!7006}
!7006 = !DILocalVariable(name: "gs", arg: 1, scope: !7004, file: !389, line: 1596, type: !3697)
!7007 = !DILocation(line: 0, scope: !7004)
!7008 = !DILocation(line: 1598, column: 21, scope: !7004)
!7009 = !DILocation(line: 1598, column: 3, scope: !7004)
!7010 = distinct !DISubprogram(name: "gimple_cond_set_code", scope: !389, file: !389, line: 2231, type: !7011, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7013)
!7011 = !DISubroutineType(types: !7012)
!7012 = !{null, !829, !132}
!7013 = !{!7014, !7015}
!7014 = !DILocalVariable(name: "gs", arg: 1, scope: !7010, file: !389, line: 2231, type: !829)
!7015 = !DILocalVariable(name: "code", arg: 2, scope: !7010, file: !389, line: 2231, type: !132)
!7016 = !DILocation(line: 0, scope: !7010)
!7017 = !DILocation(line: 2234, column: 14, scope: !7010)
!7018 = !DILocation(line: 2234, column: 22, scope: !7010)
!7019 = !DILocation(line: 2235, column: 1, scope: !7010)
!7020 = distinct !DISubprogram(name: "gimple_cond_set_lhs", scope: !389, file: !389, line: 2261, type: !5081, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7021)
!7021 = !{!7022, !7023}
!7022 = !DILocalVariable(name: "gs", arg: 1, scope: !7020, file: !389, line: 2261, type: !829)
!7023 = !DILocalVariable(name: "lhs", arg: 2, scope: !7020, file: !389, line: 2261, type: !505)
!7024 = !DILocation(line: 0, scope: !7020)
!7025 = !DILocation(line: 2264, column: 3, scope: !7020)
!7026 = !DILocation(line: 2265, column: 1, scope: !7020)
!7027 = distinct !DISubprogram(name: "gimple_cond_set_rhs", scope: !389, file: !389, line: 2292, type: !5081, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7028)
!7028 = !{!7029, !7030}
!7029 = !DILocalVariable(name: "gs", arg: 1, scope: !7027, file: !389, line: 2292, type: !829)
!7030 = !DILocalVariable(name: "rhs", arg: 2, scope: !7027, file: !389, line: 2292, type: !505)
!7031 = !DILocation(line: 0, scope: !7027)
!7032 = !DILocation(line: 2295, column: 3, scope: !7027)
!7033 = !DILocation(line: 2296, column: 1, scope: !7027)
!7034 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !4637, file: !4637, line: 792, type: !7035, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7037)
!7035 = !DISubroutineType(types: !7036)
!7036 = !{!505, !6664, !829, !463}
!7037 = !{!7038, !7039, !7040}
!7038 = !DILocalVariable(name: "ptr", arg: 1, scope: !7034, file: !4637, line: 792, type: !6664)
!7039 = !DILocalVariable(name: "stmt", arg: 2, scope: !7034, file: !4637, line: 792, type: !829)
!7040 = !DILocalVariable(name: "flags", arg: 3, scope: !7034, file: !4637, line: 792, type: !463)
!7041 = !DILocation(line: 0, scope: !7034)
!7042 = !DILocation(line: 794, column: 3, scope: !7034)
!7043 = !DILocation(line: 795, column: 8, scope: !7034)
!7044 = !DILocation(line: 795, column: 18, scope: !7034)
!7045 = !DILocation(line: 796, column: 10, scope: !7034)
!7046 = !DILocation(line: 796, column: 3, scope: !7034)
!7047 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !4637, file: !4637, line: 699, type: !7048, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7050)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!505, !6664}
!7050 = !{!7051, !7052}
!7051 = !DILocalVariable(name: "ptr", arg: 1, scope: !7047, file: !4637, line: 699, type: !6664)
!7052 = !DILocalVariable(name: "val", scope: !7047, file: !4637, line: 701, type: !505)
!7053 = !DILocation(line: 0, scope: !7047)
!7054 = !DILocation(line: 705, column: 12, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7047, file: !4637, line: 705, column: 7)
!7056 = !DILocation(line: 705, column: 7, scope: !7055)
!7057 = !DILocation(line: 705, column: 7, scope: !7047)
!7058 = !DILocation(line: 707, column: 13, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7055, file: !4637, line: 706, column: 5)
!7060 = !DILocation(line: 708, column: 24, scope: !7059)
!7061 = !DILocation(line: 708, column: 30, scope: !7059)
!7062 = !DILocation(line: 708, column: 17, scope: !7059)
!7063 = !DILocation(line: 709, column: 7, scope: !7059)
!7064 = !DILocation(line: 711, column: 12, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7047, file: !4637, line: 711, column: 7)
!7066 = !DILocation(line: 711, column: 7, scope: !7065)
!7067 = !DILocation(line: 711, column: 7, scope: !7047)
!7068 = !DILocation(line: 713, column: 13, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7065, file: !4637, line: 712, column: 5)
!7070 = !DILocation(line: 714, column: 24, scope: !7069)
!7071 = !DILocation(line: 714, column: 30, scope: !7069)
!7072 = !DILocation(line: 714, column: 17, scope: !7069)
!7073 = !DILocation(line: 715, column: 7, scope: !7069)
!7074 = !DILocation(line: 718, column: 8, scope: !7047)
!7075 = !DILocation(line: 718, column: 13, scope: !7047)
!7076 = !DILocation(line: 719, column: 3, scope: !7047)
!7077 = !DILocation(line: 721, column: 1, scope: !7047)
!7078 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !341, file: !341, line: 150, type: !7079, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7083)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!809, !7081, !5}
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 64)
!7082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!7083 = !{!7084, !7085}
!7084 = !DILocalVariable(name: "vec_", arg: 1, scope: !7078, file: !341, line: 150, type: !7081)
!7085 = !DILocalVariable(name: "ix_", arg: 2, scope: !7078, file: !341, line: 150, type: !5)
!7086 = !DILocation(line: 0, scope: !7078)
!7087 = !DILocation(line: 150, column: 1, scope: !7078)
!7088 = distinct !DISubprogram(name: "VEC_gimple_heap_reserve", scope: !389, file: !389, line: 34, type: !7089, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7091)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{!463, !4730, !463}
!7091 = !{!7092, !7093, !7094}
!7092 = !DILocalVariable(name: "vec_", arg: 1, scope: !7088, file: !389, line: 34, type: !4730)
!7093 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7088, file: !389, line: 34, type: !463)
!7094 = !DILocalVariable(name: "extend", scope: !7088, file: !389, line: 34, type: !463)
!7095 = !DILocation(line: 0, scope: !7088)
!7096 = !DILocation(line: 34, column: 1, scope: !7088)
!7097 = !DILocation(line: 34, column: 1, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7088, file: !389, line: 34, column: 1)
!7099 = distinct !DISubprogram(name: "VEC_gimple_base_quick_push", scope: !389, file: !389, line: 33, type: !7100, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7103)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{!5276, !7102, !829}
!7102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!7103 = !{!7104, !7105, !7106}
!7104 = !DILocalVariable(name: "vec_", arg: 1, scope: !7099, file: !389, line: 33, type: !7102)
!7105 = !DILocalVariable(name: "obj_", arg: 2, scope: !7099, file: !389, line: 33, type: !829)
!7106 = !DILocalVariable(name: "slot_", scope: !7099, file: !389, line: 33, type: !5276)
!7107 = !DILocation(line: 0, scope: !7099)
!7108 = !DILocation(line: 33, column: 1, scope: !7099)
!7109 = distinct !DISubprogram(name: "VEC_gimple_base_space", scope: !389, file: !389, line: 33, type: !7110, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7112)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{!463, !7102, !463}
!7112 = !{!7113, !7114}
!7113 = !DILocalVariable(name: "vec_", arg: 1, scope: !7109, file: !389, line: 33, type: !7102)
!7114 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7109, file: !389, line: 33, type: !463)
!7115 = !DILocation(line: 0, scope: !7109)
!7116 = !DILocation(line: 33, column: 1, scope: !7109)
!7117 = distinct !DISubprogram(name: "bb_seq", scope: !389, file: !389, line: 237, type: !7118, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7123)
!7118 = !DISubroutineType(types: !7119)
!7119 = !{!819, !7120}
!7120 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !506, line: 112, baseType: !7121)
!7121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7122, size: 64)
!7122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!7123 = !{!7124}
!7124 = !DILocalVariable(name: "bb", arg: 1, scope: !7117, file: !389, line: 237, type: !7120)
!7125 = !DILocation(line: 0, scope: !7117)
!7126 = !DILocation(line: 239, column: 17, scope: !7117)
!7127 = !DILocation(line: 239, column: 23, scope: !7117)
!7128 = !DILocation(line: 239, column: 33, scope: !7117)
!7129 = !DILocation(line: 239, column: 43, scope: !7117)
!7130 = !DILocation(line: 239, column: 36, scope: !7117)
!7131 = !DILocation(line: 239, column: 10, scope: !7117)
!7132 = !DILocation(line: 239, column: 68, scope: !7117)
!7133 = !DILocation(line: 239, column: 3, scope: !7117)
!7134 = distinct !DISubprogram(name: "gimple_seq_first", scope: !389, file: !389, line: 159, type: !7135, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7140)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!824, !7137}
!7137 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !506, line: 67, baseType: !7138)
!7138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7139, size: 64)
!7139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!7140 = !{!7141}
!7141 = !DILocalVariable(name: "s", arg: 1, scope: !7134, file: !389, line: 159, type: !7137)
!7142 = !DILocation(line: 0, scope: !7134)
!7143 = !DILocation(line: 161, column: 10, scope: !7134)
!7144 = !DILocation(line: 161, column: 17, scope: !7134)
!7145 = !DILocation(line: 161, column: 3, scope: !7134)
!7146 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !4637, file: !4637, line: 292, type: !7147, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7149)
!7147 = !DISubroutineType(types: !7148)
!7148 = !{!1900, !4654, !505}
!7149 = !{!7150, !7151}
!7150 = !DILocalVariable(name: "imm", arg: 1, scope: !7146, file: !4637, line: 292, type: !4654)
!7151 = !DILocalVariable(name: "var", arg: 2, scope: !7146, file: !4637, line: 292, type: !505)
!7152 = !DILocation(line: 0, scope: !7146)
!7153 = !DILocation(line: 294, column: 18, scope: !7146)
!7154 = !DILocation(line: 294, column: 8, scope: !7146)
!7155 = !DILocation(line: 294, column: 14, scope: !7146)
!7156 = !DILocation(line: 295, column: 30, scope: !7146)
!7157 = !DILocation(line: 295, column: 16, scope: !7146)
!7158 = !DILocation(line: 299, column: 7, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7146, file: !4637, line: 299, column: 7)
!7160 = !DILocation(line: 299, column: 7, scope: !7146)
!7161 = !DILocation(line: 301, column: 15, scope: !7146)
!7162 = !DILocation(line: 301, column: 3, scope: !7146)
!7163 = !DILocation(line: 302, column: 1, scope: !7146)
!7164 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !4637, file: !4637, line: 285, type: !4683, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7165)
!7165 = !{!7166}
!7166 = !DILocalVariable(name: "imm", arg: 1, scope: !7164, file: !4637, line: 285, type: !4685)
!7167 = !DILocation(line: 0, scope: !7164)
!7168 = !DILocation(line: 287, column: 16, scope: !7164)
!7169 = !DILocation(line: 287, column: 32, scope: !7164)
!7170 = !DILocation(line: 287, column: 24, scope: !7164)
!7171 = !DILocation(line: 287, column: 10, scope: !7164)
!7172 = !DILocation(line: 287, column: 3, scope: !7164)
!7173 = distinct !DISubprogram(name: "phi_loop_edge_uses_def", scope: !1, file: !1, line: 1900, type: !7174, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7176)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{!462, !1044, !829, !505}
!7176 = !{!7177, !7178, !7179, !7180}
!7177 = !DILocalVariable(name: "loop", arg: 1, scope: !7173, file: !1, line: 1900, type: !1044)
!7178 = !DILocalVariable(name: "phi", arg: 2, scope: !7173, file: !1, line: 1900, type: !829)
!7179 = !DILocalVariable(name: "def", arg: 3, scope: !7173, file: !1, line: 1900, type: !505)
!7180 = !DILocalVariable(name: "i", scope: !7173, file: !1, line: 1902, type: !5)
!7181 = !DILocation(line: 0, scope: !7173)
!7182 = !DILocation(line: 1903, column: 8, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7173, file: !1, line: 1903, column: 3)
!7184 = !DILocation(line: 0, scope: !7183)
!7185 = !DILocation(line: 1903, column: 19, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7183, file: !1, line: 1903, column: 3)
!7187 = !DILocation(line: 1903, column: 17, scope: !7186)
!7188 = !DILocation(line: 1903, column: 3, scope: !7183)
!7189 = !DILocation(line: 1904, column: 38, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 1904, column: 9)
!7191 = !DILocation(line: 1904, column: 68, scope: !7190)
!7192 = !DILocation(line: 1904, column: 9, scope: !7190)
!7193 = !DILocation(line: 1904, column: 9, scope: !7186)
!7194 = !DILocation(line: 1905, column: 11, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 1905, column: 11)
!7196 = !DILocation(line: 1905, column: 32, scope: !7195)
!7197 = !DILocation(line: 1905, column: 11, scope: !7190)
!7198 = !DILocation(line: 1903, column: 47, scope: !7186)
!7199 = !DILocation(line: 1903, column: 3, scope: !7186)
!7200 = distinct !{!7200, !7188, !7201}
!7201 = !DILocation(line: 1906, column: 9, scope: !7183)
!7202 = !DILocation(line: 1908, column: 1, scope: !7173)
!7203 = distinct !DISubprogram(name: "stmt_uses_phi_result", scope: !1, file: !1, line: 1913, type: !7204, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7206)
!7204 = !DISubroutineType(types: !7205)
!7205 = !{!462, !829, !505}
!7206 = !{!7207, !7208, !7209}
!7207 = !DILocalVariable(name: "stmt", arg: 1, scope: !7203, file: !1, line: 1913, type: !829)
!7208 = !DILocalVariable(name: "phi_result", arg: 2, scope: !7203, file: !1, line: 1913, type: !505)
!7209 = !DILocalVariable(name: "use", scope: !7203, file: !1, line: 1915, type: !505)
!7210 = !DILocation(line: 0, scope: !7203)
!7211 = !DILocation(line: 1915, column: 14, scope: !7203)
!7212 = !DILocation(line: 1919, column: 15, scope: !7203)
!7213 = !DILocation(line: 1919, column: 10, scope: !7203)
!7214 = !DILocation(line: 1919, column: 3, scope: !7203)
!7215 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !4637, file: !4637, line: 306, type: !5229, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7216)
!7216 = !{!7217, !7218}
!7217 = !DILocalVariable(name: "imm", arg: 1, scope: !7215, file: !4637, line: 306, type: !4654)
!7218 = !DILocalVariable(name: "old", scope: !7215, file: !4637, line: 308, type: !1900)
!7219 = !DILocation(line: 0, scope: !7215)
!7220 = !DILocation(line: 308, column: 28, scope: !7215)
!7221 = !DILocation(line: 319, column: 23, scope: !7215)
!7222 = !DILocation(line: 319, column: 16, scope: !7215)
!7223 = !DILocation(line: 320, column: 7, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7215, file: !4637, line: 320, column: 7)
!7225 = !DILocation(line: 320, column: 7, scope: !7215)
!7226 = !DILocation(line: 322, column: 15, scope: !7215)
!7227 = !DILocation(line: 322, column: 3, scope: !7215)
!7228 = !DILocation(line: 323, column: 1, scope: !7215)
!7229 = distinct !DISubprogram(name: "cannot_convert_bb_to_perfect_nest", scope: !1, file: !1, line: 2272, type: !7230, scopeLine: 2273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7232)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!462, !1281, !1044}
!7232 = !{!7233, !7234, !7235, !7236, !7237}
!7233 = !DILocalVariable(name: "bb", arg: 1, scope: !7229, file: !1, line: 2272, type: !1281)
!7234 = !DILocalVariable(name: "loop", arg: 2, scope: !7229, file: !1, line: 2272, type: !1044)
!7235 = !DILocalVariable(name: "bsi", scope: !7229, file: !1, line: 2274, type: !3841)
!7236 = !DILocalVariable(name: "exit_condition", scope: !7229, file: !1, line: 2275, type: !829)
!7237 = !DILocalVariable(name: "stmt", scope: !7238, file: !1, line: 2279, type: !829)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !1, line: 2278, column: 5)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !1, line: 2277, column: 3)
!7240 = distinct !DILexicalBlock(scope: !7229, file: !1, line: 2277, column: 3)
!7241 = !DILocation(line: 0, scope: !7229)
!7242 = !DILocation(line: 2274, column: 3, scope: !7229)
!7243 = !DILocation(line: 2275, column: 27, scope: !7229)
!7244 = !DILocation(line: 2277, column: 14, scope: !7240)
!7245 = !DILocation(line: 0, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !1, line: 2294, column: 8)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !1, line: 2287, column: 2)
!7248 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 2286, column: 11)
!7249 = !DILocation(line: 2277, column: 8, scope: !7240)
!7250 = !DILocation(line: 2277, column: 34, scope: !7239)
!7251 = !DILocation(line: 2277, column: 33, scope: !7239)
!7252 = !DILocation(line: 2277, column: 3, scope: !7240)
!7253 = !DILocation(line: 2279, column: 21, scope: !7238)
!7254 = !DILocation(line: 0, scope: !7238)
!7255 = !DILocation(line: 2281, column: 16, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 2281, column: 11)
!7257 = !DILocation(line: 2282, column: 4, scope: !7256)
!7258 = !DILocation(line: 2282, column: 7, scope: !7256)
!7259 = !DILocation(line: 2283, column: 4, scope: !7256)
!7260 = !DILocation(line: 2283, column: 7, scope: !7256)
!7261 = !DILocation(line: 2281, column: 11, scope: !7238)
!7262 = !DILocation(line: 2286, column: 11, scope: !7248)
!7263 = !DILocation(line: 2286, column: 11, scope: !7238)
!7264 = !DILocation(line: 2288, column: 8, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7247, file: !1, line: 2288, column: 8)
!7266 = !DILocation(line: 2288, column: 8, scope: !7247)
!7267 = !DILocation(line: 2291, column: 26, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7247, file: !1, line: 2291, column: 8)
!7269 = !DILocation(line: 2291, column: 8, scope: !7268)
!7270 = !DILocation(line: 2291, column: 8, scope: !7247)
!7271 = !DILocation(line: 2294, column: 37, scope: !7246)
!7272 = !DILocation(line: 2294, column: 8, scope: !7246)
!7273 = !DILocation(line: 2295, column: 8, scope: !7246)
!7274 = !DILocation(line: 2295, column: 11, scope: !7246)
!7275 = !DILocation(line: 2294, column: 8, scope: !7247)
!7276 = !DILocation(line: 2304, column: 7, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 2303, column: 11)
!7278 = !DILocation(line: 2305, column: 13, scope: !7277)
!7279 = !DILocation(line: 2305, column: 20, scope: !7277)
!7280 = !DILocation(line: 2303, column: 12, scope: !7277)
!7281 = !DILocation(line: 0, scope: !7239)
!7282 = !DILocation(line: 2277, column: 51, scope: !7239)
!7283 = !DILocation(line: 2277, column: 3, scope: !7239)
!7284 = distinct !{!7284, !7252, !7285}
!7285 = !DILocation(line: 2307, column: 5, scope: !7240)
!7286 = !DILocation(line: 2310, column: 1, scope: !7229)
!7287 = distinct !DISubprogram(name: "is_gimple_assign", scope: !389, file: !389, line: 1677, type: !4696, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7288)
!7288 = !{!7289}
!7289 = !DILocalVariable(name: "gs", arg: 1, scope: !7287, file: !389, line: 1677, type: !3697)
!7290 = !DILocation(line: 0, scope: !7287)
!7291 = !DILocation(line: 1679, column: 10, scope: !7287)
!7292 = !DILocation(line: 1679, column: 27, scope: !7287)
!7293 = !DILocation(line: 1679, column: 3, scope: !7287)
!7294 = distinct !DISubprogram(name: "cannot_convert_modify_to_perfect_nest", scope: !1, file: !1, line: 2221, type: !7295, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7297)
!7295 = !DISubroutineType(types: !7296)
!7296 = !{!462, !829, !1044}
!7297 = !{!7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305, !7306, !7310, !7311, !7316}
!7298 = !DILocalVariable(name: "stmt", arg: 1, scope: !7294, file: !1, line: 2221, type: !829)
!7299 = !DILocalVariable(name: "loop", arg: 2, scope: !7294, file: !1, line: 2221, type: !1044)
!7300 = !DILocalVariable(name: "use_a", scope: !7294, file: !1, line: 2223, type: !1900)
!7301 = !DILocalVariable(name: "use_b", scope: !7294, file: !1, line: 2223, type: !1900)
!7302 = !DILocalVariable(name: "imm_iter", scope: !7294, file: !1, line: 2224, type: !4572)
!7303 = !DILocalVariable(name: "op_iter", scope: !7294, file: !1, line: 2225, type: !5174)
!7304 = !DILocalVariable(name: "op_iter1", scope: !7294, file: !1, line: 2225, type: !5174)
!7305 = !DILocalVariable(name: "op0", scope: !7294, file: !1, line: 2226, type: !505)
!7306 = !DILocalVariable(name: "node", scope: !7307, file: !1, line: 2238, type: !829)
!7307 = distinct !DILexicalBlock(scope: !7308, file: !1, line: 2237, column: 5)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !1, line: 2236, column: 3)
!7309 = distinct !DILexicalBlock(scope: !7294, file: !1, line: 2236, column: 3)
!7310 = !DILocalVariable(name: "op", scope: !7307, file: !1, line: 2239, type: !505)
!7311 = !DILocalVariable(name: "arg", scope: !7312, file: !1, line: 2253, type: !505)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !1, line: 2252, column: 4)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !1, line: 2251, column: 2)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !1, line: 2251, column: 2)
!7315 = distinct !DILexicalBlock(scope: !7307, file: !1, line: 2250, column: 11)
!7316 = !DILocalVariable(name: "arg_stmt", scope: !7317, file: !1, line: 2257, type: !829)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !1, line: 2256, column: 8)
!7318 = distinct !DILexicalBlock(scope: !7312, file: !1, line: 2255, column: 10)
!7319 = !DILocation(line: 0, scope: !7294)
!7320 = !DILocation(line: 2224, column: 3, scope: !7294)
!7321 = !DILocation(line: 2225, column: 3, scope: !7294)
!7322 = !DILocation(line: 2226, column: 14, scope: !7294)
!7323 = !DILocation(line: 2230, column: 7, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7294, file: !1, line: 2230, column: 7)
!7325 = !DILocation(line: 2230, column: 23, scope: !7324)
!7326 = !DILocation(line: 2231, column: 7, scope: !7324)
!7327 = !DILocation(line: 2231, column: 11, scope: !7324)
!7328 = !DILocation(line: 2230, column: 7, scope: !7294)
!7329 = !DILocation(line: 2232, column: 5, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7324, file: !1, line: 2232, column: 5)
!7331 = !DILocation(line: 0, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !1, line: 2233, column: 11)
!7333 = distinct !DILexicalBlock(scope: !7330, file: !1, line: 2232, column: 5)
!7334 = !DILocation(line: 0, scope: !7330)
!7335 = !DILocation(line: 2232, column: 5, scope: !7333)
!7336 = !DILocation(line: 2233, column: 22, scope: !7332)
!7337 = !DILocation(line: 2233, column: 11, scope: !7332)
!7338 = !DILocation(line: 2233, column: 41, scope: !7332)
!7339 = !DILocation(line: 2233, column: 62, scope: !7332)
!7340 = !DILocation(line: 2233, column: 53, scope: !7332)
!7341 = !DILocation(line: 2233, column: 11, scope: !7333)
!7342 = distinct !{!7342, !7329, !7343}
!7343 = !DILocation(line: 2234, column: 9, scope: !7330)
!7344 = !DILocation(line: 2236, column: 3, scope: !7309)
!7345 = !DILocation(line: 0, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !1, line: 2244, column: 8)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2243, column: 2)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 2243, column: 2)
!7349 = distinct !DILexicalBlock(scope: !7307, file: !1, line: 2242, column: 11)
!7350 = !DILocation(line: 0, scope: !7309)
!7351 = !DILocation(line: 2236, column: 3, scope: !7308)
!7352 = !DILocation(line: 2239, column: 17, scope: !7307)
!7353 = !DILocation(line: 0, scope: !7307)
!7354 = !DILocation(line: 2242, column: 12, scope: !7349)
!7355 = !DILocation(line: 2242, column: 11, scope: !7307)
!7356 = !DILocation(line: 2243, column: 2, scope: !7348)
!7357 = !DILocation(line: 0, scope: !7348)
!7358 = !DILocation(line: 2243, column: 2, scope: !7347)
!7359 = !DILocation(line: 2244, column: 19, scope: !7346)
!7360 = !DILocation(line: 2244, column: 8, scope: !7346)
!7361 = !DILocation(line: 2244, column: 38, scope: !7346)
!7362 = !DILocation(line: 2244, column: 59, scope: !7346)
!7363 = !DILocation(line: 2244, column: 50, scope: !7346)
!7364 = !DILocation(line: 2244, column: 8, scope: !7347)
!7365 = distinct !{!7365, !7356, !7366}
!7366 = !DILocation(line: 2245, column: 13, scope: !7348)
!7367 = !DILocation(line: 2249, column: 14, scope: !7307)
!7368 = !DILocation(line: 2250, column: 11, scope: !7315)
!7369 = !DILocation(line: 2250, column: 30, scope: !7315)
!7370 = !DILocation(line: 2250, column: 11, scope: !7307)
!7371 = !DILocation(line: 2251, column: 2, scope: !7314)
!7372 = !DILocation(line: 0, scope: !7314)
!7373 = !DILocation(line: 2251, column: 2, scope: !7313)
!7374 = !DILocation(line: 2253, column: 17, scope: !7312)
!7375 = !DILocation(line: 0, scope: !7312)
!7376 = !DILocation(line: 2255, column: 10, scope: !7318)
!7377 = !DILocation(line: 2255, column: 26, scope: !7318)
!7378 = !DILocation(line: 2255, column: 10, scope: !7312)
!7379 = !DILocation(line: 2257, column: 21, scope: !7317)
!7380 = !DILocation(line: 0, scope: !7317)
!7381 = !DILocation(line: 2259, column: 7, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7317, file: !1, line: 2259, column: 7)
!7383 = !DILocation(line: 2260, column: 7, scope: !7382)
!7384 = !DILocation(line: 2260, column: 11, scope: !7382)
!7385 = !DILocation(line: 2260, column: 33, scope: !7382)
!7386 = !DILocation(line: 2260, column: 54, scope: !7382)
!7387 = !DILocation(line: 2260, column: 45, scope: !7382)
!7388 = !DILocation(line: 2259, column: 7, scope: !7317)
!7389 = !DILocation(line: 2262, column: 8, scope: !7318)
!7390 = !DILocation(line: 2263, column: 4, scope: !7313)
!7391 = distinct !{!7391, !7371, !7392}
!7392 = !DILocation(line: 2263, column: 4, scope: !7314)
!7393 = distinct !{!7393, !7344, !7394}
!7394 = !DILocation(line: 2264, column: 5, scope: !7309)
!7395 = !DILocation(line: 2267, column: 1, scope: !7294)
!7396 = distinct !DISubprogram(name: "can_duplicate_iv", scope: !1, file: !1, line: 2197, type: !7397, scopeLine: 2198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7399)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{!462, !505, !1044}
!7399 = !{!7400, !7401, !7402, !7403}
!7400 = !DILocalVariable(name: "iv", arg: 1, scope: !7396, file: !1, line: 2197, type: !505)
!7401 = !DILocalVariable(name: "loop", arg: 2, scope: !7396, file: !1, line: 2197, type: !1044)
!7402 = !DILocalVariable(name: "scev", scope: !7396, file: !1, line: 2199, type: !505)
!7403 = !DILocalVariable(name: "step", scope: !7404, file: !1, line: 2204, type: !505)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !1, line: 2203, column: 5)
!7405 = distinct !DILexicalBlock(scope: !7396, file: !1, line: 2202, column: 7)
!7406 = !DILocation(line: 0, scope: !7396)
!7407 = !DILocation(line: 2200, column: 12, scope: !7396)
!7408 = !DILocation(line: 2199, column: 15, scope: !7396)
!7409 = !DILocation(line: 2202, column: 8, scope: !7405)
!7410 = !DILocation(line: 2202, column: 7, scope: !7396)
!7411 = !DILocation(line: 2204, column: 59, scope: !7404)
!7412 = !DILocation(line: 2204, column: 19, scope: !7404)
!7413 = !DILocation(line: 0, scope: !7404)
!7414 = !DILocation(line: 2206, column: 11, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7404, file: !1, line: 2206, column: 11)
!7416 = !DILocation(line: 2206, column: 27, scope: !7415)
!7417 = !DILocation(line: 2206, column: 24, scope: !7415)
!7418 = !DILocation(line: 2206, column: 16, scope: !7415)
!7419 = !DILocation(line: 2206, column: 46, scope: !7415)
!7420 = !DILocation(line: 2206, column: 63, scope: !7415)
!7421 = !DILocation(line: 2206, column: 11, scope: !7404)
!7422 = !DILocation(line: 2208, column: 5, scope: !7405)
!7423 = !DILocation(line: 2210, column: 3, scope: !7396)
!7424 = !DILocation(line: 2211, column: 1, scope: !7396)
!7425 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !389, file: !389, line: 1694, type: !3704, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7426)
!7426 = !{!7427}
!7427 = !DILocalVariable(name: "gs", arg: 1, scope: !7425, file: !389, line: 1694, type: !3697)
!7428 = !DILocation(line: 0, scope: !7425)
!7429 = !DILocation(line: 1697, column: 10, scope: !7425)
!7430 = !DILocation(line: 1697, column: 3, scope: !7425)
!7431 = distinct !DISubprogram(name: "can_put_in_inner_loop", scope: !1, file: !1, line: 2143, type: !5337, scopeLine: 2144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7432)
!7432 = !{!7433, !7434, !7435, !7436, !7437}
!7433 = !DILocalVariable(name: "inner", arg: 1, scope: !7431, file: !1, line: 2143, type: !1044)
!7434 = !DILocalVariable(name: "stmt", arg: 2, scope: !7431, file: !1, line: 2143, type: !829)
!7435 = !DILocalVariable(name: "imm_iter", scope: !7431, file: !1, line: 2145, type: !4572)
!7436 = !DILocalVariable(name: "use_p", scope: !7431, file: !1, line: 2146, type: !1900)
!7437 = !DILocalVariable(name: "immbb", scope: !7438, file: !1, line: 2157, type: !1281)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !1, line: 2156, column: 2)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !1, line: 2155, column: 11)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !1, line: 2154, column: 5)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !1, line: 2153, column: 3)
!7442 = distinct !DILexicalBlock(scope: !7431, file: !1, line: 2153, column: 3)
!7443 = !DILocation(line: 0, scope: !7431)
!7444 = !DILocation(line: 2145, column: 3, scope: !7431)
!7445 = !DILocation(line: 2148, column: 3, scope: !7431)
!7446 = !DILocation(line: 2149, column: 7, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7431, file: !1, line: 2149, column: 7)
!7448 = !DILocation(line: 2150, column: 7, scope: !7447)
!7449 = !DILocation(line: 2150, column: 11, scope: !7447)
!7450 = !DILocation(line: 2149, column: 7, scope: !7431)
!7451 = !DILocation(line: 2153, column: 3, scope: !7442)
!7452 = !DILocation(line: 0, scope: !7442)
!7453 = !DILocation(line: 2153, column: 3, scope: !7441)
!7454 = !DILocation(line: 2155, column: 40, scope: !7439)
!7455 = !DILocation(line: 2155, column: 12, scope: !7439)
!7456 = !DILocation(line: 2155, column: 11, scope: !7440)
!7457 = !DILocation(line: 2157, column: 35, scope: !7438)
!7458 = !DILocation(line: 2157, column: 24, scope: !7438)
!7459 = !DILocation(line: 0, scope: !7438)
!7460 = !DILocation(line: 2159, column: 9, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7438, file: !1, line: 2159, column: 8)
!7462 = distinct !{!7462, !7451, !7463}
!7463 = !DILocation(line: 2162, column: 5, scope: !7442)
!7464 = !DILocation(line: 2164, column: 1, scope: !7431)
!7465 = distinct !DISubprogram(name: "can_put_after_inner_loop", scope: !1, file: !1, line: 2169, type: !5337, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7466)
!7466 = !{!7467, !7468, !7469, !7470, !7471}
!7467 = !DILocalVariable(name: "loop", arg: 1, scope: !7465, file: !1, line: 2169, type: !1044)
!7468 = !DILocalVariable(name: "stmt", arg: 2, scope: !7465, file: !1, line: 2169, type: !829)
!7469 = !DILocalVariable(name: "imm_iter", scope: !7465, file: !1, line: 2171, type: !4572)
!7470 = !DILocalVariable(name: "use_p", scope: !7465, file: !1, line: 2172, type: !1900)
!7471 = !DILocalVariable(name: "immbb", scope: !7472, file: !1, line: 2181, type: !1281)
!7472 = distinct !DILexicalBlock(scope: !7473, file: !1, line: 2180, column: 2)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !1, line: 2179, column: 11)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !1, line: 2178, column: 5)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !1, line: 2177, column: 3)
!7476 = distinct !DILexicalBlock(scope: !7465, file: !1, line: 2177, column: 3)
!7477 = !DILocation(line: 0, scope: !7465)
!7478 = !DILocation(line: 2171, column: 3, scope: !7465)
!7479 = !DILocation(line: 2174, column: 7, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7465, file: !1, line: 2174, column: 7)
!7481 = !DILocation(line: 2174, column: 7, scope: !7465)
!7482 = !DILocation(line: 2177, column: 3, scope: !7476)
!7483 = !DILocation(line: 0, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7472, file: !1, line: 2183, column: 8)
!7485 = !DILocation(line: 0, scope: !7476)
!7486 = !DILocation(line: 2177, column: 3, scope: !7475)
!7487 = !DILocation(line: 2179, column: 39, scope: !7473)
!7488 = !DILocation(line: 2179, column: 12, scope: !7473)
!7489 = !DILocation(line: 2179, column: 11, scope: !7474)
!7490 = !DILocation(line: 2181, column: 35, scope: !7472)
!7491 = !DILocation(line: 2181, column: 24, scope: !7472)
!7492 = !DILocation(line: 0, scope: !7472)
!7493 = !DILocation(line: 2185, column: 17, scope: !7484)
!7494 = !DILocation(line: 2185, column: 24, scope: !7484)
!7495 = !DILocation(line: 2183, column: 9, scope: !7484)
!7496 = !DILocation(line: 2186, column: 8, scope: !7484)
!7497 = !DILocation(line: 2186, column: 41, scope: !7484)
!7498 = !DILocation(line: 2186, column: 12, scope: !7484)
!7499 = !DILocation(line: 2183, column: 8, scope: !7472)
!7500 = !DILocation(line: 2188, column: 2, scope: !7473)
!7501 = distinct !{!7501, !7482, !7502}
!7502 = !DILocation(line: 2189, column: 5, scope: !7476)
!7503 = !DILocation(line: 2191, column: 1, scope: !7465)
!7504 = distinct !DISubprogram(name: "automatically_generated_chrec_p", scope: !7505, file: !7505, line: 37, type: !7506, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7511)
!7505 = !DIFile(filename: "./tree-chrec.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7506 = !DISubroutineType(types: !7507)
!7507 = !{!462, !7508}
!7508 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !506, line: 59, baseType: !7509)
!7509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7510, size: 64)
!7510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!7511 = !{!7512}
!7512 = !DILocalVariable(name: "chrec", arg: 1, scope: !7504, file: !7505, line: 37, type: !7508)
!7513 = !DILocation(line: 0, scope: !7504)
!7514 = !DILocation(line: 39, column: 20, scope: !7504)
!7515 = !DILocation(line: 39, column: 17, scope: !7504)
!7516 = !DILocation(line: 40, column: 4, scope: !7504)
!7517 = !DILocation(line: 39, column: 10, scope: !7504)
!7518 = !DILocation(line: 39, column: 3, scope: !7504)
!7519 = distinct !DISubprogram(name: "exit_phi_for_loop_p", scope: !1, file: !1, line: 2129, type: !5337, scopeLine: 2130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7520)
!7520 = !{!7521, !7522}
!7521 = !DILocalVariable(name: "loop", arg: 1, scope: !7519, file: !1, line: 2129, type: !1044)
!7522 = !DILocalVariable(name: "stmt", arg: 2, scope: !7519, file: !1, line: 2129, type: !829)
!7523 = !DILocation(line: 0, scope: !7519)
!7524 = !DILocation(line: 2131, column: 7, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7519, file: !1, line: 2131, column: 7)
!7526 = !DILocation(line: 2131, column: 26, scope: !7525)
!7527 = !DILocation(line: 2132, column: 7, scope: !7525)
!7528 = !DILocation(line: 2132, column: 10, scope: !7525)
!7529 = !DILocation(line: 2132, column: 37, scope: !7525)
!7530 = !DILocation(line: 2133, column: 7, scope: !7525)
!7531 = !DILocation(line: 2133, column: 10, scope: !7525)
!7532 = !DILocation(line: 2133, column: 30, scope: !7525)
!7533 = !DILocation(line: 2133, column: 50, scope: !7525)
!7534 = !DILocation(line: 2133, column: 27, scope: !7525)
!7535 = !DILocation(line: 2131, column: 7, scope: !7519)
!7536 = !DILocation(line: 2137, column: 1, scope: !7519)
!7537 = distinct !DISubprogram(name: "VEC_source_location_heap_reserve", scope: !1, file: !1, line: 2352, type: !7538, scopeLine: 2352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7541)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{!463, !7540, !463}
!7540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!7541 = !{!7542, !7543, !7544}
!7542 = !DILocalVariable(name: "vec_", arg: 1, scope: !7537, file: !1, line: 2352, type: !7540)
!7543 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7537, file: !1, line: 2352, type: !463)
!7544 = !DILocalVariable(name: "extend", scope: !7537, file: !1, line: 2352, type: !463)
!7545 = !DILocation(line: 0, scope: !7537)
!7546 = !DILocation(line: 2352, column: 1, scope: !7537)
!7547 = !DILocation(line: 2352, column: 1, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7537, file: !1, line: 2352, column: 1)
!7549 = distinct !DISubprogram(name: "VEC_source_location_base_quick_push", scope: !1, file: !1, line: 2351, type: !7550, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7554)
!7550 = !DISubroutineType(types: !7551)
!7551 = !{!7552, !7553, !632}
!7552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!7553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!7554 = !{!7555, !7556, !7557}
!7555 = !DILocalVariable(name: "vec_", arg: 1, scope: !7549, file: !1, line: 2351, type: !7553)
!7556 = !DILocalVariable(name: "obj_", arg: 2, scope: !7549, file: !1, line: 2351, type: !632)
!7557 = !DILocalVariable(name: "slot_", scope: !7549, file: !1, line: 2351, type: !7552)
!7558 = !DILocation(line: 0, scope: !7549)
!7559 = !DILocation(line: 2351, column: 1, scope: !7549)
!7560 = distinct !DISubprogram(name: "gimple_phi_arg_location", scope: !4637, file: !4637, line: 475, type: !7561, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7563)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!632, !829, !974}
!7563 = !{!7564, !7565}
!7564 = !DILocalVariable(name: "gs", arg: 1, scope: !7560, file: !4637, line: 475, type: !829)
!7565 = !DILocalVariable(name: "i", arg: 2, scope: !7560, file: !4637, line: 475, type: !974)
!7566 = !DILocation(line: 0, scope: !7560)
!7567 = !DILocation(line: 477, column: 10, scope: !7560)
!7568 = !DILocation(line: 477, column: 34, scope: !7560)
!7569 = !DILocation(line: 477, column: 3, scope: !7560)
!7570 = distinct !DISubprogram(name: "single_succ_edge", scope: !341, file: !341, line: 643, type: !7571, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7573)
!7571 = !DISubroutineType(types: !7572)
!7572 = !{!809, !7120}
!7573 = !{!7574}
!7574 = !DILocalVariable(name: "bb", arg: 1, scope: !7570, file: !341, line: 643, type: !7120)
!7575 = !DILocation(line: 0, scope: !7570)
!7576 = !DILocation(line: 645, column: 3, scope: !7570)
!7577 = !DILocation(line: 646, column: 10, scope: !7570)
!7578 = !DILocation(line: 646, column: 3, scope: !7570)
!7579 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !133, file: !133, line: 182, type: !7580, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7582)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{!505, !5125}
!7582 = !{!7583, !7584}
!7583 = !DILocalVariable(name: "vec_", arg: 1, scope: !7579, file: !133, line: 182, type: !5125)
!7584 = !DILocalVariable(name: "obj_", scope: !7579, file: !133, line: 182, type: !505)
!7585 = !DILocation(line: 0, scope: !7579)
!7586 = !DILocation(line: 182, column: 1, scope: !7579)
!7587 = distinct !DISubprogram(name: "VEC_source_location_base_pop", scope: !1, file: !1, line: 2351, type: !7588, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7590)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!632, !7553}
!7590 = !{!7591, !7592}
!7591 = !DILocalVariable(name: "vec_", arg: 1, scope: !7587, file: !1, line: 2351, type: !7553)
!7592 = !DILocalVariable(name: "obj_", scope: !7587, file: !1, line: 2351, type: !632)
!7593 = !DILocation(line: 0, scope: !7587)
!7594 = !DILocation(line: 2351, column: 1, scope: !7587)
!7595 = distinct !DISubprogram(name: "single_pred_edge", scope: !341, file: !341, line: 653, type: !7571, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7596)
!7596 = !{!7597}
!7597 = !DILocalVariable(name: "bb", arg: 1, scope: !7595, file: !341, line: 653, type: !7120)
!7598 = !DILocation(line: 0, scope: !7595)
!7599 = !DILocation(line: 655, column: 3, scope: !7595)
!7600 = !DILocation(line: 656, column: 10, scope: !7595)
!7601 = !DILocation(line: 656, column: 3, scope: !7595)
!7602 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !1877, file: !1877, line: 31, type: !7603, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7607)
!7603 = !DISubroutineType(types: !7604)
!7604 = !{!463, !7605, !5}
!7605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7606, size: 64)
!7606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!7607 = !{!7608, !7609}
!7608 = !DILocalVariable(name: "vec_", arg: 1, scope: !7602, file: !1877, line: 31, type: !7605)
!7609 = !DILocalVariable(name: "ix_", arg: 2, scope: !7602, file: !1877, line: 31, type: !5)
!7610 = !DILocation(line: 0, scope: !7602)
!7611 = !DILocation(line: 31, column: 1, scope: !7602)
!7612 = distinct !DISubprogram(name: "gsi_last_bb", scope: !389, file: !389, line: 4450, type: !5052, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7613)
!7613 = !{!7614, !7615, !7616}
!7614 = !DILocalVariable(name: "bb", arg: 1, scope: !7612, file: !389, line: 4450, type: !1281)
!7615 = !DILocalVariable(name: "i", scope: !7612, file: !389, line: 4452, type: !3841)
!7616 = !DILocalVariable(name: "seq", scope: !7612, file: !389, line: 4453, type: !819)
!7617 = !DILocation(line: 0, scope: !7612)
!7618 = !DILocation(line: 4452, column: 24, scope: !7612)
!7619 = !DILocation(line: 4455, column: 9, scope: !7612)
!7620 = !DILocation(line: 4456, column: 11, scope: !7612)
!7621 = !DILocation(line: 4456, column: 5, scope: !7612)
!7622 = !DILocation(line: 4456, column: 9, scope: !7612)
!7623 = !DILocation(line: 4457, column: 5, scope: !7612)
!7624 = !DILocation(line: 4457, column: 9, scope: !7612)
!7625 = !DILocation(line: 4458, column: 5, scope: !7612)
!7626 = !DILocation(line: 4458, column: 8, scope: !7612)
!7627 = !DILocation(line: 4461, column: 1, scope: !7612)
!7628 = distinct !DISubprogram(name: "replace_uses_equiv_to_x_with_y", scope: !1, file: !1, line: 2032, type: !7629, scopeLine: 2036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7631)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{null, !1044, !829, !505, !463, !505, !505, !1313, !5377}
!7631 = !{!7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7646, !7647, !7648, !7649, !7650, !7651, !7652, !7653, !7654}
!7632 = !DILocalVariable(name: "loop", arg: 1, scope: !7628, file: !1, line: 2032, type: !1044)
!7633 = !DILocalVariable(name: "stmt", arg: 2, scope: !7628, file: !1, line: 2032, type: !829)
!7634 = !DILocalVariable(name: "x", arg: 3, scope: !7628, file: !1, line: 2032, type: !505)
!7635 = !DILocalVariable(name: "xstep", arg: 4, scope: !7628, file: !1, line: 2033, type: !463)
!7636 = !DILocalVariable(name: "y", arg: 5, scope: !7628, file: !1, line: 2033, type: !505)
!7637 = !DILocalVariable(name: "yinit", arg: 6, scope: !7628, file: !1, line: 2033, type: !505)
!7638 = !DILocalVariable(name: "replacements", arg: 7, scope: !7628, file: !1, line: 2034, type: !1313)
!7639 = !DILocalVariable(name: "firstbsi", arg: 8, scope: !7628, file: !1, line: 2035, type: !5377)
!7640 = !DILocalVariable(name: "iter", scope: !7628, file: !1, line: 2037, type: !5174)
!7641 = !DILocalVariable(name: "use_p", scope: !7628, file: !1, line: 2038, type: !1900)
!7642 = !DILocalVariable(name: "use", scope: !7643, file: !1, line: 2042, type: !505)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !1, line: 2041, column: 5)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !1, line: 2040, column: 3)
!7645 = distinct !DILexicalBlock(scope: !7628, file: !1, line: 2040, column: 3)
!7646 = !DILocalVariable(name: "step", scope: !7643, file: !1, line: 2043, type: !505)
!7647 = !DILocalVariable(name: "scev", scope: !7643, file: !1, line: 2044, type: !505)
!7648 = !DILocalVariable(name: "init", scope: !7643, file: !1, line: 2044, type: !505)
!7649 = !DILocalVariable(name: "val", scope: !7643, file: !1, line: 2044, type: !505)
!7650 = !DILocalVariable(name: "var", scope: !7643, file: !1, line: 2044, type: !505)
!7651 = !DILocalVariable(name: "setstmt", scope: !7643, file: !1, line: 2045, type: !829)
!7652 = !DILocalVariable(name: "h", scope: !7643, file: !1, line: 2046, type: !1920)
!7653 = !DILocalVariable(name: "in", scope: !7643, file: !1, line: 2046, type: !1921)
!7654 = !DILocalVariable(name: "loc", scope: !7643, file: !1, line: 2047, type: !1337)
!7655 = !DILocation(line: 0, scope: !7628)
!7656 = !DILocation(line: 2037, column: 3, scope: !7628)
!7657 = !DILocation(line: 2040, column: 3, scope: !7645)
!7658 = !DILocation(line: 0, scope: !7643)
!7659 = !DILocation(line: 0, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 2063, column: 11)
!7661 = !DILocation(line: 0, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 2084, column: 11)
!7663 = !DILocation(line: 0, scope: !7645)
!7664 = !DILocation(line: 2040, column: 3, scope: !7644)
!7665 = !DILocation(line: 2042, column: 18, scope: !7643)
!7666 = !DILocation(line: 2046, column: 7, scope: !7643)
!7667 = !DILocation(line: 2050, column: 15, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 2050, column: 11)
!7669 = !DILocation(line: 2050, column: 11, scope: !7643)
!7670 = !DILocation(line: 2052, column: 4, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7668, file: !1, line: 2051, column: 2)
!7672 = !DILocation(line: 2053, column: 4, scope: !7671)
!7673 = !DILocation(line: 2057, column: 10, scope: !7643)
!7674 = !DILocation(line: 2056, column: 14, scope: !7643)
!7675 = !DILocation(line: 2059, column: 16, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 2059, column: 11)
!7677 = !DILocation(line: 2059, column: 35, scope: !7676)
!7678 = !DILocation(line: 2059, column: 32, scope: !7676)
!7679 = !DILocation(line: 2059, column: 24, scope: !7676)
!7680 = !DILocation(line: 2062, column: 54, scope: !7643)
!7681 = !DILocation(line: 2062, column: 14, scope: !7643)
!7682 = !DILocation(line: 2063, column: 16, scope: !7660)
!7683 = !DILocation(line: 2064, column: 15, scope: !7660)
!7684 = !DILocation(line: 2064, column: 12, scope: !7660)
!7685 = !DILocation(line: 2064, column: 4, scope: !7660)
!7686 = !DILocation(line: 2065, column: 7, scope: !7660)
!7687 = !DILocation(line: 2065, column: 24, scope: !7660)
!7688 = !DILocation(line: 2066, column: 4, scope: !7660)
!7689 = !DILocation(line: 2066, column: 7, scope: !7660)
!7690 = !DILocation(line: 2066, column: 28, scope: !7660)
!7691 = !DILocation(line: 2063, column: 11, scope: !7643)
!7692 = !DILocation(line: 2071, column: 17, scope: !7643)
!7693 = !DILocation(line: 2071, column: 36, scope: !7643)
!7694 = !DILocation(line: 2071, column: 15, scope: !7643)
!7695 = !DILocation(line: 2072, column: 20, scope: !7643)
!7696 = !DILocation(line: 2073, column: 31, scope: !7643)
!7697 = !DILocation(line: 2074, column: 13, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 2074, column: 11)
!7699 = !DILocation(line: 2074, column: 11, scope: !7643)
!7700 = !DILocation(line: 2076, column: 4, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7698, file: !1, line: 2075, column: 2)
!7702 = !DILocation(line: 2077, column: 4, scope: !7701)
!7703 = !DILocation(line: 2082, column: 57, scope: !7643)
!7704 = !DILocation(line: 2082, column: 14, scope: !7643)
!7705 = !DILocation(line: 2083, column: 7, scope: !7643)
!7706 = !DILocation(line: 2084, column: 11, scope: !7662)
!7707 = !DILocation(line: 2084, column: 30, scope: !7662)
!7708 = !DILocation(line: 2084, column: 27, scope: !7662)
!7709 = !DILocation(line: 2084, column: 11, scope: !7643)
!7710 = !DILocation(line: 2086, column: 10, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 2085, column: 2)
!7712 = !DILocation(line: 2087, column: 10, scope: !7711)
!7713 = !DILocation(line: 2088, column: 12, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7711, file: !1, line: 2088, column: 8)
!7715 = !DILocation(line: 2088, column: 8, scope: !7711)
!7716 = !DILocation(line: 2092, column: 8, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7714, file: !1, line: 2089, column: 7)
!7718 = !DILocation(line: 2093, column: 8, scope: !7717)
!7719 = !DILocation(line: 2098, column: 10, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 2097, column: 2)
!7721 = !DILocation(line: 2099, column: 10, scope: !7720)
!7722 = !DILocation(line: 2100, column: 10, scope: !7720)
!7723 = !DILocation(line: 2106, column: 29, scope: !7643)
!7724 = !DILocation(line: 2106, column: 13, scope: !7643)
!7725 = !DILocation(line: 2107, column: 7, scope: !7643)
!7726 = !DILocation(line: 2108, column: 13, scope: !7643)
!7727 = !DILocation(line: 2110, column: 17, scope: !7643)
!7728 = !DILocation(line: 2111, column: 13, scope: !7643)
!7729 = !DILocation(line: 2112, column: 7, scope: !7643)
!7730 = !DILocation(line: 2113, column: 7, scope: !7643)
!7731 = !DILocation(line: 2114, column: 7, scope: !7643)
!7732 = !DILocation(line: 2115, column: 7, scope: !7643)
!7733 = !DILocation(line: 2116, column: 11, scope: !7643)
!7734 = !DILocation(line: 2117, column: 20, scope: !7643)
!7735 = !DILocation(line: 2117, column: 10, scope: !7643)
!7736 = !DILocation(line: 2117, column: 15, scope: !7643)
!7737 = !DILocation(line: 2118, column: 15, scope: !7643)
!7738 = !DILocation(line: 2118, column: 20, scope: !7643)
!7739 = !DILocation(line: 2119, column: 10, scope: !7643)
!7740 = !DILocation(line: 2119, column: 13, scope: !7643)
!7741 = !DILocation(line: 2120, column: 59, scope: !7643)
!7742 = !DILocation(line: 2120, column: 13, scope: !7643)
!7743 = !DILocation(line: 2121, column: 7, scope: !7643)
!7744 = !DILocation(line: 2122, column: 33, scope: !7643)
!7745 = !DILocation(line: 2123, column: 5, scope: !7644)
!7746 = distinct !{!7746, !7657, !7747}
!7747 = !DILocation(line: 2123, column: 5, scope: !7645)
!7748 = !DILocation(line: 2124, column: 1, scope: !7628)
!7749 = distinct !DISubprogram(name: "gimple_vop", scope: !4637, file: !4637, line: 49, type: !7750, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7754)
!7750 = !DISubroutineType(types: !7751)
!7751 = !{!505, !7752}
!7752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7753, size: 64)
!7753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1270)
!7754 = !{!7755}
!7755 = !DILocalVariable(name: "fun", arg: 1, scope: !7749, file: !4637, line: 49, type: !7752)
!7756 = !DILocation(line: 0, scope: !7749)
!7757 = !DILocation(line: 51, column: 3, scope: !7749)
!7758 = !DILocation(line: 52, column: 15, scope: !7749)
!7759 = !DILocation(line: 52, column: 26, scope: !7749)
!7760 = !DILocation(line: 52, column: 3, scope: !7749)
!7761 = distinct !DISubprogram(name: "VEC_source_location_base_space", scope: !1, file: !1, line: 2351, type: !7762, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!463, !7553, !463}
!7764 = !{!7765, !7766}
!7765 = !DILocalVariable(name: "vec_", arg: 1, scope: !7761, file: !1, line: 2351, type: !7553)
!7766 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7761, file: !1, line: 2351, type: !463)
!7767 = !DILocation(line: 0, scope: !7761)
!7768 = !DILocation(line: 2351, column: 1, scope: !7761)
!7769 = distinct !DISubprogram(name: "single_succ_p", scope: !341, file: !341, line: 626, type: !7770, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7772)
!7770 = !DISubroutineType(types: !7771)
!7771 = !{!462, !7120}
!7772 = !{!7773}
!7773 = !DILocalVariable(name: "bb", arg: 1, scope: !7769, file: !341, line: 626, type: !7120)
!7774 = !DILocation(line: 0, scope: !7769)
!7775 = !DILocation(line: 628, column: 10, scope: !7769)
!7776 = !DILocation(line: 628, column: 33, scope: !7769)
!7777 = !DILocation(line: 628, column: 3, scope: !7769)
!7778 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !341, file: !341, line: 150, type: !7779, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7781)
!7779 = !DISubroutineType(types: !7780)
!7780 = !{!5, !7081}
!7781 = !{!7782}
!7782 = !DILocalVariable(name: "vec_", arg: 1, scope: !7778, file: !341, line: 150, type: !7081)
!7783 = !DILocation(line: 0, scope: !7778)
!7784 = !DILocation(line: 150, column: 1, scope: !7778)
!7785 = distinct !DISubprogram(name: "single_pred_p", scope: !341, file: !341, line: 634, type: !7770, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7786)
!7786 = !{!7787}
!7787 = !DILocalVariable(name: "bb", arg: 1, scope: !7785, file: !341, line: 634, type: !7120)
!7788 = !DILocation(line: 0, scope: !7785)
!7789 = !DILocation(line: 636, column: 10, scope: !7785)
!7790 = !DILocation(line: 636, column: 33, scope: !7785)
!7791 = !DILocation(line: 636, column: 3, scope: !7785)
!7792 = distinct !DISubprogram(name: "gimple_seq_last", scope: !389, file: !389, line: 178, type: !7135, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7793)
!7793 = !{!7794}
!7794 = !DILocalVariable(name: "s", arg: 1, scope: !7792, file: !389, line: 178, type: !7137)
!7795 = !DILocation(line: 0, scope: !7792)
!7796 = !DILocation(line: 180, column: 10, scope: !7792)
!7797 = !DILocation(line: 180, column: 17, scope: !7792)
!7798 = !DILocation(line: 180, column: 3, scope: !7792)
!7799 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !4637, file: !4637, line: 233, type: !7800, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7802)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{null, !1900, !505}
!7802 = !{!7803, !7804}
!7803 = !DILocalVariable(name: "use", arg: 1, scope: !7799, file: !4637, line: 233, type: !1900)
!7804 = !DILocalVariable(name: "val", arg: 2, scope: !7799, file: !4637, line: 233, type: !505)
!7805 = !DILocation(line: 0, scope: !7799)
!7806 = !DILocation(line: 235, column: 3, scope: !7799)
!7807 = !DILocation(line: 236, column: 10, scope: !7799)
!7808 = !DILocation(line: 236, column: 15, scope: !7799)
!7809 = !DILocation(line: 237, column: 3, scope: !7799)
!7810 = !DILocation(line: 238, column: 1, scope: !7799)
!7811 = distinct !DISubprogram(name: "link_imm_use", scope: !4637, file: !4637, line: 214, type: !7812, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7814)
!7812 = !DISubroutineType(types: !7813)
!7813 = !{null, !1901, !505}
!7814 = !{!7815, !7816, !7817}
!7815 = !DILocalVariable(name: "linknode", arg: 1, scope: !7811, file: !4637, line: 214, type: !1901)
!7816 = !DILocalVariable(name: "def", arg: 2, scope: !7811, file: !4637, line: 214, type: !505)
!7817 = !DILocalVariable(name: "root", scope: !7811, file: !4637, line: 216, type: !1901)
!7818 = !DILocation(line: 0, scope: !7811)
!7819 = !DILocation(line: 218, column: 8, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7811, file: !4637, line: 218, column: 7)
!7821 = !DILocation(line: 218, column: 12, scope: !7820)
!7822 = !DILocation(line: 218, column: 15, scope: !7820)
!7823 = !DILocation(line: 218, column: 31, scope: !7820)
!7824 = !DILocation(line: 218, column: 7, scope: !7811)
!7825 = !DILocation(line: 219, column: 15, scope: !7820)
!7826 = !DILocation(line: 219, column: 20, scope: !7820)
!7827 = !DILocation(line: 219, column: 5, scope: !7820)
!7828 = !DILocation(line: 222, column: 16, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7820, file: !4637, line: 221, column: 5)
!7830 = !DILocation(line: 227, column: 7, scope: !7829)
!7831 = !DILocation(line: 229, column: 1, scope: !7811)
!7832 = distinct !DISubprogram(name: "tree_operand_length", scope: !133, file: !133, line: 5347, type: !7833, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7835)
!7833 = !DISubroutineType(types: !7834)
!7834 = !{!463, !7508}
!7835 = !{!7836}
!7836 = !DILocalVariable(name: "node", arg: 1, scope: !7832, file: !133, line: 5347, type: !7508)
!7837 = !DILocation(line: 0, scope: !7832)
!7838 = !DILocation(line: 5349, column: 7, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7832, file: !133, line: 5349, column: 7)
!7840 = !DILocation(line: 5349, column: 7, scope: !7832)
!7841 = !DILocation(line: 5350, column: 12, scope: !7839)
!7842 = !DILocation(line: 5350, column: 5, scope: !7839)
!7843 = !DILocation(line: 5352, column: 12, scope: !7839)
!7844 = !DILocation(line: 5352, column: 5, scope: !7839)
!7845 = !DILocation(line: 0, scope: !7839)
!7846 = !DILocation(line: 5353, column: 1, scope: !7832)
!7847 = distinct !DISubprogram(name: "VEC_lambda_vector_gc_alloc", scope: !471, file: !471, line: 34, type: !7848, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7850)
!7848 = !DISubroutineType(types: !7849)
!7849 = !{!1974, !463}
!7850 = !{!7851}
!7851 = !DILocalVariable(name: "alloc_", arg: 1, scope: !7847, file: !471, line: 34, type: !463)
!7852 = !DILocation(line: 0, scope: !7847)
!7853 = !DILocation(line: 34, column: 1, scope: !7847)
!7854 = distinct !DISubprogram(name: "av_for_af", scope: !1, file: !1, line: 2769, type: !7855, scopeLine: 2770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7857)
!7855 = !DISubroutineType(types: !7856)
!7856 = !{!462, !505, !476, !1962}
!7857 = !{!7858, !7859, !7860, !7861, !7864, !7865}
!7858 = !DILocalVariable(name: "access_fun", arg: 1, scope: !7854, file: !1, line: 2769, type: !505)
!7859 = !DILocalVariable(name: "cy", arg: 2, scope: !7854, file: !1, line: 2769, type: !476)
!7860 = !DILocalVariable(name: "am", arg: 3, scope: !7854, file: !1, line: 2769, type: !1962)
!7861 = !DILocalVariable(name: "left", scope: !7862, file: !1, line: 2775, type: !505)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !1, line: 2774, column: 7)
!7863 = distinct !DILexicalBlock(scope: !7854, file: !1, line: 2772, column: 5)
!7864 = !DILocalVariable(name: "right", scope: !7862, file: !1, line: 2776, type: !505)
!7865 = !DILocalVariable(name: "var", scope: !7862, file: !1, line: 2777, type: !5)
!7866 = !DILocation(line: 0, scope: !7854)
!7867 = !DILocation(line: 2771, column: 11, scope: !7854)
!7868 = !DILocation(line: 2786, column: 11, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7862, file: !1, line: 2785, column: 6)
!7870 = !DILocation(line: 2771, column: 3, scope: !7854)
!7871 = !DILocation(line: 2775, column: 14, scope: !7862)
!7872 = !DILocation(line: 0, scope: !7862)
!7873 = !DILocation(line: 2776, column: 15, scope: !7862)
!7874 = !DILocation(line: 2779, column: 6, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7862, file: !1, line: 2779, column: 6)
!7876 = !DILocation(line: 2779, column: 24, scope: !7875)
!7877 = !DILocation(line: 2779, column: 6, scope: !7862)
!7878 = !DILocation(line: 2782, column: 38, scope: !7862)
!7879 = !DILocation(line: 2782, column: 8, scope: !7862)
!7880 = !DILocation(line: 2783, column: 12, scope: !7862)
!7881 = !DILocation(line: 2783, column: 2, scope: !7862)
!7882 = !DILocation(line: 2783, column: 10, scope: !7862)
!7883 = !DILocation(line: 2785, column: 6, scope: !7869)
!7884 = !DILocation(line: 2785, column: 23, scope: !7869)
!7885 = !DILocation(line: 2785, column: 6, scope: !7862)
!7886 = !DILocation(line: 2788, column: 11, scope: !7869)
!7887 = !DILocation(line: 2788, column: 4, scope: !7869)
!7888 = !DILocation(line: 2793, column: 14, scope: !7863)
!7889 = !DILocation(line: 2793, column: 7, scope: !7863)
!7890 = !DILocation(line: 2798, column: 1, scope: !7854)
!7891 = !DILocation(line: 0, scope: !7863)
!7892 = distinct !DISubprogram(name: "VEC_lambda_vector_base_quick_push", scope: !471, file: !471, line: 32, type: !7893, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7896)
!7893 = !DISubroutineType(types: !7894)
!7894 = !{!1863, !7895, !476}
!7895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!7896 = !{!7897, !7898, !7899}
!7897 = !DILocalVariable(name: "vec_", arg: 1, scope: !7892, file: !471, line: 32, type: !7895)
!7898 = !DILocalVariable(name: "obj_", arg: 2, scope: !7892, file: !471, line: 32, type: !476)
!7899 = !DILocalVariable(name: "slot_", scope: !7892, file: !471, line: 32, type: !1863)
!7900 = !DILocation(line: 0, scope: !7892)
!7901 = !DILocation(line: 32, column: 1, scope: !7892)
!7902 = distinct !DISubprogram(name: "am_vector_index_for_loop", scope: !1931, file: !1931, line: 148, type: !7903, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7905)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{!463, !1962, !463}
!7905 = !{!7906, !7907, !7908, !7909}
!7906 = !DILocalVariable(name: "access_matrix", arg: 1, scope: !7902, file: !1931, line: 148, type: !1962)
!7907 = !DILocalVariable(name: "loop_num", arg: 2, scope: !7902, file: !1931, line: 148, type: !463)
!7908 = !DILocalVariable(name: "i", scope: !7902, file: !1931, line: 150, type: !463)
!7909 = !DILocalVariable(name: "l", scope: !7902, file: !1931, line: 151, type: !1071)
!7910 = !DILocation(line: 0, scope: !7902)
!7911 = !DILocation(line: 151, column: 3, scope: !7902)
!7912 = !DILocation(line: 0, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !1931, line: 153, column: 3)
!7914 = distinct !DILexicalBlock(scope: !7902, file: !1931, line: 153, column: 3)
!7915 = !DILocation(line: 153, column: 8, scope: !7914)
!7916 = !DILocation(line: 0, scope: !7914)
!7917 = !DILocation(line: 153, column: 15, scope: !7913)
!7918 = !DILocation(line: 153, column: 3, scope: !7914)
!7919 = !DILocation(line: 154, column: 9, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7913, file: !1931, line: 154, column: 9)
!7921 = !DILocation(line: 154, column: 12, scope: !7920)
!7922 = !DILocation(line: 154, column: 16, scope: !7920)
!7923 = !DILocation(line: 154, column: 9, scope: !7913)
!7924 = !DILocation(line: 153, column: 74, scope: !7913)
!7925 = !DILocation(line: 153, column: 3, scope: !7913)
!7926 = distinct !{!7926, !7918, !7927}
!7927 = !DILocation(line: 155, column: 14, scope: !7914)
!7928 = !DILocation(line: 157, column: 3, scope: !7902)
!7929 = !DILocation(line: 159, column: 5, scope: !7902)
!7930 = !DILocation(line: 161, column: 1, scope: !7902)
!7931 = distinct !DISubprogram(name: "av_for_af_base", scope: !1, file: !1, line: 2707, type: !7932, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7934)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!462, !505, !476, !1962, !463}
!7934 = !{!7935, !7936, !7937, !7938, !7939, !7940}
!7935 = !DILocalVariable(name: "base_expr", arg: 1, scope: !7931, file: !1, line: 2707, type: !505)
!7936 = !DILocalVariable(name: "cy", arg: 2, scope: !7931, file: !1, line: 2707, type: !476)
!7937 = !DILocalVariable(name: "am", arg: 3, scope: !7931, file: !1, line: 2707, type: !1962)
!7938 = !DILocalVariable(name: "cst", arg: 4, scope: !7931, file: !1, line: 2708, type: !463)
!7939 = !DILocalVariable(name: "result", scope: !7931, file: !1, line: 2710, type: !462)
!7940 = !DILocalVariable(name: "param_index", scope: !7941, file: !1, line: 2721, type: !463)
!7941 = distinct !DILexicalBlock(scope: !7942, file: !1, line: 2720, column: 7)
!7942 = distinct !DILexicalBlock(scope: !7931, file: !1, line: 2713, column: 5)
!7943 = !DILocation(line: 2756, column: 14, scope: !7942)
!7944 = !DILocation(line: 0, scope: !7931)
!7945 = !DILocation(line: 2712, column: 11, scope: !7931)
!7946 = !DILocation(line: 2712, column: 3, scope: !7931)
!7947 = !DILocation(line: 2716, column: 41, scope: !7942)
!7948 = !DILocation(line: 2716, column: 10, scope: !7942)
!7949 = !DILocation(line: 2716, column: 7, scope: !7942)
!7950 = !DILocation(line: 2716, column: 38, scope: !7942)
!7951 = !DILocation(line: 2717, column: 7, scope: !7942)
!7952 = !DILocation(line: 2722, column: 4, scope: !7941)
!7953 = !DILocation(line: 0, scope: !7941)
!7954 = !DILocation(line: 2724, column: 18, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7941, file: !1, line: 2724, column: 6)
!7956 = !DILocation(line: 2724, column: 6, scope: !7941)
!7957 = !DILocation(line: 2726, column: 30, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7955, file: !1, line: 2725, column: 4)
!7959 = !DILocation(line: 2726, column: 28, scope: !7958)
!7960 = !DILocation(line: 2726, column: 22, scope: !7958)
!7961 = !DILocation(line: 2727, column: 6, scope: !7958)
!7962 = !DILocation(line: 2734, column: 30, scope: !7942)
!7963 = !DILocation(line: 2734, column: 14, scope: !7942)
!7964 = !DILocation(line: 2735, column: 2, scope: !7942)
!7965 = !DILocation(line: 2735, column: 21, scope: !7942)
!7966 = !DILocation(line: 2735, column: 5, scope: !7942)
!7967 = !DILocation(line: 2734, column: 7, scope: !7942)
!7968 = !DILocation(line: 2738, column: 30, scope: !7942)
!7969 = !DILocation(line: 2738, column: 14, scope: !7942)
!7970 = !DILocation(line: 2739, column: 2, scope: !7942)
!7971 = !DILocation(line: 2739, column: 21, scope: !7942)
!7972 = !DILocation(line: 2739, column: 61, scope: !7942)
!7973 = !DILocation(line: 2739, column: 5, scope: !7942)
!7974 = !DILocation(line: 2738, column: 7, scope: !7942)
!7975 = !DILocation(line: 2742, column: 11, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7942, file: !1, line: 2742, column: 11)
!7977 = !DILocation(line: 2742, column: 51, scope: !7976)
!7978 = !DILocation(line: 0, scope: !7976)
!7979 = !DILocation(line: 2742, column: 11, scope: !7942)
!7980 = !DILocation(line: 2745, column: 6, scope: !7976)
!7981 = !DILocation(line: 2744, column: 14, scope: !7976)
!7982 = !DILocation(line: 2743, column: 11, scope: !7976)
!7983 = !DILocation(line: 2746, column: 16, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7976, file: !1, line: 2746, column: 16)
!7985 = !DILocation(line: 2746, column: 56, scope: !7984)
!7986 = !DILocation(line: 2746, column: 16, scope: !7976)
!7987 = !DILocation(line: 2749, column: 6, scope: !7984)
!7988 = !DILocation(line: 2748, column: 14, scope: !7984)
!7989 = !DILocation(line: 2747, column: 11, scope: !7984)
!7990 = !DILocation(line: 2756, column: 30, scope: !7942)
!7991 = !DILocation(line: 2756, column: 70, scope: !7942)
!7992 = !DILocation(line: 2763, column: 1, scope: !7931)
!7993 = !DILocation(line: 0, scope: !7942)
!7994 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !328, file: !328, line: 85, type: !7995, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7998)
!7995 = !DISubroutineType(types: !7996)
!7996 = !{!463, !6516, !5, !7997}
!7997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!7998 = !{!7999, !8000, !8001}
!7999 = !DILocalVariable(name: "vec_", arg: 1, scope: !7994, file: !328, line: 85, type: !6516)
!8000 = !DILocalVariable(name: "ix_", arg: 2, scope: !7994, file: !328, line: 85, type: !5)
!8001 = !DILocalVariable(name: "ptr", arg: 3, scope: !7994, file: !328, line: 85, type: !7997)
!8002 = !DILocation(line: 0, scope: !7994)
!8003 = !DILocation(line: 85, column: 1, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7994, file: !328, line: 85, column: 1)
!8005 = !DILocation(line: 85, column: 1, scope: !7994)
!8006 = !DILocation(line: 85, column: 1, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8004, file: !328, line: 85, column: 1)
!8008 = !DILocation(line: 85, column: 1, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8004, file: !328, line: 85, column: 1)
!8010 = !DILocation(line: 0, scope: !8004)
