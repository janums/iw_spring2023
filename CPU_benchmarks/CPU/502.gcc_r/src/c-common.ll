; ModuleID = 'c-common.bc'
source_filename = "c-common.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.fname_var_t = type { %union.tree_node**, i32, i32 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.cpp_reader = type opaque
%struct.tlist = type { %struct.tlist*, %union.tree_node*, %union.tree_node* }
%struct.tlist_cache = type { %struct.tlist_cache*, %struct.tlist*, %struct.tlist*, %union.tree_node* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.disabled_builtin = type { i8*, %struct.disabled_builtin* }
%struct.visibility_flags = type { i8, [3 x i8] }
%struct.VEC_const_char_p_gc = type { %struct.VEC_const_char_p_base }
%struct.VEC_const_char_p_base = type { i32, i32, [1 x i8*] }
%struct.gcc_targetcm = type { i8 (i64, i8*, i32)* }
%struct.VEC_tree_gc_vec_gc = type { %struct.VEC_tree_gc_vec_base }
%struct.VEC_tree_gc_vec_base = type { i32, i32, [1 x %struct.VEC_tree_gc*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.cl_optimization = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.c_common_resword = type { i8*, i32 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.cpp_string = type { i32, i8* }
%struct.call_expr_arg_iterator_d = type { %union.tree_node*, i32, i32 }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@flag_signed_bitfields = dso_local local_unnamed_addr global i32 1, align 4, !dbg !0
@flag_nil_receivers = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2862
@flag_zero_link = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2864
@flag_replace_objc_classes = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2866
@flag_hosted = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2868
@flag_implement_inlines = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2870
@flag_implicit_templates = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2872
@flag_implicit_inline_templates = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2874
@flag_optional_diags = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2876
@flag_elide_constructors = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2878
@flag_default_inline = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2880
@flag_rtti = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2882
@flag_access_control = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2884
@cxx_dialect = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2886
@flag_new_for_scope = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2888
@flag_weak = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2890
@flag_working_directory = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2892
@flag_use_cxa_atexit = dso_local local_unnamed_addr global i32 2, align 4, !dbg !2894
@flag_use_cxa_get_exception_ptr = dso_local local_unnamed_addr global i32 2, align 4, !dbg !2896
@flag_enforce_eh_specs = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2898
@flag_threadsafe_statics = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2900
@flag_pretty_templates = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2902
@warn_implicit = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2904
@max_tinst_depth = dso_local local_unnamed_addr global i32 1024, align 4, !dbg !2906
@done_lexing = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2908
@c_global_trees = common dso_local global [55 x %union.tree_node*] zeroinitializer, align 16, !dbg !3004
@fname_vars = dso_local local_unnamed_addr constant [4 x %struct.fname_var_t] [%struct.fname_var_t { %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 408) to %union.tree_node**), i32 68, i32 0 }, %struct.fname_var_t { %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 392) to %union.tree_node**), i32 66, i32 0 }, %struct.fname_var_t { %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 400) to %union.tree_node**), i32 67, i32 1 }, %struct.fname_var_t zeroinitializer], align 16, !dbg !2910
@.str = private unnamed_addr constant [6 x i8] c"_Bool\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"_Complex\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"_Imaginary\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"_Decimal32\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"_Decimal64\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"_Decimal128\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"_Fract\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"_Accum\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"_Sat\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"__FUNCTION__\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"__PRETTY_FUNCTION__\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"__alignof\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"__alignof__\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"__asm\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"__asm__\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"__attribute\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"__attribute__\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"__builtin_choose_expr\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"__builtin_offsetof\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"__builtin_types_compatible_p\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"__builtin_va_arg\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"__complex\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"__complex__\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"__const\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"__const__\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"__decltype\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"__extension__\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"__func__\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"__has_nothrow_assign\00", align 1
@.str.29 = private unnamed_addr constant [26 x i8] c"__has_nothrow_constructor\00", align 1
@.str.30 = private unnamed_addr constant [19 x i8] c"__has_nothrow_copy\00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"__has_trivial_assign\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"__has_trivial_constructor\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"__has_trivial_copy\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"__has_trivial_destructor\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"__has_virtual_destructor\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"__is_abstract\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"__is_base_of\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"__is_class\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"__is_convertible_to\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"__is_empty\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"__is_enum\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"__is_pod\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"__is_polymorphic\00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"__is_standard_layout\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"__is_trivial\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"__is_union\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"__imag\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"__imag__\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"__inline\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"__inline__\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"__label__\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"__null\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"__real\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"__real__\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"__restrict\00", align 1
@.str.56 = private unnamed_addr constant [13 x i8] c"__restrict__\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"__signed\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"__signed__\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"__thread\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"__typeof\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"__typeof__\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c"__volatile\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"__volatile__\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"alignof\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"asm\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"catch\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c"char16_t\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"char32_t\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"constexpr\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"const_cast\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c"decltype\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"dynamic_cast\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"explicit\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"export\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"extern\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"friend\00", align 1
@.str.94 = private unnamed_addr constant [5 x i8] c"goto\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"inline\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.99 = private unnamed_addr constant [8 x i8] c"mutable\00", align 1
@.str.100 = private unnamed_addr constant [10 x i8] c"namespace\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"operator\00", align 1
@.str.103 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"register\00", align 1
@.str.107 = private unnamed_addr constant [17 x i8] c"reinterpret_cast\00", align 1
@.str.108 = private unnamed_addr constant [9 x i8] c"restrict\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c"signed\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"sizeof\00", align 1
@.str.113 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@.str.114 = private unnamed_addr constant [14 x i8] c"static_assert\00", align 1
@.str.115 = private unnamed_addr constant [12 x i8] c"static_cast\00", align 1
@.str.116 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.118 = private unnamed_addr constant [9 x i8] c"template\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.120 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"try\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"typedef\00", align 1
@.str.124 = private unnamed_addr constant [9 x i8] c"typename\00", align 1
@.str.125 = private unnamed_addr constant [7 x i8] c"typeid\00", align 1
@.str.126 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.127 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"unsigned\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"using\00", align 1
@.str.130 = private unnamed_addr constant [8 x i8] c"virtual\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.132 = private unnamed_addr constant [9 x i8] c"volatile\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"wchar_t\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.135 = private unnamed_addr constant [20 x i8] c"compatibility_alias\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c"defs\00", align 1
@.str.137 = private unnamed_addr constant [7 x i8] c"encode\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"implementation\00", align 1
@.str.140 = private unnamed_addr constant [10 x i8] c"interface\00", align 1
@.str.141 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@.str.142 = private unnamed_addr constant [9 x i8] c"selector\00", align 1
@.str.143 = private unnamed_addr constant [8 x i8] c"finally\00", align 1
@.str.144 = private unnamed_addr constant [13 x i8] c"synchronized\00", align 1
@.str.145 = private unnamed_addr constant [7 x i8] c"bycopy\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"byref\00", align 1
@.str.147 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.148 = private unnamed_addr constant [6 x i8] c"inout\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"oneway\00", align 1
@.str.150 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@c_common_reswords = dso_local local_unnamed_addr constant [151 x { i8*, i8, i8, i8, i8 }] [{ i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8 69, i8 0, i8 1, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8 13, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8 27, i8 0, i8 1, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8 60, i8 0, i8 17, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i8 61, i8 0, i8 17, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8 62, i8 0, i8 17, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8 63, i8 0, i8 17, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8 64, i8 0, i8 17, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8 15, i8 0, i8 17, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), i8 66, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i32 0, i32 0), i8 67, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8 51, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i8 51, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i8 49, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i8 49, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8 52, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8 52, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i32 0, i32 0), i8 58, i8 0, i8 1, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i32 0, i32 0), i8 82, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i8 59, i8 0, i8 1, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0), i8 53, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i8 13, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0), i8 13, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i8 3, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i8 3, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8 118, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i32 0, i32 0), i8 54, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i8 68, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i8 97, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i32 0, i32 0), i8 98, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i32 0, i32 0), i8 99, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i32 0, i32 0), i8 100, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i32 0, i32 0), i8 101, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i32 0, i32 0), i8 102, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i32 0, i32 0), i8 103, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i32 0, i32 0), i8 104, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i8 105, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8 106, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i32 0, i32 0), i8 108, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i32 0, i32 0), i8 107, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i32 0, i32 0), i8 109, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8 110, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i8 111, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i32 0, i32 0), i8 112, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i32 0, i32 0), i8 113, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i32 0, i32 0), i8 114, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), i8 115, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0), i8 55, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i32 0, i32 0), i8 55, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i32 0, i32 0), i8 8, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i8 8, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i8 57, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i32 0, i32 0), i8 76, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i8 56, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8 56, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i32 0, i32 0), i8 12, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i32 0, i32 0), i8 12, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), i8 10, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i32 0, i32 0), i8 10, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i32 0, i32 0), i8 14, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0), i8 50, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0), i8 50, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0), i8 9, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0), i8 9, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i32 0, i32 0), i8 51, i8 0, i8 10, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i32 0, i32 0), i8 49, i8 0, i8 64, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i8 11, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), i8 69, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0), i8 44, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i8 42, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i8 77, i8 0, i8 0, i8 3 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8 29, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i32 0, i32 0), i8 91, i8 0, i8 10, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i32 0, i32 0), i8 92, i8 0, i8 10, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i32 0, i32 0), i8 71, i8 0, i8 0, i8 3 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i8 3, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i32 0, i32 0), i8 117, i8 0, i8 10, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i8 93, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i8 45, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i32 0, i32 0), i8 118, i8 0, i8 10, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i32 0, i32 0), i8 43, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i32 0, i32 0), i8 78, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.82, i32 0, i32 0), i8 39, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i32 0, i32 0), i8 31, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i32 0, i32 0), i8 94, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8 37, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0), i8 33, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), i8 18, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8 19, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i8 4, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i32 0, i32 0), i8 79, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i32 0, i32 0), i8 30, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i32 0, i32 0), i8 40, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i32 0, i32 0), i8 16, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i32 0, i32 0), i8 47, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i8 36, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i32 0, i32 0), i8 8, i8 0, i8 32, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), i8 28, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), i8 2, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i32 0, i32 0), i8 20, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.100, i32 0, i32 0), i8 80, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i32 0, i32 0), i8 81, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i32 0, i32 0), i8 83, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.103, i32 0, i32 0), i8 73, i8 0, i8 0, i8 3 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), i8 74, i8 0, i8 0, i8 3 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i32 0, i32 0), i8 72, i8 0, i8 0, i8 3 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i32 0, i32 0), i8 5, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i32 0, i32 0), i8 95, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i32 0, i32 0), i8 12, i8 0, i8 5, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i32 0, i32 0), i8 46, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i32 0, i32 0), i8 7, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i32 0, i32 0), i8 10, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), i8 48, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8 116, i8 0, i8 10, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.115, i32 0, i32 0), i8 96, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.116, i32 0, i32 0), i8 34, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i32 0, i32 0), i8 41, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118, i32 0, i32 0), i8 75, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i32 0, i32 0), i8 84, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8 85, i8 0, i8 0, i8 3 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0), i8 86, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i32 0, i32 0), i8 87, i8 0, i8 0, i8 3 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i8 6, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124, i32 0, i32 0), i8 88, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i32 0, i32 0), i8 89, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i32 0, i32 0), i8 50, i8 0, i8 80, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i32 0, i32 0), i8 35, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0), i8 1, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i32 0, i32 0), i8 90, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.130, i32 0, i32 0), i8 17, i8 0, i8 2, i8 2 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i8 32, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132, i32 0, i32 0), i8 9, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), i8 70, i8 0, i8 2, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8 38, i8 0, i8 0, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.135, i32 0, i32 0), i8 122, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i32 0, i32 0), i8 123, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.137, i32 0, i32 0), i8 119, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.138, i32 0, i32 0), i8 120, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.139, i32 0, i32 0), i8 -121, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.140, i32 0, i32 0), i8 -122, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.141, i32 0, i32 0), i8 127, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.142, i32 0, i32 0), i8 -128, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i32 0, i32 0), i8 -124, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.144, i32 0, i32 0), i8 -123, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.145, i32 0, i32 0), i8 24, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i32 0, i32 0), i8 25, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.147, i32 0, i32 0), i8 21, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.148, i32 0, i32 0), i8 23, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i8 26, i8 0, i8 -128, i8 0 }, { i8*, i8, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.150, i32 0, i32 0), i8 22, i8 0, i8 -128, i8 0 }], align 16, !dbg !2922
@num_c_common_reswords = dso_local local_unnamed_addr constant i32 151, align 4, !dbg !2934
@.str.151 = private unnamed_addr constant [7 x i8] c"packed\00", align 1
@.str.152 = private unnamed_addr constant [9 x i8] c"nocommon\00", align 1
@.str.153 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"noreturn\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"noinline\00", align 1
@.str.156 = private unnamed_addr constant [8 x i8] c"noclone\00", align 1
@.str.157 = private unnamed_addr constant [14 x i8] c"always_inline\00", align 1
@.str.158 = private unnamed_addr constant [11 x i8] c"gnu_inline\00", align 1
@.str.159 = private unnamed_addr constant [11 x i8] c"artificial\00", align 1
@.str.160 = private unnamed_addr constant [8 x i8] c"flatten\00", align 1
@.str.161 = private unnamed_addr constant [5 x i8] c"used\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"unused\00", align 1
@.str.163 = private unnamed_addr constant [19 x i8] c"externally_visible\00", align 1
@.str.164 = private unnamed_addr constant [18 x i8] c"transparent_union\00", align 1
@.str.165 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.166 = private unnamed_addr constant [11 x i8] c"destructor\00", align 1
@.str.167 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.168 = private unnamed_addr constant [8 x i8] c"section\00", align 1
@.str.169 = private unnamed_addr constant [8 x i8] c"aligned\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c"weak\00", align 1
@.str.171 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@.str.172 = private unnamed_addr constant [8 x i8] c"weakref\00", align 1
@.str.173 = private unnamed_addr constant [23 x i8] c"no_instrument_function\00", align 1
@.str.174 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@.str.175 = private unnamed_addr constant [14 x i8] c"returns_twice\00", align 1
@.str.176 = private unnamed_addr constant [15 x i8] c"no_stack_limit\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"pure\00", align 1
@.str.178 = private unnamed_addr constant [8 x i8] c"no vops\00", align 1
@.str.179 = private unnamed_addr constant [11 x i8] c"deprecated\00", align 1
@.str.180 = private unnamed_addr constant [12 x i8] c"vector_size\00", align 1
@.str.181 = private unnamed_addr constant [11 x i8] c"visibility\00", align 1
@.str.182 = private unnamed_addr constant [10 x i8] c"tls_model\00", align 1
@.str.183 = private unnamed_addr constant [8 x i8] c"nonnull\00", align 1
@.str.184 = private unnamed_addr constant [8 x i8] c"nothrow\00", align 1
@.str.185 = private unnamed_addr constant [10 x i8] c"may_alias\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c"cleanup\00", align 1
@.str.187 = private unnamed_addr constant [19 x i8] c"warn_unused_result\00", align 1
@.str.188 = private unnamed_addr constant [9 x i8] c"sentinel\00", align 1
@.str.189 = private unnamed_addr constant [13 x i8] c"type generic\00", align 1
@.str.190 = private unnamed_addr constant [11 x i8] c"alloc_size\00", align 1
@.str.191 = private unnamed_addr constant [5 x i8] c"cold\00", align 1
@.str.192 = private unnamed_addr constant [4 x i8] c"hot\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.195 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.196 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@c_common_attribute_table = dso_local local_unnamed_addr constant [49 x %struct.attribute_spec] [%struct.attribute_spec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.151, i32 0, i32 0), i32 0, i32 0, i8 0, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_packed_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.152, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_nocommon_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.153, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_common_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_noreturn_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_noreturn_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_noinline_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.156, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_noclone_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_always_inline_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.158, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_gnu_inline_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.159, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_artificial_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.160, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_flatten_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_used_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i32 0, i32 0, i8 0, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_unused_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.163, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_externally_visible_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_const_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.164, i32 0, i32 0), i32 0, i32 0, i8 0, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_transparent_union_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.165, i32 0, i32 0), i32 0, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_constructor_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i32 0, i32 0), i32 0, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_destructor_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.167, i32 0, i32 0), i32 1, i32 1, i8 0, i8 1, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_mode_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.168, i32 0, i32 0), i32 1, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_section_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i32 0, i32 1, i8 0, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_aligned_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_weak_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.171, i32 0, i32 0), i32 1, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_alias_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.172, i32 0, i32 0), i32 0, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_weakref_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.173, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_no_instrument_function_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_malloc_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.175, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_returns_twice_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.176, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_no_limit_stack_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_pure_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_novops_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.179, i32 0, i32 0), i32 0, i32 1, i8 0, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_deprecated_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.180, i32 0, i32 0), i32 1, i32 1, i8 0, i8 1, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_vector_size_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i32 0, i32 0), i32 1, i32 1, i8 0, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_visibility_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.182, i32 0, i32 0), i32 1, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_tls_model_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.183, i32 0, i32 0), i32 0, i32 -1, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_nonnull_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.184, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_nothrow_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.185, i32 0, i32 0), i32 0, i32 0, i8 0, i8 1, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* null }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.186, i32 0, i32 0), i32 1, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_cleanup_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.187, i32 0, i32 0), i32 0, i32 0, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_warn_unused_result_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.188, i32 0, i32 0), i32 0, i32 1, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_sentinel_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.189, i32 0, i32 0), i32 0, i32 0, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_type_generic_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.190, i32 0, i32 0), i32 1, i32 2, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_alloc_size_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.191, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_cold_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.192, i32 0, i32 0), i32 0, i32 0, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_hot_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i32 0, i32 0), i32 1, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_error_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0), i32 1, i32 1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_error_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i32 0, i32 0), i32 1, i32 -1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_target_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.196, i32 0, i32 0), i32 1, i32 -1, i8 1, i8 0, i8 0, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_optimize_attribute }, %struct.attribute_spec zeroinitializer], align 16, !dbg !2936
@.str.197 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.198 = private unnamed_addr constant [11 x i8] c"format_arg\00", align 1
@c_common_format_attribute_table = dso_local local_unnamed_addr constant [3 x %struct.attribute_spec] [%struct.attribute_spec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i32 0, i32 0), i32 3, i32 3, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_format_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.198, i32 0, i32 0), i32 1, i32 1, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_format_arg_attribute }, %struct.attribute_spec zeroinitializer], align 16, !dbg !2955
@.str.199 = private unnamed_addr constant [11 x i8] c"c-common.c\00", align 1
@.str.200 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.201 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.202 = private unnamed_addr constant [10 x i8] c"top level\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.203 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@parse_in = common dso_local local_unnamed_addr global %struct.cpp_reader* null, align 8, !dbg !2999
@input_location = external dso_local local_unnamed_addr global i32, align 4
@make_fname_decl = common dso_local local_unnamed_addr global %union.tree_node* (i32, %union.tree_node*, i32)* null, align 8, !dbg !3069
@.str.204 = private unnamed_addr constant [45 x i8] c"%qD is not defined outside of function scope\00", align 1
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@warn_overlength_strings = external dso_local local_unnamed_addr global i32, align 4
@flag_isoc99 = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3051
@.str.205 = private unnamed_addr constant [91 x i8] c"string length %qd is greater than the length %qd ISO C%d compilers are required to support\00", align 1
@c_language = external dso_local local_unnamed_addr global i32, align 4
@warn_write_strings = external dso_local local_unnamed_addr global i32, align 4
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@warn_overflow = external dso_local local_unnamed_addr global i32, align 4
@pedantic = external dso_local local_unnamed_addr global i32, align 4
@.str.206 = private unnamed_addr constant [32 x i8] c"overflow in constant expression\00", align 1
@c_inhibit_evaluation_warnings = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3074
@.str.207 = private unnamed_addr constant [31 x i8] c"integer overflow in expression\00", align 1
@.str.208 = private unnamed_addr constant [38 x i8] c"floating point overflow in expression\00", align 1
@.str.209 = private unnamed_addr constant [35 x i8] c"fixed-point overflow in expression\00", align 1
@.str.210 = private unnamed_addr constant [30 x i8] c"vector overflow in expression\00", align 1
@.str.211 = private unnamed_addr constant [39 x i8] c"complex integer overflow in expression\00", align 1
@.str.212 = private unnamed_addr constant [46 x i8] c"complex floating point overflow in expression\00", align 1
@.str.213 = private unnamed_addr constant [47 x i8] c"logical %<or%> applied to non-boolean constant\00", align 1
@.str.214 = private unnamed_addr constant [48 x i8] c"logical %<and%> applied to non-boolean constant\00", align 1
@.str.215 = private unnamed_addr constant [63 x i8] c"logical %<or%> of collectively exhaustive tests is always true\00", align 1
@.str.216 = private unnamed_addr constant [60 x i8] c"logical %<and%> of mutually exclusive tests is always false\00", align 1
@flag_strict_aliasing = external dso_local local_unnamed_addr global i32, align 4
@warn_strict_aliasing = external dso_local local_unnamed_addr global i32, align 4
@.str.217 = private unnamed_addr constant [66 x i8] c"type-punning to incomplete type might break strict-aliasing rules\00", align 1
@.str.218 = private unnamed_addr constant [67 x i8] c"dereferencing type-punned pointer will break strict-aliasing rules\00", align 1
@.str.219 = private unnamed_addr constant [68 x i8] c"dereferencing type-punned pointer might break strict-aliasing rules\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.220 = private unnamed_addr constant [41 x i8] c"first argument of %q+D should be %<int%>\00", align 1
@.str.221 = private unnamed_addr constant [46 x i8] c"second argument of %q+D should be %<char **%>\00", align 1
@.str.222 = private unnamed_addr constant [54 x i8] c"third argument of %q+D should probably be %<char **%>\00", align 1
@.str.223 = private unnamed_addr constant [38 x i8] c"%q+D takes only zero or two arguments\00", align 1
@vector_types_convertible_p.emitted_lax_note = internal unnamed_addr global i1 false, align 1, !dbg !3113
@flag_lax_vector_conversions = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3035
@.str.224 = private unnamed_addr constant [119 x i8] c"use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts\00", align 1
@.str.225 = private unnamed_addr constant [52 x i8] c"large integer implicitly truncated to unsigned type\00", align 1
@.str.226 = private unnamed_addr constant [41 x i8] c"overflow in implicit constant conversion\00", align 1
@warned_ids = internal unnamed_addr global %struct.tlist* null, align 8, !dbg !3078
@save_expr_cache = internal unnamed_addr global %struct.tlist_cache* null, align 8, !dbg !3080
@tlist_firstobj = internal unnamed_addr global i8* null, align 8, !dbg !3109
@tlist_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !3076
@mode_ibit = external dso_local local_unnamed_addr constant [87 x i8], align 16
@mode_fbit = external dso_local local_unnamed_addr constant [87 x i8], align 16
@mode_wider = external dso_local local_unnamed_addr constant [87 x i8], align 16
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.227 = private unnamed_addr constant [127 x i8] c"GCC cannot support operators with integer types and fixed-point types that have too many integral and fractional bits together\00", align 1
@mode_precision = external dso_local local_unnamed_addr constant [87 x i16], align 16
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@registered_builtin_types = internal global %union.tree_node* null, align 8, !dbg !3082
@.str.228 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.229 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.230 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.231 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.232 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.233 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.234 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.235 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.236 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.237 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.238 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.239 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.240 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.241 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.242 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.243 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.244 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.245 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.246 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.247 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.248 = private unnamed_addr constant [49 x i8] c"invalid operands to binary %s (have %qT and %qT)\00", align 1
@.str.249 = private unnamed_addr constant [61 x i8] c"comparison is always false due to limited range of data type\00", align 1
@.str.250 = private unnamed_addr constant [60 x i8] c"comparison is always true due to limited range of data type\00", align 1
@warn_type_limits = external dso_local local_unnamed_addr global i32, align 4
@.str.251 = private unnamed_addr constant [54 x i8] c"comparison of unsigned expression >= 0 is always true\00", align 1
@.str.252 = private unnamed_addr constant [54 x i8] c"comparison of unsigned expression < 0 is always false\00", align 1
@.str.253 = private unnamed_addr constant [46 x i8] c"pointer of type %<void *%> used in arithmetic\00", align 1
@.str.254 = private unnamed_addr constant [41 x i8] c"pointer to a function used in arithmetic\00", align 1
@.str.255 = private unnamed_addr constant [46 x i8] c"pointer to member function used in arithmetic\00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@dconst0 = external dso_local global %struct.real_value, align 8
@fconst0 = external dso_local global [18 x %struct.fixed_value], align 16
@.str.256 = private unnamed_addr constant [52 x i8] c"the address of %qD will always evaluate as %<true%>\00", align 1
@warn_parentheses = external dso_local local_unnamed_addr global i32, align 4
@.str.257 = private unnamed_addr constant [58 x i8] c"suggest parentheses around assignment used as truth value\00", align 1
@.str.258 = private unnamed_addr constant [28 x i8] c"invalid use of %<restrict%>\00", align 1
@num_in_fnames = external dso_local local_unnamed_addr global i32, align 4
@type_hash_table = internal global %struct.htab* null, align 8, !dbg !3084
@warn_pointer_arith = external dso_local local_unnamed_addr global i32, align 4
@.str.259 = private unnamed_addr constant [53 x i8] c"invalid application of %<sizeof%> to a function type\00", align 1
@.str.260 = private unnamed_addr constant [42 x i8] c"invalid application of %qs to a void type\00", align 1
@.str.261 = private unnamed_addr constant [51 x i8] c"invalid application of %qs to incomplete type %qT \00", align 1
@.str.262 = private unnamed_addr constant [37 x i8] c"%<__alignof%> applied to a bit-field\00", align 1
@.str.263 = private unnamed_addr constant [9 x i8] c"long int\00", align 1
@.str.264 = private unnamed_addr constant [13 x i8] c"unsigned int\00", align 1
@.str.265 = private unnamed_addr constant [18 x i8] c"long unsigned int\00", align 1
@.str.266 = private unnamed_addr constant [14 x i8] c"unsigned long\00", align 1
@.str.267 = private unnamed_addr constant [14 x i8] c"long long int\00", align 1
@.str.268 = private unnamed_addr constant [23 x i8] c"long long unsigned int\00", align 1
@.str.269 = private unnamed_addr constant [19 x i8] c"long long unsigned\00", align 1
@.str.270 = private unnamed_addr constant [10 x i8] c"short int\00", align 1
@.str.271 = private unnamed_addr constant [19 x i8] c"short unsigned int\00", align 1
@.str.272 = private unnamed_addr constant [15 x i8] c"unsigned short\00", align 1
@.str.273 = private unnamed_addr constant [12 x i8] c"signed char\00", align 1
@.str.274 = private unnamed_addr constant [14 x i8] c"unsigned char\00", align 1
@.str.275 = private unnamed_addr constant [11 x i8] c"__int128_t\00", align 1
@.str.276 = private unnamed_addr constant [12 x i8] c"__uint128_t\00", align 1
@flag_short_double = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3031
@.str.277 = private unnamed_addr constant [12 x i8] c"long double\00", align 1
@.str.278 = private unnamed_addr constant [13 x i8] c"short _Fract\00", align 1
@.str.279 = private unnamed_addr constant [12 x i8] c"long _Fract\00", align 1
@.str.280 = private unnamed_addr constant [17 x i8] c"long long _Fract\00", align 1
@.str.281 = private unnamed_addr constant [22 x i8] c"unsigned short _Fract\00", align 1
@.str.282 = private unnamed_addr constant [16 x i8] c"unsigned _Fract\00", align 1
@.str.283 = private unnamed_addr constant [21 x i8] c"unsigned long _Fract\00", align 1
@.str.284 = private unnamed_addr constant [26 x i8] c"unsigned long long _Fract\00", align 1
@.str.285 = private unnamed_addr constant [18 x i8] c"_Sat short _Fract\00", align 1
@.str.286 = private unnamed_addr constant [12 x i8] c"_Sat _Fract\00", align 1
@.str.287 = private unnamed_addr constant [17 x i8] c"_Sat long _Fract\00", align 1
@.str.288 = private unnamed_addr constant [22 x i8] c"_Sat long long _Fract\00", align 1
@.str.289 = private unnamed_addr constant [27 x i8] c"_Sat unsigned short _Fract\00", align 1
@.str.290 = private unnamed_addr constant [21 x i8] c"_Sat unsigned _Fract\00", align 1
@.str.291 = private unnamed_addr constant [26 x i8] c"_Sat unsigned long _Fract\00", align 1
@.str.292 = private unnamed_addr constant [31 x i8] c"_Sat unsigned long long _Fract\00", align 1
@.str.293 = private unnamed_addr constant [13 x i8] c"short _Accum\00", align 1
@.str.294 = private unnamed_addr constant [12 x i8] c"long _Accum\00", align 1
@.str.295 = private unnamed_addr constant [17 x i8] c"long long _Accum\00", align 1
@.str.296 = private unnamed_addr constant [22 x i8] c"unsigned short _Accum\00", align 1
@.str.297 = private unnamed_addr constant [16 x i8] c"unsigned _Accum\00", align 1
@.str.298 = private unnamed_addr constant [21 x i8] c"unsigned long _Accum\00", align 1
@.str.299 = private unnamed_addr constant [26 x i8] c"unsigned long long _Accum\00", align 1
@.str.300 = private unnamed_addr constant [18 x i8] c"_Sat short _Accum\00", align 1
@.str.301 = private unnamed_addr constant [12 x i8] c"_Sat _Accum\00", align 1
@.str.302 = private unnamed_addr constant [17 x i8] c"_Sat long _Accum\00", align 1
@.str.303 = private unnamed_addr constant [22 x i8] c"_Sat long long _Accum\00", align 1
@.str.304 = private unnamed_addr constant [27 x i8] c"_Sat unsigned short _Accum\00", align 1
@.str.305 = private unnamed_addr constant [21 x i8] c"_Sat unsigned _Accum\00", align 1
@.str.306 = private unnamed_addr constant [26 x i8] c"_Sat unsigned long _Accum\00", align 1
@.str.307 = private unnamed_addr constant [31 x i8] c"_Sat unsigned long long _Accum\00", align 1
@.str.308 = private unnamed_addr constant [12 x i8] c"complex int\00", align 1
@.str.309 = private unnamed_addr constant [14 x i8] c"complex float\00", align 1
@.str.310 = private unnamed_addr constant [15 x i8] c"complex double\00", align 1
@.str.311 = private unnamed_addr constant [20 x i8] c"complex long double\00", align 1
@flag_short_wchar = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3033
@.str.312 = private unnamed_addr constant [18 x i8] c"__builtin_va_list\00", align 1
@flag_preprocess_only = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3009
@.str.313 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@builtin_types = internal global [252 x %union.tree_node*] zeroinitializer, align 16, !dbg !3091
@.str.314 = private unnamed_addr constant [19 x i8] c"__compound_literal\00", align 1
@.str.315 = private unnamed_addr constant [7 x i8] c"%s.%lu\00", align 1
@compound_literal_number = internal global i32 0, align 4, !dbg !3096
@.str.316 = private unnamed_addr constant [11 x i8] c"__builtin_\00", align 1
@.str.317 = private unnamed_addr constant [37 x i8] c"cannot disable built-in function %qs\00", align 1
@disabled_builtins = internal unnamed_addr global %struct.disabled_builtin* null, align 8, !dbg !3111
@.str.318 = private unnamed_addr constant [42 x i8] c"pointers are not permitted as case values\00", align 1
@.str.319 = private unnamed_addr constant [56 x i8] c"range expressions in switch statements are non-standard\00", align 1
@.str.320 = private unnamed_addr constant [22 x i8] c"empty range specified\00", align 1
@.str.321 = private unnamed_addr constant [38 x i8] c"duplicate (or overlapping) case value\00", align 1
@.str.322 = private unnamed_addr constant [47 x i8] c"this is the first entry overlapping that value\00", align 1
@.str.323 = private unnamed_addr constant [21 x i8] c"duplicate case value\00", align 1
@.str.324 = private unnamed_addr constant [21 x i8] c"previously used here\00", align 1
@.str.325 = private unnamed_addr constant [38 x i8] c"multiple default labels in one switch\00", align 1
@.str.326 = private unnamed_addr constant [32 x i8] c"this is the first default label\00", align 1
@warn_switch = external dso_local local_unnamed_addr global i32, align 4
@warn_switch_enum = external dso_local local_unnamed_addr global i32, align 4
@warn_switch_default = external dso_local local_unnamed_addr global i32, align 4
@.str.327 = private unnamed_addr constant [28 x i8] c"switch missing default case\00", align 1
@.str.328 = private unnamed_addr constant [44 x i8] c"enumeration value %qE not handled in switch\00", align 1
@.str.329 = private unnamed_addr constant [46 x i8] c"taking the address of a label is non-standard\00", align 1
@.str.330 = private unnamed_addr constant [14 x i8] c"__SIZE_TYPE__\00", align 1
@.str.331 = private unnamed_addr constant [17 x i8] c"__PTRDIFF_TYPE__\00", align 1
@.str.332 = private unnamed_addr constant [15 x i8] c"__WCHAR_TYPE__\00", align 1
@.str.333 = private unnamed_addr constant [14 x i8] c"__WINT_TYPE__\00", align 1
@.str.334 = private unnamed_addr constant [16 x i8] c"__INTMAX_TYPE__\00", align 1
@.str.335 = private unnamed_addr constant [17 x i8] c"__UINTMAX_TYPE__\00", align 1
@.str.336 = private unnamed_addr constant [16 x i8] c"__CHAR16_TYPE__\00", align 1
@.str.337 = private unnamed_addr constant [16 x i8] c"__CHAR32_TYPE__\00", align 1
@.str.338 = private unnamed_addr constant [20 x i8] c"__SIG_ATOMIC_TYPE__\00", align 1
@.str.339 = private unnamed_addr constant [14 x i8] c"__INT8_TYPE__\00", align 1
@.str.340 = private unnamed_addr constant [15 x i8] c"__INT16_TYPE__\00", align 1
@.str.341 = private unnamed_addr constant [15 x i8] c"__INT32_TYPE__\00", align 1
@.str.342 = private unnamed_addr constant [15 x i8] c"__INT64_TYPE__\00", align 1
@.str.343 = private unnamed_addr constant [15 x i8] c"__UINT8_TYPE__\00", align 1
@.str.344 = private unnamed_addr constant [16 x i8] c"__UINT16_TYPE__\00", align 1
@.str.345 = private unnamed_addr constant [16 x i8] c"__UINT32_TYPE__\00", align 1
@.str.346 = private unnamed_addr constant [16 x i8] c"__UINT64_TYPE__\00", align 1
@.str.347 = private unnamed_addr constant [20 x i8] c"__INT_LEAST8_TYPE__\00", align 1
@.str.348 = private unnamed_addr constant [21 x i8] c"__INT_LEAST16_TYPE__\00", align 1
@.str.349 = private unnamed_addr constant [21 x i8] c"__INT_LEAST32_TYPE__\00", align 1
@.str.350 = private unnamed_addr constant [21 x i8] c"__INT_LEAST64_TYPE__\00", align 1
@.str.351 = private unnamed_addr constant [21 x i8] c"__UINT_LEAST8_TYPE__\00", align 1
@.str.352 = private unnamed_addr constant [22 x i8] c"__UINT_LEAST16_TYPE__\00", align 1
@.str.353 = private unnamed_addr constant [22 x i8] c"__UINT_LEAST32_TYPE__\00", align 1
@.str.354 = private unnamed_addr constant [22 x i8] c"__UINT_LEAST64_TYPE__\00", align 1
@.str.355 = private unnamed_addr constant [19 x i8] c"__INT_FAST8_TYPE__\00", align 1
@.str.356 = private unnamed_addr constant [20 x i8] c"__INT_FAST16_TYPE__\00", align 1
@.str.357 = private unnamed_addr constant [20 x i8] c"__INT_FAST32_TYPE__\00", align 1
@.str.358 = private unnamed_addr constant [20 x i8] c"__INT_FAST64_TYPE__\00", align 1
@.str.359 = private unnamed_addr constant [20 x i8] c"__UINT_FAST8_TYPE__\00", align 1
@.str.360 = private unnamed_addr constant [21 x i8] c"__UINT_FAST16_TYPE__\00", align 1
@.str.361 = private unnamed_addr constant [21 x i8] c"__UINT_FAST32_TYPE__\00", align 1
@.str.362 = private unnamed_addr constant [21 x i8] c"__UINT_FAST64_TYPE__\00", align 1
@.str.363 = private unnamed_addr constant [16 x i8] c"__INTPTR_TYPE__\00", align 1
@.str.364 = private unnamed_addr constant [17 x i8] c"__UINTPTR_TYPE__\00", align 1
@visibility_options = external dso_local local_unnamed_addr global %struct.visibility_flags, align 4
@default_visibility = external dso_local local_unnamed_addr global i32, align 4
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@optimize_args = internal global %struct.VEC_const_char_p_gc* null, align 8, !dbg !3098
@.str.365 = private unnamed_addr constant [6 x i8] c"-O%ld\00", align 1
@libiberty_optr = external dso_local local_unnamed_addr global i8*, align 8
@libiberty_len = external dso_local local_unnamed_addr global i64, align 8
@libiberty_nptr = external dso_local local_unnamed_addr global i8*, align 8
@.str.366 = private unnamed_addr constant [37 x i8] c"Bad option %s to optimize attribute.\00", align 1
@.str.367 = private unnamed_addr constant [34 x i8] c"Bad option %s to pragma attribute\00", align 1
@warn_nonnull = external dso_local local_unnamed_addr global i32, align 4
@warn_format = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3043
@warn_missing_format_attribute = external dso_local local_unnamed_addr global i32, align 4
@.str.368 = private unnamed_addr constant [52 x i8] c"non-floating-point argument in call to function %qE\00", align 1
@.str.369 = private unnamed_addr constant [53 x i8] c"non-floating-point arguments in call to function %qE\00", align 1
@.str.370 = private unnamed_addr constant [54 x i8] c"non-const integer argument %u in call to function %qE\00", align 1
@.str.371 = private unnamed_addr constant [17 x i8] c" at end of input\00", align 1
@.str.372 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.373 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.374 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@_sch_istable = external dso_local local_unnamed_addr constant [256 x i16], align 16
@.str.375 = private unnamed_addr constant [15 x i8] c" before %s'%c'\00", align 1
@.str.376 = private unnamed_addr constant [17 x i8] c" before %s'\5Cx%x'\00", align 1
@.str.377 = private unnamed_addr constant [24 x i8] c" before string constant\00", align 1
@.str.378 = private unnamed_addr constant [25 x i8] c" before numeric constant\00", align 1
@.str.379 = private unnamed_addr constant [12 x i8] c" before %qE\00", align 1
@.str.380 = private unnamed_addr constant [20 x i8] c" before %<#pragma%>\00", align 1
@.str.381 = private unnamed_addr constant [20 x i8] c" before end of line\00", align 1
@.str.382 = private unnamed_addr constant [18 x i8] c" before %qs token\00", align 1
@warn_system_headers = external dso_local local_unnamed_addr global i32, align 4
@flag_no_output = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !3013
@flag_pedantic_errors = external dso_local local_unnamed_addr global i32, align 4
@global_dc = external dso_local local_unnamed_addr global %struct.diagnostic_context*, align 8
@flag_signed_char = external dso_local local_unnamed_addr global i32, align 4
@.str.383 = private unnamed_addr constant [46 x i8] c"lvalue required as left operand of assignment\00", align 1
@.str.384 = private unnamed_addr constant [37 x i8] c"lvalue required as increment operand\00", align 1
@.str.385 = private unnamed_addr constant [37 x i8] c"lvalue required as decrement operand\00", align 1
@.str.386 = private unnamed_addr constant [39 x i8] c"lvalue required as unary %<&%> operand\00", align 1
@.str.387 = private unnamed_addr constant [33 x i8] c"lvalue required in asm statement\00", align 1
@.str.388 = private unnamed_addr constant [27 x i8] c"size of array is too large\00", align 1
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@.str.389 = private unnamed_addr constant [34 x i8] c"array subscript has type %<char%>\00", align 1
@.str.390 = private unnamed_addr constant [47 x i8] c"suggest parentheses around %<+%> inside %<<<%>\00", align 1
@.str.391 = private unnamed_addr constant [47 x i8] c"suggest parentheses around %<-%> inside %<<<%>\00", align 1
@.str.392 = private unnamed_addr constant [47 x i8] c"suggest parentheses around %<+%> inside %<>>%>\00", align 1
@.str.393 = private unnamed_addr constant [47 x i8] c"suggest parentheses around %<-%> inside %<>>%>\00", align 1
@.str.394 = private unnamed_addr constant [48 x i8] c"suggest parentheses around %<&&%> within %<||%>\00", align 1
@.str.395 = private unnamed_addr constant [58 x i8] c"suggest parentheses around arithmetic in operand of %<|%>\00", align 1
@.str.396 = private unnamed_addr constant [58 x i8] c"suggest parentheses around comparison in operand of %<|%>\00", align 1
@.str.397 = private unnamed_addr constant [88 x i8] c"suggest parentheses around operand of %<!%> or change %<|%> to %<||%> or %<!%> to %<~%>\00", align 1
@.str.398 = private unnamed_addr constant [58 x i8] c"suggest parentheses around arithmetic in operand of %<^%>\00", align 1
@.str.399 = private unnamed_addr constant [58 x i8] c"suggest parentheses around comparison in operand of %<^%>\00", align 1
@.str.400 = private unnamed_addr constant [53 x i8] c"suggest parentheses around %<+%> in operand of %<&%>\00", align 1
@.str.401 = private unnamed_addr constant [53 x i8] c"suggest parentheses around %<-%> in operand of %<&%>\00", align 1
@.str.402 = private unnamed_addr constant [58 x i8] c"suggest parentheses around comparison in operand of %<&%>\00", align 1
@.str.403 = private unnamed_addr constant [88 x i8] c"suggest parentheses around operand of %<!%> or change %<&%> to %<&&%> or %<!%> to %<~%>\00", align 1
@.str.404 = private unnamed_addr constant [59 x i8] c"suggest parentheses around comparison in operand of %<==%>\00", align 1
@.str.405 = private unnamed_addr constant [59 x i8] c"suggest parentheses around comparison in operand of %<!=%>\00", align 1
@.str.406 = private unnamed_addr constant [68 x i8] c"comparisons like %<X<=Y<=Z%> do not have their mathematical meaning\00", align 1
@.str.407 = private unnamed_addr constant [32 x i8] c"label %q+D defined but not used\00", align 1
@.str.408 = private unnamed_addr constant [36 x i8] c"label %q+D declared but not defined\00", align 1
@targetcm = dso_local local_unnamed_addr global %struct.gcc_targetcm { i8 (i64, i8*, i32)* @default_handle_c_option }, align 8, !dbg !2968
@.str.409 = private unnamed_addr constant [17 x i8] c"division by zero\00", align 1
@.str.410 = private unnamed_addr constant [37 x i8] c"comparison between types %qT and %qT\00", align 1
@.str.411 = private unnamed_addr constant [59 x i8] c"comparison between signed and unsigned integer expressions\00", align 1
@.str.412 = private unnamed_addr constant [38 x i8] c"promoted ~unsigned is always non-zero\00", align 1
@.str.413 = private unnamed_addr constant [47 x i8] c"comparison of promoted ~unsigned with constant\00", align 1
@.str.414 = private unnamed_addr constant [47 x i8] c"comparison of promoted ~unsigned with unsigned\00", align 1
@types_used_by_cur_var_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@tree_vector_cache = internal global %struct.VEC_tree_gc_vec_gc* null, align 8, !dbg !3107
@ridpointers = common dso_local global %union.tree_node** null, align 8, !dbg !3067
@built_in_attributes = internal global [107 x %union.tree_node*] zeroinitializer, align 16, !dbg !3086
@gt_ggc_r_gt_c_common_h = dso_local local_unnamed_addr constant [7 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast ([55 x %union.tree_node*]* @c_global_trees to i8*), i64 55, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node*** @ridpointers to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_ma_ridpointers, void (i8*)* @gt_pch_na_ridpointers }, %struct.ggc_root_tab { i8* bitcast (%struct.VEC_const_char_p_gc** @optimize_args to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_VEC_const_char_p_gc, void (i8*)* @gt_pch_nx_VEC_const_char_p_gc }, %struct.ggc_root_tab { i8* bitcast ([107 x %union.tree_node*]* @built_in_attributes to i8*), i64 107, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @type_hash_table to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P9tree_node4htab, void (i8*)* @gt_pch_n_P9tree_node4htab }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @registered_builtin_types to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2977
@gt_ggc_rd_gt_c_common_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.VEC_tree_gc_vec_gc** @tree_vector_cache to i8*), i64 1, i64 8, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2993
@pending_lang_change = external dso_local global i32, align 4
@gt_pch_rs_gt_c_common_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @pending_lang_change to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @compound_literal_number to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2996
@flag_no_line_commands = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !3011
@flag_dump_macros = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !3015
@flag_dump_includes = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !3017
@flag_pch_preprocess = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !3019
@pch_file = common dso_local local_unnamed_addr global i8* null, align 8, !dbg !3021
@flag_iso = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3023
@flag_undef = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3025
@flag_no_builtin = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3027
@flag_no_nonansi_builtin = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3029
@flag_ms_extensions = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3037
@flag_no_asm = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3039
@warn_unknown_pragmas = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3041
@warn_strict_null_sentinel = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3045
@flag_cond_mismatch = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3047
@flag_isoc94 = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3049
@flag_gen_declaration = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3053
@print_struct_values = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3055
@constant_string_class_name = common dso_local local_unnamed_addr global i8* null, align 8, !dbg !3057
@flag_no_gnu_keywords = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3059
@flag_use_repository = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3061
@flag_conserve_space = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3063
@flag_check_new = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3065
@warn_conversion = external dso_local local_unnamed_addr global i32, align 4
@warn_sign_conversion = external dso_local local_unnamed_addr global i32, align 4
@.str.415 = private unnamed_addr constant [42 x i8] c"conversion to %qT from boolean expression\00", align 1
@.str.416 = private unnamed_addr constant [55 x i8] c"negative integer implicitly converted to unsigned type\00", align 1
@.str.417 = private unnamed_addr constant [58 x i8] c"conversion of unsigned constant value to negative integer\00", align 1
@.str.418 = private unnamed_addr constant [44 x i8] c"conversion to %qT alters %qT constant value\00", align 1
@.str.419 = private unnamed_addr constant [61 x i8] c"conversion to %qT from %qT may change the sign of the result\00", align 1
@.str.420 = private unnamed_addr constant [47 x i8] c"conversion to %qT from %qT may alter its value\00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.421 = private unnamed_addr constant [34 x i8] c"operation on %qE may be undefined\00", align 1
@word_mode = external dso_local local_unnamed_addr global i32, align 4
@ptr_mode = external dso_local local_unnamed_addr global i32, align 4
@.str.422 = private unnamed_addr constant [15 x i8] c"__builtin_acos\00", align 1
@flag_errno_math = external dso_local local_unnamed_addr global i32, align 4
@flag_rounding_math = external dso_local local_unnamed_addr global i32, align 4
@.str.423 = private unnamed_addr constant [16 x i8] c"__builtin_acosf\00", align 1
@linux_uclibc = external dso_local local_unnamed_addr global i32, align 4
@.str.424 = private unnamed_addr constant [16 x i8] c"__builtin_acosh\00", align 1
@.str.425 = private unnamed_addr constant [17 x i8] c"__builtin_acoshf\00", align 1
@.str.426 = private unnamed_addr constant [17 x i8] c"__builtin_acoshl\00", align 1
@.str.427 = private unnamed_addr constant [16 x i8] c"__builtin_acosl\00", align 1
@.str.428 = private unnamed_addr constant [15 x i8] c"__builtin_asin\00", align 1
@.str.429 = private unnamed_addr constant [16 x i8] c"__builtin_asinf\00", align 1
@.str.430 = private unnamed_addr constant [16 x i8] c"__builtin_asinh\00", align 1
@.str.431 = private unnamed_addr constant [17 x i8] c"__builtin_asinhf\00", align 1
@.str.432 = private unnamed_addr constant [17 x i8] c"__builtin_asinhl\00", align 1
@.str.433 = private unnamed_addr constant [16 x i8] c"__builtin_asinl\00", align 1
@.str.434 = private unnamed_addr constant [15 x i8] c"__builtin_atan\00", align 1
@.str.435 = private unnamed_addr constant [16 x i8] c"__builtin_atan2\00", align 1
@.str.436 = private unnamed_addr constant [17 x i8] c"__builtin_atan2f\00", align 1
@.str.437 = private unnamed_addr constant [17 x i8] c"__builtin_atan2l\00", align 1
@.str.438 = private unnamed_addr constant [16 x i8] c"__builtin_atanf\00", align 1
@.str.439 = private unnamed_addr constant [16 x i8] c"__builtin_atanh\00", align 1
@.str.440 = private unnamed_addr constant [17 x i8] c"__builtin_atanhf\00", align 1
@.str.441 = private unnamed_addr constant [17 x i8] c"__builtin_atanhl\00", align 1
@.str.442 = private unnamed_addr constant [16 x i8] c"__builtin_atanl\00", align 1
@.str.443 = private unnamed_addr constant [15 x i8] c"__builtin_cbrt\00", align 1
@.str.444 = private unnamed_addr constant [16 x i8] c"__builtin_cbrtf\00", align 1
@.str.445 = private unnamed_addr constant [16 x i8] c"__builtin_cbrtl\00", align 1
@.str.446 = private unnamed_addr constant [15 x i8] c"__builtin_ceil\00", align 1
@.str.447 = private unnamed_addr constant [16 x i8] c"__builtin_ceilf\00", align 1
@.str.448 = private unnamed_addr constant [16 x i8] c"__builtin_ceill\00", align 1
@.str.449 = private unnamed_addr constant [19 x i8] c"__builtin_copysign\00", align 1
@.str.450 = private unnamed_addr constant [20 x i8] c"__builtin_copysignf\00", align 1
@.str.451 = private unnamed_addr constant [20 x i8] c"__builtin_copysignl\00", align 1
@.str.452 = private unnamed_addr constant [14 x i8] c"__builtin_cos\00", align 1
@.str.453 = private unnamed_addr constant [15 x i8] c"__builtin_cosf\00", align 1
@.str.454 = private unnamed_addr constant [15 x i8] c"__builtin_cosh\00", align 1
@.str.455 = private unnamed_addr constant [16 x i8] c"__builtin_coshf\00", align 1
@.str.456 = private unnamed_addr constant [16 x i8] c"__builtin_coshl\00", align 1
@.str.457 = private unnamed_addr constant [15 x i8] c"__builtin_cosl\00", align 1
@.str.458 = private unnamed_addr constant [15 x i8] c"__builtin_drem\00", align 1
@.str.459 = private unnamed_addr constant [16 x i8] c"__builtin_dremf\00", align 1
@.str.460 = private unnamed_addr constant [16 x i8] c"__builtin_dreml\00", align 1
@.str.461 = private unnamed_addr constant [14 x i8] c"__builtin_erf\00", align 1
@.str.462 = private unnamed_addr constant [15 x i8] c"__builtin_erfc\00", align 1
@.str.463 = private unnamed_addr constant [16 x i8] c"__builtin_erfcf\00", align 1
@.str.464 = private unnamed_addr constant [16 x i8] c"__builtin_erfcl\00", align 1
@.str.465 = private unnamed_addr constant [15 x i8] c"__builtin_erff\00", align 1
@.str.466 = private unnamed_addr constant [15 x i8] c"__builtin_erfl\00", align 1
@.str.467 = private unnamed_addr constant [14 x i8] c"__builtin_exp\00", align 1
@.str.468 = private unnamed_addr constant [16 x i8] c"__builtin_exp10\00", align 1
@.str.469 = private unnamed_addr constant [17 x i8] c"__builtin_exp10f\00", align 1
@.str.470 = private unnamed_addr constant [17 x i8] c"__builtin_exp10l\00", align 1
@.str.471 = private unnamed_addr constant [15 x i8] c"__builtin_exp2\00", align 1
@.str.472 = private unnamed_addr constant [16 x i8] c"__builtin_exp2f\00", align 1
@.str.473 = private unnamed_addr constant [16 x i8] c"__builtin_exp2l\00", align 1
@.str.474 = private unnamed_addr constant [15 x i8] c"__builtin_expf\00", align 1
@.str.475 = private unnamed_addr constant [15 x i8] c"__builtin_expl\00", align 1
@.str.476 = private unnamed_addr constant [16 x i8] c"__builtin_expm1\00", align 1
@.str.477 = private unnamed_addr constant [17 x i8] c"__builtin_expm1f\00", align 1
@.str.478 = private unnamed_addr constant [17 x i8] c"__builtin_expm1l\00", align 1
@.str.479 = private unnamed_addr constant [15 x i8] c"__builtin_fabs\00", align 1
@.str.480 = private unnamed_addr constant [16 x i8] c"__builtin_fabsf\00", align 1
@.str.481 = private unnamed_addr constant [16 x i8] c"__builtin_fabsl\00", align 1
@.str.482 = private unnamed_addr constant [15 x i8] c"__builtin_fdim\00", align 1
@.str.483 = private unnamed_addr constant [16 x i8] c"__builtin_fdimf\00", align 1
@.str.484 = private unnamed_addr constant [16 x i8] c"__builtin_fdiml\00", align 1
@.str.485 = private unnamed_addr constant [16 x i8] c"__builtin_floor\00", align 1
@.str.486 = private unnamed_addr constant [17 x i8] c"__builtin_floorf\00", align 1
@.str.487 = private unnamed_addr constant [17 x i8] c"__builtin_floorl\00", align 1
@.str.488 = private unnamed_addr constant [14 x i8] c"__builtin_fma\00", align 1
@.str.489 = private unnamed_addr constant [15 x i8] c"__builtin_fmaf\00", align 1
@.str.490 = private unnamed_addr constant [15 x i8] c"__builtin_fmal\00", align 1
@.str.491 = private unnamed_addr constant [15 x i8] c"__builtin_fmax\00", align 1
@.str.492 = private unnamed_addr constant [16 x i8] c"__builtin_fmaxf\00", align 1
@.str.493 = private unnamed_addr constant [16 x i8] c"__builtin_fmaxl\00", align 1
@.str.494 = private unnamed_addr constant [15 x i8] c"__builtin_fmin\00", align 1
@.str.495 = private unnamed_addr constant [16 x i8] c"__builtin_fminf\00", align 1
@.str.496 = private unnamed_addr constant [16 x i8] c"__builtin_fminl\00", align 1
@.str.497 = private unnamed_addr constant [15 x i8] c"__builtin_fmod\00", align 1
@.str.498 = private unnamed_addr constant [16 x i8] c"__builtin_fmodf\00", align 1
@.str.499 = private unnamed_addr constant [16 x i8] c"__builtin_fmodl\00", align 1
@.str.500 = private unnamed_addr constant [16 x i8] c"__builtin_frexp\00", align 1
@.str.501 = private unnamed_addr constant [17 x i8] c"__builtin_frexpf\00", align 1
@.str.502 = private unnamed_addr constant [17 x i8] c"__builtin_frexpl\00", align 1
@.str.503 = private unnamed_addr constant [16 x i8] c"__builtin_gamma\00", align 1
@.str.504 = private unnamed_addr constant [17 x i8] c"__builtin_gammaf\00", align 1
@.str.505 = private unnamed_addr constant [17 x i8] c"__builtin_gammal\00", align 1
@.str.506 = private unnamed_addr constant [18 x i8] c"__builtin_gamma_r\00", align 1
@.str.507 = private unnamed_addr constant [19 x i8] c"__builtin_gammaf_r\00", align 1
@.str.508 = private unnamed_addr constant [19 x i8] c"__builtin_gammal_r\00", align 1
@.str.509 = private unnamed_addr constant [19 x i8] c"__builtin_huge_val\00", align 1
@.str.510 = private unnamed_addr constant [20 x i8] c"__builtin_huge_valf\00", align 1
@.str.511 = private unnamed_addr constant [20 x i8] c"__builtin_huge_vall\00", align 1
@.str.512 = private unnamed_addr constant [16 x i8] c"__builtin_hypot\00", align 1
@.str.513 = private unnamed_addr constant [17 x i8] c"__builtin_hypotf\00", align 1
@.str.514 = private unnamed_addr constant [17 x i8] c"__builtin_hypotl\00", align 1
@.str.515 = private unnamed_addr constant [16 x i8] c"__builtin_ilogb\00", align 1
@.str.516 = private unnamed_addr constant [17 x i8] c"__builtin_ilogbf\00", align 1
@.str.517 = private unnamed_addr constant [17 x i8] c"__builtin_ilogbl\00", align 1
@.str.518 = private unnamed_addr constant [14 x i8] c"__builtin_inf\00", align 1
@.str.519 = private unnamed_addr constant [15 x i8] c"__builtin_inff\00", align 1
@.str.520 = private unnamed_addr constant [15 x i8] c"__builtin_infl\00", align 1
@.str.521 = private unnamed_addr constant [17 x i8] c"__builtin_infd32\00", align 1
@.str.522 = private unnamed_addr constant [17 x i8] c"__builtin_infd64\00", align 1
@.str.523 = private unnamed_addr constant [18 x i8] c"__builtin_infd128\00", align 1
@.str.524 = private unnamed_addr constant [13 x i8] c"__builtin_j0\00", align 1
@.str.525 = private unnamed_addr constant [14 x i8] c"__builtin_j0f\00", align 1
@.str.526 = private unnamed_addr constant [14 x i8] c"__builtin_j0l\00", align 1
@.str.527 = private unnamed_addr constant [13 x i8] c"__builtin_j1\00", align 1
@.str.528 = private unnamed_addr constant [14 x i8] c"__builtin_j1f\00", align 1
@.str.529 = private unnamed_addr constant [14 x i8] c"__builtin_j1l\00", align 1
@.str.530 = private unnamed_addr constant [13 x i8] c"__builtin_jn\00", align 1
@.str.531 = private unnamed_addr constant [14 x i8] c"__builtin_jnf\00", align 1
@.str.532 = private unnamed_addr constant [14 x i8] c"__builtin_jnl\00", align 1
@.str.533 = private unnamed_addr constant [16 x i8] c"__builtin_lceil\00", align 1
@.str.534 = private unnamed_addr constant [17 x i8] c"__builtin_lceilf\00", align 1
@.str.535 = private unnamed_addr constant [17 x i8] c"__builtin_lceill\00", align 1
@.str.536 = private unnamed_addr constant [16 x i8] c"__builtin_ldexp\00", align 1
@.str.537 = private unnamed_addr constant [17 x i8] c"__builtin_ldexpf\00", align 1
@.str.538 = private unnamed_addr constant [17 x i8] c"__builtin_ldexpl\00", align 1
@.str.539 = private unnamed_addr constant [17 x i8] c"__builtin_lfloor\00", align 1
@.str.540 = private unnamed_addr constant [18 x i8] c"__builtin_lfloorf\00", align 1
@.str.541 = private unnamed_addr constant [18 x i8] c"__builtin_lfloorl\00", align 1
@.str.542 = private unnamed_addr constant [17 x i8] c"__builtin_lgamma\00", align 1
@.str.543 = private unnamed_addr constant [18 x i8] c"__builtin_lgammaf\00", align 1
@.str.544 = private unnamed_addr constant [18 x i8] c"__builtin_lgammal\00", align 1
@.str.545 = private unnamed_addr constant [19 x i8] c"__builtin_lgamma_r\00", align 1
@.str.546 = private unnamed_addr constant [20 x i8] c"__builtin_lgammaf_r\00", align 1
@.str.547 = private unnamed_addr constant [20 x i8] c"__builtin_lgammal_r\00", align 1
@.str.548 = private unnamed_addr constant [17 x i8] c"__builtin_llceil\00", align 1
@.str.549 = private unnamed_addr constant [18 x i8] c"__builtin_llceilf\00", align 1
@.str.550 = private unnamed_addr constant [18 x i8] c"__builtin_llceill\00", align 1
@.str.551 = private unnamed_addr constant [18 x i8] c"__builtin_llfloor\00", align 1
@.str.552 = private unnamed_addr constant [19 x i8] c"__builtin_llfloorf\00", align 1
@.str.553 = private unnamed_addr constant [19 x i8] c"__builtin_llfloorl\00", align 1
@.str.554 = private unnamed_addr constant [17 x i8] c"__builtin_llrint\00", align 1
@.str.555 = private unnamed_addr constant [18 x i8] c"__builtin_llrintf\00", align 1
@.str.556 = private unnamed_addr constant [18 x i8] c"__builtin_llrintl\00", align 1
@.str.557 = private unnamed_addr constant [18 x i8] c"__builtin_llround\00", align 1
@.str.558 = private unnamed_addr constant [19 x i8] c"__builtin_llroundf\00", align 1
@.str.559 = private unnamed_addr constant [19 x i8] c"__builtin_llroundl\00", align 1
@.str.560 = private unnamed_addr constant [14 x i8] c"__builtin_log\00", align 1
@.str.561 = private unnamed_addr constant [16 x i8] c"__builtin_log10\00", align 1
@.str.562 = private unnamed_addr constant [17 x i8] c"__builtin_log10f\00", align 1
@.str.563 = private unnamed_addr constant [17 x i8] c"__builtin_log10l\00", align 1
@.str.564 = private unnamed_addr constant [16 x i8] c"__builtin_log1p\00", align 1
@.str.565 = private unnamed_addr constant [17 x i8] c"__builtin_log1pf\00", align 1
@.str.566 = private unnamed_addr constant [17 x i8] c"__builtin_log1pl\00", align 1
@.str.567 = private unnamed_addr constant [15 x i8] c"__builtin_log2\00", align 1
@.str.568 = private unnamed_addr constant [16 x i8] c"__builtin_log2f\00", align 1
@.str.569 = private unnamed_addr constant [16 x i8] c"__builtin_log2l\00", align 1
@.str.570 = private unnamed_addr constant [15 x i8] c"__builtin_logb\00", align 1
@.str.571 = private unnamed_addr constant [16 x i8] c"__builtin_logbf\00", align 1
@.str.572 = private unnamed_addr constant [16 x i8] c"__builtin_logbl\00", align 1
@.str.573 = private unnamed_addr constant [15 x i8] c"__builtin_logf\00", align 1
@.str.574 = private unnamed_addr constant [15 x i8] c"__builtin_logl\00", align 1
@.str.575 = private unnamed_addr constant [16 x i8] c"__builtin_lrint\00", align 1
@.str.576 = private unnamed_addr constant [17 x i8] c"__builtin_lrintf\00", align 1
@.str.577 = private unnamed_addr constant [17 x i8] c"__builtin_lrintl\00", align 1
@.str.578 = private unnamed_addr constant [17 x i8] c"__builtin_lround\00", align 1
@.str.579 = private unnamed_addr constant [18 x i8] c"__builtin_lroundf\00", align 1
@.str.580 = private unnamed_addr constant [18 x i8] c"__builtin_lroundl\00", align 1
@.str.581 = private unnamed_addr constant [15 x i8] c"__builtin_modf\00", align 1
@.str.582 = private unnamed_addr constant [16 x i8] c"__builtin_modff\00", align 1
@.str.583 = private unnamed_addr constant [16 x i8] c"__builtin_modfl\00", align 1
@.str.584 = private unnamed_addr constant [14 x i8] c"__builtin_nan\00", align 1
@.str.585 = private unnamed_addr constant [15 x i8] c"__builtin_nanf\00", align 1
@.str.586 = private unnamed_addr constant [15 x i8] c"__builtin_nanl\00", align 1
@.str.587 = private unnamed_addr constant [17 x i8] c"__builtin_nand32\00", align 1
@.str.588 = private unnamed_addr constant [17 x i8] c"__builtin_nand64\00", align 1
@.str.589 = private unnamed_addr constant [18 x i8] c"__builtin_nand128\00", align 1
@.str.590 = private unnamed_addr constant [15 x i8] c"__builtin_nans\00", align 1
@.str.591 = private unnamed_addr constant [16 x i8] c"__builtin_nansf\00", align 1
@.str.592 = private unnamed_addr constant [16 x i8] c"__builtin_nansl\00", align 1
@.str.593 = private unnamed_addr constant [20 x i8] c"__builtin_nearbyint\00", align 1
@.str.594 = private unnamed_addr constant [21 x i8] c"__builtin_nearbyintf\00", align 1
@.str.595 = private unnamed_addr constant [21 x i8] c"__builtin_nearbyintl\00", align 1
@.str.596 = private unnamed_addr constant [20 x i8] c"__builtin_nextafter\00", align 1
@.str.597 = private unnamed_addr constant [21 x i8] c"__builtin_nextafterf\00", align 1
@.str.598 = private unnamed_addr constant [21 x i8] c"__builtin_nextafterl\00", align 1
@.str.599 = private unnamed_addr constant [21 x i8] c"__builtin_nexttoward\00", align 1
@.str.600 = private unnamed_addr constant [22 x i8] c"__builtin_nexttowardf\00", align 1
@.str.601 = private unnamed_addr constant [22 x i8] c"__builtin_nexttowardl\00", align 1
@.str.602 = private unnamed_addr constant [14 x i8] c"__builtin_pow\00", align 1
@.str.603 = private unnamed_addr constant [16 x i8] c"__builtin_pow10\00", align 1
@.str.604 = private unnamed_addr constant [17 x i8] c"__builtin_pow10f\00", align 1
@.str.605 = private unnamed_addr constant [17 x i8] c"__builtin_pow10l\00", align 1
@.str.606 = private unnamed_addr constant [15 x i8] c"__builtin_powf\00", align 1
@.str.607 = private unnamed_addr constant [15 x i8] c"__builtin_powi\00", align 1
@.str.608 = private unnamed_addr constant [16 x i8] c"__builtin_powif\00", align 1
@.str.609 = private unnamed_addr constant [16 x i8] c"__builtin_powil\00", align 1
@.str.610 = private unnamed_addr constant [15 x i8] c"__builtin_powl\00", align 1
@.str.611 = private unnamed_addr constant [20 x i8] c"__builtin_remainder\00", align 1
@.str.612 = private unnamed_addr constant [21 x i8] c"__builtin_remainderf\00", align 1
@.str.613 = private unnamed_addr constant [21 x i8] c"__builtin_remainderl\00", align 1
@.str.614 = private unnamed_addr constant [17 x i8] c"__builtin_remquo\00", align 1
@.str.615 = private unnamed_addr constant [18 x i8] c"__builtin_remquof\00", align 1
@.str.616 = private unnamed_addr constant [18 x i8] c"__builtin_remquol\00", align 1
@.str.617 = private unnamed_addr constant [15 x i8] c"__builtin_rint\00", align 1
@.str.618 = private unnamed_addr constant [16 x i8] c"__builtin_rintf\00", align 1
@.str.619 = private unnamed_addr constant [16 x i8] c"__builtin_rintl\00", align 1
@.str.620 = private unnamed_addr constant [16 x i8] c"__builtin_round\00", align 1
@.str.621 = private unnamed_addr constant [17 x i8] c"__builtin_roundf\00", align 1
@.str.622 = private unnamed_addr constant [17 x i8] c"__builtin_roundl\00", align 1
@.str.623 = private unnamed_addr constant [16 x i8] c"__builtin_scalb\00", align 1
@.str.624 = private unnamed_addr constant [17 x i8] c"__builtin_scalbf\00", align 1
@.str.625 = private unnamed_addr constant [17 x i8] c"__builtin_scalbl\00", align 1
@.str.626 = private unnamed_addr constant [18 x i8] c"__builtin_scalbln\00", align 1
@.str.627 = private unnamed_addr constant [19 x i8] c"__builtin_scalblnf\00", align 1
@.str.628 = private unnamed_addr constant [19 x i8] c"__builtin_scalblnl\00", align 1
@.str.629 = private unnamed_addr constant [17 x i8] c"__builtin_scalbn\00", align 1
@.str.630 = private unnamed_addr constant [18 x i8] c"__builtin_scalbnf\00", align 1
@.str.631 = private unnamed_addr constant [18 x i8] c"__builtin_scalbnl\00", align 1
@.str.632 = private unnamed_addr constant [18 x i8] c"__builtin_signbit\00", align 1
@.str.633 = private unnamed_addr constant [19 x i8] c"__builtin_signbitf\00", align 1
@.str.634 = private unnamed_addr constant [19 x i8] c"__builtin_signbitl\00", align 1
@.str.635 = private unnamed_addr constant [21 x i8] c"__builtin_signbitd32\00", align 1
@.str.636 = private unnamed_addr constant [21 x i8] c"__builtin_signbitd64\00", align 1
@.str.637 = private unnamed_addr constant [22 x i8] c"__builtin_signbitd128\00", align 1
@.str.638 = private unnamed_addr constant [22 x i8] c"__builtin_significand\00", align 1
@.str.639 = private unnamed_addr constant [23 x i8] c"__builtin_significandf\00", align 1
@.str.640 = private unnamed_addr constant [23 x i8] c"__builtin_significandl\00", align 1
@.str.641 = private unnamed_addr constant [14 x i8] c"__builtin_sin\00", align 1
@.str.642 = private unnamed_addr constant [17 x i8] c"__builtin_sincos\00", align 1
@.str.643 = private unnamed_addr constant [18 x i8] c"__builtin_sincosf\00", align 1
@.str.644 = private unnamed_addr constant [18 x i8] c"__builtin_sincosl\00", align 1
@.str.645 = private unnamed_addr constant [15 x i8] c"__builtin_sinf\00", align 1
@.str.646 = private unnamed_addr constant [15 x i8] c"__builtin_sinh\00", align 1
@.str.647 = private unnamed_addr constant [16 x i8] c"__builtin_sinhf\00", align 1
@.str.648 = private unnamed_addr constant [16 x i8] c"__builtin_sinhl\00", align 1
@.str.649 = private unnamed_addr constant [15 x i8] c"__builtin_sinl\00", align 1
@.str.650 = private unnamed_addr constant [15 x i8] c"__builtin_sqrt\00", align 1
@.str.651 = private unnamed_addr constant [16 x i8] c"__builtin_sqrtf\00", align 1
@.str.652 = private unnamed_addr constant [16 x i8] c"__builtin_sqrtl\00", align 1
@.str.653 = private unnamed_addr constant [14 x i8] c"__builtin_tan\00", align 1
@.str.654 = private unnamed_addr constant [15 x i8] c"__builtin_tanf\00", align 1
@.str.655 = private unnamed_addr constant [15 x i8] c"__builtin_tanh\00", align 1
@.str.656 = private unnamed_addr constant [16 x i8] c"__builtin_tanhf\00", align 1
@.str.657 = private unnamed_addr constant [16 x i8] c"__builtin_tanhl\00", align 1
@.str.658 = private unnamed_addr constant [15 x i8] c"__builtin_tanl\00", align 1
@.str.659 = private unnamed_addr constant [17 x i8] c"__builtin_tgamma\00", align 1
@.str.660 = private unnamed_addr constant [18 x i8] c"__builtin_tgammaf\00", align 1
@.str.661 = private unnamed_addr constant [18 x i8] c"__builtin_tgammal\00", align 1
@.str.662 = private unnamed_addr constant [16 x i8] c"__builtin_trunc\00", align 1
@.str.663 = private unnamed_addr constant [17 x i8] c"__builtin_truncf\00", align 1
@.str.664 = private unnamed_addr constant [17 x i8] c"__builtin_truncl\00", align 1
@.str.665 = private unnamed_addr constant [13 x i8] c"__builtin_y0\00", align 1
@.str.666 = private unnamed_addr constant [14 x i8] c"__builtin_y0f\00", align 1
@.str.667 = private unnamed_addr constant [14 x i8] c"__builtin_y0l\00", align 1
@.str.668 = private unnamed_addr constant [13 x i8] c"__builtin_y1\00", align 1
@.str.669 = private unnamed_addr constant [14 x i8] c"__builtin_y1f\00", align 1
@.str.670 = private unnamed_addr constant [14 x i8] c"__builtin_y1l\00", align 1
@.str.671 = private unnamed_addr constant [13 x i8] c"__builtin_yn\00", align 1
@.str.672 = private unnamed_addr constant [14 x i8] c"__builtin_ynf\00", align 1
@.str.673 = private unnamed_addr constant [14 x i8] c"__builtin_ynl\00", align 1
@.str.674 = private unnamed_addr constant [15 x i8] c"__builtin_cabs\00", align 1
@.str.675 = private unnamed_addr constant [16 x i8] c"__builtin_cabsf\00", align 1
@.str.676 = private unnamed_addr constant [16 x i8] c"__builtin_cabsl\00", align 1
@.str.677 = private unnamed_addr constant [16 x i8] c"__builtin_cacos\00", align 1
@.str.678 = private unnamed_addr constant [17 x i8] c"__builtin_cacosf\00", align 1
@.str.679 = private unnamed_addr constant [17 x i8] c"__builtin_cacosh\00", align 1
@.str.680 = private unnamed_addr constant [18 x i8] c"__builtin_cacoshf\00", align 1
@.str.681 = private unnamed_addr constant [18 x i8] c"__builtin_cacoshl\00", align 1
@.str.682 = private unnamed_addr constant [17 x i8] c"__builtin_cacosl\00", align 1
@.str.683 = private unnamed_addr constant [15 x i8] c"__builtin_carg\00", align 1
@.str.684 = private unnamed_addr constant [16 x i8] c"__builtin_cargf\00", align 1
@.str.685 = private unnamed_addr constant [16 x i8] c"__builtin_cargl\00", align 1
@.str.686 = private unnamed_addr constant [16 x i8] c"__builtin_casin\00", align 1
@.str.687 = private unnamed_addr constant [17 x i8] c"__builtin_casinf\00", align 1
@.str.688 = private unnamed_addr constant [17 x i8] c"__builtin_casinh\00", align 1
@.str.689 = private unnamed_addr constant [18 x i8] c"__builtin_casinhf\00", align 1
@.str.690 = private unnamed_addr constant [18 x i8] c"__builtin_casinhl\00", align 1
@.str.691 = private unnamed_addr constant [17 x i8] c"__builtin_casinl\00", align 1
@.str.692 = private unnamed_addr constant [16 x i8] c"__builtin_catan\00", align 1
@.str.693 = private unnamed_addr constant [17 x i8] c"__builtin_catanf\00", align 1
@.str.694 = private unnamed_addr constant [17 x i8] c"__builtin_catanh\00", align 1
@.str.695 = private unnamed_addr constant [18 x i8] c"__builtin_catanhf\00", align 1
@.str.696 = private unnamed_addr constant [18 x i8] c"__builtin_catanhl\00", align 1
@.str.697 = private unnamed_addr constant [17 x i8] c"__builtin_catanl\00", align 1
@.str.698 = private unnamed_addr constant [15 x i8] c"__builtin_ccos\00", align 1
@.str.699 = private unnamed_addr constant [16 x i8] c"__builtin_ccosf\00", align 1
@.str.700 = private unnamed_addr constant [16 x i8] c"__builtin_ccosh\00", align 1
@.str.701 = private unnamed_addr constant [17 x i8] c"__builtin_ccoshf\00", align 1
@.str.702 = private unnamed_addr constant [17 x i8] c"__builtin_ccoshl\00", align 1
@.str.703 = private unnamed_addr constant [16 x i8] c"__builtin_ccosl\00", align 1
@.str.704 = private unnamed_addr constant [15 x i8] c"__builtin_cexp\00", align 1
@.str.705 = private unnamed_addr constant [16 x i8] c"__builtin_cexpf\00", align 1
@.str.706 = private unnamed_addr constant [16 x i8] c"__builtin_cexpl\00", align 1
@.str.707 = private unnamed_addr constant [16 x i8] c"__builtin_cexpi\00", align 1
@.str.708 = private unnamed_addr constant [17 x i8] c"__builtin_cexpif\00", align 1
@.str.709 = private unnamed_addr constant [17 x i8] c"__builtin_cexpil\00", align 1
@.str.710 = private unnamed_addr constant [16 x i8] c"__builtin_cimag\00", align 1
@.str.711 = private unnamed_addr constant [17 x i8] c"__builtin_cimagf\00", align 1
@.str.712 = private unnamed_addr constant [17 x i8] c"__builtin_cimagl\00", align 1
@.str.713 = private unnamed_addr constant [15 x i8] c"__builtin_clog\00", align 1
@.str.714 = private unnamed_addr constant [16 x i8] c"__builtin_clogf\00", align 1
@.str.715 = private unnamed_addr constant [16 x i8] c"__builtin_clogl\00", align 1
@.str.716 = private unnamed_addr constant [17 x i8] c"__builtin_clog10\00", align 1
@.str.717 = private unnamed_addr constant [18 x i8] c"__builtin_clog10f\00", align 1
@.str.718 = private unnamed_addr constant [18 x i8] c"__builtin_clog10l\00", align 1
@.str.719 = private unnamed_addr constant [15 x i8] c"__builtin_conj\00", align 1
@.str.720 = private unnamed_addr constant [16 x i8] c"__builtin_conjf\00", align 1
@.str.721 = private unnamed_addr constant [16 x i8] c"__builtin_conjl\00", align 1
@.str.722 = private unnamed_addr constant [15 x i8] c"__builtin_cpow\00", align 1
@.str.723 = private unnamed_addr constant [16 x i8] c"__builtin_cpowf\00", align 1
@.str.724 = private unnamed_addr constant [16 x i8] c"__builtin_cpowl\00", align 1
@.str.725 = private unnamed_addr constant [16 x i8] c"__builtin_cproj\00", align 1
@.str.726 = private unnamed_addr constant [17 x i8] c"__builtin_cprojf\00", align 1
@.str.727 = private unnamed_addr constant [17 x i8] c"__builtin_cprojl\00", align 1
@.str.728 = private unnamed_addr constant [16 x i8] c"__builtin_creal\00", align 1
@.str.729 = private unnamed_addr constant [17 x i8] c"__builtin_crealf\00", align 1
@.str.730 = private unnamed_addr constant [17 x i8] c"__builtin_creall\00", align 1
@.str.731 = private unnamed_addr constant [15 x i8] c"__builtin_csin\00", align 1
@.str.732 = private unnamed_addr constant [16 x i8] c"__builtin_csinf\00", align 1
@.str.733 = private unnamed_addr constant [16 x i8] c"__builtin_csinh\00", align 1
@.str.734 = private unnamed_addr constant [17 x i8] c"__builtin_csinhf\00", align 1
@.str.735 = private unnamed_addr constant [17 x i8] c"__builtin_csinhl\00", align 1
@.str.736 = private unnamed_addr constant [16 x i8] c"__builtin_csinl\00", align 1
@.str.737 = private unnamed_addr constant [16 x i8] c"__builtin_csqrt\00", align 1
@.str.738 = private unnamed_addr constant [17 x i8] c"__builtin_csqrtf\00", align 1
@.str.739 = private unnamed_addr constant [17 x i8] c"__builtin_csqrtl\00", align 1
@.str.740 = private unnamed_addr constant [15 x i8] c"__builtin_ctan\00", align 1
@.str.741 = private unnamed_addr constant [16 x i8] c"__builtin_ctanf\00", align 1
@.str.742 = private unnamed_addr constant [16 x i8] c"__builtin_ctanh\00", align 1
@.str.743 = private unnamed_addr constant [17 x i8] c"__builtin_ctanhf\00", align 1
@.str.744 = private unnamed_addr constant [17 x i8] c"__builtin_ctanhl\00", align 1
@.str.745 = private unnamed_addr constant [16 x i8] c"__builtin_ctanl\00", align 1
@.str.746 = private unnamed_addr constant [15 x i8] c"__builtin_bcmp\00", align 1
@.str.747 = private unnamed_addr constant [16 x i8] c"__builtin_bcopy\00", align 1
@.str.748 = private unnamed_addr constant [16 x i8] c"__builtin_bzero\00", align 1
@.str.749 = private unnamed_addr constant [16 x i8] c"__builtin_index\00", align 1
@.str.750 = private unnamed_addr constant [17 x i8] c"__builtin_memchr\00", align 1
@.str.751 = private unnamed_addr constant [17 x i8] c"__builtin_memcmp\00", align 1
@.str.752 = private unnamed_addr constant [17 x i8] c"__builtin_memcpy\00", align 1
@.str.753 = private unnamed_addr constant [18 x i8] c"__builtin_memmove\00", align 1
@.str.754 = private unnamed_addr constant [18 x i8] c"__builtin_mempcpy\00", align 1
@.str.755 = private unnamed_addr constant [17 x i8] c"__builtin_memset\00", align 1
@.str.756 = private unnamed_addr constant [17 x i8] c"__builtin_rindex\00", align 1
@.str.757 = private unnamed_addr constant [17 x i8] c"__builtin_stpcpy\00", align 1
@.str.758 = private unnamed_addr constant [18 x i8] c"__builtin_stpncpy\00", align 1
@.str.759 = private unnamed_addr constant [21 x i8] c"__builtin_strcasecmp\00", align 1
@.str.760 = private unnamed_addr constant [17 x i8] c"__builtin_strcat\00", align 1
@.str.761 = private unnamed_addr constant [17 x i8] c"__builtin_strchr\00", align 1
@.str.762 = private unnamed_addr constant [17 x i8] c"__builtin_strcmp\00", align 1
@.str.763 = private unnamed_addr constant [17 x i8] c"__builtin_strcpy\00", align 1
@.str.764 = private unnamed_addr constant [18 x i8] c"__builtin_strcspn\00", align 1
@.str.765 = private unnamed_addr constant [17 x i8] c"__builtin_strdup\00", align 1
@.str.766 = private unnamed_addr constant [18 x i8] c"__builtin_strndup\00", align 1
@.str.767 = private unnamed_addr constant [17 x i8] c"__builtin_strlen\00", align 1
@.str.768 = private unnamed_addr constant [22 x i8] c"__builtin_strncasecmp\00", align 1
@.str.769 = private unnamed_addr constant [18 x i8] c"__builtin_strncat\00", align 1
@.str.770 = private unnamed_addr constant [18 x i8] c"__builtin_strncmp\00", align 1
@.str.771 = private unnamed_addr constant [18 x i8] c"__builtin_strncpy\00", align 1
@.str.772 = private unnamed_addr constant [18 x i8] c"__builtin_strpbrk\00", align 1
@.str.773 = private unnamed_addr constant [18 x i8] c"__builtin_strrchr\00", align 1
@.str.774 = private unnamed_addr constant [17 x i8] c"__builtin_strspn\00", align 1
@.str.775 = private unnamed_addr constant [17 x i8] c"__builtin_strstr\00", align 1
@.str.776 = private unnamed_addr constant [18 x i8] c"__builtin_fprintf\00", align 1
@.str.777 = private unnamed_addr constant [27 x i8] c"__builtin_fprintf_unlocked\00", align 1
@.str.778 = private unnamed_addr constant [15 x i8] c"__builtin_putc\00", align 1
@.str.779 = private unnamed_addr constant [24 x i8] c"__builtin_putc_unlocked\00", align 1
@.str.780 = private unnamed_addr constant [16 x i8] c"__builtin_fputc\00", align 1
@.str.781 = private unnamed_addr constant [25 x i8] c"__builtin_fputc_unlocked\00", align 1
@.str.782 = private unnamed_addr constant [16 x i8] c"__builtin_fputs\00", align 1
@.str.783 = private unnamed_addr constant [25 x i8] c"__builtin_fputs_unlocked\00", align 1
@.str.784 = private unnamed_addr constant [17 x i8] c"__builtin_fscanf\00", align 1
@.str.785 = private unnamed_addr constant [17 x i8] c"__builtin_fwrite\00", align 1
@.str.786 = private unnamed_addr constant [26 x i8] c"__builtin_fwrite_unlocked\00", align 1
@.str.787 = private unnamed_addr constant [17 x i8] c"__builtin_printf\00", align 1
@.str.788 = private unnamed_addr constant [26 x i8] c"__builtin_printf_unlocked\00", align 1
@.str.789 = private unnamed_addr constant [18 x i8] c"__builtin_putchar\00", align 1
@.str.790 = private unnamed_addr constant [27 x i8] c"__builtin_putchar_unlocked\00", align 1
@.str.791 = private unnamed_addr constant [15 x i8] c"__builtin_puts\00", align 1
@.str.792 = private unnamed_addr constant [24 x i8] c"__builtin_puts_unlocked\00", align 1
@.str.793 = private unnamed_addr constant [16 x i8] c"__builtin_scanf\00", align 1
@.str.794 = private unnamed_addr constant [19 x i8] c"__builtin_snprintf\00", align 1
@.str.795 = private unnamed_addr constant [18 x i8] c"__builtin_sprintf\00", align 1
@.str.796 = private unnamed_addr constant [17 x i8] c"__builtin_sscanf\00", align 1
@.str.797 = private unnamed_addr constant [19 x i8] c"__builtin_vfprintf\00", align 1
@.str.798 = private unnamed_addr constant [18 x i8] c"__builtin_vfscanf\00", align 1
@.str.799 = private unnamed_addr constant [18 x i8] c"__builtin_vprintf\00", align 1
@.str.800 = private unnamed_addr constant [17 x i8] c"__builtin_vscanf\00", align 1
@.str.801 = private unnamed_addr constant [20 x i8] c"__builtin_vsnprintf\00", align 1
@.str.802 = private unnamed_addr constant [19 x i8] c"__builtin_vsprintf\00", align 1
@.str.803 = private unnamed_addr constant [18 x i8] c"__builtin_vsscanf\00", align 1
@.str.804 = private unnamed_addr constant [18 x i8] c"__builtin_isalnum\00", align 1
@.str.805 = private unnamed_addr constant [18 x i8] c"__builtin_isalpha\00", align 1
@.str.806 = private unnamed_addr constant [18 x i8] c"__builtin_isascii\00", align 1
@.str.807 = private unnamed_addr constant [18 x i8] c"__builtin_isblank\00", align 1
@.str.808 = private unnamed_addr constant [18 x i8] c"__builtin_iscntrl\00", align 1
@.str.809 = private unnamed_addr constant [18 x i8] c"__builtin_isdigit\00", align 1
@.str.810 = private unnamed_addr constant [18 x i8] c"__builtin_isgraph\00", align 1
@.str.811 = private unnamed_addr constant [18 x i8] c"__builtin_islower\00", align 1
@.str.812 = private unnamed_addr constant [18 x i8] c"__builtin_isprint\00", align 1
@.str.813 = private unnamed_addr constant [18 x i8] c"__builtin_ispunct\00", align 1
@.str.814 = private unnamed_addr constant [18 x i8] c"__builtin_isspace\00", align 1
@.str.815 = private unnamed_addr constant [18 x i8] c"__builtin_isupper\00", align 1
@.str.816 = private unnamed_addr constant [19 x i8] c"__builtin_isxdigit\00", align 1
@.str.817 = private unnamed_addr constant [18 x i8] c"__builtin_toascii\00", align 1
@.str.818 = private unnamed_addr constant [18 x i8] c"__builtin_tolower\00", align 1
@.str.819 = private unnamed_addr constant [18 x i8] c"__builtin_toupper\00", align 1
@.str.820 = private unnamed_addr constant [19 x i8] c"__builtin_iswalnum\00", align 1
@.str.821 = private unnamed_addr constant [19 x i8] c"__builtin_iswalpha\00", align 1
@.str.822 = private unnamed_addr constant [19 x i8] c"__builtin_iswblank\00", align 1
@.str.823 = private unnamed_addr constant [19 x i8] c"__builtin_iswcntrl\00", align 1
@.str.824 = private unnamed_addr constant [19 x i8] c"__builtin_iswdigit\00", align 1
@.str.825 = private unnamed_addr constant [19 x i8] c"__builtin_iswgraph\00", align 1
@.str.826 = private unnamed_addr constant [19 x i8] c"__builtin_iswlower\00", align 1
@.str.827 = private unnamed_addr constant [19 x i8] c"__builtin_iswprint\00", align 1
@.str.828 = private unnamed_addr constant [19 x i8] c"__builtin_iswpunct\00", align 1
@.str.829 = private unnamed_addr constant [19 x i8] c"__builtin_iswspace\00", align 1
@.str.830 = private unnamed_addr constant [19 x i8] c"__builtin_iswupper\00", align 1
@.str.831 = private unnamed_addr constant [20 x i8] c"__builtin_iswxdigit\00", align 1
@.str.832 = private unnamed_addr constant [19 x i8] c"__builtin_towlower\00", align 1
@.str.833 = private unnamed_addr constant [19 x i8] c"__builtin_towupper\00", align 1
@.str.834 = private unnamed_addr constant [16 x i8] c"__builtin_abort\00", align 1
@.str.835 = private unnamed_addr constant [14 x i8] c"__builtin_abs\00", align 1
@.str.836 = private unnamed_addr constant [37 x i8] c"__builtin_aggregate_incoming_address\00", align 1
@.str.837 = private unnamed_addr constant [17 x i8] c"__builtin_alloca\00", align 1
@.str.838 = private unnamed_addr constant [16 x i8] c"__builtin_apply\00", align 1
@.str.839 = private unnamed_addr constant [21 x i8] c"__builtin_apply_args\00", align 1
@.str.840 = private unnamed_addr constant [20 x i8] c"__builtin_args_info\00", align 1
@.str.841 = private unnamed_addr constant [18 x i8] c"__builtin_bswap32\00", align 1
@.str.842 = private unnamed_addr constant [18 x i8] c"__builtin_bswap64\00", align 1
@.str.843 = private unnamed_addr constant [24 x i8] c"__builtin___clear_cache\00", align 1
@.str.844 = private unnamed_addr constant [17 x i8] c"__builtin_calloc\00", align 1
@.str.845 = private unnamed_addr constant [24 x i8] c"__builtin_classify_type\00", align 1
@.str.846 = private unnamed_addr constant [14 x i8] c"__builtin_clz\00", align 1
@.str.847 = private unnamed_addr constant [18 x i8] c"__builtin_clzimax\00", align 1
@.str.848 = private unnamed_addr constant [15 x i8] c"__builtin_clzl\00", align 1
@.str.849 = private unnamed_addr constant [16 x i8] c"__builtin_clzll\00", align 1
@.str.850 = private unnamed_addr constant [21 x i8] c"__builtin_constant_p\00", align 1
@.str.851 = private unnamed_addr constant [14 x i8] c"__builtin_ctz\00", align 1
@.str.852 = private unnamed_addr constant [18 x i8] c"__builtin_ctzimax\00", align 1
@.str.853 = private unnamed_addr constant [15 x i8] c"__builtin_ctzl\00", align 1
@.str.854 = private unnamed_addr constant [16 x i8] c"__builtin_ctzll\00", align 1
@.str.855 = private unnamed_addr constant [20 x i8] c"__builtin_dcgettext\00", align 1
@.str.856 = private unnamed_addr constant [19 x i8] c"__builtin_dgettext\00", align 1
@.str.857 = private unnamed_addr constant [20 x i8] c"__builtin_dwarf_cfa\00", align 1
@.str.858 = private unnamed_addr constant [26 x i8] c"__builtin_dwarf_sp_column\00", align 1
@.str.859 = private unnamed_addr constant [20 x i8] c"__builtin_eh_return\00", align 1
@.str.860 = private unnamed_addr constant [31 x i8] c"__builtin_eh_return_data_regno\00", align 1
@.str.861 = private unnamed_addr constant [16 x i8] c"__builtin_execl\00", align 1
@.str.862 = private unnamed_addr constant [17 x i8] c"__builtin_execlp\00", align 1
@.str.863 = private unnamed_addr constant [17 x i8] c"__builtin_execle\00", align 1
@.str.864 = private unnamed_addr constant [16 x i8] c"__builtin_execv\00", align 1
@.str.865 = private unnamed_addr constant [17 x i8] c"__builtin_execvp\00", align 1
@.str.866 = private unnamed_addr constant [17 x i8] c"__builtin_execve\00", align 1
@.str.867 = private unnamed_addr constant [15 x i8] c"__builtin_exit\00", align 1
@.str.868 = private unnamed_addr constant [17 x i8] c"__builtin_expect\00", align 1
@.str.869 = private unnamed_addr constant [25 x i8] c"__builtin_extend_pointer\00", align 1
@.str.870 = private unnamed_addr constant [30 x i8] c"__builtin_extract_return_addr\00", align 1
@.str.871 = private unnamed_addr constant [14 x i8] c"__builtin_ffs\00", align 1
@.str.872 = private unnamed_addr constant [18 x i8] c"__builtin_ffsimax\00", align 1
@.str.873 = private unnamed_addr constant [15 x i8] c"__builtin_ffsl\00", align 1
@.str.874 = private unnamed_addr constant [16 x i8] c"__builtin_ffsll\00", align 1
@.str.875 = private unnamed_addr constant [15 x i8] c"__builtin_fork\00", align 1
@.str.876 = private unnamed_addr constant [24 x i8] c"__builtin_frame_address\00", align 1
@.str.877 = private unnamed_addr constant [15 x i8] c"__builtin_free\00", align 1
@.str.878 = private unnamed_addr constant [27 x i8] c"__builtin_frob_return_addr\00", align 1
@.str.879 = private unnamed_addr constant [18 x i8] c"__builtin_gettext\00", align 1
@.str.880 = private unnamed_addr constant [18 x i8] c"__builtin_imaxabs\00", align 1
@.str.881 = private unnamed_addr constant [36 x i8] c"__builtin_init_dwarf_reg_size_table\00", align 1
@.str.882 = private unnamed_addr constant [17 x i8] c"__builtin_finite\00", align 1
@.str.883 = private unnamed_addr constant [18 x i8] c"__builtin_finitef\00", align 1
@.str.884 = private unnamed_addr constant [18 x i8] c"__builtin_finitel\00", align 1
@.str.885 = private unnamed_addr constant [20 x i8] c"__builtin_finited32\00", align 1
@.str.886 = private unnamed_addr constant [20 x i8] c"__builtin_finited64\00", align 1
@.str.887 = private unnamed_addr constant [21 x i8] c"__builtin_finited128\00", align 1
@.str.888 = private unnamed_addr constant [21 x i8] c"__builtin_fpclassify\00", align 1
@.str.889 = private unnamed_addr constant [19 x i8] c"__builtin_isfinite\00", align 1
@.str.890 = private unnamed_addr constant [21 x i8] c"__builtin_isinf_sign\00", align 1
@.str.891 = private unnamed_addr constant [16 x i8] c"__builtin_isinf\00", align 1
@.str.892 = private unnamed_addr constant [17 x i8] c"__builtin_isinff\00", align 1
@.str.893 = private unnamed_addr constant [17 x i8] c"__builtin_isinfl\00", align 1
@.str.894 = private unnamed_addr constant [19 x i8] c"__builtin_isinfd32\00", align 1
@.str.895 = private unnamed_addr constant [19 x i8] c"__builtin_isinfd64\00", align 1
@.str.896 = private unnamed_addr constant [20 x i8] c"__builtin_isinfd128\00", align 1
@.str.897 = private unnamed_addr constant [16 x i8] c"__builtin_isnan\00", align 1
@.str.898 = private unnamed_addr constant [17 x i8] c"__builtin_isnanf\00", align 1
@.str.899 = private unnamed_addr constant [17 x i8] c"__builtin_isnanl\00", align 1
@.str.900 = private unnamed_addr constant [19 x i8] c"__builtin_isnand32\00", align 1
@.str.901 = private unnamed_addr constant [19 x i8] c"__builtin_isnand64\00", align 1
@.str.902 = private unnamed_addr constant [20 x i8] c"__builtin_isnand128\00", align 1
@.str.903 = private unnamed_addr constant [19 x i8] c"__builtin_isnormal\00", align 1
@.str.904 = private unnamed_addr constant [20 x i8] c"__builtin_isgreater\00", align 1
@.str.905 = private unnamed_addr constant [25 x i8] c"__builtin_isgreaterequal\00", align 1
@.str.906 = private unnamed_addr constant [17 x i8] c"__builtin_isless\00", align 1
@.str.907 = private unnamed_addr constant [22 x i8] c"__builtin_islessequal\00", align 1
@.str.908 = private unnamed_addr constant [24 x i8] c"__builtin_islessgreater\00", align 1
@.str.909 = private unnamed_addr constant [22 x i8] c"__builtin_isunordered\00", align 1
@.str.910 = private unnamed_addr constant [15 x i8] c"__builtin_labs\00", align 1
@.str.911 = private unnamed_addr constant [16 x i8] c"__builtin_llabs\00", align 1
@.str.912 = private unnamed_addr constant [18 x i8] c"__builtin_longjmp\00", align 1
@.str.913 = private unnamed_addr constant [17 x i8] c"__builtin_malloc\00", align 1
@.str.914 = private unnamed_addr constant [19 x i8] c"__builtin_next_arg\00", align 1
@.str.915 = private unnamed_addr constant [17 x i8] c"__builtin_parity\00", align 1
@.str.916 = private unnamed_addr constant [21 x i8] c"__builtin_parityimax\00", align 1
@.str.917 = private unnamed_addr constant [18 x i8] c"__builtin_parityl\00", align 1
@.str.918 = private unnamed_addr constant [19 x i8] c"__builtin_parityll\00", align 1
@.str.919 = private unnamed_addr constant [19 x i8] c"__builtin_popcount\00", align 1
@.str.920 = private unnamed_addr constant [23 x i8] c"__builtin_popcountimax\00", align 1
@.str.921 = private unnamed_addr constant [20 x i8] c"__builtin_popcountl\00", align 1
@.str.922 = private unnamed_addr constant [21 x i8] c"__builtin_popcountll\00", align 1
@.str.923 = private unnamed_addr constant [19 x i8] c"__builtin_prefetch\00", align 1
@.str.924 = private unnamed_addr constant [18 x i8] c"__builtin_realloc\00", align 1
@.str.925 = private unnamed_addr constant [17 x i8] c"__builtin_return\00", align 1
@.str.926 = private unnamed_addr constant [25 x i8] c"__builtin_return_address\00", align 1
@.str.927 = private unnamed_addr constant [19 x i8] c"__builtin_saveregs\00", align 1
@.str.928 = private unnamed_addr constant [17 x i8] c"__builtin_setjmp\00", align 1
@.str.929 = private unnamed_addr constant [18 x i8] c"__builtin_strfmon\00", align 1
@.str.930 = private unnamed_addr constant [19 x i8] c"__builtin_strftime\00", align 1
@.str.931 = private unnamed_addr constant [15 x i8] c"__builtin_trap\00", align 1
@.str.932 = private unnamed_addr constant [22 x i8] c"__builtin_unreachable\00", align 1
@.str.933 = private unnamed_addr constant [22 x i8] c"__builtin_unwind_init\00", align 1
@.str.934 = private unnamed_addr constant [28 x i8] c"__builtin_update_setjmp_buf\00", align 1
@.str.935 = private unnamed_addr constant [18 x i8] c"__builtin_va_copy\00", align 1
@.str.936 = private unnamed_addr constant [17 x i8] c"__builtin_va_end\00", align 1
@.str.937 = private unnamed_addr constant [19 x i8] c"__builtin_va_start\00", align 1
@.str.938 = private unnamed_addr constant [22 x i8] c"__builtin_va_arg_pack\00", align 1
@.str.939 = private unnamed_addr constant [26 x i8] c"__builtin_va_arg_pack_len\00", align 1
@.str.940 = private unnamed_addr constant [16 x i8] c"__builtin__exit\00", align 1
@.str.941 = private unnamed_addr constant [16 x i8] c"__builtin__Exit\00", align 1
@.str.942 = private unnamed_addr constant [22 x i8] c"__builtin_object_size\00", align 1
@.str.943 = private unnamed_addr constant [23 x i8] c"__builtin___memcpy_chk\00", align 1
@.str.944 = private unnamed_addr constant [24 x i8] c"__builtin___memmove_chk\00", align 1
@.str.945 = private unnamed_addr constant [24 x i8] c"__builtin___mempcpy_chk\00", align 1
@.str.946 = private unnamed_addr constant [23 x i8] c"__builtin___memset_chk\00", align 1
@.str.947 = private unnamed_addr constant [23 x i8] c"__builtin___stpcpy_chk\00", align 1
@.str.948 = private unnamed_addr constant [23 x i8] c"__builtin___strcat_chk\00", align 1
@.str.949 = private unnamed_addr constant [23 x i8] c"__builtin___strcpy_chk\00", align 1
@.str.950 = private unnamed_addr constant [24 x i8] c"__builtin___strncat_chk\00", align 1
@.str.951 = private unnamed_addr constant [24 x i8] c"__builtin___strncpy_chk\00", align 1
@.str.952 = private unnamed_addr constant [25 x i8] c"__builtin___snprintf_chk\00", align 1
@.str.953 = private unnamed_addr constant [24 x i8] c"__builtin___sprintf_chk\00", align 1
@.str.954 = private unnamed_addr constant [26 x i8] c"__builtin___vsnprintf_chk\00", align 1
@.str.955 = private unnamed_addr constant [25 x i8] c"__builtin___vsprintf_chk\00", align 1
@.str.956 = private unnamed_addr constant [24 x i8] c"__builtin___fprintf_chk\00", align 1
@.str.957 = private unnamed_addr constant [23 x i8] c"__builtin___printf_chk\00", align 1
@.str.958 = private unnamed_addr constant [25 x i8] c"__builtin___vfprintf_chk\00", align 1
@.str.959 = private unnamed_addr constant [24 x i8] c"__builtin___vprintf_chk\00", align 1
@.str.960 = private unnamed_addr constant [21 x i8] c"__sync_fetch_and_add\00", align 1
@.str.961 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_add_1\00", align 1
@.str.962 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_add_2\00", align 1
@.str.963 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_add_4\00", align 1
@.str.964 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_add_8\00", align 1
@.str.965 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_add_16\00", align 1
@.str.966 = private unnamed_addr constant [21 x i8] c"__sync_fetch_and_sub\00", align 1
@.str.967 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_sub_1\00", align 1
@.str.968 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_sub_2\00", align 1
@.str.969 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_sub_4\00", align 1
@.str.970 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_sub_8\00", align 1
@.str.971 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_sub_16\00", align 1
@.str.972 = private unnamed_addr constant [20 x i8] c"__sync_fetch_and_or\00", align 1
@.str.973 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_or_1\00", align 1
@.str.974 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_or_2\00", align 1
@.str.975 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_or_4\00", align 1
@.str.976 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_or_8\00", align 1
@.str.977 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_or_16\00", align 1
@.str.978 = private unnamed_addr constant [21 x i8] c"__sync_fetch_and_and\00", align 1
@.str.979 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_and_1\00", align 1
@.str.980 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_and_2\00", align 1
@.str.981 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_and_4\00", align 1
@.str.982 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_and_8\00", align 1
@.str.983 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_and_16\00", align 1
@.str.984 = private unnamed_addr constant [21 x i8] c"__sync_fetch_and_xor\00", align 1
@.str.985 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_xor_1\00", align 1
@.str.986 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_xor_2\00", align 1
@.str.987 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_xor_4\00", align 1
@.str.988 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_xor_8\00", align 1
@.str.989 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_xor_16\00", align 1
@.str.990 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_nand\00", align 1
@.str.991 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_nand_1\00", align 1
@.str.992 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_nand_2\00", align 1
@.str.993 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_nand_4\00", align 1
@.str.994 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_nand_8\00", align 1
@.str.995 = private unnamed_addr constant [25 x i8] c"__sync_fetch_and_nand_16\00", align 1
@.str.996 = private unnamed_addr constant [21 x i8] c"__sync_add_and_fetch\00", align 1
@.str.997 = private unnamed_addr constant [23 x i8] c"__sync_add_and_fetch_1\00", align 1
@.str.998 = private unnamed_addr constant [23 x i8] c"__sync_add_and_fetch_2\00", align 1
@.str.999 = private unnamed_addr constant [23 x i8] c"__sync_add_and_fetch_4\00", align 1
@.str.1000 = private unnamed_addr constant [23 x i8] c"__sync_add_and_fetch_8\00", align 1
@.str.1001 = private unnamed_addr constant [24 x i8] c"__sync_add_and_fetch_16\00", align 1
@.str.1002 = private unnamed_addr constant [21 x i8] c"__sync_sub_and_fetch\00", align 1
@.str.1003 = private unnamed_addr constant [23 x i8] c"__sync_sub_and_fetch_1\00", align 1
@.str.1004 = private unnamed_addr constant [23 x i8] c"__sync_sub_and_fetch_2\00", align 1
@.str.1005 = private unnamed_addr constant [23 x i8] c"__sync_sub_and_fetch_4\00", align 1
@.str.1006 = private unnamed_addr constant [23 x i8] c"__sync_sub_and_fetch_8\00", align 1
@.str.1007 = private unnamed_addr constant [24 x i8] c"__sync_sub_and_fetch_16\00", align 1
@.str.1008 = private unnamed_addr constant [20 x i8] c"__sync_or_and_fetch\00", align 1
@.str.1009 = private unnamed_addr constant [22 x i8] c"__sync_or_and_fetch_1\00", align 1
@.str.1010 = private unnamed_addr constant [22 x i8] c"__sync_or_and_fetch_2\00", align 1
@.str.1011 = private unnamed_addr constant [22 x i8] c"__sync_or_and_fetch_4\00", align 1
@.str.1012 = private unnamed_addr constant [22 x i8] c"__sync_or_and_fetch_8\00", align 1
@.str.1013 = private unnamed_addr constant [23 x i8] c"__sync_or_and_fetch_16\00", align 1
@.str.1014 = private unnamed_addr constant [21 x i8] c"__sync_and_and_fetch\00", align 1
@.str.1015 = private unnamed_addr constant [23 x i8] c"__sync_and_and_fetch_1\00", align 1
@.str.1016 = private unnamed_addr constant [23 x i8] c"__sync_and_and_fetch_2\00", align 1
@.str.1017 = private unnamed_addr constant [23 x i8] c"__sync_and_and_fetch_4\00", align 1
@.str.1018 = private unnamed_addr constant [23 x i8] c"__sync_and_and_fetch_8\00", align 1
@.str.1019 = private unnamed_addr constant [24 x i8] c"__sync_and_and_fetch_16\00", align 1
@.str.1020 = private unnamed_addr constant [21 x i8] c"__sync_xor_and_fetch\00", align 1
@.str.1021 = private unnamed_addr constant [23 x i8] c"__sync_xor_and_fetch_1\00", align 1
@.str.1022 = private unnamed_addr constant [23 x i8] c"__sync_xor_and_fetch_2\00", align 1
@.str.1023 = private unnamed_addr constant [23 x i8] c"__sync_xor_and_fetch_4\00", align 1
@.str.1024 = private unnamed_addr constant [23 x i8] c"__sync_xor_and_fetch_8\00", align 1
@.str.1025 = private unnamed_addr constant [24 x i8] c"__sync_xor_and_fetch_16\00", align 1
@.str.1026 = private unnamed_addr constant [22 x i8] c"__sync_nand_and_fetch\00", align 1
@.str.1027 = private unnamed_addr constant [24 x i8] c"__sync_nand_and_fetch_1\00", align 1
@.str.1028 = private unnamed_addr constant [24 x i8] c"__sync_nand_and_fetch_2\00", align 1
@.str.1029 = private unnamed_addr constant [24 x i8] c"__sync_nand_and_fetch_4\00", align 1
@.str.1030 = private unnamed_addr constant [24 x i8] c"__sync_nand_and_fetch_8\00", align 1
@.str.1031 = private unnamed_addr constant [25 x i8] c"__sync_nand_and_fetch_16\00", align 1
@.str.1032 = private unnamed_addr constant [29 x i8] c"__sync_bool_compare_and_swap\00", align 1
@.str.1033 = private unnamed_addr constant [31 x i8] c"__sync_bool_compare_and_swap_1\00", align 1
@.str.1034 = private unnamed_addr constant [31 x i8] c"__sync_bool_compare_and_swap_2\00", align 1
@.str.1035 = private unnamed_addr constant [31 x i8] c"__sync_bool_compare_and_swap_4\00", align 1
@.str.1036 = private unnamed_addr constant [31 x i8] c"__sync_bool_compare_and_swap_8\00", align 1
@.str.1037 = private unnamed_addr constant [32 x i8] c"__sync_bool_compare_and_swap_16\00", align 1
@.str.1038 = private unnamed_addr constant [28 x i8] c"__sync_val_compare_and_swap\00", align 1
@.str.1039 = private unnamed_addr constant [30 x i8] c"__sync_val_compare_and_swap_1\00", align 1
@.str.1040 = private unnamed_addr constant [30 x i8] c"__sync_val_compare_and_swap_2\00", align 1
@.str.1041 = private unnamed_addr constant [30 x i8] c"__sync_val_compare_and_swap_4\00", align 1
@.str.1042 = private unnamed_addr constant [30 x i8] c"__sync_val_compare_and_swap_8\00", align 1
@.str.1043 = private unnamed_addr constant [31 x i8] c"__sync_val_compare_and_swap_16\00", align 1
@.str.1044 = private unnamed_addr constant [25 x i8] c"__sync_lock_test_and_set\00", align 1
@.str.1045 = private unnamed_addr constant [27 x i8] c"__sync_lock_test_and_set_1\00", align 1
@.str.1046 = private unnamed_addr constant [27 x i8] c"__sync_lock_test_and_set_2\00", align 1
@.str.1047 = private unnamed_addr constant [27 x i8] c"__sync_lock_test_and_set_4\00", align 1
@.str.1048 = private unnamed_addr constant [27 x i8] c"__sync_lock_test_and_set_8\00", align 1
@.str.1049 = private unnamed_addr constant [28 x i8] c"__sync_lock_test_and_set_16\00", align 1
@.str.1050 = private unnamed_addr constant [20 x i8] c"__sync_lock_release\00", align 1
@.str.1051 = private unnamed_addr constant [22 x i8] c"__sync_lock_release_1\00", align 1
@.str.1052 = private unnamed_addr constant [22 x i8] c"__sync_lock_release_2\00", align 1
@.str.1053 = private unnamed_addr constant [22 x i8] c"__sync_lock_release_4\00", align 1
@.str.1054 = private unnamed_addr constant [22 x i8] c"__sync_lock_release_8\00", align 1
@.str.1055 = private unnamed_addr constant [23 x i8] c"__sync_lock_release_16\00", align 1
@.str.1056 = private unnamed_addr constant [19 x i8] c"__sync_synchronize\00", align 1
@.str.1057 = private unnamed_addr constant [29 x i8] c"__builtin_omp_get_thread_num\00", align 1
@flag_openmp = external dso_local local_unnamed_addr global i32, align 4
@flag_tree_parallelize_loops = external dso_local local_unnamed_addr global i32, align 4
@.str.1058 = private unnamed_addr constant [30 x i8] c"__builtin_omp_get_num_threads\00", align 1
@.str.1059 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_atomic_start\00", align 1
@.str.1060 = private unnamed_addr constant [26 x i8] c"__builtin_GOMP_atomic_end\00", align 1
@.str.1061 = private unnamed_addr constant [23 x i8] c"__builtin_GOMP_barrier\00", align 1
@.str.1062 = private unnamed_addr constant [24 x i8] c"__builtin_GOMP_taskwait\00", align 1
@.str.1063 = private unnamed_addr constant [30 x i8] c"__builtin_GOMP_critical_start\00", align 1
@.str.1064 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_critical_end\00", align 1
@.str.1065 = private unnamed_addr constant [35 x i8] c"__builtin_GOMP_critical_name_start\00", align 1
@.str.1066 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_critical_name_end\00", align 1
@.str.1067 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_loop_static_start\00", align 1
@.str.1068 = private unnamed_addr constant [34 x i8] c"__builtin_GOMP_loop_dynamic_start\00", align 1
@.str.1069 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_loop_guided_start\00", align 1
@.str.1070 = private unnamed_addr constant [34 x i8] c"__builtin_GOMP_loop_runtime_start\00", align 1
@.str.1071 = private unnamed_addr constant [41 x i8] c"__builtin_GOMP_loop_ordered_static_start\00", align 1
@.str.1072 = private unnamed_addr constant [42 x i8] c"__builtin_GOMP_loop_ordered_dynamic_start\00", align 1
@.str.1073 = private unnamed_addr constant [41 x i8] c"__builtin_GOMP_loop_ordered_guided_start\00", align 1
@.str.1074 = private unnamed_addr constant [42 x i8] c"__builtin_GOMP_loop_ordered_runtime_start\00", align 1
@.str.1075 = private unnamed_addr constant [32 x i8] c"__builtin_GOMP_loop_static_next\00", align 1
@.str.1076 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_loop_dynamic_next\00", align 1
@.str.1077 = private unnamed_addr constant [32 x i8] c"__builtin_GOMP_loop_guided_next\00", align 1
@.str.1078 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_loop_runtime_next\00", align 1
@.str.1079 = private unnamed_addr constant [40 x i8] c"__builtin_GOMP_loop_ordered_static_next\00", align 1
@.str.1080 = private unnamed_addr constant [41 x i8] c"__builtin_GOMP_loop_ordered_dynamic_next\00", align 1
@.str.1081 = private unnamed_addr constant [40 x i8] c"__builtin_GOMP_loop_ordered_guided_next\00", align 1
@.str.1082 = private unnamed_addr constant [41 x i8] c"__builtin_GOMP_loop_ordered_runtime_next\00", align 1
@.str.1083 = private unnamed_addr constant [37 x i8] c"__builtin_GOMP_loop_ull_static_start\00", align 1
@.str.1084 = private unnamed_addr constant [38 x i8] c"__builtin_GOMP_loop_ull_dynamic_start\00", align 1
@.str.1085 = private unnamed_addr constant [37 x i8] c"__builtin_GOMP_loop_ull_guided_start\00", align 1
@.str.1086 = private unnamed_addr constant [38 x i8] c"__builtin_GOMP_loop_ull_runtime_start\00", align 1
@.str.1087 = private unnamed_addr constant [45 x i8] c"__builtin_GOMP_loop_ull_ordered_static_start\00", align 1
@.str.1088 = private unnamed_addr constant [46 x i8] c"__builtin_GOMP_loop_ull_ordered_dynamic_start\00", align 1
@.str.1089 = private unnamed_addr constant [45 x i8] c"__builtin_GOMP_loop_ull_ordered_guided_start\00", align 1
@.str.1090 = private unnamed_addr constant [46 x i8] c"__builtin_GOMP_loop_ull_ordered_runtime_start\00", align 1
@.str.1091 = private unnamed_addr constant [36 x i8] c"__builtin_GOMP_loop_ull_static_next\00", align 1
@.str.1092 = private unnamed_addr constant [37 x i8] c"__builtin_GOMP_loop_ull_dynamic_next\00", align 1
@.str.1093 = private unnamed_addr constant [36 x i8] c"__builtin_GOMP_loop_ull_guided_next\00", align 1
@.str.1094 = private unnamed_addr constant [37 x i8] c"__builtin_GOMP_loop_ull_runtime_next\00", align 1
@.str.1095 = private unnamed_addr constant [44 x i8] c"__builtin_GOMP_loop_ull_ordered_static_next\00", align 1
@.str.1096 = private unnamed_addr constant [45 x i8] c"__builtin_GOMP_loop_ull_ordered_dynamic_next\00", align 1
@.str.1097 = private unnamed_addr constant [44 x i8] c"__builtin_GOMP_loop_ull_ordered_guided_next\00", align 1
@.str.1098 = private unnamed_addr constant [45 x i8] c"__builtin_GOMP_loop_ull_ordered_runtime_next\00", align 1
@.str.1099 = private unnamed_addr constant [42 x i8] c"__builtin_GOMP_parallel_loop_static_start\00", align 1
@.str.1100 = private unnamed_addr constant [43 x i8] c"__builtin_GOMP_parallel_loop_dynamic_start\00", align 1
@.str.1101 = private unnamed_addr constant [42 x i8] c"__builtin_GOMP_parallel_loop_guided_start\00", align 1
@.str.1102 = private unnamed_addr constant [43 x i8] c"__builtin_GOMP_parallel_loop_runtime_start\00", align 1
@.str.1103 = private unnamed_addr constant [24 x i8] c"__builtin_GOMP_loop_end\00", align 1
@.str.1104 = private unnamed_addr constant [31 x i8] c"__builtin_GOMP_loop_end_nowait\00", align 1
@.str.1105 = private unnamed_addr constant [29 x i8] c"__builtin_GOMP_ordered_start\00", align 1
@.str.1106 = private unnamed_addr constant [27 x i8] c"__builtin_GOMP_ordered_end\00", align 1
@.str.1107 = private unnamed_addr constant [30 x i8] c"__builtin_GOMP_parallel_start\00", align 1
@.str.1108 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_parallel_end\00", align 1
@.str.1109 = private unnamed_addr constant [20 x i8] c"__builtin_GOMP_task\00", align 1
@.str.1110 = private unnamed_addr constant [30 x i8] c"__builtin_GOMP_sections_start\00", align 1
@.str.1111 = private unnamed_addr constant [29 x i8] c"__builtin_GOMP_sections_next\00", align 1
@.str.1112 = private unnamed_addr constant [39 x i8] c"__builtin_GOMP_parallel_sections_start\00", align 1
@.str.1113 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_sections_end\00", align 1
@.str.1114 = private unnamed_addr constant [35 x i8] c"__builtin_GOMP_sections_end_nowait\00", align 1
@.str.1115 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_single_start\00", align 1
@.str.1116 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_single_copy_start\00", align 1
@.str.1117 = private unnamed_addr constant [31 x i8] c"__builtin_GOMP_single_copy_end\00", align 1
@flag_mudflap = external dso_local local_unnamed_addr global i32, align 4
@.str.1118 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.1119 = private unnamed_addr constant [12 x i8] c"asm_fprintf\00", align 1
@.str.1120 = private unnamed_addr constant [9 x i8] c"gcc_diag\00", align 1
@.str.1121 = private unnamed_addr constant [10 x i8] c"gcc_cdiag\00", align 1
@.str.1122 = private unnamed_addr constant [12 x i8] c"gcc_cxxdiag\00", align 1
@.str.1123 = private unnamed_addr constant [6 x i8] c"scanf\00", align 1
@.str.1124 = private unnamed_addr constant [8 x i8] c"strfmon\00", align 1
@.str.1125 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@implicit_built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@.str.1126 = private unnamed_addr constant [50 x i8] c"case label does not reduce to an integer constant\00", align 1
@.str.1127 = private unnamed_addr constant [53 x i8] c"case label value is less than minimum value for type\00", align 1
@.str.1128 = private unnamed_addr constant [48 x i8] c"case label value exceeds maximum value for type\00", align 1
@.str.1129 = private unnamed_addr constant [65 x i8] c"lower value in case label range less than minimum value for type\00", align 1
@.str.1130 = private unnamed_addr constant [63 x i8] c"upper value in case label range exceeds maximum value for type\00", align 1
@.str.1131 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.1132 = private unnamed_addr constant [5 x i8] c"-%lu\00", align 1
@.str.1133 = private unnamed_addr constant [12 x i8] c"0x%lx%016lx\00", align 1
@.str.1134 = private unnamed_addr constant [38 x i8] c"case value %qs not in enumerated type\00", align 1
@.str.1135 = private unnamed_addr constant [42 x i8] c"case value %qs not in enumerated type %qT\00", align 1
@.str.1136 = private unnamed_addr constant [44 x i8] c"%qE attribute ignored for field of type %qT\00", align 1
@.str.1137 = private unnamed_addr constant [22 x i8] c"%qE attribute ignored\00", align 1
@.str.1138 = private unnamed_addr constant [42 x i8] c"%qE attribute conflicts with attribute %s\00", align 1
@.str.1139 = private unnamed_addr constant [49 x i8] c"%qE attribute have effect only on public objects\00", align 1
@.str.1140 = private unnamed_addr constant [71 x i8] c"destructor priorities from 0 to %d are reserved for the implementation\00", align 1
@.str.1141 = private unnamed_addr constant [72 x i8] c"constructor priorities from 0 to %d are reserved for the implementation\00", align 1
@.str.1142 = private unnamed_addr constant [62 x i8] c"destructor priorities must be integers from 0 to %d inclusive\00", align 1
@.str.1143 = private unnamed_addr constant [63 x i8] c"constructor priorities must be integers from 0 to %d inclusive\00", align 1
@.str.1144 = private unnamed_addr constant [5 x i8] c"byte\00", align 1
@byte_mode = external dso_local local_unnamed_addr global i32, align 4
@.str.1145 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@.str.1146 = private unnamed_addr constant [8 x i8] c"pointer\00", align 1
@.str.1147 = private unnamed_addr constant [18 x i8] c"libgcc_cmp_return\00", align 1
@.str.1148 = private unnamed_addr constant [19 x i8] c"libgcc_shift_count\00", align 1
@.str.1149 = private unnamed_addr constant [12 x i8] c"unwind_word\00", align 1
@mode_name = external dso_local local_unnamed_addr constant [87 x i8*], align 16
@.str.1150 = private unnamed_addr constant [25 x i8] c"unknown machine mode %qE\00", align 1
@.str.1151 = private unnamed_addr constant [66 x i8] c"specifying vector types with __attribute__ ((mode)) is deprecated\00", align 1
@.str.1152 = private unnamed_addr constant [42 x i8] c"use __attribute__ ((vector_size)) instead\00", align 1
@.str.1153 = private unnamed_addr constant [22 x i8] c"unable to emulate %qs\00", align 1
@.str.1154 = private unnamed_addr constant [25 x i8] c"invalid pointer mode %qs\00", align 1
@.str.1155 = private unnamed_addr constant [50 x i8] c"signness of type and machine mode %qs don't match\00", align 1
@.str.1156 = private unnamed_addr constant [26 x i8] c"no data type for mode %qs\00", align 1
@.str.1157 = private unnamed_addr constant [39 x i8] c"cannot use mode %qs for enumeral types\00", align 1
@.str.1158 = private unnamed_addr constant [39 x i8] c"mode %qs applied to inappropriate type\00", align 1
@user_defined_section_attribute = external dso_local local_unnamed_addr global i8, align 1
@.str.1159 = private unnamed_addr constant [58 x i8] c"section attribute cannot be specified for local variables\00", align 1
@.str.1160 = private unnamed_addr constant [52 x i8] c"section of %q+D conflicts with previous declaration\00", align 1
@.str.1161 = private unnamed_addr constant [37 x i8] c"section of %q+D cannot be overridden\00", align 1
@.str.1162 = private unnamed_addr constant [39 x i8] c"section attribute not allowed for %q+D\00", align 1
@.str.1163 = private unnamed_addr constant [53 x i8] c"section attributes are not supported for this target\00", align 1
@.str.1164 = private unnamed_addr constant [38 x i8] c"requested alignment is not a constant\00", align 1
@.str.1165 = private unnamed_addr constant [40 x i8] c"requested alignment is not a power of 2\00", align 1
@.str.1166 = private unnamed_addr constant [33 x i8] c"requested alignment is too large\00", align 1
@.str.1167 = private unnamed_addr constant [40 x i8] c"alignment may not be specified for %q+D\00", align 1
@.str.1168 = private unnamed_addr constant [75 x i8] c"alignment for %q+D was previously specified as %d and may not be decreased\00", align 1
@.str.1169 = private unnamed_addr constant [39 x i8] c"alignment for %q+D must be at least %d\00", align 1
@.str.1170 = private unnamed_addr constant [45 x i8] c"inline function %q+D cannot be declared weak\00", align 1
@.str.1171 = private unnamed_addr constant [43 x i8] c"%q+D defined both normally and as an alias\00", align 1
@.str.1172 = private unnamed_addr constant [28 x i8] c"alias argument not a string\00", align 1
@.str.1173 = private unnamed_addr constant [53 x i8] c"weakref attribute must appear before alias attribute\00", align 1
@.str.1174 = private unnamed_addr constant [41 x i8] c"%qE attribute ignored on non-class types\00", align 1
@.str.1175 = private unnamed_addr constant [53 x i8] c"%qE attribute ignored because %qT is already defined\00", align 1
@.str.1176 = private unnamed_addr constant [33 x i8] c"visibility argument not a string\00", align 1
@.str.1177 = private unnamed_addr constant [31 x i8] c"%qE attribute ignored on types\00", align 1
@.str.1178 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.1179 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.1180 = private unnamed_addr constant [82 x i8] c"visibility argument must be one of \22default\22, \22hidden\22, \22protected\22 or \22internal\22\00", align 1
@.str.1181 = private unnamed_addr constant [41 x i8] c"%qD redeclared with different visibility\00", align 1
@.str.1182 = private unnamed_addr constant [32 x i8] c"tls_model argument not a string\00", align 1
@.str.1183 = private unnamed_addr constant [11 x i8] c"local-exec\00", align 1
@.str.1184 = private unnamed_addr constant [13 x i8] c"initial-exec\00", align 1
@.str.1185 = private unnamed_addr constant [14 x i8] c"local-dynamic\00", align 1
@.str.1186 = private unnamed_addr constant [15 x i8] c"global-dynamic\00", align 1
@.str.1187 = private unnamed_addr constant [100 x i8] c"tls_model argument must be one of \22local-exec\22, \22initial-exec\22, \22local-dynamic\22 or \22global-dynamic\22\00", align 1
@.str.1188 = private unnamed_addr constant [40 x i8] c"%qE attribute applies only to functions\00", align 1
@.str.1189 = private unnamed_addr constant [42 x i8] c"can%'t set %qE attribute after definition\00", align 1
@.str.1190 = private unnamed_addr constant [35 x i8] c"alloc_size parameter outside range\00", align 1
@.str.1191 = private unnamed_addr constant [35 x i8] c"deprecated message is not a string\00", align 1
@.str.1192 = private unnamed_addr constant [30 x i8] c"%qE attribute ignored for %qE\00", align 1
@.str.1193 = private unnamed_addr constant [38 x i8] c"invalid vector type for attribute %qE\00", align 1
@.str.1194 = private unnamed_addr constant [55 x i8] c"vector size not an integral multiple of component size\00", align 1
@.str.1195 = private unnamed_addr constant [17 x i8] c"zero vector size\00", align 1
@.str.1196 = private unnamed_addr constant [54 x i8] c"number of components of the vector not a power of two\00", align 1
@.str.1197 = private unnamed_addr constant [55 x i8] c"nonnull attribute without arguments on a non-prototype\00", align 1
@.str.1198 = private unnamed_addr constant [59 x i8] c"nonnull argument has invalid operand number (argument %lu)\00", align 1
@.str.1199 = private unnamed_addr constant [78 x i8] c"nonnull argument with out-of-range operand number (argument %lu, operand %lu)\00", align 1
@.str.1200 = private unnamed_addr constant [76 x i8] c"nonnull argument references non-pointer operand (argument %lu, operand %lu)\00", align 1
@.str.1201 = private unnamed_addr constant [35 x i8] c"cleanup argument not an identifier\00", align 1
@.str.1202 = private unnamed_addr constant [32 x i8] c"cleanup argument not a function\00", align 1
@.str.1203 = private unnamed_addr constant [55 x i8] c"%qE attribute requires prototypes with named arguments\00", align 1
@.str.1204 = private unnamed_addr constant [49 x i8] c"%qE attribute only applies to variadic functions\00", align 1
@.str.1205 = private unnamed_addr constant [46 x i8] c"requested position is not an integer constant\00", align 1
@.str.1206 = private unnamed_addr constant [37 x i8] c"requested position is less than zero\00", align 1
@.str.1207 = private unnamed_addr constant [53 x i8] c"null argument where non-null required (argument %lu)\00", align 1
@.str.1208 = private unnamed_addr constant [48 x i8] c"not enough variable arguments to fit a sentinel\00", align 1
@.str.1209 = private unnamed_addr constant [34 x i8] c"missing sentinel in function call\00", align 1
@.str.1210 = private unnamed_addr constant [37 x i8] c"not enough arguments to function %qE\00", align 1
@.str.1211 = private unnamed_addr constant [35 x i8] c"too many arguments to function %qE\00", align 1
@.str.1212 = private unnamed_addr constant [52 x i8] c"cannot apply %<offsetof%> to static data member %qD\00", align 1
@.str.1213 = private unnamed_addr constant [60 x i8] c"cannot apply %<offsetof%> when %<operator[]%> is overloaded\00", align 1
@.str.1214 = private unnamed_addr constant [52 x i8] c"cannot apply %<offsetof%> to a non constant address\00", align 1
@.str.1215 = private unnamed_addr constant [58 x i8] c"attempt to take address of bit-field structure member %qD\00", align 1
@.str.1216 = private unnamed_addr constant [52 x i8] c"index %E denotes an offset greater than size of %qT\00", align 1
@.str.1217 = private unnamed_addr constant [34 x i8] c"too few arguments to function %qE\00", align 1
@.str.1218 = private unnamed_addr constant [41 x i8] c"incompatible type for argument %d of %qE\00", align 1
@resort_data.0 = internal unnamed_addr global void (i8*, i8*)* null, align 8, !dbg !3114
@resort_data.1 = internal unnamed_addr global i8* null, align 8, !dbg !3115

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !3120 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !3133, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !3134, metadata !DIExpression()), !dbg !3135
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3136
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #7, !dbg !3137
  ret i32 %call, !dbg !3138
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !3139 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3143
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #7, !dbg !3144
  ret i32 %call, !dbg !3145
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3146 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3200, metadata !DIExpression()), !dbg !3201
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3202
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3202
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3202
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3202
  %cmp = icmp uge i8* %0, %1, !dbg !3202
  %conv1 = zext i1 %cmp to i64, !dbg !3202
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3202
  %tobool = icmp eq i64 %expval, 0, !dbg !3202
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3202

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !3202
  br label %cond.end, !dbg !3202

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3202
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3202
  %2 = load i8, i8* %0, align 1, !dbg !3202
  %conv3 = zext i8 %2 to i32, !dbg !3202
  br label %cond.end, !dbg !3202

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3202
  ret i32 %cond, !dbg !3203
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3204 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3206, metadata !DIExpression()), !dbg !3207
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3208
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3208
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3208
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3208
  %cmp = icmp uge i8* %0, %1, !dbg !3208
  %conv1 = zext i1 %cmp to i64, !dbg !3208
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3208
  %tobool = icmp eq i64 %expval, 0, !dbg !3208
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3208

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !3208
  br label %cond.end, !dbg !3208

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3208
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3208
  %2 = load i8, i8* %0, align 1, !dbg !3208
  %conv3 = zext i8 %2 to i32, !dbg !3208
  br label %cond.end, !dbg !3208

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3208
  ret i32 %cond, !dbg !3209
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !3210 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3211
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !3211
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3211
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !3211
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !3211
  %cmp = icmp uge i8* %1, %2, !dbg !3211
  %conv1 = zext i1 %cmp to i64, !dbg !3211
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3211
  %tobool = icmp eq i64 %expval, 0, !dbg !3211
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3211

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #7, !dbg !3211
  br label %cond.end, !dbg !3211

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3211
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3211
  %3 = load i8, i8* %1, align 1, !dbg !3211
  %conv3 = zext i8 %3 to i32, !dbg !3211
  br label %cond.end, !dbg !3211

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3211
  ret i32 %cond, !dbg !3212
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !3213 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3217, metadata !DIExpression()), !dbg !3218
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3219
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #7, !dbg !3220
  ret i32 %call, !dbg !3221
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3222 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3226, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3227, metadata !DIExpression()), !dbg !3228
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3229
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3229
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3229
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3229
  %cmp = icmp uge i8* %0, %1, !dbg !3229
  %conv1 = zext i1 %cmp to i64, !dbg !3229
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3229
  %tobool = icmp eq i64 %expval, 0, !dbg !3229
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3229

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3229
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !3229
  br label %cond.end, !dbg !3229

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3229
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3229
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3229
  store i8 %conv2, i8* %0, align 1, !dbg !3229
  %conv6 = and i32 %__c, 255, !dbg !3229
  br label %cond.end, !dbg !3229

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3229
  ret i32 %cond, !dbg !3230
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3231 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3233, metadata !DIExpression()), !dbg !3235
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3234, metadata !DIExpression()), !dbg !3235
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3236
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3236
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3236
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3236
  %cmp = icmp uge i8* %0, %1, !dbg !3236
  %conv1 = zext i1 %cmp to i64, !dbg !3236
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3236
  %tobool = icmp eq i64 %expval, 0, !dbg !3236
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3236

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3236
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !3236
  br label %cond.end, !dbg !3236

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3236
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3236
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3236
  store i8 %conv2, i8* %0, align 1, !dbg !3236
  %conv6 = and i32 %__c, 255, !dbg !3236
  br label %cond.end, !dbg !3236

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3236
  ret i32 %cond, !dbg !3237
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !3238 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3240, metadata !DIExpression()), !dbg !3241
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3242
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !3242
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3242
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !3242
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !3242
  %cmp = icmp uge i8* %1, %2, !dbg !3242
  %conv1 = zext i1 %cmp to i64, !dbg !3242
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3242
  %tobool = icmp eq i64 %expval, 0, !dbg !3242
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3242

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3242
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #7, !dbg !3242
  br label %cond.end, !dbg !3242

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !3242
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3242
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3242
  store i8 %conv4, i8* %1, align 1, !dbg !3242
  %conv6 = and i32 %__c, 255, !dbg !3242
  br label %cond.end, !dbg !3242

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3242
  ret i32 %cond, !dbg !3243
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3244 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !3250, metadata !DIExpression()), !dbg !3253
  call void @llvm.dbg.value(metadata i64* %__n, metadata !3251, metadata !DIExpression()), !dbg !3253
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3252, metadata !DIExpression()), !dbg !3253
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #7, !dbg !3254
  ret i64 %call, !dbg !3255
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3256 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3258, metadata !DIExpression()), !dbg !3259
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3260
  %0 = load i32, i32* %_flags, align 8, !dbg !3260
  %and = lshr i32 %0, 4, !dbg !3260
  %and.lobit = and i32 %and, 1, !dbg !3260
  ret i32 %and.lobit, !dbg !3261
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3262 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3264, metadata !DIExpression()), !dbg !3265
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3266
  %0 = load i32, i32* %_flags, align 8, !dbg !3266
  %and = lshr i32 %0, 5, !dbg !3266
  %and.lobit = and i32 %and, 1, !dbg !3266
  ret i32 %and.lobit, !dbg !3267
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !3268 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3271, metadata !DIExpression()), !dbg !3272
  %__c.off = add i32 %__c, 128, !dbg !3273
  %0 = icmp ult i32 %__c.off, 384, !dbg !3273
  br i1 %0, label %cond.true, label %cond.end, !dbg !3273

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #7, !dbg !3274
  %1 = load i32*, i32** %call, align 8, !dbg !3275
  %idxprom = sext i32 %__c to i64, !dbg !3276
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3276
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3276
  br label %cond.end, !dbg !3277

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3277
  ret i32 %cond, !dbg !3278
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !3279 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3281, metadata !DIExpression()), !dbg !3282
  %__c.off = add i32 %__c, 128, !dbg !3283
  %0 = icmp ult i32 %__c.off, 384, !dbg !3283
  br i1 %0, label %cond.true, label %cond.end, !dbg !3283

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #7, !dbg !3284
  %1 = load i32*, i32** %call, align 8, !dbg !3285
  %idxprom = sext i32 %__c to i64, !dbg !3286
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3286
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3286
  br label %cond.end, !dbg !3287

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3287
  ret i32 %cond, !dbg !3288
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !3289 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3294, metadata !DIExpression()), !dbg !3295
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !3296
  %conv = trunc i64 %call to i32, !dbg !3297
  ret i32 %conv, !dbg !3298
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !3299 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3303, metadata !DIExpression()), !dbg !3304
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !3305
  ret i64 %call, !dbg !3306
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !3307 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3312, metadata !DIExpression()), !dbg !3313
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #7, !dbg !3314
  ret i64 %call, !dbg !3315
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !3316 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !3322, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i8* %__base, metadata !3323, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3324, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i64 %__size, metadata !3325, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !3326, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i64 0, metadata !3327, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3328, metadata !DIExpression()), !dbg !3332
  br label %while.cond, !dbg !3333

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !3334
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !3332
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !3328, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !3327, metadata !DIExpression()), !dbg !3332
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !3335
  br i1 %cmp, label %while.body, label %cleanup, !dbg !3333

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !3336
  %div = lshr i64 %add, 1, !dbg !3338
  call void @llvm.dbg.value(metadata i64 %div, metadata !3329, metadata !DIExpression()), !dbg !3332
  %mul = mul i64 %div, %__size, !dbg !3339
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !3340
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !3330, metadata !DIExpression()), !dbg !3332
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #7, !dbg !3341
  call void @llvm.dbg.value(metadata i32 %call, metadata !3331, metadata !DIExpression()), !dbg !3332
  %cmp1 = icmp slt i32 %call, 0, !dbg !3342
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !3344

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !3345
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !3347

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !3348
  call void @llvm.dbg.value(metadata i64 %add4, metadata !3327, metadata !DIExpression()), !dbg !3332
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !3332
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !3332
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !3328, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !3327, metadata !DIExpression()), !dbg !3332
  br label %while.cond, !dbg !3333, !llvm.loop !3349

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !3332
  ret i8* %retval.0, !dbg !3351
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !3352 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3358, metadata !DIExpression()), !dbg !3359
  %call = tail call double @strtod(i8* %__nptr, i8** null) #7, !dbg !3360
  ret double %call, !dbg !3361
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3362 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3371, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3372, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 %base, metadata !3373, metadata !DIExpression()), !dbg !3374
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !3375
  ret i64 %call, !dbg !3376
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3377 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3383, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3384, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.value(metadata i32 %base, metadata !3385, metadata !DIExpression()), !dbg !3386
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !3387
  ret i64 %call, !dbg !3388
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3389 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3400, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3401, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %base, metadata !3402, metadata !DIExpression()), !dbg !3403
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !3404
  ret i64 %call, !dbg !3405
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3406 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3410, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3411, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %base, metadata !3412, metadata !DIExpression()), !dbg !3413
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !3414
  ret i64 %call, !dbg !3415
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3416 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3456, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3457, metadata !DIExpression()), !dbg !3458
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !3459
  ret i32 %call, !dbg !3460
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3461 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3463, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3464, metadata !DIExpression()), !dbg !3465
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !3466
  ret i32 %call, !dbg !3467
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3468 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3472, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3473, metadata !DIExpression()), !dbg !3474
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #7, !dbg !3475
  ret i32 %call, !dbg !3476
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3477 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3481, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3482, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3483, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3484, metadata !DIExpression()), !dbg !3485
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #7, !dbg !3486
  ret i32 %call, !dbg !3487
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3488 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3492, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3493, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3494, metadata !DIExpression()), !dbg !3495
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3494, metadata !DIExpression(DW_OP_deref)), !dbg !3495
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !3496
  ret i32 %call, !dbg !3497
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3498 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3502, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3503, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3504, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3505, metadata !DIExpression()), !dbg !3506
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3505, metadata !DIExpression(DW_OP_deref)), !dbg !3506
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !3507
  ret i32 %call, !dbg !3508
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3509 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3533, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3534, metadata !DIExpression()), !dbg !3535
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !3536
  ret i32 %call, !dbg !3537
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3538 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3540, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3541, metadata !DIExpression()), !dbg !3542
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !3543
  ret i32 %call, !dbg !3544
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3545 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3549, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3550, metadata !DIExpression()), !dbg !3551
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #7, !dbg !3552
  ret i32 %call, !dbg !3553
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3554 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3558, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3559, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3560, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3561, metadata !DIExpression()), !dbg !3562
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #7, !dbg !3563
  ret i32 %call, !dbg !3564
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_packed_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3565 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3567, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3568, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3569, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3570, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3571, metadata !DIExpression()), !dbg !3572
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3573
  %1 = load i64*, i64** %0, align 8, !dbg !3573
  %bf.load = load i64, i64* %1, align 8, !dbg !3573
  %bf.cast = and i64 %bf.load, 65535, !dbg !3573
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3573
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3573
  %cmp = icmp eq i32 %2, 2, !dbg !3573
  %3 = bitcast i64* %1 to %union.tree_node*, !dbg !3575
  br i1 %cmp, label %if.then, label %if.else, !dbg !3575

if.then:                                          ; preds = %entry
  %4 = bitcast i64* %1 to %struct.tree_common*, !dbg !3575
  %and = and i32 %flags, 8, !dbg !3576
  %tobool = icmp eq i32 %and, 0, !dbg !3576
  br i1 %tobool, label %if.then1, label %if.end, !dbg !3579

if.then1:                                         ; preds = %if.then
  %call = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %3) #7, !dbg !3580
  store %union.tree_node* %call, %union.tree_node** %node, align 8, !dbg !3581
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3582
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3583
  %bf.load3.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3584
  br label %if.end, !dbg !3582

if.end:                                           ; preds = %if.then, %if.then1
  %bf.load3 = phi i64 [ %bf.load, %if.then ], [ %bf.load3.pre, %if.then1 ], !dbg !3584
  %6 = phi %struct.tree_common* [ %4, %if.then ], [ %5, %if.then1 ], !dbg !3585
  %7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 0, i32 0, !dbg !3585
  %bf.set = or i64 %bf.load3, 2199023255552, !dbg !3584
  store i64 %bf.set, i64* %7, align 8, !dbg !3584
  br label %if.end29, !dbg !3586

if.else:                                          ; preds = %entry
  %cmp9 = icmp eq i64 %bf.cast, 31, !dbg !3587
  br i1 %cmp9, label %if.then10, label %if.else26, !dbg !3589

if.then10:                                        ; preds = %if.else
  %type = getelementptr inbounds i64, i64* %1, i64 2, !dbg !3590
  %8 = bitcast i64* %type to %struct.tree_type**, !dbg !3590
  %9 = load %struct.tree_type*, %struct.tree_type** %8, align 8, !dbg !3590
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 7, !dbg !3590
  %10 = load i32, i32* %align, align 8, !dbg !3590
  %cmp13 = icmp ult i32 %10, 9, !dbg !3593
  br i1 %cmp13, label %land.lhs.true, label %if.else19, !dbg !3594

land.lhs.true:                                    ; preds = %if.then10
  %initial = getelementptr inbounds i64, i64* %1, i64 10, !dbg !3595
  %11 = bitcast i64* %initial to %union.tree_node**, !dbg !3595
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !3595
  %tobool14 = icmp eq %union.tree_node* %12, null, !dbg !3595
  br i1 %tobool14, label %if.then15, label %if.else19, !dbg !3596

if.then15:                                        ; preds = %land.lhs.true
  %call18 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1136, i64 0, i64 0), %union.tree_node* %name, %struct.tree_type* %9) #7, !dbg !3597
  br label %if.end29, !dbg !3597

if.else19:                                        ; preds = %land.lhs.true, %if.then10
  %bf.set24 = or i64 %bf.load, 2199023255552, !dbg !3598
  store i64 %bf.set24, i64* %1, align 8, !dbg !3598
  br label %if.end29

if.else26:                                        ; preds = %if.else
  %call27 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3599
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3601
  br label %if.end29

if.end29:                                         ; preds = %if.else26, %if.else19, %if.then15, %if.end
  ret %union.tree_node* null, !dbg !3602
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_nocommon_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3603 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3605, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3606, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3607, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3608, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3609, metadata !DIExpression()), !dbg !3610
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3611
  %1 = load i64*, i64** %0, align 8, !dbg !3611
  %bf.load = load i64, i64* %1, align 8, !dbg !3611
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3613
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3613
  br i1 %cmp, label %if.then, label %if.else, !dbg !3614

if.then:                                          ; preds = %entry
  %common_flag = getelementptr inbounds i64, i64* %1, i64 18, !dbg !3615
  %2 = bitcast i64* %common_flag to i32*, !dbg !3615
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3616
  %bf.clear2 = and i32 %bf.load1, -9, !dbg !3616
  store i32 %bf.clear2, i32* %2, align 8, !dbg !3616
  br label %if.end, !dbg !3615

if.else:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3617
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3619
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !3620
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_common_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3621 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3623, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3624, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3625, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3626, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3627, metadata !DIExpression()), !dbg !3628
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3629
  %1 = load i64*, i64** %0, align 8, !dbg !3629
  %bf.load = load i64, i64* %1, align 8, !dbg !3629
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3631
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3631
  br i1 %cmp, label %if.then, label %if.else, !dbg !3632

if.then:                                          ; preds = %entry
  %common_flag = getelementptr inbounds i64, i64* %1, i64 18, !dbg !3633
  %2 = bitcast i64* %common_flag to i32*, !dbg !3633
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3634
  %bf.set = or i32 %bf.load1, 8, !dbg !3634
  store i32 %bf.set, i32* %2, align 8, !dbg !3634
  br label %if.end, !dbg !3633

if.else:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3635
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3637
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !3638
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_noreturn_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3639 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3641, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3642, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3643, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3644, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3645, metadata !DIExpression()), !dbg !3647
  %0 = bitcast %union.tree_node** %node to %struct.tree_common**, !dbg !3648
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !3648
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !3648
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3648
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3646, metadata !DIExpression()), !dbg !3647
  %.cast = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 0, i32 0, !dbg !3649
  %bf.load = load i64, i64* %.cast, align 8, !dbg !3649
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3651
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3651
  br i1 %cmp, label %if.then, label %if.else, !dbg !3652

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 0, i32 0, !dbg !3652
  %bf.set = or i64 %bf.load, 524288, !dbg !3653
  store i64 %bf.set, i64* %3, align 8, !dbg !3653
  br label %if.end31, !dbg !3654

if.else:                                          ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3655
  %bf.load6 = load i64, i64* %4, align 8, !dbg !3655
  %bf.cast82 = and i64 %bf.load6, 65535, !dbg !3657
  %cmp9 = icmp eq i64 %bf.cast82, 10, !dbg !3657
  br i1 %cmp9, label %land.lhs.true, label %if.else29, !dbg !3658

land.lhs.true:                                    ; preds = %if.else
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3659
  %5 = bitcast %union.tree_node** %type11 to i64**, !dbg !3659
  %6 = load i64*, i64** %5, align 8, !dbg !3659
  %bf.load13 = load i64, i64* %6, align 8, !dbg !3659
  %bf.cast153 = and i64 %bf.load13, 65535, !dbg !3660
  %cmp16 = icmp eq i64 %bf.cast153, 20, !dbg !3660
  br i1 %cmp16, label %if.then17, label %if.else29, !dbg !3661

if.then17:                                        ; preds = %land.lhs.true
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !3661
  %bf.cast255 = lshr i64 %bf.load13, 20, !dbg !3662
  %8 = trunc i64 %bf.cast255 to i32, !dbg !3662
  %9 = and i32 %8, 1, !dbg !3662
  %or = or i32 %9, 2, !dbg !3662
  %call = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %7, i32 %or) #7, !dbg !3662
  %call26 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call) #7, !dbg !3663
  %10 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !3664
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !3664
  store %union.tree_node* %call26, %union.tree_node** %type28, align 8, !dbg !3665
  br label %if.end31, !dbg !3664

if.else29:                                        ; preds = %land.lhs.true, %if.else
  %call30 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3666
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3668
  br label %if.end31

if.end31:                                         ; preds = %if.then17, %if.else29, %if.then
  ret %union.tree_node* null, !dbg !3669
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_noinline_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3670 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3672, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3673, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3674, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3675, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3676, metadata !DIExpression()), !dbg !3677
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3678
  %1 = load i64*, i64** %0, align 8, !dbg !3678
  %bf.load = load i64, i64* %1, align 8, !dbg !3678
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3680
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3680
  br i1 %cmp, label %if.then, label %if.else, !dbg !3681

if.then:                                          ; preds = %entry
  %uninlinable = getelementptr inbounds i64, i64* %1, i64 27, !dbg !3682
  %2 = bitcast i64* %uninlinable to i32*, !dbg !3682
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3683
  %bf.set = or i32 %bf.load1, 32768, !dbg !3683
  store i32 %bf.set, i32* %2, align 8, !dbg !3683
  br label %if.end, !dbg !3682

if.else:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3684
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3686
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !3687
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_noclone_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3688 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3690, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3691, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3692, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3693, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3694, metadata !DIExpression()), !dbg !3695
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3696
  %1 = load i64*, i64** %0, align 8, !dbg !3696
  %bf.load = load i64, i64* %1, align 8, !dbg !3696
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3698
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3698
  br i1 %cmp, label %if.end, label %if.then, !dbg !3699

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3700
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3702
  br label %if.end, !dbg !3703

if.end:                                           ; preds = %entry, %if.then
  ret %union.tree_node* null, !dbg !3704
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_always_inline_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3705 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3707, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3708, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3709, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3710, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3711, metadata !DIExpression()), !dbg !3712
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3713
  %1 = load i64*, i64** %0, align 8, !dbg !3713
  %bf.load = load i64, i64* %1, align 8, !dbg !3713
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3715
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3715
  br i1 %cmp, label %if.then, label %if.else, !dbg !3716

if.then:                                          ; preds = %entry
  %disregard_inline_limits = getelementptr inbounds i64, i64* %1, i64 27, !dbg !3717
  %2 = bitcast i64* %disregard_inline_limits to i32*, !dbg !3717
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3719
  %bf.set = or i32 %bf.load1, 67108864, !dbg !3719
  store i32 %bf.set, i32* %2, align 8, !dbg !3719
  br label %if.end, !dbg !3720

if.else:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3721
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3723
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !3724
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_gnu_inline_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3725 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3727, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3728, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3729, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3730, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3731, metadata !DIExpression()), !dbg !3732
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3733
  %1 = load i64*, i64** %0, align 8, !dbg !3733
  %bf.load = load i64, i64* %1, align 8, !dbg !3733
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3735
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3735
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3736

land.lhs.true:                                    ; preds = %entry
  %declared_inline_flag = getelementptr inbounds i64, i64* %1, i64 27, !dbg !3737
  %2 = bitcast i64* %declared_inline_flag to i32*, !dbg !3737
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3737
  %bf.clear2 = and i32 %bf.load1, 2097152, !dbg !3737
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !3737
  br i1 %tobool, label %if.else, label %if.end, !dbg !3738

if.else:                                          ; preds = %land.lhs.true, %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3739
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3741
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.else
  ret %union.tree_node* null, !dbg !3742
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_artificial_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3743 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3745, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3746, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3747, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3748, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3749, metadata !DIExpression()), !dbg !3750
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3751
  %1 = load i64*, i64** %0, align 8, !dbg !3751
  %bf.load = load i64, i64* %1, align 8, !dbg !3751
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3753
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3753
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3754

land.lhs.true:                                    ; preds = %entry
  %declared_inline_flag = getelementptr inbounds i64, i64* %1, i64 27, !dbg !3755
  %2 = bitcast i64* %declared_inline_flag to i32*, !dbg !3755
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3755
  %bf.clear2 = and i32 %bf.load1, 2097152, !dbg !3755
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !3755
  br i1 %tobool, label %if.else, label %if.end, !dbg !3756

if.else:                                          ; preds = %land.lhs.true, %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3757
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3759
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.else
  ret %union.tree_node* null, !dbg !3760
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_flatten_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3761 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3763, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3764, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3765, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3766, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3767, metadata !DIExpression()), !dbg !3768
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3769
  %1 = load i64*, i64** %0, align 8, !dbg !3769
  %bf.load = load i64, i64* %1, align 8, !dbg !3769
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3771
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3771
  br i1 %cmp, label %if.end, label %if.else, !dbg !3772

if.else:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3773
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3775
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  ret %union.tree_node* null, !dbg !3776
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_used_attribute(%union.tree_node** %pnode, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3777 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %pnode, metadata !3779, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3780, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3781, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3782, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3783, metadata !DIExpression()), !dbg !3785
  %0 = load %union.tree_node*, %union.tree_node** %pnode, align 8, !dbg !3786
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3784, metadata !DIExpression()), !dbg !3785
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3787
  %bf.load = load i64, i64* %1, align 8, !dbg !3787
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3789
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3789
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3790

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 32, !dbg !3791
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !3792

land.lhs.true:                                    ; preds = %lor.lhs.false
  %bf.cast93 = and i64 %bf.load, 67108864, !dbg !3793
  %tobool = icmp eq i64 %bf.cast93, 0, !dbg !3793
  br i1 %tobool, label %if.else, label %if.then, !dbg !3794

if.then:                                          ; preds = %land.lhs.true, %entry
  %bf.set = or i64 %bf.load, 16777216, !dbg !3795
  store i64 %bf.set, i64* %1, align 8, !dbg !3795
  %preserve_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3797
  %2 = bitcast i40* %preserve_flag to i64*, !dbg !3797
  %bf.load13 = load i64, i64* %2, align 8, !dbg !3798
  %bf.set15 = or i64 %bf.load13, 8192, !dbg !3798
  store i64 %bf.set15, i64* %2, align 8, !dbg !3798
  br label %if.end, !dbg !3799

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3800
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3802
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !3803
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_unused_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3804 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3806, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3807, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3808, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3809, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3810, metadata !DIExpression()), !dbg !3814
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3815
  %1 = load i64*, i64** %0, align 8, !dbg !3815
  %bf.load = load i64, i64* %1, align 8, !dbg !3815
  %bf.cast = and i64 %bf.load, 65535, !dbg !3815
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3815
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3815
  %cmp = icmp eq i32 %2, 3, !dbg !3815
  %3 = bitcast i64* %1 to %union.tree_node*, !dbg !3816
  br i1 %cmp, label %if.then, label %if.else33, !dbg !3816

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3811, metadata !DIExpression()), !dbg !3817
  %cmp5 = icmp eq i64 %bf.cast, 34, !dbg !3818
  br i1 %cmp5, label %if.then29, label %lor.lhs.false, !dbg !3820

lor.lhs.false:                                    ; preds = %if.then
  %cmp10 = icmp eq i64 %bf.cast, 32, !dbg !3821
  br i1 %cmp10, label %if.then29, label %lor.lhs.false11, !dbg !3822

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp16 = icmp eq i64 %bf.cast, 29, !dbg !3823
  br i1 %cmp16, label %if.then29, label %lor.lhs.false17, !dbg !3824

lor.lhs.false17:                                  ; preds = %lor.lhs.false11
  %cmp22 = icmp eq i64 %bf.cast, 30, !dbg !3825
  br i1 %cmp22, label %if.then29, label %lor.lhs.false23, !dbg !3826

lor.lhs.false23:                                  ; preds = %lor.lhs.false17
  %cmp28 = icmp eq i64 %bf.cast, 35, !dbg !3827
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !3828

if.then29:                                        ; preds = %lor.lhs.false23, %lor.lhs.false17, %lor.lhs.false11, %lor.lhs.false, %if.then
  %bf.set = or i64 %bf.load, 16777216, !dbg !3829
  store i64 %bf.set, i64* %1, align 8, !dbg !3829
  br label %if.end41, !dbg !3830

if.else:                                          ; preds = %lor.lhs.false23
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3831
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3833
  br label %if.end41

if.else33:                                        ; preds = %entry
  %and = and i32 %flags, 8, !dbg !3834
  %tobool = icmp eq i32 %and, 0, !dbg !3834
  br i1 %tobool, label %if.then34, label %if.end36, !dbg !3837

if.then34:                                        ; preds = %if.else33
  %call35 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %3) #7, !dbg !3838
  store %union.tree_node* %call35, %union.tree_node** %node, align 8, !dbg !3839
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3840
  %bf.load38.pre = load i64, i64* %4, align 8, !dbg !3841
  br label %if.end36, !dbg !3840

if.end36:                                         ; preds = %if.else33, %if.then34
  %bf.load38 = phi i64 [ %bf.load, %if.else33 ], [ %bf.load38.pre, %if.then34 ], !dbg !3841
  %5 = phi i64* [ %1, %if.else33 ], [ %4, %if.then34 ], !dbg !3842
  %bf.set40 = or i64 %bf.load38, 16777216, !dbg !3841
  store i64 %bf.set40, i64* %5, align 8, !dbg !3841
  br label %if.end41

if.end41:                                         ; preds = %if.then29, %if.else, %if.end36
  ret %union.tree_node* null, !dbg !3843
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_externally_visible_attribute(%union.tree_node** %pnode, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3844 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %pnode, metadata !3846, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3848, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3849, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3850, metadata !DIExpression()), !dbg !3852
  %0 = load %union.tree_node*, %union.tree_node** %pnode, align 8, !dbg !3853
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3851, metadata !DIExpression()), !dbg !3852
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3854
  %bf.load = load i64, i64* %1, align 8, !dbg !3854
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3856
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3856
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3857

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 32, !dbg !3858
  br i1 %cmp5, label %if.then, label %if.else, !dbg !3859

if.then:                                          ; preds = %lor.lhs.false, %entry
  %bf.cast93 = and i64 %bf.load, 67108864, !dbg !3860
  %tobool = icmp eq i64 %bf.cast93, 0, !dbg !3860
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false21, !dbg !3863

land.lhs.true:                                    ; preds = %if.then
  br i1 %cmp, label %lor.lhs.false21, label %land.lhs.true15, !dbg !3864

land.lhs.true15:                                  ; preds = %land.lhs.true
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3865
  %2 = bitcast i40* %decl_flag_1 to i64*, !dbg !3865
  %bf.load16 = load i64, i64* %2, align 8, !dbg !3865
  %bf.cast196 = and i64 %bf.load16, 33554432, !dbg !3865
  %tobool20 = icmp eq i64 %bf.cast196, 0, !dbg !3865
  br i1 %tobool20, label %if.then28, label %lor.lhs.false21, !dbg !3866

lor.lhs.false21:                                  ; preds = %land.lhs.true15, %land.lhs.true, %if.then
  %bf.cast265 = and i64 %bf.load, 134217728, !dbg !3867
  %tobool27 = icmp eq i64 %bf.cast265, 0, !dbg !3867
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !3868

if.then28:                                        ; preds = %land.lhs.true15, %lor.lhs.false21
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1139, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3869
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3871
  br label %if.end30, !dbg !3872

if.else:                                          ; preds = %lor.lhs.false
  %call29 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3873
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3875
  br label %if.end30

if.end30:                                         ; preds = %lor.lhs.false21, %if.then28, %if.else
  ret %union.tree_node* null, !dbg !3876
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_const_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3877 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3879, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3880, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3881, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3882, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3883, metadata !DIExpression()), !dbg !3885
  %0 = bitcast %union.tree_node** %node to %struct.tree_common**, !dbg !3886
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !3886
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !3886
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3886
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3884, metadata !DIExpression()), !dbg !3885
  %.cast = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 0, i32 0, !dbg !3887
  %bf.load = load i64, i64* %.cast, align 8, !dbg !3887
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3889
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3889
  br i1 %cmp, label %if.then, label %if.else, !dbg !3890

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 0, i32 0, !dbg !3890
  %bf.set = or i64 %bf.load, 1048576, !dbg !3891
  store i64 %bf.set, i64* %3, align 8, !dbg !3891
  br label %if.end31, !dbg !3892

if.else:                                          ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3893
  %bf.load6 = load i64, i64* %4, align 8, !dbg !3893
  %bf.cast82 = and i64 %bf.load6, 65535, !dbg !3895
  %cmp9 = icmp eq i64 %bf.cast82, 10, !dbg !3895
  br i1 %cmp9, label %land.lhs.true, label %if.else29, !dbg !3896

land.lhs.true:                                    ; preds = %if.else
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3897
  %5 = bitcast %union.tree_node** %type11 to i64**, !dbg !3897
  %6 = load i64*, i64** %5, align 8, !dbg !3897
  %bf.load13 = load i64, i64* %6, align 8, !dbg !3897
  %bf.cast153 = and i64 %bf.load13, 65535, !dbg !3898
  %cmp16 = icmp eq i64 %bf.cast153, 20, !dbg !3898
  br i1 %cmp16, label %if.then17, label %if.else29, !dbg !3899

if.then17:                                        ; preds = %land.lhs.true
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !3899
  %bf.cast255 = lshr i64 %bf.load13, 18, !dbg !3900
  %8 = trunc i64 %bf.cast255 to i32, !dbg !3900
  %9 = and i32 %8, 2, !dbg !3900
  %or = or i32 %9, 1, !dbg !3900
  %call = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %7, i32 %or) #7, !dbg !3900
  %call26 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call) #7, !dbg !3901
  %10 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !3902
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !3902
  store %union.tree_node* %call26, %union.tree_node** %type28, align 8, !dbg !3903
  br label %if.end31, !dbg !3902

if.else29:                                        ; preds = %land.lhs.true, %if.else
  %call30 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3904
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3906
  br label %if.end31

if.end31:                                         ; preds = %if.then17, %if.else29, %if.then
  ret %union.tree_node* null, !dbg !3907
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_transparent_union_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3908 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3910, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3911, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3912, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3913, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3914, metadata !DIExpression()), !dbg !3917
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3918
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !3919
  %1 = load i64*, i64** %0, align 8, !dbg !3919
  %bf.load = load i64, i64* %1, align 8, !dbg !3919
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3921
  %cmp = icmp eq i64 %bf.cast1, 35, !dbg !3921
  %2 = bitcast i64* %1 to %union.tree_node*, !dbg !3922
  br i1 %cmp, label %if.then, label %if.end, !dbg !3922

if.then:                                          ; preds = %entry
  %type1 = getelementptr inbounds i64, i64* %1, i64 2, !dbg !3923
  %3 = bitcast i64* %type1 to %union.tree_node**, !dbg !3923
  call void @llvm.dbg.value(metadata %union.tree_node** %3, metadata !3910, metadata !DIExpression()), !dbg !3917
  %.pre = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !3924
  br label %if.end, !dbg !3925

if.end:                                           ; preds = %if.then, %entry
  %4 = phi %union.tree_node* [ %.pre, %if.then ], [ %2, %entry ], !dbg !3924
  %node.addr.0 = phi %union.tree_node** [ %3, %if.then ], [ %node, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node** %node.addr.0, metadata !3910, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3915, metadata !DIExpression()), !dbg !3917
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3926
  %bf.load3 = load i64, i64* %5, align 8, !dbg !3926
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !3928
  %cmp6 = icmp eq i64 %bf.cast52, 17, !dbg !3928
  br i1 %cmp6, label %if.then7, label %ignored, !dbg !3929

if.then7:                                         ; preds = %if.end
  %and = and i32 %flags, 8, !dbg !3930
  %tobool = icmp eq i32 %and, 0, !dbg !3930
  br i1 %tobool, label %if.then8, label %if.end29, !dbg !3933

if.then8:                                         ; preds = %if.then7
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3934
  %6 = bitcast i32* %values to %union.tree_node**, !dbg !3934
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !3934
  %cmp10 = icmp eq %union.tree_node* %7, null, !dbg !3937
  br i1 %cmp10, label %ignored, label %lor.lhs.false, !dbg !3938

lor.lhs.false:                                    ; preds = %if.then8
  br i1 false, label %cond.true, label %cond.false, !dbg !3939

cond.true:                                        ; preds = %lor.lhs.false
  br label %cond.end, !dbg !3939

cond.false:                                       ; preds = %lor.lhs.false
  %type16 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !3939
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i64 0, i32 6, !dbg !3939
  %bf.load17 = load i32, i32* %mode, align 4, !dbg !3939
  %bf.lshr = lshr i32 %bf.load17, 16, !dbg !3939
  %bf.clear18 = and i32 %bf.lshr, 255, !dbg !3939
  %mode21.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3940
  %.phi.trans.insert = bitcast i40* %mode21.phi.trans.insert to i64*, !dbg !3940
  %bf.load22.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3941
  %phitmp = trunc i64 %bf.load22.pre to i32, !dbg !3939
  %phitmp5 = and i32 %phitmp, 255, !dbg !3939
  br label %cond.end, !dbg !3939

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load22 = phi i32 [ 0, %cond.true ], [ %phitmp5, %cond.false ]
  %cond = phi i32 [ undef, %cond.true ], [ %bf.clear18, %cond.false ], !dbg !3939
  %cmp25 = icmp eq i32 %cond, %bf.load22, !dbg !3942
  br i1 %cmp25, label %if.end27, label %ignored, !dbg !3943

if.end27:                                         ; preds = %cond.end
  %call28 = tail call %union.tree_node* @build_duplicate_type(%union.tree_node* %4) #7, !dbg !3944
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !3915, metadata !DIExpression()), !dbg !3917
  store %union.tree_node* %call28, %union.tree_node** %node.addr.0, align 8, !dbg !3945
  br label %if.end29, !dbg !3946

if.end29:                                         ; preds = %if.then7, %if.end27
  %type.0 = phi %union.tree_node* [ %4, %if.then7 ], [ %call28, %if.end27 ], !dbg !3917
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !3915, metadata !DIExpression()), !dbg !3917
  %type30 = bitcast %union.tree_node* %type.0 to %struct.tree_type*, !dbg !3947
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i64 0, i32 6, !dbg !3947
  %bf.load31 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !3948
  %bf.set = or i32 %bf.load31, 4096, !dbg !3948
  store i32 %bf.set, i32* %transparent_aggr_flag, align 4, !dbg !3948
  br label %cleanup, !dbg !3949

ignored:                                          ; preds = %cond.end, %if.end, %if.then8
  call void @llvm.dbg.label(metadata !3916), !dbg !3950
  %call34 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3951
  br label %cleanup, !dbg !3952

cleanup:                                          ; preds = %ignored, %if.end29
  ret %union.tree_node* null, !dbg !3953
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_constructor_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3954 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3956, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3957, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3958, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3959, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3960, metadata !DIExpression()), !dbg !3967
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !3968
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3961, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !3962, metadata !DIExpression()), !dbg !3967
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3969
  %bf.load = load i64, i64* %1, align 8, !dbg !3969
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3970
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !3970
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3971

land.lhs.true:                                    ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3972
  %2 = bitcast %union.tree_node** %type1 to i64**, !dbg !3972
  %3 = load i64*, i64** %2, align 8, !dbg !3972
  %bf.load3 = load i64, i64* %3, align 8, !dbg !3973
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !3974
  %cmp6 = icmp eq i64 %bf.cast52, 20, !dbg !3974
  br i1 %cmp6, label %land.lhs.true7, label %if.else, !dbg !3975

land.lhs.true7:                                   ; preds = %land.lhs.true
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #7, !dbg !3976
  %cmp8 = icmp eq %union.tree_node* %call, null, !dbg !3977
  br i1 %cmp8, label %if.then, label %if.else, !dbg !3978

if.then:                                          ; preds = %land.lhs.true7
  %static_ctor_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 5, !dbg !3979
  %bf.load9 = load i32, i32* %static_ctor_flag, align 8, !dbg !3980
  %bf.set = or i32 %bf.load9, 8192, !dbg !3980
  store i32 %bf.set, i32* %static_ctor_flag, align 8, !dbg !3980
  %call11 = tail call fastcc zeroext i16 @get_priority(%union.tree_node* %args, i8 zeroext 0) #8, !dbg !3981
  call void @llvm.dbg.value(metadata i16 %call11, metadata !3963, metadata !DIExpression()), !dbg !3982
  tail call void @decl_init_priority_insert(%union.tree_node* %0, i16 zeroext %call11) #7, !dbg !3983
  %bf.load13 = load i64, i64* %1, align 8, !dbg !3984
  %bf.set15 = or i64 %bf.load13, 16777216, !dbg !3984
  store i64 %bf.set15, i64* %1, align 8, !dbg !3984
  br label %if.end, !dbg !3985

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  %call16 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !3986
  store i8 1, i8* %no_add_attrs, align 1, !dbg !3988
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !3989
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_destructor_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !3990 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !3992, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3993, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !3994, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3995, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !3996, metadata !DIExpression()), !dbg !4002
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4003
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3997, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !3998, metadata !DIExpression()), !dbg !4002
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4004
  %bf.load = load i64, i64* %1, align 8, !dbg !4004
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4005
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4005
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4006

land.lhs.true:                                    ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4007
  %2 = bitcast %union.tree_node** %type1 to i64**, !dbg !4007
  %3 = load i64*, i64** %2, align 8, !dbg !4007
  %bf.load3 = load i64, i64* %3, align 8, !dbg !4008
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !4009
  %cmp6 = icmp eq i64 %bf.cast52, 20, !dbg !4009
  br i1 %cmp6, label %land.lhs.true7, label %if.else, !dbg !4010

land.lhs.true7:                                   ; preds = %land.lhs.true
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #7, !dbg !4011
  %cmp8 = icmp eq %union.tree_node* %call, null, !dbg !4012
  br i1 %cmp8, label %if.then, label %if.else, !dbg !4013

if.then:                                          ; preds = %land.lhs.true7
  %static_dtor_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 5, !dbg !4014
  %bf.load9 = load i32, i32* %static_dtor_flag, align 8, !dbg !4015
  %bf.set = or i32 %bf.load9, 16384, !dbg !4015
  store i32 %bf.set, i32* %static_dtor_flag, align 8, !dbg !4015
  %call11 = tail call fastcc zeroext i16 @get_priority(%union.tree_node* %args, i8 zeroext 1) #8, !dbg !4016
  call void @llvm.dbg.value(metadata i16 %call11, metadata !3999, metadata !DIExpression()), !dbg !4017
  tail call void @decl_fini_priority_insert(%union.tree_node* %0, i16 zeroext %call11) #7, !dbg !4018
  %bf.load13 = load i64, i64* %1, align 8, !dbg !4019
  %bf.set15 = or i64 %bf.load13, 16777216, !dbg !4019
  store i64 %bf.set15, i64* %1, align 8, !dbg !4019
  br label %if.end, !dbg !4020

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  %call16 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4021
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4023
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !4024
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_mode_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4025 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4027, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4028, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4029, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4030, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4031, metadata !DIExpression()), !dbg !4053
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4054
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4032, metadata !DIExpression()), !dbg !4053
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4055
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4055
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4033, metadata !DIExpression()), !dbg !4053
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4056
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4057
  %bf.load = load i64, i64* %3, align 8, !dbg !4057
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !4058
  %cmp = icmp eq i64 %bf.cast3, 1, !dbg !4058
  br i1 %cmp, label %if.else, label %if.then, !dbg !4059

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4060
  ret %union.tree_node* null, !dbg !4061

if.else:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4062
  %str = bitcast i32* %id to i8**, !dbg !4062
  %4 = load i8*, i8** %str, align 8, !dbg !4062
  call void @llvm.dbg.value(metadata i8* %4, metadata !4037, metadata !DIExpression()), !dbg !4063
  %call1 = tail call i64 @strlen(i8* %4) #7, !dbg !4064
  %conv = trunc i64 %call1 to i32, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4038, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata i32 0, metadata !4039, metadata !DIExpression()), !dbg !4063
  %cmp2 = icmp sgt i32 %conv, 4, !dbg !4065
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !4066

land.lhs.true:                                    ; preds = %if.else
  %5 = load i8, i8* %4, align 1, !dbg !4067
  %cmp5 = icmp eq i8 %5, 95, !dbg !4068
  br i1 %cmp5, label %land.lhs.true7, label %if.end, !dbg !4069

land.lhs.true7:                                   ; preds = %land.lhs.true
  %arrayidx8 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !4070
  %6 = load i8, i8* %arrayidx8, align 1, !dbg !4070
  %cmp10 = icmp eq i8 %6, 95, !dbg !4071
  br i1 %cmp10, label %land.lhs.true12, label %if.end, !dbg !4072

land.lhs.true12:                                  ; preds = %land.lhs.true7
  %sub = shl i64 %call1, 32, !dbg !4073
  %sext = add i64 %sub, -4294967296, !dbg !4073
  %idxprom = ashr exact i64 %sext, 32, !dbg !4073
  %arrayidx13 = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !4073
  %7 = load i8, i8* %arrayidx13, align 1, !dbg !4073
  %cmp15 = icmp eq i8 %7, 95, !dbg !4074
  br i1 %cmp15, label %land.lhs.true17, label %if.end, !dbg !4075

land.lhs.true17:                                  ; preds = %land.lhs.true12
  %sext10 = add i64 %sub, -8589934592, !dbg !4076
  %idxprom19 = ashr exact i64 %sext10, 32, !dbg !4076
  %arrayidx20 = getelementptr inbounds i8, i8* %4, i64 %idxprom19, !dbg !4076
  %8 = load i8, i8* %arrayidx20, align 1, !dbg !4076
  %cmp22 = icmp eq i8 %8, 95, !dbg !4077
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !4078

if.then24:                                        ; preds = %land.lhs.true17
  %9 = alloca i8, i64 %idxprom, align 16, !dbg !4079
  call void @llvm.dbg.value(metadata i8* %9, metadata !4042, metadata !DIExpression()), !dbg !4080
  %arrayidx27 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !4081
  %call28 = call i8* @strcpy(i8* nonnull %9, i8* nonnull %arrayidx27) #7, !dbg !4082
  %sext12 = add i64 %sub, -17179869184, !dbg !4083
  %idxprom30 = ashr exact i64 %sext12, 32, !dbg !4083
  %arrayidx31 = getelementptr inbounds i8, i8* %9, i64 %idxprom30, !dbg !4083
  store i8 0, i8* %arrayidx31, align 1, !dbg !4084
  call void @llvm.dbg.value(metadata i8* %9, metadata !4037, metadata !DIExpression()), !dbg !4063
  br label %if.end, !dbg !4085

if.end:                                           ; preds = %if.then24, %land.lhs.true17, %land.lhs.true12, %land.lhs.true7, %land.lhs.true, %if.else
  %p.0 = phi i8* [ %9, %if.then24 ], [ %4, %land.lhs.true17 ], [ %4, %land.lhs.true12 ], [ %4, %land.lhs.true7 ], [ %4, %land.lhs.true ], [ %4, %if.else ], !dbg !4063
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !4037, metadata !DIExpression()), !dbg !4063
  %call32 = call i32 @strcmp(i8* %p.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1144, i64 0, i64 0)) #7, !dbg !4086
  %tobool = icmp eq i32 %call32, 0, !dbg !4086
  br i1 %tobool, label %if.then33, label %if.else34, !dbg !4088

if.then33:                                        ; preds = %if.end
  %10 = load i32, i32* @byte_mode, align 4, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %10, metadata !4039, metadata !DIExpression()), !dbg !4063
  br label %if.end71, !dbg !4090

if.else34:                                        ; preds = %if.end
  %call35 = call i32 @strcmp(i8* %p.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1145, i64 0, i64 0)) #7, !dbg !4091
  %tobool36 = icmp eq i32 %call35, 0, !dbg !4091
  br i1 %tobool36, label %if.then37, label %if.else38, !dbg !4093

if.then37:                                        ; preds = %if.else34
  %11 = load i32, i32* @word_mode, align 4, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %11, metadata !4039, metadata !DIExpression()), !dbg !4063
  br label %if.end71, !dbg !4095

if.else38:                                        ; preds = %if.else34
  %call39 = call i32 @strcmp(i8* %p.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1146, i64 0, i64 0)) #7, !dbg !4096
  %tobool40 = icmp eq i32 %call39, 0, !dbg !4096
  br i1 %tobool40, label %if.then41, label %if.else42, !dbg !4098

if.then41:                                        ; preds = %if.else38
  %12 = load i32, i32* @ptr_mode, align 4, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %12, metadata !4039, metadata !DIExpression()), !dbg !4063
  br label %if.end71, !dbg !4100

if.else42:                                        ; preds = %if.else38
  %call43 = call i32 @strcmp(i8* %p.0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1147, i64 0, i64 0)) #7, !dbg !4101
  %tobool44 = icmp eq i32 %call43, 0, !dbg !4101
  br i1 %tobool44, label %if.then45, label %if.else47, !dbg !4103

if.then45:                                        ; preds = %if.else42
  %13 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 8), align 8, !dbg !4104
  %call46 = call i32 %13() #7, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %call46, metadata !4039, metadata !DIExpression()), !dbg !4063
  br label %if.end71, !dbg !4106

if.else47:                                        ; preds = %if.else42
  %call48 = call i32 @strcmp(i8* %p.0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1148, i64 0, i64 0)) #7, !dbg !4107
  %tobool49 = icmp eq i32 %call48, 0, !dbg !4107
  br i1 %tobool49, label %if.then50, label %if.else52, !dbg !4109

if.then50:                                        ; preds = %if.else47
  %14 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 9), align 8, !dbg !4110
  %call51 = call i32 %14() #7, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %call51, metadata !4039, metadata !DIExpression()), !dbg !4063
  br label %if.end71, !dbg !4112

if.else52:                                        ; preds = %if.else47
  %call53 = call i32 @strcmp(i8* %p.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1149, i64 0, i64 0)) #7, !dbg !4113
  %tobool54 = icmp eq i32 %call53, 0, !dbg !4113
  br i1 %tobool54, label %if.then55, label %for.cond.preheader, !dbg !4115

for.cond.preheader:                               ; preds = %if.else52
  br label %for.cond, !dbg !4116

if.then55:                                        ; preds = %if.else52
  %15 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 10), align 8, !dbg !4118
  %call56 = call i32 %15() #7, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %call56, metadata !4039, metadata !DIExpression()), !dbg !4063
  br label %if.end71, !dbg !4120

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4121
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4034, metadata !DIExpression()), !dbg !4063
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !4122
  br i1 %exitcond, label %if.end71.loopexit, label %for.body, !dbg !4116

for.body:                                         ; preds = %for.cond
  %arrayidx61 = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %indvars.iv, !dbg !4124
  %16 = load i8*, i8** %arrayidx61, align 8, !dbg !4124
  %call62 = call i32 @strcmp(i8* %p.0, i8* %16) #7, !dbg !4126
  %tobool63 = icmp eq i32 %call62, 0, !dbg !4126
  %17 = trunc i64 %indvars.iv to i32, !dbg !4127
  br i1 %tobool63, label %if.end71.loopexit, label %for.inc, !dbg !4127

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4128
  call void @llvm.dbg.value(metadata i32 undef, metadata !4034, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4063
  br label %for.cond, !dbg !4129, !llvm.loop !4130

if.end71.loopexit:                                ; preds = %for.cond, %for.body
  %mode.6.ph = phi i32 [ %17, %for.body ], [ 0, %for.cond ]
  br label %if.end71, !dbg !4132

if.end71:                                         ; preds = %if.end71.loopexit, %if.then37, %if.then45, %if.then55, %if.then50, %if.then41, %if.then33
  %mode.6 = phi i32 [ %10, %if.then33 ], [ %11, %if.then37 ], [ %12, %if.then41 ], [ %call46, %if.then45 ], [ %call51, %if.then50 ], [ %call56, %if.then55 ], [ %mode.6.ph, %if.end71.loopexit ], !dbg !4134
  call void @llvm.dbg.value(metadata i32 %mode.6, metadata !4039, metadata !DIExpression()), !dbg !4063
  %cmp72 = icmp eq i32 %mode.6, 0, !dbg !4132
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !4135

if.then74:                                        ; preds = %if.end71
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1150, i64 0, i64 0), %union.tree_node* %2) #7, !dbg !4136
  br label %cleanup383, !dbg !4138

if.end75:                                         ; preds = %if.end71
  call void @llvm.dbg.value(metadata i8 0, metadata !4041, metadata !DIExpression()), !dbg !4063
  %idxprom76 = zext i32 %mode.6 to i64, !dbg !4139
  %arrayidx77 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom76, !dbg !4139
  %18 = load i8, i8* %arrayidx77, align 1, !dbg !4139
  switch i8 %18, label %sw.epilog [
    i8 2, label %sw.bb
    i8 3, label %sw.bb
    i8 8, label %sw.bb
    i8 9, label %sw.bb
    i8 4, label %sw.bb
    i8 5, label %sw.bb
    i8 6, label %sw.bb
    i8 7, label %sw.bb
    i8 10, label %sw.bb80
    i8 11, label %sw.bb80
    i8 12, label %sw.bb85
    i8 17, label %sw.bb85
    i8 13, label %sw.bb85
    i8 14, label %sw.bb85
    i8 15, label %sw.bb85
    i8 16, label %sw.bb85
  ], !dbg !4140

sw.bb:                                            ; preds = %if.end75, %if.end75, %if.end75, %if.end75, %if.end75, %if.end75, %if.end75, %if.end75
  %19 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !4141
  %call79 = call zeroext i8 %19(i32 %mode.6) #7, !dbg !4143
  call void @llvm.dbg.value(metadata i8 %call79, metadata !4041, metadata !DIExpression()), !dbg !4063
  br label %sw.epilog, !dbg !4144

sw.bb80:                                          ; preds = %if.end75, %if.end75
  %20 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !4145
  %arrayidx82 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom76, !dbg !4146
  %21 = load i8, i8* %arrayidx82, align 1, !dbg !4146
  %conv83 = zext i8 %21 to i32, !dbg !4146
  %call84 = call zeroext i8 %20(i32 %conv83) #7, !dbg !4147
  call void @llvm.dbg.value(metadata i8 %call84, metadata !4041, metadata !DIExpression()), !dbg !4063
  br label %sw.epilog, !dbg !4148

sw.bb85:                                          ; preds = %if.end75, %if.end75, %if.end75, %if.end75, %if.end75, %if.end75
  %call86 = call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1151, i64 0, i64 0)) #7, !dbg !4149
  %call87 = call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1152, i64 0, i64 0)) #7, !dbg !4150
  %call88 = call i32 @vector_mode_valid_p(i32 %mode.6) #7, !dbg !4151
  %conv89 = trunc i32 %call88 to i8, !dbg !4151
  call void @llvm.dbg.value(metadata i8 %conv89, metadata !4041, metadata !DIExpression()), !dbg !4063
  br label %sw.epilog, !dbg !4152

sw.epilog:                                        ; preds = %if.end75, %sw.bb85, %sw.bb80, %sw.bb
  %valid_mode.0 = phi i8 [ %conv89, %sw.bb85 ], [ %call84, %sw.bb80 ], [ %call79, %sw.bb ], [ 0, %if.end75 ], !dbg !4063
  call void @llvm.dbg.value(metadata i8 %valid_mode.0, metadata !4041, metadata !DIExpression()), !dbg !4063
  %tobool90 = icmp eq i8 %valid_mode.0, 0, !dbg !4153
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !4155

if.then91:                                        ; preds = %sw.epilog
  call void (i8*, ...) @error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1153, i64 0, i64 0), i8* %p.0) #7, !dbg !4156
  br label %cleanup383, !dbg !4158

if.end92:                                         ; preds = %sw.epilog
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4159
  %bf.load94 = load i64, i64* %22, align 8, !dbg !4159
  %bf.cast964 = and i64 %bf.load94, 65535, !dbg !4159
  %cmp97 = icmp eq i64 %bf.cast964, 10, !dbg !4159
  br i1 %cmp97, label %if.then105, label %lor.lhs.false, !dbg !4159

lor.lhs.false:                                    ; preds = %if.end92
  %cmp103 = icmp eq i64 %bf.cast964, 12, !dbg !4159
  br i1 %cmp103, label %if.then105, label %if.else128, !dbg !4160

if.then105:                                       ; preds = %lor.lhs.false, %if.end92
  %type106 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4161
  %23 = bitcast %union.tree_node** %type106 to i64**, !dbg !4161
  %24 = load i64*, i64** %23, align 8, !dbg !4161
  %bf.load108 = load i64, i64* %24, align 8, !dbg !4161
  %bf.lshr = lshr i64 %bf.load108, 56, !dbg !4161
  %conv110 = trunc i64 %bf.lshr to i8, !dbg !4161
  call void @llvm.dbg.value(metadata i8 %conv110, metadata !4045, metadata !DIExpression()), !dbg !4162
  %25 = load i8 (i32, i8)*, i8 (i32, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 2), align 8, !dbg !4163
  %call111 = call zeroext i8 %25(i32 %mode.6, i8 zeroext %conv110) #7, !dbg !4165
  %tobool112 = icmp eq i8 %call111, 0, !dbg !4165
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !4166

if.then113:                                       ; preds = %if.then105
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1154, i64 0, i64 0), i8* %p.0) #7, !dbg !4167
  br label %cleanup, !dbg !4169

if.end114:                                        ; preds = %if.then105
  %bf.load116 = load i64, i64* %22, align 8, !dbg !4170
  %bf.cast1189 = and i64 %bf.load116, 65535, !dbg !4172
  %cmp119 = icmp eq i64 %bf.cast1189, 10, !dbg !4172
  %build_pointer_type_for_mode.build_reference_type_for_mode = select i1 %cmp119, %union.tree_node* (%union.tree_node*, i32, i8)* @build_pointer_type_for_mode, %union.tree_node* (%union.tree_node*, i32, i8)* @build_reference_type_for_mode
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node*, i32, i8)* %build_pointer_type_for_mode.build_reference_type_for_mode, metadata !4049, metadata !DIExpression()), !dbg !4162
  %26 = load %union.tree_node*, %union.tree_node** %type106, align 8, !dbg !4173
  %call126 = call %union.tree_node* %build_pointer_type_for_mode.build_reference_type_for_mode(%union.tree_node* %26, i32 %mode.6, i8 zeroext 0) #7, !dbg !4174
  call void @llvm.dbg.value(metadata %union.tree_node* %call126, metadata !4040, metadata !DIExpression()), !dbg !4063
  br label %cleanup, !dbg !4175

cleanup:                                          ; preds = %if.end114, %if.then113
  %typefm.0 = phi %union.tree_node* [ %call126, %if.end114 ], [ undef, %if.then113 ]
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end114 ], [ false, %if.then113 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %typefm.0, metadata !4040, metadata !DIExpression()), !dbg !4063
  br i1 %cleanup.dest.slot.0, label %if.end267, label %cleanup383

if.else128:                                       ; preds = %lor.lhs.false
  %cmp132 = icmp eq i8 %18, 4, !dbg !4176
  br i1 %cmp132, label %land.lhs.true176, label %lor.lhs.false134, !dbg !4176

lor.lhs.false134:                                 ; preds = %if.else128
  %cmp138 = icmp eq i8 %18, 13, !dbg !4176
  br i1 %cmp138, label %land.lhs.true176, label %lor.lhs.false140, !dbg !4176

lor.lhs.false140:                                 ; preds = %lor.lhs.false134
  %cmp144 = icmp eq i8 %18, 6, !dbg !4176
  br i1 %cmp144, label %land.lhs.true176, label %lor.lhs.false146, !dbg !4176

lor.lhs.false146:                                 ; preds = %lor.lhs.false140
  %cmp150 = icmp eq i8 %18, 15, !dbg !4176
  br i1 %cmp150, label %land.lhs.true176, label %lor.lhs.false152, !dbg !4176

lor.lhs.false152:                                 ; preds = %lor.lhs.false146
  %cmp156 = icmp eq i8 %18, 5, !dbg !4176
  br i1 %cmp156, label %land.lhs.true176, label %lor.lhs.false158, !dbg !4176

lor.lhs.false158:                                 ; preds = %lor.lhs.false152
  %cmp162 = icmp eq i8 %18, 14, !dbg !4176
  br i1 %cmp162, label %land.lhs.true176, label %lor.lhs.false164, !dbg !4176

lor.lhs.false164:                                 ; preds = %lor.lhs.false158
  %cmp168 = icmp eq i8 %18, 7, !dbg !4176
  br i1 %cmp168, label %land.lhs.true176, label %lor.lhs.false170, !dbg !4176

lor.lhs.false170:                                 ; preds = %lor.lhs.false164
  %cmp174 = icmp eq i8 %18, 16, !dbg !4176
  br i1 %cmp174, label %land.lhs.true176, label %if.end208, !dbg !4179

land.lhs.true176:                                 ; preds = %lor.lhs.false170, %lor.lhs.false164, %lor.lhs.false158, %lor.lhs.false152, %lor.lhs.false146, %lor.lhs.false140, %lor.lhs.false134, %if.else128
  %cmp185 = icmp eq i8 %18, 5, !dbg !4180
  br i1 %cmp185, label %lor.end204, label %lor.lhs.false187, !dbg !4180

lor.lhs.false187:                                 ; preds = %land.lhs.true176
  %cmp191 = icmp eq i8 %18, 14, !dbg !4180
  br i1 %cmp191, label %lor.end204, label %lor.rhs, !dbg !4180

lor.rhs:                                          ; preds = %lor.lhs.false187
  %cmp196 = icmp eq i8 %18, 7, !dbg !4180
  br i1 %cmp196, label %lor.end204, label %lor.rhs198, !dbg !4180

lor.rhs198:                                       ; preds = %lor.rhs
  %cmp202 = icmp eq i8 %18, 16, !dbg !4180
  br label %lor.end204, !dbg !4180

lor.end204:                                       ; preds = %lor.rhs, %lor.rhs198, %lor.lhs.false187, %land.lhs.true176
  %27 = phi i1 [ true, %lor.lhs.false187 ], [ true, %land.lhs.true176 ], [ true, %lor.rhs ], [ %cmp202, %lor.rhs198 ]
  %28 = and i64 %bf.load94, 2097152, !dbg !4181
  %29 = icmp ne i64 %28, 0, !dbg !4181
  %cmp205 = xor i1 %27, %29, !dbg !4181
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !4182

if.then207:                                       ; preds = %lor.end204
  call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1155, i64 0, i64 0), i8* %p.0) #7, !dbg !4183
  br label %cleanup383, !dbg !4185

if.end208:                                        ; preds = %lor.end204, %lor.lhs.false170
  %30 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !4186
  br i1 %cmp132, label %cond.true, label %lor.lhs.false214, !dbg !4187

lor.lhs.false214:                                 ; preds = %if.end208
  %cmp218 = icmp eq i8 %18, 13, !dbg !4187
  br i1 %cmp218, label %cond.true, label %lor.lhs.false220, !dbg !4187

lor.lhs.false220:                                 ; preds = %lor.lhs.false214
  %cmp224 = icmp eq i8 %18, 6, !dbg !4187
  br i1 %cmp224, label %cond.true, label %lor.lhs.false226, !dbg !4187

lor.lhs.false226:                                 ; preds = %lor.lhs.false220
  %cmp230 = icmp eq i8 %18, 15, !dbg !4187
  br i1 %cmp230, label %cond.true, label %lor.lhs.false232, !dbg !4187

lor.lhs.false232:                                 ; preds = %lor.lhs.false226
  %cmp236 = icmp eq i8 %18, 5, !dbg !4187
  br i1 %cmp236, label %cond.true, label %lor.lhs.false238, !dbg !4187

lor.lhs.false238:                                 ; preds = %lor.lhs.false232
  %cmp242 = icmp eq i8 %18, 14, !dbg !4187
  br i1 %cmp242, label %cond.true, label %lor.lhs.false244, !dbg !4187

lor.lhs.false244:                                 ; preds = %lor.lhs.false238
  %cmp248 = icmp eq i8 %18, 7, !dbg !4187
  br i1 %cmp248, label %cond.true, label %lor.lhs.false250, !dbg !4187

lor.lhs.false250:                                 ; preds = %lor.lhs.false244
  %cmp254 = icmp eq i8 %18, 16, !dbg !4187
  br i1 %cmp254, label %cond.true, label %cond.false, !dbg !4187

cond.true:                                        ; preds = %lor.lhs.false250, %lor.lhs.false244, %lor.lhs.false238, %lor.lhs.false232, %lor.lhs.false226, %lor.lhs.false220, %lor.lhs.false214, %if.end208
  %bf.lshr258 = lshr i64 %bf.load94, 31, !dbg !4188
  br label %cond.end, !dbg !4187

cond.false:                                       ; preds = %lor.lhs.false250
  %bf.lshr263 = lshr i64 %bf.load94, 21, !dbg !4189
  br label %cond.end, !dbg !4187

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in.in = phi i64 [ %bf.lshr258, %cond.true ], [ %bf.lshr263, %cond.false ]
  %cond.in = trunc i64 %cond.in.in to i32, !dbg !4190
  %cond = and i32 %cond.in, 1, !dbg !4187
  %call266 = call %union.tree_node* %30(i32 %mode.6, i32 %cond) #7, !dbg !4191
  call void @llvm.dbg.value(metadata %union.tree_node* %call266, metadata !4040, metadata !DIExpression()), !dbg !4063
  br label %if.end267

if.end267:                                        ; preds = %cleanup, %cond.end
  %typefm.1 = phi %union.tree_node* [ %call266, %cond.end ], [ %typefm.0, %cleanup ], !dbg !4192
  call void @llvm.dbg.value(metadata %union.tree_node* %typefm.1, metadata !4040, metadata !DIExpression()), !dbg !4063
  %cmp268 = icmp eq %union.tree_node* %typefm.1, null, !dbg !4193
  br i1 %cmp268, label %if.then270, label %if.else271, !dbg !4195

if.then270:                                       ; preds = %if.end267
  call void (i8*, ...) @error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1156, i64 0, i64 0), i8* %p.0) #7, !dbg !4196
  br label %cleanup383, !dbg !4198

if.else271:                                       ; preds = %if.end267
  %bf.load273 = load i64, i64* %22, align 8, !dbg !4199
  %bf.cast2756 = and i64 %bf.load273, 65535, !dbg !4201
  %cmp276 = icmp eq i64 %bf.cast2756, 6, !dbg !4201
  br i1 %cmp276, label %if.then278, label %if.else319, !dbg !4202

if.then278:                                       ; preds = %if.else271
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %typefm.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4203
  %bf.load280 = load i64, i64* %31, align 8, !dbg !4203
  %bf.cast2827 = and i64 %bf.load280, 65535, !dbg !4206
  %cmp283 = icmp eq i64 %bf.cast2827, 8, !dbg !4206
  br i1 %cmp283, label %if.end286, label %if.then285, !dbg !4207

if.then285:                                       ; preds = %if.then278
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1157, i64 0, i64 0), i8* %p.0) #7, !dbg !4208
  br label %cleanup383, !dbg !4210

if.end286:                                        ; preds = %if.then278
  %and = and i32 %flags, 8, !dbg !4211
  %tobool287 = icmp eq i32 %and, 0, !dbg !4211
  br i1 %tobool287, label %if.else296, label %if.then288, !dbg !4213

if.then288:                                       ; preds = %if.end286
  %type289 = bitcast %union.tree_node* %typefm.1 to %struct.tree_type*, !dbg !4214
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type289, i64 0, i32 6, !dbg !4214
  %bf.load290 = load i32, i32* %precision, align 4, !dbg !4214
  %bf.clear291 = and i32 %bf.load290, 1023, !dbg !4214
  %type292 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !4216
  %precision293 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type292, i64 0, i32 6, !dbg !4216
  %bf.load294 = load i32, i32* %precision293, align 4, !dbg !4217
  %bf.clear295 = and i32 %bf.load294, -1024, !dbg !4217
  %bf.set = or i32 %bf.clear295, %bf.clear291, !dbg !4217
  store i32 %bf.set, i32* %precision293, align 4, !dbg !4217
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4040, metadata !DIExpression()), !dbg !4063
  br label %if.end382, !dbg !4218

if.else296:                                       ; preds = %if.end286
  %bf.cast3018 = and i64 %bf.load273, 2097152, !dbg !4219
  %tobool302 = icmp eq i64 %bf.cast3018, 0, !dbg !4219
  %type304 = bitcast %union.tree_node* %typefm.1 to %struct.tree_type*, !dbg !4222
  %precision305 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type304, i64 0, i32 6, !dbg !4222
  %bf.load306 = load i32, i32* %precision305, align 4, !dbg !4222
  %bf.clear307 = and i32 %bf.load306, 1023, !dbg !4222
  br i1 %tobool302, label %if.else309, label %if.then303, !dbg !4223

if.then303:                                       ; preds = %if.else296
  %call308 = call %union.tree_node* @make_unsigned_type(i32 %bf.clear307) #7, !dbg !4224
  call void @llvm.dbg.value(metadata %union.tree_node* %call308, metadata !4040, metadata !DIExpression()), !dbg !4063
  br label %if.end315, !dbg !4225

if.else309:                                       ; preds = %if.else296
  %call314 = call %union.tree_node* @make_signed_type(i32 %bf.clear307) #7, !dbg !4226
  call void @llvm.dbg.value(metadata %union.tree_node* %call314, metadata !4040, metadata !DIExpression()), !dbg !4063
  br label %if.end315

if.end315:                                        ; preds = %if.else309, %if.then303
  %typefm.2 = phi %union.tree_node* [ %call308, %if.then303 ], [ %call314, %if.else309 ], !dbg !4222
  call void @llvm.dbg.value(metadata %union.tree_node* %typefm.2, metadata !4040, metadata !DIExpression()), !dbg !4063
  %type317 = getelementptr inbounds %union.tree_node, %union.tree_node* %typefm.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4227
  store %union.tree_node* %0, %union.tree_node** %type317, align 8, !dbg !4228
  br label %if.end382

if.else319:                                       ; preds = %if.else271
  %cmp323 = icmp eq i8 %18, 12, !dbg !4229
  br i1 %cmp323, label %cond.true355, label %lor.lhs.false325, !dbg !4229

lor.lhs.false325:                                 ; preds = %if.else319
  %cmp329 = icmp eq i8 %18, 17, !dbg !4229
  br i1 %cmp329, label %cond.true355, label %lor.lhs.false331, !dbg !4229

lor.lhs.false331:                                 ; preds = %lor.lhs.false325
  %cmp335 = icmp eq i8 %18, 13, !dbg !4229
  br i1 %cmp335, label %cond.true355, label %lor.lhs.false337, !dbg !4229

lor.lhs.false337:                                 ; preds = %lor.lhs.false331
  %cmp341 = icmp eq i8 %18, 14, !dbg !4229
  br i1 %cmp341, label %cond.true355, label %lor.lhs.false343, !dbg !4229

lor.lhs.false343:                                 ; preds = %lor.lhs.false337
  %cmp347 = icmp eq i8 %18, 15, !dbg !4229
  br i1 %cmp347, label %cond.true355, label %lor.lhs.false349, !dbg !4229

lor.lhs.false349:                                 ; preds = %lor.lhs.false343
  %cmp353 = icmp eq i8 %18, 16, !dbg !4229
  br i1 %cmp353, label %cond.true355, label %cond.false368, !dbg !4231

cond.true355:                                     ; preds = %lor.lhs.false349, %lor.lhs.false343, %lor.lhs.false337, %lor.lhs.false331, %lor.lhs.false325, %if.else319
  %type361 = getelementptr inbounds %union.tree_node, %union.tree_node* %typefm.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4232
  %32 = bitcast %union.tree_node** %type361 to i64**, !dbg !4232
  %33 = load i64*, i64** %32, align 8, !dbg !4232
  %bf.load363 = load i64, i64* %33, align 8, !dbg !4232
  %34 = xor i64 %bf.load273, %bf.load363, !dbg !4233
  %35 = and i64 %34, 65535, !dbg !4233
  %cmp366 = icmp eq i64 %35, 0, !dbg !4233
  br i1 %cmp366, label %if.end382, label %if.then379, !dbg !4229

cond.false368:                                    ; preds = %lor.lhs.false349
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %typefm.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4234
  %bf.load374 = load i64, i64* %36, align 8, !dbg !4234
  %37 = xor i64 %bf.load273, %bf.load374, !dbg !4235
  %38 = and i64 %37, 65535, !dbg !4235
  %cmp377 = icmp eq i64 %38, 0, !dbg !4235
  br i1 %cmp377, label %if.end382, label %if.then379, !dbg !4231

if.then379:                                       ; preds = %cond.true355, %cond.false368
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1158, i64 0, i64 0), i8* %p.0) #7, !dbg !4236
  br label %cleanup383, !dbg !4238

if.end382:                                        ; preds = %cond.true355, %cond.false368, %if.end315, %if.then288
  %typefm.4 = phi %union.tree_node* [ %0, %if.then288 ], [ %typefm.2, %if.end315 ], [ %typefm.1, %cond.false368 ], [ %typefm.1, %cond.true355 ], !dbg !4063
  call void @llvm.dbg.value(metadata %union.tree_node* %typefm.4, metadata !4040, metadata !DIExpression()), !dbg !4063
  store %union.tree_node* %typefm.4, %union.tree_node** %node, align 8, !dbg !4239
  br label %cleanup383, !dbg !4240

cleanup383:                                       ; preds = %cleanup, %if.end382, %if.then379, %if.then285, %if.then270, %if.then207, %if.then91, %if.then74
  ret %union.tree_node* null
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_section_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4241 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4243, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4244, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4245, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4246, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4247, metadata !DIExpression()), !dbg !4249
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4250
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4248, metadata !DIExpression()), !dbg !4249
  %1 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !4251
  %tobool = icmp eq i8 %1, 0, !dbg !4253
  br i1 %tobool, label %if.else63, label %if.then, !dbg !4254

if.then:                                          ; preds = %entry
  store i8 1, i8* @user_defined_section_attribute, align 1, !dbg !4255
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4257
  %bf.load = load i64, i64* %2, align 8, !dbg !4257
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !4259
  %cmp = icmp eq i64 %bf.cast3, 29, !dbg !4259
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4260

lor.lhs.false:                                    ; preds = %if.then
  %cmp5 = icmp eq i64 %bf.cast3, 32, !dbg !4261
  br i1 %cmp5, label %land.lhs.true, label %if.else61, !dbg !4262

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4263
  %4 = bitcast %union.tree_node** %3 to i64**, !dbg !4263
  %5 = load i64*, i64** %4, align 8, !dbg !4263
  %bf.load7 = load i64, i64* %5, align 8, !dbg !4263
  %bf.cast95 = and i64 %bf.load7, 65535, !dbg !4264
  %cmp10 = icmp eq i64 %bf.cast95, 28, !dbg !4264
  %6 = bitcast i64* %5 to %struct.tree_string*, !dbg !4265
  br i1 %cmp10, label %if.then11, label %if.else61, !dbg !4265

if.then11:                                        ; preds = %land.lhs.true
  %cmp16 = icmp eq i64 %bf.cast3, 32, !dbg !4266
  %7 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4269
  %cmp18 = icmp ne %union.tree_node* %7, null, !dbg !4270
  %or.cond = and i1 %cmp16, %cmp18, !dbg !4271
  br i1 %or.cond, label %land.lhs.true19, label %if.else, !dbg !4271

land.lhs.true19:                                  ; preds = %if.then11
  %bf.cast238 = and i64 %bf.load, 67108864, !dbg !4272
  %tobool24 = icmp eq i64 %bf.cast238, 0, !dbg !4272
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !4273

if.then25:                                        ; preds = %land.lhs.true19
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4274
  %8 = load i32, i32* %locus, align 8, !dbg !4274
  tail call void (i32, i8*, ...) @error_at(i32 %8, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1159, i64 0, i64 0)) #7, !dbg !4276
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4277
  br label %if.end66, !dbg !4278

if.else:                                          ; preds = %land.lhs.true19, %if.then11
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4279
  %9 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !4279
  %cmp26 = icmp eq %union.tree_node* %9, null, !dbg !4281
  br i1 %cmp26, label %if.else37, label %land.lhs.true27, !dbg !4282

land.lhs.true27:                                  ; preds = %if.else
  %arraydecay = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4283
  %10 = bitcast i32* %arraydecay to i8*, !dbg !4283
  %arraydecay34 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %6, i64 0, i32 2, i64 0, !dbg !4284
  %call = tail call i32 @strcmp(i8* nonnull %10, i8* nonnull %arraydecay34) #7, !dbg !4285
  %cmp35 = icmp eq i32 %call, 0, !dbg !4286
  br i1 %cmp35, label %land.lhs.true27.if.else37_crit_edge, label %if.then36, !dbg !4287

land.lhs.true27.if.else37_crit_edge:              ; preds = %land.lhs.true27
  %bf.load39.pre = load i64, i64* %2, align 8, !dbg !4288
  br label %if.else37, !dbg !4287

if.then36:                                        ; preds = %land.lhs.true27
  %11 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4290
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1160, i64 0, i64 0), %union.tree_node* %11) #7, !dbg !4292
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4293
  br label %if.end66, !dbg !4294

if.else37:                                        ; preds = %land.lhs.true27.if.else37_crit_edge, %if.else
  %bf.load39 = phi i64 [ %bf.load39.pre, %land.lhs.true27.if.else37_crit_edge ], [ %bf.load, %if.else ], !dbg !4288
  %bf.cast417 = and i64 %bf.load39, 65535, !dbg !4295
  %cmp42 = icmp eq i64 %bf.cast417, 32, !dbg !4295
  %12 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !4296
  %tobool44 = icmp eq i8 %12, 0, !dbg !4297
  %or.cond1.not = and i1 %tobool44, %cmp42, !dbg !4298
  %13 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 3), align 8, !dbg !4299
  %tobool46 = icmp ne i8* %13, null, !dbg !4300
  %or.cond2 = and i1 %or.cond1.not, %tobool46, !dbg !4298
  br i1 %or.cond2, label %land.lhs.true47, label %if.else54, !dbg !4298

land.lhs.true47:                                  ; preds = %if.else37
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4301
  %14 = bitcast i24* %tls_model to i32*, !dbg !4301
  %bf.load49 = load i32, i32* %14, align 8, !dbg !4301
  %bf.clear51 = and i32 %bf.load49, 49152, !dbg !4301
  %cmp52 = icmp eq i32 %bf.clear51, 0, !dbg !4301
  br i1 %cmp52, label %if.else54, label %if.then53, !dbg !4302

if.then53:                                        ; preds = %land.lhs.true47
  %15 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4303
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1161, i64 0, i64 0), %union.tree_node* %15) #7, !dbg !4305
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4306
  br label %if.end66, !dbg !4307

if.else54:                                        ; preds = %land.lhs.true47, %if.else37
  %16 = bitcast %union.tree_node** %3 to i64*, !dbg !4308
  %17 = load i64, i64* %16, align 8, !dbg !4308
  %18 = bitcast %union.tree_node** %section_name to i64*, !dbg !4309
  store i64 %17, i64* %18, align 8, !dbg !4309
  br label %if.end66

if.else61:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %19 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4310
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1162, i64 0, i64 0), %union.tree_node* %19) #7, !dbg !4312
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4313
  br label %if.end66

if.else63:                                        ; preds = %entry
  %locus65 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4314
  %20 = load i32, i32* %locus65, align 8, !dbg !4314
  tail call void (i32, i8*, ...) @error_at(i32 %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1163, i64 0, i64 0)) #7, !dbg !4316
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4317
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then36, %if.else54, %if.then53, %if.then25, %if.else63
  ret %union.tree_node* null, !dbg !4318
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_aligned_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4319 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4321, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4322, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4323, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4324, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4325, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4326, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata %union.tree_node** null, metadata !4327, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 0, metadata !4328, metadata !DIExpression()), !dbg !4339
  %tobool = icmp eq %union.tree_node* %args, null, !dbg !4340
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4340

cond.true:                                        ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4341
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4341
  br label %cond.end, !dbg !4340

cond.false:                                       ; preds = %entry
  %call = tail call %union.tree_node* @size_int_kind(i64 16, i32 0) #7, !dbg !4342
  br label %cond.end, !dbg !4340

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ %call, %cond.false ], !dbg !4340
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !4329, metadata !DIExpression()), !dbg !4339
  %2 = bitcast %union.tree_node** %node to i64**, !dbg !4343
  %3 = load i64*, i64** %2, align 8, !dbg !4343
  %bf.load = load i64, i64* %3, align 8, !dbg !4343
  %bf.cast = and i64 %bf.load, 65535, !dbg !4343
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4343
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4343
  %cmp = icmp eq i32 %4, 3, !dbg !4343
  br i1 %cmp, label %if.then, label %if.else, !dbg !4345

if.then:                                          ; preds = %cond.end
  %.cast = bitcast i64* %3 to %union.tree_node*, !dbg !4346
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !4326, metadata !DIExpression()), !dbg !4339
  %type1 = getelementptr inbounds i64, i64* %3, i64 2, !dbg !4347
  %5 = bitcast i64* %type1 to %union.tree_node**, !dbg !4347
  call void @llvm.dbg.value(metadata %union.tree_node** %5, metadata !4327, metadata !DIExpression()), !dbg !4339
  %cmp6 = icmp eq i64 %bf.cast, 35, !dbg !4349
  call void @llvm.dbg.value(metadata i1 %cmp6, metadata !4328, metadata !DIExpression()), !dbg !4339
  br label %if.end16, !dbg !4350

if.else:                                          ; preds = %cond.end
  %cmp13 = icmp eq i32 %4, 2, !dbg !4351
  %spec.select = select i1 %cmp13, %union.tree_node** %node, %union.tree_node** null, !dbg !4353
  call void @llvm.dbg.value(metadata i1 %cmp13, metadata !4328, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata %union.tree_node** %spec.select, metadata !4327, metadata !DIExpression()), !dbg !4339
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then
  %decl.0 = phi %union.tree_node* [ %.cast, %if.then ], [ null, %if.else ], !dbg !4339
  %type.1 = phi %union.tree_node** [ %5, %if.then ], [ %spec.select, %if.else ], !dbg !4346
  %is_type.1.in = phi i1 [ %cmp6, %if.then ], [ %cmp13, %if.else ]
  call void @llvm.dbg.value(metadata i1 %is_type.1.in, metadata !4328, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata %union.tree_node** %type.1, metadata !4327, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !4326, metadata !DIExpression()), !dbg !4339
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4354
  %bf.load18 = load i64, i64* %6, align 8, !dbg !4354
  %bf.cast202 = and i64 %bf.load18, 65535, !dbg !4355
  %cmp21 = icmp eq i64 %bf.cast202, 23, !dbg !4355
  br i1 %cmp21, label %if.else24, label %if.then23, !dbg !4356

if.then23:                                        ; preds = %if.end16
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1164, i64 0, i64 0)) #7, !dbg !4357
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4359
  br label %if.end138, !dbg !4360

if.else24:                                        ; preds = %if.end16
  %call25 = tail call i32 @tree_log2(%union.tree_node* %cond) #7, !dbg !4361
  call void @llvm.dbg.value(metadata i32 %call25, metadata !4330, metadata !DIExpression()), !dbg !4339
  %cmp26 = icmp eq i32 %call25, -1, !dbg !4362
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !4363

if.then28:                                        ; preds = %if.else24
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1165, i64 0, i64 0)) #7, !dbg !4364
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4366
  br label %if.end138, !dbg !4367

if.else29:                                        ; preds = %if.else24
  %cmp30 = icmp sgt i32 %call25, 28, !dbg !4368
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !4369

if.then32:                                        ; preds = %if.else29
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1166, i64 0, i64 0)) #7, !dbg !4370
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4372
  br label %if.end138, !dbg !4373

if.else33:                                        ; preds = %if.else29
  br i1 %is_type.1.in, label %if.then35, label %if.else73, !dbg !4374

if.then35:                                        ; preds = %if.else33
  %tobool36 = icmp eq %union.tree_node* %decl.0, null, !dbg !4375
  br i1 %tobool36, label %if.else61, label %land.lhs.true, !dbg !4376

land.lhs.true:                                    ; preds = %if.then35
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4377
  %7 = load %union.tree_node*, %union.tree_node** %type38, align 8, !dbg !4377
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4378
  %cmp39 = icmp eq %union.tree_node* %7, %8, !dbg !4379
  %9 = ptrtoint %union.tree_node* %7 to i64, !dbg !4380
  br i1 %cmp39, label %if.else61, label %land.lhs.true41, !dbg !4380

land.lhs.true41:                                  ; preds = %land.lhs.true
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 3, !dbg !4381
  %10 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4381
  %cmp42 = icmp eq %union.tree_node* %10, null, !dbg !4382
  br i1 %cmp42, label %if.then44, label %if.else61, !dbg !4383

if.then44:                                        ; preds = %land.lhs.true41
  %11 = bitcast %union.tree_node** %type38 to i64*, !dbg !4384
  %12 = load %union.tree_node*, %union.tree_node** %type.1, align 8, !dbg !4385
  %call47 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %12) #7, !dbg !4386
  store %union.tree_node* %call47, %union.tree_node** %type.1, align 8, !dbg !4387
  %13 = bitcast %union.tree_node** %result to i64*, !dbg !4388
  store i64 %9, i64* %13, align 8, !dbg !4388
  %14 = bitcast %union.tree_node** %type.1 to %struct.tree_type**, !dbg !4389
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !4389
  %name51 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 12, !dbg !4389
  store %union.tree_node* %decl.0, %union.tree_node** %name51, align 8, !dbg !4390
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4391
  %bf.load53 = load i64, i64* %16, align 8, !dbg !4391
  %bf.cast55 = and i64 %bf.load53, 16777216, !dbg !4391
  %17 = bitcast %union.tree_node** %type.1 to i64**, !dbg !4392
  %18 = load i64*, i64** %17, align 8, !dbg !4392
  %bf.load57 = load i64, i64* %18, align 8, !dbg !4393
  %bf.clear58 = and i64 %bf.load57, -16777217, !dbg !4393
  %bf.set = or i64 %bf.clear58, %bf.cast55, !dbg !4393
  store i64 %bf.set, i64* %18, align 8, !dbg !4393
  %19 = bitcast %union.tree_node** %type.1 to i64*, !dbg !4394
  %20 = load i64, i64* %19, align 8, !dbg !4394
  store i64 %20, i64* %11, align 8, !dbg !4395
  br label %if.end66, !dbg !4396

if.else61:                                        ; preds = %land.lhs.true, %if.then35, %land.lhs.true41
  %and = and i32 %flags, 8, !dbg !4397
  %tobool62 = icmp eq i32 %and, 0, !dbg !4397
  br i1 %tobool62, label %if.then63, label %if.end66, !dbg !4399

if.then63:                                        ; preds = %if.else61
  %21 = load %union.tree_node*, %union.tree_node** %type.1, align 8, !dbg !4400
  %call64 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %21) #7, !dbg !4401
  store %union.tree_node* %call64, %union.tree_node** %type.1, align 8, !dbg !4402
  br label %if.end66, !dbg !4403

if.end66:                                         ; preds = %if.else61, %if.then63, %if.then44
  %mul = shl i32 8, %call25, !dbg !4404
  %22 = bitcast %union.tree_node** %type.1 to %struct.tree_type**, !dbg !4405
  %23 = load %struct.tree_type*, %struct.tree_type** %22, align 8, !dbg !4405
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %23, i64 0, i32 7, !dbg !4405
  store i32 %mul, i32* %align, align 8, !dbg !4406
  %24 = bitcast %union.tree_node** %type.1 to %struct.tree_common**, !dbg !4407
  %25 = load %struct.tree_common*, %struct.tree_common** %24, align 8, !dbg !4407
  %26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %25, i64 0, i32 0, i32 0, !dbg !4407
  %bf.load70 = load i64, i64* %26, align 8, !dbg !4408
  %bf.set72 = or i64 %bf.load70, 4398046511104, !dbg !4408
  store i64 %bf.set72, i64* %26, align 8, !dbg !4408
  br label %if.end138, !dbg !4409

if.else73:                                        ; preds = %if.else33
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4410
  %bf.load75 = load i64, i64* %27, align 8, !dbg !4410
  %bf.cast773 = and i64 %bf.load75, 65535, !dbg !4410
  %cmp78 = icmp eq i64 %bf.cast773, 32, !dbg !4410
  br i1 %cmp78, label %if.else94, label %lor.lhs.false, !dbg !4410

lor.lhs.false:                                    ; preds = %if.else73
  %cmp84 = icmp eq i64 %bf.cast773, 29, !dbg !4410
  br i1 %cmp84, label %if.else94, label %land.lhs.true86, !dbg !4412

land.lhs.true86:                                  ; preds = %lor.lhs.false
  %cmp91 = icmp eq i64 %bf.cast773, 31, !dbg !4413
  br i1 %cmp91, label %if.else94, label %if.then93, !dbg !4414

if.then93:                                        ; preds = %land.lhs.true86
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1167, i64 0, i64 0), %union.tree_node* %decl.0) #7, !dbg !4415
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4417
  br label %if.end138, !dbg !4418

if.else94:                                        ; preds = %land.lhs.true86, %lor.lhs.false, %if.else73
  %cmp99 = icmp eq i64 %bf.cast773, 29, !dbg !4419
  br i1 %cmp99, label %land.lhs.true101, label %if.else94.if.else123_crit_edge, !dbg !4421

if.else94.if.else123_crit_edge:                   ; preds = %if.else94
  %.pre = shl i32 8, %call25, !dbg !4422
  br label %if.else123, !dbg !4421

land.lhs.true101:                                 ; preds = %if.else94
  %align102 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4424
  %28 = load i32, i32* %align102, align 8, !dbg !4424
  %mul104 = shl i32 8, %call25, !dbg !4425
  %cmp105 = icmp ugt i32 %28, %mul104, !dbg !4426
  br i1 %cmp105, label %if.then107, label %if.else123, !dbg !4427

if.then107:                                       ; preds = %land.lhs.true101
  %bf.cast1137 = and i64 %bf.load75, 4398046511104, !dbg !4428
  %tobool114 = icmp eq i64 %bf.cast1137, 0, !dbg !4428
  %div = lshr i32 %28, 3, !dbg !4431
  br i1 %tobool114, label %if.else118, label %if.then115, !dbg !4432

if.then115:                                       ; preds = %if.then107
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1168, i64 0, i64 0), %union.tree_node* %decl.0, i32 %div) #7, !dbg !4433
  br label %if.end122, !dbg !4433

if.else118:                                       ; preds = %if.then107
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1169, i64 0, i64 0), %union.tree_node* %decl.0, i32 %div) #7, !dbg !4434
  br label %if.end122

if.end122:                                        ; preds = %if.else118, %if.then115
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4435
  br label %if.end138, !dbg !4436

if.else123:                                       ; preds = %if.else94.if.else123_crit_edge, %land.lhs.true101
  %mul125.pre-phi = phi i32 [ %.pre, %if.else94.if.else123_crit_edge ], [ %mul104, %land.lhs.true101 ], !dbg !4422
  %align127 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4437
  store i32 %mul125.pre-phi, i32* %align127, align 8, !dbg !4438
  %bf.set132 = or i64 %bf.load75, 4398046511104, !dbg !4439
  store i64 %bf.set132, i64* %27, align 8, !dbg !4439
  br label %if.end138

if.end138:                                        ; preds = %if.then28, %if.end66, %if.end122, %if.else123, %if.then93, %if.then32, %if.then23
  ret %union.tree_node* null, !dbg !4440
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_weak_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4441 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4443, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4444, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4445, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4446, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4447, metadata !DIExpression()), !dbg !4448
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !4449
  %1 = load i64*, i64** %0, align 8, !dbg !4449
  %bf.load = load i64, i64* %1, align 8, !dbg !4449
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4451
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4451
  %2 = bitcast i64* %1 to %union.tree_node*, !dbg !4452
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4452

land.lhs.true:                                    ; preds = %entry
  %declared_inline_flag = getelementptr inbounds i64, i64* %1, i64 27, !dbg !4453
  %3 = bitcast i64* %declared_inline_flag to i32*, !dbg !4453
  %bf.load1 = load i32, i32* %3, align 8, !dbg !4453
  %bf.clear2 = and i32 %bf.load1, 2097152, !dbg !4453
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !4453
  br i1 %tobool, label %if.else, label %if.then, !dbg !4454

if.then:                                          ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1170, i64 0, i64 0), i64* %1) #7, !dbg !4455
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4457
  br label %if.end15, !dbg !4458

if.else:                                          ; preds = %land.lhs.true, %entry
  br i1 %cmp, label %if.then13, label %lor.lhs.false, !dbg !4459

lor.lhs.false:                                    ; preds = %if.else
  %cmp12 = icmp eq i64 %bf.cast1, 32, !dbg !4461
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !4462

if.then13:                                        ; preds = %lor.lhs.false, %if.else
  tail call void @declare_weak(%union.tree_node* %2) #7, !dbg !4463
  br label %if.end15, !dbg !4463

if.else14:                                        ; preds = %lor.lhs.false
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4464
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.else14, %if.then
  ret %union.tree_node* null, !dbg !4465
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_alias_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4466 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4468, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4469, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4470, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4471, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4472, metadata !DIExpression()), !dbg !4479
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4480
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4473, metadata !DIExpression()), !dbg !4479
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4481
  %bf.load = load i64, i64* %1, align 8, !dbg !4481
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4482
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4482
  br i1 %cmp, label %if.else, label %land.lhs.true, !dbg !4483

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 32, !dbg !4484
  br i1 %cmp5, label %if.else, label %if.then, !dbg !4485

if.then:                                          ; preds = %land.lhs.true
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4486
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4488
  br label %cleanup98, !dbg !4489

if.else:                                          ; preds = %land.lhs.true, %entry
  br i1 %cmp, label %land.lhs.true11, label %lor.lhs.false, !dbg !4490

land.lhs.true11:                                  ; preds = %if.else
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4491
  %2 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4491
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !4491
  br i1 %tobool, label %lor.lhs.false, label %if.then47, !dbg !4492

lor.lhs.false:                                    ; preds = %land.lhs.true11, %if.else
  br i1 %cmp, label %lor.lhs.false30, label %land.lhs.true17, !dbg !4493

land.lhs.true17:                                  ; preds = %lor.lhs.false
  %bf.cast218 = and i64 %bf.load, 134217728, !dbg !4494
  %tobool22 = icmp eq i64 %bf.cast218, 0, !dbg !4494
  br i1 %tobool22, label %lor.lhs.false30, label %land.lhs.true23, !dbg !4495

land.lhs.true23:                                  ; preds = %land.lhs.true17
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4496
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !4496
  %bf.load25 = load i64, i64* %3, align 8, !dbg !4496
  %bf.cast289 = and i64 %bf.load25, 33554432, !dbg !4496
  %tobool29 = icmp eq i64 %bf.cast289, 0, !dbg !4496
  br i1 %tobool29, label %if.then47, label %lor.lhs.false30, !dbg !4497

lor.lhs.false30:                                  ; preds = %land.lhs.true23, %land.lhs.true17, %lor.lhs.false
  br i1 %cmp, label %if.else48, label %land.lhs.true36, !dbg !4498

land.lhs.true36:                                  ; preds = %lor.lhs.false30
  %bf.cast417 = and i64 %bf.load, 134217728, !dbg !4499
  %tobool42 = icmp eq i64 %bf.cast417, 0, !dbg !4499
  br i1 %tobool42, label %land.lhs.true43, label %if.else48, !dbg !4500

land.lhs.true43:                                  ; preds = %land.lhs.true36
  %initial45 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4501
  %4 = load %union.tree_node*, %union.tree_node** %initial45, align 8, !dbg !4501
  %tobool46 = icmp eq %union.tree_node* %4, null, !dbg !4501
  br i1 %tobool46, label %if.else48, label %if.then47, !dbg !4502

if.then47:                                        ; preds = %land.lhs.true11, %land.lhs.true23, %land.lhs.true43
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1171, i64 0, i64 0), %union.tree_node* %0) #7, !dbg !4503
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4505
  br label %cleanup98, !dbg !4506

if.else48:                                        ; preds = %land.lhs.true43, %land.lhs.true36, %lor.lhs.false30
  %call49 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #7, !dbg !4507
  %cmp50 = icmp eq %union.tree_node* %call49, null, !dbg !4508
  %5 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4509
  %cmp52 = icmp eq %union.tree_node* %5, null, !dbg !4510
  %or.cond = and i1 %cmp50, %cmp52, !dbg !4511
  br i1 %or.cond, label %if.then53, label %if.else93, !dbg !4511

if.then53:                                        ; preds = %if.else48
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4512
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !4512
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4474, metadata !DIExpression()), !dbg !4513
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4514
  %bf.load55 = load i64, i64* %8, align 8, !dbg !4514
  %bf.cast575 = and i64 %bf.load55, 65535, !dbg !4516
  %cmp58 = icmp eq i64 %bf.cast575, 28, !dbg !4516
  br i1 %cmp58, label %if.end, label %if.then59, !dbg !4517

if.then59:                                        ; preds = %if.then53
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1172, i64 0, i64 0)) #7, !dbg !4518
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4520
  br label %cleanup, !dbg !4521

if.end:                                           ; preds = %if.then53
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4522
  %arraydecay = bitcast i32* %str to i8*, !dbg !4522
  %call60 = tail call %union.tree_node* @get_identifier(i8* nonnull %arraydecay) #7, !dbg !4523
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !4474, metadata !DIExpression()), !dbg !4513
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4524
  %bf.load62 = load i64, i64* %9, align 8, !dbg !4525
  %bf.set = or i64 %bf.load62, 16777216, !dbg !4525
  store i64 %bf.set, i64* %9, align 8, !dbg !4525
  %bf.load65 = load i64, i64* %1, align 8, !dbg !4526
  %bf.cast676 = and i64 %bf.load65, 65535, !dbg !4528
  %cmp68 = icmp eq i64 %bf.cast676, 29, !dbg !4528
  br i1 %cmp68, label %if.then69, label %if.else72, !dbg !4529

if.then69:                                        ; preds = %if.end
  %10 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !4530
  %initial71 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4531
  %11 = bitcast %union.tree_node** %initial71 to i64*, !dbg !4532
  store i64 %10, i64* %11, align 8, !dbg !4532
  br label %cleanup, !dbg !4531

if.else72:                                        ; preds = %if.end
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !4533
  %12 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !4533
  %call74 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.172, i64 0, i64 0), %union.tree_node* %12) #7, !dbg !4536
  %tobool75 = icmp eq %union.tree_node* %call74, null, !dbg !4536
  %decl_flag_178 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4537
  %13 = bitcast i40* %decl_flag_178 to i64*, !dbg !4537
  %bf.load79 = load i64, i64* %13, align 8, !dbg !4537
  br i1 %tobool75, label %if.else82, label %if.then76, !dbg !4538

if.then76:                                        ; preds = %if.else72
  %bf.set81 = or i64 %bf.load79, 33554432, !dbg !4539
  br label %if.end87, !dbg !4540

if.else82:                                        ; preds = %if.else72
  %bf.clear80 = and i64 %bf.load79, -33554433, !dbg !4537
  br label %if.end87

if.end87:                                         ; preds = %if.else82, %if.then76
  %storemerge = phi i64 [ %bf.clear80, %if.else82 ], [ %bf.set81, %if.then76 ], !dbg !4537
  store i64 %storemerge, i64* %13, align 8, !dbg !4537
  %bf.load89 = load i64, i64* %1, align 8, !dbg !4541
  %bf.set91 = or i64 %bf.load89, 67108864, !dbg !4541
  store i64 %bf.set91, i64* %1, align 8, !dbg !4541
  br label %cleanup

cleanup:                                          ; preds = %if.then69, %if.end87, %if.then59
  ret %union.tree_node* null

if.else93:                                        ; preds = %if.else48
  %call94 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4542
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4544
  br label %cleanup98

cleanup98:                                        ; preds = %if.then, %if.else93, %if.then47
  ret %union.tree_node* null, !dbg !4545
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_weakref_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4546 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4548, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4549, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4550, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4551, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4552, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4553, metadata !DIExpression()), !dbg !4554
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4555
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #7, !dbg !4557
  %tobool = icmp ne %union.tree_node* %call, null, !dbg !4557
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4558
  %tobool1 = icmp ne %union.tree_node* %1, null, !dbg !4558
  %or.cond = or i1 %tobool, %tobool1, !dbg !4559
  br i1 %or.cond, label %if.then, label %lor.lhs.false2, !dbg !4559

lor.lhs.false2:                                   ; preds = %entry
  %2 = bitcast %union.tree_node** %node to i64**, !dbg !4560
  %3 = load i64*, i64** %2, align 8, !dbg !4560
  %bf.load = load i64, i64* %3, align 8, !dbg !4560
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4561
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4561
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !4562

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %cmp7 = icmp eq i64 %bf.cast1, 29, !dbg !4563
  br i1 %cmp7, label %if.end, label %if.then, !dbg !4564

if.then:                                          ; preds = %land.lhs.true, %entry
  %call8 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4565
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4567
  br label %cleanup, !dbg !4568

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false2
  %tobool9 = icmp eq %union.tree_node* %args, null, !dbg !4569
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !4571

if.then10:                                        ; preds = %if.end
  %call11 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.171, i64 0, i64 0)) #7, !dbg !4572
  %call12 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %call11, %union.tree_node* nonnull %args, %union.tree_node* null) #7, !dbg !4572
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4553, metadata !DIExpression()), !dbg !4554
  %call13 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.172, i64 0, i64 0)) #7, !dbg !4574
  %call14 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %call13, %union.tree_node* null, %union.tree_node* %call12) #7, !dbg !4574
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !4553, metadata !DIExpression()), !dbg !4554
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4575
  %call15 = tail call %union.tree_node* @decl_attributes(%union.tree_node** %node, %union.tree_node* %call14, i32 %flags) #7, !dbg !4576
  br label %cleanup, !dbg !4577

if.else:                                          ; preds = %if.end
  %attributes = getelementptr inbounds i64, i64* %3, i64 11, !dbg !4578
  %4 = bitcast i64* %attributes to %union.tree_node**, !dbg !4578
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4578
  %call16 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.171, i64 0, i64 0), %union.tree_node* %5) #7, !dbg !4581
  %tobool17 = icmp eq %union.tree_node* %call16, null, !dbg !4581
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !4582

if.then18:                                        ; preds = %if.else
  %6 = bitcast %union.tree_node** %node to %struct.tree_decl_minimal**, !dbg !4583
  %7 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %6, align 8, !dbg !4583
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %7, i64 0, i32 1, !dbg !4583
  %8 = load i32, i32* %locus, align 8, !dbg !4583
  tail call void (i32, i8*, ...) @error_at(i32 %8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1173, i64 0, i64 0)) #7, !dbg !4584
  br label %if.end19, !dbg !4584

if.end19:                                         ; preds = %if.else, %if.then18
  %9 = bitcast %union.tree_node** %node to %struct.tree_decl_with_vis**, !dbg !4585
  %10 = load %struct.tree_decl_with_vis*, %struct.tree_decl_with_vis** %9, align 8, !dbg !4585
  %weak_flag = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %10, i64 0, i32 4, !dbg !4585
  %11 = bitcast i24* %weak_flag to i32*, !dbg !4585
  %bf.load20 = load i32, i32* %11, align 8, !dbg !4586
  %bf.set = or i32 %bf.load20, 128, !dbg !4586
  store i32 %bf.set, i32* %11, align 8, !dbg !4586
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.end19, %if.then
  ret %union.tree_node* null, !dbg !4587
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_no_instrument_function_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4588 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4590, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4591, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4592, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4593, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4594, metadata !DIExpression()), !dbg !4596
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4597
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4595, metadata !DIExpression()), !dbg !4596
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4598
  %bf.load = load i64, i64* %1, align 8, !dbg !4598
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4600
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4600
  br i1 %cmp, label %if.else, label %if.then, !dbg !4601

if.then:                                          ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4602
  %2 = load i32, i32* %locus, align 8, !dbg !4602
  tail call void (i32, i8*, ...) @error_at(i32 %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1188, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4604
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4605
  br label %if.end7, !dbg !4606

if.else:                                          ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4607
  %3 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4607
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !4607
  br i1 %tobool, label %if.else4, label %if.then1, !dbg !4609

if.then1:                                         ; preds = %if.else
  %locus3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4610
  %4 = load i32, i32* %locus3, align 8, !dbg !4610
  tail call void (i32, i8*, ...) @error_at(i32 %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1189, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4612
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4613
  br label %if.end7, !dbg !4614

if.else4:                                         ; preds = %if.else
  %no_instrument_function_entry_exit = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 5, !dbg !4615
  %bf.load5 = load i32, i32* %no_instrument_function_entry_exit, align 8, !dbg !4616
  %bf.set = or i32 %bf.load5, 16777216, !dbg !4616
  store i32 %bf.set, i32* %no_instrument_function_entry_exit, align 8, !dbg !4616
  br label %if.end7

if.end7:                                          ; preds = %if.then1, %if.else4, %if.then
  ret %union.tree_node* null, !dbg !4617
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_malloc_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4618 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4620, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4621, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4622, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4623, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4624, metadata !DIExpression()), !dbg !4625
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !4626
  %1 = load i64*, i64** %0, align 8, !dbg !4626
  %bf.load = load i64, i64* %1, align 8, !dbg !4626
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4628
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4628
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4629

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds i64, i64* %1, i64 2, !dbg !4630
  %2 = bitcast i64* %type to %struct.tree_common**, !dbg !4630
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !4630
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !4630
  %4 = bitcast %union.tree_node** %type2 to i64**, !dbg !4630
  %5 = load i64*, i64** %4, align 8, !dbg !4630
  %bf.load4 = load i64, i64* %5, align 8, !dbg !4630
  %bf.cast62 = and i64 %bf.load4, 65535, !dbg !4630
  %cmp7 = icmp eq i64 %bf.cast62, 10, !dbg !4630
  br i1 %cmp7, label %if.then, label %lor.lhs.false, !dbg !4630

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp16 = icmp eq i64 %bf.cast62, 12, !dbg !4630
  br i1 %cmp16, label %if.then, label %if.else, !dbg !4631

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %malloc_flag = getelementptr inbounds i64, i64* %1, i64 27, !dbg !4632
  %6 = bitcast i64* %malloc_flag to i32*, !dbg !4632
  %bf.load17 = load i32, i32* %6, align 8, !dbg !4633
  %bf.set = or i32 %bf.load17, 524288, !dbg !4633
  store i32 %bf.set, i32* %6, align 8, !dbg !4633
  br label %if.end, !dbg !4632

if.else:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4634
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4636
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !4637
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_returns_twice_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4638 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4640, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4641, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4642, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4643, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4644, metadata !DIExpression()), !dbg !4645
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !4646
  %1 = load i64*, i64** %0, align 8, !dbg !4646
  %bf.load = load i64, i64* %1, align 8, !dbg !4646
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4648
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4648
  br i1 %cmp, label %if.then, label %if.else, !dbg !4649

if.then:                                          ; preds = %entry
  %returns_twice_flag = getelementptr inbounds i64, i64* %1, i64 27, !dbg !4650
  %2 = bitcast i64* %returns_twice_flag to i32*, !dbg !4650
  %bf.load1 = load i32, i32* %2, align 8, !dbg !4651
  %bf.set = or i32 %bf.load1, 262144, !dbg !4651
  store i32 %bf.set, i32* %2, align 8, !dbg !4651
  br label %if.end, !dbg !4650

if.else:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4652
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4654
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !4655
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_no_limit_stack_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4656 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4658, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4659, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4660, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4661, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4662, metadata !DIExpression()), !dbg !4664
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4665
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4663, metadata !DIExpression()), !dbg !4664
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4666
  %bf.load = load i64, i64* %1, align 8, !dbg !4666
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4668
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4668
  br i1 %cmp, label %if.else, label %if.then, !dbg !4669

if.then:                                          ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4670
  %2 = load i32, i32* %locus, align 8, !dbg !4670
  tail call void (i32, i8*, ...) @error_at(i32 %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1188, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4672
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4673
  br label %if.end7, !dbg !4674

if.else:                                          ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4675
  %3 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4675
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !4675
  br i1 %tobool, label %if.else4, label %if.then1, !dbg !4677

if.then1:                                         ; preds = %if.else
  %locus3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4678
  %4 = load i32, i32* %locus3, align 8, !dbg !4678
  tail call void (i32, i8*, ...) @error_at(i32 %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1189, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4680
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4681
  br label %if.end7, !dbg !4682

if.else4:                                         ; preds = %if.else
  %no_limit_stack = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 5, !dbg !4683
  %bf.load5 = load i32, i32* %no_limit_stack, align 8, !dbg !4684
  %bf.set = or i32 %bf.load5, 33554432, !dbg !4684
  store i32 %bf.set, i32* %no_limit_stack, align 8, !dbg !4684
  br label %if.end7

if.end7:                                          ; preds = %if.then1, %if.else4, %if.then
  ret %union.tree_node* null, !dbg !4685
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_pure_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4686 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4688, metadata !DIExpression()), !dbg !4693
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4689, metadata !DIExpression()), !dbg !4693
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4690, metadata !DIExpression()), !dbg !4693
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4691, metadata !DIExpression()), !dbg !4693
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4692, metadata !DIExpression()), !dbg !4693
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !4694
  %1 = load i64*, i64** %0, align 8, !dbg !4694
  %bf.load = load i64, i64* %1, align 8, !dbg !4694
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4696
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4696
  br i1 %cmp, label %if.then, label %if.else, !dbg !4697

if.then:                                          ; preds = %entry
  %pure_flag = getelementptr inbounds i64, i64* %1, i64 27, !dbg !4698
  %2 = bitcast i64* %pure_flag to i32*, !dbg !4698
  %bf.load1 = load i32, i32* %2, align 8, !dbg !4699
  %bf.set = or i32 %bf.load1, 134217728, !dbg !4699
  store i32 %bf.set, i32* %2, align 8, !dbg !4699
  br label %if.end, !dbg !4698

if.else:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4700
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4702
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !4703
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_novops_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4704 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4706, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4707, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4708, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4709, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4710, metadata !DIExpression()), !dbg !4711
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !4712
  %1 = load i64*, i64** %0, align 8, !dbg !4712
  %bf.load = load i64, i64* %1, align 8, !dbg !4712
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4712
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4712
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.true, !dbg !4712

entry.cond.end_crit_edge:                         ; preds = %entry
  %2 = bitcast i64* %1 to %struct.tree_function_decl*, !dbg !4712
  br label %cond.end, !dbg !4712

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 7189, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !4712
  %.phi.trans.insert = bitcast %union.tree_node** %node to %struct.tree_function_decl**, !dbg !4711
  %.pre = load %struct.tree_function_decl*, %struct.tree_function_decl** %.phi.trans.insert, align 8, !dbg !4713
  br label %cond.end, !dbg !4712

cond.end:                                         ; preds = %entry.cond.end_crit_edge, %cond.true
  %3 = phi %struct.tree_function_decl* [ %2, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ], !dbg !4713
  %novops_flag = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %3, i64 0, i32 5, !dbg !4713
  %bf.load1 = load i32, i32* %novops_flag, align 8, !dbg !4714
  %bf.set = or i32 %bf.load1, 131072, !dbg !4714
  store i32 %bf.set, i32* %novops_flag, align 8, !dbg !4714
  ret %union.tree_node* null, !dbg !4715
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_deprecated_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4716 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4718, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4719, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4720, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4721, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4722, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4723, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 0, metadata !4724, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4725, metadata !DIExpression()), !dbg !4729
  %tobool = icmp eq %union.tree_node* %args, null, !dbg !4730
  br i1 %tobool, label %if.then, label %if.else, !dbg !4732

if.then:                                          ; preds = %entry
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4733
  br label %if.end2, !dbg !4734

if.else:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4735
  %1 = bitcast %union.tree_node** %0 to i64**, !dbg !4735
  %2 = load i64*, i64** %1, align 8, !dbg !4735
  %bf.load = load i64, i64* %2, align 8, !dbg !4735
  %bf.cast8 = and i64 %bf.load, 65535, !dbg !4737
  %cmp = icmp eq i64 %bf.cast8, 28, !dbg !4737
  br i1 %cmp, label %if.end2, label %if.then1, !dbg !4738

if.then1:                                         ; preds = %if.else
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1191, i64 0, i64 0)) #7, !dbg !4739
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4741
  br label %if.end2, !dbg !4742

if.end2:                                          ; preds = %if.else, %if.then1, %if.then
  %3 = bitcast %union.tree_node** %node to i64**, !dbg !4743
  %4 = load i64*, i64** %3, align 8, !dbg !4743
  %bf.load4 = load i64, i64* %4, align 8, !dbg !4743
  %bf.cast6 = and i64 %bf.load4, 65535, !dbg !4743
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast6, !dbg !4743
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4743
  %cmp7 = icmp eq i32 %5, 3, !dbg !4743
  %6 = bitcast i64* %4 to %union.tree_node*, !dbg !4744
  br i1 %cmp7, label %if.then8, label %if.else44, !dbg !4744

if.then8:                                         ; preds = %if.end2
  call void @llvm.dbg.value(metadata i64* %4, metadata !4726, metadata !DIExpression()), !dbg !4745
  %type9 = getelementptr inbounds i64, i64* %4, i64 2, !dbg !4746
  %7 = bitcast i64* %type9 to %union.tree_node**, !dbg !4746
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4746
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4723, metadata !DIExpression()), !dbg !4729
  %cmp14 = icmp eq i64 %bf.cast6, 35, !dbg !4747
  br i1 %cmp14, label %if.then38, label %lor.lhs.false, !dbg !4749

lor.lhs.false:                                    ; preds = %if.then8
  %cmp19 = icmp eq i64 %bf.cast6, 34, !dbg !4750
  br i1 %cmp19, label %if.then38, label %lor.lhs.false20, !dbg !4751

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %cmp25 = icmp eq i64 %bf.cast6, 32, !dbg !4752
  br i1 %cmp25, label %if.then38, label %lor.lhs.false26, !dbg !4753

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %cmp31 = icmp eq i64 %bf.cast6, 29, !dbg !4754
  br i1 %cmp31, label %if.then38, label %lor.lhs.false32, !dbg !4755

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %cmp37 = icmp eq i64 %bf.cast6, 31, !dbg !4756
  br i1 %cmp37, label %if.then38, label %if.end62, !dbg !4757

if.then38:                                        ; preds = %lor.lhs.false32, %lor.lhs.false26, %lor.lhs.false20, %lor.lhs.false, %if.then8
  %bf.set = or i64 %bf.load4, 1073741824, !dbg !4758
  store i64 %bf.set, i64* %4, align 8, !dbg !4758
  br label %if.end62, !dbg !4759

if.else44:                                        ; preds = %if.end2
  %cmp51 = icmp eq i32 %5, 2, !dbg !4760
  br i1 %cmp51, label %if.then52, label %if.end62, !dbg !4762

if.then52:                                        ; preds = %if.else44
  %and = and i32 %flags, 8, !dbg !4763
  %tobool53 = icmp eq i32 %and, 0, !dbg !4763
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !4766

if.then54:                                        ; preds = %if.then52
  %call = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %6) #7, !dbg !4767
  store %union.tree_node* %call, %union.tree_node** %node, align 8, !dbg !4768
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4769
  %bf.load57.pre = load i64, i64* %9, align 8, !dbg !4770
  br label %if.end55, !dbg !4769

if.end55:                                         ; preds = %if.then52, %if.then54
  %bf.load57 = phi i64 [ %bf.load4, %if.then52 ], [ %bf.load57.pre, %if.then54 ], !dbg !4770
  %10 = phi i64* [ %4, %if.then52 ], [ %9, %if.then54 ], !dbg !4771
  %bf.set59 = or i64 %bf.load57, 1073741824, !dbg !4770
  store i64 %bf.set59, i64* %10, align 8, !dbg !4770
  %11 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4772
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4723, metadata !DIExpression()), !dbg !4729
  br label %if.end62, !dbg !4773

if.end62:                                         ; preds = %if.end55, %if.else44, %if.then38, %lor.lhs.false32
  %type.1 = phi %union.tree_node* [ %8, %lor.lhs.false32 ], [ %8, %if.then38 ], [ %11, %if.end55 ], [ null, %if.else44 ], !dbg !4774
  %warn.2 = phi i1 [ true, %lor.lhs.false32 ], [ false, %if.then38 ], [ false, %if.end55 ], [ true, %if.else44 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.1, metadata !4723, metadata !DIExpression()), !dbg !4729
  br i1 %warn.2, label %if.then64, label %if.end107, !dbg !4775

if.then64:                                        ; preds = %if.end62
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4776
  %tobool65 = icmp eq %union.tree_node* %type.1, null, !dbg !4779
  br i1 %tobool65, label %if.end100, label %land.lhs.true, !dbg !4781

land.lhs.true:                                    ; preds = %if.then64
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4782
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !4782
  %tobool68 = icmp eq %union.tree_node* %13, null, !dbg !4782
  br i1 %tobool68, label %if.end100, label %if.then69, !dbg !4783

if.then69:                                        ; preds = %land.lhs.true
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4783
  %bf.load73 = load i64, i64* %14, align 8, !dbg !4784
  %bf.cast751 = and i64 %bf.load73, 65535, !dbg !4787
  %cmp76 = icmp eq i64 %bf.cast751, 1, !dbg !4787
  br i1 %cmp76, label %if.then77, label %if.else80, !dbg !4788

if.then77:                                        ; preds = %if.then69
  %15 = bitcast %union.tree_node** %node to %struct.tree_type**, !dbg !4789
  %16 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !4789
  %name79 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %16, i64 0, i32 12, !dbg !4789
  %17 = load %union.tree_node*, %union.tree_node** %name79, align 8, !dbg !4789
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !4725, metadata !DIExpression()), !dbg !4729
  br label %if.end100, !dbg !4790

if.else80:                                        ; preds = %if.then69
  %cmp87 = icmp eq i64 %bf.cast751, 35, !dbg !4791
  br i1 %cmp87, label %land.lhs.true88, label %if.end100, !dbg !4793

land.lhs.true88:                                  ; preds = %if.else80
  %name91 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4794
  %18 = load %union.tree_node*, %union.tree_node** %name91, align 8, !dbg !4794
  %tobool92 = icmp eq %union.tree_node* %18, null, !dbg !4794
  br i1 %tobool92, label %if.end100, label %if.then93, !dbg !4795

if.then93:                                        ; preds = %land.lhs.true88
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4725, metadata !DIExpression()), !dbg !4729
  br label %if.end100, !dbg !4796

if.end100:                                        ; preds = %land.lhs.true88, %land.lhs.true, %if.then64, %if.then77, %if.then93, %if.else80
  %what.2 = phi %union.tree_node* [ null, %land.lhs.true ], [ null, %if.then64 ], [ %17, %if.then77 ], [ %18, %if.then93 ], [ null, %land.lhs.true88 ], [ null, %if.else80 ], !dbg !4729
  call void @llvm.dbg.value(metadata %union.tree_node* %what.2, metadata !4725, metadata !DIExpression()), !dbg !4729
  %tobool101 = icmp eq %union.tree_node* %what.2, null, !dbg !4797
  br i1 %tobool101, label %if.else104, label %if.then102, !dbg !4799

if.then102:                                       ; preds = %if.end100
  %call103 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1192, i64 0, i64 0), %union.tree_node* %name, %union.tree_node* nonnull %what.2) #7, !dbg !4800
  br label %if.end107, !dbg !4800

if.else104:                                       ; preds = %if.end100
  %call105 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4801
  br label %if.end107

if.end107:                                        ; preds = %if.then102, %if.else104, %if.end62
  ret %union.tree_node* null, !dbg !4802
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_vector_size_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4803 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4805, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4806, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4807, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4808, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4809, metadata !DIExpression()), !dbg !4816
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4817
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4813, metadata !DIExpression()), !dbg !4816
  store i8 1, i8* %no_add_attrs, align 1, !dbg !4818
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4819
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4819
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4815, metadata !DIExpression()), !dbg !4816
  %call = tail call i32 @host_integerp(%union.tree_node* %2, i32 1) #7, !dbg !4820
  %tobool = icmp eq i32 %call, 0, !dbg !4820
  br i1 %tobool, label %if.then, label %if.end, !dbg !4822

if.then:                                          ; preds = %entry
  %call1 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4823
  br label %cleanup, !dbg !4825

if.end:                                           ; preds = %entry
  %call2 = tail call i64 @tree_low_cst(%union.tree_node* %2, i32 1) #7, !dbg !4826
  call void @llvm.dbg.value(metadata i64 %call2, metadata !4810, metadata !DIExpression()), !dbg !4816
  br label %while.cond, !dbg !4827

while.cond:                                       ; preds = %while.body, %if.end
  %.in = phi %union.tree_node* [ %0, %if.end ], [ %4, %while.body ]
  %type.0 = phi %union.tree_node* [ %0, %if.end ], [ %4, %while.body ], !dbg !4816
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !4813, metadata !DIExpression()), !dbg !4816
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4828
  %bf.load = load i64, i64* %3, align 8, !dbg !4828
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !4828
  %cmp = icmp eq i64 %bf.cast5, 10, !dbg !4828
  br i1 %cmp, label %while.body, label %lor.lhs.false, !dbg !4828

lor.lhs.false:                                    ; preds = %while.cond
  %cmp7 = icmp eq i64 %bf.cast5, 12, !dbg !4828
  br i1 %cmp7, label %while.body, label %lor.lhs.false8, !dbg !4829

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp13 = icmp eq i64 %bf.cast5, 20, !dbg !4830
  br i1 %cmp13, label %while.body, label %lor.lhs.false14, !dbg !4831

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %cmp19 = icmp eq i64 %bf.cast5, 21, !dbg !4832
  br i1 %cmp19, label %while.body, label %lor.lhs.false20, !dbg !4833

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %cmp25 = icmp eq i64 %bf.cast5, 15, !dbg !4834
  %cmp30 = icmp eq i64 %bf.cast5, 5, !dbg !4835
  %or.cond = or i1 %cmp25, %cmp30, !dbg !4836
  br i1 %or.cond, label %while.body, label %while.end, !dbg !4836

while.body:                                       ; preds = %while.cond, %lor.lhs.false, %lor.lhs.false8, %lor.lhs.false14, %lor.lhs.false20
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4837
  %4 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !4837
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4813, metadata !DIExpression()), !dbg !4816
  br label %while.cond, !dbg !4827, !llvm.loop !4838

while.end:                                        ; preds = %lor.lhs.false20
  %.in.lcssa = phi %union.tree_node* [ %.in, %lor.lhs.false20 ]
  %type.0.lcssa = phi %union.tree_node* [ %type.0, %lor.lhs.false20 ], !dbg !4816
  %.lcssa = phi i64* [ %3, %lor.lhs.false20 ], !dbg !4828
  %bf.cast5.lcssa = phi i64 [ %bf.cast5, %lor.lhs.false20 ], !dbg !4828
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0.lcssa, metadata !4813, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0.lcssa, metadata !4813, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0.lcssa, metadata !4813, metadata !DIExpression()), !dbg !4816
  %cmp36 = icmp eq i64 %bf.cast5.lcssa, 14, !dbg !4839
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !4839

cond.true:                                        ; preds = %while.end
  %call37 = tail call i32 @vector_type_mode(%union.tree_node* %type.0.lcssa) #7, !dbg !4839
  %bf.load42.pre = load i64, i64* %.lcssa, align 8, !dbg !4840
  %.pre = and i64 %bf.load42.pre, 65535, !dbg !4840
  br label %cond.end, !dbg !4839

cond.false:                                       ; preds = %while.end
  %5 = bitcast %union.tree_node* %.in.lcssa to %struct.tree_type*, !dbg !4816
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !4839
  %bf.load39 = load i32, i32* %mode, align 4, !dbg !4839
  %bf.lshr = lshr i32 %bf.load39, 16, !dbg !4839
  %bf.clear40 = and i32 %bf.lshr, 255, !dbg !4839
  br label %cond.end, !dbg !4839

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.cast4412.pre-phi = phi i64 [ %bf.cast5.lcssa, %cond.false ], [ %.pre, %cond.true ], !dbg !4840
  %cond = phi i32 [ %bf.clear40, %cond.false ], [ %call37, %cond.true ], !dbg !4839
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4812, metadata !DIExpression()), !dbg !4816
  %cmp45 = icmp eq i64 %bf.cast4412.pre-phi, 6, !dbg !4840
  br i1 %cmp45, label %lor.lhs.false69, label %lor.lhs.false46, !dbg !4840

lor.lhs.false46:                                  ; preds = %cond.end
  %cmp51 = icmp eq i64 %bf.cast4412.pre-phi, 7, !dbg !4840
  br i1 %cmp51, label %lor.lhs.false69, label %lor.lhs.false52, !dbg !4840

lor.lhs.false52:                                  ; preds = %lor.lhs.false46
  %cmp57 = icmp eq i64 %bf.cast4412.pre-phi, 8, !dbg !4840
  br i1 %cmp57, label %lor.lhs.false69, label %land.lhs.true, !dbg !4842

land.lhs.true:                                    ; preds = %lor.lhs.false52
  %cmp62 = icmp eq i64 %bf.cast4412.pre-phi, 9, !dbg !4843
  br i1 %cmp62, label %lor.lhs.false69, label %land.lhs.true63, !dbg !4844

land.lhs.true63:                                  ; preds = %land.lhs.true
  %cmp68 = icmp eq i64 %bf.cast4412.pre-phi, 11, !dbg !4845
  br i1 %cmp68, label %lor.lhs.false69, label %if.then119, !dbg !4846

lor.lhs.false69:                                  ; preds = %land.lhs.true63, %land.lhs.true, %lor.lhs.false52, %lor.lhs.false46, %cond.end
  %idxprom = zext i32 %cond to i64, !dbg !4847
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4847
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4847
  %cmp70 = icmp eq i8 %6, 8, !dbg !4847
  br i1 %cmp70, label %lor.lhs.false108, label %lor.lhs.false72, !dbg !4847

lor.lhs.false72:                                  ; preds = %lor.lhs.false69
  %cmp76 = icmp eq i8 %6, 9, !dbg !4847
  br i1 %cmp76, label %lor.lhs.false108, label %land.lhs.true78, !dbg !4848

land.lhs.true78:                                  ; preds = %lor.lhs.false72
  %cmp82 = icmp eq i8 %6, 2, !dbg !4849
  br i1 %cmp82, label %lor.lhs.false108, label %land.lhs.true84, !dbg !4850

land.lhs.true84:                                  ; preds = %land.lhs.true78
  %cmp88 = icmp eq i8 %6, 4, !dbg !4851
  br i1 %cmp88, label %lor.lhs.false108, label %lor.lhs.false90, !dbg !4851

lor.lhs.false90:                                  ; preds = %land.lhs.true84
  %cmp94 = icmp eq i8 %6, 6, !dbg !4851
  br i1 %cmp94, label %lor.lhs.false108, label %lor.lhs.false96, !dbg !4851

lor.lhs.false96:                                  ; preds = %lor.lhs.false90
  %cmp100 = icmp eq i8 %6, 5, !dbg !4851
  br i1 %cmp100, label %lor.lhs.false108, label %lor.lhs.false102, !dbg !4851

lor.lhs.false102:                                 ; preds = %lor.lhs.false96
  %cmp106 = icmp eq i8 %6, 7, !dbg !4851
  br i1 %cmp106, label %lor.lhs.false108, label %if.then119, !dbg !4852

lor.lhs.false108:                                 ; preds = %land.lhs.true78, %lor.lhs.false102, %lor.lhs.false96, %lor.lhs.false90, %land.lhs.true84, %lor.lhs.false72, %lor.lhs.false69
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4853
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4853
  %call110 = tail call i32 @host_integerp(%union.tree_node* %8, i32 1) #7, !dbg !4854
  %tobool111 = icmp eq i32 %call110, 0, !dbg !4854
  br i1 %tobool111, label %if.then119, label %lor.lhs.false112, !dbg !4855

lor.lhs.false112:                                 ; preds = %lor.lhs.false108
  %bf.load114 = load i64, i64* %.lcssa, align 8, !dbg !4856
  %bf.cast11617 = and i64 %bf.load114, 65535, !dbg !4857
  %cmp117 = icmp eq i64 %bf.cast11617, 7, !dbg !4857
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !4858

if.then119:                                       ; preds = %lor.lhs.false108, %lor.lhs.false112, %lor.lhs.false102, %land.lhs.true63
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1193, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4859
  br label %cleanup, !dbg !4861

if.end120:                                        ; preds = %lor.lhs.false112
  %9 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4862
  %call123 = tail call i64 @tree_low_cst(%union.tree_node* %9, i32 1) #7, !dbg !4864
  %rem = urem i64 %call2, %call123, !dbg !4865
  %tobool124 = icmp eq i64 %rem, 0, !dbg !4865
  br i1 %tobool124, label %if.end126, label %if.then125, !dbg !4866

if.then125:                                       ; preds = %if.end120
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1194, i64 0, i64 0)) #7, !dbg !4867
  br label %cleanup, !dbg !4869

if.end126:                                        ; preds = %if.end120
  %cmp127 = icmp eq i64 %call2, 0, !dbg !4870
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !4872

if.then129:                                       ; preds = %if.end126
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1195, i64 0, i64 0)) #7, !dbg !4873
  br label %cleanup, !dbg !4875

if.end130:                                        ; preds = %if.end126
  %10 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4876
  %call133 = tail call i64 @tree_low_cst(%union.tree_node* %10, i32 1) #7, !dbg !4877
  %div = udiv i64 %call2, %call133, !dbg !4878
  call void @llvm.dbg.value(metadata i64 %div, metadata !4811, metadata !DIExpression()), !dbg !4816
  %11 = tail call i64 @llvm.ctpop.i64(i64 %div), !dbg !4879, !range !4881
  %tobool134 = icmp ugt i64 %11, 1, !dbg !4879
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !4882

if.then135:                                       ; preds = %if.end130
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1196, i64 0, i64 0)) #7, !dbg !4883
  br label %cleanup, !dbg !4885

if.end136:                                        ; preds = %if.end130
  %conv137 = trunc i64 %div to i32, !dbg !4886
  %call138 = tail call %union.tree_node* @build_vector_type(%union.tree_node* %type.0.lcssa, i32 %conv137) #7, !dbg !4887
  call void @llvm.dbg.value(metadata %union.tree_node* %call138, metadata !4814, metadata !DIExpression()), !dbg !4816
  %12 = load %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 14), align 8, !dbg !4888
  %13 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4889
  %call139 = tail call %union.tree_node* %12(%union.tree_node* %13, %union.tree_node* %call138) #7, !dbg !4890
  store %union.tree_node* %call139, %union.tree_node** %node, align 8, !dbg !4891
  br label %cleanup, !dbg !4892

cleanup:                                          ; preds = %if.end136, %if.then135, %if.then129, %if.then125, %if.then119, %if.then
  ret %union.tree_node* null, !dbg !4893
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_visibility_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4894 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !4896, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4897, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4898, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4899, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !4900, metadata !DIExpression()), !dbg !4907
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !4908
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4901, metadata !DIExpression()), !dbg !4907
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4909
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4909
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4902, metadata !DIExpression()), !dbg !4907
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4910
  %bf.load = load i64, i64* %.cast, align 8, !dbg !4910
  %bf.cast = and i64 %bf.load, 65535, !dbg !4910
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4910
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4910
  %cmp = icmp eq i32 %3, 2, !dbg !4910
  br i1 %cmp, label %if.then, label %if.else22, !dbg !4912

if.then:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast, 6, !dbg !4913
  br i1 %cmp5, label %if.end33, label %if.else, !dbg !4916

if.else:                                          ; preds = %if.then
  %cmp11 = icmp eq i64 %bf.cast, 16, !dbg !4917
  br i1 %cmp11, label %if.else18, label %land.lhs.true, !dbg !4919

land.lhs.true:                                    ; preds = %if.else
  %cmp16 = icmp eq i64 %bf.cast, 17, !dbg !4920
  br i1 %cmp16, label %if.else18, label %if.then17, !dbg !4921

if.then17:                                        ; preds = %land.lhs.true
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1174, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4922
  br label %cleanup, !dbg !4924

if.else18:                                        ; preds = %land.lhs.true, %if.else
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4925
  %4 = bitcast i32* %values to %union.tree_node**, !dbg !4925
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4925
  %tobool = icmp eq %union.tree_node* %5, null, !dbg !4925
  br i1 %tobool, label %if.end33, label %if.then19, !dbg !4927

if.then19:                                        ; preds = %if.else18
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1175, i64 0, i64 0), %union.tree_node* %name, %union.tree_node* %0) #7, !dbg !4928
  br label %cleanup, !dbg !4930

if.else22:                                        ; preds = %entry
  %call23 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #7, !dbg !4931
  %cmp24 = icmp eq %union.tree_node* %call23, null, !dbg !4933
  br i1 %cmp24, label %lor.lhs.false, label %if.then30, !dbg !4934

lor.lhs.false:                                    ; preds = %if.else22
  %bf.load26 = load i64, i64* %.cast, align 8, !dbg !4935
  %bf.cast281 = and i64 %bf.load26, 134217728, !dbg !4935
  %tobool29 = icmp eq i64 %bf.cast281, 0, !dbg !4935
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !4936

if.then30:                                        ; preds = %lor.lhs.false, %if.else22
  %call31 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4937
  br label %cleanup, !dbg !4939

if.end33:                                         ; preds = %if.else18, %lor.lhs.false, %if.then
  %bf.load42 = phi i64 [ %bf.load, %if.else18 ], [ %bf.load26, %lor.lhs.false ], [ %bf.load, %if.then ]
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4940
  %bf.load35 = load i64, i64* %6, align 8, !dbg !4940
  %bf.cast372 = and i64 %bf.load35, 65535, !dbg !4942
  %cmp38 = icmp eq i64 %bf.cast372, 28, !dbg !4942
  br i1 %cmp38, label %if.end40, label %if.then39, !dbg !4943

if.then39:                                        ; preds = %if.end33
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1176, i64 0, i64 0)) #7, !dbg !4944
  br label %cleanup, !dbg !4946

if.end40:                                         ; preds = %if.end33
  %bf.cast44 = and i64 %bf.load42, 65535, !dbg !4947
  %arrayidx46 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast44, !dbg !4947
  %7 = load i32, i32* %arrayidx46, align 4, !dbg !4947
  %cmp47 = icmp eq i32 %7, 2, !dbg !4947
  br i1 %cmp47, label %if.then48, label %if.end62, !dbg !4949

if.then48:                                        ; preds = %if.end40
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4950
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4950
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4901, metadata !DIExpression()), !dbg !4907
  %tobool51 = icmp eq %union.tree_node* %9, null, !dbg !4952
  br i1 %tobool51, label %cleanup, label %if.end53, !dbg !4954

if.end53:                                         ; preds = %if.then48
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4955
  %bf.load55 = load i64, i64* %10, align 8, !dbg !4955
  %bf.cast573 = and i64 %bf.load55, 65535, !dbg !4957
  %cmp58 = icmp eq i64 %bf.cast573, 1, !dbg !4957
  br i1 %cmp58, label %if.then59, label %if.end62, !dbg !4958

if.then59:                                        ; preds = %if.end53
  %call60 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1177, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !4959
  br label %cleanup, !dbg !4961

if.end62:                                         ; preds = %if.end53, %if.end40
  %decl.0 = phi %union.tree_node* [ %0, %if.end40 ], [ %9, %if.end53 ], !dbg !4907
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !4901, metadata !DIExpression()), !dbg !4907
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4962
  %arraydecay = bitcast i32* %str to i8*, !dbg !4962
  %call63 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i64 0, i64 0)) #7, !dbg !4964
  %cmp64 = icmp eq i32 %call63, 0, !dbg !4965
  br i1 %cmp64, label %if.end91, label %if.else66, !dbg !4966

if.else66:                                        ; preds = %if.end62
  %call70 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1178, i64 0, i64 0)) #7, !dbg !4967
  %cmp71 = icmp eq i32 %call70, 0, !dbg !4969
  br i1 %cmp71, label %if.end91, label %if.else73, !dbg !4970

if.else73:                                        ; preds = %if.else66
  %call77 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1179, i64 0, i64 0)) #7, !dbg !4971
  %cmp78 = icmp eq i32 %call77, 0, !dbg !4973
  br i1 %cmp78, label %if.end91, label %if.else80, !dbg !4974

if.else80:                                        ; preds = %if.else73
  %call84 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i64 0, i64 0)) #7, !dbg !4975
  %cmp85 = icmp eq i32 %call84, 0, !dbg !4977
  br i1 %cmp85, label %if.end91, label %if.else87, !dbg !4978

if.else87:                                        ; preds = %if.else80
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1180, i64 0, i64 0)) #7, !dbg !4979
  call void @llvm.dbg.value(metadata i32 0, metadata !4903, metadata !DIExpression()), !dbg !4907
  br label %if.end91

if.end91:                                         ; preds = %if.else66, %if.else87, %if.else80, %if.else73, %if.end62
  %vis.3 = phi i32 [ 0, %if.end62 ], [ 3, %if.else66 ], [ 2, %if.else73 ], [ 0, %if.else87 ], [ 1, %if.else80 ], !dbg !4981
  call void @llvm.dbg.value(metadata i32 %vis.3, metadata !4903, metadata !DIExpression()), !dbg !4907
  %visibility_specified = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4982
  %11 = bitcast i24* %visibility_specified to i32*, !dbg !4982
  %bf.load92 = load i32, i32* %11, align 8, !dbg !4982
  %bf.clear94 = and i32 %bf.load92, 4096, !dbg !4982
  %tobool95 = icmp eq i32 %bf.clear94, 0, !dbg !4982
  br i1 %tobool95, label %if.end118, label %land.lhs.true96, !dbg !4983

land.lhs.true96:                                  ; preds = %if.end91
  %bf.lshr99 = lshr i32 %bf.load92, 10, !dbg !4984
  %bf.clear100 = and i32 %bf.lshr99, 3, !dbg !4984
  %cmp101 = icmp eq i32 %vis.3, %bf.clear100, !dbg !4985
  br i1 %cmp101, label %if.end118, label %if.then102, !dbg !4986

if.then102:                                       ; preds = %land.lhs.true96
  %12 = bitcast %union.tree_node** %node to i64**, !dbg !4987
  %13 = load i64*, i64** %12, align 8, !dbg !4987
  %bf.load104 = load i64, i64* %13, align 8, !dbg !4987
  %bf.cast106 = and i64 %bf.load104, 65535, !dbg !4987
  %arrayidx108 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast106, !dbg !4987
  %14 = load i32, i32* %arrayidx108, align 4, !dbg !4987
  %cmp109 = icmp eq i32 %14, 2, !dbg !4987
  br i1 %cmp109, label %cond.true, label %cond.false, !dbg !4987

cond.true:                                        ; preds = %if.then102
  %attributes111 = getelementptr inbounds i64, i64* %13, i64 6, !dbg !4988
  %15 = bitcast i64* %attributes111 to %union.tree_node**, !dbg !4988
  br label %cond.end, !dbg !4987

cond.false:                                       ; preds = %if.then102
  %attributes112 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !4989
  br label %cond.end, !dbg !4987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %union.tree_node** [ %15, %cond.true ], [ %attributes112, %cond.false ]
  %cond = load %union.tree_node*, %union.tree_node** %cond.in, align 8, !dbg !4987
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !4904, metadata !DIExpression()), !dbg !4990
  %call113 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), %union.tree_node* %cond) #7, !dbg !4991
  %tobool114 = icmp eq %union.tree_node* %call113, null, !dbg !4991
  br i1 %tobool114, label %if.end118, label %if.then115, !dbg !4993

if.then115:                                       ; preds = %cond.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1181, i64 0, i64 0), %union.tree_node* %decl.0) #7, !dbg !4994
  br label %if.end118, !dbg !4994

if.end118:                                        ; preds = %cond.end, %land.lhs.true96, %if.end91, %if.then115
  %bf.load121 = load i32, i32* %11, align 8, !dbg !4995
  %bf.shl = shl nuw nsw i32 %vis.3, 10, !dbg !4995
  %bf.clear122 = and i32 %bf.load121, -7169, !dbg !4995
  %bf.set = or i32 %bf.clear122, %bf.shl, !dbg !4995
  %bf.set127 = or i32 %bf.set, 4096, !dbg !4996
  store i32 %bf.set127, i32* %11, align 8, !dbg !4996
  br label %cleanup, !dbg !4997

cleanup:                                          ; preds = %if.then48, %if.end118, %if.then59, %if.then39, %if.then30, %if.then19, %if.then17
  ret %union.tree_node* null, !dbg !4998
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_tls_model_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !4999 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5001, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5002, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5003, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5004, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5005, metadata !DIExpression()), !dbg !5009
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !5010
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5007, metadata !DIExpression()), !dbg !5009
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5011
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5012
  %bf.load = load i64, i64* %1, align 8, !dbg !5012
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5014
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !5014
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !5015

lor.lhs.false:                                    ; preds = %entry
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5016
  %2 = bitcast i24* %tls_model to i32*, !dbg !5016
  %bf.load1 = load i32, i32* %2, align 8, !dbg !5016
  %bf.clear2 = and i32 %bf.load1, 49152, !dbg !5016
  %cmp3 = icmp eq i32 %bf.clear2, 0, !dbg !5016
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5017

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5018
  br label %cleanup, !dbg !5020

if.end:                                           ; preds = %lor.lhs.false
  %bf.clear8 = and i32 %bf.load1, 57344, !dbg !5021
  call void @llvm.dbg.value(metadata i32 %bf.clear8, metadata !5008, metadata !DIExpression()), !dbg !5009
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5022
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5022
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5006, metadata !DIExpression()), !dbg !5009
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5023
  %bf.load10 = load i64, i64* %5, align 8, !dbg !5023
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !5025
  %cmp13 = icmp eq i64 %bf.cast122, 28, !dbg !5025
  br i1 %cmp13, label %if.end15, label %if.then14, !dbg !5026

if.then14:                                        ; preds = %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1182, i64 0, i64 0)) #7, !dbg !5027
  br label %cleanup, !dbg !5029

if.end15:                                         ; preds = %if.end
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5030
  %arraydecay = bitcast i32* %str to i8*, !dbg !5030
  %call16 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1183, i64 0, i64 0)) #7, !dbg !5032
  %tobool = icmp eq i32 %call16, 0, !dbg !5032
  br i1 %tobool, label %if.end43, label %if.else, !dbg !5033

if.else:                                          ; preds = %if.end15
  %call21 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1184, i64 0, i64 0)) #7, !dbg !5034
  %tobool22 = icmp eq i32 %call21, 0, !dbg !5034
  br i1 %tobool22, label %if.end43, label %if.else24, !dbg !5036

if.else24:                                        ; preds = %if.else
  %call28 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1185, i64 0, i64 0)) #7, !dbg !5037
  %tobool29 = icmp eq i32 %call28, 0, !dbg !5037
  br i1 %tobool29, label %if.then30, label %if.else32, !dbg !5039

if.then30:                                        ; preds = %if.else24
  %6 = load i32, i32* @optimize, align 4, !dbg !5040
  %tobool31 = icmp eq i32 %6, 0, !dbg !5040
  %cond = select i1 %tobool31, i32 16384, i32 24576, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5008, metadata !DIExpression()), !dbg !5009
  br label %if.end43, !dbg !5041

if.else32:                                        ; preds = %if.else24
  %call36 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1186, i64 0, i64 0)) #7, !dbg !5042
  %tobool37 = icmp eq i32 %call36, 0, !dbg !5042
  br i1 %tobool37, label %if.end43, label %if.else39, !dbg !5044

if.else39:                                        ; preds = %if.else32
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.1187, i64 0, i64 0)) #7, !dbg !5045
  br label %if.end43

if.end43:                                         ; preds = %if.else32, %if.else, %if.end15, %if.else39, %if.then30
  %kind.3 = phi i32 [ 40960, %if.end15 ], [ 32768, %if.else ], [ %cond, %if.then30 ], [ %bf.clear8, %if.else39 ], [ 16384, %if.else32 ], !dbg !5009
  call void @llvm.dbg.value(metadata i32 %kind.3, metadata !5008, metadata !DIExpression()), !dbg !5009
  %bf.load46 = load i32, i32* %2, align 8, !dbg !5046
  %bf.clear47 = and i32 %bf.load46, -57345, !dbg !5046
  %bf.set = or i32 %bf.clear47, %kind.3, !dbg !5046
  store i32 %bf.set, i32* %2, align 8, !dbg !5046
  br label %cleanup, !dbg !5047

cleanup:                                          ; preds = %if.end43, %if.then14, %if.then
  ret %union.tree_node* null, !dbg !5048
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_nonnull_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5049 {
entry:
  %arg_num = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5051, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5052, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5053, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5054, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5055, metadata !DIExpression()), !dbg !5064
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !5065
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5056, metadata !DIExpression()), !dbg !5064
  %tobool = icmp eq %union.tree_node* %args, null, !dbg !5066
  br i1 %tobool, label %if.then, label %for.cond.preheader, !dbg !5068

for.cond.preheader:                               ; preds = %entry
  %1 = bitcast i64* %arg_num to i8*, !dbg !5069
  %values10 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5069
  %2 = bitcast i32* %values10 to %union.tree_node**, !dbg !5069
  br label %for.cond, !dbg !5070

if.then:                                          ; preds = %entry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5071
  %3 = bitcast i32* %values to %union.tree_node**, !dbg !5071
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5071
  %tobool2 = icmp eq %union.tree_node* %4, null, !dbg !5071
  br i1 %tobool2, label %if.then3, label %cleanup40, !dbg !5074

if.then3:                                         ; preds = %if.then
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1197, i64 0, i64 0)) #7, !dbg !5075
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5077
  br label %cleanup40, !dbg !5078

for.cond:                                         ; preds = %for.cond.preheader, %for.inc36
  %args.addr.0 = phi %union.tree_node* [ %13, %for.inc36 ], [ %args, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %args.addr.0, metadata !5053, metadata !DIExpression()), !dbg !5064
  %tobool5 = icmp eq %union.tree_node* %args.addr.0, null, !dbg !5070
  br i1 %tobool5, label %cleanup40.loopexit, label %for.body, !dbg !5070

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5079
  call void @llvm.dbg.value(metadata i64 0, metadata !5062, metadata !DIExpression()), !dbg !5069
  store i64 0, i64* %arg_num, align 8, !dbg !5080
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5081
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !5081
  call void @llvm.dbg.value(metadata i64* %arg_num, metadata !5062, metadata !DIExpression(DW_OP_deref)), !dbg !5069
  %call = call fastcc zeroext i8 @get_nonnull_operand(%union.tree_node* %6, i64* nonnull %arg_num) #8, !dbg !5083
  %tobool6 = icmp eq i8 %call, 0, !dbg !5083
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !5084

if.then7:                                         ; preds = %for.body
  call void (i8*, ...) @error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1198, i64 0, i64 0), i64 1) #7, !dbg !5085
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5087
  br label %cleanup, !dbg !5088

if.end8:                                          ; preds = %for.body
  %7 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5089
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5058, metadata !DIExpression()), !dbg !5069
  %tobool11 = icmp eq %union.tree_node* %7, null, !dbg !5090
  br i1 %tobool11, label %cleanup, label %for.cond13.preheader, !dbg !5092

for.cond13.preheader:                             ; preds = %if.end8
  %8 = load i64, i64* %arg_num, align 8, !dbg !5093
  br label %for.cond13, !dbg !5099

for.cond13:                                       ; preds = %for.cond13.preheader, %if.end16
  %argument.0 = phi %union.tree_node* [ %9, %if.end16 ], [ %7, %for.cond13.preheader ], !dbg !5069
  %ck_num.0 = phi i64 [ %inc, %if.end16 ], [ 1, %for.cond13.preheader ], !dbg !5100
  call void @llvm.dbg.value(metadata i64 %ck_num.0, metadata !5063, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.0, metadata !5058, metadata !DIExpression()), !dbg !5069
  %tobool14 = icmp eq %union.tree_node* %argument.0, null, !dbg !5101
  call void @llvm.dbg.value(metadata i64 %8, metadata !5062, metadata !DIExpression()), !dbg !5069
  %cmp = icmp eq i64 %ck_num.0, %8, !dbg !5102
  %or.cond = or i1 %tobool14, %cmp, !dbg !5103
  br i1 %or.cond, label %for.end, label %if.end16, !dbg !5103

if.end16:                                         ; preds = %for.cond13
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %argument.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5104
  %9 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5104
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5058, metadata !DIExpression()), !dbg !5069
  %inc = add i64 %ck_num.0, 1, !dbg !5105
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5063, metadata !DIExpression()), !dbg !5069
  br label %for.cond13, !dbg !5106, !llvm.loop !5107

for.end:                                          ; preds = %for.cond13
  %argument.0.lcssa = phi %union.tree_node* [ %argument.0, %for.cond13 ], !dbg !5069
  %tobool14.lcssa = phi i1 [ %tobool14, %for.cond13 ], !dbg !5101
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.0.lcssa, metadata !5058, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.0.lcssa, metadata !5058, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata %union.tree_node* %argument.0.lcssa, metadata !5058, metadata !DIExpression()), !dbg !5069
  br i1 %tobool14.lcssa, label %if.then22, label %lor.lhs.false18, !dbg !5109

lor.lhs.false18:                                  ; preds = %for.end
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %argument.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5111
  %11 = bitcast %union.tree_node** %10 to i64**, !dbg !5111
  %12 = load i64*, i64** %11, align 8, !dbg !5111
  %bf.load = load i64, i64* %12, align 8, !dbg !5111
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5112
  %cmp21 = icmp eq i64 %bf.cast1, 19, !dbg !5112
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5113

if.then22:                                        ; preds = %for.end, %lor.lhs.false18
  call void @llvm.dbg.value(metadata i64 %8, metadata !5062, metadata !DIExpression()), !dbg !5069
  call void (i8*, ...) @error(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1199, i64 0, i64 0), i64 1, i64 %8) #7, !dbg !5114
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5116
  br label %cleanup, !dbg !5117

if.end23:                                         ; preds = %lor.lhs.false18
  %cmp30 = icmp eq i64 %bf.cast1, 10, !dbg !5118
  br i1 %cmp30, label %cleanup, label %if.then31, !dbg !5120

if.then31:                                        ; preds = %if.end23
  call void @llvm.dbg.value(metadata i64 %8, metadata !5062, metadata !DIExpression()), !dbg !5069
  call void (i8*, ...) @error(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1200, i64 0, i64 0), i64 1, i64 %8) #7, !dbg !5121
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5123
  br label %cleanup, !dbg !5124

cleanup:                                          ; preds = %if.end23, %if.end8, %if.then31, %if.then22, %if.then7
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then22 ], [ false, %if.then31 ], [ false, %if.then7 ], [ true, %if.end23 ], [ true, %if.end8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5125
  br i1 %cleanup.dest.slot.0, label %for.inc36, label %cleanup40.loopexit

for.inc36:                                        ; preds = %cleanup
  %chain38 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5126
  %13 = load %union.tree_node*, %union.tree_node** %chain38, align 8, !dbg !5126
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !5053, metadata !DIExpression()), !dbg !5064
  br label %for.cond, !dbg !5127, !llvm.loop !5128

cleanup40.loopexit:                               ; preds = %cleanup, %for.cond
  br label %cleanup40, !dbg !5130

cleanup40:                                        ; preds = %cleanup40.loopexit, %if.then, %if.then3
  ret %union.tree_node* null, !dbg !5130
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_nothrow_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5131 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5133, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5134, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5135, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5136, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5137, metadata !DIExpression()), !dbg !5138
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !5139
  %1 = load i64*, i64** %0, align 8, !dbg !5139
  %bf.load = load i64, i64* %1, align 8, !dbg !5139
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5141
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !5141
  br i1 %cmp, label %if.then, label %if.else, !dbg !5142

if.then:                                          ; preds = %entry
  %bf.set = or i64 %bf.load, 33554432, !dbg !5143
  store i64 %bf.set, i64* %1, align 8, !dbg !5143
  br label %if.end, !dbg !5144

if.else:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5145
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5147
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %union.tree_node* null, !dbg !5148
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_cleanup_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5149 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5151, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5152, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5153, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5154, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5155, metadata !DIExpression()), !dbg !5159
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !5160
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5156, metadata !DIExpression()), !dbg !5159
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5161
  %bf.load = load i64, i64* %1, align 8, !dbg !5161
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5163
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !5163
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !5164

lor.lhs.false:                                    ; preds = %entry
  %bf.cast42 = and i64 %bf.load, 67108864, !dbg !5165
  %tobool = icmp eq i64 %bf.cast42, 0, !dbg !5165
  br i1 %tobool, label %if.end, label %if.then, !dbg !5166

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5167
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5169
  br label %cleanup, !dbg !5170

if.end:                                           ; preds = %lor.lhs.false
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5171
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5171
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5157, metadata !DIExpression()), !dbg !5159
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5172
  %bf.load6 = load i64, i64* %4, align 8, !dbg !5172
  %bf.cast83 = and i64 %bf.load6, 65535, !dbg !5174
  %cmp9 = icmp eq i64 %bf.cast83, 1, !dbg !5174
  br i1 %cmp9, label %if.end11, label %if.then10, !dbg !5175

if.then10:                                        ; preds = %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1201, i64 0, i64 0)) #7, !dbg !5176
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5178
  br label %cleanup, !dbg !5179

if.end11:                                         ; preds = %if.end
  %call12 = tail call %union.tree_node* @lookup_name(%union.tree_node* %3) #7, !dbg !5180
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !5158, metadata !DIExpression()), !dbg !5159
  %tobool13 = icmp eq %union.tree_node* %call12, null, !dbg !5181
  br i1 %tobool13, label %if.then20, label %lor.lhs.false14, !dbg !5183

lor.lhs.false14:                                  ; preds = %if.end11
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5184
  %bf.load16 = load i64, i64* %5, align 8, !dbg !5184
  %bf.cast184 = and i64 %bf.load16, 65535, !dbg !5185
  %cmp19 = icmp eq i64 %bf.cast184, 29, !dbg !5185
  br i1 %cmp19, label %cleanup, label %if.then20, !dbg !5186

if.then20:                                        ; preds = %lor.lhs.false14, %if.end11
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1202, i64 0, i64 0)) #7, !dbg !5187
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5189
  br label %cleanup, !dbg !5190

cleanup:                                          ; preds = %lor.lhs.false14, %if.then20, %if.then10, %if.then
  ret %union.tree_node* null, !dbg !5191
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_warn_unused_result_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5192 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5194, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5195, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5196, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5197, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5198, metadata !DIExpression()), !dbg !5199
  %0 = bitcast %union.tree_node** %node to %struct.tree_common**, !dbg !5200
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !5200
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !5200
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !5200
  %3 = load i64*, i64** %2, align 8, !dbg !5200
  %bf.load = load i64, i64* %3, align 8, !dbg !5200
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5200
  %cmp = icmp eq i64 %bf.cast1, 19, !dbg !5200
  br i1 %cmp, label %if.then, label %if.end, !dbg !5202

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5203
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5205
  br label %if.end, !dbg !5206

if.end:                                           ; preds = %if.then, %entry
  ret %union.tree_node* null, !dbg !5207
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_sentinel_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5208 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5210, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5211, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5212, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5213, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5214, metadata !DIExpression()), !dbg !5219
  %0 = bitcast %union.tree_node** %node to %struct.tree_type**, !dbg !5220
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !5220
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !5220
  %2 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !5220
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5215, metadata !DIExpression()), !dbg !5219
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !5221
  br i1 %tobool, label %if.then, label %while.cond.preheader, !dbg !5223

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !5224

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1203, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5226
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5228
  br label %if.end6, !dbg !5229

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %params.0 = phi %union.tree_node* [ %3, %while.body ], [ %2, %while.cond.preheader ], !dbg !5219
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0, metadata !5215, metadata !DIExpression()), !dbg !5219
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %params.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5230
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5230
  %tobool1 = icmp eq %union.tree_node* %3, null, !dbg !5224
  br i1 %tobool1, label %while.end, label %while.body, !dbg !5224

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5215, metadata !DIExpression()), !dbg !5219
  br label %while.cond, !dbg !5224, !llvm.loop !5231

while.end:                                        ; preds = %while.cond
  %params.0.lcssa = phi %union.tree_node* [ %params.0, %while.cond ], !dbg !5219
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0.lcssa, metadata !5215, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0.lcssa, metadata !5215, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0.lcssa, metadata !5215, metadata !DIExpression()), !dbg !5219
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5233
  %5 = bitcast %union.tree_node** %4 to i64**, !dbg !5233
  %6 = load i64*, i64** %5, align 8, !dbg !5233
  %bf.load = load i64, i64* %6, align 8, !dbg !5233
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5233
  %cmp = icmp eq i64 %bf.cast2, 19, !dbg !5233
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !5235

if.then4:                                         ; preds = %while.end
  %call5 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1204, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5236
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5238
  br label %if.end6, !dbg !5239

if.end6:                                          ; preds = %while.end, %if.then4, %if.then
  %tobool7 = icmp eq %union.tree_node* %args, null, !dbg !5240
  br i1 %tobool7, label %if.end25, label %if.then8, !dbg !5241

if.then8:                                         ; preds = %if.end6
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5242
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !5242
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5216, metadata !DIExpression()), !dbg !5243
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5244
  %bf.load12 = load i64, i64* %9, align 8, !dbg !5244
  %bf.cast141 = and i64 %bf.load12, 65535, !dbg !5246
  %cmp15 = icmp eq i64 %bf.cast141, 23, !dbg !5246
  br i1 %cmp15, label %if.else18, label %if.then16, !dbg !5247

if.then16:                                        ; preds = %if.then8
  %call17 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1205, i64 0, i64 0)) #7, !dbg !5248
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5250
  br label %if.end25, !dbg !5251

if.else18:                                        ; preds = %if.then8
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !5252
  %call19 = tail call i32 @tree_int_cst_lt(%union.tree_node* %8, %union.tree_node* %10) #7, !dbg !5255
  %tobool20 = icmp eq i32 %call19, 0, !dbg !5255
  br i1 %tobool20, label %if.end25, label %if.then21, !dbg !5256

if.then21:                                        ; preds = %if.else18
  %call22 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1206, i64 0, i64 0)) #7, !dbg !5257
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5259
  br label %if.end25, !dbg !5260

if.end25:                                         ; preds = %if.else18, %if.end6, %if.then16, %if.then21
  ret %union.tree_node* null, !dbg !5261
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_type_generic_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5262 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5264, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5265, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5266, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5268, metadata !DIExpression()), !dbg !5270
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !5271
  %1 = load i64*, i64** %0, align 8, !dbg !5271
  %bf.load = load i64, i64* %1, align 8, !dbg !5271
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5271
  %cmp = icmp eq i64 %bf.cast1, 20, !dbg !5271
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.true, !dbg !5271

entry.cond.end_crit_edge:                         ; preds = %entry
  %2 = bitcast i64* %1 to %struct.tree_type*, !dbg !5271
  br label %cond.end, !dbg !5271

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 7692, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !5271
  %.phi.trans.insert = bitcast %union.tree_node** %node to %struct.tree_type**, !dbg !5270
  %.pre = load %struct.tree_type*, %struct.tree_type** %.phi.trans.insert, align 8, !dbg !5272
  br label %cond.end, !dbg !5271

cond.end:                                         ; preds = %entry.cond.end_crit_edge, %cond.true
  %3 = phi %struct.tree_type* [ %2, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ], !dbg !5272
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 1, !dbg !5272
  br label %while.cond, !dbg !5273

while.cond:                                       ; preds = %while.body, %cond.end
  %params.0.in = phi %union.tree_node** [ %values, %cond.end ], [ %chain, %while.body ]
  %params.0 = load %union.tree_node*, %union.tree_node** %params.0.in, align 8, !dbg !5270
  call void @llvm.dbg.value(metadata %union.tree_node* %params.0, metadata !5269, metadata !DIExpression()), !dbg !5270
  %cond = icmp eq %union.tree_node* %params.0, null, !dbg !5274
  br i1 %cond, label %cond.end9.loopexit, label %land.rhs, !dbg !5274

land.rhs:                                         ; preds = %while.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5275
  %5 = bitcast %union.tree_node** %4 to i64**, !dbg !5275
  %6 = load i64*, i64** %5, align 8, !dbg !5275
  %bf.load2 = load i64, i64* %6, align 8, !dbg !5275
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !5275
  %cmp5 = icmp eq i64 %bf.cast42, 19, !dbg !5275
  br i1 %cmp5, label %while.end, label %while.body, !dbg !5273

while.body:                                       ; preds = %land.rhs
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %params.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5276
  br label %while.cond, !dbg !5273, !llvm.loop !5277

while.end:                                        ; preds = %land.rhs
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 7699, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !5278
  br label %cond.end9, !dbg !5278

cond.end9.loopexit:                               ; preds = %while.cond
  br label %cond.end9, !dbg !5279

cond.end9:                                        ; preds = %cond.end9.loopexit, %while.end
  ret %union.tree_node* null, !dbg !5279
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_alloc_size_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5280 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5282, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5283, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5284, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5285, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5286, metadata !DIExpression()), !dbg !5292
  %0 = load %union.tree_node*, %union.tree_node** %node, align 8, !dbg !5293
  %call = tail call i32 @type_num_arguments(%union.tree_node* %0) #7, !dbg !5294
  call void @llvm.dbg.value(metadata i32 %call, metadata !5287, metadata !DIExpression()), !dbg !5292
  %conv = zext i32 %call to i64, !dbg !5295
  br label %for.cond, !dbg !5297

for.cond:                                         ; preds = %for.inc, %entry
  %args.addr.0 = phi %union.tree_node* [ %args, %entry ], [ %7, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %args.addr.0, metadata !5284, metadata !DIExpression()), !dbg !5292
  %tobool = icmp eq %union.tree_node* %args.addr.0, null, !dbg !5298
  br i1 %tobool, label %cleanup14, label %for.body, !dbg !5298

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5299
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5299
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5288, metadata !DIExpression()), !dbg !5300
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5301
  %bf.load = load i64, i64* %3, align 8, !dbg !5301
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5302
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !5302
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !5303

lor.lhs.false:                                    ; preds = %for.body
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5304
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !5304
  %4 = bitcast i32* %high to i64*, !dbg !5304
  %5 = load i64, i64* %4, align 8, !dbg !5304
  %tobool2 = icmp eq i64 %5, 0, !dbg !5304
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !5305

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %low = bitcast i32* %int_cst1 to i64*, !dbg !5306
  %6 = load i64, i64* %low, align 8, !dbg !5306
  %cmp6 = icmp eq i64 %6, 0, !dbg !5307
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !5308

lor.lhs.false7:                                   ; preds = %lor.lhs.false3
  %cmp11 = icmp ugt i64 %6, %conv, !dbg !5309
  br i1 %cmp11, label %if.then, label %cleanup, !dbg !5310

if.then:                                          ; preds = %lor.lhs.false, %for.body, %lor.lhs.false7, %lor.lhs.false3
  %call13 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1190, i64 0, i64 0)) #7, !dbg !5311
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5313
  br label %cleanup, !dbg !5314

cleanup:                                          ; preds = %lor.lhs.false7, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %lor.lhs.false7 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup14

for.inc:                                          ; preds = %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5315
  %7 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5315
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5284, metadata !DIExpression()), !dbg !5292
  br label %for.cond, !dbg !5316, !llvm.loop !5317

cleanup14:                                        ; preds = %for.cond, %cleanup
  ret %union.tree_node* null, !dbg !5319
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_cold_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5320 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5322, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5323, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5324, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5325, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5326, metadata !DIExpression()), !dbg !5327
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !5328
  %1 = load i64*, i64** %0, align 8, !dbg !5328
  %bf.load = load i64, i64* %1, align 8, !dbg !5328
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5330
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !5330
  br i1 %cmp, label %if.then, label %if.else, !dbg !5331

if.then:                                          ; preds = %entry
  %attributes = getelementptr inbounds i64, i64* %1, i64 11, !dbg !5332
  %2 = bitcast i64* %attributes to %union.tree_node**, !dbg !5332
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5332
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.192, i64 0, i64 0), %union.tree_node* %3) #7, !dbg !5335
  %cmp1 = icmp eq %union.tree_node* %call, null, !dbg !5336
  br i1 %cmp1, label %if.end5, label %if.then2, !dbg !5337

if.then2:                                         ; preds = %if.then
  %call3 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1138, i64 0, i64 0), %union.tree_node* %name, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.192, i64 0, i64 0)) #7, !dbg !5338
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5340
  br label %if.end5, !dbg !5341

if.else:                                          ; preds = %entry
  %call4 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5342
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5344
  br label %if.end5

if.end5:                                          ; preds = %if.then, %if.then2, %if.else
  ret %union.tree_node* null, !dbg !5345
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_hot_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5346 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5348, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5349, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5350, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5351, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5352, metadata !DIExpression()), !dbg !5353
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !5354
  %1 = load i64*, i64** %0, align 8, !dbg !5354
  %bf.load = load i64, i64* %1, align 8, !dbg !5354
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5356
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !5356
  br i1 %cmp, label %if.then, label %if.else, !dbg !5357

if.then:                                          ; preds = %entry
  %attributes = getelementptr inbounds i64, i64* %1, i64 11, !dbg !5358
  %2 = bitcast i64* %attributes to %union.tree_node**, !dbg !5358
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5358
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.191, i64 0, i64 0), %union.tree_node* %3) #7, !dbg !5361
  %cmp1 = icmp eq %union.tree_node* %call, null, !dbg !5362
  br i1 %cmp1, label %if.end5, label %if.then2, !dbg !5363

if.then2:                                         ; preds = %if.then
  %call3 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1138, i64 0, i64 0), %union.tree_node* %name, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.191, i64 0, i64 0)) #7, !dbg !5364
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5366
  br label %if.end5, !dbg !5367

if.else:                                          ; preds = %entry
  %call4 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5368
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5370
  br label %if.end5

if.end5:                                          ; preds = %if.then, %if.then2, %if.else
  ret %union.tree_node* null, !dbg !5371
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_error_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5372 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5374, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5375, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5376, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5377, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5378, metadata !DIExpression()), !dbg !5379
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !5380
  %1 = load i64*, i64** %0, align 8, !dbg !5380
  %bf.load = load i64, i64* %1, align 8, !dbg !5380
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5382
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !5382
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !5383

lor.lhs.false:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5384
  %3 = bitcast %union.tree_node** %2 to i64**, !dbg !5384
  %4 = load i64*, i64** %3, align 8, !dbg !5384
  %bf.load2 = load i64, i64* %4, align 8, !dbg !5384
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !5385
  %cmp5 = icmp eq i64 %bf.cast42, 28, !dbg !5385
  br i1 %cmp5, label %if.end, label %if.else, !dbg !5386

if.else:                                          ; preds = %lor.lhs.false
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5387
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5389
  br label %if.end

if.end:                                           ; preds = %entry, %lor.lhs.false, %if.else
  ret %union.tree_node* null, !dbg !5390
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_target_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5391 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5393, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5394, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5395, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5396, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5397, metadata !DIExpression()), !dbg !5398
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !5399
  %1 = load i64*, i64** %0, align 8, !dbg !5399
  %bf.load = load i64, i64* %1, align 8, !dbg !5399
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5401
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !5401
  br i1 %cmp, label %if.else, label %if.then, !dbg !5402

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5403
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5405
  br label %if.end3, !dbg !5406

if.else:                                          ; preds = %entry
  %2 = bitcast i64* %1 to %union.tree_node*, !dbg !5402
  %3 = load i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 107, i32 0), align 8, !dbg !5407
  %call1 = tail call zeroext i8 %3(%union.tree_node* %2, %union.tree_node* %name, %union.tree_node* %args, i32 %flags) #7, !dbg !5409
  %tobool = icmp eq i8 %call1, 0, !dbg !5409
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !5410

if.then2:                                         ; preds = %if.else
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5411
  br label %if.end3, !dbg !5412

if.end3:                                          ; preds = %if.else, %if.then2, %if.then
  ret %union.tree_node* null, !dbg !5413
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @handle_optimize_attribute(%union.tree_node** %node, %union.tree_node* %name, %union.tree_node* %args, i32 %flags, i8* %no_add_attrs) #5 !dbg !5414 {
entry:
  %cur_opts = alloca %struct.cl_optimization, align 4
  call void @llvm.dbg.value(metadata %union.tree_node** %node, metadata !5416, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5417, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5418, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5419, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata i8* %no_add_attrs, metadata !5420, metadata !DIExpression()), !dbg !5425
  %0 = bitcast %union.tree_node** %node to i64**, !dbg !5426
  %1 = load i64*, i64** %0, align 8, !dbg !5426
  %bf.load = load i64, i64* %1, align 8, !dbg !5426
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5427
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !5427
  br i1 %cmp, label %if.else, label %if.then, !dbg !5428

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1137, i64 0, i64 0), %union.tree_node* %name) #7, !dbg !5429
  store i8 1, i8* %no_add_attrs, align 1, !dbg !5431
  br label %if.end6, !dbg !5432

if.else:                                          ; preds = %entry
  %2 = bitcast %struct.cl_optimization* %cur_opts to i8*, !dbg !5433
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %2) #6, !dbg !5433
  %3 = bitcast %union.tree_node** %node to %struct.tree_function_decl**, !dbg !5434
  %function_specific_optimization = getelementptr inbounds i64, i64* %1, i64 26, !dbg !5434
  %4 = bitcast i64* %function_specific_optimization to %union.tree_node**, !dbg !5434
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5434
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5424, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %struct.cl_optimization* %cur_opts, metadata !5421, metadata !DIExpression(DW_OP_deref)), !dbg !5435
  call void @cl_optimization_save(%struct.cl_optimization* nonnull %cur_opts) #7, !dbg !5436
  %tobool = icmp eq %union.tree_node* %5, null, !dbg !5437
  br i1 %tobool, label %if.end, label %if.then1, !dbg !5439

if.then1:                                         ; preds = %if.else
  %opts = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5440
  %6 = bitcast i32* %opts to %struct.cl_optimization*, !dbg !5440
  call void @cl_optimization_restore(%struct.cl_optimization* nonnull %6) #7, !dbg !5441
  br label %if.end, !dbg !5441

if.end:                                           ; preds = %if.else, %if.then1
  %call2 = call zeroext i8 @parse_optimize_options(%union.tree_node* %args, i8 zeroext 1) #8, !dbg !5442
  %call3 = call %union.tree_node* @build_optimization_node() #7, !dbg !5443
  %7 = load %struct.tree_function_decl*, %struct.tree_function_decl** %3, align 8, !dbg !5444
  %function_specific_optimization5 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %7, i64 0, i32 4, !dbg !5444
  store %union.tree_node* %call3, %union.tree_node** %function_specific_optimization5, align 8, !dbg !5445
  call void @llvm.dbg.value(metadata %struct.cl_optimization* %cur_opts, metadata !5421, metadata !DIExpression(DW_OP_deref)), !dbg !5435
  call void @cl_optimization_restore(%struct.cl_optimization* nonnull %cur_opts) #7, !dbg !5446
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %2) #6, !dbg !5447
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret %union.tree_node* null, !dbg !5448
}

declare dso_local %union.tree_node* @handle_format_attribute(%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*) #2

declare dso_local %union.tree_node* @handle_format_arg_attribute(%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define dso_local i8* @c_addr_space_name(i8 zeroext %as) local_unnamed_addr #5 !dbg !5449 {
entry:
  call void @llvm.dbg.value(metadata i8 %as, metadata !5453, metadata !DIExpression()), !dbg !5455
  call void @llvm.dbg.value(metadata i32 0, metadata !5454, metadata !DIExpression()), !dbg !5455
  %conv = zext i8 %as to i32, !dbg !5456
  %add = add nuw nsw i32 %conv, 136, !dbg !5456
  br label %for.cond, !dbg !5460

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5461
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5454, metadata !DIExpression()), !dbg !5455
  %exitcond = icmp eq i64 %indvars.iv, 151, !dbg !5462
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5463

for.body:                                         ; preds = %for.cond
  %rid = getelementptr inbounds [151 x %struct.c_common_resword], [151 x %struct.c_common_resword]* bitcast ([151 x { i8*, i8, i8, i8, i8 }]* @c_common_reswords to [151 x %struct.c_common_resword]*), i64 0, i64 %indvars.iv, i32 1, !dbg !5464
  %bf.load = load i32, i32* %rid, align 8, !dbg !5464
  %bf.clear = and i32 %bf.load, 65535, !dbg !5464
  %cmp1 = icmp eq i32 %bf.clear, %add, !dbg !5465
  br i1 %cmp1, label %if.then, label %for.inc, !dbg !5466

if.then:                                          ; preds = %for.body
  %idxprom.lcssa = phi i64 [ %indvars.iv, %for.body ], !dbg !5467
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5454, metadata !DIExpression()), !dbg !5455
  %word = getelementptr inbounds [151 x %struct.c_common_resword], [151 x %struct.c_common_resword]* bitcast ([151 x { i8*, i8, i8, i8, i8 }]* @c_common_reswords to [151 x %struct.c_common_resword]*), i64 0, i64 %idxprom.lcssa, i32 0, !dbg !5468
  %0 = load i8*, i8** %word, align 16, !dbg !5468
  br label %cleanup, !dbg !5469

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5470
  call void @llvm.dbg.value(metadata i32 undef, metadata !5454, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5455
  br label %for.cond, !dbg !5471, !llvm.loop !5472

for.end:                                          ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !5474
  br label %cleanup, !dbg !5475

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi i8* [ %0, %if.then ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.201, i64 0, i64 0), %for.end ], !dbg !5455
  ret i8* %retval.0, !dbg !5476
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @start_fname_decls() local_unnamed_addr #5 !dbg !5477 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5482, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i32 0, metadata !5481, metadata !DIExpression()), !dbg !5487
  br label %for.cond, !dbg !5488

for.cond:                                         ; preds = %for.inc, %entry
  %saved.0 = phi %union.tree_node* [ null, %entry ], [ %saved.1, %for.inc ], !dbg !5487
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5489
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !5481, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata %union.tree_node* %saved.0, metadata !5482, metadata !DIExpression()), !dbg !5487
  %idxprom = zext i32 %ix.0 to i64, !dbg !5490
  %decl = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i64 0, i64 %idxprom, i32 0, !dbg !5491
  %0 = load %union.tree_node**, %union.tree_node*** %decl, align 16, !dbg !5491
  %tobool = icmp eq %union.tree_node** %0, null, !dbg !5492
  br i1 %tobool, label %for.end, label %for.body, !dbg !5492

for.body:                                         ; preds = %for.cond
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5493
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5483, metadata !DIExpression()), !dbg !5494
  %tobool5 = icmp eq %union.tree_node* %1, null, !dbg !5495
  br i1 %tobool5, label %for.inc, label %if.then, !dbg !5497

if.then:                                          ; preds = %for.body
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %idxprom) #7, !dbg !5498
  %call6 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* nonnull %1, %union.tree_node* %call, %union.tree_node* %saved.0) #7, !dbg !5498
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5482, metadata !DIExpression()), !dbg !5487
  store %union.tree_node* null, %union.tree_node** %0, align 8, !dbg !5500
  br label %for.inc, !dbg !5501

for.inc:                                          ; preds = %for.body, %if.then
  %saved.1 = phi %union.tree_node* [ %call6, %if.then ], [ %saved.0, %for.body ], !dbg !5487
  call void @llvm.dbg.value(metadata %union.tree_node* %saved.1, metadata !5482, metadata !DIExpression()), !dbg !5487
  %inc = add i32 %ix.0, 1, !dbg !5502
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5481, metadata !DIExpression()), !dbg !5487
  br label %for.cond, !dbg !5503, !llvm.loop !5504

for.end:                                          ; preds = %for.cond
  %saved.0.lcssa = phi %union.tree_node* [ %saved.0, %for.cond ], !dbg !5487
  call void @llvm.dbg.value(metadata %union.tree_node* %saved.0.lcssa, metadata !5482, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata %union.tree_node* %saved.0.lcssa, metadata !5482, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata %union.tree_node* %saved.0.lcssa, metadata !5482, metadata !DIExpression()), !dbg !5487
  %tobool10 = icmp ne %union.tree_node* %saved.0.lcssa, null, !dbg !5506
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 52), align 16, !dbg !5508
  %tobool11 = icmp ne %union.tree_node* %2, null, !dbg !5508
  %or.cond = or i1 %tobool10, %tobool11, !dbg !5509
  br i1 %or.cond, label %if.then12, label %if.end14, !dbg !5509

if.then12:                                        ; preds = %for.end
  %call13 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %saved.0.lcssa, %union.tree_node* null, %union.tree_node* %2) #7, !dbg !5510
  store %union.tree_node* %call13, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 52), align 16, !dbg !5511
  br label %if.end14, !dbg !5512

if.end14:                                         ; preds = %for.end, %if.then12
  ret void, !dbg !5513
}

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @finish_fname_decls() local_unnamed_addr #5 !dbg !5514 {
entry:
  %stmts = alloca %union.tree_node*, align 8
  %0 = bitcast %union.tree_node** %stmts to i8*, !dbg !5530
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5517, metadata !DIExpression()), !dbg !5531
  store %union.tree_node* null, %union.tree_node** %stmts, align 8, !dbg !5532
  br label %for.cond, !dbg !5533

for.cond:                                         ; preds = %for.body, %entry
  %stack.0.in = phi %union.tree_node** [ getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 52), %entry ], [ %chain, %for.body ]
  %stack.0 = load %union.tree_node*, %union.tree_node** %stack.0.in, align 8, !dbg !5531
  call void @llvm.dbg.value(metadata %union.tree_node* %stack.0, metadata !5518, metadata !DIExpression()), !dbg !5531
  %tobool = icmp eq %union.tree_node* %stack.0, null, !dbg !5534
  br i1 %tobool, label %for.end, label %land.rhs, !dbg !5537

land.rhs:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %stack.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5538
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5538
  %tobool1 = icmp eq %union.tree_node* %2, null, !dbg !5537
  br i1 %tobool1, label %for.end, label %for.body, !dbg !5539

for.body:                                         ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node** %stmts, metadata !5517, metadata !DIExpression(DW_OP_deref)), !dbg !5531
  call void @append_to_statement_list(%union.tree_node* nonnull %2, %union.tree_node** nonnull %stmts) #7, !dbg !5540
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %stack.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5541
  br label %for.cond, !dbg !5542, !llvm.loop !5543

for.end:                                          ; preds = %land.rhs, %for.cond
  %stack.0.lcssa = phi %union.tree_node* [ %stack.0, %land.rhs ], [ %stack.0, %for.cond ], !dbg !5531
  %tobool.lcssa = phi i1 [ %tobool, %land.rhs ], [ %tobool, %for.cond ], !dbg !5534
  %3 = load %union.tree_node*, %union.tree_node** %stmts, align 8, !dbg !5545
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5517, metadata !DIExpression()), !dbg !5531
  %tobool4 = icmp eq %union.tree_node* %3, null, !dbg !5545
  br i1 %tobool4, label %if.end6, label %if.then, !dbg !5546

if.then:                                          ; preds = %for.end
  %4 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !5547
  %saved_tree = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %4, i64 0, i32 1, !dbg !5547
  call void @llvm.dbg.value(metadata %union.tree_node** %saved_tree, metadata !5519, metadata !DIExpression()), !dbg !5548
  %5 = bitcast %union.tree_node** %saved_tree to i64**, !dbg !5549
  %6 = load i64*, i64** %5, align 8, !dbg !5549
  %bf.load = load i64, i64* %6, align 8, !dbg !5549
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5551
  %cmp = icmp eq i64 %bf.cast1, 58, !dbg !5551
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !5552
  br i1 %cmp, label %if.then5, label %if.end, !dbg !5552

if.then5:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds i64, i64* %6, i64 6, !dbg !5553
  %8 = bitcast i64* %arrayidx to %union.tree_node**, !dbg !5553
  call void @llvm.dbg.value(metadata %union.tree_node** %8, metadata !5519, metadata !DIExpression()), !dbg !5548
  %.pre = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5554
  br label %if.end, !dbg !5555

if.end:                                           ; preds = %if.then5, %if.then
  %9 = phi %union.tree_node* [ %.pre, %if.then5 ], [ %7, %if.then ], !dbg !5554
  %bodyp.0 = phi %union.tree_node** [ %8, %if.then5 ], [ %saved_tree, %if.then ], !dbg !5548
  call void @llvm.dbg.value(metadata %union.tree_node** %bodyp.0, metadata !5519, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata %union.tree_node** %stmts, metadata !5517, metadata !DIExpression(DW_OP_deref)), !dbg !5531
  call void @append_to_statement_list_force(%union.tree_node* %9, %union.tree_node** nonnull %stmts) #7, !dbg !5556
  %10 = bitcast %union.tree_node** %stmts to i64*, !dbg !5557
  %11 = load i64, i64* %10, align 8, !dbg !5557
  %12 = bitcast %union.tree_node** %bodyp.0 to i64*, !dbg !5558
  store i64 %11, i64* %12, align 8, !dbg !5558
  br label %if.end6, !dbg !5559

if.end6:                                          ; preds = %for.end, %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !5516, metadata !DIExpression()), !dbg !5531
  br label %for.cond7, !dbg !5560

for.cond7:                                        ; preds = %for.body10, %if.end6
  %ix.0 = phi i32 [ 0, %if.end6 ], [ %inc, %for.body10 ], !dbg !5562
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !5516, metadata !DIExpression()), !dbg !5531
  %idxprom = zext i32 %ix.0 to i64, !dbg !5563
  %decl = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i64 0, i64 %idxprom, i32 0, !dbg !5565
  %13 = load %union.tree_node**, %union.tree_node*** %decl, align 16, !dbg !5565
  %tobool9 = icmp eq %union.tree_node** %13, null, !dbg !5566
  br i1 %tobool9, label %for.end15, label %for.body10, !dbg !5566

for.body10:                                       ; preds = %for.cond7
  store %union.tree_node* null, %union.tree_node** %13, align 8, !dbg !5567
  %inc = add i32 %ix.0, 1, !dbg !5568
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5516, metadata !DIExpression()), !dbg !5531
  br label %for.cond7, !dbg !5569, !llvm.loop !5570

for.end15:                                        ; preds = %for.cond7
  br i1 %tobool.lcssa, label %if.end38, label %if.then17, !dbg !5572

if.then17:                                        ; preds = %for.end15
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %stack.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5573
  %14 = bitcast i32* %purpose to %union.tree_node**, !dbg !5573
  br label %for.cond19, !dbg !5574

for.cond19:                                       ; preds = %for.body21, %if.then17
  %saved.0.in = phi %union.tree_node** [ %14, %if.then17 ], [ %chain34, %for.body21 ]
  %saved.0 = load %union.tree_node*, %union.tree_node** %saved.0.in, align 8, !dbg !5575
  call void @llvm.dbg.value(metadata %union.tree_node* %saved.0, metadata !5522, metadata !DIExpression()), !dbg !5576
  %tobool20 = icmp eq %union.tree_node* %saved.0, null, !dbg !5577
  br i1 %tobool20, label %for.end35, label %for.body21, !dbg !5577

for.body21:                                       ; preds = %for.cond19
  %purpose24 = getelementptr inbounds %union.tree_node, %union.tree_node* %saved.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5578
  %15 = bitcast i32* %purpose24 to i64*, !dbg !5578
  %16 = load i64, i64* %15, align 8, !dbg !5578
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %saved.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5579
  %18 = bitcast %union.tree_node** %17 to %struct.tree_int_cst**, !dbg !5579
  %19 = load %struct.tree_int_cst*, %struct.tree_int_cst** %18, align 8, !dbg !5579
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %19, i64 0, i32 1, i32 0, !dbg !5579
  %20 = load i64, i64* %low, align 8, !dbg !5579
  %idxprom29 = and i64 %20, 4294967295, !dbg !5580
  call void @llvm.dbg.value(metadata i64 %20, metadata !5529, metadata !DIExpression()), !dbg !5581
  %decl31 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i64 0, i64 %idxprom29, i32 0, !dbg !5582
  %21 = bitcast %union.tree_node*** %decl31 to i64**, !dbg !5582
  %22 = load i64*, i64** %21, align 16, !dbg !5582
  store i64 %16, i64* %22, align 8, !dbg !5583
  %chain34 = getelementptr inbounds %union.tree_node, %union.tree_node* %saved.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5584
  br label %for.cond19, !dbg !5585, !llvm.loop !5586

for.end35:                                        ; preds = %for.cond19
  %chain37 = getelementptr inbounds %union.tree_node, %union.tree_node* %stack.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5588
  %23 = load %union.tree_node*, %union.tree_node** %chain37, align 8, !dbg !5588
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !5518, metadata !DIExpression()), !dbg !5531
  br label %if.end38, !dbg !5589

if.end38:                                         ; preds = %for.end15, %for.end35
  %stack.1 = phi %union.tree_node* [ %23, %for.end35 ], [ null, %for.end15 ], !dbg !5531
  call void @llvm.dbg.value(metadata %union.tree_node* %stack.1, metadata !5518, metadata !DIExpression()), !dbg !5531
  store %union.tree_node* %stack.1, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 52), align 16, !dbg !5590
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5591
  ret void, !dbg !5591
}

declare dso_local void @append_to_statement_list(%union.tree_node*, %union.tree_node**) local_unnamed_addr #2

declare dso_local void @append_to_statement_list_force(%union.tree_node*, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @fname_as_string(i32 %pretty_p) local_unnamed_addr #5 !dbg !5592 {
entry:
  %cstr = alloca %struct.cpp_string, align 8
  %strname = alloca %struct.cpp_string, align 8
  call void @llvm.dbg.value(metadata i32 %pretty_p, metadata !5596, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.202, i64 0, i64 0), metadata !5597, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 2, metadata !5599, metadata !DIExpression()), !dbg !5608
  %0 = bitcast %struct.cpp_string* %cstr to i8*, !dbg !5609
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5609
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 16, i1 false), !dbg !5610
  %1 = bitcast %struct.cpp_string* %strname to i8*, !dbg !5609
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #6, !dbg !5609
  %tobool = icmp ne i32 %pretty_p, 0, !dbg !5611
  %spec.select1 = select i1 %tobool, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.202, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.201, i64 0, i64 0), !dbg !5613
  call void @llvm.dbg.value(metadata i8* %spec.select1, metadata !5597, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 undef, metadata !5599, metadata !DIExpression()), !dbg !5608
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5614
  %tobool1 = icmp eq %union.tree_node* %2, null, !dbg !5614
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5616

if.then2:                                         ; preds = %entry
  %spec.select = select i1 %tobool, i32 2, i32 0, !dbg !5613
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5599, metadata !DIExpression()), !dbg !5608
  %3 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !5617
  %call = tail call i8* %3(%union.tree_node* nonnull %2, i32 %spec.select) #7, !dbg !5618
  call void @llvm.dbg.value(metadata i8* %call, metadata !5597, metadata !DIExpression()), !dbg !5608
  br label %if.end3, !dbg !5619

if.end3:                                          ; preds = %entry, %if.then2
  %name.1 = phi i8* [ %call, %if.then2 ], [ %spec.select1, %entry ], !dbg !5608
  call void @llvm.dbg.value(metadata i8* %name.1, metadata !5597, metadata !DIExpression()), !dbg !5608
  %call4 = tail call i64 @strlen(i8* %name.1) #7, !dbg !5620
  %4 = trunc i64 %call4 to i32, !dbg !5620
  call void @llvm.dbg.value(metadata i32 %4, metadata !5600, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !5608
  %conv = shl i64 %call4, 32, !dbg !5621
  %sext = add i64 %conv, 12884901888, !dbg !5621
  %conv5 = ashr exact i64 %sext, 32, !dbg !5621
  %call6 = tail call i8* @xmalloc(i64 %conv5) #7, !dbg !5621
  call void @llvm.dbg.value(metadata i8* %call6, metadata !5598, metadata !DIExpression()), !dbg !5608
  %call8 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %call6, i64 %conv5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.203, i64 0, i64 0), i8* %name.1) #7, !dbg !5622
  %text = getelementptr inbounds %struct.cpp_string, %struct.cpp_string* %strname, i64 0, i32 1, !dbg !5623
  store i8* %call6, i8** %text, align 8, !dbg !5624
  %sub = add i32 %4, 2, !dbg !5625
  %len9 = getelementptr inbounds %struct.cpp_string, %struct.cpp_string* %strname, i64 0, i32 0, !dbg !5626
  store i32 %sub, i32* %len9, align 8, !dbg !5627
  %5 = load %struct.cpp_reader*, %struct.cpp_reader** @parse_in, align 8, !dbg !5628
  call void @llvm.dbg.value(metadata %struct.cpp_string* %cstr, metadata !5601, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  call void @llvm.dbg.value(metadata %struct.cpp_string* %strname, metadata !5607, metadata !DIExpression(DW_OP_deref)), !dbg !5608
  %call10 = call zeroext i8 @cpp_interpret_string(%struct.cpp_reader* %5, %struct.cpp_string* nonnull %strname, i64 1, %struct.cpp_string* nonnull %cstr, i32 61) #7, !dbg !5630
  %tobool11 = icmp eq i8 %call10, 0, !dbg !5630
  br i1 %tobool11, label %cleanup, label %if.then12, !dbg !5631

if.then12:                                        ; preds = %if.end3
  call void @free(i8* %call6) #7, !dbg !5632
  %text13 = getelementptr inbounds %struct.cpp_string, %struct.cpp_string* %cstr, i64 0, i32 1, !dbg !5634
  %6 = load i8*, i8** %text13, align 8, !dbg !5634
  br label %cleanup, !dbg !5635

cleanup:                                          ; preds = %if.end3, %if.then12
  %retval.0 = phi i8* [ %6, %if.then12 ], [ %call6, %if.end3 ], !dbg !5608
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #6, !dbg !5636
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5636
  ret i8* %retval.0, !dbg !5636
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) #2

declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare dso_local zeroext i8 @cpp_interpret_string(%struct.cpp_reader*, %struct.cpp_string*, i64, %struct.cpp_string*, i32) local_unnamed_addr #2

declare dso_local void @free(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fname_decl(i32 %loc, i32 %rid, %union.tree_node* %id) local_unnamed_addr #5 !dbg !5637 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5641, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %rid, metadata !5642, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata %union.tree_node* %id, metadata !5643, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5645, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 0, metadata !5644, metadata !DIExpression()), !dbg !5650
  br label %for.cond, !dbg !5651

for.cond:                                         ; preds = %for.inc, %entry
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5653
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !5644, metadata !DIExpression()), !dbg !5650
  %idxprom = zext i32 %ix.0 to i64, !dbg !5654
  %decl1 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i64 0, i64 %idxprom, i32 0, !dbg !5656
  %0 = load %union.tree_node**, %union.tree_node*** %decl1, align 16, !dbg !5656
  %tobool = icmp eq %union.tree_node** %0, null, !dbg !5657
  br i1 %tobool, label %for.end, label %for.body, !dbg !5657

for.body:                                         ; preds = %for.cond
  %rid4 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i64 0, i64 %idxprom, i32 1, !dbg !5658
  %1 = load i32, i32* %rid4, align 8, !dbg !5658
  %cmp = icmp eq i32 %1, %rid, !dbg !5660
  br i1 %cmp, label %for.end, label %for.inc, !dbg !5661

for.inc:                                          ; preds = %for.body
  %inc = add i32 %ix.0, 1, !dbg !5662
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5644, metadata !DIExpression()), !dbg !5650
  br label %for.cond, !dbg !5663, !llvm.loop !5664

for.end:                                          ; preds = %for.cond, %for.body
  %ix.0.lcssa = phi i32 [ %ix.0, %for.cond ], [ %ix.0, %for.body ], !dbg !5653
  %idxprom.lcssa = phi i64 [ %idxprom, %for.cond ], [ %idxprom, %for.body ], !dbg !5654
  %.lcssa = phi %union.tree_node** [ %0, %for.cond ], [ %0, %for.body ], !dbg !5656
  call void @llvm.dbg.value(metadata i32 %ix.0.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %ix.0.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %ix.0.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %ix.0.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %ix.0.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %ix.0.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5650
  %2 = load %union.tree_node*, %union.tree_node** %.lcssa, align 8, !dbg !5666
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5645, metadata !DIExpression()), !dbg !5650
  %tobool8 = icmp eq %union.tree_node* %2, null, !dbg !5667
  br i1 %tobool8, label %if.then9, label %if.end30, !dbg !5668

if.then9:                                         ; preds = %for.end
  %3 = load i32, i32* @input_location, align 4, !dbg !5669
  call void @llvm.dbg.value(metadata i32 %3, metadata !5649, metadata !DIExpression()), !dbg !5670
  store i32 0, i32* @input_location, align 4, !dbg !5671
  %call = tail call %union.tree_node* @push_stmt_list() #7, !dbg !5672
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5646, metadata !DIExpression()), !dbg !5670
  %4 = load %union.tree_node* (i32, %union.tree_node*, i32)*, %union.tree_node* (i32, %union.tree_node*, i32)** @make_fname_decl, align 8, !dbg !5673
  %pretty = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i64 0, i64 %idxprom.lcssa, i32 2, !dbg !5674
  %5 = load i32, i32* %pretty, align 4, !dbg !5674
  %call12 = tail call %union.tree_node* %4(i32 %loc, %union.tree_node* %id, i32 %5) #7, !dbg !5675
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !5645, metadata !DIExpression()), !dbg !5650
  %call13 = tail call %union.tree_node* @pop_stmt_list(%union.tree_node* %call) #7, !dbg !5676
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5646, metadata !DIExpression()), !dbg !5670
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5677
  %bf.load = load i64, i64* %6, align 8, !dbg !5677
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5677
  %cmp14 = icmp eq i64 %bf.cast1, 116, !dbg !5677
  br i1 %cmp14, label %land.lhs.true, label %if.then24, !dbg !5677

land.lhs.true:                                    ; preds = %if.then9
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5677
  %7 = bitcast %union.tree_node** %type to i64**, !dbg !5677
  %8 = load i64*, i64** %7, align 8, !dbg !5677
  %bf.load16 = load i64, i64* %8, align 8, !dbg !5677
  %bf.cast182 = and i64 %bf.load16, 65535, !dbg !5677
  %cmp19 = icmp eq i64 %bf.cast182, 19, !dbg !5677
  br i1 %cmp19, label %land.lhs.true20, label %if.then24, !dbg !5677

land.lhs.true20:                                  ; preds = %land.lhs.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5677
  %9 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5677
  %call22 = tail call i32 @integer_zerop(%union.tree_node* %9) #7, !dbg !5677
  %tobool23 = icmp eq i32 %call22, 0, !dbg !5677
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !5679

if.then24:                                        ; preds = %land.lhs.true20, %land.lhs.true, %if.then9
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 52), align 16, !dbg !5680
  %call25 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %call12, %union.tree_node* %call13, %union.tree_node* %10) #7, !dbg !5680
  store %union.tree_node* %call25, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 52), align 16, !dbg !5681
  br label %if.end26, !dbg !5682

if.end26:                                         ; preds = %land.lhs.true20, %if.then24
  store %union.tree_node* %call12, %union.tree_node** %.lcssa, align 8, !dbg !5683
  store i32 %3, i32* @input_location, align 4, !dbg !5684
  br label %if.end30, !dbg !5685

if.end30:                                         ; preds = %for.end, %if.end26
  %decl.0 = phi %union.tree_node* [ %2, %for.end ], [ %call12, %if.end26 ], !dbg !5650
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !5645, metadata !DIExpression()), !dbg !5650
  %tobool31 = icmp ne i32 %ix.0.lcssa, 0, !dbg !5686
  %11 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5688
  %tobool33 = icmp ne %union.tree_node* %11, null, !dbg !5688
  %or.cond = or i1 %tobool31, %tobool33, !dbg !5689
  br i1 %or.cond, label %if.end36, label %if.then34, !dbg !5689

if.then34:                                        ; preds = %if.end30
  %call35 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.204, i64 0, i64 0), %union.tree_node* %decl.0) #7, !dbg !5690
  br label %if.end36, !dbg !5690

if.end36:                                         ; preds = %if.then34, %if.end30
  ret %union.tree_node* %decl.0, !dbg !5691
}

declare dso_local %union.tree_node* @push_stmt_list() local_unnamed_addr #2

declare dso_local %union.tree_node* @pop_stmt_list(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @pedwarn(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fix_string_type(%union.tree_node* %value) local_unnamed_addr #5 !dbg !5692 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !5696, metadata !DIExpression()), !dbg !5706
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5707
  %1 = load i32, i32* %0, align 8, !dbg !5707
  call void @llvm.dbg.value(metadata i32 %1, metadata !5697, metadata !DIExpression()), !dbg !5706
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5708
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5708
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 38), align 16, !dbg !5710
  %cmp = icmp eq %union.tree_node* %2, %3, !dbg !5711
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5712

lor.lhs.false:                                    ; preds = %entry
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !5713
  br i1 %tobool, label %if.then, label %if.else, !dbg !5714

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.value(metadata i32 %1, metadata !5698, metadata !DIExpression()), !dbg !5706
  %e_type.2.pre = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !5715
  br label %if.end29, !dbg !5716

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 39), align 8, !dbg !5718
  %cmp6 = icmp eq %union.tree_node* %2, %4, !dbg !5720
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !5721

if.then7:                                         ; preds = %if.else
  %5 = load %struct.tree_type*, %struct.tree_type** bitcast ([55 x %union.tree_node*]* @c_global_trees to %struct.tree_type**), align 16, !dbg !5722
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !5722
  %bf.load = load i32, i32* %precision, align 4, !dbg !5722
  %bf.clear = lshr i32 %bf.load, 3, !dbg !5724
  %div = and i32 %bf.clear, 127, !dbg !5724
  %div9 = sdiv i32 %1, %div, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %div9, metadata !5698, metadata !DIExpression()), !dbg !5706
  %6 = bitcast %struct.tree_type* %5 to %union.tree_node*, !dbg !5726
  br label %if.end29, !dbg !5726

if.else10:                                        ; preds = %if.else
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 40), align 16, !dbg !5727
  %cmp13 = icmp eq %union.tree_node* %2, %7, !dbg !5729
  br i1 %cmp13, label %if.then14, label %if.else21, !dbg !5730

if.then14:                                        ; preds = %if.else10
  %8 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 1) to %struct.tree_type**), align 8, !dbg !5731
  %precision16 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 6, !dbg !5731
  %bf.load17 = load i32, i32* %precision16, align 4, !dbg !5731
  %bf.clear18 = lshr i32 %bf.load17, 3, !dbg !5733
  %div19 = and i32 %bf.clear18, 127, !dbg !5733
  %div20 = sdiv i32 %1, %div19, !dbg !5734
  call void @llvm.dbg.value(metadata i32 %div20, metadata !5698, metadata !DIExpression()), !dbg !5706
  %9 = bitcast %struct.tree_type* %8 to %union.tree_node*, !dbg !5735
  br label %if.end29, !dbg !5735

if.else21:                                        ; preds = %if.else10
  %10 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 2) to %struct.tree_type**), align 16, !dbg !5736
  %precision23 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %10, i64 0, i32 6, !dbg !5736
  %bf.load24 = load i32, i32* %precision23, align 4, !dbg !5736
  %bf.clear25 = lshr i32 %bf.load24, 3, !dbg !5738
  %div26 = and i32 %bf.clear25, 127, !dbg !5738
  %div27 = sdiv i32 %1, %div26, !dbg !5739
  call void @llvm.dbg.value(metadata i32 %div27, metadata !5698, metadata !DIExpression()), !dbg !5706
  %11 = bitcast %struct.tree_type* %10 to %union.tree_node*
  br label %if.end29

if.end29:                                         ; preds = %if.then7, %if.else21, %if.then14, %if.then
  %e_type.2 = phi %union.tree_node* [ %e_type.2.pre, %if.then ], [ %6, %if.then7 ], [ %9, %if.then14 ], [ %11, %if.else21 ], !dbg !5715
  %nchars.2 = phi i32 [ %1, %if.then ], [ %div9, %if.then7 ], [ %div20, %if.then14 ], [ %div27, %if.else21 ], !dbg !5715
  call void @llvm.dbg.value(metadata %union.tree_node* %e_type.2, metadata !5699, metadata !DIExpression()), !dbg !5706
  call void @llvm.dbg.value(metadata i32 %nchars.2, metadata !5698, metadata !DIExpression()), !dbg !5706
  %12 = load i32, i32* @warn_overlength_strings, align 4, !dbg !5740
  %tobool30 = icmp eq i32 %12, 0, !dbg !5740
  br i1 %tobool30, label %if.end29.if.end39_crit_edge, label %if.then31, !dbg !5741

if.end29.if.end39_crit_edge:                      ; preds = %if.end29
  %.pre = add nsw i32 %nchars.2, -1, !dbg !5742
  br label %if.end39, !dbg !5741

if.then31:                                        ; preds = %if.end29
  %13 = load i32, i32* @flag_isoc99, align 4, !dbg !5743
  %tobool32 = icmp eq i32 %13, 0, !dbg !5743
  %cond = select i1 %tobool32, i32 509, i32 4095, !dbg !5743
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5702, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i32 undef, metadata !5705, metadata !DIExpression()), !dbg !5744
  %sub = add nsw i32 %nchars.2, -1, !dbg !5745
  %cmp35 = icmp sgt i32 %sub, %cond, !dbg !5747
  br i1 %cmp35, label %if.then36, label %if.end39, !dbg !5748

if.then36:                                        ; preds = %if.then31
  %cond34 = select i1 %tobool32, i32 90, i32 99, !dbg !5749
  call void @llvm.dbg.value(metadata i32 %cond34, metadata !5705, metadata !DIExpression()), !dbg !5744
  %14 = load i32, i32* @input_location, align 4, !dbg !5750
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %14, i32 152, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.205, i64 0, i64 0), i32 %sub, i32 %cond, i32 %cond34) #7, !dbg !5751
  br label %if.end39, !dbg !5751

if.end39:                                         ; preds = %if.end29.if.end39_crit_edge, %if.then31, %if.then36
  %sub40.pre-phi = phi i32 [ %.pre, %if.end29.if.end39_crit_edge ], [ %sub, %if.then31 ], [ %sub, %if.then36 ], !dbg !5742
  %conv = sext i32 %sub40.pre-phi to i64, !dbg !5752
  %call41 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #7, !dbg !5753
  %call42 = tail call %union.tree_node* @build_index_type(%union.tree_node* %call41) #7, !dbg !5754
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !5700, metadata !DIExpression()), !dbg !5706
  %call43 = tail call %union.tree_node* @build_array_type(%union.tree_node* %e_type.2, %union.tree_node* %call42) #7, !dbg !5755
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !5701, metadata !DIExpression()), !dbg !5706
  %15 = load i32, i32* @c_language, align 4, !dbg !5756
  %and = and i32 %15, 2, !dbg !5756
  %16 = load i32, i32* @warn_write_strings, align 4, !dbg !5758
  %17 = or i32 %and, %16, !dbg !5759
  %18 = icmp eq i32 %17, 0, !dbg !5759
  br i1 %18, label %if.end50, label %if.then48, !dbg !5759

if.then48:                                        ; preds = %if.end39
  %call49 = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call43, i32 1) #7, !dbg !5760
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !5701, metadata !DIExpression()), !dbg !5706
  br label %if.end50, !dbg !5761

if.end50:                                         ; preds = %if.end39, %if.then48
  %a_type.0 = phi %union.tree_node* [ %call49, %if.then48 ], [ %call43, %if.end39 ], !dbg !5706
  call void @llvm.dbg.value(metadata %union.tree_node* %a_type.0, metadata !5701, metadata !DIExpression()), !dbg !5706
  store %union.tree_node* %a_type.0, %union.tree_node** %type, align 8, !dbg !5762
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5763
  %bf.load53 = load i64, i64* %19, align 8, !dbg !5764
  %bf.set62 = or i64 %bf.load53, 68288512, !dbg !5765
  store i64 %bf.set62, i64* %19, align 8, !dbg !5765
  ret %union.tree_node* %value, !dbg !5766
}

declare dso_local %union.tree_node* @build_index_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_fully_fold(%union.tree_node* %expr, i8 zeroext %in_init, i8* %maybe_const) local_unnamed_addr #5 !dbg !5767 {
entry:
  %dummy = alloca i8, align 1
  %maybe_const_itself = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5771, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i8 %in_init, metadata !5772, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !5773, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5775, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !5776, metadata !DIExpression(DW_OP_deref)), !dbg !5779
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %dummy) #6, !dbg !5780
  call void @llvm.dbg.value(metadata i8 1, metadata !5776, metadata !DIExpression()), !dbg !5779
  store i8 1, i8* %dummy, align 1, !dbg !5781
  call void @llvm.dbg.value(metadata i8* %maybe_const_itself, metadata !5777, metadata !DIExpression(DW_OP_deref)), !dbg !5779
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %maybe_const_itself) #6, !dbg !5782
  call void @llvm.dbg.value(metadata i8 1, metadata !5777, metadata !DIExpression()), !dbg !5779
  store i8 1, i8* %maybe_const_itself, align 1, !dbg !5783
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5784
  %bf.load = load i64, i64* %0, align 8, !dbg !5784
  %bf.cast = and i64 %bf.load, 65535, !dbg !5784
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5784
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5784
  %cmp = icmp ugt i32 %1, 3, !dbg !5784
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !5784

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %1, 11, !dbg !5784
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !5784

cond.true:                                        ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5784
  %3 = load i32, i32* %2, align 8, !dbg !5784
  br label %cond.end, !dbg !5784

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5784
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5778, metadata !DIExpression()), !dbg !5779
  %4 = load i32, i32* @c_language, align 4, !dbg !5785
  %and = and i32 %4, 2, !dbg !5785
  %cmp8 = icmp eq i32 %and, 0, !dbg !5785
  br i1 %cmp8, label %if.end, label %if.then, !dbg !5787

if.then:                                          ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 1121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !5788
  %bf.load12.pre = load i64, i64* %0, align 8, !dbg !5789
  br label %if.end, !dbg !5788

if.end:                                           ; preds = %cond.end, %if.then
  %bf.load12 = phi i64 [ %bf.load, %cond.end ], [ %bf.load12.pre, %if.then ], !dbg !5789
  %tobool = icmp eq i8* %maybe_const, null, !dbg !5791
  %spec.select = select i1 %tobool, i8* %dummy, i8* %maybe_const, !dbg !5793
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !5773, metadata !DIExpression()), !dbg !5779
  %bf.cast141 = and i64 %bf.load12, 65535, !dbg !5794
  %cmp15 = icmp eq i64 %bf.cast141, 190, !dbg !5794
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !5795

if.then16:                                        ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5796
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5796
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5775, metadata !DIExpression()), !dbg !5779
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5798
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5798
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !5771, metadata !DIExpression()), !dbg !5779
  br label %if.end19, !dbg !5799

if.end19:                                         ; preds = %if.then16, %if.end
  %eptype.0 = phi %union.tree_node* [ %5, %if.then16 ], [ null, %if.end ], !dbg !5779
  %expr.addr.0 = phi %union.tree_node* [ %6, %if.then16 ], [ %expr, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !5771, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata %union.tree_node* %eptype.0, metadata !5775, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i8* %maybe_const_itself, metadata !5777, metadata !DIExpression(DW_OP_deref)), !dbg !5779
  %call = call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %expr.addr.0, i8 zeroext %in_init, i8* %spec.select, i8* nonnull %maybe_const_itself) #8, !dbg !5800
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5774, metadata !DIExpression()), !dbg !5779
  %tobool20 = icmp eq %union.tree_node* %eptype.0, null, !dbg !5801
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !5803

if.then21:                                        ; preds = %if.end19
  %call22 = call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* nonnull %eptype.0, %union.tree_node* %call) #7, !dbg !5804
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !5774, metadata !DIExpression()), !dbg !5779
  br label %if.end23, !dbg !5805

if.end23:                                         ; preds = %if.end19, %if.then21
  %ret.0 = phi %union.tree_node* [ %call22, %if.then21 ], [ %call, %if.end19 ], !dbg !5779
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !5774, metadata !DIExpression()), !dbg !5779
  %7 = load i8, i8* %maybe_const_itself, align 1, !dbg !5806
  call void @llvm.dbg.value(metadata i8 %7, metadata !5777, metadata !DIExpression()), !dbg !5779
  %8 = load i8, i8* %spec.select, align 1, !dbg !5807
  %and252 = and i8 %8, %7, !dbg !5807
  store i8 %and252, i8* %spec.select, align 1, !dbg !5807
  call void @llvm.dbg.value(metadata i8* %maybe_const_itself, metadata !5777, metadata !DIExpression(DW_OP_deref)), !dbg !5779
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %maybe_const_itself) #6, !dbg !5808
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !5776, metadata !DIExpression(DW_OP_deref)), !dbg !5779
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %dummy) #6, !dbg !5808
  ret %union.tree_node* %ret.0, !dbg !5809
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %expr, i8 zeroext %in_init, i8* %maybe_const_operands, i8* %maybe_const_itself) unnamed_addr #5 !dbg !5810 {
entry:
  %op0_const = alloca i8, align 1
  %op1_const = alloca i8, align 1
  %op2_const = alloca i8, align 1
  %op0_const_self = alloca i8, align 1
  %op1_const_self = alloca i8, align 1
  %op2_const_self = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5814, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i8 %in_init, metadata !5815, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %maybe_const_operands, metadata !5816, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %maybe_const_itself, metadata !5817, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5818, metadata !DIExpression()), !dbg !5842
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5843
  %bf.load = load i64, i64* %0, align 8, !dbg !5843
  %1 = trunc i64 %bf.load to i32, !dbg !5843
  %bf.cast = and i32 %1, 65535, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5819, metadata !DIExpression()), !dbg !5842
  %idxprom = zext i32 %bf.cast to i64, !dbg !5844
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !5844
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5844
  call void @llvm.dbg.value(metadata i32 %2, metadata !5820, metadata !DIExpression()), !dbg !5842
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !5845
  %arrayidx6 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast4, !dbg !5845
  %3 = load i32, i32* %arrayidx6, align 4, !dbg !5845
  %cmp = icmp ugt i32 %3, 3, !dbg !5845
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !5845

land.lhs.true:                                    ; preds = %entry
  %cmp13 = icmp ult i32 %3, 11, !dbg !5845
  br i1 %cmp13, label %cond.true, label %cond.end, !dbg !5845

cond.true:                                        ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5845
  %5 = load i32, i32* %4, align 8, !dbg !5845
  br label %cond.end, !dbg !5845

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5845
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5821, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %op0_const, metadata !5829, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op0_const) #6, !dbg !5846
  call void @llvm.dbg.value(metadata i8 1, metadata !5829, metadata !DIExpression()), !dbg !5842
  store i8 1, i8* %op0_const, align 1, !dbg !5847
  call void @llvm.dbg.value(metadata i8* %op1_const, metadata !5830, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op1_const) #6, !dbg !5846
  call void @llvm.dbg.value(metadata i8 1, metadata !5830, metadata !DIExpression()), !dbg !5842
  store i8 1, i8* %op1_const, align 1, !dbg !5848
  call void @llvm.dbg.value(metadata i8* %op2_const, metadata !5831, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op2_const) #6, !dbg !5846
  call void @llvm.dbg.value(metadata i8 1, metadata !5831, metadata !DIExpression()), !dbg !5842
  store i8 1, i8* %op2_const, align 1, !dbg !5849
  call void @llvm.dbg.value(metadata i8* %op0_const_self, metadata !5832, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op0_const_self) #6, !dbg !5850
  call void @llvm.dbg.value(metadata i8 1, metadata !5832, metadata !DIExpression()), !dbg !5842
  store i8 1, i8* %op0_const_self, align 1, !dbg !5851
  call void @llvm.dbg.value(metadata i8* %op1_const_self, metadata !5833, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op1_const_self) #6, !dbg !5850
  call void @llvm.dbg.value(metadata i8 1, metadata !5833, metadata !DIExpression()), !dbg !5842
  store i8 1, i8* %op1_const_self, align 1, !dbg !5852
  call void @llvm.dbg.value(metadata i8* %op2_const_self, metadata !5834, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op2_const_self) #6, !dbg !5850
  call void @llvm.dbg.value(metadata i8 1, metadata !5834, metadata !DIExpression()), !dbg !5842
  store i8 1, i8* %op2_const_self, align 1, !dbg !5853
  %6 = load i32, i32* @c_language, align 4, !dbg !5854
  %and = and i32 %6, 2, !dbg !5854
  %cmp18 = icmp eq i32 %and, 0, !dbg !5854
  br i1 %cmp18, label %if.end, label %if.then, !dbg !5856

if.then:                                          ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 1165, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !5857
  br label %if.end, !dbg !5857

if.end:                                           ; preds = %cond.end, %if.then
  %.off = add i32 %2, -4, !dbg !5858
  %7 = icmp ugt i32 %.off, 6, !dbg !5858
  %cmp25 = icmp eq i32 %2, 8, !dbg !5860
  %or.cond1 = or i1 %7, %cmp25, !dbg !5858
  %cmp28 = icmp eq i32 %bf.cast, 120, !dbg !5861
  %or.cond2 = or i1 %or.cond1, %cmp28, !dbg !5858
  br i1 %or.cond2, label %cleanup, label %if.end31, !dbg !5858

if.end31:                                         ; preds = %if.end
  %cmp32 = icmp eq i32 %2, 9, !dbg !5862
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !5864

if.then34:                                        ; preds = %if.end31
  store i8 0, i8* %maybe_const_operands, align 1, !dbg !5865
  %call = tail call %union.tree_node* @fold(%union.tree_node* %expr) #7, !dbg !5867
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %out, !dbg !5868

if.end35:                                         ; preds = %if.end31
  %trunc = trunc i64 %bf.load to i16, !dbg !5869
  switch i16 %trunc, label %sw.epilog [
    i16 189, label %if.then38
    i16 53, label %sw.bb
    i16 125, label %sw.bb
    i16 126, label %sw.bb
    i16 127, label %sw.bb
    i16 128, label %sw.bb
    i16 52, label %sw.bb
    i16 129, label %sw.bb66
    i16 55, label %sw.bb66
    i16 58, label %sw.bb66
    i16 50, label %sw.bb66
  ], !dbg !5869

if.then38:                                        ; preds = %if.end35
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5870
  %8 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5870
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5837, metadata !DIExpression()), !dbg !5871
  %arrayidx43 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5872
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx43, align 8, !dbg !5872
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5840, metadata !DIExpression()), !dbg !5871
  %bf.load45 = load i64, i64* %0, align 8, !dbg !5873
  %bf.cast4890 = and i64 %bf.load45, 17179869184, !dbg !5873
  %tobool = icmp eq i64 %bf.cast4890, 0, !dbg !5873
  br i1 %tobool, label %if.end50, label %if.then49, !dbg !5875

if.then49:                                        ; preds = %if.then38
  store i8 0, i8* %maybe_const_operands, align 1, !dbg !5876
  %bf.load52.pre = load i64, i64* %0, align 8, !dbg !5877
  br label %if.end50, !dbg !5879

if.end50:                                         ; preds = %if.then38, %if.then49
  %bf.load52 = phi i64 [ %bf.load45, %if.then38 ], [ %bf.load52.pre, %if.then49 ], !dbg !5877
  %bf.cast5591 = and i64 %bf.load52, 8589934592, !dbg !5877
  %tobool56 = icmp eq i64 %bf.cast5591, 0, !dbg !5877
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !5880

if.then57:                                        ; preds = %if.end50
  store i8 0, i8* %maybe_const_itself, align 1, !dbg !5881
  br label %if.end58, !dbg !5882

if.end58:                                         ; preds = %if.end50, %if.then57
  %tobool59 = icmp eq %union.tree_node* %8, null, !dbg !5883
  %tobool61 = icmp ne i8 %in_init, 0, !dbg !5885
  %or.cond3 = or i1 %tobool59, %tobool61, !dbg !5886
  br i1 %or.cond3, label %out, label %if.then62, !dbg !5886

if.then62:                                        ; preds = %if.end58
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5887
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5887
  %call63 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %10, %union.tree_node* %8, %union.tree_node* %9) #7, !dbg !5887
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %out, !dbg !5888

sw.bb:                                            ; preds = %if.end35, %if.end35, %if.end35, %if.end35, %if.end35, %if.end35
  store i8 0, i8* %maybe_const_operands, align 1, !dbg !5889
  br label %sw.epilog, !dbg !5891

sw.bb66:                                          ; preds = %if.end35, %if.end35, %if.end35, %if.end35
  store i8 0, i8* %maybe_const_operands, align 1, !dbg !5892
  %call67 = tail call %union.tree_node* @fold(%union.tree_node* %expr) #7, !dbg !5893
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %out, !dbg !5894

sw.epilog:                                        ; preds = %if.end35, %sw.bb
  switch i16 %trunc, label %out [
    i16 190, label %sw.bb1118
    i16 41, label %sw.bb69
    i16 45, label %sw.bb149
    i16 52, label %sw.bb302
    i16 53, label %sw.bb302
    i16 125, label %sw.bb302
    i16 126, label %sw.bb302
    i16 127, label %sw.bb302
    i16 128, label %sw.bb302
    i16 63, label %sw.bb302
    i16 64, label %sw.bb302
    i16 65, label %sw.bb302
    i16 66, label %sw.bb302
    i16 67, label %sw.bb302
    i16 68, label %sw.bb302
    i16 69, label %sw.bb302
    i16 71, label %sw.bb302
    i16 75, label %sw.bb302
    i16 76, label %sw.bb302
    i16 83, label %sw.bb302
    i16 84, label %sw.bb302
    i16 87, label %sw.bb302
    i16 88, label %sw.bb302
    i16 89, label %sw.bb302
    i16 97, label %sw.bb302
    i16 98, label %sw.bb302
    i16 99, label %sw.bb302
    i16 100, label %sw.bb302
    i16 101, label %sw.bb302
    i16 102, label %sw.bb302
    i16 123, label %sw.bb302
    i16 93, label %sw.bb302
    i16 94, label %sw.bb302
    i16 95, label %sw.bb302
    i16 103, label %sw.bb302
    i16 104, label %sw.bb302
    i16 105, label %sw.bb302
    i16 106, label %sw.bb302
    i16 107, label %sw.bb302
    i16 108, label %sw.bb302
    i16 109, label %sw.bb302
    i16 47, label %sw.bb515
    i16 77, label %sw.bb515
    i16 78, label %sw.bb515
    i16 116, label %sw.bb515
    i16 113, label %sw.bb515
    i16 117, label %sw.bb515
    i16 79, label %sw.bb515
    i16 90, label %sw.bb515
    i16 96, label %sw.bb515
    i16 121, label %sw.bb515
    i16 124, label %sw.bb515
    i16 43, label %sw.bb515
    i16 44, label %sw.bb515
    i16 91, label %sw.bb704
    i16 92, label %sw.bb704
    i16 56, label %sw.bb881
  ], !dbg !5895

sw.bb69:                                          ; preds = %sw.epilog
  %operands71 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5896
  %11 = load %union.tree_node*, %union.tree_node** %operands71, align 8, !dbg !5896
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5826, metadata !DIExpression()), !dbg !5842
  %arrayidx75 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands71, i64 1, !dbg !5898
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx75, align 8, !dbg !5898
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !5823, metadata !DIExpression()), !dbg !5842
  %arrayidx78 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands71, i64 2, !dbg !5899
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx78, align 8, !dbg !5899
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !5824, metadata !DIExpression()), !dbg !5842
  %call79 = tail call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %11, i8 zeroext %in_init, i8* %maybe_const_operands, i8* %maybe_const_itself) #8, !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %call79, metadata !5822, metadata !DIExpression()), !dbg !5842
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond, !dbg !5902

while.cond:                                       ; preds = %while.body, %sw.bb69
  %op0.0 = phi %union.tree_node* [ %call79, %sw.bb69 ], [ %18, %while.body ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !5822, metadata !DIExpression()), !dbg !5842
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5902
  %bf.load81 = load i64, i64* %15, align 8, !dbg !5902
  %bf.cast8387 = and i64 %bf.load81, 65535, !dbg !5902
  %cmp84 = icmp eq i64 %bf.cast8387, 116, !dbg !5902
  br i1 %cmp84, label %land.lhs.true100, label %lor.lhs.false86, !dbg !5902

lor.lhs.false86:                                  ; preds = %while.cond
  %16 = or i64 %bf.cast8387, 4, !dbg !5902
  %17 = icmp eq i64 %16, 117, !dbg !5902
  br i1 %17, label %land.lhs.true100, label %while.end, !dbg !5902

land.lhs.true100:                                 ; preds = %lor.lhs.false86, %while.cond
  %operands102 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5902
  %18 = load %union.tree_node*, %union.tree_node** %operands102, align 8, !dbg !5902
  %cmp104 = icmp eq %union.tree_node* %18, %14, !dbg !5902
  br i1 %cmp104, label %while.end, label %land.rhs, !dbg !5902

land.rhs:                                         ; preds = %land.lhs.true100
  %type107 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5902
  %19 = load %union.tree_node*, %union.tree_node** %type107, align 8, !dbg !5902
  %type112 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5902
  %20 = load %union.tree_node*, %union.tree_node** %type112, align 8, !dbg !5902
  %cmp113 = icmp eq %union.tree_node* %19, %20, !dbg !5902
  br i1 %cmp113, label %while.body, label %while.end, !dbg !5902

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !5822, metadata !DIExpression()), !dbg !5842
  br label %while.cond, !dbg !5902, !llvm.loop !5903

while.end:                                        ; preds = %lor.lhs.false86, %land.lhs.true100, %land.rhs
  %op0.0.lcssa = phi %union.tree_node* [ %op0.0, %lor.lhs.false86 ], [ %op0.0, %land.lhs.true100 ], [ %op0.0, %land.rhs ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  %cmp118 = icmp eq %union.tree_node* %op0.0.lcssa, %11, !dbg !5904
  br i1 %cmp118, label %if.end124, label %if.then120, !dbg !5906

if.then120:                                       ; preds = %while.end
  %type122 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5907
  %21 = load %union.tree_node*, %union.tree_node** %type122, align 8, !dbg !5907
  %call123 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %21, %union.tree_node* %op0.0.lcssa, %union.tree_node* %12, %union.tree_node* %13) #7, !dbg !5907
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %if.end124, !dbg !5908

if.end124:                                        ; preds = %while.end, %if.then120
  %ret.1 = phi %union.tree_node* [ %call123, %if.then120 ], [ %expr, %while.end ], !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !5818, metadata !DIExpression()), !dbg !5842
  %cmp125 = icmp eq %union.tree_node* %ret.1, %expr, !dbg !5909
  br i1 %cmp125, label %out, label %if.then127, !dbg !5911

if.then127:                                       ; preds = %if.end124
  %bf.load129 = load i64, i64* %0, align 8, !dbg !5912
  %bf.cast132 = and i64 %bf.load129, 1048576, !dbg !5912
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5914
  %bf.load134 = load i64, i64* %22, align 8, !dbg !5915
  %bf.clear135 = and i64 %bf.load134, -1048577, !dbg !5915
  %bf.set = or i64 %bf.clear135, %bf.cast132, !dbg !5915
  store i64 %bf.set, i64* %22, align 8, !dbg !5915
  %bf.load137 = load i64, i64* %0, align 8, !dbg !5916
  %bf.cast140 = and i64 %bf.load137, 524288, !dbg !5916
  %bf.clear145 = and i64 %bf.set, -524289, !dbg !5917
  %bf.set146 = or i64 %bf.clear145, %bf.cast140, !dbg !5917
  store i64 %bf.set146, i64* %22, align 8, !dbg !5917
  br label %out, !dbg !5918

sw.bb149:                                         ; preds = %sw.epilog
  %operands151 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5919
  %23 = load %union.tree_node*, %union.tree_node** %operands151, align 8, !dbg !5919
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !5826, metadata !DIExpression()), !dbg !5842
  %arrayidx155 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands151, i64 1, !dbg !5920
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx155, align 8, !dbg !5920
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !5827, metadata !DIExpression()), !dbg !5842
  %arrayidx158 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands151, i64 2, !dbg !5921
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx158, align 8, !dbg !5921
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !5824, metadata !DIExpression()), !dbg !5842
  %arrayidx161 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands151, i64 3, !dbg !5922
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx161, align 8, !dbg !5922
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !5825, metadata !DIExpression()), !dbg !5842
  %call162 = tail call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %23, i8 zeroext %in_init, i8* %maybe_const_operands, i8* %maybe_const_itself) #8, !dbg !5923
  call void @llvm.dbg.value(metadata %union.tree_node* %call162, metadata !5822, metadata !DIExpression()), !dbg !5842
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond163, !dbg !5924

while.cond163:                                    ; preds = %while.body201, %sw.bb149
  %op0.1 = phi %union.tree_node* [ %call162, %sw.bb149 ], [ %31, %while.body201 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1, metadata !5822, metadata !DIExpression()), !dbg !5842
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5924
  %bf.load165 = load i64, i64* %28, align 8, !dbg !5924
  %bf.cast16781 = and i64 %bf.load165, 65535, !dbg !5924
  %cmp168 = icmp eq i64 %bf.cast16781, 116, !dbg !5924
  br i1 %cmp168, label %land.lhs.true184, label %lor.lhs.false170, !dbg !5924

lor.lhs.false170:                                 ; preds = %while.cond163
  %29 = or i64 %bf.cast16781, 4, !dbg !5924
  %30 = icmp eq i64 %29, 117, !dbg !5924
  br i1 %30, label %land.lhs.true184, label %while.end205, !dbg !5924

land.lhs.true184:                                 ; preds = %lor.lhs.false170, %while.cond163
  %operands186 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5924
  %31 = load %union.tree_node*, %union.tree_node** %operands186, align 8, !dbg !5924
  %cmp188 = icmp eq %union.tree_node* %31, %27, !dbg !5924
  br i1 %cmp188, label %while.end205, label %land.rhs190, !dbg !5924

land.rhs190:                                      ; preds = %land.lhs.true184
  %type192 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5924
  %32 = load %union.tree_node*, %union.tree_node** %type192, align 8, !dbg !5924
  %type197 = getelementptr inbounds %union.tree_node, %union.tree_node* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5924
  %33 = load %union.tree_node*, %union.tree_node** %type197, align 8, !dbg !5924
  %cmp198 = icmp eq %union.tree_node* %32, %33, !dbg !5924
  br i1 %cmp198, label %while.body201, label %while.end205, !dbg !5924

while.body201:                                    ; preds = %land.rhs190
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !5822, metadata !DIExpression()), !dbg !5842
  br label %while.cond163, !dbg !5924, !llvm.loop !5925

while.end205:                                     ; preds = %lor.lhs.false170, %land.lhs.true184, %land.rhs190
  %op0.1.lcssa = phi %union.tree_node* [ %op0.1, %lor.lhs.false170 ], [ %op0.1, %land.lhs.true184 ], [ %op0.1, %land.rhs190 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  %call206 = tail call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %24, i8 zeroext %in_init, i8* %maybe_const_operands, i8* %maybe_const_itself) #8, !dbg !5926
  call void @llvm.dbg.value(metadata %union.tree_node* %call206, metadata !5823, metadata !DIExpression()), !dbg !5842
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond207, !dbg !5927

while.cond207:                                    ; preds = %while.body245, %while.end205
  %op1.0 = phi %union.tree_node* [ %call206, %while.end205 ], [ %38, %while.body245 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !5823, metadata !DIExpression()), !dbg !5842
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5927
  %bf.load209 = load i64, i64* %35, align 8, !dbg !5927
  %bf.cast21184 = and i64 %bf.load209, 65535, !dbg !5927
  %cmp212 = icmp eq i64 %bf.cast21184, 116, !dbg !5927
  br i1 %cmp212, label %land.lhs.true228, label %lor.lhs.false214, !dbg !5927

lor.lhs.false214:                                 ; preds = %while.cond207
  %36 = or i64 %bf.cast21184, 4, !dbg !5927
  %37 = icmp eq i64 %36, 117, !dbg !5927
  br i1 %37, label %land.lhs.true228, label %while.end249, !dbg !5927

land.lhs.true228:                                 ; preds = %lor.lhs.false214, %while.cond207
  %operands230 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5927
  %38 = load %union.tree_node*, %union.tree_node** %operands230, align 8, !dbg !5927
  %cmp232 = icmp eq %union.tree_node* %38, %34, !dbg !5927
  br i1 %cmp232, label %while.end249, label %land.rhs234, !dbg !5927

land.rhs234:                                      ; preds = %land.lhs.true228
  %type236 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5927
  %39 = load %union.tree_node*, %union.tree_node** %type236, align 8, !dbg !5927
  %type241 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5927
  %40 = load %union.tree_node*, %union.tree_node** %type241, align 8, !dbg !5927
  %cmp242 = icmp eq %union.tree_node* %39, %40, !dbg !5927
  br i1 %cmp242, label %while.body245, label %while.end249, !dbg !5927

while.body245:                                    ; preds = %land.rhs234
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !5823, metadata !DIExpression()), !dbg !5842
  br label %while.cond207, !dbg !5927, !llvm.loop !5928

while.end249:                                     ; preds = %lor.lhs.false214, %land.lhs.true228, %land.rhs234
  %op1.0.lcssa = phi %union.tree_node* [ %op1.0, %lor.lhs.false214 ], [ %op1.0, %land.lhs.true228 ], [ %op1.0, %land.rhs234 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  %call250 = tail call %union.tree_node* @decl_constant_value_for_optimization(%union.tree_node* %op1.0.lcssa) #8, !dbg !5929
  call void @llvm.dbg.value(metadata %union.tree_node* %call250, metadata !5823, metadata !DIExpression()), !dbg !5842
  %cmp251 = icmp ne %union.tree_node* %op0.1.lcssa, %23, !dbg !5930
  %cmp254 = icmp ne %union.tree_node* %call250, %24, !dbg !5932
  %or.cond7 = or i1 %cmp251, %cmp254, !dbg !5933
  br i1 %or.cond7, label %if.then256, label %if.end260, !dbg !5933

if.then256:                                       ; preds = %while.end249
  %type258 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5934
  %41 = load %union.tree_node*, %union.tree_node** %type258, align 8, !dbg !5934
  %call259 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %41, %union.tree_node* %op0.1.lcssa, %union.tree_node* %call250, %union.tree_node* %25, %union.tree_node* %26) #7, !dbg !5934
  call void @llvm.dbg.value(metadata %union.tree_node* %call259, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %if.end260, !dbg !5935

if.end260:                                        ; preds = %while.end249, %if.then256
  %ret.2 = phi %union.tree_node* [ %call259, %if.then256 ], [ %expr, %while.end249 ], !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.2, metadata !5818, metadata !DIExpression()), !dbg !5842
  %cmp261 = icmp eq %union.tree_node* %ret.2, %expr, !dbg !5936
  br i1 %cmp261, label %if.end300, label %if.then263, !dbg !5938

if.then263:                                       ; preds = %if.end260
  %bf.load265 = load i64, i64* %0, align 8, !dbg !5939
  %bf.cast268 = and i64 %bf.load265, 1048576, !dbg !5939
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5941
  %bf.load270 = load i64, i64* %42, align 8, !dbg !5942
  %bf.clear273 = and i64 %bf.load270, -1048577, !dbg !5942
  %bf.set274 = or i64 %bf.clear273, %bf.cast268, !dbg !5942
  store i64 %bf.set274, i64* %42, align 8, !dbg !5942
  %bf.load277 = load i64, i64* %0, align 8, !dbg !5943
  %bf.cast280 = and i64 %bf.load277, 65536, !dbg !5943
  %bf.clear285 = and i64 %bf.set274, -65537, !dbg !5944
  %bf.set286 = or i64 %bf.clear285, %bf.cast280, !dbg !5944
  store i64 %bf.set286, i64* %42, align 8, !dbg !5944
  %bf.load289 = load i64, i64* %0, align 8, !dbg !5945
  %bf.cast292 = and i64 %bf.load289, 524288, !dbg !5945
  %bf.clear297 = and i64 %bf.set286, -524289, !dbg !5946
  %bf.set298 = or i64 %bf.clear297, %bf.cast292, !dbg !5946
  store i64 %bf.set298, i64* %42, align 8, !dbg !5946
  br label %if.end300, !dbg !5947

if.end300:                                        ; preds = %if.end260, %if.then263
  %call301 = tail call %union.tree_node* @fold(%union.tree_node* %ret.2) #7, !dbg !5948
  call void @llvm.dbg.value(metadata %union.tree_node* %call301, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %out, !dbg !5949

sw.bb302:                                         ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %operands304 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5950
  %43 = load %union.tree_node*, %union.tree_node** %operands304, align 8, !dbg !5950
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !5826, metadata !DIExpression()), !dbg !5842
  %arrayidx308 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands304, i64 1, !dbg !5951
  %44 = load %union.tree_node*, %union.tree_node** %arrayidx308, align 8, !dbg !5951
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !5827, metadata !DIExpression()), !dbg !5842
  %call309 = tail call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %43, i8 zeroext %in_init, i8* %maybe_const_operands, i8* %maybe_const_itself) #8, !dbg !5952
  call void @llvm.dbg.value(metadata %union.tree_node* %call309, metadata !5822, metadata !DIExpression()), !dbg !5842
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond310, !dbg !5953

while.cond310:                                    ; preds = %while.body348, %sw.bb302
  %op0.2 = phi %union.tree_node* [ %call309, %sw.bb302 ], [ %49, %while.body348 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2, metadata !5822, metadata !DIExpression()), !dbg !5842
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5953
  %bf.load312 = load i64, i64* %46, align 8, !dbg !5953
  %bf.cast31471 = and i64 %bf.load312, 65535, !dbg !5953
  %cmp315 = icmp eq i64 %bf.cast31471, 116, !dbg !5953
  br i1 %cmp315, label %land.lhs.true331, label %lor.lhs.false317, !dbg !5953

lor.lhs.false317:                                 ; preds = %while.cond310
  %47 = or i64 %bf.cast31471, 4, !dbg !5953
  %48 = icmp eq i64 %47, 117, !dbg !5953
  br i1 %48, label %land.lhs.true331, label %while.end352, !dbg !5953

land.lhs.true331:                                 ; preds = %lor.lhs.false317, %while.cond310
  %operands333 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5953
  %49 = load %union.tree_node*, %union.tree_node** %operands333, align 8, !dbg !5953
  %cmp335 = icmp eq %union.tree_node* %49, %45, !dbg !5953
  br i1 %cmp335, label %while.end352, label %land.rhs337, !dbg !5953

land.rhs337:                                      ; preds = %land.lhs.true331
  %type339 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5953
  %50 = load %union.tree_node*, %union.tree_node** %type339, align 8, !dbg !5953
  %type344 = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5953
  %51 = load %union.tree_node*, %union.tree_node** %type344, align 8, !dbg !5953
  %cmp345 = icmp eq %union.tree_node* %50, %51, !dbg !5953
  br i1 %cmp345, label %while.body348, label %while.end352, !dbg !5953

while.body348:                                    ; preds = %land.rhs337
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !5822, metadata !DIExpression()), !dbg !5842
  br label %while.cond310, !dbg !5953, !llvm.loop !5954

while.end352:                                     ; preds = %lor.lhs.false317, %land.lhs.true331, %land.rhs337
  %op0.2.lcssa = phi %union.tree_node* [ %op0.2, %lor.lhs.false317 ], [ %op0.2, %land.lhs.true331 ], [ %op0.2, %land.rhs337 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  switch i16 %trunc, label %if.then367 [
    i16 53, label %if.end369
    i16 125, label %if.end369
    i16 126, label %if.end369
    i16 127, label %if.end369
    i16 128, label %if.end369
  ], !dbg !5955

if.then367:                                       ; preds = %while.end352
  %call368 = tail call %union.tree_node* @decl_constant_value_for_optimization(%union.tree_node* %op0.2.lcssa) #8, !dbg !5957
  call void @llvm.dbg.value(metadata %union.tree_node* %call368, metadata !5822, metadata !DIExpression()), !dbg !5842
  br label %if.end369, !dbg !5958

if.end369:                                        ; preds = %while.end352, %while.end352, %while.end352, %while.end352, %while.end352, %if.then367
  %op0.3 = phi %union.tree_node* [ %call368, %if.then367 ], [ %op0.2.lcssa, %while.end352 ], [ %op0.2.lcssa, %while.end352 ], [ %op0.2.lcssa, %while.end352 ], [ %op0.2.lcssa, %while.end352 ], [ %op0.2.lcssa, %while.end352 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.3, metadata !5822, metadata !DIExpression()), !dbg !5842
  %cmp370 = icmp eq i32 %bf.cast, 53, !dbg !5959
  br i1 %cmp370, label %if.end374, label %if.then372, !dbg !5961

if.then372:                                       ; preds = %if.end369
  %call373 = tail call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %44, i8 zeroext %in_init, i8* %maybe_const_operands, i8* %maybe_const_itself) #8, !dbg !5962
  call void @llvm.dbg.value(metadata %union.tree_node* %call373, metadata !5823, metadata !DIExpression()), !dbg !5842
  br label %if.end374, !dbg !5963

if.end374:                                        ; preds = %if.end369, %if.then372
  %op1.1 = phi %union.tree_node* [ %call373, %if.then372 ], [ %44, %if.end369 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.1, metadata !5823, metadata !DIExpression()), !dbg !5842
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond375, !dbg !5964

while.cond375:                                    ; preds = %while.body413, %if.end374
  %op1.2 = phi %union.tree_node* [ %op1.1, %if.end374 ], [ %56, %while.body413 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2, metadata !5823, metadata !DIExpression()), !dbg !5842
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5964
  %bf.load377 = load i64, i64* %53, align 8, !dbg !5964
  %bf.cast37975 = and i64 %bf.load377, 65535, !dbg !5964
  %cmp380 = icmp eq i64 %bf.cast37975, 116, !dbg !5964
  br i1 %cmp380, label %land.lhs.true396, label %lor.lhs.false382, !dbg !5964

lor.lhs.false382:                                 ; preds = %while.cond375
  %54 = or i64 %bf.cast37975, 4, !dbg !5964
  %55 = icmp eq i64 %54, 117, !dbg !5964
  br i1 %55, label %land.lhs.true396, label %while.end417, !dbg !5964

land.lhs.true396:                                 ; preds = %lor.lhs.false382, %while.cond375
  %operands398 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5964
  %56 = load %union.tree_node*, %union.tree_node** %operands398, align 8, !dbg !5964
  %cmp400 = icmp eq %union.tree_node* %56, %52, !dbg !5964
  br i1 %cmp400, label %while.end417, label %land.rhs402, !dbg !5964

land.rhs402:                                      ; preds = %land.lhs.true396
  %type404 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5964
  %57 = load %union.tree_node*, %union.tree_node** %type404, align 8, !dbg !5964
  %type409 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5964
  %58 = load %union.tree_node*, %union.tree_node** %type409, align 8, !dbg !5964
  %cmp410 = icmp eq %union.tree_node* %57, %58, !dbg !5964
  br i1 %cmp410, label %while.body413, label %while.end417, !dbg !5964

while.body413:                                    ; preds = %land.rhs402
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !5823, metadata !DIExpression()), !dbg !5842
  br label %while.cond375, !dbg !5964, !llvm.loop !5965

while.end417:                                     ; preds = %lor.lhs.false382, %land.lhs.true396, %land.rhs402
  %op1.2.lcssa = phi %union.tree_node* [ %op1.2, %lor.lhs.false382 ], [ %op1.2, %land.lhs.true396 ], [ %op1.2, %land.rhs402 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  %call418 = tail call %union.tree_node* @decl_constant_value_for_optimization(%union.tree_node* %op1.2.lcssa) #8, !dbg !5966
  call void @llvm.dbg.value(metadata %union.tree_node* %call418, metadata !5823, metadata !DIExpression()), !dbg !5842
  %cmp419 = icmp ne %union.tree_node* %op0.3, %43, !dbg !5967
  %cmp422 = icmp ne %union.tree_node* %call418, %44, !dbg !5969
  %or.cond10 = or i1 %cmp419, %cmp422, !dbg !5970
  %tobool426 = icmp ne i8 %in_init, 0, !dbg !5971
  %or.cond11 = or i1 %or.cond10, %tobool426, !dbg !5970
  br i1 %or.cond11, label %if.then427, label %if.else440, !dbg !5970

if.then427:                                       ; preds = %while.end417
  %tobool429 = icmp eq i8 %in_init, 0, !dbg !5972
  %type432 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5973
  %59 = load %union.tree_node*, %union.tree_node** %type432, align 8, !dbg !5973
  br i1 %tobool429, label %cond.false434, label %cond.true430, !dbg !5972

cond.true430:                                     ; preds = %if.then427
  %call433 = tail call %union.tree_node* @fold_build2_initializer_loc(i32 %cond, i32 %bf.cast, %union.tree_node* %59, %union.tree_node* %op0.3, %union.tree_node* %call418) #7, !dbg !5974
  br label %if.end442, !dbg !5972

cond.false434:                                    ; preds = %if.then427
  %call437 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %cond, i32 %bf.cast, %union.tree_node* %59, %union.tree_node* %op0.3, %union.tree_node* %call418) #7, !dbg !5975
  br label %if.end442, !dbg !5972

if.else440:                                       ; preds = %while.end417
  %call441 = tail call %union.tree_node* @fold(%union.tree_node* %expr) #7, !dbg !5976
  call void @llvm.dbg.value(metadata %union.tree_node* %call441, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %if.end442

if.end442:                                        ; preds = %cond.true430, %cond.false434, %if.else440
  %ret.3 = phi %union.tree_node* [ %call441, %if.else440 ], [ %call433, %cond.true430 ], [ %call437, %cond.false434 ], !dbg !5973
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.3, metadata !5818, metadata !DIExpression()), !dbg !5842
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5977
  %bf.load444 = load i64, i64* %60, align 8, !dbg !5977
  %bf.cast446 = and i64 %bf.load444, 65535, !dbg !5977
  %arrayidx448 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast446, !dbg !5977
  %61 = load i32, i32* %arrayidx448, align 4, !dbg !5977
  %cmp449 = icmp eq i32 %61, 1, !dbg !5977
  br i1 %cmp449, label %land.lhs.true451, label %out, !dbg !5977

land.lhs.true451:                                 ; preds = %if.end442
  %bf.cast45678 = and i64 %bf.load444, 134217728, !dbg !5977
  %tobool457 = icmp eq i64 %bf.cast45678, 0, !dbg !5977
  br i1 %tobool457, label %out, label %land.lhs.true458, !dbg !5979

land.lhs.true458:                                 ; preds = %land.lhs.true451
  %62 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5980
  %bf.load460 = load i64, i64* %62, align 8, !dbg !5980
  %bf.cast462 = and i64 %bf.load460, 65535, !dbg !5980
  %arrayidx464 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast462, !dbg !5980
  %63 = load i32, i32* %arrayidx464, align 4, !dbg !5980
  %cmp465 = icmp eq i32 %63, 1, !dbg !5980
  br i1 %cmp465, label %land.lhs.true467, label %land.lhs.true474, !dbg !5980

land.lhs.true467:                                 ; preds = %land.lhs.true458
  %bf.cast47280 = and i64 %bf.load460, 134217728, !dbg !5980
  %tobool473 = icmp eq i64 %bf.cast47280, 0, !dbg !5980
  br i1 %tobool473, label %land.lhs.true474, label %out, !dbg !5981

land.lhs.true474:                                 ; preds = %land.lhs.true467, %land.lhs.true458
  %64 = getelementptr inbounds %union.tree_node, %union.tree_node* %call418, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5982
  %bf.load476 = load i64, i64* %64, align 8, !dbg !5982
  %bf.cast478 = and i64 %bf.load476, 65535, !dbg !5982
  %arrayidx480 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast478, !dbg !5982
  %65 = load i32, i32* %arrayidx480, align 4, !dbg !5982
  %cmp481 = icmp eq i32 %65, 1, !dbg !5982
  br i1 %cmp481, label %land.lhs.true483, label %if.then490, !dbg !5982

land.lhs.true483:                                 ; preds = %land.lhs.true474
  %bf.cast48879 = and i64 %bf.load476, 134217728, !dbg !5982
  %tobool489 = icmp eq i64 %bf.cast48879, 0, !dbg !5982
  br i1 %tobool489, label %if.then490, label %out, !dbg !5983

if.then490:                                       ; preds = %land.lhs.true483, %land.lhs.true474
  %bf.load492 = load i64, i64* %0, align 8, !dbg !5984
  %bf.cast494 = and i64 %bf.load492, 65535, !dbg !5984
  %arrayidx496 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast494, !dbg !5984
  %66 = load i32, i32* %arrayidx496, align 4, !dbg !5984
  %cmp497 = icmp ugt i32 %66, 3, !dbg !5984
  br i1 %cmp497, label %land.lhs.true499, label %cond.end512, !dbg !5984

land.lhs.true499:                                 ; preds = %if.then490
  %cmp506 = icmp ult i32 %66, 11, !dbg !5984
  br i1 %cmp506, label %cond.true508, label %cond.end512, !dbg !5984

cond.true508:                                     ; preds = %land.lhs.true499
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5984
  %68 = load i32, i32* %67, align 8, !dbg !5984
  br label %cond.end512, !dbg !5984

cond.end512:                                      ; preds = %if.then490, %land.lhs.true499, %cond.true508
  %cond513 = phi i32 [ %68, %cond.true508 ], [ 0, %land.lhs.true499 ], [ 0, %if.then490 ], !dbg !5984
  tail call void @overflow_warning(i32 %cond513, %union.tree_node* %ret.3) #8, !dbg !5985
  br label %out, !dbg !5985

sw.bb515:                                         ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %operands517 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5986
  %69 = load %union.tree_node*, %union.tree_node** %operands517, align 8, !dbg !5986
  call void @llvm.dbg.value(metadata %union.tree_node* %69, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %69, metadata !5826, metadata !DIExpression()), !dbg !5842
  %call519 = tail call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %69, i8 zeroext %in_init, i8* %maybe_const_operands, i8* %maybe_const_itself) #8, !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %call519, metadata !5822, metadata !DIExpression()), !dbg !5842
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond520, !dbg !5988

while.cond520:                                    ; preds = %while.body558, %sw.bb515
  %op0.4 = phi %union.tree_node* [ %call519, %sw.bb515 ], [ %74, %while.body558 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4, metadata !5822, metadata !DIExpression()), !dbg !5842
  %71 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5988
  %bf.load522 = load i64, i64* %71, align 8, !dbg !5988
  %bf.cast52463 = and i64 %bf.load522, 65535, !dbg !5988
  %cmp525 = icmp eq i64 %bf.cast52463, 116, !dbg !5988
  br i1 %cmp525, label %land.lhs.true541, label %lor.lhs.false527, !dbg !5988

lor.lhs.false527:                                 ; preds = %while.cond520
  %72 = or i64 %bf.cast52463, 4, !dbg !5988
  %73 = icmp eq i64 %72, 117, !dbg !5988
  br i1 %73, label %land.lhs.true541, label %while.end562, !dbg !5988

land.lhs.true541:                                 ; preds = %lor.lhs.false527, %while.cond520
  %operands543 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5988
  %74 = load %union.tree_node*, %union.tree_node** %operands543, align 8, !dbg !5988
  %cmp545 = icmp eq %union.tree_node* %74, %70, !dbg !5988
  br i1 %cmp545, label %while.end562, label %land.rhs547, !dbg !5988

land.rhs547:                                      ; preds = %land.lhs.true541
  %type549 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5988
  %75 = load %union.tree_node*, %union.tree_node** %type549, align 8, !dbg !5988
  %type554 = getelementptr inbounds %union.tree_node, %union.tree_node* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5988
  %76 = load %union.tree_node*, %union.tree_node** %type554, align 8, !dbg !5988
  %cmp555 = icmp eq %union.tree_node* %75, %76, !dbg !5988
  br i1 %cmp555, label %while.body558, label %while.end562, !dbg !5988

while.body558:                                    ; preds = %land.rhs547
  call void @llvm.dbg.value(metadata %union.tree_node* %74, metadata !5822, metadata !DIExpression()), !dbg !5842
  br label %while.cond520, !dbg !5988, !llvm.loop !5989

while.end562:                                     ; preds = %lor.lhs.false527, %land.lhs.true541, %land.rhs547
  %op0.4.lcssa = phi %union.tree_node* [ %op0.4, %lor.lhs.false527 ], [ %op0.4, %land.lhs.true541 ], [ %op0.4, %land.rhs547 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  switch i16 %trunc, label %if.then571 [
    i16 121, label %if.end573
    i16 43, label %if.end573
    i16 44, label %if.end573
  ], !dbg !5990

if.then571:                                       ; preds = %while.end562
  %call572 = tail call %union.tree_node* @decl_constant_value_for_optimization(%union.tree_node* %op0.4.lcssa) #8, !dbg !5992
  call void @llvm.dbg.value(metadata %union.tree_node* %call572, metadata !5822, metadata !DIExpression()), !dbg !5842
  br label %if.end573, !dbg !5993

if.end573:                                        ; preds = %while.end562, %while.end562, %while.end562, %if.then571
  %op0.5 = phi %union.tree_node* [ %call572, %if.then571 ], [ %op0.4.lcssa, %while.end562 ], [ %op0.4.lcssa, %while.end562 ], [ %op0.4.lcssa, %while.end562 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.5, metadata !5822, metadata !DIExpression()), !dbg !5842
  %cmp574 = icmp ne %union.tree_node* %op0.5, %69, !dbg !5994
  %tobool578 = icmp ne i8 %in_init, 0, !dbg !5996
  %or.cond13 = or i1 %cmp574, %tobool578, !dbg !5997
  br i1 %or.cond13, label %if.then579, label %if.else592, !dbg !5997

if.then579:                                       ; preds = %if.end573
  %tobool581 = icmp eq i8 %in_init, 0, !dbg !5998
  %type584 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5999
  %77 = load %union.tree_node*, %union.tree_node** %type584, align 8, !dbg !5999
  br i1 %tobool581, label %cond.false586, label %cond.true582, !dbg !5998

cond.true582:                                     ; preds = %if.then579
  %call585 = tail call %union.tree_node* @fold_build1_initializer_loc(i32 %cond, i32 %bf.cast, %union.tree_node* %77, %union.tree_node* %op0.5) #7, !dbg !6000
  br label %if.end594, !dbg !5998

cond.false586:                                    ; preds = %if.then579
  %call589 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %cond, i32 %bf.cast, %union.tree_node* %77, %union.tree_node* %op0.5) #7, !dbg !6001
  br label %if.end594, !dbg !5998

if.else592:                                       ; preds = %if.end573
  %call593 = tail call %union.tree_node* @fold(%union.tree_node* %expr) #7, !dbg !6002
  call void @llvm.dbg.value(metadata %union.tree_node* %call593, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %if.end594

if.end594:                                        ; preds = %cond.true582, %cond.false586, %if.else592
  %ret.4 = phi %union.tree_node* [ %call593, %if.else592 ], [ %call585, %cond.true582 ], [ %call589, %cond.false586 ], !dbg !5999
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.4, metadata !5818, metadata !DIExpression()), !dbg !5842
  %cmp595 = icmp eq i32 %bf.cast, 47, !dbg !6003
  %cmp598 = icmp ne %union.tree_node* %ret.4, %expr, !dbg !6005
  %or.cond14 = and i1 %cmp595, %cmp598, !dbg !6006
  br i1 %or.cond14, label %land.lhs.true600, label %if.end644, !dbg !6006

land.lhs.true600:                                 ; preds = %if.end594
  %78 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6007
  %bf.load602 = load i64, i64* %78, align 8, !dbg !6007
  %bf.cast60470 = and i64 %bf.load602, 65535, !dbg !6008
  %cmp605 = icmp eq i64 %bf.cast60470, 47, !dbg !6008
  br i1 %cmp605, label %if.then607, label %if.end644, !dbg !6009

if.then607:                                       ; preds = %land.lhs.true600
  %bf.load609 = load i64, i64* %0, align 8, !dbg !6010
  %bf.cast612 = and i64 %bf.load609, 1048576, !dbg !6010
  %bf.clear617 = and i64 %bf.load602, -1048577, !dbg !6012
  %bf.set618 = or i64 %bf.clear617, %bf.cast612, !dbg !6012
  store i64 %bf.set618, i64* %78, align 8, !dbg !6012
  %bf.load621 = load i64, i64* %0, align 8, !dbg !6013
  %bf.cast624 = and i64 %bf.load621, 65536, !dbg !6013
  %bf.clear629 = and i64 %bf.set618, -65537, !dbg !6014
  %bf.set630 = or i64 %bf.clear629, %bf.cast624, !dbg !6014
  store i64 %bf.set630, i64* %78, align 8, !dbg !6014
  %bf.load633 = load i64, i64* %0, align 8, !dbg !6015
  %bf.cast636 = and i64 %bf.load633, 524288, !dbg !6015
  %bf.clear641 = and i64 %bf.set630, -524289, !dbg !6016
  %bf.set642 = or i64 %bf.clear641, %bf.cast636, !dbg !6016
  store i64 %bf.set642, i64* %78, align 8, !dbg !6016
  br label %if.end644, !dbg !6017

if.end644:                                        ; preds = %if.then607, %land.lhs.true600, %if.end594
  switch i16 %trunc, label %sw.default646 [
    i16 77, label %out
    i16 78, label %out
    i16 116, label %out
    i16 113, label %out
  ], !dbg !6018

sw.default646:                                    ; preds = %if.end644
  %79 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6019
  %bf.load648 = load i64, i64* %79, align 8, !dbg !6019
  %bf.cast650 = and i64 %bf.load648, 65535, !dbg !6019
  %arrayidx652 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast650, !dbg !6019
  %80 = load i32, i32* %arrayidx652, align 4, !dbg !6019
  %cmp653 = icmp eq i32 %80, 1, !dbg !6019
  br i1 %cmp653, label %land.lhs.true655, label %out, !dbg !6019

land.lhs.true655:                                 ; preds = %sw.default646
  %bf.cast66068 = and i64 %bf.load648, 134217728, !dbg !6019
  %tobool661 = icmp eq i64 %bf.cast66068, 0, !dbg !6019
  br i1 %tobool661, label %out, label %land.lhs.true662, !dbg !6022

land.lhs.true662:                                 ; preds = %land.lhs.true655
  %81 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6023
  %bf.load664 = load i64, i64* %81, align 8, !dbg !6023
  %bf.cast666 = and i64 %bf.load664, 65535, !dbg !6023
  %arrayidx668 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast666, !dbg !6023
  %82 = load i32, i32* %arrayidx668, align 4, !dbg !6023
  %cmp669 = icmp eq i32 %82, 1, !dbg !6023
  br i1 %cmp669, label %land.lhs.true671, label %if.then678, !dbg !6023

land.lhs.true671:                                 ; preds = %land.lhs.true662
  %bf.cast67669 = and i64 %bf.load664, 134217728, !dbg !6023
  %tobool677 = icmp eq i64 %bf.cast67669, 0, !dbg !6023
  br i1 %tobool677, label %if.then678, label %out, !dbg !6024

if.then678:                                       ; preds = %land.lhs.true671, %land.lhs.true662
  %bf.load680 = load i64, i64* %0, align 8, !dbg !6025
  %bf.cast682 = and i64 %bf.load680, 65535, !dbg !6025
  %arrayidx684 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast682, !dbg !6025
  %83 = load i32, i32* %arrayidx684, align 4, !dbg !6025
  %cmp685 = icmp ugt i32 %83, 3, !dbg !6025
  br i1 %cmp685, label %land.lhs.true687, label %cond.end700, !dbg !6025

land.lhs.true687:                                 ; preds = %if.then678
  %cmp694 = icmp ult i32 %83, 11, !dbg !6025
  br i1 %cmp694, label %cond.true696, label %cond.end700, !dbg !6025

cond.true696:                                     ; preds = %land.lhs.true687
  %84 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6025
  %85 = load i32, i32* %84, align 8, !dbg !6025
  br label %cond.end700, !dbg !6025

cond.end700:                                      ; preds = %if.then678, %land.lhs.true687, %cond.true696
  %cond701 = phi i32 [ %85, %cond.true696 ], [ 0, %land.lhs.true687 ], [ 0, %if.then678 ], !dbg !6025
  tail call void @overflow_warning(i32 %cond701, %union.tree_node* %ret.4) #8, !dbg !6026
  br label %out, !dbg !6026

sw.bb704:                                         ; preds = %sw.epilog, %sw.epilog
  %operands706 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6027
  %86 = load %union.tree_node*, %union.tree_node** %operands706, align 8, !dbg !6027
  call void @llvm.dbg.value(metadata %union.tree_node* %86, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %86, metadata !5826, metadata !DIExpression()), !dbg !5842
  %arrayidx710 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands706, i64 1, !dbg !6028
  %87 = load %union.tree_node*, %union.tree_node** %arrayidx710, align 8, !dbg !6028
  call void @llvm.dbg.value(metadata %union.tree_node* %87, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %87, metadata !5827, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %op0_const, metadata !5829, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %op0_const_self, metadata !5832, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  %call711 = call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %86, i8 zeroext %in_init, i8* nonnull %op0_const, i8* nonnull %op0_const_self) #8, !dbg !6029
  call void @llvm.dbg.value(metadata %union.tree_node* %call711, metadata !5822, metadata !DIExpression()), !dbg !5842
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond712, !dbg !6030

while.cond712:                                    ; preds = %while.body750, %sw.bb704
  %op0.6 = phi %union.tree_node* [ %call711, %sw.bb704 ], [ %92, %while.body750 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6, metadata !5822, metadata !DIExpression()), !dbg !5842
  %89 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6030
  %bf.load714 = load i64, i64* %89, align 8, !dbg !6030
  %bf.cast71653 = and i64 %bf.load714, 65535, !dbg !6030
  %cmp717 = icmp eq i64 %bf.cast71653, 116, !dbg !6030
  br i1 %cmp717, label %land.lhs.true733, label %lor.lhs.false719, !dbg !6030

lor.lhs.false719:                                 ; preds = %while.cond712
  %90 = or i64 %bf.cast71653, 4, !dbg !6030
  %91 = icmp eq i64 %90, 117, !dbg !6030
  br i1 %91, label %land.lhs.true733, label %while.end754, !dbg !6030

land.lhs.true733:                                 ; preds = %lor.lhs.false719, %while.cond712
  %operands735 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6030
  %92 = load %union.tree_node*, %union.tree_node** %operands735, align 8, !dbg !6030
  %cmp737 = icmp eq %union.tree_node* %92, %88, !dbg !6030
  br i1 %cmp737, label %while.end754, label %land.rhs739, !dbg !6030

land.rhs739:                                      ; preds = %land.lhs.true733
  %type741 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6030
  %93 = load %union.tree_node*, %union.tree_node** %type741, align 8, !dbg !6030
  %type746 = getelementptr inbounds %union.tree_node, %union.tree_node* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6030
  %94 = load %union.tree_node*, %union.tree_node** %type746, align 8, !dbg !6030
  %cmp747 = icmp eq %union.tree_node* %93, %94, !dbg !6030
  br i1 %cmp747, label %while.body750, label %while.end754, !dbg !6030

while.body750:                                    ; preds = %land.rhs739
  call void @llvm.dbg.value(metadata %union.tree_node* %92, metadata !5822, metadata !DIExpression()), !dbg !5842
  br label %while.cond712, !dbg !6030, !llvm.loop !6031

while.end754:                                     ; preds = %lor.lhs.false719, %land.lhs.true733, %land.rhs739
  %op0.6.lcssa = phi %union.tree_node* [ %op0.6, %lor.lhs.false719 ], [ %op0.6, %land.lhs.true733 ], [ %op0.6, %land.rhs739 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  %cmp755 = icmp eq i32 %bf.cast, 91, !dbg !6032
  %95 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !6033
  %96 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !6033
  %cond760 = select i1 %cmp755, %union.tree_node* %95, %union.tree_node* %96, !dbg !6033
  %cmp761 = icmp eq %union.tree_node* %op0.6.lcssa, %cond760, !dbg !6034
  %conv762 = zext i1 %cmp761 to i32, !dbg !6034
  call void @llvm.dbg.value(metadata i32 %conv762, metadata !5836, metadata !DIExpression()), !dbg !5842
  %97 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6035
  %add = add nsw i32 %97, %conv762, !dbg !6035
  store i32 %add, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6035
  call void @llvm.dbg.value(metadata i8* %op1_const, metadata !5830, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %op1_const_self, metadata !5833, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  %call763 = call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %87, i8 zeroext %in_init, i8* nonnull %op1_const, i8* nonnull %op1_const_self) #8, !dbg !6036
  call void @llvm.dbg.value(metadata %union.tree_node* %call763, metadata !5823, metadata !DIExpression()), !dbg !5842
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond764, !dbg !6037

while.cond764:                                    ; preds = %while.body802, %while.end754
  %op1.3 = phi %union.tree_node* [ %call763, %while.end754 ], [ %102, %while.body802 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3, metadata !5823, metadata !DIExpression()), !dbg !5842
  %99 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6037
  %bf.load766 = load i64, i64* %99, align 8, !dbg !6037
  %bf.cast76856 = and i64 %bf.load766, 65535, !dbg !6037
  %cmp769 = icmp eq i64 %bf.cast76856, 116, !dbg !6037
  br i1 %cmp769, label %land.lhs.true785, label %lor.lhs.false771, !dbg !6037

lor.lhs.false771:                                 ; preds = %while.cond764
  %100 = or i64 %bf.cast76856, 4, !dbg !6037
  %101 = icmp eq i64 %100, 117, !dbg !6037
  br i1 %101, label %land.lhs.true785, label %while.end806, !dbg !6037

land.lhs.true785:                                 ; preds = %lor.lhs.false771, %while.cond764
  %operands787 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6037
  %102 = load %union.tree_node*, %union.tree_node** %operands787, align 8, !dbg !6037
  %cmp789 = icmp eq %union.tree_node* %102, %98, !dbg !6037
  br i1 %cmp789, label %while.end806, label %land.rhs791, !dbg !6037

land.rhs791:                                      ; preds = %land.lhs.true785
  %type793 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6037
  %103 = load %union.tree_node*, %union.tree_node** %type793, align 8, !dbg !6037
  %type798 = getelementptr inbounds %union.tree_node, %union.tree_node* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6037
  %104 = load %union.tree_node*, %union.tree_node** %type798, align 8, !dbg !6037
  %cmp799 = icmp eq %union.tree_node* %103, %104, !dbg !6037
  br i1 %cmp799, label %while.body802, label %while.end806, !dbg !6037

while.body802:                                    ; preds = %land.rhs791
  call void @llvm.dbg.value(metadata %union.tree_node* %102, metadata !5823, metadata !DIExpression()), !dbg !5842
  br label %while.cond764, !dbg !6037, !llvm.loop !6038

while.end806:                                     ; preds = %lor.lhs.false771, %land.lhs.true785, %land.rhs791
  %op1.3.lcssa = phi %union.tree_node* [ %op1.3, %lor.lhs.false771 ], [ %op1.3, %land.lhs.true785 ], [ %op1.3, %land.rhs791 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.3.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  %105 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6039
  %sub = sub nsw i32 %105, %conv762, !dbg !6039
  store i32 %sub, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6039
  %cmp807 = icmp ne %union.tree_node* %op0.6.lcssa, %86, !dbg !6040
  %cmp810 = icmp ne %union.tree_node* %op1.3.lcssa, %87, !dbg !6042
  %or.cond17 = or i1 %cmp807, %cmp810, !dbg !6043
  %tobool814 = icmp ne i8 %in_init, 0, !dbg !6044
  %or.cond18 = or i1 %or.cond17, %tobool814, !dbg !6043
  br i1 %or.cond18, label %if.then815, label %if.else828, !dbg !6043

if.then815:                                       ; preds = %while.end806
  %tobool817 = icmp eq i8 %in_init, 0, !dbg !6045
  %type820 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6046
  %106 = load %union.tree_node*, %union.tree_node** %type820, align 8, !dbg !6046
  br i1 %tobool817, label %cond.false822, label %cond.true818, !dbg !6045

cond.true818:                                     ; preds = %if.then815
  %call821 = call %union.tree_node* @fold_build2_initializer_loc(i32 %cond, i32 %bf.cast, %union.tree_node* %106, %union.tree_node* %op0.6.lcssa, %union.tree_node* %op1.3.lcssa) #7, !dbg !6047
  br label %if.end830, !dbg !6045

cond.false822:                                    ; preds = %if.then815
  %call825 = call %union.tree_node* @fold_build2_stat_loc(i32 %cond, i32 %bf.cast, %union.tree_node* %106, %union.tree_node* %op0.6.lcssa, %union.tree_node* %op1.3.lcssa) #7, !dbg !6048
  br label %if.end830, !dbg !6045

if.else828:                                       ; preds = %while.end806
  %call829 = call %union.tree_node* @fold(%union.tree_node* %expr) #7, !dbg !6049
  call void @llvm.dbg.value(metadata %union.tree_node* %call829, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %if.end830

if.end830:                                        ; preds = %cond.true818, %cond.false822, %if.else828
  %ret.5 = phi %union.tree_node* [ %call829, %if.else828 ], [ %call821, %cond.true818 ], [ %call825, %cond.false822 ], !dbg !6046
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.5, metadata !5818, metadata !DIExpression()), !dbg !5842
  %107 = load i8, i8* %op0_const, align 1, !dbg !6050
  call void @llvm.dbg.value(metadata i8 %107, metadata !5829, metadata !DIExpression()), !dbg !5842
  %108 = load i8, i8* %maybe_const_operands, align 1, !dbg !6051
  %and83359 = and i8 %108, %107, !dbg !6051
  store i8 %and83359, i8* %maybe_const_operands, align 1, !dbg !6051
  %109 = load i8, i8* %op0_const_self, align 1, !dbg !6052
  call void @llvm.dbg.value(metadata i8 %109, metadata !5832, metadata !DIExpression()), !dbg !5842
  %110 = load i8, i8* %maybe_const_itself, align 1, !dbg !6053
  %and83760 = and i8 %110, %109, !dbg !6053
  store i8 %and83760, i8* %maybe_const_itself, align 1, !dbg !6053
  %111 = load i32, i32* @flag_isoc99, align 4, !dbg !6054
  %tobool839 = icmp eq i32 %111, 0, !dbg !6054
  br i1 %tobool839, label %if.then855, label %land.lhs.true840, !dbg !6056

land.lhs.true840:                                 ; preds = %if.end830
  call void @llvm.dbg.value(metadata i8 %107, metadata !5829, metadata !DIExpression()), !dbg !5842
  %tobool842 = icmp eq i8 %107, 0, !dbg !6057
  br i1 %tobool842, label %if.then855, label %land.lhs.true843, !dbg !6058

land.lhs.true843:                                 ; preds = %land.lhs.true840
  call void @llvm.dbg.value(metadata i8 %109, metadata !5832, metadata !DIExpression()), !dbg !5842
  %tobool845 = icmp eq i8 %109, 0, !dbg !6059
  br i1 %tobool845, label %if.then855, label %land.lhs.true846, !dbg !6060

land.lhs.true846:                                 ; preds = %land.lhs.true843
  br i1 %cmp755, label %cond.true849, label %cond.false852, !dbg !6061

cond.true849:                                     ; preds = %land.lhs.true846
  %112 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !6062
  %cmp850 = icmp eq %union.tree_node* %op0.6.lcssa, %112, !dbg !6063
  br i1 %cmp850, label %if.end860, label %if.then855, !dbg !6064

cond.false852:                                    ; preds = %land.lhs.true846
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !6065
  %cmp853 = icmp eq %union.tree_node* %op0.6.lcssa, %113, !dbg !6066
  br i1 %cmp853, label %if.end860, label %if.then855, !dbg !6061

if.then855:                                       ; preds = %land.lhs.true843, %land.lhs.true840, %if.end830, %cond.false852, %cond.true849
  %114 = load i8, i8* %op1_const, align 1, !dbg !6067
  call void @llvm.dbg.value(metadata i8 %114, metadata !5830, metadata !DIExpression()), !dbg !5842
  %115 = load i8, i8* %maybe_const_operands, align 1, !dbg !6068
  %and85861 = and i8 %115, %114, !dbg !6068
  store i8 %and85861, i8* %maybe_const_operands, align 1, !dbg !6068
  br label %if.end860, !dbg !6069

if.end860:                                        ; preds = %if.then855, %cond.false852, %cond.true849
  call void @llvm.dbg.value(metadata i8 %107, metadata !5829, metadata !DIExpression()), !dbg !5842
  %tobool862 = icmp eq i8 %107, 0, !dbg !6070
  br i1 %tobool862, label %if.then875, label %land.lhs.true863, !dbg !6072

land.lhs.true863:                                 ; preds = %if.end860
  call void @llvm.dbg.value(metadata i8 %109, metadata !5832, metadata !DIExpression()), !dbg !5842
  %tobool865 = icmp eq i8 %109, 0, !dbg !6073
  br i1 %tobool865, label %if.then875, label %land.lhs.true866, !dbg !6074

land.lhs.true866:                                 ; preds = %land.lhs.true863
  br i1 %cmp755, label %cond.true869, label %cond.false872, !dbg !6075

cond.true869:                                     ; preds = %land.lhs.true866
  %116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !6076
  %cmp870 = icmp eq %union.tree_node* %op0.6.lcssa, %116, !dbg !6077
  br i1 %cmp870, label %out, label %if.then875, !dbg !6078

cond.false872:                                    ; preds = %land.lhs.true866
  %117 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !6079
  %cmp873 = icmp eq %union.tree_node* %op0.6.lcssa, %117, !dbg !6080
  br i1 %cmp873, label %out, label %if.then875, !dbg !6075

if.then875:                                       ; preds = %land.lhs.true863, %if.end860, %cond.false872, %cond.true869
  %118 = load i8, i8* %op1_const_self, align 1, !dbg !6081
  call void @llvm.dbg.value(metadata i8 %118, metadata !5833, metadata !DIExpression()), !dbg !5842
  %119 = load i8, i8* %maybe_const_itself, align 1, !dbg !6082
  %and87862 = and i8 %119, %118, !dbg !6082
  store i8 %and87862, i8* %maybe_const_itself, align 1, !dbg !6082
  br label %out, !dbg !6083

sw.bb881:                                         ; preds = %sw.epilog
  %operands883 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6084
  %120 = load %union.tree_node*, %union.tree_node** %operands883, align 8, !dbg !6084
  call void @llvm.dbg.value(metadata %union.tree_node* %120, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %120, metadata !5826, metadata !DIExpression()), !dbg !5842
  %arrayidx887 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands883, i64 1, !dbg !6085
  %121 = load %union.tree_node*, %union.tree_node** %arrayidx887, align 8, !dbg !6085
  call void @llvm.dbg.value(metadata %union.tree_node* %121, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %121, metadata !5827, metadata !DIExpression()), !dbg !5842
  %arrayidx890 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands883, i64 2, !dbg !6086
  %122 = load %union.tree_node*, %union.tree_node** %arrayidx890, align 8, !dbg !6086
  call void @llvm.dbg.value(metadata %union.tree_node* %122, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %122, metadata !5828, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %op0_const, metadata !5829, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %op0_const_self, metadata !5832, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  %call891 = call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %120, i8 zeroext %in_init, i8* nonnull %op0_const, i8* nonnull %op0_const_self) #8, !dbg !6087
  call void @llvm.dbg.value(metadata %union.tree_node* %call891, metadata !5822, metadata !DIExpression()), !dbg !5842
  %123 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond892, !dbg !6088

while.cond892:                                    ; preds = %while.body930, %sw.bb881
  %op0.7 = phi %union.tree_node* [ %call891, %sw.bb881 ], [ %127, %while.body930 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7, metadata !5822, metadata !DIExpression()), !dbg !5842
  %124 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6088
  %bf.load894 = load i64, i64* %124, align 8, !dbg !6088
  %bf.cast89638 = and i64 %bf.load894, 65535, !dbg !6088
  %cmp897 = icmp eq i64 %bf.cast89638, 116, !dbg !6088
  br i1 %cmp897, label %land.lhs.true913, label %lor.lhs.false899, !dbg !6088

lor.lhs.false899:                                 ; preds = %while.cond892
  %125 = or i64 %bf.cast89638, 4, !dbg !6088
  %126 = icmp eq i64 %125, 117, !dbg !6088
  br i1 %126, label %land.lhs.true913, label %while.end934, !dbg !6088

land.lhs.true913:                                 ; preds = %lor.lhs.false899, %while.cond892
  %operands915 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6088
  %127 = load %union.tree_node*, %union.tree_node** %operands915, align 8, !dbg !6088
  %cmp917 = icmp eq %union.tree_node* %127, %123, !dbg !6088
  br i1 %cmp917, label %while.end934, label %land.rhs919, !dbg !6088

land.rhs919:                                      ; preds = %land.lhs.true913
  %type921 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6088
  %128 = load %union.tree_node*, %union.tree_node** %type921, align 8, !dbg !6088
  %type926 = getelementptr inbounds %union.tree_node, %union.tree_node* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6088
  %129 = load %union.tree_node*, %union.tree_node** %type926, align 8, !dbg !6088
  %cmp927 = icmp eq %union.tree_node* %128, %129, !dbg !6088
  br i1 %cmp927, label %while.body930, label %while.end934, !dbg !6088

while.body930:                                    ; preds = %land.rhs919
  call void @llvm.dbg.value(metadata %union.tree_node* %127, metadata !5822, metadata !DIExpression()), !dbg !5842
  br label %while.cond892, !dbg !6088, !llvm.loop !6089

while.end934:                                     ; preds = %lor.lhs.false899, %land.lhs.true913, %land.rhs919
  %op0.7.lcssa = phi %union.tree_node* [ %op0.7, %lor.lhs.false899 ], [ %op0.7, %land.lhs.true913 ], [ %op0.7, %land.rhs919 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7.lcssa, metadata !5822, metadata !DIExpression()), !dbg !5842
  %130 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !6090
  %cmp935 = icmp eq %union.tree_node* %op0.7.lcssa, %130, !dbg !6091
  %conv936 = zext i1 %cmp935 to i32, !dbg !6091
  %131 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6092
  %add937 = add nsw i32 %131, %conv936, !dbg !6092
  store i32 %add937, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6092
  call void @llvm.dbg.value(metadata i8* %op1_const, metadata !5830, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %op1_const_self, metadata !5833, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  %call938 = call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %121, i8 zeroext %in_init, i8* nonnull %op1_const, i8* nonnull %op1_const_self) #8, !dbg !6093
  call void @llvm.dbg.value(metadata %union.tree_node* %call938, metadata !5823, metadata !DIExpression()), !dbg !5842
  %132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond939, !dbg !6094

while.cond939:                                    ; preds = %while.body977, %while.end934
  %op1.4 = phi %union.tree_node* [ %call938, %while.end934 ], [ %136, %while.body977 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4, metadata !5823, metadata !DIExpression()), !dbg !5842
  %133 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6094
  %bf.load941 = load i64, i64* %133, align 8, !dbg !6094
  %bf.cast94341 = and i64 %bf.load941, 65535, !dbg !6094
  %cmp944 = icmp eq i64 %bf.cast94341, 116, !dbg !6094
  br i1 %cmp944, label %land.lhs.true960, label %lor.lhs.false946, !dbg !6094

lor.lhs.false946:                                 ; preds = %while.cond939
  %134 = or i64 %bf.cast94341, 4, !dbg !6094
  %135 = icmp eq i64 %134, 117, !dbg !6094
  br i1 %135, label %land.lhs.true960, label %while.end981, !dbg !6094

land.lhs.true960:                                 ; preds = %lor.lhs.false946, %while.cond939
  %operands962 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6094
  %136 = load %union.tree_node*, %union.tree_node** %operands962, align 8, !dbg !6094
  %cmp964 = icmp eq %union.tree_node* %136, %132, !dbg !6094
  br i1 %cmp964, label %while.end981, label %land.rhs966, !dbg !6094

land.rhs966:                                      ; preds = %land.lhs.true960
  %type968 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6094
  %137 = load %union.tree_node*, %union.tree_node** %type968, align 8, !dbg !6094
  %type973 = getelementptr inbounds %union.tree_node, %union.tree_node* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6094
  %138 = load %union.tree_node*, %union.tree_node** %type973, align 8, !dbg !6094
  %cmp974 = icmp eq %union.tree_node* %137, %138, !dbg !6094
  br i1 %cmp974, label %while.body977, label %while.end981, !dbg !6094

while.body977:                                    ; preds = %land.rhs966
  call void @llvm.dbg.value(metadata %union.tree_node* %136, metadata !5823, metadata !DIExpression()), !dbg !5842
  br label %while.cond939, !dbg !6094, !llvm.loop !6095

while.end981:                                     ; preds = %lor.lhs.false946, %land.lhs.true960, %land.rhs966
  %op1.4.lcssa = phi %union.tree_node* [ %op1.4, %lor.lhs.false946 ], [ %op1.4, %land.lhs.true960 ], [ %op1.4, %land.rhs966 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4.lcssa, metadata !5823, metadata !DIExpression()), !dbg !5842
  %139 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !6096
  %cmp982 = icmp eq %union.tree_node* %op0.7.lcssa, %139, !dbg !6097
  %conv983 = zext i1 %cmp982 to i32, !dbg !6097
  %140 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6098
  %sub984 = sub nsw i32 %140, %conv983, !dbg !6098
  %141 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !6099
  %cmp985 = icmp eq %union.tree_node* %op0.7.lcssa, %141, !dbg !6100
  %conv986 = zext i1 %cmp985 to i32, !dbg !6100
  %add987 = add nsw i32 %sub984, %conv986, !dbg !6101
  store i32 %add987, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6101
  call void @llvm.dbg.value(metadata i8* %op2_const, metadata !5831, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %op2_const_self, metadata !5834, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  %call988 = call fastcc %union.tree_node* @c_fully_fold_internal(%union.tree_node* %122, i8 zeroext %in_init, i8* nonnull %op2_const, i8* nonnull %op2_const_self) #8, !dbg !6102
  call void @llvm.dbg.value(metadata %union.tree_node* %call988, metadata !5824, metadata !DIExpression()), !dbg !5842
  %142 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond989, !dbg !6103

while.cond989:                                    ; preds = %while.body1027, %while.end981
  %op2.0 = phi %union.tree_node* [ %call988, %while.end981 ], [ %146, %while.body1027 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0, metadata !5824, metadata !DIExpression()), !dbg !5842
  %143 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6103
  %bf.load991 = load i64, i64* %143, align 8, !dbg !6103
  %bf.cast99344 = and i64 %bf.load991, 65535, !dbg !6103
  %cmp994 = icmp eq i64 %bf.cast99344, 116, !dbg !6103
  br i1 %cmp994, label %land.lhs.true1010, label %lor.lhs.false996, !dbg !6103

lor.lhs.false996:                                 ; preds = %while.cond989
  %144 = or i64 %bf.cast99344, 4, !dbg !6103
  %145 = icmp eq i64 %144, 117, !dbg !6103
  br i1 %145, label %land.lhs.true1010, label %while.end1031, !dbg !6103

land.lhs.true1010:                                ; preds = %lor.lhs.false996, %while.cond989
  %operands1012 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6103
  %146 = load %union.tree_node*, %union.tree_node** %operands1012, align 8, !dbg !6103
  %cmp1014 = icmp eq %union.tree_node* %146, %142, !dbg !6103
  br i1 %cmp1014, label %while.end1031, label %land.rhs1016, !dbg !6103

land.rhs1016:                                     ; preds = %land.lhs.true1010
  %type1018 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6103
  %147 = load %union.tree_node*, %union.tree_node** %type1018, align 8, !dbg !6103
  %type1023 = getelementptr inbounds %union.tree_node, %union.tree_node* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6103
  %148 = load %union.tree_node*, %union.tree_node** %type1023, align 8, !dbg !6103
  %cmp1024 = icmp eq %union.tree_node* %147, %148, !dbg !6103
  br i1 %cmp1024, label %while.body1027, label %while.end1031, !dbg !6103

while.body1027:                                   ; preds = %land.rhs1016
  call void @llvm.dbg.value(metadata %union.tree_node* %146, metadata !5824, metadata !DIExpression()), !dbg !5842
  br label %while.cond989, !dbg !6103, !llvm.loop !6104

while.end1031:                                    ; preds = %lor.lhs.false996, %land.lhs.true1010, %land.rhs1016
  %op2.0.lcssa = phi %union.tree_node* [ %op2.0, %lor.lhs.false996 ], [ %op2.0, %land.lhs.true1010 ], [ %op2.0, %land.rhs1016 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.0.lcssa, metadata !5824, metadata !DIExpression()), !dbg !5842
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !6105
  %cmp1032 = icmp eq %union.tree_node* %op0.7.lcssa, %149, !dbg !6106
  %conv1033 = zext i1 %cmp1032 to i32, !dbg !6106
  %150 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6107
  %sub1034 = sub nsw i32 %150, %conv1033, !dbg !6107
  store i32 %sub1034, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6107
  %cmp1035 = icmp ne %union.tree_node* %op0.7.lcssa, %120, !dbg !6108
  %cmp1038 = icmp ne %union.tree_node* %op1.4.lcssa, %121, !dbg !6110
  %or.cond22 = or i1 %cmp1035, %cmp1038, !dbg !6111
  %cmp1041 = icmp ne %union.tree_node* %op2.0.lcssa, %122, !dbg !6112
  %or.cond23 = or i1 %or.cond22, %cmp1041, !dbg !6111
  br i1 %or.cond23, label %if.then1043, label %if.else1047, !dbg !6111

if.then1043:                                      ; preds = %while.end1031
  %type1045 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6113
  %151 = load %union.tree_node*, %union.tree_node** %type1045, align 8, !dbg !6113
  %call1046 = call %union.tree_node* @fold_build3_stat_loc(i32 %cond, i32 %bf.cast, %union.tree_node* %151, %union.tree_node* %op0.7.lcssa, %union.tree_node* %op1.4.lcssa, %union.tree_node* %op2.0.lcssa) #7, !dbg !6113
  call void @llvm.dbg.value(metadata %union.tree_node* %call1046, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %if.end1049, !dbg !6114

if.else1047:                                      ; preds = %while.end1031
  %call1048 = call %union.tree_node* @fold(%union.tree_node* %expr) #7, !dbg !6115
  call void @llvm.dbg.value(metadata %union.tree_node* %call1048, metadata !5818, metadata !DIExpression()), !dbg !5842
  br label %if.end1049

if.end1049:                                       ; preds = %if.else1047, %if.then1043
  %ret.6 = phi %union.tree_node* [ %call1046, %if.then1043 ], [ %call1048, %if.else1047 ], !dbg !6116
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.6, metadata !5818, metadata !DIExpression()), !dbg !5842
  %152 = load i8, i8* %op0_const, align 1, !dbg !6117
  call void @llvm.dbg.value(metadata i8 %152, metadata !5829, metadata !DIExpression()), !dbg !5842
  %153 = load i8, i8* %maybe_const_operands, align 1, !dbg !6118
  %and105247 = and i8 %153, %152, !dbg !6118
  store i8 %and105247, i8* %maybe_const_operands, align 1, !dbg !6118
  %154 = load i8, i8* %op0_const_self, align 1, !dbg !6119
  call void @llvm.dbg.value(metadata i8 %154, metadata !5832, metadata !DIExpression()), !dbg !5842
  %155 = load i8, i8* %maybe_const_itself, align 1, !dbg !6120
  %and105648 = and i8 %155, %154, !dbg !6120
  store i8 %and105648, i8* %maybe_const_itself, align 1, !dbg !6120
  %156 = load i32, i32* @flag_isoc99, align 4, !dbg !6121
  %tobool1058 = icmp eq i32 %156, 0, !dbg !6121
  br i1 %tobool1058, label %if.then1068, label %land.lhs.true1059, !dbg !6123

land.lhs.true1059:                                ; preds = %if.end1049
  call void @llvm.dbg.value(metadata i8 %152, metadata !5829, metadata !DIExpression()), !dbg !5842
  %tobool1061 = icmp eq i8 %152, 0, !dbg !6124
  br i1 %tobool1061, label %if.then1068, label %land.lhs.true1062, !dbg !6125

land.lhs.true1062:                                ; preds = %land.lhs.true1059
  call void @llvm.dbg.value(metadata i8 %154, metadata !5832, metadata !DIExpression()), !dbg !5842
  %tobool1064 = icmp ne i8 %154, 0, !dbg !6126
  %157 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !6127
  %cmp1066 = icmp eq %union.tree_node* %op0.7.lcssa, %157, !dbg !6128
  %or.cond24 = and i1 %tobool1064, %cmp1066, !dbg !6129
  br i1 %or.cond24, label %if.end1073, label %if.then1068, !dbg !6129

if.then1068:                                      ; preds = %land.lhs.true1059, %if.end1049, %land.lhs.true1062
  %158 = load i8, i8* %op1_const, align 1, !dbg !6130
  call void @llvm.dbg.value(metadata i8 %158, metadata !5830, metadata !DIExpression()), !dbg !5842
  %159 = load i8, i8* %maybe_const_operands, align 1, !dbg !6131
  %and107149 = and i8 %159, %158, !dbg !6131
  store i8 %and107149, i8* %maybe_const_operands, align 1, !dbg !6131
  br label %if.end1073, !dbg !6132

if.end1073:                                       ; preds = %land.lhs.true1062, %if.then1068
  call void @llvm.dbg.value(metadata i8 %152, metadata !5829, metadata !DIExpression()), !dbg !5842
  %tobool1075 = icmp eq i8 %152, 0, !dbg !6133
  br i1 %tobool1075, label %if.then1082, label %land.lhs.true1076, !dbg !6135

land.lhs.true1076:                                ; preds = %if.end1073
  call void @llvm.dbg.value(metadata i8 %154, metadata !5832, metadata !DIExpression()), !dbg !5842
  %tobool1078 = icmp ne i8 %154, 0, !dbg !6136
  %160 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !6137
  %cmp1080 = icmp eq %union.tree_node* %op0.7.lcssa, %160, !dbg !6138
  %or.cond25 = and i1 %tobool1078, %cmp1080, !dbg !6139
  br i1 %or.cond25, label %if.end1087, label %if.then1082, !dbg !6139

if.then1082:                                      ; preds = %if.end1073, %land.lhs.true1076
  %161 = load i8, i8* %op1_const_self, align 1, !dbg !6140
  call void @llvm.dbg.value(metadata i8 %161, metadata !5833, metadata !DIExpression()), !dbg !5842
  %162 = load i8, i8* %maybe_const_itself, align 1, !dbg !6141
  %and108550 = and i8 %162, %161, !dbg !6141
  store i8 %and108550, i8* %maybe_const_itself, align 1, !dbg !6141
  br label %if.end1087, !dbg !6142

if.end1087:                                       ; preds = %land.lhs.true1076, %if.then1082
  %163 = load i32, i32* @flag_isoc99, align 4, !dbg !6143
  %tobool1088 = icmp eq i32 %163, 0, !dbg !6143
  br i1 %tobool1088, label %if.then1098, label %land.lhs.true1089, !dbg !6145

land.lhs.true1089:                                ; preds = %if.end1087
  call void @llvm.dbg.value(metadata i8 %152, metadata !5829, metadata !DIExpression()), !dbg !5842
  br i1 %tobool1075, label %if.then1098, label %land.lhs.true1092, !dbg !6146

land.lhs.true1092:                                ; preds = %land.lhs.true1089
  call void @llvm.dbg.value(metadata i8 %154, metadata !5832, metadata !DIExpression()), !dbg !5842
  %tobool1094 = icmp ne i8 %154, 0, !dbg !6147
  %164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !6148
  %cmp1096 = icmp eq %union.tree_node* %op0.7.lcssa, %164, !dbg !6149
  %or.cond26 = and i1 %tobool1094, %cmp1096, !dbg !6150
  br i1 %or.cond26, label %if.end1103, label %if.then1098, !dbg !6150

if.then1098:                                      ; preds = %land.lhs.true1089, %if.end1087, %land.lhs.true1092
  %165 = load i8, i8* %op2_const, align 1, !dbg !6151
  call void @llvm.dbg.value(metadata i8 %165, metadata !5831, metadata !DIExpression()), !dbg !5842
  %166 = load i8, i8* %maybe_const_operands, align 1, !dbg !6152
  %and110151 = and i8 %166, %165, !dbg !6152
  store i8 %and110151, i8* %maybe_const_operands, align 1, !dbg !6152
  br label %if.end1103, !dbg !6153

if.end1103:                                       ; preds = %land.lhs.true1092, %if.then1098
  call void @llvm.dbg.value(metadata i8 %152, metadata !5829, metadata !DIExpression()), !dbg !5842
  br i1 %tobool1075, label %if.then1112, label %land.lhs.true1106, !dbg !6154

land.lhs.true1106:                                ; preds = %if.end1103
  call void @llvm.dbg.value(metadata i8 %154, metadata !5832, metadata !DIExpression()), !dbg !5842
  %tobool1108 = icmp ne i8 %154, 0, !dbg !6156
  %167 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !6157
  %cmp1110 = icmp eq %union.tree_node* %op0.7.lcssa, %167, !dbg !6158
  %or.cond27 = and i1 %tobool1108, %cmp1110, !dbg !6159
  br i1 %or.cond27, label %out, label %if.then1112, !dbg !6159

if.then1112:                                      ; preds = %if.end1103, %land.lhs.true1106
  %168 = load i8, i8* %op2_const_self, align 1, !dbg !6160
  call void @llvm.dbg.value(metadata i8 %168, metadata !5834, metadata !DIExpression()), !dbg !5842
  %169 = load i8, i8* %maybe_const_itself, align 1, !dbg !6161
  %and111552 = and i8 %169, %168, !dbg !6161
  store i8 %and111552, i8* %maybe_const_itself, align 1, !dbg !6161
  br label %out, !dbg !6162

sw.bb1118:                                        ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 1485, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !6163
  br label %out, !dbg !6163

out:                                              ; preds = %if.end124, %land.lhs.true467, %land.lhs.true483, %land.lhs.true451, %land.lhs.true671, %land.lhs.true655, %sw.bb1118, %sw.epilog, %if.then1112, %land.lhs.true1106, %cond.true869, %cond.false872, %if.then875, %if.end644, %if.end644, %if.end644, %if.end644, %cond.end700, %sw.default646, %if.end442, %cond.end512, %if.then127, %if.then62, %if.end58, %if.end300, %sw.bb66, %if.then34
  %ret.7 = phi %union.tree_node* [ %call, %if.then34 ], [ %call301, %if.end300 ], [ %call67, %sw.bb66 ], [ %call63, %if.then62 ], [ %9, %if.end58 ], [ %ret.1, %if.then127 ], [ %expr, %if.end124 ], [ %ret.3, %cond.end512 ], [ %ret.3, %land.lhs.true483 ], [ %ret.3, %land.lhs.true467 ], [ %ret.3, %land.lhs.true451 ], [ %ret.3, %if.end442 ], [ %ret.4, %sw.default646 ], [ %ret.4, %land.lhs.true655 ], [ %ret.4, %land.lhs.true671 ], [ %ret.4, %cond.end700 ], [ %ret.4, %if.end644 ], [ %ret.4, %if.end644 ], [ %ret.4, %if.end644 ], [ %ret.4, %if.end644 ], [ %ret.5, %if.then875 ], [ %ret.5, %cond.false872 ], [ %ret.5, %cond.true869 ], [ %ret.6, %land.lhs.true1106 ], [ %ret.6, %if.then1112 ], [ %expr, %sw.epilog ], [ %expr, %sw.bb1118 ], !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.7, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.label(metadata !5841), !dbg !6164
  %170 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6165
  %bf.load1121 = load i64, i64* %170, align 8, !dbg !6165
  %bf.lshr31 = or i64 %bf.load, %bf.load1121, !dbg !6166
  %171 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5842
  br label %while.cond1127, !dbg !6167

while.cond1127:                                   ; preds = %while.body1165, %out
  %bf.load1192 = phi i64 [ %bf.load1121, %out ], [ %bf.load1129.pre, %while.body1165 ], !dbg !6167
  %ret.8 = phi %union.tree_node* [ %ret.7, %out ], [ %174, %while.body1165 ], !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8, metadata !5818, metadata !DIExpression()), !dbg !5842
  %bf.cast113132 = and i64 %bf.load1192, 65535, !dbg !6167
  %cmp1132 = icmp eq i64 %bf.cast113132, 116, !dbg !6167
  br i1 %cmp1132, label %land.lhs.true1148, label %lor.lhs.false1134, !dbg !6167

lor.lhs.false1134:                                ; preds = %while.cond1127
  %172 = or i64 %bf.cast113132, 4, !dbg !6167
  %173 = icmp eq i64 %172, 117, !dbg !6167
  br i1 %173, label %land.lhs.true1148, label %while.end1169, !dbg !6167

land.lhs.true1148:                                ; preds = %lor.lhs.false1134, %while.cond1127
  %operands1150 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6167
  %174 = load %union.tree_node*, %union.tree_node** %operands1150, align 8, !dbg !6167
  %cmp1152 = icmp eq %union.tree_node* %174, %171, !dbg !6167
  br i1 %cmp1152, label %while.end1169, label %land.rhs1154, !dbg !6167

land.rhs1154:                                     ; preds = %land.lhs.true1148
  %type1156 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6167
  %175 = load %union.tree_node*, %union.tree_node** %type1156, align 8, !dbg !6167
  %type1161 = getelementptr inbounds %union.tree_node, %union.tree_node* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6167
  %176 = load %union.tree_node*, %union.tree_node** %type1161, align 8, !dbg !6167
  %cmp1162 = icmp eq %union.tree_node* %175, %176, !dbg !6167
  br i1 %cmp1162, label %while.body1165, label %while.end1169, !dbg !6167

while.body1165:                                   ; preds = %land.rhs1154
  call void @llvm.dbg.value(metadata %union.tree_node* %174, metadata !5818, metadata !DIExpression()), !dbg !5842
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5842
  %bf.load1129.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !6167
  br label %while.cond1127, !dbg !6167, !llvm.loop !6168

while.end1169:                                    ; preds = %lor.lhs.false1134, %land.lhs.true1148, %land.rhs1154
  %bf.load1192.lcssa = phi i64 [ %bf.load1192, %lor.lhs.false1134 ], [ %bf.load1192, %land.lhs.true1148 ], [ %bf.load1192, %land.rhs1154 ], !dbg !6167
  %ret.8.lcssa = phi %union.tree_node* [ %ret.8, %lor.lhs.false1134 ], [ %ret.8, %land.lhs.true1148 ], [ %ret.8, %land.rhs1154 ], !dbg !5842
  %bf.cast113132.lcssa = phi i64 [ %bf.cast113132, %lor.lhs.false1134 ], [ %bf.cast113132, %land.lhs.true1148 ], [ %bf.cast113132, %land.rhs1154 ], !dbg !6167
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8.lcssa, metadata !5818, metadata !DIExpression()), !dbg !5842
  %or35 = and i64 %bf.lshr31, 8388608, !dbg !6169
  %tobool1171 = icmp eq i64 %or35, 0, !dbg !6169
  br i1 %tobool1171, label %if.end1208, label %land.lhs.true1172, !dbg !6171

land.lhs.true1172:                                ; preds = %while.end1169
  %bf.cast117736 = and i64 %bf.load1192.lcssa, 8388608, !dbg !6172
  %tobool1178 = icmp eq i64 %bf.cast117736, 0, !dbg !6172
  br i1 %tobool1178, label %if.then1179, label %if.end1208, !dbg !6173

if.then1179:                                      ; preds = %land.lhs.true1172
  %tobool1180 = icmp eq %union.tree_node* %ret.8.lcssa, null, !dbg !6174
  br i1 %tobool1180, label %if.then1199, label %land.lhs.true1181, !dbg !6174

land.lhs.true1181:                                ; preds = %if.then1179
  %arrayidx1187 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast113132.lcssa, !dbg !6174
  %177 = load i32, i32* %arrayidx1187, align 4, !dbg !6174
  %cmp1188 = icmp ugt i32 %177, 3, !dbg !6174
  br i1 %cmp1188, label %land.lhs.true1190, label %if.then1199, !dbg !6174

land.lhs.true1190:                                ; preds = %land.lhs.true1181
  %cmp1197 = icmp ult i32 %177, 11, !dbg !6174
  br i1 %cmp1197, label %if.end1203, label %if.then1199, !dbg !6177

if.then1199:                                      ; preds = %if.then1179, %land.lhs.true1190, %land.lhs.true1181
  %type1201 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.8.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6178
  %178 = load %union.tree_node*, %union.tree_node** %type1201, align 8, !dbg !6178
  %call1202 = call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %178, %union.tree_node* %ret.8.lcssa) #7, !dbg !6178
  call void @llvm.dbg.value(metadata %union.tree_node* %call1202, metadata !5818, metadata !DIExpression()), !dbg !5842
  %.phi.trans.insert94 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6179
  %bf.load1205.pre = load i64, i64* %.phi.trans.insert94, align 8, !dbg !6180
  br label %if.end1203, !dbg !6181

if.end1203:                                       ; preds = %if.then1199, %land.lhs.true1190
  %bf.load1205 = phi i64 [ %bf.load1192.lcssa, %land.lhs.true1190 ], [ %bf.load1205.pre, %if.then1199 ], !dbg !6180
  %ret.9 = phi %union.tree_node* [ %ret.8.lcssa, %land.lhs.true1190 ], [ %call1202, %if.then1199 ], !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.9, metadata !5818, metadata !DIExpression()), !dbg !5842
  %179 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6182
  %bf.set1207 = or i64 %bf.load1205, 8388608, !dbg !6180
  store i64 %bf.set1207, i64* %179, align 8, !dbg !6180
  br label %if.end1208, !dbg !6183

if.end1208:                                       ; preds = %land.lhs.true1172, %while.end1169, %if.end1203
  %ret.10 = phi %union.tree_node* [ %ret.8.lcssa, %land.lhs.true1172 ], [ %ret.9, %if.end1203 ], [ %ret.8.lcssa, %while.end1169 ], !dbg !6184
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.10, metadata !5818, metadata !DIExpression()), !dbg !5842
  %cmp1209 = icmp eq %union.tree_node* %ret.10, %expr, !dbg !6185
  br i1 %cmp1209, label %cleanup, label %if.then1211, !dbg !6187

if.then1211:                                      ; preds = %if.end1208
  call void @protected_set_expr_location(%union.tree_node* %ret.10, i32 %cond) #7, !dbg !6188
  br label %cleanup, !dbg !6188

cleanup:                                          ; preds = %if.end1208, %if.then1211, %if.end
  %retval.0 = phi %union.tree_node* [ %expr, %if.end ], [ %ret.10, %if.then1211 ], [ %expr, %if.end1208 ]
  call void @llvm.dbg.value(metadata i8* %op2_const_self, metadata !5834, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op2_const_self) #6, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %op1_const_self, metadata !5833, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op1_const_self) #6, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %op0_const_self, metadata !5832, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op0_const_self) #6, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %op2_const, metadata !5831, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op2_const) #6, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %op1_const, metadata !5830, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op1_const) #6, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %op0_const, metadata !5829, metadata !DIExpression(DW_OP_deref)), !dbg !5842
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op0_const) #6, !dbg !6189
  ret %union.tree_node* %retval.0, !dbg !6189
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @decl_constant_value_for_optimization(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !6190 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6192, metadata !DIExpression()), !dbg !6194
  %0 = load i32, i32* @c_language, align 4, !dbg !6195
  %and = and i32 %0, 2, !dbg !6195
  %cmp = icmp eq i32 %and, 0, !dbg !6195
  br i1 %cmp, label %if.end, label %if.then, !dbg !6197

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 1522, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !6198
  br label %if.end, !dbg !6198

if.end:                                           ; preds = %entry, %if.then
  %1 = load i32, i32* @optimize, align 4, !dbg !6199
  %tobool = icmp eq i32 %1, 0, !dbg !6199
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6201

lor.lhs.false:                                    ; preds = %if.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6202
  %bf.load = load i64, i64* %2, align 8, !dbg !6202
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6203
  %cmp1 = icmp eq i64 %bf.cast1, 32, !dbg !6203
  br i1 %cmp1, label %lor.lhs.false2, label %cleanup, !dbg !6204

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6205
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !6205
  %4 = load i64*, i64** %3, align 8, !dbg !6205
  %bf.load4 = load i64, i64* %4, align 8, !dbg !6205
  %bf.cast62 = and i64 %bf.load4, 65535, !dbg !6206
  %cmp7 = icmp eq i64 %bf.cast62, 15, !dbg !6206
  br i1 %cmp7, label %cleanup, label %lor.lhs.false8, !dbg !6207

lor.lhs.false8:                                   ; preds = %lor.lhs.false2
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6208
  %5 = bitcast i40* %mode to i64*, !dbg !6208
  %bf.load9 = load i64, i64* %5, align 8, !dbg !6208
  %bf.cast113 = and i64 %bf.load9, 255, !dbg !6209
  %cmp12 = icmp eq i64 %bf.cast113, 1, !dbg !6209
  br i1 %cmp12, label %cleanup, label %if.end14, !dbg !6210

if.end14:                                         ; preds = %lor.lhs.false8
  %call = tail call %union.tree_node* @decl_constant_value(%union.tree_node* %exp) #7, !dbg !6211
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6193, metadata !DIExpression()), !dbg !6194
  %cmp15 = icmp eq %union.tree_node* %call, %exp, !dbg !6212
  br i1 %cmp15, label %cleanup, label %land.lhs.true, !dbg !6214

land.lhs.true:                                    ; preds = %if.end14
  %bf.load17 = load i64, i64* %2, align 8, !dbg !6215
  %bf.cast194 = and i64 %bf.load17, 67108864, !dbg !6215
  %tobool20 = icmp eq i64 %bf.cast194, 0, !dbg !6215
  br i1 %tobool20, label %cleanup, label %if.then21, !dbg !6216

if.then21:                                        ; preds = %land.lhs.true
  %call22 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %call) #7, !dbg !6217
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !6193, metadata !DIExpression()), !dbg !6194
  br label %cleanup, !dbg !6218

cleanup:                                          ; preds = %land.lhs.true, %if.end14, %lor.lhs.false, %if.end, %if.then21, %lor.lhs.false2, %lor.lhs.false8
  %retval.0 = phi %union.tree_node* [ %exp, %lor.lhs.false8 ], [ %exp, %lor.lhs.false2 ], [ %exp, %lor.lhs.false ], [ %exp, %if.end ], [ %call22, %if.then21 ], [ %call, %land.lhs.true ], [ %exp, %if.end14 ], !dbg !6194
  ret %union.tree_node* %retval.0, !dbg !6219
}

declare dso_local %union.tree_node* @decl_constant_value(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @constant_expression_warning(%union.tree_node* %value) local_unnamed_addr #5 !dbg !6220 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !6224, metadata !DIExpression()), !dbg !6225
  %0 = load i32, i32* @warn_overflow, align 4, !dbg !6226
  %tobool = icmp ne i32 %0, 0, !dbg !6226
  %1 = load i32, i32* @pedantic, align 4, !dbg !6228
  %tobool1 = icmp ne i32 %1, 0, !dbg !6228
  %or.cond = and i1 %tobool, %tobool1, !dbg !6229
  br i1 %or.cond, label %land.lhs.true2, label %if.end, !dbg !6229

land.lhs.true2:                                   ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6230
  %bf.load = load i64, i64* %2, align 8, !dbg !6230
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6231
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !6231
  br i1 %cmp, label %land.lhs.true26, label %lor.lhs.false, !dbg !6232

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %cmp7 = icmp eq i64 %bf.cast1, 24, !dbg !6233
  br i1 %cmp7, label %land.lhs.true26, label %lor.lhs.false8, !dbg !6234

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp13 = icmp eq i64 %bf.cast1, 25, !dbg !6235
  br i1 %cmp13, label %land.lhs.true26, label %lor.lhs.false14, !dbg !6236

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %cmp19 = icmp eq i64 %bf.cast1, 27, !dbg !6237
  br i1 %cmp19, label %land.lhs.true26, label %lor.lhs.false20, !dbg !6238

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %cmp25 = icmp eq i64 %bf.cast1, 26, !dbg !6239
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !6240

land.lhs.true26:                                  ; preds = %lor.lhs.false20, %lor.lhs.false14, %lor.lhs.false8, %lor.lhs.false, %land.lhs.true2
  %bf.cast306 = and i64 %bf.load, 134217728, !dbg !6241
  %tobool31 = icmp eq i64 %bf.cast306, 0, !dbg !6241
  br i1 %tobool31, label %if.end, label %if.then, !dbg !6242

if.then:                                          ; preds = %land.lhs.true26
  %3 = load i32, i32* @input_location, align 4, !dbg !6243
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %3, i32 151, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.206, i64 0, i64 0)) #7, !dbg !6244
  br label %if.end, !dbg !6244

if.end:                                           ; preds = %land.lhs.true26, %if.then, %lor.lhs.false20, %entry
  ret void, !dbg !6245
}

; Function Attrs: nounwind uwtable
define dso_local void @constant_expression_error(%union.tree_node* %value) local_unnamed_addr #5 !dbg !6246 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !6248, metadata !DIExpression()), !dbg !6249
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6250
  %bf.load = load i64, i64* %0, align 8, !dbg !6250
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6252
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !6252
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6253

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 24, !dbg !6254
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !6255

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 25, !dbg !6256
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false12, !dbg !6257

lor.lhs.false12:                                  ; preds = %lor.lhs.false6
  %cmp17 = icmp eq i64 %bf.cast1, 27, !dbg !6258
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false18, !dbg !6259

lor.lhs.false18:                                  ; preds = %lor.lhs.false12
  %cmp23 = icmp eq i64 %bf.cast1, 26, !dbg !6260
  br i1 %cmp23, label %land.lhs.true, label %if.end, !dbg !6261

land.lhs.true:                                    ; preds = %lor.lhs.false18, %lor.lhs.false12, %lor.lhs.false6, %lor.lhs.false, %entry
  %bf.cast276 = and i64 %bf.load, 134217728, !dbg !6262
  %tobool = icmp eq i64 %bf.cast276, 0, !dbg !6262
  br i1 %tobool, label %if.end, label %if.then, !dbg !6263

if.then:                                          ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.206, i64 0, i64 0)) #7, !dbg !6264
  br label %if.end, !dbg !6264

if.end:                                           ; preds = %land.lhs.true, %if.then, %lor.lhs.false18
  ret void, !dbg !6265
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @overflow_warning(i32 %loc, %union.tree_node* %value) local_unnamed_addr #5 !dbg !6266 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6270, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !6271, metadata !DIExpression()), !dbg !6272
  %0 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6273
  %cmp = icmp eq i32 %0, 0, !dbg !6275
  br i1 %cmp, label %if.end, label %sw.epilog, !dbg !6276

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6277
  %bf.load = load i64, i64* %1, align 8, !dbg !6277
  %2 = trunc i64 %bf.load to i16, !dbg !6277
  switch i16 %2, label %sw.epilog [
    i16 23, label %sw.bb
    i16 24, label %sw.bb1
    i16 25, label %sw.bb3
    i16 27, label %sw.bb5
    i16 26, label %sw.bb7
  ], !dbg !6278

sw.bb:                                            ; preds = %if.end
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 151, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.207, i64 0, i64 0)) #7, !dbg !6279
  br label %sw.epilog, !dbg !6281

sw.bb1:                                           ; preds = %if.end
  %call2 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 151, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.208, i64 0, i64 0)) #7, !dbg !6282
  br label %sw.epilog, !dbg !6283

sw.bb3:                                           ; preds = %if.end
  %call4 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 151, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.209, i64 0, i64 0)) #7, !dbg !6284
  br label %sw.epilog, !dbg !6285

sw.bb5:                                           ; preds = %if.end
  %call6 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 151, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.210, i64 0, i64 0)) #7, !dbg !6286
  br label %sw.epilog, !dbg !6287

sw.bb7:                                           ; preds = %if.end
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6288
  %3 = bitcast i32* %real to i64**, !dbg !6288
  %4 = load i64*, i64** %3, align 8, !dbg !6288
  %bf.load9 = load i64, i64* %4, align 8, !dbg !6288
  %bf.cast111 = and i64 %bf.load9, 65535, !dbg !6290
  %cmp12 = icmp eq i64 %bf.cast111, 23, !dbg !6290
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !6291

if.then13:                                        ; preds = %sw.bb7
  %call14 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 151, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.211, i64 0, i64 0)) #7, !dbg !6292
  br label %sw.epilog, !dbg !6292

if.else:                                          ; preds = %sw.bb7
  %cmp21 = icmp eq i64 %bf.cast111, 24, !dbg !6293
  br i1 %cmp21, label %if.then22, label %sw.epilog, !dbg !6295

if.then22:                                        ; preds = %if.else
  %call23 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 151, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.212, i64 0, i64 0)) #7, !dbg !6296
  br label %sw.epilog, !dbg !6296

sw.epilog:                                        ; preds = %entry, %if.end, %if.then13, %if.then22, %if.else, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !6297
}

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @warn_logical_operator(i32 %location, i32 %code, %union.tree_node* %type, i32 %code_left, %union.tree_node* %op_left, i32 %code_right, %union.tree_node* %op_right) local_unnamed_addr #5 !dbg !6298 {
entry:
  %in0_p = alloca i32, align 4
  %in1_p = alloca i32, align 4
  %in_p = alloca i32, align 4
  %low0 = alloca %union.tree_node*, align 8
  %low1 = alloca %union.tree_node*, align 8
  %low = alloca %union.tree_node*, align 8
  %high0 = alloca %union.tree_node*, align 8
  %high1 = alloca %union.tree_node*, align 8
  %high = alloca %union.tree_node*, align 8
  %strict_overflow_p = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %location, metadata !6302, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %code, metadata !6303, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6304, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %code_left, metadata !6305, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %op_left, metadata !6306, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %code_right, metadata !6307, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %op_right, metadata !6308, metadata !DIExpression()), !dbg !6323
  %0 = or i32 %code, 2, !dbg !6324
  %1 = icmp eq i32 %0, 94, !dbg !6324
  call void @llvm.dbg.value(metadata i1 %1, metadata !6309, metadata !DIExpression()), !dbg !6323
  %2 = bitcast i32* %in0_p to i8*, !dbg !6325
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #6, !dbg !6325
  %3 = bitcast i32* %in1_p to i8*, !dbg !6325
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #6, !dbg !6325
  %4 = bitcast i32* %in_p to i8*, !dbg !6325
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #6, !dbg !6325
  %5 = bitcast %union.tree_node** %low0 to i8*, !dbg !6326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !6326
  %6 = bitcast %union.tree_node** %low1 to i8*, !dbg !6326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !6326
  %7 = bitcast %union.tree_node** %low to i8*, !dbg !6326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6326
  %8 = bitcast %union.tree_node** %high0 to i8*, !dbg !6326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !6326
  %9 = bitcast %union.tree_node** %high1 to i8*, !dbg !6326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !6326
  %10 = bitcast %union.tree_node** %high to i8*, !dbg !6326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !6326
  call void @llvm.dbg.value(metadata i8* %strict_overflow_p, metadata !6322, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %strict_overflow_p) #6, !dbg !6327
  call void @llvm.dbg.value(metadata i8 0, metadata !6322, metadata !DIExpression()), !dbg !6323
  store i8 0, i8* %strict_overflow_p, align 1, !dbg !6328
  %code.off = add i32 %code, -91, !dbg !6329
  %switch = icmp ult i32 %code.off, 4, !dbg !6329
  br i1 %switch, label %if.end, label %cleanup, !dbg !6329

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @truth_value_p(i32 %code_left) #8, !dbg !6331
  %tobool = icmp eq i8 %call, 0, !dbg !6331
  br i1 %tobool, label %land.lhs.true8, label %if.end59, !dbg !6333

land.lhs.true8:                                   ; preds = %if.end
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %op_left, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6334
  %11 = bitcast %union.tree_node** %type9 to i64**, !dbg !6334
  %12 = load i64*, i64** %11, align 8, !dbg !6334
  %bf.load = load i64, i64* %12, align 8, !dbg !6334
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6334
  %cmp10 = icmp eq i64 %bf.cast1, 6, !dbg !6334
  br i1 %cmp10, label %land.lhs.true26, label %lor.lhs.false, !dbg !6334

lor.lhs.false:                                    ; preds = %land.lhs.true8
  %cmp17 = icmp eq i64 %bf.cast1, 7, !dbg !6334
  br i1 %cmp17, label %land.lhs.true26, label %lor.lhs.false18, !dbg !6334

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp25 = icmp eq i64 %bf.cast1, 8, !dbg !6334
  br i1 %cmp25, label %land.lhs.true26, label %if.end59, !dbg !6335

land.lhs.true26:                                  ; preds = %lor.lhs.false18, %lor.lhs.false, %land.lhs.true8
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %op_left, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6336
  %bf.load28 = load i64, i64* %13, align 8, !dbg !6336
  %bf.cast30 = and i64 %bf.load28, 65535, !dbg !6336
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast30, !dbg !6336
  %14 = load i32, i32* %arrayidx, align 4, !dbg !6336
  %cmp31 = icmp eq i32 %14, 1, !dbg !6336
  br i1 %cmp31, label %if.end59, label %land.lhs.true32, !dbg !6337

land.lhs.true32:                                  ; preds = %land.lhs.true26
  %bf.cast3613 = and i64 %bf.load28, 8388608, !dbg !6338
  %tobool37 = icmp eq i64 %bf.cast3613, 0, !dbg !6338
  br i1 %tobool37, label %land.lhs.true38, label %if.end59, !dbg !6339

land.lhs.true38:                                  ; preds = %land.lhs.true32
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %op_right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6340
  %bf.load40 = load i64, i64* %15, align 8, !dbg !6340
  %bf.cast4214 = and i64 %bf.load40, 65535, !dbg !6341
  %cmp43 = icmp eq i64 %bf.cast4214, 23, !dbg !6341
  br i1 %cmp43, label %land.lhs.true44, label %if.end59, !dbg !6342

land.lhs.true44:                                  ; preds = %land.lhs.true38
  %call45 = tail call i32 @integer_zerop(%union.tree_node* %op_right) #7, !dbg !6343
  %tobool46 = icmp eq i32 %call45, 0, !dbg !6343
  br i1 %tobool46, label %land.lhs.true47, label %if.end59, !dbg !6344

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = tail call i32 @integer_onep(%union.tree_node* %op_right) #7, !dbg !6345
  %tobool49 = icmp eq i32 %call48, 0, !dbg !6345
  br i1 %tobool49, label %if.then50, label %if.end59, !dbg !6346

if.then50:                                        ; preds = %land.lhs.true47
  br i1 %1, label %if.then52, label %if.else, !dbg !6347

if.then52:                                        ; preds = %if.then50
  %call53 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 124, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.213, i64 0, i64 0)) #7, !dbg !6349
  br label %if.end55, !dbg !6349

if.else:                                          ; preds = %if.then50
  %call54 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 124, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.214, i64 0, i64 0)) #7, !dbg !6351
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then52
  %bf.load57 = load i64, i64* %13, align 8, !dbg !6352
  %bf.set = or i64 %bf.load57, 8388608, !dbg !6352
  store i64 %bf.set, i64* %13, align 8, !dbg !6352
  br label %cleanup, !dbg !6353

if.end59:                                         ; preds = %land.lhs.true47, %land.lhs.true44, %land.lhs.true32, %if.end, %land.lhs.true38, %land.lhs.true26, %lor.lhs.false18
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %op_left, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6354
  %bf.load61 = load i64, i64* %16, align 8, !dbg !6354
  %bf.cast63 = and i64 %bf.load61, 65535, !dbg !6354
  %arrayidx65 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast63, !dbg !6354
  %17 = load i32, i32* %arrayidx65, align 4, !dbg !6354
  %cmp66 = icmp eq i32 %17, 1, !dbg !6354
  br i1 %cmp66, label %cleanup, label %lor.lhs.false67, !dbg !6356

lor.lhs.false67:                                  ; preds = %if.end59
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %op_right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6357
  %bf.load69 = load i64, i64* %18, align 8, !dbg !6357
  %bf.cast71 = and i64 %bf.load69, 65535, !dbg !6357
  %arrayidx73 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast71, !dbg !6357
  %19 = load i32, i32* %arrayidx73, align 4, !dbg !6357
  %cmp74 = icmp eq i32 %19, 1, !dbg !6357
  br i1 %cmp74, label %cleanup, label %if.end76, !dbg !6358

if.end76:                                         ; preds = %lor.lhs.false67
  %20 = trunc i64 %bf.load61 to i32, !dbg !6359
  %bf.cast80 = and i32 %20, 65535, !dbg !6359
  %call81 = tail call fastcc zeroext i8 @truth_value_p(i32 %bf.cast80) #8, !dbg !6361
  %tobool82 = icmp eq i8 %call81, 0, !dbg !6361
  br i1 %tobool82, label %lor.lhs.false83, label %lor.lhs.false110, !dbg !6362

lor.lhs.false83:                                  ; preds = %if.end76
  %type85 = getelementptr inbounds %union.tree_node, %union.tree_node* %op_left, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6363
  %21 = bitcast %union.tree_node** %type85 to i64**, !dbg !6363
  %22 = load i64*, i64** %21, align 8, !dbg !6363
  %bf.load87 = load i64, i64* %22, align 8, !dbg !6363
  %bf.cast894 = and i64 %bf.load87, 65535, !dbg !6363
  %cmp90 = icmp eq i64 %bf.cast894, 6, !dbg !6363
  br i1 %cmp90, label %lor.lhs.false110, label %lor.lhs.false92, !dbg !6363

lor.lhs.false92:                                  ; preds = %lor.lhs.false83
  %cmp99 = icmp eq i64 %bf.cast894, 7, !dbg !6363
  br i1 %cmp99, label %lor.lhs.false110, label %lor.lhs.false101, !dbg !6363

lor.lhs.false101:                                 ; preds = %lor.lhs.false92
  %cmp108 = icmp eq i64 %bf.cast894, 8, !dbg !6363
  br i1 %cmp108, label %lor.lhs.false110, label %cleanup, !dbg !6364

lor.lhs.false110:                                 ; preds = %if.end76, %lor.lhs.false101, %lor.lhs.false92, %lor.lhs.false83
  %bf.load112 = load i64, i64* %18, align 8, !dbg !6365
  %23 = trunc i64 %bf.load112 to i32, !dbg !6365
  %bf.cast114 = and i32 %23, 65535, !dbg !6365
  %call115 = tail call fastcc zeroext i8 @truth_value_p(i32 %bf.cast114) #8, !dbg !6366
  %tobool117 = icmp eq i8 %call115, 0, !dbg !6366
  br i1 %tobool117, label %lor.lhs.false118, label %if.end146, !dbg !6367

lor.lhs.false118:                                 ; preds = %lor.lhs.false110
  %type120 = getelementptr inbounds %union.tree_node, %union.tree_node* %op_right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6368
  %24 = bitcast %union.tree_node** %type120 to i64**, !dbg !6368
  %25 = load i64*, i64** %24, align 8, !dbg !6368
  %bf.load122 = load i64, i64* %25, align 8, !dbg !6368
  %bf.cast1247 = and i64 %bf.load122, 65535, !dbg !6368
  %cmp125 = icmp eq i64 %bf.cast1247, 6, !dbg !6368
  br i1 %cmp125, label %if.end146, label %lor.lhs.false127, !dbg !6368

lor.lhs.false127:                                 ; preds = %lor.lhs.false118
  %cmp134 = icmp eq i64 %bf.cast1247, 7, !dbg !6368
  br i1 %cmp134, label %if.end146, label %lor.lhs.false136, !dbg !6368

lor.lhs.false136:                                 ; preds = %lor.lhs.false127
  %cmp143 = icmp eq i64 %bf.cast1247, 8, !dbg !6368
  br i1 %cmp143, label %if.end146, label %cleanup, !dbg !6369

if.end146:                                        ; preds = %lor.lhs.false110, %lor.lhs.false136, %lor.lhs.false127, %lor.lhs.false118
  call void @llvm.dbg.value(metadata i32* %in0_p, metadata !6310, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node** %low0, metadata !6313, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node** %high0, metadata !6316, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %strict_overflow_p, metadata !6322, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  %call147 = call %union.tree_node* @make_range(%union.tree_node* %op_left, i32* nonnull %in0_p, %union.tree_node** nonnull %low0, %union.tree_node** nonnull %high0, i8* nonnull %strict_overflow_p) #7, !dbg !6370
  call void @llvm.dbg.value(metadata %union.tree_node* %call147, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32* %in1_p, metadata !6311, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node** %low1, metadata !6314, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node** %high1, metadata !6317, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %strict_overflow_p, metadata !6322, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  %call148 = call %union.tree_node* @make_range(%union.tree_node* %op_right, i32* nonnull %in1_p, %union.tree_node** nonnull %low1, %union.tree_node** nonnull %high1, i8* nonnull %strict_overflow_p) #7, !dbg !6371
  call void @llvm.dbg.value(metadata %union.tree_node* %call148, metadata !6320, metadata !DIExpression()), !dbg !6323
  %tobool149 = icmp eq %union.tree_node* %call147, null, !dbg !6372
  br i1 %tobool149, label %if.end159, label %land.lhs.true150, !dbg !6374

land.lhs.true150:                                 ; preds = %if.end146
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6375
  %bf.load152 = load i64, i64* %26, align 8, !dbg !6375
  %bf.cast15412 = and i64 %bf.load152, 65535, !dbg !6376
  %cmp155 = icmp eq i64 %bf.cast15412, 189, !dbg !6376
  br i1 %cmp155, label %if.then157, label %if.end159, !dbg !6377

if.then157:                                       ; preds = %land.lhs.true150
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6378
  %arrayidx158 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6378
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx158, align 8, !dbg !6378
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !6319, metadata !DIExpression()), !dbg !6323
  br label %if.end159, !dbg !6379

if.end159:                                        ; preds = %if.end146, %if.then157, %land.lhs.true150
  %lhs.0 = phi %union.tree_node* [ %27, %if.then157 ], [ %call147, %land.lhs.true150 ], [ null, %if.end146 ], !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0, metadata !6319, metadata !DIExpression()), !dbg !6323
  %tobool160 = icmp eq %union.tree_node* %call148, null, !dbg !6380
  br i1 %tobool160, label %if.end172, label %land.lhs.true161, !dbg !6382

land.lhs.true161:                                 ; preds = %if.end159
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6383
  %bf.load163 = load i64, i64* %28, align 8, !dbg !6383
  %bf.cast16511 = and i64 %bf.load163, 65535, !dbg !6384
  %cmp166 = icmp eq i64 %bf.cast16511, 189, !dbg !6384
  br i1 %cmp166, label %if.then168, label %if.end172, !dbg !6385

if.then168:                                       ; preds = %land.lhs.true161
  %operands170 = getelementptr inbounds %union.tree_node, %union.tree_node* %call148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6386
  %arrayidx171 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands170, i64 1, !dbg !6386
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx171, align 8, !dbg !6386
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !6320, metadata !DIExpression()), !dbg !6323
  br label %if.end172, !dbg !6387

if.end172:                                        ; preds = %if.end159, %if.then168, %land.lhs.true161
  %rhs.0 = phi %union.tree_node* [ %29, %if.then168 ], [ %call148, %land.lhs.true161 ], [ null, %if.end159 ], !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !6320, metadata !DIExpression()), !dbg !6323
  br i1 %1, label %if.then174, label %if.end179, !dbg !6388

if.then174:                                       ; preds = %if.end172
  %30 = load i32, i32* %in0_p, align 4, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %30, metadata !6310, metadata !DIExpression()), !dbg !6323
  %tobool175 = icmp eq i32 %30, 0, !dbg !6391
  %lnot.ext = zext i1 %tobool175 to i32, !dbg !6391
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6310, metadata !DIExpression()), !dbg !6323
  store i32 %lnot.ext, i32* %in0_p, align 4, !dbg !6392
  %31 = load i32, i32* %in1_p, align 4, !dbg !6393
  call void @llvm.dbg.value(metadata i32 %31, metadata !6311, metadata !DIExpression()), !dbg !6323
  %tobool176 = icmp eq i32 %31, 0, !dbg !6394
  %lnot.ext178 = zext i1 %tobool176 to i32, !dbg !6394
  call void @llvm.dbg.value(metadata i32 %lnot.ext178, metadata !6311, metadata !DIExpression()), !dbg !6323
  store i32 %lnot.ext178, i32* %in1_p, align 4, !dbg !6395
  br label %if.end179, !dbg !6396

if.end179:                                        ; preds = %if.then174, %if.end172
  %tobool180 = icmp ne %union.tree_node* %lhs.0, null, !dbg !6397
  %tobool182 = icmp ne %union.tree_node* %rhs.0, null, !dbg !6399
  %or.cond = and i1 %tobool180, %tobool182, !dbg !6400
  br i1 %or.cond, label %land.lhs.true183, label %cleanup, !dbg !6400

land.lhs.true183:                                 ; preds = %if.end179
  %call184 = call i32 @operand_equal_p(%union.tree_node* nonnull %lhs.0, %union.tree_node* nonnull %rhs.0, i32 0) #7, !dbg !6401
  %tobool185 = icmp eq i32 %call184, 0, !dbg !6401
  br i1 %tobool185, label %cleanup, label %land.lhs.true186, !dbg !6402

land.lhs.true186:                                 ; preds = %land.lhs.true183
  %32 = load i32, i32* %in0_p, align 4, !dbg !6403
  call void @llvm.dbg.value(metadata i32 %32, metadata !6310, metadata !DIExpression()), !dbg !6323
  %33 = load %union.tree_node*, %union.tree_node** %low0, align 8, !dbg !6404
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !6313, metadata !DIExpression()), !dbg !6323
  %34 = load %union.tree_node*, %union.tree_node** %high0, align 8, !dbg !6405
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !6316, metadata !DIExpression()), !dbg !6323
  %35 = load i32, i32* %in1_p, align 4, !dbg !6406
  call void @llvm.dbg.value(metadata i32 %35, metadata !6311, metadata !DIExpression()), !dbg !6323
  %36 = load %union.tree_node*, %union.tree_node** %low1, align 8, !dbg !6407
  call void @llvm.dbg.value(metadata %union.tree_node* %36, metadata !6314, metadata !DIExpression()), !dbg !6323
  %37 = load %union.tree_node*, %union.tree_node** %high1, align 8, !dbg !6408
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !6317, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32* %in_p, metadata !6312, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node** %low, metadata !6315, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node** %high, metadata !6318, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  %call187 = call zeroext i8 @merge_ranges(i32* nonnull %in_p, %union.tree_node** nonnull %low, %union.tree_node** nonnull %high, i32 %32, %union.tree_node* %33, %union.tree_node* %34, i32 %35, %union.tree_node* %36, %union.tree_node* %37) #7, !dbg !6409
  %tobool189 = icmp eq i8 %call187, 0, !dbg !6409
  br i1 %tobool189, label %cleanup, label %land.lhs.true190, !dbg !6410

land.lhs.true190:                                 ; preds = %land.lhs.true186
  %38 = load i32, i32* %in_p, align 4, !dbg !6411
  call void @llvm.dbg.value(metadata i32 %38, metadata !6312, metadata !DIExpression()), !dbg !6323
  %39 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !6412
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !6315, metadata !DIExpression()), !dbg !6323
  %40 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !6413
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !6318, metadata !DIExpression()), !dbg !6323
  %call191 = call %union.tree_node* @build_range_check(i32 0, %union.tree_node* %type, %union.tree_node* nonnull %lhs.0, i32 %38, %union.tree_node* %39, %union.tree_node* %40) #7, !dbg !6414
  call void @llvm.dbg.value(metadata %union.tree_node* %call191, metadata !6321, metadata !DIExpression()), !dbg !6323
  %cmp192 = icmp eq %union.tree_node* %call191, null, !dbg !6415
  br i1 %cmp192, label %cleanup, label %if.then194, !dbg !6416

if.then194:                                       ; preds = %land.lhs.true190
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6417
  %bf.load196 = load i64, i64* %41, align 8, !dbg !6417
  %bf.cast19810 = and i64 %bf.load196, 65535, !dbg !6420
  %cmp199 = icmp eq i64 %bf.cast19810, 23, !dbg !6420
  br i1 %cmp199, label %if.end202, label %cleanup, !dbg !6421

if.end202:                                        ; preds = %if.then194
  br i1 %1, label %if.then204, label %if.else206, !dbg !6422

if.then204:                                       ; preds = %if.end202
  %call205 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 124, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.215, i64 0, i64 0)) #7, !dbg !6423
  br label %cleanup, !dbg !6423

if.else206:                                       ; preds = %if.end202
  %call207 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 124, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.216, i64 0, i64 0)) #7, !dbg !6425
  br label %cleanup

cleanup:                                          ; preds = %if.then194, %land.lhs.true190, %land.lhs.true186, %land.lhs.true183, %entry, %if.end179, %if.else206, %if.then204, %lor.lhs.false101, %lor.lhs.false136, %if.end59, %lor.lhs.false67, %if.end55
  call void @llvm.dbg.value(metadata i8* %strict_overflow_p, metadata !6322, metadata !DIExpression(DW_OP_deref)), !dbg !6323
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %strict_overflow_p) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #6, !dbg !6426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #6, !dbg !6426
  ret void, !dbg !6426
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @truth_value_p(i32 %code) unnamed_addr #0 !dbg !6427 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6431, metadata !DIExpression()), !dbg !6432
  %idxprom = sext i32 %code to i64, !dbg !6433
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !6433
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6433
  %cmp = icmp eq i32 %0, 5, !dbg !6434
  %cmp1 = icmp eq i32 %code, 93, !dbg !6435
  %or.cond = or i1 %cmp, %cmp1, !dbg !6436
  %cmp3 = icmp eq i32 %code, 91, !dbg !6437
  %or.cond1 = or i1 %or.cond, %cmp3, !dbg !6436
  %1 = or i32 %code, 2, !dbg !6436
  %2 = icmp eq i32 %1, 94, !dbg !6436
  %3 = or i1 %2, %or.cond1, !dbg !6436
  %4 = add i32 %code, -95, !dbg !6436
  %5 = icmp ult i32 %4, 2, !dbg !6436
  %6 = or i1 %5, %3, !dbg !6436
  %conv = zext i1 %6 to i8, !dbg !6438
  ret i8 %conv, !dbg !6439
}

declare dso_local i32 @integer_onep(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_range(%union.tree_node*, i32*, %union.tree_node**, %union.tree_node**, i8*) local_unnamed_addr #2

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @merge_ranges(i32*, %union.tree_node**, %union.tree_node**, i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_range_check(i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @strict_aliasing_warning(%union.tree_node* %otype, %union.tree_node* %type, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !6440 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %otype, metadata !6444, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6445, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6446, metadata !DIExpression()), !dbg !6457
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #7, !dbg !6458
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6446, metadata !DIExpression()), !dbg !6457
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6459
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !6459
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6444, metadata !DIExpression()), !dbg !6457
  %1 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !6460
  %tobool = icmp eq i32 %1, 0, !dbg !6460
  br i1 %tobool, label %return, label %land.lhs.true, !dbg !6462

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6463
  %bf.load = load i64, i64* %2, align 8, !dbg !6463
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !6463
  %cmp = icmp eq i64 %bf.cast3, 10, !dbg !6463
  br i1 %cmp, label %land.lhs.true7, label %lor.lhs.false, !dbg !6463

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp6 = icmp eq i64 %bf.cast3, 12, !dbg !6463
  br i1 %cmp6, label %land.lhs.true7, label %return, !dbg !6464

land.lhs.true7:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6465
  %bf.load9 = load i64, i64* %3, align 8, !dbg !6465
  %bf.cast115 = and i64 %bf.load9, 65535, !dbg !6465
  %cmp12 = icmp eq i64 %bf.cast115, 10, !dbg !6465
  br i1 %cmp12, label %land.lhs.true19, label %lor.lhs.false13, !dbg !6465

lor.lhs.false13:                                  ; preds = %land.lhs.true7
  %cmp18 = icmp eq i64 %bf.cast115, 12, !dbg !6465
  br i1 %cmp18, label %land.lhs.true19, label %return, !dbg !6466

land.lhs.true19:                                  ; preds = %lor.lhs.false13, %land.lhs.true7
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6467
  %4 = bitcast %union.tree_node** %type21 to i64**, !dbg !6467
  %5 = load i64*, i64** %4, align 8, !dbg !6467
  %bf.load23 = load i64, i64* %5, align 8, !dbg !6467
  %bf.cast257 = and i64 %bf.load23, 65535, !dbg !6467
  %cmp26 = icmp eq i64 %bf.cast257, 19, !dbg !6467
  %6 = bitcast i64* %5 to %struct.tree_type*, !dbg !6468
  br i1 %cmp26, label %return, label %lor.lhs.false27, !dbg !6468

lor.lhs.false27:                                  ; preds = %land.lhs.true19
  %bf.cast318 = and i64 %bf.load, 67108864, !dbg !6469
  %tobool32 = icmp eq i64 %bf.cast318, 0, !dbg !6469
  br i1 %tobool32, label %if.end, label %return, !dbg !6470

if.end:                                           ; preds = %lor.lhs.false27
  %7 = load i32, i32* @warn_strict_aliasing, align 4, !dbg !6471
  %cmp33 = icmp sgt i32 %7, 1, !dbg !6472
  br i1 %cmp33, label %land.lhs.true34, label %if.else98, !dbg !6473

land.lhs.true34:                                  ; preds = %if.end
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6474
  %bf.load36 = load i64, i64* %8, align 8, !dbg !6474
  %bf.cast3810 = and i64 %bf.load36, 65535, !dbg !6475
  %cmp39 = icmp eq i64 %bf.cast3810, 121, !dbg !6475
  br i1 %cmp39, label %land.lhs.true40, label %if.else98, !dbg !6476

land.lhs.true40:                                  ; preds = %land.lhs.true34
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6477
  %9 = bitcast %union.tree_node** %operands to i64**, !dbg !6477
  %10 = load i64*, i64** %9, align 8, !dbg !6477
  %bf.load42 = load i64, i64* %10, align 8, !dbg !6477
  %bf.cast44 = and i64 %bf.load42, 65535, !dbg !6477
  %arrayidx45 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast44, !dbg !6477
  %11 = load i32, i32* %arrayidx45, align 4, !dbg !6477
  %cmp46 = icmp eq i32 %11, 3, !dbg !6477
  br i1 %cmp46, label %land.lhs.true40.if.then53_crit_edge, label %lor.lhs.false47, !dbg !6478

land.lhs.true40.if.then53_crit_edge:              ; preds = %land.lhs.true40
  br label %if.then53, !dbg !6478

lor.lhs.false47:                                  ; preds = %land.lhs.true40
  %12 = bitcast i64* %10 to %union.tree_node*, !dbg !6478
  %call51 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %12) #8, !dbg !6479
  %tobool52 = icmp eq i8 %call51, 0, !dbg !6479
  br i1 %tobool52, label %lor.lhs.false47.if.else98_crit_edge, label %lor.lhs.false47.if.then53_crit_edge, !dbg !6480

lor.lhs.false47.if.then53_crit_edge:              ; preds = %lor.lhs.false47
  %.phi.trans.insert = bitcast %union.tree_node** %type21 to %struct.tree_type**, !dbg !6481
  %.pre11 = load %struct.tree_type*, %struct.tree_type** %.phi.trans.insert, align 8, !dbg !6482
  %.pre12 = load i32, i32* @warn_strict_aliasing, align 4, !dbg !6483
  br label %if.then53, !dbg !6480

lor.lhs.false47.if.else98_crit_edge:              ; preds = %lor.lhs.false47
  %.pre = load i32, i32* @warn_strict_aliasing, align 4, !dbg !6484
  br label %if.else98, !dbg !6480

if.then53:                                        ; preds = %land.lhs.true40.if.then53_crit_edge, %lor.lhs.false47.if.then53_crit_edge
  %13 = phi i32 [ %.pre12, %lor.lhs.false47.if.then53_crit_edge ], [ %7, %land.lhs.true40.if.then53_crit_edge ], !dbg !6483
  %14 = phi %struct.tree_type* [ %.pre11, %lor.lhs.false47.if.then53_crit_edge ], [ %6, %land.lhs.true40.if.then53_crit_edge ], !dbg !6482
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %14, i64 0, i32 2, !dbg !6482
  %15 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !6482
  %cmp57 = icmp eq %union.tree_node* %15, null, !dbg !6482
  %cmp60 = icmp eq i32 %13, 2, !dbg !6485
  %or.cond = and i1 %cmp57, %cmp60, !dbg !6486
  br i1 %or.cond, label %if.then62, label %if.else, !dbg !6486

if.then62:                                        ; preds = %if.then53
  %call63 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 184, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.217, i64 0, i64 0)) #7, !dbg !6487
  br label %return, !dbg !6489

if.else:                                          ; preds = %if.then53
  %16 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !6490
  %17 = load %struct.tree_common*, %struct.tree_common** %16, align 8, !dbg !6490
  %type68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i64 0, i32 2, !dbg !6490
  %18 = load %union.tree_node*, %union.tree_node** %type68, align 8, !dbg !6490
  %call69 = tail call i32 @get_alias_set(%union.tree_node* %18) #7, !dbg !6491
  call void @llvm.dbg.value(metadata i32 %call69, metadata !6447, metadata !DIExpression()), !dbg !6492
  %19 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !6493
  %call72 = tail call i32 @get_alias_set(%union.tree_node* %19) #7, !dbg !6494
  call void @llvm.dbg.value(metadata i32 %call72, metadata !6452, metadata !DIExpression()), !dbg !6492
  %cmp73 = icmp ne i32 %call69, %call72, !dbg !6495
  %cmp76 = icmp ne i32 %call72, 0, !dbg !6497
  %or.cond1 = and i1 %cmp73, %cmp76, !dbg !6498
  br i1 %or.cond1, label %land.lhs.true78, label %if.else86, !dbg !6498

land.lhs.true78:                                  ; preds = %if.else
  %cmp79 = icmp eq i32 %call69, 0, !dbg !6499
  br i1 %cmp79, label %if.then84, label %lor.lhs.false81, !dbg !6500

lor.lhs.false81:                                  ; preds = %land.lhs.true78
  %call82 = tail call i32 @alias_sets_conflict_p(i32 %call69, i32 %call72) #7, !dbg !6501
  %tobool83 = icmp eq i32 %call82, 0, !dbg !6501
  br i1 %tobool83, label %if.then84, label %if.else86, !dbg !6502

if.then84:                                        ; preds = %lor.lhs.false81, %land.lhs.true78
  %call85 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 184, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.218, i64 0, i64 0)) #7, !dbg !6503
  br label %cleanup, !dbg !6505

if.else86:                                        ; preds = %lor.lhs.false81, %if.else
  %20 = load i32, i32* @warn_strict_aliasing, align 4, !dbg !6506
  %cmp87 = icmp eq i32 %20, 2, !dbg !6508
  br i1 %cmp87, label %land.lhs.true89, label %cleanup, !dbg !6509

land.lhs.true89:                                  ; preds = %if.else86
  %call90 = tail call i32 @alias_sets_must_conflict_p(i32 %call69, i32 %call72) #7, !dbg !6510
  %tobool91 = icmp eq i32 %call90, 0, !dbg !6510
  br i1 %tobool91, label %if.then92, label %cleanup, !dbg !6511

if.then92:                                        ; preds = %land.lhs.true89
  %call93 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 184, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6512
  br label %cleanup, !dbg !6514

cleanup:                                          ; preds = %land.lhs.true89, %if.else86, %if.then92, %if.then84
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then84 ], [ false, %if.then92 ], [ true, %if.else86 ], [ true, %land.lhs.true89 ]
  br i1 %cleanup.dest.slot.0, label %if.end134, label %return

if.else98:                                        ; preds = %lor.lhs.false47.if.else98_crit_edge, %land.lhs.true34, %if.end
  %21 = phi i32 [ %.pre, %lor.lhs.false47.if.else98_crit_edge ], [ %7, %land.lhs.true34 ], [ %7, %if.end ], !dbg !6484
  %cmp99 = icmp eq i32 %21, 1, !dbg !6515
  br i1 %cmp99, label %land.lhs.true101, label %if.end134, !dbg !6516

land.lhs.true101:                                 ; preds = %if.else98
  %type103 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6517
  %22 = bitcast %union.tree_node** %type103 to i64**, !dbg !6517
  %23 = load i64*, i64** %22, align 8, !dbg !6517
  %bf.load105 = load i64, i64* %23, align 8, !dbg !6517
  %bf.cast1079 = and i64 %bf.load105, 65535, !dbg !6517
  %cmp108 = icmp eq i64 %bf.cast1079, 19, !dbg !6517
  br i1 %cmp108, label %if.end134, label %if.then110, !dbg !6518

if.then110:                                       ; preds = %land.lhs.true101
  %24 = bitcast i64* %23 to %union.tree_node*, !dbg !6518
  %call114 = tail call i32 @get_alias_set(%union.tree_node* %24) #7, !dbg !6519
  call void @llvm.dbg.value(metadata i32 %call114, metadata !6453, metadata !DIExpression()), !dbg !6520
  %25 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !6521
  %call118 = tail call i32 @get_alias_set(%union.tree_node* %25) #7, !dbg !6522
  call void @llvm.dbg.value(metadata i32 %call118, metadata !6456, metadata !DIExpression()), !dbg !6520
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6523
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !6523
  %cmp121 = icmp eq %union.tree_node* %27, null, !dbg !6523
  br i1 %cmp121, label %if.then126, label %lor.lhs.false123, !dbg !6525

lor.lhs.false123:                                 ; preds = %if.then110
  %call124 = tail call i32 @alias_sets_must_conflict_p(i32 %call114, i32 %call118) #7, !dbg !6526
  %tobool125 = icmp eq i32 %call124, 0, !dbg !6526
  br i1 %tobool125, label %if.then126, label %cleanup129, !dbg !6527

if.then126:                                       ; preds = %lor.lhs.false123, %if.then110
  %call127 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 184, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6528
  br label %cleanup129, !dbg !6530

cleanup129:                                       ; preds = %lor.lhs.false123, %if.then126
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then126 ], [ true, %lor.lhs.false123 ]
  br i1 %cleanup.dest.slot.1, label %if.end134, label %return

if.end134:                                        ; preds = %if.else98, %land.lhs.true101, %cleanup129, %cleanup
  br label %return, !dbg !6531

return:                                           ; preds = %lor.lhs.false27, %entry, %cleanup129, %cleanup, %lor.lhs.false, %lor.lhs.false13, %land.lhs.true19, %if.end134, %if.then62
  %retval.2 = phi i8 [ 1, %cleanup ], [ 0, %if.end134 ], [ 1, %if.then62 ], [ 1, %cleanup129 ], [ 0, %lor.lhs.false27 ], [ 0, %land.lhs.true19 ], [ 0, %lor.lhs.false13 ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  ret i8 %retval.2, !dbg !6532
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !6533 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6537, metadata !DIExpression()), !dbg !6538
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6539
  %bf.load = load i64, i64* %0, align 8, !dbg !6539
  %1 = trunc i64 %bf.load to i16, !dbg !6539
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !6540

sw.default:                                       ; preds = %entry
  br label %return, !dbg !6541

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !6543
  ret i8 %retval.0, !dbg !6544
}

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @get_alias_set(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @alias_sets_conflict_p(i32, i32) local_unnamed_addr #2

declare dso_local i32 @alias_sets_must_conflict_p(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @check_main_parameter_types(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !6545 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6547, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata i32 0, metadata !6549, metadata !DIExpression()), !dbg !6554
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6555
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !6555
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !6555
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !6555
  br label %for.cond, !dbg !6556

for.cond:                                         ; preds = %for.inc, %entry
  %argct.0 = phi i32 [ 0, %entry ], [ %argct.1, %for.inc ], !dbg !6557
  %args.0.in = phi %union.tree_node** [ %values, %entry ], [ %chain, %for.inc ]
  %args.0 = load %union.tree_node*, %union.tree_node** %args.0.in, align 8, !dbg !6558
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0, metadata !6548, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata i32 %argct.0, metadata !6549, metadata !DIExpression()), !dbg !6554
  %tobool = icmp eq %union.tree_node* %args.0, null, !dbg !6559
  br i1 %tobool, label %for.end, label %cond.true, !dbg !6559

cond.true:                                        ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6560
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !6560
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6550, metadata !DIExpression()), !dbg !6561
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6562
  %cmp = icmp eq %union.tree_node* %3, %4, !dbg !6564
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6565
  %cmp4 = icmp eq %union.tree_node* %3, %5, !dbg !6566
  %or.cond = or i1 %cmp, %cmp4, !dbg !6567
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !6567

if.end:                                           ; preds = %cond.true
  %inc = add nsw i32 %argct.0, 1, !dbg !6568
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6549, metadata !DIExpression()), !dbg !6554
  switch i32 %argct.0, label %cleanup [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb30
  ], !dbg !6569

sw.bb:                                            ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6570
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !6570
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !6573
  %cmp6 = icmp eq %union.tree_node* %7, %8, !dbg !6574
  br i1 %cmp6, label %cleanup, label %if.then7, !dbg !6575

if.then7:                                         ; preds = %sw.bb
  %9 = load i32, i32* @input_location, align 4, !dbg !6576
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %9, i32 126, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.220, i64 0, i64 0), %union.tree_node* %decl) #7, !dbg !6577
  br label %cleanup, !dbg !6577

sw.bb9:                                           ; preds = %if.end
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6578
  %bf.load = load i64, i64* %10, align 8, !dbg !6578
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !6580
  %cmp10 = icmp eq i64 %bf.cast4, 10, !dbg !6580
  br i1 %cmp10, label %lor.lhs.false11, label %if.then27, !dbg !6581

lor.lhs.false11:                                  ; preds = %sw.bb9
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6582
  %11 = bitcast %union.tree_node** %type13 to i64**, !dbg !6582
  %12 = load i64*, i64** %11, align 8, !dbg !6582
  %bf.load15 = load i64, i64* %12, align 8, !dbg !6582
  %bf.cast175 = and i64 %bf.load15, 65535, !dbg !6583
  %cmp18 = icmp eq i64 %bf.cast175, 10, !dbg !6583
  br i1 %cmp18, label %lor.lhs.false19, label %if.then27, !dbg !6584

lor.lhs.false19:                                  ; preds = %lor.lhs.false11
  %type23 = getelementptr inbounds i64, i64* %12, i64 2, !dbg !6585
  %13 = bitcast i64* %type23 to %struct.tree_type**, !dbg !6585
  %14 = load %struct.tree_type*, %struct.tree_type** %13, align 8, !dbg !6585
  %main_variant25 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %14, i64 0, i32 16, !dbg !6585
  %15 = load %union.tree_node*, %union.tree_node** %main_variant25, align 8, !dbg !6585
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !6586
  %cmp26 = icmp eq %union.tree_node* %15, %16, !dbg !6587
  br i1 %cmp26, label %cleanup, label %if.then27, !dbg !6588

if.then27:                                        ; preds = %lor.lhs.false19, %lor.lhs.false11, %sw.bb9
  %17 = load i32, i32* @input_location, align 4, !dbg !6589
  %call28 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %17, i32 126, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.221, i64 0, i64 0), %union.tree_node* %decl) #7, !dbg !6590
  br label %cleanup, !dbg !6590

sw.bb30:                                          ; preds = %if.end
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6591
  %bf.load32 = load i64, i64* %18, align 8, !dbg !6591
  %bf.cast342 = and i64 %bf.load32, 65535, !dbg !6593
  %cmp35 = icmp eq i64 %bf.cast342, 10, !dbg !6593
  br i1 %cmp35, label %lor.lhs.false36, label %if.then52, !dbg !6594

lor.lhs.false36:                                  ; preds = %sw.bb30
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6595
  %19 = bitcast %union.tree_node** %type38 to i64**, !dbg !6595
  %20 = load i64*, i64** %19, align 8, !dbg !6595
  %bf.load40 = load i64, i64* %20, align 8, !dbg !6595
  %bf.cast423 = and i64 %bf.load40, 65535, !dbg !6596
  %cmp43 = icmp eq i64 %bf.cast423, 10, !dbg !6596
  br i1 %cmp43, label %lor.lhs.false44, label %if.then52, !dbg !6597

lor.lhs.false44:                                  ; preds = %lor.lhs.false36
  %type48 = getelementptr inbounds i64, i64* %20, i64 2, !dbg !6598
  %21 = bitcast i64* %type48 to %struct.tree_type**, !dbg !6598
  %22 = load %struct.tree_type*, %struct.tree_type** %21, align 8, !dbg !6598
  %main_variant50 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 16, !dbg !6598
  %23 = load %union.tree_node*, %union.tree_node** %main_variant50, align 8, !dbg !6598
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !6599
  %cmp51 = icmp eq %union.tree_node* %23, %24, !dbg !6600
  br i1 %cmp51, label %cleanup, label %if.then52, !dbg !6601

if.then52:                                        ; preds = %lor.lhs.false44, %lor.lhs.false36, %sw.bb30
  %25 = load i32, i32* @input_location, align 4, !dbg !6602
  %call53 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %25, i32 126, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.222, i64 0, i64 0), %union.tree_node* %decl) #7, !dbg !6603
  br label %cleanup, !dbg !6603

cleanup:                                          ; preds = %sw.bb, %lor.lhs.false19, %lor.lhs.false44, %if.end, %if.then7, %if.then27, %if.then52, %cond.true
  %argct.1 = phi i32 [ %argct.0, %cond.true ], [ %inc, %lor.lhs.false44 ], [ %inc, %if.then52 ], [ %inc, %lor.lhs.false19 ], [ %inc, %if.then27 ], [ %inc, %sw.bb ], [ %inc, %if.then7 ], [ %inc, %if.end ], !dbg !6554
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.true ], [ true, %lor.lhs.false44 ], [ true, %if.then52 ], [ true, %lor.lhs.false19 ], [ true, %if.then27 ], [ true, %sw.bb ], [ true, %if.then7 ], [ true, %if.end ]
  call void @llvm.dbg.value(metadata i32 %argct.1, metadata !6549, metadata !DIExpression()), !dbg !6554
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6604
  br label %for.cond, !dbg !6605, !llvm.loop !6606

for.end:                                          ; preds = %for.cond, %cleanup
  %argct.2 = phi i32 [ %argct.1, %cleanup ], [ %argct.0, %for.cond ], !dbg !6557
  call void @llvm.dbg.value(metadata i32 %argct.2, metadata !6549, metadata !DIExpression()), !dbg !6554
  %cmp56 = icmp sgt i32 %argct.2, 0, !dbg !6608
  br i1 %cmp56, label %land.lhs.true, label %if.end62, !dbg !6610

land.lhs.true:                                    ; preds = %for.end
  %cmp57 = icmp eq i32 %argct.2, 1, !dbg !6611
  %cmp59 = icmp sgt i32 %argct.2, 3, !dbg !6612
  %or.cond1 = or i1 %cmp57, %cmp59, !dbg !6613
  br i1 %or.cond1, label %if.then60, label %if.end62, !dbg !6613

if.then60:                                        ; preds = %land.lhs.true
  %26 = load i32, i32* @input_location, align 4, !dbg !6614
  %call61 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %26, i32 126, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.223, i64 0, i64 0), %union.tree_node* %decl) #7, !dbg !6615
  br label %if.end62, !dbg !6615

if.end62:                                         ; preds = %land.lhs.true, %if.then60, %for.end
  ret void, !dbg !6616
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vector_targets_convertible_p(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !6617 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !6621, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !6622, metadata !DIExpression()), !dbg !6623
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6624
  %bf.load = load i64, i64* %0, align 8, !dbg !6624
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6626
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !6626
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6627

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6628
  %bf.load2 = load i64, i64* %1, align 8, !dbg !6628
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !6629
  %cmp5 = icmp eq i64 %bf.cast42, 14, !dbg !6629
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !6630

land.lhs.true6:                                   ; preds = %land.lhs.true
  %bf.cast103 = and i64 %bf.load, 4294967296, !dbg !6631
  %tobool = icmp eq i64 %bf.cast103, 0, !dbg !6631
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true17, !dbg !6632

lor.lhs.false:                                    ; preds = %land.lhs.true6
  %bf.cast154 = and i64 %bf.load2, 4294967296, !dbg !6633
  %tobool16 = icmp eq i64 %bf.cast154, 0, !dbg !6633
  br i1 %tobool16, label %if.end, label %land.lhs.true17, !dbg !6634

land.lhs.true17:                                  ; preds = %lor.lhs.false, %land.lhs.true6
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6635
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !6635
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6636
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !6636
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %3, %union.tree_node* %5) #7, !dbg !6637
  %tobool20 = icmp eq i32 %call, 0, !dbg !6637
  br i1 %tobool20, label %if.end, label %return, !dbg !6638

if.end:                                           ; preds = %land.lhs.true17, %lor.lhs.false, %land.lhs.true, %entry
  br label %return, !dbg !6639

return:                                           ; preds = %land.lhs.true17, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %land.lhs.true17 ], !dbg !6623
  ret i8 %retval.0, !dbg !6640
}

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vector_types_convertible_p(%union.tree_node* %t1, %union.tree_node* %t2, i8 zeroext %emit_lax_note) local_unnamed_addr #5 !dbg !2960 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !2964, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !2965, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8 %emit_lax_note, metadata !2966, metadata !DIExpression()), !dbg !6641
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6642
  %bf.load = load i64, i64* %0, align 8, !dbg !6642
  %bf.cast2 = and i64 %bf.load, 4294967296, !dbg !6642
  %tobool = icmp eq i64 %bf.cast2, 0, !dbg !6642
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !6644

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6645
  %bf.load2 = load i64, i64* %1, align 8, !dbg !6645
  %bf.cast53 = and i64 %bf.load2, 4294967296, !dbg !6645
  %tobool6 = icmp eq i64 %bf.cast53, 0, !dbg !6645
  br i1 %tobool6, label %if.end, label %land.lhs.true, !dbg !6646

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6647
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !6647
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6648
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !6648
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %3, %union.tree_node* %5) #7, !dbg !6649
  %tobool9 = icmp eq i32 %call, 0, !dbg !6649
  br i1 %tobool9, label %if.end, label %cleanup, !dbg !6650

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6651
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !6651
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6652
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !6652
  %call14 = tail call i32 @tree_int_cst_equal(%union.tree_node* %7, %union.tree_node* %9) #7, !dbg !6653
  %tobool15 = icmp eq i32 %call14, 0, !dbg !6653
  br i1 %tobool15, label %land.end, label %land.lhs.true16, !dbg !6654

land.lhs.true16:                                  ; preds = %if.end
  %type17 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6655
  %10 = bitcast %union.tree_node** %type17 to i64**, !dbg !6655
  %11 = load i64*, i64** %10, align 8, !dbg !6655
  %bf.load19 = load i64, i64* %11, align 8, !dbg !6655
  %bf.cast214 = and i64 %bf.load19, 65535, !dbg !6656
  %cmp = icmp eq i64 %bf.cast214, 9, !dbg !6656
  br i1 %cmp, label %lor.lhs.false22, label %land.rhs, !dbg !6657

lor.lhs.false22:                                  ; preds = %land.lhs.true16
  %type23 = bitcast %union.tree_node* %t1 to %struct.tree_type*, !dbg !6658
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i64 0, i32 6, !dbg !6658
  %bf.load24 = load i32, i32* %precision, align 4, !dbg !6658
  %type26 = bitcast %union.tree_node* %t2 to %struct.tree_type*, !dbg !6659
  %precision27 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type26, i64 0, i32 6, !dbg !6659
  %bf.load28 = load i32, i32* %precision27, align 4, !dbg !6659
  %12 = xor i32 %bf.load24, %bf.load28, !dbg !6660
  %13 = and i32 %12, 1023, !dbg !6660
  %cmp30 = icmp eq i32 %13, 0, !dbg !6660
  br i1 %cmp30, label %land.rhs, label %land.end, !dbg !6661

land.rhs:                                         ; preds = %land.lhs.true16, %lor.lhs.false22
  %cmp37 = icmp eq i64 %bf.cast214, 6, !dbg !6662
  br i1 %cmp37, label %lor.end, label %lor.lhs.false38, !dbg !6662

lor.lhs.false38:                                  ; preds = %land.rhs
  %cmp45 = icmp eq i64 %bf.cast214, 7, !dbg !6662
  br i1 %cmp45, label %lor.end, label %lor.rhs, !dbg !6662

lor.rhs:                                          ; preds = %lor.lhs.false38
  %cmp52 = icmp eq i64 %bf.cast214, 8, !dbg !6662
  %phitmp8 = zext i1 %cmp52 to i32, !dbg !6662
  br label %lor.end, !dbg !6662

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false38, %land.rhs
  %14 = phi i32 [ 1, %lor.lhs.false38 ], [ 1, %land.rhs ], [ %phitmp8, %lor.rhs ]
  %type54 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6663
  %15 = bitcast %union.tree_node** %type54 to i64**, !dbg !6663
  %16 = load i64*, i64** %15, align 8, !dbg !6663
  %bf.load56 = load i64, i64* %16, align 8, !dbg !6663
  %bf.cast589 = and i64 %bf.load56, 65535, !dbg !6663
  %cmp59 = icmp eq i64 %bf.cast589, 6, !dbg !6663
  br i1 %cmp59, label %lor.end76, label %lor.lhs.false60, !dbg !6663

lor.lhs.false60:                                  ; preds = %lor.end
  %cmp67 = icmp eq i64 %bf.cast589, 7, !dbg !6663
  br i1 %cmp67, label %lor.end76, label %lor.rhs68, !dbg !6663

lor.rhs68:                                        ; preds = %lor.lhs.false60
  %cmp75 = icmp eq i64 %bf.cast589, 8, !dbg !6663
  %phitmp12 = zext i1 %cmp75 to i32, !dbg !6663
  br label %lor.end76, !dbg !6663

lor.end76:                                        ; preds = %lor.rhs68, %lor.lhs.false60, %lor.end
  %17 = phi i32 [ 1, %lor.lhs.false60 ], [ 1, %lor.end ], [ %phitmp12, %lor.rhs68 ]
  %cmp78 = icmp eq i32 %14, %17, !dbg !6664
  %phitmp = zext i1 %cmp78 to i8
  br label %land.end

land.end:                                         ; preds = %if.end, %lor.end76, %lor.lhs.false22
  %18 = phi i8 [ 0, %lor.lhs.false22 ], [ 0, %if.end ], [ %phitmp, %lor.end76 ]
  call void @llvm.dbg.value(metadata i8 %18, metadata !2967, metadata !DIExpression()), !dbg !6641
  %tobool79 = icmp eq i8 %18, 0, !dbg !6665
  %19 = load i32, i32* @flag_lax_vector_conversions, align 4, !dbg !6667
  %tobool81 = icmp ne i32 %19, 0, !dbg !6667
  %or.cond = or i1 %tobool79, %tobool81, !dbg !6668
  br i1 %or.cond, label %cleanup, label %if.end83, !dbg !6668

if.end83:                                         ; preds = %land.end
  %type84 = bitcast %union.tree_node* %t1 to %struct.tree_type*, !dbg !6669
  %precision85 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type84, i64 0, i32 6, !dbg !6669
  %bf.load86 = load i32, i32* %precision85, align 4, !dbg !6669
  %bf.clear87 = and i32 %bf.load86, 1023, !dbg !6669
  %sh_prom = zext i32 %bf.clear87 to i64, !dbg !6669
  %shl = shl i64 1, %sh_prom, !dbg !6669
  %type88 = bitcast %union.tree_node* %t2 to %struct.tree_type*, !dbg !6671
  %precision89 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type88, i64 0, i32 6, !dbg !6671
  %bf.load90 = load i32, i32* %precision89, align 4, !dbg !6671
  %bf.clear91 = and i32 %bf.load90, 1023, !dbg !6671
  %sh_prom92 = zext i32 %bf.clear91 to i64, !dbg !6671
  %shl93 = shl i64 1, %sh_prom92, !dbg !6671
  %cmp94 = icmp eq i64 %shl, %shl93, !dbg !6672
  br i1 %cmp94, label %land.lhs.true96, label %if.end104, !dbg !6673

land.lhs.true96:                                  ; preds = %if.end83
  %20 = load i32 (%union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 24), align 8, !dbg !6674
  %type98 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6675
  %21 = load %union.tree_node*, %union.tree_node** %type98, align 8, !dbg !6675
  %type100 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6676
  %22 = load %union.tree_node*, %union.tree_node** %type100, align 8, !dbg !6676
  %call101 = tail call i32 %20(%union.tree_node* %21, %union.tree_node* %22) #7, !dbg !6677
  %tobool102 = icmp eq i32 %call101, 0, !dbg !6677
  br i1 %tobool102, label %if.end104, label %cleanup, !dbg !6678

if.end104:                                        ; preds = %land.lhs.true96, %if.end83
  %tobool106 = icmp eq i8 %emit_lax_note, 0, !dbg !6679
  %.b = load i1, i1* @vector_types_convertible_p.emitted_lax_note, align 1, !dbg !6681
  %or.cond1 = or i1 %tobool106, %.b, !dbg !6682
  br i1 %or.cond1, label %cleanup, label %if.then109, !dbg !6682

if.then109:                                       ; preds = %if.end104
  store i1 true, i1* @vector_types_convertible_p.emitted_lax_note, align 1, !dbg !6683
  %23 = load i32, i32* @input_location, align 4, !dbg !6685
  tail call void (i32, i8*, ...) @inform(i32 %23, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.224, i64 0, i64 0)) #7, !dbg !6686
  br label %cleanup, !dbg !6687

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true96, %if.then109, %if.end104, %land.end
  %retval.0 = phi i8 [ 1, %land.lhs.true ], [ %18, %land.end ], [ 1, %land.lhs.true96 ], [ 0, %if.end104 ], [ 0, %if.then109 ], !dbg !6641
  ret i8 %retval.0, !dbg !6688
}

declare dso_local void @inform(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @shorten_binary_op(%union.tree_node* %result_type, %union.tree_node* %op0, %union.tree_node* %op1, i8 zeroext %bitwise) local_unnamed_addr #5 !dbg !6689 {
entry:
  %unsigned0 = alloca i32, align 4
  %unsigned1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type, metadata !6693, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !6694, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !6695, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i8 %bitwise, metadata !6696, metadata !DIExpression()), !dbg !6703
  %0 = bitcast i32* %unsigned0 to i8*, !dbg !6704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !6704
  %1 = bitcast i32* %unsigned1 to i8*, !dbg !6704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #6, !dbg !6704
  %call = tail call %union.tree_node* @convert(%union.tree_node* %result_type, %union.tree_node* %op0) #7, !dbg !6705
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6694, metadata !DIExpression()), !dbg !6703
  %call1 = tail call %union.tree_node* @convert(%union.tree_node* %result_type, %union.tree_node* %op1) #7, !dbg !6706
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6695, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32* %unsigned0, metadata !6697, metadata !DIExpression(DW_OP_deref)), !dbg !6703
  %call2 = call %union.tree_node* @get_narrower(%union.tree_node* %call, i32* nonnull %unsigned0) #7, !dbg !6707
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6699, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32* %unsigned1, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6703
  %call3 = call %union.tree_node* @get_narrower(%union.tree_node* %call1, i32* nonnull %unsigned1) #7, !dbg !6708
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !6700, metadata !DIExpression()), !dbg !6703
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %result_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6709
  %bf.load = load i64, i64* %2, align 8, !dbg !6709
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !6709
  %3 = trunc i64 %bf.lshr to i32, !dbg !6709
  %bf.cast = and i32 %3, 1, !dbg !6709
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6701, metadata !DIExpression()), !dbg !6703
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6710
  %4 = bitcast %union.tree_node** %type4 to %struct.tree_type**, !dbg !6710
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !6710
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !6710
  %bf.load6 = load i32, i32* %precision, align 4, !dbg !6710
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6712
  %6 = bitcast %union.tree_node** %type9 to %struct.tree_type**, !dbg !6712
  %7 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !6712
  %precision11 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 6, !dbg !6712
  %bf.load12 = load i32, i32* %precision11, align 4, !dbg !6712
  %8 = xor i32 %bf.load6, %bf.load12, !dbg !6713
  %9 = and i32 %8, 1023, !dbg !6713
  %cmp = icmp eq i32 %9, 0, !dbg !6713
  %10 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 0, i32 0, i32 0, !dbg !6714
  %11 = bitcast %struct.tree_type* %7 to %union.tree_node*, !dbg !6714
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6714

land.lhs.true:                                    ; preds = %entry
  %12 = bitcast %struct.tree_type* %5 to %union.tree_node*, !dbg !6714
  %cmp16 = icmp eq %union.tree_node* %12, %result_type, !dbg !6715
  br i1 %cmp16, label %if.end, label %if.then, !dbg !6716

if.then:                                          ; preds = %land.lhs.true
  %bf.load20 = load i64, i64* %10, align 8, !dbg !6717
  %bf.lshr21 = lshr i64 %bf.load20, 21, !dbg !6717
  %13 = trunc i64 %bf.lshr21 to i32, !dbg !6717
  %bf.cast23 = and i32 %13, 1, !dbg !6717
  call void @llvm.dbg.value(metadata i32 %bf.cast23, metadata !6697, metadata !DIExpression()), !dbg !6703
  store i32 %bf.cast23, i32* %unsigned0, align 4, !dbg !6718
  br label %if.end, !dbg !6719

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  %type25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6720
  %14 = bitcast %union.tree_node** %type25 to %struct.tree_type**, !dbg !6720
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !6720
  %precision27 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 6, !dbg !6720
  %bf.load28 = load i32, i32* %precision27, align 4, !dbg !6720
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6722
  %16 = bitcast %union.tree_node** %type31 to %struct.tree_type**, !dbg !6722
  %17 = load %struct.tree_type*, %struct.tree_type** %16, align 8, !dbg !6722
  %precision33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %17, i64 0, i32 6, !dbg !6722
  %bf.load34 = load i32, i32* %precision33, align 4, !dbg !6722
  %18 = xor i32 %bf.load28, %bf.load34, !dbg !6723
  %19 = and i32 %18, 1023, !dbg !6723
  %cmp36 = icmp eq i32 %19, 0, !dbg !6723
  %20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 0, i32 0, i32 0, !dbg !6724
  %21 = bitcast %struct.tree_type* %17 to %union.tree_node*, !dbg !6724
  br i1 %cmp36, label %land.lhs.true37, label %if.end49, !dbg !6724

land.lhs.true37:                                  ; preds = %if.end
  %22 = bitcast %struct.tree_type* %15 to %union.tree_node*, !dbg !6724
  %cmp40 = icmp eq %union.tree_node* %22, %result_type, !dbg !6725
  br i1 %cmp40, label %if.end49, label %if.then41, !dbg !6726

if.then41:                                        ; preds = %land.lhs.true37
  %bf.load45 = load i64, i64* %20, align 8, !dbg !6727
  %bf.lshr46 = lshr i64 %bf.load45, 21, !dbg !6727
  %23 = trunc i64 %bf.lshr46 to i32, !dbg !6727
  %bf.cast48 = and i32 %23, 1, !dbg !6727
  call void @llvm.dbg.value(metadata i32 %bf.cast48, metadata !6698, metadata !DIExpression()), !dbg !6703
  store i32 %bf.cast48, i32* %unsigned1, align 4, !dbg !6728
  br label %if.end49, !dbg !6729

if.end49:                                         ; preds = %land.lhs.true37, %if.then41, %if.end
  %tobool = icmp eq i8 %bitwise, 0, !dbg !6730
  %24 = load i32, i32* %unsigned0, align 4, !dbg !6732
  call void @llvm.dbg.value(metadata i32 %24, metadata !6697, metadata !DIExpression()), !dbg !6703
  %spec.select = select i1 %tobool, i32 %bf.cast, i32 %24, !dbg !6733
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6701, metadata !DIExpression()), !dbg !6703
  %bf.clear57 = and i32 %bf.load12, 1023, !dbg !6734
  %type58 = bitcast %union.tree_node* %result_type to %struct.tree_type*, !dbg !6736
  %precision59 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type58, i64 0, i32 6, !dbg !6736
  %bf.load60 = load i32, i32* %precision59, align 4, !dbg !6736
  %bf.clear61 = and i32 %bf.load60, 1023, !dbg !6736
  %cmp62 = icmp ult i32 %bf.clear57, %bf.clear61, !dbg !6737
  br i1 %cmp62, label %land.lhs.true63, label %if.else, !dbg !6738

land.lhs.true63:                                  ; preds = %if.end49
  %25 = xor i32 %bf.load34, %bf.load12, !dbg !6739
  %26 = and i32 %25, 1023, !dbg !6739
  %cmp76 = icmp eq i32 %26, 0, !dbg !6739
  br i1 %cmp76, label %land.lhs.true77, label %if.else, !dbg !6740

land.lhs.true77:                                  ; preds = %land.lhs.true63
  call void @llvm.dbg.value(metadata i32 %24, metadata !6697, metadata !DIExpression()), !dbg !6703
  %27 = load i32, i32* %unsigned1, align 4, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %27, metadata !6698, metadata !DIExpression()), !dbg !6703
  %cmp78 = icmp eq i32 %24, %27, !dbg !6742
  br i1 %cmp78, label %land.lhs.true79, label %if.else, !dbg !6743

land.lhs.true79:                                  ; preds = %land.lhs.true77
  call void @llvm.dbg.value(metadata i32 %24, metadata !6697, metadata !DIExpression()), !dbg !6703
  %tobool80 = icmp eq i32 %24, 0, !dbg !6744
  %tobool81 = icmp ne i32 %spec.select, 0, !dbg !6745
  %or.cond = and i1 %tobool80, %tobool81, !dbg !6746
  br i1 %or.cond, label %if.else, label %if.then82, !dbg !6746

if.then82:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.value(metadata i32 %24, metadata !6697, metadata !DIExpression()), !dbg !6703
  %call87 = call %union.tree_node* @common_type(%union.tree_node* %11, %union.tree_node* %21) #7, !dbg !6747
  %call88 = call %union.tree_node* @c_common_signed_or_unsigned_type(i32 %24, %union.tree_node* %call87) #8, !dbg !6748
  br label %cleanup, !dbg !6749

if.else:                                          ; preds = %land.lhs.true79, %land.lhs.true77, %land.lhs.true63, %if.end49
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6750
  %bf.load90 = load i64, i64* %28, align 8, !dbg !6750
  %bf.cast923 = and i64 %bf.load90, 65535, !dbg !6752
  %cmp93 = icmp eq i64 %bf.cast923, 23, !dbg !6752
  br i1 %cmp93, label %land.lhs.true94, label %if.else131, !dbg !6753

land.lhs.true94:                                  ; preds = %if.else
  %29 = load i32, i32* %unsigned1, align 4, !dbg !6754
  call void @llvm.dbg.value(metadata i32 %29, metadata !6698, metadata !DIExpression()), !dbg !6703
  %tobool95 = icmp eq i32 %29, 0, !dbg !6754
  %tobool97 = icmp ne i32 %spec.select, 0, !dbg !6755
  %or.cond1 = and i1 %tobool95, %tobool97, !dbg !6756
  br i1 %or.cond1, label %if.else131, label %land.lhs.true98, !dbg !6756

land.lhs.true98:                                  ; preds = %land.lhs.true94
  %bf.clear104 = and i32 %bf.load34, 1023, !dbg !6757
  %cmp109 = icmp ult i32 %bf.clear104, %bf.clear61, !dbg !6758
  br i1 %cmp109, label %land.lhs.true110, label %if.else131, !dbg !6759

land.lhs.true110:                                 ; preds = %land.lhs.true98
  call void @llvm.dbg.value(metadata i32 %29, metadata !6698, metadata !DIExpression()), !dbg !6703
  %call113 = call %union.tree_node* @c_common_signed_or_unsigned_type(i32 %29, %union.tree_node* %21) #8, !dbg !6760
  call void @llvm.dbg.value(metadata %union.tree_node* %call113, metadata !6702, metadata !DIExpression()), !dbg !6703
  %tobool114 = icmp eq %union.tree_node* %call113, null, !dbg !6761
  br i1 %tobool114, label %if.else131, label %land.lhs.true115, !dbg !6762

land.lhs.true115:                                 ; preds = %land.lhs.true110
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %call113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6763
  %bf.load117 = load i64, i64* %30, align 8, !dbg !6763
  %bf.cast1197 = and i64 %bf.load117, 65535, !dbg !6763
  %cmp120 = icmp eq i64 %bf.cast1197, 10, !dbg !6763
  br i1 %cmp120, label %if.else131, label %lor.lhs.false121, !dbg !6763

lor.lhs.false121:                                 ; preds = %land.lhs.true115
  %cmp126 = icmp eq i64 %bf.cast1197, 12, !dbg !6763
  br i1 %cmp126, label %if.else131, label %land.lhs.true127, !dbg !6764

land.lhs.true127:                                 ; preds = %lor.lhs.false121
  %call128 = call i32 @int_fits_type_p(%union.tree_node* %call2, %union.tree_node* nonnull %call113) #7, !dbg !6765
  %tobool129 = icmp eq i32 %call128, 0, !dbg !6765
  br i1 %tobool129, label %if.else131, label %cleanup, !dbg !6766

if.else131:                                       ; preds = %land.lhs.true127, %land.lhs.true110, %land.lhs.true94, %lor.lhs.false121, %land.lhs.true115, %land.lhs.true98, %if.else
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6767
  %bf.load133 = load i64, i64* %31, align 8, !dbg !6767
  %bf.cast1354 = and i64 %bf.load133, 65535, !dbg !6769
  %cmp136 = icmp eq i64 %bf.cast1354, 23, !dbg !6769
  br i1 %cmp136, label %land.lhs.true137, label %if.end176, !dbg !6770

land.lhs.true137:                                 ; preds = %if.else131
  %32 = load i32, i32* %unsigned0, align 4, !dbg !6771
  call void @llvm.dbg.value(metadata i32 %32, metadata !6697, metadata !DIExpression()), !dbg !6703
  %tobool138 = icmp eq i32 %32, 0, !dbg !6771
  %tobool140 = icmp ne i32 %spec.select, 0, !dbg !6772
  %or.cond2 = and i1 %tobool138, %tobool140, !dbg !6773
  br i1 %or.cond2, label %if.end176, label %land.lhs.true141, !dbg !6773

land.lhs.true141:                                 ; preds = %land.lhs.true137
  %33 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !6774
  %precision145 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %33, i64 0, i32 6, !dbg !6774
  %bf.load146 = load i32, i32* %precision145, align 4, !dbg !6774
  %bf.clear147 = and i32 %bf.load146, 1023, !dbg !6774
  %bf.load150 = load i32, i32* %precision59, align 4, !dbg !6775
  %bf.clear151 = and i32 %bf.load150, 1023, !dbg !6775
  %cmp152 = icmp ult i32 %bf.clear147, %bf.clear151, !dbg !6776
  br i1 %cmp152, label %land.lhs.true153, label %if.end176, !dbg !6777

land.lhs.true153:                                 ; preds = %land.lhs.true141
  %34 = bitcast %struct.tree_type* %33 to %union.tree_node*, !dbg !6777
  call void @llvm.dbg.value(metadata i32 %32, metadata !6697, metadata !DIExpression()), !dbg !6703
  %call156 = call %union.tree_node* @c_common_signed_or_unsigned_type(i32 %32, %union.tree_node* %34) #8, !dbg !6778
  call void @llvm.dbg.value(metadata %union.tree_node* %call156, metadata !6702, metadata !DIExpression()), !dbg !6703
  %tobool157 = icmp eq %union.tree_node* %call156, null, !dbg !6779
  br i1 %tobool157, label %if.end176, label %land.lhs.true158, !dbg !6780

land.lhs.true158:                                 ; preds = %land.lhs.true153
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6781
  %bf.load160 = load i64, i64* %35, align 8, !dbg !6781
  %bf.cast1625 = and i64 %bf.load160, 65535, !dbg !6781
  %cmp163 = icmp eq i64 %bf.cast1625, 10, !dbg !6781
  br i1 %cmp163, label %if.end176, label %lor.lhs.false164, !dbg !6781

lor.lhs.false164:                                 ; preds = %land.lhs.true158
  %cmp169 = icmp eq i64 %bf.cast1625, 12, !dbg !6781
  br i1 %cmp169, label %if.end176, label %land.lhs.true170, !dbg !6782

land.lhs.true170:                                 ; preds = %lor.lhs.false164
  %call171 = call i32 @int_fits_type_p(%union.tree_node* %call3, %union.tree_node* nonnull %call156) #7, !dbg !6783
  %tobool172 = icmp eq i32 %call171, 0, !dbg !6783
  br i1 %tobool172, label %if.end176, label %cleanup, !dbg !6784

if.end176:                                        ; preds = %land.lhs.true170, %land.lhs.true153, %land.lhs.true137, %lor.lhs.false164, %land.lhs.true158, %land.lhs.true141, %if.else131
  br label %cleanup, !dbg !6785

cleanup:                                          ; preds = %land.lhs.true127, %land.lhs.true170, %if.end176, %if.then82
  %retval.0 = phi %union.tree_node* [ %call88, %if.then82 ], [ %result_type, %if.end176 ], [ %call113, %land.lhs.true127 ], [ %call156, %land.lhs.true170 ], !dbg !6703
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #6, !dbg !6786
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !6786
  ret %union.tree_node* %retval.0, !dbg !6786
}

declare dso_local %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_narrower(%union.tree_node*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_common_signed_or_unsigned_type(i32 %unsignedp, %union.tree_node* %type) local_unnamed_addr #5 !dbg !6787 {
entry:
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !6791, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6792, metadata !DIExpression()), !dbg !6794
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6795
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6795
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6793, metadata !DIExpression()), !dbg !6794
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !6796
  %cmp = icmp eq %union.tree_node* %1, %2, !dbg !6798
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !6799
  %cmp3 = icmp eq %union.tree_node* %1, %3, !dbg !6800
  %or.cond = or i1 %cmp, %cmp3, !dbg !6801
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !6802
  %cmp5 = icmp eq %union.tree_node* %1, %4, !dbg !6803
  %or.cond1 = or i1 %or.cond, %cmp5, !dbg !6801
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6801
  br i1 %or.cond1, label %if.then, label %if.end, !dbg !6801

if.then:                                          ; preds = %entry
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !6804
  %cond = select i1 %tobool, %union.tree_node* %2, %union.tree_node* %4, !dbg !6804
  br label %cleanup, !dbg !6804

if.end:                                           ; preds = %entry
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !6805
  %cmp6 = icmp eq %union.tree_node* %1, %6, !dbg !6807
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !6808
  %cmp8 = icmp eq %union.tree_node* %1, %7, !dbg !6809
  %or.cond2 = or i1 %cmp6, %cmp8, !dbg !6810
  br i1 %or.cond2, label %if.then9, label %if.end15, !dbg !6810

if.then9:                                         ; preds = %if.end
  %tobool10 = icmp eq i32 %unsignedp, 0, !dbg !6811
  %cond14 = select i1 %tobool10, %union.tree_node* %6, %union.tree_node* %7, !dbg !6811
  br label %cleanup, !dbg !6811

if.end15:                                         ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !dbg !6812
  %cmp16 = icmp eq %union.tree_node* %1, %8, !dbg !6814
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !6815
  %cmp18 = icmp eq %union.tree_node* %1, %9, !dbg !6816
  %or.cond3 = or i1 %cmp16, %cmp18, !dbg !6817
  br i1 %or.cond3, label %if.then19, label %if.end25, !dbg !6817

if.then19:                                        ; preds = %if.end15
  %tobool20 = icmp eq i32 %unsignedp, 0, !dbg !6818
  %cond24 = select i1 %tobool20, %union.tree_node* %8, %union.tree_node* %9, !dbg !6818
  br label %cleanup, !dbg !6818

if.end25:                                         ; preds = %if.end15
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !6819
  %cmp26 = icmp eq %union.tree_node* %1, %10, !dbg !6821
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !6822
  %cmp28 = icmp eq %union.tree_node* %1, %11, !dbg !6823
  %or.cond4 = or i1 %cmp26, %cmp28, !dbg !6824
  br i1 %or.cond4, label %if.then29, label %if.end35, !dbg !6824

if.then29:                                        ; preds = %if.end25
  %tobool30 = icmp eq i32 %unsignedp, 0, !dbg !6825
  %cond34 = select i1 %tobool30, %union.tree_node* %10, %union.tree_node* %11, !dbg !6825
  br label %cleanup, !dbg !6825

if.end35:                                         ; preds = %if.end25
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !6826
  %cmp36 = icmp eq %union.tree_node* %1, %12, !dbg !6828
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !6829
  %cmp38 = icmp eq %union.tree_node* %1, %13, !dbg !6830
  %or.cond5 = or i1 %cmp36, %cmp38, !dbg !6831
  br i1 %or.cond5, label %if.then39, label %if.end45, !dbg !6831

if.then39:                                        ; preds = %if.end35
  %tobool40 = icmp eq i32 %unsignedp, 0, !dbg !6832
  %cond44 = select i1 %tobool40, %union.tree_node* %12, %union.tree_node* %13, !dbg !6832
  br label %cleanup, !dbg !6832

if.end45:                                         ; preds = %if.end35
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 9), align 8, !dbg !6833
  %cmp46 = icmp eq %union.tree_node* %1, %14, !dbg !6835
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 10), align 16, !dbg !6836
  %cmp48 = icmp eq %union.tree_node* %1, %15, !dbg !6837
  %or.cond6 = or i1 %cmp46, %cmp48, !dbg !6838
  br i1 %or.cond6, label %if.then49, label %if.end55, !dbg !6838

if.then49:                                        ; preds = %if.end45
  %tobool50 = icmp eq i32 %unsignedp, 0, !dbg !6839
  %cond54 = select i1 %tobool50, %union.tree_node* %14, %union.tree_node* %15, !dbg !6839
  br label %cleanup, !dbg !6839

if.end55:                                         ; preds = %if.end45
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 5), align 8, !dbg !6840
  %cmp56 = icmp eq %union.tree_node* %1, %16, !dbg !6842
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 10), align 16, !dbg !6843
  %cmp58 = icmp eq %union.tree_node* %1, %17, !dbg !6844
  %or.cond7 = or i1 %cmp56, %cmp58, !dbg !6845
  br i1 %or.cond7, label %if.then59, label %if.end65, !dbg !6845

if.then59:                                        ; preds = %if.end55
  %tobool60 = icmp eq i32 %unsignedp, 0, !dbg !6846
  %cond64 = select i1 %tobool60, %union.tree_node* %16, %union.tree_node* %17, !dbg !6846
  br label %cleanup, !dbg !6846

if.end65:                                         ; preds = %if.end55
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 4), align 16, !dbg !6847
  %cmp66 = icmp eq %union.tree_node* %1, %18, !dbg !6849
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 9), align 8, !dbg !6850
  %cmp68 = icmp eq %union.tree_node* %1, %19, !dbg !6851
  %or.cond8 = or i1 %cmp66, %cmp68, !dbg !6852
  br i1 %or.cond8, label %if.then69, label %if.end75, !dbg !6852

if.then69:                                        ; preds = %if.end65
  %tobool70 = icmp eq i32 %unsignedp, 0, !dbg !6853
  %cond74 = select i1 %tobool70, %union.tree_node* %18, %union.tree_node* %19, !dbg !6853
  br label %cleanup, !dbg !6853

if.end75:                                         ; preds = %if.end65
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 3), align 8, !dbg !6854
  %cmp76 = icmp eq %union.tree_node* %1, %20, !dbg !6856
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 8), align 16, !dbg !6857
  %cmp78 = icmp eq %union.tree_node* %1, %21, !dbg !6858
  %or.cond9 = or i1 %cmp76, %cmp78, !dbg !6859
  br i1 %or.cond9, label %if.then79, label %if.end85, !dbg !6859

if.then79:                                        ; preds = %if.end75
  %tobool80 = icmp eq i32 %unsignedp, 0, !dbg !6860
  %cond84 = select i1 %tobool80, %union.tree_node* %20, %union.tree_node* %21, !dbg !6860
  br label %cleanup, !dbg !6860

if.end85:                                         ; preds = %if.end75
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 2), align 16, !dbg !6861
  %cmp86 = icmp eq %union.tree_node* %1, %22, !dbg !6863
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 7), align 8, !dbg !6864
  %cmp88 = icmp eq %union.tree_node* %1, %23, !dbg !6865
  %or.cond10 = or i1 %cmp86, %cmp88, !dbg !6866
  br i1 %or.cond10, label %if.then89, label %if.end95, !dbg !6866

if.then89:                                        ; preds = %if.end85
  %tobool90 = icmp eq i32 %unsignedp, 0, !dbg !6867
  %cond94 = select i1 %tobool90, %union.tree_node* %22, %union.tree_node* %23, !dbg !6867
  br label %cleanup, !dbg !6867

if.end95:                                         ; preds = %if.end85
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 1), align 8, !dbg !6868
  %cmp96 = icmp eq %union.tree_node* %1, %24, !dbg !6870
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 6), align 16, !dbg !6871
  %cmp98 = icmp eq %union.tree_node* %1, %25, !dbg !6872
  %or.cond11 = or i1 %cmp96, %cmp98, !dbg !6873
  br i1 %or.cond11, label %if.then99, label %if.end105, !dbg !6873

if.then99:                                        ; preds = %if.end95
  %tobool100 = icmp eq i32 %unsignedp, 0, !dbg !6874
  %cond104 = select i1 %tobool100, %union.tree_node* %24, %union.tree_node* %25, !dbg !6874
  br label %cleanup, !dbg !6874

if.end105:                                        ; preds = %if.end95
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 65), align 8, !dbg !6875
  %cmp106 = icmp eq %union.tree_node* %1, %26, !dbg !6875
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 69), align 8, !dbg !6875
  %cmp108 = icmp eq %union.tree_node* %1, %27, !dbg !6875
  %or.cond12 = or i1 %cmp106, %cmp108, !dbg !6875
  br i1 %or.cond12, label %if.then109, label %if.end115, !dbg !6875

if.then109:                                       ; preds = %if.end105
  %tobool110 = icmp eq i32 %unsignedp, 0, !dbg !6875
  %cond114 = select i1 %tobool110, %union.tree_node* %26, %union.tree_node* %27, !dbg !6875
  br label %cleanup, !dbg !6875

if.end115:                                        ; preds = %if.end105
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 66), align 16, !dbg !6877
  %cmp116 = icmp eq %union.tree_node* %1, %28, !dbg !6877
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 70), align 16, !dbg !6877
  %cmp118 = icmp eq %union.tree_node* %1, %29, !dbg !6877
  %or.cond13 = or i1 %cmp116, %cmp118, !dbg !6877
  br i1 %or.cond13, label %if.then119, label %if.end125, !dbg !6877

if.then119:                                       ; preds = %if.end115
  %tobool120 = icmp eq i32 %unsignedp, 0, !dbg !6877
  %cond124 = select i1 %tobool120, %union.tree_node* %28, %union.tree_node* %29, !dbg !6877
  br label %cleanup, !dbg !6877

if.end125:                                        ; preds = %if.end115
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 67), align 8, !dbg !6879
  %cmp126 = icmp eq %union.tree_node* %1, %30, !dbg !6879
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 71), align 8, !dbg !6879
  %cmp128 = icmp eq %union.tree_node* %1, %31, !dbg !6879
  %or.cond14 = or i1 %cmp126, %cmp128, !dbg !6879
  br i1 %or.cond14, label %if.then129, label %if.end135, !dbg !6879

if.then129:                                       ; preds = %if.end125
  %tobool130 = icmp eq i32 %unsignedp, 0, !dbg !6879
  %cond134 = select i1 %tobool130, %union.tree_node* %30, %union.tree_node* %31, !dbg !6879
  br label %cleanup, !dbg !6879

if.end135:                                        ; preds = %if.end125
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 68), align 16, !dbg !6881
  %cmp136 = icmp eq %union.tree_node* %1, %32, !dbg !6881
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 72), align 16, !dbg !6881
  %cmp138 = icmp eq %union.tree_node* %1, %33, !dbg !6881
  %or.cond15 = or i1 %cmp136, %cmp138, !dbg !6881
  br i1 %or.cond15, label %if.then139, label %if.end145, !dbg !6881

if.then139:                                       ; preds = %if.end135
  %tobool140 = icmp eq i32 %unsignedp, 0, !dbg !6881
  %cond144 = select i1 %tobool140, %union.tree_node* %32, %union.tree_node* %33, !dbg !6881
  br label %cleanup, !dbg !6881

if.end145:                                        ; preds = %if.end135
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 57), align 8, !dbg !6883
  %cmp146 = icmp eq %union.tree_node* %1, %34, !dbg !6883
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 61), align 8, !dbg !6883
  %cmp148 = icmp eq %union.tree_node* %1, %35, !dbg !6883
  %or.cond16 = or i1 %cmp146, %cmp148, !dbg !6883
  br i1 %or.cond16, label %if.then149, label %if.end155, !dbg !6883

if.then149:                                       ; preds = %if.end145
  %tobool150 = icmp eq i32 %unsignedp, 0, !dbg !6883
  %cond154 = select i1 %tobool150, %union.tree_node* %34, %union.tree_node* %35, !dbg !6883
  br label %cleanup, !dbg !6883

if.end155:                                        ; preds = %if.end145
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 58), align 16, !dbg !6885
  %cmp156 = icmp eq %union.tree_node* %1, %36, !dbg !6885
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 62), align 16, !dbg !6885
  %cmp158 = icmp eq %union.tree_node* %1, %37, !dbg !6885
  %or.cond17 = or i1 %cmp156, %cmp158, !dbg !6885
  br i1 %or.cond17, label %if.then159, label %if.end165, !dbg !6885

if.then159:                                       ; preds = %if.end155
  %tobool160 = icmp eq i32 %unsignedp, 0, !dbg !6885
  %cond164 = select i1 %tobool160, %union.tree_node* %36, %union.tree_node* %37, !dbg !6885
  br label %cleanup, !dbg !6885

if.end165:                                        ; preds = %if.end155
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 59), align 8, !dbg !6887
  %cmp166 = icmp eq %union.tree_node* %1, %38, !dbg !6887
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 63), align 8, !dbg !6887
  %cmp168 = icmp eq %union.tree_node* %1, %39, !dbg !6887
  %or.cond18 = or i1 %cmp166, %cmp168, !dbg !6887
  br i1 %or.cond18, label %if.then169, label %if.end175, !dbg !6887

if.then169:                                       ; preds = %if.end165
  %tobool170 = icmp eq i32 %unsignedp, 0, !dbg !6887
  %cond174 = select i1 %tobool170, %union.tree_node* %38, %union.tree_node* %39, !dbg !6887
  br label %cleanup, !dbg !6887

if.end175:                                        ; preds = %if.end165
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 60), align 16, !dbg !6889
  %cmp176 = icmp eq %union.tree_node* %1, %40, !dbg !6889
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 64), align 16, !dbg !6889
  %cmp178 = icmp eq %union.tree_node* %1, %41, !dbg !6889
  %or.cond19 = or i1 %cmp176, %cmp178, !dbg !6889
  br i1 %or.cond19, label %if.then179, label %if.end185, !dbg !6889

if.then179:                                       ; preds = %if.end175
  %tobool180 = icmp eq i32 %unsignedp, 0, !dbg !6889
  %cond184 = select i1 %tobool180, %union.tree_node* %40, %union.tree_node* %41, !dbg !6889
  br label %cleanup, !dbg !6889

if.end185:                                        ; preds = %if.end175
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 81), align 8, !dbg !6891
  %cmp186 = icmp eq %union.tree_node* %1, %42, !dbg !6891
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 85), align 8, !dbg !6891
  %cmp188 = icmp eq %union.tree_node* %1, %43, !dbg !6891
  %or.cond20 = or i1 %cmp186, %cmp188, !dbg !6891
  br i1 %or.cond20, label %if.then189, label %if.end195, !dbg !6891

if.then189:                                       ; preds = %if.end185
  %tobool190 = icmp eq i32 %unsignedp, 0, !dbg !6891
  %cond194 = select i1 %tobool190, %union.tree_node* %42, %union.tree_node* %43, !dbg !6891
  br label %cleanup, !dbg !6891

if.end195:                                        ; preds = %if.end185
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 82), align 16, !dbg !6893
  %cmp196 = icmp eq %union.tree_node* %1, %44, !dbg !6893
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 86), align 16, !dbg !6893
  %cmp198 = icmp eq %union.tree_node* %1, %45, !dbg !6893
  %or.cond21 = or i1 %cmp196, %cmp198, !dbg !6893
  br i1 %or.cond21, label %if.then199, label %if.end205, !dbg !6893

if.then199:                                       ; preds = %if.end195
  %tobool200 = icmp eq i32 %unsignedp, 0, !dbg !6893
  %cond204 = select i1 %tobool200, %union.tree_node* %44, %union.tree_node* %45, !dbg !6893
  br label %cleanup, !dbg !6893

if.end205:                                        ; preds = %if.end195
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 83), align 8, !dbg !6895
  %cmp206 = icmp eq %union.tree_node* %1, %46, !dbg !6895
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 87), align 8, !dbg !6895
  %cmp208 = icmp eq %union.tree_node* %1, %47, !dbg !6895
  %or.cond22 = or i1 %cmp206, %cmp208, !dbg !6895
  br i1 %or.cond22, label %if.then209, label %if.end215, !dbg !6895

if.then209:                                       ; preds = %if.end205
  %tobool210 = icmp eq i32 %unsignedp, 0, !dbg !6895
  %cond214 = select i1 %tobool210, %union.tree_node* %46, %union.tree_node* %47, !dbg !6895
  br label %cleanup, !dbg !6895

if.end215:                                        ; preds = %if.end205
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 84), align 16, !dbg !6897
  %cmp216 = icmp eq %union.tree_node* %1, %48, !dbg !6897
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 88), align 16, !dbg !6897
  %cmp218 = icmp eq %union.tree_node* %1, %49, !dbg !6897
  %or.cond23 = or i1 %cmp216, %cmp218, !dbg !6897
  br i1 %or.cond23, label %if.then219, label %if.end225, !dbg !6897

if.then219:                                       ; preds = %if.end215
  %tobool220 = icmp eq i32 %unsignedp, 0, !dbg !6897
  %cond224 = select i1 %tobool220, %union.tree_node* %48, %union.tree_node* %49, !dbg !6897
  br label %cleanup, !dbg !6897

if.end225:                                        ; preds = %if.end215
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 73), align 8, !dbg !6899
  %cmp226 = icmp eq %union.tree_node* %1, %50, !dbg !6899
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 77), align 8, !dbg !6899
  %cmp228 = icmp eq %union.tree_node* %1, %51, !dbg !6899
  %or.cond24 = or i1 %cmp226, %cmp228, !dbg !6899
  br i1 %or.cond24, label %if.then229, label %if.end235, !dbg !6899

if.then229:                                       ; preds = %if.end225
  %tobool230 = icmp eq i32 %unsignedp, 0, !dbg !6899
  %cond234 = select i1 %tobool230, %union.tree_node* %50, %union.tree_node* %51, !dbg !6899
  br label %cleanup, !dbg !6899

if.end235:                                        ; preds = %if.end225
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 74), align 16, !dbg !6901
  %cmp236 = icmp eq %union.tree_node* %1, %52, !dbg !6901
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 78), align 16, !dbg !6901
  %cmp238 = icmp eq %union.tree_node* %1, %53, !dbg !6901
  %or.cond25 = or i1 %cmp236, %cmp238, !dbg !6901
  br i1 %or.cond25, label %if.then239, label %if.end245, !dbg !6901

if.then239:                                       ; preds = %if.end235
  %tobool240 = icmp eq i32 %unsignedp, 0, !dbg !6901
  %cond244 = select i1 %tobool240, %union.tree_node* %52, %union.tree_node* %53, !dbg !6901
  br label %cleanup, !dbg !6901

if.end245:                                        ; preds = %if.end235
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 75), align 8, !dbg !6903
  %cmp246 = icmp eq %union.tree_node* %1, %54, !dbg !6903
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 79), align 8, !dbg !6903
  %cmp248 = icmp eq %union.tree_node* %1, %55, !dbg !6903
  %or.cond26 = or i1 %cmp246, %cmp248, !dbg !6903
  br i1 %or.cond26, label %if.then249, label %if.end255, !dbg !6903

if.then249:                                       ; preds = %if.end245
  %tobool250 = icmp eq i32 %unsignedp, 0, !dbg !6903
  %cond254 = select i1 %tobool250, %union.tree_node* %54, %union.tree_node* %55, !dbg !6903
  br label %cleanup, !dbg !6903

if.end255:                                        ; preds = %if.end245
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 76), align 16, !dbg !6905
  %cmp256 = icmp eq %union.tree_node* %1, %56, !dbg !6905
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 80), align 16, !dbg !6905
  %cmp258 = icmp eq %union.tree_node* %1, %57, !dbg !6905
  %or.cond27 = or i1 %cmp256, %cmp258, !dbg !6905
  br i1 %or.cond27, label %if.then259, label %if.end265, !dbg !6905

if.then259:                                       ; preds = %if.end255
  %tobool260 = icmp eq i32 %unsignedp, 0, !dbg !6905
  %cond264 = select i1 %tobool260, %union.tree_node* %56, %union.tree_node* %57, !dbg !6905
  br label %cleanup, !dbg !6905

if.end265:                                        ; preds = %if.end255
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 89), align 8, !dbg !6907
  %cmp266 = icmp eq %union.tree_node* %1, %58, !dbg !6907
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 94), align 16, !dbg !6907
  %cmp268 = icmp eq %union.tree_node* %1, %59, !dbg !6907
  %or.cond28 = or i1 %cmp266, %cmp268, !dbg !6907
  br i1 %or.cond28, label %if.then269, label %if.end275, !dbg !6907

if.then269:                                       ; preds = %if.end265
  %tobool270 = icmp eq i32 %unsignedp, 0, !dbg !6907
  %cond274 = select i1 %tobool270, %union.tree_node* %58, %union.tree_node* %59, !dbg !6907
  br label %cleanup, !dbg !6907

if.end275:                                        ; preds = %if.end265
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 90), align 16, !dbg !6909
  %cmp276 = icmp eq %union.tree_node* %1, %60, !dbg !6909
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 95), align 8, !dbg !6909
  %cmp278 = icmp eq %union.tree_node* %1, %61, !dbg !6909
  %or.cond29 = or i1 %cmp276, %cmp278, !dbg !6909
  br i1 %or.cond29, label %if.then279, label %if.end285, !dbg !6909

if.then279:                                       ; preds = %if.end275
  %tobool280 = icmp eq i32 %unsignedp, 0, !dbg !6909
  %cond284 = select i1 %tobool280, %union.tree_node* %60, %union.tree_node* %61, !dbg !6909
  br label %cleanup, !dbg !6909

if.end285:                                        ; preds = %if.end275
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 91), align 8, !dbg !6911
  %cmp286 = icmp eq %union.tree_node* %1, %62, !dbg !6911
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 96), align 16, !dbg !6911
  %cmp288 = icmp eq %union.tree_node* %1, %63, !dbg !6911
  %or.cond30 = or i1 %cmp286, %cmp288, !dbg !6911
  br i1 %or.cond30, label %if.then289, label %if.end295, !dbg !6911

if.then289:                                       ; preds = %if.end285
  %tobool290 = icmp eq i32 %unsignedp, 0, !dbg !6911
  %cond294 = select i1 %tobool290, %union.tree_node* %62, %union.tree_node* %63, !dbg !6911
  br label %cleanup, !dbg !6911

if.end295:                                        ; preds = %if.end285
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 92), align 16, !dbg !6913
  %cmp296 = icmp eq %union.tree_node* %1, %64, !dbg !6913
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 97), align 8, !dbg !6913
  %cmp298 = icmp eq %union.tree_node* %1, %65, !dbg !6913
  %or.cond31 = or i1 %cmp296, %cmp298, !dbg !6913
  br i1 %or.cond31, label %if.then299, label %if.end305, !dbg !6913

if.then299:                                       ; preds = %if.end295
  %tobool300 = icmp eq i32 %unsignedp, 0, !dbg !6913
  %cond304 = select i1 %tobool300, %union.tree_node* %64, %union.tree_node* %65, !dbg !6913
  br label %cleanup, !dbg !6913

if.end305:                                        ; preds = %if.end295
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 93), align 8, !dbg !6915
  %cmp306 = icmp eq %union.tree_node* %1, %66, !dbg !6915
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 98), align 16, !dbg !6915
  %cmp308 = icmp eq %union.tree_node* %1, %67, !dbg !6915
  %or.cond32 = or i1 %cmp306, %cmp308, !dbg !6915
  br i1 %or.cond32, label %if.then309, label %if.end315, !dbg !6915

if.then309:                                       ; preds = %if.end305
  %tobool310 = icmp eq i32 %unsignedp, 0, !dbg !6915
  %cond314 = select i1 %tobool310, %union.tree_node* %66, %union.tree_node* %67, !dbg !6915
  br label %cleanup, !dbg !6915

if.end315:                                        ; preds = %if.end305
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 99), align 8, !dbg !6917
  %cmp316 = icmp eq %union.tree_node* %1, %68, !dbg !6917
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 104), align 16, !dbg !6917
  %cmp318 = icmp eq %union.tree_node* %1, %69, !dbg !6917
  %or.cond33 = or i1 %cmp316, %cmp318, !dbg !6917
  br i1 %or.cond33, label %if.then319, label %if.end325, !dbg !6917

if.then319:                                       ; preds = %if.end315
  %tobool320 = icmp eq i32 %unsignedp, 0, !dbg !6917
  %cond324 = select i1 %tobool320, %union.tree_node* %68, %union.tree_node* %69, !dbg !6917
  br label %cleanup, !dbg !6917

if.end325:                                        ; preds = %if.end315
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 100), align 16, !dbg !6919
  %cmp326 = icmp eq %union.tree_node* %1, %70, !dbg !6919
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 105), align 8, !dbg !6919
  %cmp328 = icmp eq %union.tree_node* %1, %71, !dbg !6919
  %or.cond34 = or i1 %cmp326, %cmp328, !dbg !6919
  br i1 %or.cond34, label %if.then329, label %if.end335, !dbg !6919

if.then329:                                       ; preds = %if.end325
  %tobool330 = icmp eq i32 %unsignedp, 0, !dbg !6919
  %cond334 = select i1 %tobool330, %union.tree_node* %70, %union.tree_node* %71, !dbg !6919
  br label %cleanup, !dbg !6919

if.end335:                                        ; preds = %if.end325
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 101), align 8, !dbg !6921
  %cmp336 = icmp eq %union.tree_node* %1, %72, !dbg !6921
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 106), align 16, !dbg !6921
  %cmp338 = icmp eq %union.tree_node* %1, %73, !dbg !6921
  %or.cond35 = or i1 %cmp336, %cmp338, !dbg !6921
  br i1 %or.cond35, label %if.then339, label %if.end345, !dbg !6921

if.then339:                                       ; preds = %if.end335
  %tobool340 = icmp eq i32 %unsignedp, 0, !dbg !6921
  %cond344 = select i1 %tobool340, %union.tree_node* %72, %union.tree_node* %73, !dbg !6921
  br label %cleanup, !dbg !6921

if.end345:                                        ; preds = %if.end335
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 102), align 16, !dbg !6923
  %cmp346 = icmp eq %union.tree_node* %1, %74, !dbg !6923
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 107), align 8, !dbg !6923
  %cmp348 = icmp eq %union.tree_node* %1, %75, !dbg !6923
  %or.cond36 = or i1 %cmp346, %cmp348, !dbg !6923
  br i1 %or.cond36, label %if.then349, label %if.end355, !dbg !6923

if.then349:                                       ; preds = %if.end345
  %tobool350 = icmp eq i32 %unsignedp, 0, !dbg !6923
  %cond354 = select i1 %tobool350, %union.tree_node* %74, %union.tree_node* %75, !dbg !6923
  br label %cleanup, !dbg !6923

if.end355:                                        ; preds = %if.end345
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 103), align 8, !dbg !6925
  %cmp356 = icmp eq %union.tree_node* %1, %76, !dbg !6925
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 108), align 16, !dbg !6925
  %cmp358 = icmp eq %union.tree_node* %1, %77, !dbg !6925
  %or.cond37 = or i1 %cmp356, %cmp358, !dbg !6925
  br i1 %or.cond37, label %if.then359, label %if.end365, !dbg !6925

if.then359:                                       ; preds = %if.end355
  %tobool360 = icmp eq i32 %unsignedp, 0, !dbg !6925
  %cond364 = select i1 %tobool360, %union.tree_node* %76, %union.tree_node* %77, !dbg !6925
  br label %cleanup, !dbg !6925

if.end365:                                        ; preds = %if.end355
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 109), align 8, !dbg !6927
  %cmp366 = icmp eq %union.tree_node* %1, %78, !dbg !6927
  %79 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 113), align 8, !dbg !6927
  %cmp368 = icmp eq %union.tree_node* %1, %79, !dbg !6927
  %or.cond38 = or i1 %cmp366, %cmp368, !dbg !6927
  br i1 %or.cond38, label %if.then369, label %if.end375, !dbg !6927

if.then369:                                       ; preds = %if.end365
  %tobool370 = icmp eq i32 %unsignedp, 0, !dbg !6927
  %cond374 = select i1 %tobool370, %union.tree_node* %78, %union.tree_node* %79, !dbg !6927
  br label %cleanup, !dbg !6927

if.end375:                                        ; preds = %if.end365
  %80 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 110), align 16, !dbg !6929
  %cmp376 = icmp eq %union.tree_node* %1, %80, !dbg !6929
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 114), align 16, !dbg !6929
  %cmp378 = icmp eq %union.tree_node* %1, %81, !dbg !6929
  %or.cond39 = or i1 %cmp376, %cmp378, !dbg !6929
  br i1 %or.cond39, label %if.then379, label %if.end385, !dbg !6929

if.then379:                                       ; preds = %if.end375
  %tobool380 = icmp eq i32 %unsignedp, 0, !dbg !6929
  %cond384 = select i1 %tobool380, %union.tree_node* %80, %union.tree_node* %81, !dbg !6929
  br label %cleanup, !dbg !6929

if.end385:                                        ; preds = %if.end375
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 111), align 8, !dbg !6931
  %cmp386 = icmp eq %union.tree_node* %1, %82, !dbg !6931
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 115), align 8, !dbg !6931
  %cmp388 = icmp eq %union.tree_node* %1, %83, !dbg !6931
  %or.cond40 = or i1 %cmp386, %cmp388, !dbg !6931
  br i1 %or.cond40, label %if.then389, label %if.end395, !dbg !6931

if.then389:                                       ; preds = %if.end385
  %tobool390 = icmp eq i32 %unsignedp, 0, !dbg !6931
  %cond394 = select i1 %tobool390, %union.tree_node* %82, %union.tree_node* %83, !dbg !6931
  br label %cleanup, !dbg !6931

if.end395:                                        ; preds = %if.end385
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 112), align 16, !dbg !6933
  %cmp396 = icmp eq %union.tree_node* %1, %84, !dbg !6933
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 116), align 16, !dbg !6933
  %cmp398 = icmp eq %union.tree_node* %1, %85, !dbg !6933
  %or.cond41 = or i1 %cmp396, %cmp398, !dbg !6933
  br i1 %or.cond41, label %if.then399, label %if.end405, !dbg !6933

if.then399:                                       ; preds = %if.end395
  %tobool400 = icmp eq i32 %unsignedp, 0, !dbg !6933
  %cond404 = select i1 %tobool400, %union.tree_node* %84, %union.tree_node* %85, !dbg !6933
  br label %cleanup, !dbg !6933

if.end405:                                        ; preds = %if.end395
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 117), align 8, !dbg !6935
  %cmp406 = icmp eq %union.tree_node* %1, %86, !dbg !6935
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 121), align 8, !dbg !6935
  %cmp408 = icmp eq %union.tree_node* %1, %87, !dbg !6935
  %or.cond42 = or i1 %cmp406, %cmp408, !dbg !6935
  br i1 %or.cond42, label %if.then409, label %if.end415, !dbg !6935

if.then409:                                       ; preds = %if.end405
  %tobool410 = icmp eq i32 %unsignedp, 0, !dbg !6935
  %cond414 = select i1 %tobool410, %union.tree_node* %86, %union.tree_node* %87, !dbg !6935
  br label %cleanup, !dbg !6935

if.end415:                                        ; preds = %if.end405
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 118), align 16, !dbg !6937
  %cmp416 = icmp eq %union.tree_node* %1, %88, !dbg !6937
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 122), align 16, !dbg !6937
  %cmp418 = icmp eq %union.tree_node* %1, %89, !dbg !6937
  %or.cond43 = or i1 %cmp416, %cmp418, !dbg !6937
  br i1 %or.cond43, label %if.then419, label %if.end425, !dbg !6937

if.then419:                                       ; preds = %if.end415
  %tobool420 = icmp eq i32 %unsignedp, 0, !dbg !6937
  %cond424 = select i1 %tobool420, %union.tree_node* %88, %union.tree_node* %89, !dbg !6937
  br label %cleanup, !dbg !6937

if.end425:                                        ; preds = %if.end415
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 119), align 8, !dbg !6939
  %cmp426 = icmp eq %union.tree_node* %1, %90, !dbg !6939
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 123), align 8, !dbg !6939
  %cmp428 = icmp eq %union.tree_node* %1, %91, !dbg !6939
  %or.cond44 = or i1 %cmp426, %cmp428, !dbg !6939
  br i1 %or.cond44, label %if.then429, label %if.end435, !dbg !6939

if.then429:                                       ; preds = %if.end425
  %tobool430 = icmp eq i32 %unsignedp, 0, !dbg !6939
  %cond434 = select i1 %tobool430, %union.tree_node* %90, %union.tree_node* %91, !dbg !6939
  br label %cleanup, !dbg !6939

if.end435:                                        ; preds = %if.end425
  %92 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 120), align 16, !dbg !6941
  %cmp436 = icmp eq %union.tree_node* %1, %92, !dbg !6941
  %93 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 124), align 16, !dbg !6941
  %cmp438 = icmp eq %union.tree_node* %1, %93, !dbg !6941
  %or.cond45 = or i1 %cmp436, %cmp438, !dbg !6941
  br i1 %or.cond45, label %if.then439, label %if.end445, !dbg !6941

if.then439:                                       ; preds = %if.end435
  %tobool440 = icmp eq i32 %unsignedp, 0, !dbg !6941
  %cond444 = select i1 %tobool440, %union.tree_node* %92, %union.tree_node* %93, !dbg !6941
  br label %cleanup, !dbg !6941

if.end445:                                        ; preds = %if.end435
  %94 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6943
  %bf.load = load i64, i64* %94, align 8, !dbg !6943
  %bf.cast46 = and i64 %bf.load, 65535, !dbg !6943
  %cmp446 = icmp eq i64 %bf.cast46, 6, !dbg !6943
  br i1 %cmp446, label %lor.lhs.false459, label %lor.lhs.false447, !dbg !6943

lor.lhs.false447:                                 ; preds = %if.end445
  %cmp452 = icmp eq i64 %bf.cast46, 7, !dbg !6943
  br i1 %cmp452, label %lor.lhs.false459, label %lor.lhs.false453, !dbg !6943

lor.lhs.false453:                                 ; preds = %lor.lhs.false447
  %cmp458 = icmp eq i64 %bf.cast46, 8, !dbg !6943
  br i1 %cmp458, label %lor.lhs.false459, label %cleanup, !dbg !6945

lor.lhs.false459:                                 ; preds = %lor.lhs.false453, %lor.lhs.false447, %if.end445
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !6946
  %95 = trunc i64 %bf.lshr to i32, !dbg !6946
  %bf.cast463 = and i32 %95, 1, !dbg !6946
  %cmp464 = icmp eq i32 %bf.cast463, %unsignedp, !dbg !6947
  br i1 %cmp464, label %cleanup, label %if.end466, !dbg !6948

if.end466:                                        ; preds = %lor.lhs.false459
  %cmp471 = icmp eq i64 %bf.cast46, 14, !dbg !6949
  br i1 %cmp471, label %cond.true472, label %cond.false473, !dbg !6949

cond.true472:                                     ; preds = %if.end466
  %call = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6949
  %.pre = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1) to i64**), align 8, !dbg !6949
  br label %cond.end478, !dbg !6949

cond.false473:                                    ; preds = %if.end466
  %type474 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6949
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type474, i64 0, i32 6, !dbg !6949
  %bf.load475 = load i32, i32* %mode, align 4, !dbg !6949
  %bf.lshr476 = lshr i32 %bf.load475, 16, !dbg !6949
  %bf.clear477 = and i32 %bf.lshr476, 255, !dbg !6949
  br label %cond.end478, !dbg !6949

cond.end478:                                      ; preds = %cond.false473, %cond.true472
  %96 = phi i64* [ %.pre, %cond.true472 ], [ %5, %cond.false473 ], !dbg !6949
  %cond479 = phi i32 [ %call, %cond.true472 ], [ %bf.clear477, %cond.false473 ], !dbg !6949
  %bf.load481 = load i64, i64* %96, align 8, !dbg !6949
  %bf.cast48350 = and i64 %bf.load481, 65535, !dbg !6949
  %cmp484 = icmp eq i64 %bf.cast48350, 14, !dbg !6949
  br i1 %cmp484, label %cond.true485, label %cond.false487, !dbg !6949

cond.true485:                                     ; preds = %cond.end478
  %.cast = bitcast i64* %96 to %union.tree_node*, !dbg !6949
  %call486 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !6949
  br label %cond.end493, !dbg !6949

cond.false487:                                    ; preds = %cond.end478
  %type488 = bitcast i64* %96 to %struct.tree_type*, !dbg !6949
  %mode489 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type488, i64 0, i32 6, !dbg !6949
  %bf.load490 = load i32, i32* %mode489, align 4, !dbg !6949
  %bf.lshr491 = lshr i32 %bf.load490, 16, !dbg !6949
  %bf.clear492 = and i32 %bf.lshr491, 255, !dbg !6949
  br label %cond.end493, !dbg !6949

cond.end493:                                      ; preds = %cond.false487, %cond.true485
  %cond494 = phi i32 [ %call486, %cond.true485 ], [ %bf.clear492, %cond.false487 ], !dbg !6949
  %cmp495 = icmp eq i32 %cond479, %cond494, !dbg !6949
  br i1 %cmp495, label %land.lhs.true, label %if.end510, !dbg !6949

land.lhs.true:                                    ; preds = %cond.end493
  %type496 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6949
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type496, i64 0, i32 6, !dbg !6949
  %bf.load497 = load i32, i32* %precision, align 4, !dbg !6949
  %97 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1) to %struct.tree_type**), align 8, !dbg !6949
  %precision500 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %97, i64 0, i32 6, !dbg !6949
  %bf.load501 = load i32, i32* %precision500, align 4, !dbg !6949
  %98 = xor i32 %bf.load497, %bf.load501, !dbg !6949
  %99 = and i32 %98, 1023, !dbg !6949
  %cmp503 = icmp eq i32 %99, 0, !dbg !6949
  br i1 %cmp503, label %if.then504, label %if.end510, !dbg !6951

if.then504:                                       ; preds = %land.lhs.true
  %100 = bitcast %struct.tree_type* %97 to %union.tree_node*, !dbg !6951
  %tobool505 = icmp eq i32 %unsignedp, 0, !dbg !6952
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !6952
  %cond509 = select i1 %tobool505, %union.tree_node* %100, %union.tree_node* %101, !dbg !6952
  br label %cleanup, !dbg !6952

if.end510:                                        ; preds = %land.lhs.true, %cond.end493
  %bf.load512 = load i64, i64* %94, align 8, !dbg !6953
  %bf.cast51451 = and i64 %bf.load512, 65535, !dbg !6953
  %cmp515 = icmp eq i64 %bf.cast51451, 14, !dbg !6953
  br i1 %cmp515, label %cond.true516, label %cond.false518, !dbg !6953

cond.true516:                                     ; preds = %if.end510
  %call517 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6953
  br label %cond.end524, !dbg !6953

cond.false518:                                    ; preds = %if.end510
  %type519 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6953
  %mode520 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type519, i64 0, i32 6, !dbg !6953
  %bf.load521 = load i32, i32* %mode520, align 4, !dbg !6953
  %bf.lshr522 = lshr i32 %bf.load521, 16, !dbg !6953
  %bf.clear523 = and i32 %bf.lshr522, 255, !dbg !6953
  br label %cond.end524, !dbg !6953

cond.end524:                                      ; preds = %cond.false518, %cond.true516
  %cond525 = phi i32 [ %call517, %cond.true516 ], [ %bf.clear523, %cond.false518 ], !dbg !6953
  %102 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64**), align 8, !dbg !6953
  %bf.load527 = load i64, i64* %102, align 8, !dbg !6953
  %bf.cast52952 = and i64 %bf.load527, 65535, !dbg !6953
  %cmp530 = icmp eq i64 %bf.cast52952, 14, !dbg !6953
  br i1 %cmp530, label %cond.true531, label %cond.false533, !dbg !6953

cond.true531:                                     ; preds = %cond.end524
  %.cast53 = bitcast i64* %102 to %union.tree_node*, !dbg !6953
  %call532 = tail call i32 @vector_type_mode(%union.tree_node* %.cast53) #7, !dbg !6953
  br label %cond.end539, !dbg !6953

cond.false533:                                    ; preds = %cond.end524
  %type534 = bitcast i64* %102 to %struct.tree_type*, !dbg !6953
  %mode535 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type534, i64 0, i32 6, !dbg !6953
  %bf.load536 = load i32, i32* %mode535, align 4, !dbg !6953
  %bf.lshr537 = lshr i32 %bf.load536, 16, !dbg !6953
  %bf.clear538 = and i32 %bf.lshr537, 255, !dbg !6953
  br label %cond.end539, !dbg !6953

cond.end539:                                      ; preds = %cond.false533, %cond.true531
  %cond540 = phi i32 [ %call532, %cond.true531 ], [ %bf.clear538, %cond.false533 ], !dbg !6953
  %cmp541 = icmp eq i32 %cond525, %cond540, !dbg !6953
  br i1 %cmp541, label %land.lhs.true542, label %if.end558, !dbg !6953

land.lhs.true542:                                 ; preds = %cond.end539
  %type543 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6953
  %precision544 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type543, i64 0, i32 6, !dbg !6953
  %bf.load545 = load i32, i32* %precision544, align 4, !dbg !6953
  %103 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !6953
  %precision548 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %103, i64 0, i32 6, !dbg !6953
  %bf.load549 = load i32, i32* %precision548, align 4, !dbg !6953
  %104 = xor i32 %bf.load545, %bf.load549, !dbg !6953
  %105 = and i32 %104, 1023, !dbg !6953
  %cmp551 = icmp eq i32 %105, 0, !dbg !6953
  br i1 %cmp551, label %if.then552, label %if.end558, !dbg !6955

if.then552:                                       ; preds = %land.lhs.true542
  %106 = bitcast %struct.tree_type* %103 to %union.tree_node*, !dbg !6955
  %tobool553 = icmp eq i32 %unsignedp, 0, !dbg !6956
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !6956
  %cond557 = select i1 %tobool553, %union.tree_node* %106, %union.tree_node* %107, !dbg !6956
  br label %cleanup, !dbg !6956

if.end558:                                        ; preds = %land.lhs.true542, %cond.end539
  %bf.load560 = load i64, i64* %94, align 8, !dbg !6957
  %bf.cast56254 = and i64 %bf.load560, 65535, !dbg !6957
  %cmp563 = icmp eq i64 %bf.cast56254, 14, !dbg !6957
  br i1 %cmp563, label %cond.true564, label %cond.false566, !dbg !6957

cond.true564:                                     ; preds = %if.end558
  %call565 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6957
  br label %cond.end572, !dbg !6957

cond.false566:                                    ; preds = %if.end558
  %type567 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6957
  %mode568 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type567, i64 0, i32 6, !dbg !6957
  %bf.load569 = load i32, i32* %mode568, align 4, !dbg !6957
  %bf.lshr570 = lshr i32 %bf.load569, 16, !dbg !6957
  %bf.clear571 = and i32 %bf.lshr570, 255, !dbg !6957
  br label %cond.end572, !dbg !6957

cond.end572:                                      ; preds = %cond.false566, %cond.true564
  %cond573 = phi i32 [ %call565, %cond.true564 ], [ %bf.clear571, %cond.false566 ], !dbg !6957
  %108 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3) to i64**), align 8, !dbg !6957
  %bf.load575 = load i64, i64* %108, align 8, !dbg !6957
  %bf.cast57755 = and i64 %bf.load575, 65535, !dbg !6957
  %cmp578 = icmp eq i64 %bf.cast57755, 14, !dbg !6957
  br i1 %cmp578, label %cond.true579, label %cond.false581, !dbg !6957

cond.true579:                                     ; preds = %cond.end572
  %.cast56 = bitcast i64* %108 to %union.tree_node*, !dbg !6957
  %call580 = tail call i32 @vector_type_mode(%union.tree_node* %.cast56) #7, !dbg !6957
  br label %cond.end587, !dbg !6957

cond.false581:                                    ; preds = %cond.end572
  %type582 = bitcast i64* %108 to %struct.tree_type*, !dbg !6957
  %mode583 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type582, i64 0, i32 6, !dbg !6957
  %bf.load584 = load i32, i32* %mode583, align 4, !dbg !6957
  %bf.lshr585 = lshr i32 %bf.load584, 16, !dbg !6957
  %bf.clear586 = and i32 %bf.lshr585, 255, !dbg !6957
  br label %cond.end587, !dbg !6957

cond.end587:                                      ; preds = %cond.false581, %cond.true579
  %cond588 = phi i32 [ %call580, %cond.true579 ], [ %bf.clear586, %cond.false581 ], !dbg !6957
  %cmp589 = icmp eq i32 %cond573, %cond588, !dbg !6957
  br i1 %cmp589, label %land.lhs.true590, label %if.end606, !dbg !6957

land.lhs.true590:                                 ; preds = %cond.end587
  %type591 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6957
  %precision592 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type591, i64 0, i32 6, !dbg !6957
  %bf.load593 = load i32, i32* %precision592, align 4, !dbg !6957
  %109 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3) to %struct.tree_type**), align 8, !dbg !6957
  %precision596 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %109, i64 0, i32 6, !dbg !6957
  %bf.load597 = load i32, i32* %precision596, align 4, !dbg !6957
  %110 = xor i32 %bf.load593, %bf.load597, !dbg !6957
  %111 = and i32 %110, 1023, !dbg !6957
  %cmp599 = icmp eq i32 %111, 0, !dbg !6957
  br i1 %cmp599, label %if.then600, label %if.end606, !dbg !6959

if.then600:                                       ; preds = %land.lhs.true590
  %112 = bitcast %struct.tree_type* %109 to %union.tree_node*, !dbg !6959
  %tobool601 = icmp eq i32 %unsignedp, 0, !dbg !6960
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !6960
  %cond605 = select i1 %tobool601, %union.tree_node* %112, %union.tree_node* %113, !dbg !6960
  br label %cleanup, !dbg !6960

if.end606:                                        ; preds = %land.lhs.true590, %cond.end587
  %bf.load608 = load i64, i64* %94, align 8, !dbg !6961
  %bf.cast61057 = and i64 %bf.load608, 65535, !dbg !6961
  %cmp611 = icmp eq i64 %bf.cast61057, 14, !dbg !6961
  br i1 %cmp611, label %cond.true612, label %cond.false614, !dbg !6961

cond.true612:                                     ; preds = %if.end606
  %call613 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6961
  br label %cond.end620, !dbg !6961

cond.false614:                                    ; preds = %if.end606
  %type615 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6961
  %mode616 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type615, i64 0, i32 6, !dbg !6961
  %bf.load617 = load i32, i32* %mode616, align 4, !dbg !6961
  %bf.lshr618 = lshr i32 %bf.load617, 16, !dbg !6961
  %bf.clear619 = and i32 %bf.lshr618, 255, !dbg !6961
  br label %cond.end620, !dbg !6961

cond.end620:                                      ; preds = %cond.false614, %cond.true612
  %cond621 = phi i32 [ %call613, %cond.true612 ], [ %bf.clear619, %cond.false614 ], !dbg !6961
  %114 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7) to i64**), align 8, !dbg !6961
  %bf.load623 = load i64, i64* %114, align 8, !dbg !6961
  %bf.cast62558 = and i64 %bf.load623, 65535, !dbg !6961
  %cmp626 = icmp eq i64 %bf.cast62558, 14, !dbg !6961
  br i1 %cmp626, label %cond.true627, label %cond.false629, !dbg !6961

cond.true627:                                     ; preds = %cond.end620
  %.cast59 = bitcast i64* %114 to %union.tree_node*, !dbg !6961
  %call628 = tail call i32 @vector_type_mode(%union.tree_node* %.cast59) #7, !dbg !6961
  br label %cond.end635, !dbg !6961

cond.false629:                                    ; preds = %cond.end620
  %type630 = bitcast i64* %114 to %struct.tree_type*, !dbg !6961
  %mode631 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type630, i64 0, i32 6, !dbg !6961
  %bf.load632 = load i32, i32* %mode631, align 4, !dbg !6961
  %bf.lshr633 = lshr i32 %bf.load632, 16, !dbg !6961
  %bf.clear634 = and i32 %bf.lshr633, 255, !dbg !6961
  br label %cond.end635, !dbg !6961

cond.end635:                                      ; preds = %cond.false629, %cond.true627
  %cond636 = phi i32 [ %call628, %cond.true627 ], [ %bf.clear634, %cond.false629 ], !dbg !6961
  %cmp637 = icmp eq i32 %cond621, %cond636, !dbg !6961
  br i1 %cmp637, label %land.lhs.true638, label %if.end654, !dbg !6961

land.lhs.true638:                                 ; preds = %cond.end635
  %type639 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6961
  %precision640 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type639, i64 0, i32 6, !dbg !6961
  %bf.load641 = load i32, i32* %precision640, align 4, !dbg !6961
  %115 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7) to %struct.tree_type**), align 8, !dbg !6961
  %precision644 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %115, i64 0, i32 6, !dbg !6961
  %bf.load645 = load i32, i32* %precision644, align 4, !dbg !6961
  %116 = xor i32 %bf.load641, %bf.load645, !dbg !6961
  %117 = and i32 %116, 1023, !dbg !6961
  %cmp647 = icmp eq i32 %117, 0, !dbg !6961
  br i1 %cmp647, label %if.then648, label %if.end654, !dbg !6963

if.then648:                                       ; preds = %land.lhs.true638
  %118 = bitcast %struct.tree_type* %115 to %union.tree_node*, !dbg !6963
  %tobool649 = icmp eq i32 %unsignedp, 0, !dbg !6964
  %119 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !6964
  %cond653 = select i1 %tobool649, %union.tree_node* %118, %union.tree_node* %119, !dbg !6964
  br label %cleanup, !dbg !6964

if.end654:                                        ; preds = %land.lhs.true638, %cond.end635
  %bf.load656 = load i64, i64* %94, align 8, !dbg !6965
  %bf.cast65860 = and i64 %bf.load656, 65535, !dbg !6965
  %cmp659 = icmp eq i64 %bf.cast65860, 14, !dbg !6965
  br i1 %cmp659, label %cond.true660, label %cond.false662, !dbg !6965

cond.true660:                                     ; preds = %if.end654
  %call661 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6965
  br label %cond.end668, !dbg !6965

cond.false662:                                    ; preds = %if.end654
  %type663 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6965
  %mode664 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type663, i64 0, i32 6, !dbg !6965
  %bf.load665 = load i32, i32* %mode664, align 4, !dbg !6965
  %bf.lshr666 = lshr i32 %bf.load665, 16, !dbg !6965
  %bf.clear667 = and i32 %bf.lshr666, 255, !dbg !6965
  br label %cond.end668, !dbg !6965

cond.end668:                                      ; preds = %cond.false662, %cond.true660
  %cond669 = phi i32 [ %call661, %cond.true660 ], [ %bf.clear667, %cond.false662 ], !dbg !6965
  %120 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9) to i64**), align 8, !dbg !6965
  %bf.load671 = load i64, i64* %120, align 8, !dbg !6965
  %bf.cast67361 = and i64 %bf.load671, 65535, !dbg !6965
  %cmp674 = icmp eq i64 %bf.cast67361, 14, !dbg !6965
  br i1 %cmp674, label %cond.true675, label %cond.false677, !dbg !6965

cond.true675:                                     ; preds = %cond.end668
  %.cast62 = bitcast i64* %120 to %union.tree_node*, !dbg !6965
  %call676 = tail call i32 @vector_type_mode(%union.tree_node* %.cast62) #7, !dbg !6965
  br label %cond.end683, !dbg !6965

cond.false677:                                    ; preds = %cond.end668
  %type678 = bitcast i64* %120 to %struct.tree_type*, !dbg !6965
  %mode679 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type678, i64 0, i32 6, !dbg !6965
  %bf.load680 = load i32, i32* %mode679, align 4, !dbg !6965
  %bf.lshr681 = lshr i32 %bf.load680, 16, !dbg !6965
  %bf.clear682 = and i32 %bf.lshr681, 255, !dbg !6965
  br label %cond.end683, !dbg !6965

cond.end683:                                      ; preds = %cond.false677, %cond.true675
  %cond684 = phi i32 [ %call676, %cond.true675 ], [ %bf.clear682, %cond.false677 ], !dbg !6965
  %cmp685 = icmp eq i32 %cond669, %cond684, !dbg !6965
  br i1 %cmp685, label %land.lhs.true686, label %if.end702, !dbg !6965

land.lhs.true686:                                 ; preds = %cond.end683
  %type687 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6965
  %precision688 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type687, i64 0, i32 6, !dbg !6965
  %bf.load689 = load i32, i32* %precision688, align 4, !dbg !6965
  %121 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9) to %struct.tree_type**), align 8, !dbg !6965
  %precision692 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %121, i64 0, i32 6, !dbg !6965
  %bf.load693 = load i32, i32* %precision692, align 4, !dbg !6965
  %122 = xor i32 %bf.load689, %bf.load693, !dbg !6965
  %123 = and i32 %122, 1023, !dbg !6965
  %cmp695 = icmp eq i32 %123, 0, !dbg !6965
  br i1 %cmp695, label %if.then696, label %if.end702, !dbg !6967

if.then696:                                       ; preds = %land.lhs.true686
  %124 = bitcast %struct.tree_type* %121 to %union.tree_node*, !dbg !6967
  %tobool697 = icmp eq i32 %unsignedp, 0, !dbg !6968
  %125 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !6968
  %cond701 = select i1 %tobool697, %union.tree_node* %124, %union.tree_node* %125, !dbg !6968
  br label %cleanup, !dbg !6968

if.end702:                                        ; preds = %land.lhs.true686, %cond.end683
  %bf.load704 = load i64, i64* %94, align 8, !dbg !6969
  %bf.cast70663 = and i64 %bf.load704, 65535, !dbg !6969
  %cmp707 = icmp eq i64 %bf.cast70663, 14, !dbg !6969
  br i1 %cmp707, label %cond.true708, label %cond.false710, !dbg !6969

cond.true708:                                     ; preds = %if.end702
  %call709 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6969
  br label %cond.end716, !dbg !6969

cond.false710:                                    ; preds = %if.end702
  %type711 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6969
  %mode712 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type711, i64 0, i32 6, !dbg !6969
  %bf.load713 = load i32, i32* %mode712, align 4, !dbg !6969
  %bf.lshr714 = lshr i32 %bf.load713, 16, !dbg !6969
  %bf.clear715 = and i32 %bf.lshr714, 255, !dbg !6969
  br label %cond.end716, !dbg !6969

cond.end716:                                      ; preds = %cond.false710, %cond.true708
  %cond717 = phi i32 [ %call709, %cond.true708 ], [ %bf.clear715, %cond.false710 ], !dbg !6969
  %126 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 9) to i64**), align 8, !dbg !6969
  %bf.load719 = load i64, i64* %126, align 8, !dbg !6969
  %bf.cast72164 = and i64 %bf.load719, 65535, !dbg !6969
  %cmp722 = icmp eq i64 %bf.cast72164, 14, !dbg !6969
  br i1 %cmp722, label %cond.true723, label %cond.false725, !dbg !6969

cond.true723:                                     ; preds = %cond.end716
  %.cast65 = bitcast i64* %126 to %union.tree_node*, !dbg !6969
  %call724 = tail call i32 @vector_type_mode(%union.tree_node* %.cast65) #7, !dbg !6969
  br label %cond.end731, !dbg !6969

cond.false725:                                    ; preds = %cond.end716
  %type726 = bitcast i64* %126 to %struct.tree_type*, !dbg !6969
  %mode727 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type726, i64 0, i32 6, !dbg !6969
  %bf.load728 = load i32, i32* %mode727, align 4, !dbg !6969
  %bf.lshr729 = lshr i32 %bf.load728, 16, !dbg !6969
  %bf.clear730 = and i32 %bf.lshr729, 255, !dbg !6969
  br label %cond.end731, !dbg !6969

cond.end731:                                      ; preds = %cond.false725, %cond.true723
  %cond732 = phi i32 [ %call724, %cond.true723 ], [ %bf.clear730, %cond.false725 ], !dbg !6969
  %cmp733 = icmp eq i32 %cond717, %cond732, !dbg !6969
  br i1 %cmp733, label %land.lhs.true734, label %if.end750, !dbg !6969

land.lhs.true734:                                 ; preds = %cond.end731
  %type735 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6969
  %precision736 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type735, i64 0, i32 6, !dbg !6969
  %bf.load737 = load i32, i32* %precision736, align 4, !dbg !6969
  %127 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 9) to %struct.tree_type**), align 8, !dbg !6969
  %precision740 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %127, i64 0, i32 6, !dbg !6969
  %bf.load741 = load i32, i32* %precision740, align 4, !dbg !6969
  %128 = xor i32 %bf.load737, %bf.load741, !dbg !6969
  %129 = and i32 %128, 1023, !dbg !6969
  %cmp743 = icmp eq i32 %129, 0, !dbg !6969
  br i1 %cmp743, label %if.then744, label %if.end750, !dbg !6971

if.then744:                                       ; preds = %land.lhs.true734
  %130 = bitcast %struct.tree_type* %127 to %union.tree_node*, !dbg !6971
  %tobool745 = icmp eq i32 %unsignedp, 0, !dbg !6972
  %131 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 10), align 16, !dbg !6972
  %cond749 = select i1 %tobool745, %union.tree_node* %130, %union.tree_node* %131, !dbg !6972
  br label %cleanup, !dbg !6972

if.end750:                                        ; preds = %land.lhs.true734, %cond.end731
  %bf.load752 = load i64, i64* %94, align 8, !dbg !6973
  %bf.cast75466 = and i64 %bf.load752, 65535, !dbg !6973
  %cmp755 = icmp eq i64 %bf.cast75466, 14, !dbg !6973
  br i1 %cmp755, label %cond.true756, label %cond.false758, !dbg !6973

cond.true756:                                     ; preds = %if.end750
  %call757 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6973
  br label %cond.end764, !dbg !6973

cond.false758:                                    ; preds = %if.end750
  %type759 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6973
  %mode760 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type759, i64 0, i32 6, !dbg !6973
  %bf.load761 = load i32, i32* %mode760, align 4, !dbg !6973
  %bf.lshr762 = lshr i32 %bf.load761, 16, !dbg !6973
  %bf.clear763 = and i32 %bf.lshr762, 255, !dbg !6973
  br label %cond.end764, !dbg !6973

cond.end764:                                      ; preds = %cond.false758, %cond.true756
  %cond765 = phi i32 [ %call757, %cond.true756 ], [ %bf.clear763, %cond.false758 ], !dbg !6973
  %132 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 5) to i64**), align 8, !dbg !6973
  %bf.load767 = load i64, i64* %132, align 8, !dbg !6973
  %bf.cast76967 = and i64 %bf.load767, 65535, !dbg !6973
  %cmp770 = icmp eq i64 %bf.cast76967, 14, !dbg !6973
  br i1 %cmp770, label %cond.true771, label %cond.false773, !dbg !6973

cond.true771:                                     ; preds = %cond.end764
  %.cast68 = bitcast i64* %132 to %union.tree_node*, !dbg !6973
  %call772 = tail call i32 @vector_type_mode(%union.tree_node* %.cast68) #7, !dbg !6973
  br label %cond.end779, !dbg !6973

cond.false773:                                    ; preds = %cond.end764
  %type774 = bitcast i64* %132 to %struct.tree_type*, !dbg !6973
  %mode775 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type774, i64 0, i32 6, !dbg !6973
  %bf.load776 = load i32, i32* %mode775, align 4, !dbg !6973
  %bf.lshr777 = lshr i32 %bf.load776, 16, !dbg !6973
  %bf.clear778 = and i32 %bf.lshr777, 255, !dbg !6973
  br label %cond.end779, !dbg !6973

cond.end779:                                      ; preds = %cond.false773, %cond.true771
  %cond780 = phi i32 [ %call772, %cond.true771 ], [ %bf.clear778, %cond.false773 ], !dbg !6973
  %cmp781 = icmp eq i32 %cond765, %cond780, !dbg !6973
  br i1 %cmp781, label %land.lhs.true782, label %if.end798, !dbg !6973

land.lhs.true782:                                 ; preds = %cond.end779
  %type783 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6973
  %precision784 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type783, i64 0, i32 6, !dbg !6973
  %bf.load785 = load i32, i32* %precision784, align 4, !dbg !6973
  %133 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !6973
  %precision788 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %133, i64 0, i32 6, !dbg !6973
  %bf.load789 = load i32, i32* %precision788, align 4, !dbg !6973
  %134 = xor i32 %bf.load785, %bf.load789, !dbg !6973
  %135 = and i32 %134, 1023, !dbg !6973
  %cmp791 = icmp eq i32 %135, 0, !dbg !6973
  br i1 %cmp791, label %if.then792, label %if.end798, !dbg !6975

if.then792:                                       ; preds = %land.lhs.true782
  %136 = bitcast %struct.tree_type* %133 to %union.tree_node*, !dbg !6975
  %tobool793 = icmp eq i32 %unsignedp, 0, !dbg !6976
  %137 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 10), align 16, !dbg !6976
  %cond797 = select i1 %tobool793, %union.tree_node* %136, %union.tree_node* %137, !dbg !6976
  br label %cleanup, !dbg !6976

if.end798:                                        ; preds = %land.lhs.true782, %cond.end779
  %bf.load800 = load i64, i64* %94, align 8, !dbg !6977
  %bf.cast80269 = and i64 %bf.load800, 65535, !dbg !6977
  %cmp803 = icmp eq i64 %bf.cast80269, 14, !dbg !6977
  br i1 %cmp803, label %cond.true804, label %cond.false806, !dbg !6977

cond.true804:                                     ; preds = %if.end798
  %call805 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6977
  br label %cond.end812, !dbg !6977

cond.false806:                                    ; preds = %if.end798
  %type807 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6977
  %mode808 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type807, i64 0, i32 6, !dbg !6977
  %bf.load809 = load i32, i32* %mode808, align 4, !dbg !6977
  %bf.lshr810 = lshr i32 %bf.load809, 16, !dbg !6977
  %bf.clear811 = and i32 %bf.lshr810, 255, !dbg !6977
  br label %cond.end812, !dbg !6977

cond.end812:                                      ; preds = %cond.false806, %cond.true804
  %cond813 = phi i32 [ %call805, %cond.true804 ], [ %bf.clear811, %cond.false806 ], !dbg !6977
  %138 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 4) to i64**), align 16, !dbg !6977
  %bf.load815 = load i64, i64* %138, align 8, !dbg !6977
  %bf.cast81770 = and i64 %bf.load815, 65535, !dbg !6977
  %cmp818 = icmp eq i64 %bf.cast81770, 14, !dbg !6977
  br i1 %cmp818, label %cond.true819, label %cond.false821, !dbg !6977

cond.true819:                                     ; preds = %cond.end812
  %.cast71 = bitcast i64* %138 to %union.tree_node*, !dbg !6977
  %call820 = tail call i32 @vector_type_mode(%union.tree_node* %.cast71) #7, !dbg !6977
  br label %cond.end827, !dbg !6977

cond.false821:                                    ; preds = %cond.end812
  %type822 = bitcast i64* %138 to %struct.tree_type*, !dbg !6977
  %mode823 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type822, i64 0, i32 6, !dbg !6977
  %bf.load824 = load i32, i32* %mode823, align 4, !dbg !6977
  %bf.lshr825 = lshr i32 %bf.load824, 16, !dbg !6977
  %bf.clear826 = and i32 %bf.lshr825, 255, !dbg !6977
  br label %cond.end827, !dbg !6977

cond.end827:                                      ; preds = %cond.false821, %cond.true819
  %cond828 = phi i32 [ %call820, %cond.true819 ], [ %bf.clear826, %cond.false821 ], !dbg !6977
  %cmp829 = icmp eq i32 %cond813, %cond828, !dbg !6977
  br i1 %cmp829, label %land.lhs.true830, label %if.end846, !dbg !6977

land.lhs.true830:                                 ; preds = %cond.end827
  %type831 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6977
  %precision832 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type831, i64 0, i32 6, !dbg !6977
  %bf.load833 = load i32, i32* %precision832, align 4, !dbg !6977
  %139 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 4) to %struct.tree_type**), align 16, !dbg !6977
  %precision836 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %139, i64 0, i32 6, !dbg !6977
  %bf.load837 = load i32, i32* %precision836, align 4, !dbg !6977
  %140 = xor i32 %bf.load833, %bf.load837, !dbg !6977
  %141 = and i32 %140, 1023, !dbg !6977
  %cmp839 = icmp eq i32 %141, 0, !dbg !6977
  br i1 %cmp839, label %if.then840, label %if.end846, !dbg !6979

if.then840:                                       ; preds = %land.lhs.true830
  %142 = bitcast %struct.tree_type* %139 to %union.tree_node*, !dbg !6979
  %tobool841 = icmp eq i32 %unsignedp, 0, !dbg !6980
  %143 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 9), align 8, !dbg !6980
  %cond845 = select i1 %tobool841, %union.tree_node* %142, %union.tree_node* %143, !dbg !6980
  br label %cleanup, !dbg !6980

if.end846:                                        ; preds = %land.lhs.true830, %cond.end827
  %bf.load848 = load i64, i64* %94, align 8, !dbg !6981
  %bf.cast85072 = and i64 %bf.load848, 65535, !dbg !6981
  %cmp851 = icmp eq i64 %bf.cast85072, 14, !dbg !6981
  br i1 %cmp851, label %cond.true852, label %cond.false854, !dbg !6981

cond.true852:                                     ; preds = %if.end846
  %call853 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6981
  br label %cond.end860, !dbg !6981

cond.false854:                                    ; preds = %if.end846
  %type855 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6981
  %mode856 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type855, i64 0, i32 6, !dbg !6981
  %bf.load857 = load i32, i32* %mode856, align 4, !dbg !6981
  %bf.lshr858 = lshr i32 %bf.load857, 16, !dbg !6981
  %bf.clear859 = and i32 %bf.lshr858, 255, !dbg !6981
  br label %cond.end860, !dbg !6981

cond.end860:                                      ; preds = %cond.false854, %cond.true852
  %cond861 = phi i32 [ %call853, %cond.true852 ], [ %bf.clear859, %cond.false854 ], !dbg !6981
  %144 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 3) to i64**), align 8, !dbg !6981
  %bf.load863 = load i64, i64* %144, align 8, !dbg !6981
  %bf.cast86573 = and i64 %bf.load863, 65535, !dbg !6981
  %cmp866 = icmp eq i64 %bf.cast86573, 14, !dbg !6981
  br i1 %cmp866, label %cond.true867, label %cond.false869, !dbg !6981

cond.true867:                                     ; preds = %cond.end860
  %.cast74 = bitcast i64* %144 to %union.tree_node*, !dbg !6981
  %call868 = tail call i32 @vector_type_mode(%union.tree_node* %.cast74) #7, !dbg !6981
  br label %cond.end875, !dbg !6981

cond.false869:                                    ; preds = %cond.end860
  %type870 = bitcast i64* %144 to %struct.tree_type*, !dbg !6981
  %mode871 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type870, i64 0, i32 6, !dbg !6981
  %bf.load872 = load i32, i32* %mode871, align 4, !dbg !6981
  %bf.lshr873 = lshr i32 %bf.load872, 16, !dbg !6981
  %bf.clear874 = and i32 %bf.lshr873, 255, !dbg !6981
  br label %cond.end875, !dbg !6981

cond.end875:                                      ; preds = %cond.false869, %cond.true867
  %cond876 = phi i32 [ %call868, %cond.true867 ], [ %bf.clear874, %cond.false869 ], !dbg !6981
  %cmp877 = icmp eq i32 %cond861, %cond876, !dbg !6981
  br i1 %cmp877, label %land.lhs.true878, label %if.end894, !dbg !6981

land.lhs.true878:                                 ; preds = %cond.end875
  %type879 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6981
  %precision880 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type879, i64 0, i32 6, !dbg !6981
  %bf.load881 = load i32, i32* %precision880, align 4, !dbg !6981
  %145 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 3) to %struct.tree_type**), align 8, !dbg !6981
  %precision884 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %145, i64 0, i32 6, !dbg !6981
  %bf.load885 = load i32, i32* %precision884, align 4, !dbg !6981
  %146 = xor i32 %bf.load881, %bf.load885, !dbg !6981
  %147 = and i32 %146, 1023, !dbg !6981
  %cmp887 = icmp eq i32 %147, 0, !dbg !6981
  br i1 %cmp887, label %if.then888, label %if.end894, !dbg !6983

if.then888:                                       ; preds = %land.lhs.true878
  %148 = bitcast %struct.tree_type* %145 to %union.tree_node*, !dbg !6983
  %tobool889 = icmp eq i32 %unsignedp, 0, !dbg !6984
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 8), align 16, !dbg !6984
  %cond893 = select i1 %tobool889, %union.tree_node* %148, %union.tree_node* %149, !dbg !6984
  br label %cleanup, !dbg !6984

if.end894:                                        ; preds = %land.lhs.true878, %cond.end875
  %bf.load896 = load i64, i64* %94, align 8, !dbg !6985
  %bf.cast89875 = and i64 %bf.load896, 65535, !dbg !6985
  %cmp899 = icmp eq i64 %bf.cast89875, 14, !dbg !6985
  br i1 %cmp899, label %cond.true900, label %cond.false902, !dbg !6985

cond.true900:                                     ; preds = %if.end894
  %call901 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6985
  br label %cond.end908, !dbg !6985

cond.false902:                                    ; preds = %if.end894
  %type903 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6985
  %mode904 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type903, i64 0, i32 6, !dbg !6985
  %bf.load905 = load i32, i32* %mode904, align 4, !dbg !6985
  %bf.lshr906 = lshr i32 %bf.load905, 16, !dbg !6985
  %bf.clear907 = and i32 %bf.lshr906, 255, !dbg !6985
  br label %cond.end908, !dbg !6985

cond.end908:                                      ; preds = %cond.false902, %cond.true900
  %cond909 = phi i32 [ %call901, %cond.true900 ], [ %bf.clear907, %cond.false902 ], !dbg !6985
  %150 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 2) to i64**), align 16, !dbg !6985
  %bf.load911 = load i64, i64* %150, align 8, !dbg !6985
  %bf.cast91376 = and i64 %bf.load911, 65535, !dbg !6985
  %cmp914 = icmp eq i64 %bf.cast91376, 14, !dbg !6985
  br i1 %cmp914, label %cond.true915, label %cond.false917, !dbg !6985

cond.true915:                                     ; preds = %cond.end908
  %.cast77 = bitcast i64* %150 to %union.tree_node*, !dbg !6985
  %call916 = tail call i32 @vector_type_mode(%union.tree_node* %.cast77) #7, !dbg !6985
  br label %cond.end923, !dbg !6985

cond.false917:                                    ; preds = %cond.end908
  %type918 = bitcast i64* %150 to %struct.tree_type*, !dbg !6985
  %mode919 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type918, i64 0, i32 6, !dbg !6985
  %bf.load920 = load i32, i32* %mode919, align 4, !dbg !6985
  %bf.lshr921 = lshr i32 %bf.load920, 16, !dbg !6985
  %bf.clear922 = and i32 %bf.lshr921, 255, !dbg !6985
  br label %cond.end923, !dbg !6985

cond.end923:                                      ; preds = %cond.false917, %cond.true915
  %cond924 = phi i32 [ %call916, %cond.true915 ], [ %bf.clear922, %cond.false917 ], !dbg !6985
  %cmp925 = icmp eq i32 %cond909, %cond924, !dbg !6985
  br i1 %cmp925, label %land.lhs.true926, label %if.end942, !dbg !6985

land.lhs.true926:                                 ; preds = %cond.end923
  %type927 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6985
  %precision928 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type927, i64 0, i32 6, !dbg !6985
  %bf.load929 = load i32, i32* %precision928, align 4, !dbg !6985
  %151 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 2) to %struct.tree_type**), align 16, !dbg !6985
  %precision932 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %151, i64 0, i32 6, !dbg !6985
  %bf.load933 = load i32, i32* %precision932, align 4, !dbg !6985
  %152 = xor i32 %bf.load929, %bf.load933, !dbg !6985
  %153 = and i32 %152, 1023, !dbg !6985
  %cmp935 = icmp eq i32 %153, 0, !dbg !6985
  br i1 %cmp935, label %if.then936, label %if.end942, !dbg !6987

if.then936:                                       ; preds = %land.lhs.true926
  %154 = bitcast %struct.tree_type* %151 to %union.tree_node*, !dbg !6987
  %tobool937 = icmp eq i32 %unsignedp, 0, !dbg !6988
  %155 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 7), align 8, !dbg !6988
  %cond941 = select i1 %tobool937, %union.tree_node* %154, %union.tree_node* %155, !dbg !6988
  br label %cleanup, !dbg !6988

if.end942:                                        ; preds = %land.lhs.true926, %cond.end923
  %bf.load944 = load i64, i64* %94, align 8, !dbg !6989
  %bf.cast94678 = and i64 %bf.load944, 65535, !dbg !6989
  %cmp947 = icmp eq i64 %bf.cast94678, 14, !dbg !6989
  br i1 %cmp947, label %cond.true948, label %cond.false950, !dbg !6989

cond.true948:                                     ; preds = %if.end942
  %call949 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !6989
  br label %cond.end956, !dbg !6989

cond.false950:                                    ; preds = %if.end942
  %type951 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6989
  %mode952 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type951, i64 0, i32 6, !dbg !6989
  %bf.load953 = load i32, i32* %mode952, align 4, !dbg !6989
  %bf.lshr954 = lshr i32 %bf.load953, 16, !dbg !6989
  %bf.clear955 = and i32 %bf.lshr954, 255, !dbg !6989
  br label %cond.end956, !dbg !6989

cond.end956:                                      ; preds = %cond.false950, %cond.true948
  %cond957 = phi i32 [ %call949, %cond.true948 ], [ %bf.clear955, %cond.false950 ], !dbg !6989
  %156 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 1) to i64**), align 8, !dbg !6989
  %bf.load959 = load i64, i64* %156, align 8, !dbg !6989
  %bf.cast96179 = and i64 %bf.load959, 65535, !dbg !6989
  %cmp962 = icmp eq i64 %bf.cast96179, 14, !dbg !6989
  br i1 %cmp962, label %cond.true963, label %cond.false965, !dbg !6989

cond.true963:                                     ; preds = %cond.end956
  %.cast80 = bitcast i64* %156 to %union.tree_node*, !dbg !6989
  %call964 = tail call i32 @vector_type_mode(%union.tree_node* %.cast80) #7, !dbg !6989
  br label %cond.end971, !dbg !6989

cond.false965:                                    ; preds = %cond.end956
  %type966 = bitcast i64* %156 to %struct.tree_type*, !dbg !6989
  %mode967 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type966, i64 0, i32 6, !dbg !6989
  %bf.load968 = load i32, i32* %mode967, align 4, !dbg !6989
  %bf.lshr969 = lshr i32 %bf.load968, 16, !dbg !6989
  %bf.clear970 = and i32 %bf.lshr969, 255, !dbg !6989
  br label %cond.end971, !dbg !6989

cond.end971:                                      ; preds = %cond.false965, %cond.true963
  %cond972 = phi i32 [ %call964, %cond.true963 ], [ %bf.clear970, %cond.false965 ], !dbg !6989
  %cmp973 = icmp eq i32 %cond957, %cond972, !dbg !6989
  br i1 %cmp973, label %land.lhs.true974, label %cond.end971.if.end990_crit_edge, !dbg !6989

cond.end971.if.end990_crit_edge:                  ; preds = %cond.end971
  %type991.phi.trans.insert = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6794
  %precision992.phi.trans.insert = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type991.phi.trans.insert, i64 0, i32 6, !dbg !6794
  %bf.load993.pre = load i32, i32* %precision992.phi.trans.insert, align 4, !dbg !6991
  br label %if.end990, !dbg !6989

land.lhs.true974:                                 ; preds = %cond.end971
  %type975 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6989
  %precision976 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type975, i64 0, i32 6, !dbg !6989
  %bf.load977 = load i32, i32* %precision976, align 4, !dbg !6989
  %157 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 1) to %struct.tree_type**), align 8, !dbg !6989
  %precision980 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %157, i64 0, i32 6, !dbg !6989
  %bf.load981 = load i32, i32* %precision980, align 4, !dbg !6989
  %158 = xor i32 %bf.load977, %bf.load981, !dbg !6989
  %159 = and i32 %158, 1023, !dbg !6989
  %cmp983 = icmp eq i32 %159, 0, !dbg !6989
  br i1 %cmp983, label %if.then984, label %if.end990, !dbg !6992

if.then984:                                       ; preds = %land.lhs.true974
  %160 = bitcast %struct.tree_type* %157 to %union.tree_node*, !dbg !6992
  %tobool985 = icmp eq i32 %unsignedp, 0, !dbg !6993
  %161 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 6), align 16, !dbg !6993
  %cond989 = select i1 %tobool985, %union.tree_node* %160, %union.tree_node* %161, !dbg !6993
  br label %cleanup, !dbg !6993

if.end990:                                        ; preds = %cond.end971.if.end990_crit_edge, %land.lhs.true974
  %bf.load993 = phi i32 [ %bf.load993.pre, %cond.end971.if.end990_crit_edge ], [ %bf.load977, %land.lhs.true974 ], !dbg !6991
  %bf.clear994 = and i32 %bf.load993, 1023, !dbg !6991
  %conv = zext i32 %bf.clear994 to i64, !dbg !6991
  %call995 = tail call %union.tree_node* @build_nonstandard_integer_type(i64 %conv, i32 %unsignedp) #7, !dbg !6994
  br label %cleanup, !dbg !6995

cleanup:                                          ; preds = %if.then984, %if.then936, %if.then888, %if.then840, %if.then792, %if.then744, %if.then696, %if.then648, %if.then600, %if.then552, %if.then504, %lor.lhs.false453, %lor.lhs.false459, %if.then439, %if.then429, %if.then419, %if.then409, %if.then399, %if.then389, %if.then379, %if.then369, %if.then359, %if.then349, %if.then339, %if.then329, %if.then319, %if.then309, %if.then299, %if.then289, %if.then279, %if.then269, %if.then259, %if.then249, %if.then239, %if.then229, %if.then219, %if.then209, %if.then199, %if.then189, %if.then179, %if.then169, %if.then159, %if.then149, %if.then139, %if.then129, %if.then119, %if.then109, %if.then99, %if.then89, %if.then79, %if.then69, %if.then59, %if.then49, %if.then39, %if.then29, %if.then19, %if.then9, %if.then, %if.end990
  %retval.0 = phi %union.tree_node* [ %call995, %if.end990 ], [ %cond, %if.then ], [ %cond14, %if.then9 ], [ %cond24, %if.then19 ], [ %cond34, %if.then29 ], [ %cond44, %if.then39 ], [ %cond54, %if.then49 ], [ %cond64, %if.then59 ], [ %cond74, %if.then69 ], [ %cond84, %if.then79 ], [ %cond94, %if.then89 ], [ %cond104, %if.then99 ], [ %cond114, %if.then109 ], [ %cond124, %if.then119 ], [ %cond134, %if.then129 ], [ %cond144, %if.then139 ], [ %cond154, %if.then149 ], [ %cond164, %if.then159 ], [ %cond174, %if.then169 ], [ %cond184, %if.then179 ], [ %cond194, %if.then189 ], [ %cond204, %if.then199 ], [ %cond214, %if.then209 ], [ %cond224, %if.then219 ], [ %cond234, %if.then229 ], [ %cond244, %if.then239 ], [ %cond254, %if.then249 ], [ %cond264, %if.then259 ], [ %cond274, %if.then269 ], [ %cond284, %if.then279 ], [ %cond294, %if.then289 ], [ %cond304, %if.then299 ], [ %cond314, %if.then309 ], [ %cond324, %if.then319 ], [ %cond334, %if.then329 ], [ %cond344, %if.then339 ], [ %cond354, %if.then349 ], [ %cond364, %if.then359 ], [ %cond374, %if.then369 ], [ %cond384, %if.then379 ], [ %cond394, %if.then389 ], [ %cond404, %if.then399 ], [ %cond414, %if.then409 ], [ %cond424, %if.then419 ], [ %cond434, %if.then429 ], [ %cond444, %if.then439 ], [ %type, %lor.lhs.false459 ], [ %type, %lor.lhs.false453 ], [ %cond509, %if.then504 ], [ %cond557, %if.then552 ], [ %cond605, %if.then600 ], [ %cond653, %if.then648 ], [ %cond701, %if.then696 ], [ %cond749, %if.then744 ], [ %cond797, %if.then792 ], [ %cond845, %if.then840 ], [ %cond893, %if.then888 ], [ %cond941, %if.then936 ], [ %cond989, %if.then984 ], !dbg !6794
  ret %union.tree_node* %retval.0, !dbg !6996
}

declare dso_local %union.tree_node* @common_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @warnings_for_convert_and_check(%union.tree_node* %type, %union.tree_node* %expr, %union.tree_node* %result) local_unnamed_addr #5 !dbg !6997 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7001, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7002, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !7003, metadata !DIExpression()), !dbg !7004
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7005
  %bf.load = load i64, i64* %0, align 8, !dbg !7005
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7007
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !7007
  br i1 %cmp, label %land.lhs.true, label %if.else71, !dbg !7008

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7009
  %bf.load2 = load i64, i64* %1, align 8, !dbg !7009
  %bf.cast45 = and i64 %bf.load2, 65535, !dbg !7010
  %cmp5 = icmp eq i64 %bf.cast45, 8, !dbg !7010
  br i1 %cmp5, label %land.lhs.true11, label %lor.lhs.false, !dbg !7011

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp10 = icmp eq i64 %bf.cast45, 6, !dbg !7012
  br i1 %cmp10, label %land.lhs.true11, label %if.else71, !dbg !7013

land.lhs.true11:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %call = tail call i32 @int_fits_type_p(%union.tree_node* %expr, %union.tree_node* %type) #7, !dbg !7014
  %tobool = icmp eq i32 %call, 0, !dbg !7014
  br i1 %tobool, label %if.then, label %if.else71, !dbg !7015

if.then:                                          ; preds = %land.lhs.true11
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %result, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7016
  %bf.load13 = load i64, i64* %2, align 8, !dbg !7016
  %bf.cast157 = and i64 %bf.load13, 134217728, !dbg !7016
  %tobool16 = icmp eq i64 %bf.cast157, 0, !dbg !7016
  br i1 %tobool16, label %if.end, label %if.then17, !dbg !7019

if.then17:                                        ; preds = %if.then
  %bf.load19 = load i64, i64* %0, align 8, !dbg !7020
  %bf.cast22 = and i64 %bf.load19, 134217728, !dbg !7020
  %bf.clear25 = and i64 %bf.load13, -134217729, !dbg !7021
  %bf.set = or i64 %bf.clear25, %bf.cast22, !dbg !7021
  store i64 %bf.set, i64* %2, align 8, !dbg !7021
  br label %if.end, !dbg !7022

if.end:                                           ; preds = %if.then, %if.then17
  %bf.load27 = load i64, i64* %1, align 8, !dbg !7023
  %bf.cast308 = and i64 %bf.load27, 2097152, !dbg !7023
  %tobool31 = icmp eq i64 %bf.cast308, 0, !dbg !7023
  br i1 %tobool31, label %if.else39, label %if.then32, !dbg !7025

if.then32:                                        ; preds = %if.end
  %call33 = tail call %union.tree_node* @c_common_signed_type(%union.tree_node* %type) #8, !dbg !7026
  %call34 = tail call i32 @int_fits_type_p(%union.tree_node* %expr, %union.tree_node* %call33) #7, !dbg !7029
  %tobool35 = icmp eq i32 %call34, 0, !dbg !7029
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !7030

if.then36:                                        ; preds = %if.then32
  %call37 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 151, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.225, i64 0, i64 0)) #7, !dbg !7031
  br label %if.end94, !dbg !7031

if.else:                                          ; preds = %if.then32
  tail call fastcc void @conversion_warning(%union.tree_node* %type, %union.tree_node* %expr) #8, !dbg !7032
  br label %if.end94

if.else39:                                        ; preds = %if.end
  %call40 = tail call %union.tree_node* @c_common_unsigned_type(%union.tree_node* %type) #8, !dbg !7033
  %call41 = tail call i32 @int_fits_type_p(%union.tree_node* %expr, %union.tree_node* %call40) #7, !dbg !7035
  %tobool42 = icmp eq i32 %call41, 0, !dbg !7035
  br i1 %tobool42, label %if.then43, label %if.else45, !dbg !7036

if.then43:                                        ; preds = %if.else39
  %call44 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 151, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.226, i64 0, i64 0)) #7, !dbg !7037
  br label %if.end94, !dbg !7037

if.else45:                                        ; preds = %if.else39
  %3 = load i32, i32* @pedantic, align 4, !dbg !7038
  %tobool46 = icmp eq i32 %3, 0, !dbg !7038
  br i1 %tobool46, label %if.else67, label %land.lhs.true47, !dbg !7040

land.lhs.true47:                                  ; preds = %if.else45
  %type48 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7041
  %4 = bitcast %union.tree_node** %type48 to i64**, !dbg !7041
  %5 = load i64*, i64** %4, align 8, !dbg !7041
  %bf.load50 = load i64, i64* %5, align 8, !dbg !7041
  %bf.cast529 = and i64 %bf.load50, 65535, !dbg !7042
  %cmp53 = icmp eq i64 %bf.cast529, 8, !dbg !7042
  br i1 %cmp53, label %lor.lhs.false54, label %if.then65, !dbg !7043

lor.lhs.false54:                                  ; preds = %land.lhs.true47
  %6 = bitcast i64* %5 to %struct.tree_type*, !dbg !7043
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 6, !dbg !7044
  %bf.load58 = load i32, i32* %precision, align 4, !dbg !7044
  %type60 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7045
  %precision61 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type60, i64 0, i32 6, !dbg !7045
  %bf.load62 = load i32, i32* %precision61, align 4, !dbg !7045
  %7 = xor i32 %bf.load58, %bf.load62, !dbg !7046
  %8 = and i32 %7, 1023, !dbg !7046
  %cmp64 = icmp eq i32 %8, 0, !dbg !7046
  br i1 %cmp64, label %if.else67, label %if.then65, !dbg !7047

if.then65:                                        ; preds = %lor.lhs.false54, %land.lhs.true47
  %call66 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 151, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.226, i64 0, i64 0)) #7, !dbg !7048
  br label %if.end94, !dbg !7048

if.else67:                                        ; preds = %lor.lhs.false54, %if.else45
  tail call fastcc void @conversion_warning(%union.tree_node* %type, %union.tree_node* %expr) #8, !dbg !7049
  br label %if.end94

if.else71:                                        ; preds = %land.lhs.true11, %lor.lhs.false, %entry
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %result, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7050
  %bf.load73 = load i64, i64* %9, align 8, !dbg !7050
  %bf.cast752 = and i64 %bf.load73, 65535, !dbg !7052
  %cmp76 = icmp eq i64 %bf.cast752, 23, !dbg !7052
  br i1 %cmp76, label %land.lhs.true83, label %lor.lhs.false77, !dbg !7053

lor.lhs.false77:                                  ; preds = %if.else71
  %cmp82 = icmp eq i64 %bf.cast752, 25, !dbg !7054
  br i1 %cmp82, label %land.lhs.true83, label %if.else92, !dbg !7055

land.lhs.true83:                                  ; preds = %lor.lhs.false77, %if.else71
  %bf.cast884 = and i64 %bf.load73, 134217728, !dbg !7056
  %tobool89 = icmp eq i64 %bf.cast884, 0, !dbg !7056
  br i1 %tobool89, label %if.else92, label %if.then90, !dbg !7057

if.then90:                                        ; preds = %land.lhs.true83
  %call91 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 151, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.226, i64 0, i64 0)) #7, !dbg !7058
  br label %if.end94, !dbg !7058

if.else92:                                        ; preds = %land.lhs.true83, %lor.lhs.false77
  tail call fastcc void @conversion_warning(%union.tree_node* %type, %union.tree_node* %expr) #8, !dbg !7059
  br label %if.end94

if.end94:                                         ; preds = %if.then90, %if.else92, %if.else, %if.then36, %if.then65, %if.else67, %if.then43
  ret void, !dbg !7060
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_common_signed_type(%union.tree_node* %type) local_unnamed_addr #5 !dbg !7061 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7063, metadata !DIExpression()), !dbg !7064
  %call = tail call %union.tree_node* @c_common_signed_or_unsigned_type(i32 0, %union.tree_node* %type) #8, !dbg !7065
  ret %union.tree_node* %call, !dbg !7066
}

; Function Attrs: nounwind uwtable
define internal fastcc void @conversion_warning(%union.tree_node* %type, %union.tree_node* %expr) unnamed_addr #5 !dbg !7067 {
entry:
  %a = alloca %struct.real_value, align 8
  %a161 = alloca %struct.real_value, align 8
  %real_low_bound = alloca %struct.real_value, align 8
  %real_high_bound = alloca %struct.real_value, align 8
  %tmp = alloca %struct.real_value, align 8
  %tmp460 = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7071, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7072, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8 0, metadata !7073, metadata !DIExpression()), !dbg !7112
  %call = tail call fastcc i32 @tree_operand_length(%union.tree_node* %expr) #8, !dbg !7113
  call void @llvm.dbg.value(metadata i32 %call, metadata !7075, metadata !DIExpression()), !dbg !7112
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7114
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !7114
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7076, metadata !DIExpression()), !dbg !7112
  %1 = load i32, i32* @warn_conversion, align 4, !dbg !7115
  %2 = load i32, i32* @warn_sign_conversion, align 4, !dbg !7117
  %3 = or i32 %1, %2, !dbg !7118
  %4 = icmp eq i32 %3, 0, !dbg !7118
  br i1 %4, label %cleanup.cont539, label %for.cond.preheader, !dbg !7118

for.cond.preheader:                               ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7119
  %5 = sext i32 %call to i64, !dbg !7120
  br label %for.cond, !dbg !7120

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !7121
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7074, metadata !DIExpression()), !dbg !7112
  %cmp = icmp slt i64 %indvars.iv, %5, !dbg !7122
  br i1 %cmp, label %for.body, label %for.end, !dbg !7120

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !7123
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7123
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7077, metadata !DIExpression()), !dbg !7119
  %tobool3 = icmp eq %union.tree_node* %6, null, !dbg !7124
  br i1 %tobool3, label %if.end14, label %land.lhs.true4, !dbg !7126

land.lhs.true4:                                   ; preds = %for.body
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7127
  %bf.load = load i64, i64* %7, align 8, !dbg !7127
  %bf.cast = and i64 %bf.load, 65535, !dbg !7127
  %arrayidx6 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7127
  %8 = load i32, i32* %arrayidx6, align 4, !dbg !7127
  %cmp7 = icmp eq i32 %8, 3, !dbg !7127
  br i1 %cmp7, label %land.lhs.true8, label %if.end14, !dbg !7128

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7129
  %9 = bitcast i40* %artificial_flag to i64*, !dbg !7129
  %bf.load9 = load i64, i64* %9, align 8, !dbg !7129
  %bf.cast1152 = and i64 %bf.load9, 4096, !dbg !7129
  %tobool12 = icmp eq i64 %bf.cast1152, 0, !dbg !7129
  br i1 %tobool12, label %if.end14, label %cleanup, !dbg !7130

if.end14:                                         ; preds = %land.lhs.true8, %for.body, %land.lhs.true4
  br label %cleanup, !dbg !7131

cleanup:                                          ; preds = %land.lhs.true8, %if.end14
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end14 ], [ false, %land.lhs.true8 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup.cont539.loopexit

for.inc:                                          ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7132
  call void @llvm.dbg.value(metadata i32 undef, metadata !7074, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7112
  br label %for.cond, !dbg !7133, !llvm.loop !7134

for.end:                                          ; preds = %for.cond
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7136
  %bf.load16 = load i64, i64* %10, align 8, !dbg !7136
  %11 = trunc i64 %bf.load16 to i16, !dbg !7136
  switch i16 %11, label %sw.default [
    i16 101, label %sw.bb
    i16 102, label %sw.bb
    i16 98, label %sw.bb
    i16 100, label %sw.bb
    i16 97, label %sw.bb
    i16 99, label %sw.bb
    i16 91, label %sw.bb
    i16 92, label %sw.bb
    i16 93, label %sw.bb
    i16 94, label %sw.bb
    i16 95, label %sw.bb
    i16 96, label %sw.bb
    i16 24, label %sw.bb33
    i16 23, label %sw.bb33
    i16 56, label %sw.bb192
  ], !dbg !7137

sw.bb:                                            ; preds = %for.end, %for.end, %for.end, %for.end, %for.end, %for.end, %for.end, %for.end, %for.end, %for.end, %for.end, %for.end
  %type19 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7138
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i64 0, i32 6, !dbg !7138
  %bf.load20 = load i32, i32* %precision, align 4, !dbg !7138
  %bf.clear21 = and i32 %bf.load20, 1023, !dbg !7138
  %cmp22 = icmp eq i32 %bf.clear21, 1, !dbg !7140
  br i1 %cmp22, label %land.lhs.true23, label %cleanup.cont539, !dbg !7141

land.lhs.true23:                                  ; preds = %sw.bb
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7142
  %bf.load25 = load i64, i64* %12, align 8, !dbg !7142
  %bf.cast2851 = and i64 %bf.load25, 2097152, !dbg !7142
  %tobool29 = icmp eq i64 %bf.cast2851, 0, !dbg !7142
  br i1 %tobool29, label %if.then30, label %cleanup.cont539, !dbg !7143

if.then30:                                        ; preds = %land.lhs.true23
  %call31 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 61, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.415, i64 0, i64 0), %union.tree_node* %type) #7, !dbg !7144
  br label %cleanup.cont539, !dbg !7144

sw.bb33:                                          ; preds = %for.end, %for.end
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7145
  %bf.load35 = load i64, i64* %13, align 8, !dbg !7145
  %bf.cast3737 = and i64 %bf.load35, 65535, !dbg !7146
  %cmp38 = icmp eq i64 %bf.cast3737, 9, !dbg !7146
  br i1 %cmp38, label %land.lhs.true39, label %if.else, !dbg !7147

land.lhs.true39:                                  ; preds = %sw.bb33
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7148
  %bf.load41 = load i64, i64* %14, align 8, !dbg !7148
  %bf.cast4349 = and i64 %bf.load41, 65535, !dbg !7149
  %cmp44 = icmp eq i64 %bf.cast4349, 8, !dbg !7149
  br i1 %cmp44, label %if.then45, label %if.else, !dbg !7150

if.then45:                                        ; preds = %land.lhs.true39
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7151
  %15 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !7151
  %16 = load %struct.real_value*, %struct.real_value** %15, align 8, !dbg !7151
  br i1 false, label %cond.true, label %cond.false, !dbg !7154

cond.true:                                        ; preds = %if.then45
  br label %cond.end, !dbg !7154

cond.false:                                       ; preds = %if.then45
  %type52 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !7154
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type52, i64 0, i32 6, !dbg !7154
  %bf.load53 = load i32, i32* %mode, align 4, !dbg !7154
  %bf.lshr54 = lshr i32 %bf.load53, 16, !dbg !7154
  %bf.clear55 = and i32 %bf.lshr54, 255, !dbg !7154
  br label %cond.end, !dbg !7154

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ undef, %cond.true ], [ %bf.clear55, %cond.false ], !dbg !7154
  %call56 = tail call zeroext i8 @real_isinteger(%struct.real_value* %16, i32 %cond) #7, !dbg !7155
  %tobool57 = icmp eq i8 %call56, 0, !dbg !7155
  call void @llvm.dbg.value(metadata i1 %tobool57, metadata !7073, metadata !DIExpression()), !dbg !7112
  br label %if.end187, !dbg !7156

if.else:                                          ; preds = %land.lhs.true39, %sw.bb33
  %cmp64 = icmp eq i64 %bf.cast3737, 8, !dbg !7157
  br i1 %cmp64, label %land.lhs.true65, label %if.else112, !dbg !7158

land.lhs.true65:                                  ; preds = %if.else
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7159
  %bf.load67 = load i64, i64* %17, align 8, !dbg !7159
  %bf.cast6944 = and i64 %bf.load67, 65535, !dbg !7160
  %cmp70 = icmp eq i64 %bf.cast6944, 8, !dbg !7160
  br i1 %cmp70, label %land.lhs.true71, label %if.else112, !dbg !7161

land.lhs.true71:                                  ; preds = %land.lhs.true65
  %call72 = tail call i32 @int_fits_type_p(%union.tree_node* %expr, %union.tree_node* %type) #7, !dbg !7162
  %tobool73 = icmp eq i32 %call72, 0, !dbg !7162
  br i1 %tobool73, label %if.then74, label %if.else112, !dbg !7163

if.then74:                                        ; preds = %land.lhs.true71
  %bf.load76 = load i64, i64* %17, align 8, !dbg !7164
  %bf.cast7945 = and i64 %bf.load76, 2097152, !dbg !7164
  %tobool80 = icmp eq i64 %bf.cast7945, 0, !dbg !7164
  br i1 %tobool80, label %if.else93, label %land.lhs.true81, !dbg !7167

land.lhs.true81:                                  ; preds = %if.then74
  %bf.load83 = load i64, i64* %13, align 8, !dbg !7168
  %bf.cast8648 = and i64 %bf.load83, 2097152, !dbg !7168
  %tobool87 = icmp eq i64 %bf.cast8648, 0, !dbg !7168
  br i1 %tobool87, label %land.lhs.true88, label %if.else93, !dbg !7169

land.lhs.true88:                                  ; preds = %land.lhs.true81
  %call89 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %expr) #7, !dbg !7170
  %cmp90 = icmp slt i32 %call89, 0, !dbg !7171
  br i1 %cmp90, label %if.then91, label %land.lhs.true88.if.else93_crit_edge, !dbg !7172

land.lhs.true88.if.else93_crit_edge:              ; preds = %land.lhs.true88
  %bf.load95.pre = load i64, i64* %17, align 8, !dbg !7173
  br label %if.else93, !dbg !7172

if.then91:                                        ; preds = %land.lhs.true88
  %call92 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 178, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.416, i64 0, i64 0)) #7, !dbg !7175
  br label %if.end187, !dbg !7175

if.else93:                                        ; preds = %land.lhs.true88.if.else93_crit_edge, %land.lhs.true81, %if.then74
  %bf.load95 = phi i64 [ %bf.load95.pre, %land.lhs.true88.if.else93_crit_edge ], [ %bf.load76, %land.lhs.true81 ], [ %bf.load76, %if.then74 ], !dbg !7173
  %bf.cast9846 = and i64 %bf.load95, 2097152, !dbg !7173
  %tobool99 = icmp eq i64 %bf.cast9846, 0, !dbg !7173
  br i1 %tobool99, label %land.lhs.true100, label %if.end187, !dbg !7176

land.lhs.true100:                                 ; preds = %if.else93
  %bf.load102 = load i64, i64* %13, align 8, !dbg !7177
  %bf.cast10547 = and i64 %bf.load102, 2097152, !dbg !7177
  %tobool106 = icmp eq i64 %bf.cast10547, 0, !dbg !7177
  br i1 %tobool106, label %if.end187, label %if.then107, !dbg !7178

if.then107:                                       ; preds = %land.lhs.true100
  %call108 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 178, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.417, i64 0, i64 0)) #7, !dbg !7179
  br label %if.end187, !dbg !7179

if.else112:                                       ; preds = %land.lhs.true71, %land.lhs.true65, %if.else
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7180
  %bf.load114 = load i64, i64* %18, align 8, !dbg !7180
  %bf.cast11639 = and i64 %bf.load114, 65535, !dbg !7181
  %cmp117 = icmp eq i64 %bf.cast11639, 9, !dbg !7181
  br i1 %cmp117, label %if.then118, label %if.end187, !dbg !7182

if.then118:                                       ; preds = %if.else112
  %bf.load120 = load i64, i64* %13, align 8, !dbg !7183
  %bf.cast12240 = and i64 %bf.load120, 65535, !dbg !7184
  %cmp123 = icmp eq i64 %bf.cast12240, 8, !dbg !7184
  br i1 %cmp123, label %if.then124, label %if.else144, !dbg !7185

if.then124:                                       ; preds = %if.then118
  %19 = bitcast %struct.real_value* %a to i8*, !dbg !7186
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6, !dbg !7186
  call void @llvm.dbg.value(metadata %struct.real_value* %a, metadata !7081, metadata !DIExpression(DW_OP_deref)), !dbg !7187
  call void @real_value_from_int_cst(%struct.real_value* nonnull sret %a, %union.tree_node* null, %union.tree_node* %expr) #7, !dbg !7188
  %bf.load126 = load i64, i64* %18, align 8, !dbg !7189
  %bf.cast12843 = and i64 %bf.load126, 65535, !dbg !7189
  %cmp129 = icmp eq i64 %bf.cast12843, 14, !dbg !7189
  br i1 %cmp129, label %cond.true130, label %cond.false132, !dbg !7189

cond.true130:                                     ; preds = %if.then124
  %call131 = call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7189
  br label %cond.end138, !dbg !7189

cond.false132:                                    ; preds = %if.then124
  %type133 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7189
  %mode134 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type133, i64 0, i32 6, !dbg !7189
  %bf.load135 = load i32, i32* %mode134, align 4, !dbg !7189
  %bf.lshr136 = lshr i32 %bf.load135, 16, !dbg !7189
  %bf.clear137 = and i32 %bf.lshr136, 255, !dbg !7189
  br label %cond.end138, !dbg !7189

cond.end138:                                      ; preds = %cond.false132, %cond.true130
  %cond139 = phi i32 [ %call131, %cond.true130 ], [ %bf.clear137, %cond.false132 ], !dbg !7189
  call void @llvm.dbg.value(metadata %struct.real_value* %a, metadata !7081, metadata !DIExpression(DW_OP_deref)), !dbg !7187
  %call140 = call zeroext i8 @exact_real_truncate(i32 %cond139, %struct.real_value* nonnull %a) #7, !dbg !7191
  %tobool141 = icmp eq i8 %call140, 0, !dbg !7191
  call void @llvm.dbg.value(metadata i1 %tobool141, metadata !7073, metadata !DIExpression()), !dbg !7112
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6, !dbg !7192
  br label %if.end187, !dbg !7193

if.else144:                                       ; preds = %if.then118
  %cmp149 = icmp eq i64 %bf.cast12240, 9, !dbg !7194
  br i1 %cmp149, label %land.lhs.true150, label %if.end187, !dbg !7195

land.lhs.true150:                                 ; preds = %if.else144
  %type151 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7196
  %precision152 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type151, i64 0, i32 6, !dbg !7196
  %bf.load153 = load i32, i32* %precision152, align 4, !dbg !7196
  %bf.clear154 = and i32 %bf.load153, 1023, !dbg !7196
  %type155 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !7197
  %precision156 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type155, i64 0, i32 6, !dbg !7197
  %bf.load157 = load i32, i32* %precision156, align 4, !dbg !7197
  %bf.clear158 = and i32 %bf.load157, 1023, !dbg !7197
  %cmp159 = icmp ult i32 %bf.clear154, %bf.clear158, !dbg !7198
  br i1 %cmp159, label %if.then160, label %if.end187, !dbg !7199

if.then160:                                       ; preds = %land.lhs.true150
  %20 = bitcast %struct.real_value* %a161 to i8*, !dbg !7200
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6, !dbg !7200
  %real_cst_ptr163 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7201
  %21 = bitcast i32* %real_cst_ptr163 to i8**, !dbg !7201
  %22 = load i8*, i8** %21, align 8, !dbg !7201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %22, i64 32, i1 false), !dbg !7201
  br i1 false, label %cond.true169, label %cond.false171, !dbg !7202

cond.true169:                                     ; preds = %if.then160
  br label %cond.end177, !dbg !7202

cond.false171:                                    ; preds = %if.then160
  %bf.lshr175 = lshr i32 %bf.load153, 16, !dbg !7202
  %bf.clear176 = and i32 %bf.lshr175, 255, !dbg !7202
  br label %cond.end177, !dbg !7202

cond.end177:                                      ; preds = %cond.false171, %cond.true169
  %cond178 = phi i32 [ undef, %cond.true169 ], [ %bf.clear176, %cond.false171 ], !dbg !7202
  call void @llvm.dbg.value(metadata %struct.real_value* %a161, metadata !7089, metadata !DIExpression(DW_OP_deref)), !dbg !7204
  %call179 = call zeroext i8 @exact_real_truncate(i32 %cond178, %struct.real_value* nonnull %a161) #7, !dbg !7205
  %tobool180 = icmp eq i8 %call179, 0, !dbg !7205
  call void @llvm.dbg.value(metadata i1 %tobool180, metadata !7073, metadata !DIExpression()), !dbg !7112
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6, !dbg !7206
  br label %if.end187, !dbg !7207

if.end187:                                        ; preds = %land.lhs.true100, %if.else93, %if.then107, %if.then91, %cond.end138, %cond.end177, %land.lhs.true150, %if.else144, %if.else112, %cond.end
  %give_warning.9.shrunk = phi i1 [ %tobool57, %cond.end ], [ false, %if.then91 ], [ false, %if.then107 ], [ true, %land.lhs.true100 ], [ true, %if.else93 ], [ false, %if.else112 ], [ %tobool141, %cond.end138 ], [ %tobool180, %cond.end177 ], [ false, %land.lhs.true150 ], [ false, %if.else144 ]
  call void @llvm.dbg.value(metadata i1 %give_warning.9.shrunk, metadata !7073, metadata !DIExpression()), !dbg !7112
  br i1 %give_warning.9.shrunk, label %if.then189, label %cleanup.cont539, !dbg !7208

if.then189:                                       ; preds = %if.end187
  %call190 = call zeroext i8 (i32, i8*, ...) @warning(i32 61, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.418, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %0) #7, !dbg !7209
  br label %cleanup.cont539, !dbg !7209

sw.bb192:                                         ; preds = %for.end
  %arrayidx195 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7211
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx195, align 8, !dbg !7211
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !7092, metadata !DIExpression()), !dbg !7212
  %arrayidx198 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7213
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx198, align 8, !dbg !7213
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !7094, metadata !DIExpression()), !dbg !7212
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7214
  %bf.load200 = load i64, i64* %25, align 8, !dbg !7214
  %bf.cast2029 = and i64 %bf.load200, 65535, !dbg !7216
  %cmp203 = icmp eq i64 %bf.cast2029, 24, !dbg !7216
  br i1 %cmp203, label %land.lhs.true215, label %lor.lhs.false, !dbg !7217

lor.lhs.false:                                    ; preds = %sw.bb192
  %cmp208 = icmp eq i64 %bf.cast2029, 23, !dbg !7218
  br i1 %cmp208, label %land.lhs.true215, label %lor.lhs.false209, !dbg !7219

lor.lhs.false209:                                 ; preds = %lor.lhs.false
  %cmp214 = icmp eq i64 %bf.cast2029, 56, !dbg !7220
  br i1 %cmp214, label %land.lhs.true215, label %cleanup235, !dbg !7221

land.lhs.true215:                                 ; preds = %lor.lhs.false209, %lor.lhs.false, %sw.bb192
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7222
  %bf.load217 = load i64, i64* %26, align 8, !dbg !7222
  %bf.cast21934 = and i64 %bf.load217, 65535, !dbg !7223
  %cmp220 = icmp eq i64 %bf.cast21934, 24, !dbg !7223
  br i1 %cmp220, label %if.then233, label %lor.lhs.false221, !dbg !7224

lor.lhs.false221:                                 ; preds = %land.lhs.true215
  %cmp226 = icmp eq i64 %bf.cast21934, 23, !dbg !7225
  br i1 %cmp226, label %if.then233, label %lor.lhs.false227, !dbg !7226

lor.lhs.false227:                                 ; preds = %lor.lhs.false221
  %cmp232 = icmp eq i64 %bf.cast21934, 56, !dbg !7227
  br i1 %cmp232, label %if.then233, label %cleanup235, !dbg !7228

if.then233:                                       ; preds = %lor.lhs.false227, %lor.lhs.false221, %land.lhs.true215
  tail call fastcc void @conversion_warning(%union.tree_node* %type, %union.tree_node* %23) #8, !dbg !7229
  tail call fastcc void @conversion_warning(%union.tree_node* %type, %union.tree_node* %24) #8, !dbg !7231
  br label %cleanup235, !dbg !7232

cleanup235:                                       ; preds = %lor.lhs.false209, %lor.lhs.false227, %if.then233
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then233 ], [ true, %lor.lhs.false227 ], [ true, %lor.lhs.false209 ]
  br i1 %cleanup.dest.slot.1, label %sw.default, label %cleanup.cont539

sw.default:                                       ; preds = %cleanup235, %for.end
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7233
  %bf.load240 = load i64, i64* %27, align 8, !dbg !7233
  %bf.cast24212 = and i64 %bf.load240, 65535, !dbg !7234
  %cmp243 = icmp eq i64 %bf.cast24212, 9, !dbg !7234
  br i1 %cmp243, label %land.lhs.true244, label %if.else251, !dbg !7235

land.lhs.true244:                                 ; preds = %sw.default
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7236
  %bf.load246 = load i64, i64* %28, align 8, !dbg !7236
  %bf.cast24833 = and i64 %bf.load246, 65535, !dbg !7237
  %cmp249 = icmp eq i64 %bf.cast24833, 8, !dbg !7237
  br i1 %cmp249, label %if.end529, label %if.else251, !dbg !7238

if.else251:                                       ; preds = %land.lhs.true244, %sw.default
  %cmp256 = icmp eq i64 %bf.cast24212, 8, !dbg !7239
  br i1 %cmp256, label %land.lhs.true257, label %if.else440, !dbg !7240

land.lhs.true257:                                 ; preds = %if.else251
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7241
  %bf.load259 = load i64, i64* %29, align 8, !dbg !7241
  %bf.cast26120 = and i64 %bf.load259, 65535, !dbg !7242
  %cmp262 = icmp eq i64 %bf.cast26120, 8, !dbg !7242
  br i1 %cmp262, label %if.then263, label %if.else440, !dbg !7243

if.then263:                                       ; preds = %land.lhs.true257
  %call264 = tail call %union.tree_node* @get_unwidened(%union.tree_node* %expr, %union.tree_node* null) #7, !dbg !7244
  call void @llvm.dbg.value(metadata %union.tree_node* %call264, metadata !7072, metadata !DIExpression()), !dbg !7112
  %type266 = getelementptr inbounds %union.tree_node, %union.tree_node* %call264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7245
  %30 = load %union.tree_node*, %union.tree_node** %type266, align 8, !dbg !7245
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !7076, metadata !DIExpression()), !dbg !7112
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7246
  %bf.load268 = load i64, i64* %31, align 8, !dbg !7246
  %bf.cast27021 = and i64 %bf.load268, 65535, !dbg !7247
  %cmp271 = icmp eq i64 %bf.cast27021, 89, !dbg !7247
  br i1 %cmp271, label %if.then284, label %lor.lhs.false272, !dbg !7248

lor.lhs.false272:                                 ; preds = %if.then263
  %cmp277 = icmp eq i64 %bf.cast27021, 87, !dbg !7249
  br i1 %cmp277, label %if.then284, label %lor.lhs.false278, !dbg !7250

lor.lhs.false278:                                 ; preds = %lor.lhs.false272
  %cmp283 = icmp eq i64 %bf.cast27021, 88, !dbg !7251
  br i1 %cmp283, label %if.then284, label %if.end386, !dbg !7252

if.then284:                                       ; preds = %lor.lhs.false278, %lor.lhs.false272, %if.then263
  %operands286 = getelementptr inbounds %union.tree_node, %union.tree_node* %call264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7253
  %32 = load %union.tree_node*, %union.tree_node** %operands286, align 8, !dbg !7253
  %arrayidx290 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands286, i64 1, !dbg !7254
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx290, align 8, !dbg !7254
  %call291 = tail call %union.tree_node* @shorten_binary_op(%union.tree_node* %30, %union.tree_node* %32, %union.tree_node* %33, i8 zeroext 1) #8, !dbg !7255
  call void @llvm.dbg.value(metadata %union.tree_node* %call291, metadata !7076, metadata !DIExpression()), !dbg !7112
  %bf.load293 = load i64, i64* %31, align 8, !dbg !7256
  %bf.cast29526 = and i64 %bf.load293, 65535, !dbg !7257
  %cmp296 = icmp eq i64 %bf.cast29526, 89, !dbg !7257
  br i1 %cmp296, label %if.then297, label %if.end386, !dbg !7258

if.then297:                                       ; preds = %if.then284
  %34 = load %union.tree_node*, %union.tree_node** %operands286, align 8, !dbg !7259
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !7095, metadata !DIExpression()), !dbg !7260
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx290, align 8, !dbg !7261
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !7103, metadata !DIExpression()), !dbg !7260
  %type306 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7262
  %36 = bitcast %union.tree_node** %type306 to i64**, !dbg !7262
  %37 = load i64*, i64** %36, align 8, !dbg !7262
  %bf.load308 = load i64, i64* %37, align 8, !dbg !7262
  %type313 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7263
  %38 = bitcast %union.tree_node** %type313 to i64**, !dbg !7263
  %39 = load i64*, i64** %38, align 8, !dbg !7263
  %bf.load315 = load i64, i64* %39, align 8, !dbg !7263
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7264
  %bf.load321 = load i64, i64* %40, align 8, !dbg !7264
  %bf.cast32327 = and i64 %bf.load321, 65535, !dbg !7266
  %cmp324 = icmp eq i64 %bf.cast32327, 23, !dbg !7266
  br i1 %cmp324, label %land.lhs.true326, label %lor.lhs.false334, !dbg !7267

land.lhs.true326:                                 ; preds = %if.then297
  %call327 = tail call %union.tree_node* @c_common_signed_type(%union.tree_node* %type) #8, !dbg !7268
  %call328 = tail call i32 @int_fits_type_p(%union.tree_node* %34, %union.tree_node* %call327) #7, !dbg !7269
  %tobool329 = icmp eq i32 %call328, 0, !dbg !7269
  br i1 %tobool329, label %lor.lhs.false334, label %land.lhs.true330, !dbg !7270

land.lhs.true330:                                 ; preds = %land.lhs.true326
  %call331 = tail call %union.tree_node* @c_common_unsigned_type(%union.tree_node* %type) #8, !dbg !7271
  %call332 = tail call i32 @int_fits_type_p(%union.tree_node* %34, %union.tree_node* %call331) #7, !dbg !7272
  %tobool333 = icmp eq i32 %call332, 0, !dbg !7272
  br i1 %tobool333, label %lor.lhs.false334, label %cleanup379, !dbg !7273

lor.lhs.false334:                                 ; preds = %land.lhs.true330, %land.lhs.true326, %if.then297
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7274
  %bf.load336 = load i64, i64* %41, align 8, !dbg !7274
  %bf.cast33828 = and i64 %bf.load336, 65535, !dbg !7275
  %cmp339 = icmp eq i64 %bf.cast33828, 23, !dbg !7275
  br i1 %cmp339, label %land.lhs.true341, label %if.else350, !dbg !7276

land.lhs.true341:                                 ; preds = %lor.lhs.false334
  %call342 = tail call %union.tree_node* @c_common_signed_type(%union.tree_node* %type) #8, !dbg !7277
  %call343 = tail call i32 @int_fits_type_p(%union.tree_node* %35, %union.tree_node* %call342) #7, !dbg !7278
  %tobool344 = icmp eq i32 %call343, 0, !dbg !7278
  br i1 %tobool344, label %if.else350, label %land.lhs.true345, !dbg !7279

land.lhs.true345:                                 ; preds = %land.lhs.true341
  %call346 = tail call %union.tree_node* @c_common_unsigned_type(%union.tree_node* %type) #8, !dbg !7280
  %call347 = tail call i32 @int_fits_type_p(%union.tree_node* %35, %union.tree_node* %call346) #7, !dbg !7281
  %tobool348 = icmp eq i32 %call347, 0, !dbg !7281
  br i1 %tobool348, label %if.else350, label %cleanup379, !dbg !7282

if.else350:                                       ; preds = %land.lhs.true345, %land.lhs.true341, %lor.lhs.false334
  %bf.load352 = load i64, i64* %40, align 8, !dbg !7283
  %bf.cast35429 = and i64 %bf.load352, 65535, !dbg !7285
  %cmp355 = icmp eq i64 %bf.cast35429, 23, !dbg !7285
  %bf.cast31130 = and i64 %bf.load308, 2097152, !dbg !7286
  %tobool359 = icmp ne i64 %bf.cast31130, 0, !dbg !7286
  %or.cond6 = and i1 %cmp355, %tobool359, !dbg !7287
  br i1 %or.cond6, label %land.lhs.true360, label %lor.lhs.false363, !dbg !7287

land.lhs.true360:                                 ; preds = %if.else350
  %call361 = tail call i32 @int_fits_type_p(%union.tree_node* %34, %union.tree_node* %type) #7, !dbg !7288
  %tobool362 = icmp eq i32 %call361, 0, !dbg !7288
  br i1 %tobool362, label %lor.lhs.false363, label %cleanup379, !dbg !7289

lor.lhs.false363:                                 ; preds = %land.lhs.true360, %if.else350
  %bf.load365 = load i64, i64* %41, align 8, !dbg !7290
  %bf.cast36731 = and i64 %bf.load365, 65535, !dbg !7291
  %cmp368 = icmp eq i64 %bf.cast36731, 23, !dbg !7291
  %bf.cast31832 = and i64 %bf.load315, 2097152, !dbg !7292
  %tobool372 = icmp ne i64 %bf.cast31832, 0, !dbg !7292
  %or.cond7 = and i1 %cmp368, %tobool372, !dbg !7293
  br i1 %or.cond7, label %land.lhs.true373, label %if.end378, !dbg !7293

land.lhs.true373:                                 ; preds = %lor.lhs.false363
  %call374 = tail call i32 @int_fits_type_p(%union.tree_node* %35, %union.tree_node* %type) #7, !dbg !7294
  %tobool375 = icmp eq i32 %call374, 0, !dbg !7294
  br i1 %tobool375, label %if.end378, label %cleanup379, !dbg !7295

if.end378:                                        ; preds = %land.lhs.true373, %lor.lhs.false363
  br label %cleanup379, !dbg !7296

cleanup379:                                       ; preds = %land.lhs.true330, %land.lhs.true345, %land.lhs.true360, %land.lhs.true373, %if.end378
  %cleanup.dest.slot.2 = phi i1 [ true, %if.end378 ], [ false, %land.lhs.true345 ], [ false, %land.lhs.true330 ], [ false, %land.lhs.true373 ], [ false, %land.lhs.true360 ]
  br i1 %cleanup.dest.slot.2, label %if.end386, label %cleanup.cont539

if.end386:                                        ; preds = %if.then284, %cleanup379, %lor.lhs.false278
  %expr_type.0 = phi %union.tree_node* [ %30, %lor.lhs.false278 ], [ %call291, %cleanup379 ], [ %call291, %if.then284 ], !dbg !7297
  call void @llvm.dbg.value(metadata %union.tree_node* %expr_type.0, metadata !7076, metadata !DIExpression()), !dbg !7112
  %type387 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7298
  %precision388 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type387, i64 0, i32 6, !dbg !7298
  %bf.load389 = load i32, i32* %precision388, align 4, !dbg !7298
  %bf.clear390 = and i32 %bf.load389, 1023, !dbg !7298
  %type391 = bitcast %union.tree_node* %expr_type.0 to %struct.tree_type*, !dbg !7300
  %precision392 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type391, i64 0, i32 6, !dbg !7300
  %bf.load393 = load i32, i32* %precision392, align 4, !dbg !7300
  %bf.clear394 = and i32 %bf.load393, 1023, !dbg !7300
  %cmp395 = icmp ult i32 %bf.clear390, %bf.clear394, !dbg !7301
  br i1 %cmp395, label %if.end529, label %if.else398, !dbg !7302

if.else398:                                       ; preds = %if.end386
  %42 = xor i32 %bf.load389, %bf.load393, !dbg !7303
  %43 = and i32 %42, 1023, !dbg !7303
  %cmp407 = icmp eq i32 %43, 0, !dbg !7303
  br i1 %cmp407, label %land.lhs.true409, label %if.else398.lor.lhs.false422_crit_edge, !dbg !7305

if.else398.lor.lhs.false422_crit_edge:            ; preds = %if.else398
  %bf.load424.pre = load i64, i64* %29, align 8, !dbg !7306
  br label %lor.lhs.false422, !dbg !7305

land.lhs.true409:                                 ; preds = %if.else398
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr_type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7307
  %bf.load411 = load i64, i64* %44, align 8, !dbg !7307
  %bf.load416 = load i64, i64* %29, align 8, !dbg !7308
  %bf.lshr41253 = xor i64 %bf.load411, %bf.load416, !dbg !7309
  %45 = and i64 %bf.lshr41253, 2097152, !dbg !7309
  %cmp420 = icmp eq i64 %45, 0, !dbg !7309
  br i1 %cmp420, label %lor.lhs.false422, label %if.then436, !dbg !7310

lor.lhs.false422:                                 ; preds = %if.else398.lor.lhs.false422_crit_edge, %land.lhs.true409
  %bf.load424 = phi i64 [ %bf.load424.pre, %if.else398.lor.lhs.false422_crit_edge ], [ %bf.load416, %land.lhs.true409 ], !dbg !7306
  %bf.cast42724 = and i64 %bf.load424, 2097152, !dbg !7306
  %tobool428 = icmp eq i64 %bf.cast42724, 0, !dbg !7306
  br i1 %tobool428, label %if.end529, label %land.lhs.true429, !dbg !7311

land.lhs.true429:                                 ; preds = %lor.lhs.false422
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr_type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7312
  %bf.load431 = load i64, i64* %46, align 8, !dbg !7312
  %bf.cast43425 = and i64 %bf.load431, 2097152, !dbg !7312
  %tobool435 = icmp eq i64 %bf.cast43425, 0, !dbg !7312
  br i1 %tobool435, label %if.then436, label %if.end529, !dbg !7313

if.then436:                                       ; preds = %land.lhs.true409, %land.lhs.true429
  %call437 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 178, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.419, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %expr_type.0) #7, !dbg !7314
  br label %if.end529, !dbg !7314

if.else440:                                       ; preds = %land.lhs.true257, %if.else251
  br i1 %cmp256, label %land.lhs.true447, label %if.else500, !dbg !7315

land.lhs.true447:                                 ; preds = %if.else440
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7316
  %bf.load449 = load i64, i64* %47, align 8, !dbg !7316
  %bf.cast45117 = and i64 %bf.load449, 65535, !dbg !7317
  %cmp452 = icmp eq i64 %bf.cast45117, 9, !dbg !7317
  br i1 %cmp452, label %if.then454, label %if.else500, !dbg !7318

if.then454:                                       ; preds = %land.lhs.true447
  %48 = bitcast %struct.real_value* %real_low_bound to i8*, !dbg !7319
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #6, !dbg !7319
  %49 = bitcast %struct.real_value* %real_high_bound to i8*, !dbg !7319
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #6, !dbg !7319
  %call455 = tail call %union.tree_node* @get_unwidened(%union.tree_node* %expr, %union.tree_node* null) #7, !dbg !7320
  call void @llvm.dbg.value(metadata %union.tree_node* %call455, metadata !7072, metadata !DIExpression()), !dbg !7112
  %type457 = getelementptr inbounds %union.tree_node, %union.tree_node* %call455, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7321
  %50 = load %union.tree_node*, %union.tree_node** %type457, align 8, !dbg !7321
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !7076, metadata !DIExpression()), !dbg !7112
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7322
  %51 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !7322
  %52 = load %union.tree_node*, %union.tree_node** %51, align 8, !dbg !7322
  call void @llvm.dbg.value(metadata %union.tree_node* %52, metadata !7106, metadata !DIExpression()), !dbg !7323
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7324
  %53 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !7324
  %54 = load %union.tree_node*, %union.tree_node** %53, align 8, !dbg !7324
  call void @llvm.dbg.value(metadata %union.tree_node* %54, metadata !7109, metadata !DIExpression()), !dbg !7323
  %55 = bitcast %struct.real_value* %tmp to i8*, !dbg !7325
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #6, !dbg !7325
  call void @real_value_from_int_cst(%struct.real_value* nonnull sret %tmp, %union.tree_node* null, %union.tree_node* %52) #7, !dbg !7325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %55, i64 32, i1 false), !dbg !7325
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #6, !dbg !7325
  %56 = bitcast %struct.real_value* %tmp460 to i8*, !dbg !7326
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #6, !dbg !7326
  call void @real_value_from_int_cst(%struct.real_value* nonnull sret %tmp460, %union.tree_node* null, %union.tree_node* %54) #7, !dbg !7326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* nonnull align 8 %56, i64 32, i1 false), !dbg !7326
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #6, !dbg !7326
  %bf.load462 = load i64, i64* %47, align 8, !dbg !7327
  %bf.cast46418 = and i64 %bf.load462, 65535, !dbg !7327
  %cmp465 = icmp eq i64 %bf.cast46418, 14, !dbg !7327
  br i1 %cmp465, label %cond.true467, label %cond.false469, !dbg !7327

cond.true467:                                     ; preds = %if.then454
  %call468 = call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7327
  br label %cond.end475, !dbg !7327

cond.false469:                                    ; preds = %if.then454
  %type470 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7327
  %mode471 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type470, i64 0, i32 6, !dbg !7327
  %bf.load472 = load i32, i32* %mode471, align 4, !dbg !7327
  %bf.lshr473 = lshr i32 %bf.load472, 16, !dbg !7327
  %bf.clear474 = and i32 %bf.lshr473, 255, !dbg !7327
  br label %cond.end475, !dbg !7327

cond.end475:                                      ; preds = %cond.false469, %cond.true467
  %cond476 = phi i32 [ %call468, %cond.true467 ], [ %bf.clear474, %cond.false469 ], !dbg !7327
  call void @llvm.dbg.value(metadata %struct.real_value* %real_low_bound, metadata !7110, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call477 = call zeroext i8 @exact_real_truncate(i32 %cond476, %struct.real_value* nonnull %real_low_bound) #7, !dbg !7329
  %tobool478 = icmp eq i8 %call477, 0, !dbg !7329
  br i1 %tobool478, label %if.then498, label %lor.lhs.false479, !dbg !7330

lor.lhs.false479:                                 ; preds = %cond.end475
  %bf.load481 = load i64, i64* %47, align 8, !dbg !7331
  %bf.cast48319 = and i64 %bf.load481, 65535, !dbg !7331
  %cmp484 = icmp eq i64 %bf.cast48319, 14, !dbg !7331
  br i1 %cmp484, label %cond.true486, label %cond.false488, !dbg !7331

cond.true486:                                     ; preds = %lor.lhs.false479
  %call487 = call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7331
  br label %cond.end494, !dbg !7331

cond.false488:                                    ; preds = %lor.lhs.false479
  %type489 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7331
  %mode490 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type489, i64 0, i32 6, !dbg !7331
  %bf.load491 = load i32, i32* %mode490, align 4, !dbg !7331
  %bf.lshr492 = lshr i32 %bf.load491, 16, !dbg !7331
  %bf.clear493 = and i32 %bf.lshr492, 255, !dbg !7331
  br label %cond.end494, !dbg !7331

cond.end494:                                      ; preds = %cond.false488, %cond.true486
  %cond495 = phi i32 [ %call487, %cond.true486 ], [ %bf.clear493, %cond.false488 ], !dbg !7331
  call void @llvm.dbg.value(metadata %struct.real_value* %real_high_bound, metadata !7111, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call496 = call zeroext i8 @exact_real_truncate(i32 %cond495, %struct.real_value* nonnull %real_high_bound) #7, !dbg !7332
  %tobool497 = icmp eq i8 %call496, 0, !dbg !7332
  br i1 %tobool497, label %if.then498, label %if.end499, !dbg !7333

if.then498:                                       ; preds = %cond.end494, %cond.end475
  call void @llvm.dbg.value(metadata i8 1, metadata !7073, metadata !DIExpression()), !dbg !7112
  br label %if.end499, !dbg !7334

if.end499:                                        ; preds = %cond.end494, %if.then498
  %give_warning.11 = phi i8 [ 0, %cond.end494 ], [ 1, %if.then498 ], !dbg !7112
  call void @llvm.dbg.value(metadata i8 %give_warning.11, metadata !7073, metadata !DIExpression()), !dbg !7112
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #6, !dbg !7335
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #6, !dbg !7335
  br label %if.end529, !dbg !7336

if.else500:                                       ; preds = %land.lhs.true447, %if.else440
  br i1 %cmp243, label %land.lhs.true507, label %if.end529, !dbg !7337

land.lhs.true507:                                 ; preds = %if.else500
  %57 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7339
  %bf.load509 = load i64, i64* %57, align 8, !dbg !7339
  %bf.cast51116 = and i64 %bf.load509, 65535, !dbg !7340
  %cmp512 = icmp eq i64 %bf.cast51116, 9, !dbg !7340
  br i1 %cmp512, label %land.lhs.true514, label %if.end529, !dbg !7341

land.lhs.true514:                                 ; preds = %land.lhs.true507
  %type515 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7342
  %precision516 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type515, i64 0, i32 6, !dbg !7342
  %bf.load517 = load i32, i32* %precision516, align 4, !dbg !7342
  %bf.clear518 = and i32 %bf.load517, 1023, !dbg !7342
  %type519 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !7343
  %precision520 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type519, i64 0, i32 6, !dbg !7343
  %bf.load521 = load i32, i32* %precision520, align 4, !dbg !7343
  %bf.clear522 = and i32 %bf.load521, 1023, !dbg !7343
  %cmp523 = icmp ult i32 %bf.clear518, %bf.clear522, !dbg !7344
  %spec.select8 = zext i1 %cmp523 to i8, !dbg !7345
  br label %if.end529, !dbg !7345

if.end529:                                        ; preds = %land.lhs.true429, %lor.lhs.false422, %land.lhs.true514, %if.then436, %if.end386, %if.else500, %land.lhs.true507, %if.end499, %land.lhs.true244
  %expr_type.3 = phi %union.tree_node* [ %0, %land.lhs.true244 ], [ %expr_type.0, %lor.lhs.false422 ], [ %expr_type.0, %land.lhs.true429 ], [ %expr_type.0, %if.then436 ], [ %expr_type.0, %if.end386 ], [ %50, %if.end499 ], [ %0, %land.lhs.true514 ], [ %0, %land.lhs.true507 ], [ %0, %if.else500 ], !dbg !7112
  %give_warning.15 = phi i8 [ 1, %land.lhs.true244 ], [ 0, %lor.lhs.false422 ], [ 0, %land.lhs.true429 ], [ 0, %if.then436 ], [ 1, %if.end386 ], [ %give_warning.11, %if.end499 ], [ %spec.select8, %land.lhs.true514 ], [ 0, %land.lhs.true507 ], [ 0, %if.else500 ], !dbg !7346
  call void @llvm.dbg.value(metadata i8 %give_warning.15, metadata !7073, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata %union.tree_node* %expr_type.3, metadata !7076, metadata !DIExpression()), !dbg !7112
  %tobool530 = icmp eq i8 %give_warning.15, 0, !dbg !7347
  br i1 %tobool530, label %cleanup.cont539, label %if.then531, !dbg !7349

if.then531:                                       ; preds = %if.end529
  %call532 = call zeroext i8 (i32, i8*, ...) @warning(i32 61, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.420, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %expr_type.3) #7, !dbg !7350
  br label %cleanup.cont539, !dbg !7350

cleanup.cont539.loopexit:                         ; preds = %cleanup
  br label %cleanup.cont539, !dbg !7351

cleanup.cont539:                                  ; preds = %cleanup.cont539.loopexit, %land.lhs.true23, %if.end187, %if.end529, %entry, %cleanup235, %cleanup379, %if.then30, %sw.bb, %if.then189, %if.then531
  ret void, !dbg !7351
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_common_unsigned_type(%union.tree_node* %type) local_unnamed_addr #5 !dbg !7352 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7354, metadata !DIExpression()), !dbg !7355
  %call = tail call %union.tree_node* @c_common_signed_or_unsigned_type(i32 1, %union.tree_node* %type) #8, !dbg !7356
  ret %union.tree_node* %call, !dbg !7357
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @convert_and_check(%union.tree_node* %type, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !7358 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7362, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7363, metadata !DIExpression()), !dbg !7369
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7370
  %bf.load = load i64, i64* %0, align 8, !dbg !7370
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7371
  %cmp = icmp eq i64 %bf.cast1, 190, !dbg !7371
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7372

if.then:                                          ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7373
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !7373
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7366, metadata !DIExpression()), !dbg !7374
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7375
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7375
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7363, metadata !DIExpression()), !dbg !7369
  %call = tail call %union.tree_node* @convert(%union.tree_node* %1, %union.tree_node* %2) #7, !dbg !7376
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7365, metadata !DIExpression()), !dbg !7369
  %cmp2 = icmp eq %union.tree_node* %1, %type, !dbg !7377
  br i1 %cmp2, label %cleanup27, label %if.end4

if.end4:                                          ; preds = %if.then, %entry
  %expr_for_warning.0 = phi %union.tree_node* [ %call, %if.then ], [ %expr, %entry ], !dbg !7379
  %expr.addr.0 = phi %union.tree_node* [ %2, %if.then ], [ %expr, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !7363, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata %union.tree_node* %expr_for_warning.0, metadata !7365, metadata !DIExpression()), !dbg !7369
  %type6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7380
  %3 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !7380
  %cmp7 = icmp eq %union.tree_node* %3, %type, !dbg !7382
  br i1 %cmp7, label %cleanup27, label %if.end9, !dbg !7383

if.end9:                                          ; preds = %if.end4
  %call10 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %expr.addr.0) #7, !dbg !7384
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !7364, metadata !DIExpression()), !dbg !7369
  %4 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !7385
  %cmp11 = icmp eq i32 %4, 0, !dbg !7387
  br i1 %cmp11, label %land.lhs.true, label %cleanup27, !dbg !7388

land.lhs.true:                                    ; preds = %if.end9
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7389
  %bf.load13 = load i64, i64* %5, align 8, !dbg !7389
  %bf.cast15 = and i64 %bf.load13, 65535, !dbg !7389
  %arrayidx16 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast15, !dbg !7389
  %6 = load i32, i32* %arrayidx16, align 4, !dbg !7389
  %cmp17 = icmp eq i32 %6, 1, !dbg !7389
  br i1 %cmp17, label %land.lhs.true18, label %land.lhs.true23, !dbg !7389

land.lhs.true18:                                  ; preds = %land.lhs.true
  %bf.cast222 = and i64 %bf.load13, 134217728, !dbg !7389
  %tobool = icmp eq i64 %bf.cast222, 0, !dbg !7389
  br i1 %tobool, label %land.lhs.true23, label %cleanup27, !dbg !7390

land.lhs.true23:                                  ; preds = %land.lhs.true18, %land.lhs.true
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7391
  %cmp24 = icmp eq %union.tree_node* %call10, %7, !dbg !7392
  br i1 %cmp24, label %cleanup27, label %if.then25, !dbg !7393

if.then25:                                        ; preds = %land.lhs.true23
  tail call void @warnings_for_convert_and_check(%union.tree_node* %type, %union.tree_node* %expr_for_warning.0, %union.tree_node* %call10) #8, !dbg !7394
  br label %cleanup27, !dbg !7394

cleanup27:                                        ; preds = %if.then, %land.lhs.true18, %land.lhs.true23, %if.end9, %if.then25, %if.end4
  %retval.1 = phi %union.tree_node* [ %call, %if.then ], [ %expr.addr.0, %if.end4 ], [ %call10, %if.then25 ], [ %call10, %land.lhs.true23 ], [ %call10, %land.lhs.true18 ], [ %call10, %if.end9 ], !dbg !7369
  ret %union.tree_node* %retval.1, !dbg !7395
}

; Function Attrs: nounwind uwtable
define dso_local void @verify_sequence_points(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !7396 {
entry:
  %before_sp = alloca %struct.tlist*, align 8
  %after_sp = alloca %struct.tlist*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7398, metadata !DIExpression()), !dbg !7401
  %0 = bitcast %struct.tlist** %before_sp to i8*, !dbg !7402
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7402
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7399, metadata !DIExpression()), !dbg !7401
  store %struct.tlist* null, %struct.tlist** %before_sp, align 8, !dbg !7403
  %1 = bitcast %struct.tlist** %after_sp to i8*, !dbg !7402
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !7402
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7400, metadata !DIExpression()), !dbg !7401
  store %struct.tlist* null, %struct.tlist** %after_sp, align 8, !dbg !7404
  store %struct.tlist* null, %struct.tlist** @warned_ids, align 8, !dbg !7405
  store %struct.tlist_cache* null, %struct.tlist_cache** @save_expr_cache, align 8, !dbg !7406
  %2 = load i8*, i8** @tlist_firstobj, align 8, !dbg !7407
  %cmp = icmp eq i8* %2, null, !dbg !7409
  br i1 %cmp, label %if.then, label %if.end, !dbg !7410

if.then:                                          ; preds = %entry
  %call = tail call i32 @_obstack_begin(%struct.obstack* nonnull @tlist_obstack, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #7, !dbg !7411
  store i64 0, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !7413
  %3 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 4) to i64*), align 8, !dbg !7413
  %4 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3) to i64*), align 8, !dbg !7413
  %sub.ptr.sub = sub i64 %3, %4, !dbg !7413
  %cmp1 = icmp slt i64 %sub.ptr.sub, 0, !dbg !7413
  %5 = inttoptr i64 %4 to i8*, !dbg !7413
  br i1 %cmp1, label %cond.true, label %cond.end, !dbg !7413

cond.true:                                        ; preds = %if.then
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @tlist_obstack, i32 0) #7, !dbg !7413
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !7413
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !7413
  br label %cond.end, !dbg !7413

cond.end:                                         ; preds = %if.then, %cond.true
  %6 = phi i8* [ %5, %if.then ], [ %.pre1, %cond.true ], !dbg !7413
  %7 = phi i64 [ 0, %if.then ], [ %.pre, %cond.true ], !dbg !7413
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !7413
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !7413
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 2), align 8, !dbg !7413
  %cmp2 = icmp eq i8* %add.ptr, %8, !dbg !7413
  %9 = ptrtoint i8* %8 to i64, !dbg !7413
  %10 = ptrtoint i8* %add.ptr to i64, !dbg !7413
  br i1 %cmp2, label %cond.true4, label %cond.end6, !dbg !7413

cond.true4:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 10), align 8, !dbg !7413
  %bf.set = or i8 %bf.load, 2, !dbg !7413
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 10), align 8, !dbg !7413
  br label %cond.end6, !dbg !7413

cond.end6:                                        ; preds = %cond.end, %cond.true4
  store i64 %9, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !7413
  %11 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 6), align 8, !dbg !7413
  %conv12 = sext i32 %11 to i64, !dbg !7413
  %add = add nsw i64 %10, %conv12, !dbg !7413
  %neg = xor i32 %11, -1, !dbg !7413
  %conv13 = sext i32 %neg to i64, !dbg !7413
  %and = and i64 %add, %conv13, !dbg !7413
  %12 = inttoptr i64 %and to i8*, !dbg !7413
  store i8* %12, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !7413
  %13 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 1) to i64*), align 8, !dbg !7413
  %sub.ptr.sub16 = sub i64 %and, %13, !dbg !7413
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 4) to i64*), align 8, !dbg !7413
  %sub.ptr.sub19 = sub i64 %14, %13, !dbg !7413
  %cmp20 = icmp sgt i64 %sub.ptr.sub16, %sub.ptr.sub19, !dbg !7413
  br i1 %cmp20, label %cond.true22, label %cond.end24, !dbg !7413

cond.true22:                                      ; preds = %cond.end6
  store i64 %14, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3) to i64*), align 8, !dbg !7413
  br label %cond.end24, !dbg !7413

cond.end24:                                       ; preds = %cond.end6, %cond.true22
  %15 = phi i64 [ %and, %cond.end6 ], [ %14, %cond.true22 ], !dbg !7413
  store i64 %15, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 2) to i64*), align 8, !dbg !7413
  store i64 %9, i64* bitcast (i8** @tlist_firstobj to i64*), align 8, !dbg !7414
  br label %if.end, !dbg !7415

if.end:                                           ; preds = %cond.end24, %entry
  call void @llvm.dbg.value(metadata %struct.tlist** %before_sp, metadata !7399, metadata !DIExpression(DW_OP_deref)), !dbg !7401
  call void @llvm.dbg.value(metadata %struct.tlist** %after_sp, metadata !7400, metadata !DIExpression(DW_OP_deref)), !dbg !7401
  call fastcc void @verify_tree(%union.tree_node* %expr, %struct.tlist** nonnull %before_sp, %struct.tlist** nonnull %after_sp, %union.tree_node* null) #8, !dbg !7416
  %16 = load %struct.tlist*, %struct.tlist** %after_sp, align 8, !dbg !7417
  call void @llvm.dbg.value(metadata %struct.tlist* %16, metadata !7400, metadata !DIExpression()), !dbg !7401
  call fastcc void @warn_for_collisions(%struct.tlist* %16) #8, !dbg !7418
  %17 = load i64, i64* bitcast (i8** @tlist_firstobj to i64*), align 8, !dbg !7419
  %18 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 1) to i64*), align 8, !dbg !7419
  %sub.ptr.sub28 = sub i64 %17, %18, !dbg !7419
  store i64 %sub.ptr.sub28, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !7419
  %cmp29 = icmp sgt i64 %sub.ptr.sub28, 0, !dbg !7419
  %19 = inttoptr i64 %18 to i8*, !dbg !7419
  br i1 %cmp29, label %land.lhs.true, label %cond.false38, !dbg !7419

land.lhs.true:                                    ; preds = %if.end
  %20 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 4) to i64*), align 8, !dbg !7419
  %sub.ptr.sub33 = sub i64 %20, %18, !dbg !7419
  %cmp34 = icmp slt i64 %sub.ptr.sub28, %sub.ptr.sub33, !dbg !7419
  br i1 %cmp34, label %cond.true36, label %cond.false38, !dbg !7419

cond.true36:                                      ; preds = %land.lhs.true
  %add.ptr37 = getelementptr inbounds i8, i8* %19, i64 %sub.ptr.sub28, !dbg !7419
  store i8* %add.ptr37, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 2), align 8, !dbg !7419
  store i8* %add.ptr37, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !7419
  br label %cond.end40, !dbg !7419

cond.false38:                                     ; preds = %land.lhs.true, %if.end
  %add.ptr39 = getelementptr inbounds i8, i8* %19, i64 %sub.ptr.sub28, !dbg !7419
  call void @obstack_free(%struct.obstack* nonnull @tlist_obstack, i8* %add.ptr39) #7, !dbg !7419
  br label %cond.end40, !dbg !7419

cond.end40:                                       ; preds = %cond.false38, %cond.true36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !7420
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7420
  ret void, !dbg !7420
}

declare dso_local i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @verify_tree(%union.tree_node* %x, %struct.tlist** %pbefore_sp, %struct.tlist** %pno_sp, %union.tree_node* %writer) unnamed_addr #5 !dbg !7421 {
entry:
  %tmp_before = alloca %struct.tlist*, align 8
  %tmp_nosp = alloca %struct.tlist*, align 8
  %tmp_list2 = alloca %struct.tlist*, align 8
  %tmp_list3 = alloca %struct.tlist*, align 8
  %iter = alloca %struct.call_expr_arg_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %pbefore_sp, metadata !7427, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %pno_sp, metadata !7428, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %writer, metadata !7429, metadata !DIExpression()), !dbg !7458
  %0 = bitcast %struct.tlist** %tmp_before to i8*, !dbg !7459
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7459
  %1 = bitcast %struct.tlist** %tmp_nosp to i8*, !dbg !7459
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !7459
  %2 = bitcast %struct.tlist** %tmp_list2 to i8*, !dbg !7459
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !7459
  %3 = bitcast %struct.tlist** %tmp_list3 to i8*, !dbg !7459
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !7459
  %cmp = icmp eq %union.tree_node* %x, null, !dbg !7460
  br i1 %cmp, label %cleanup, label %restart.preheader, !dbg !7462

restart.preheader:                                ; preds = %entry
  br label %restart, !dbg !7463

restart:                                          ; preds = %restart.backedge, %restart.preheader
  %writer.addr.0 = phi %union.tree_node* [ %writer, %restart.preheader ], [ null, %restart.backedge ]
  %x.addr.0 = phi %union.tree_node* [ %x, %restart.preheader ], [ %x.addr.0.be, %restart.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %writer.addr.0, metadata !7429, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.label(metadata !7457), !dbg !7464
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7465
  %bf.load = load i64, i64* %4, align 8, !dbg !7465
  %bf.cast = and i64 %bf.load, 65535, !dbg !7465
  call void @llvm.dbg.value(metadata i64 %bf.cast, metadata !7434, metadata !DIExpression()), !dbg !7458
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7466
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7466
  call void @llvm.dbg.value(metadata i32 %5, metadata !7435, metadata !DIExpression()), !dbg !7458
  %call = tail call fastcc i32 @warning_candidate_p(%union.tree_node* %x.addr.0) #8, !dbg !7467
  %tobool = icmp eq i32 %call, 0, !dbg !7467
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !7463

if.then1:                                         ; preds = %restart
  %6 = load %struct.tlist*, %struct.tlist** %pno_sp, align 8, !dbg !7469
  %call2 = tail call fastcc %struct.tlist* @new_tlist(%struct.tlist* %6, %union.tree_node* %x.addr.0, %union.tree_node* %writer.addr.0) #8, !dbg !7470
  store %struct.tlist* %call2, %struct.tlist** %pno_sp, align 8, !dbg !7471
  br label %if.end3, !dbg !7472

if.end3:                                          ; preds = %restart, %if.then1
  %trunc = trunc i64 %bf.load to i16, !dbg !7473
  switch i16 %trunc, label %sw.default [
    i16 51, label %cleanup.loopexit2
    i16 52, label %sw.bb4
    i16 91, label %sw.bb4
    i16 92, label %sw.bb4
    i16 56, label %sw.bb9
    i16 125, label %sw.bb19
    i16 126, label %sw.bb19
    i16 127, label %sw.bb19
    i16 128, label %sw.bb19
    i16 53, label %sw.bb23
    i16 59, label %sw.bb44
    i16 2, label %while.cond.preheader
    i16 120, label %sw.bb53
    i16 121, label %sw.bb106
  ], !dbg !7473

while.cond.preheader:                             ; preds = %if.end3
  %x.addr.0.lcssa53 = phi %union.tree_node* [ %x.addr.0, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa53, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa53, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa53, metadata !7426, metadata !DIExpression()), !dbg !7458
  br label %while.cond, !dbg !7474

sw.bb4:                                           ; preds = %if.end3, %if.end3, %if.end3
  %x.addr.0.lcssa48 = phi %union.tree_node* [ %x.addr.0, %if.end3 ], [ %x.addr.0, %if.end3 ], [ %x.addr.0, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa48, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7433, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8, !dbg !7475
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7431, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8, !dbg !7476
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7430, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8, !dbg !7477
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0.lcssa48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7478
  %7 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7478
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %7, %struct.tlist** nonnull %tmp_before, %struct.tlist** nonnull %tmp_nosp, %union.tree_node* null) #8, !dbg !7479
  %8 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7480
  call void @llvm.dbg.value(metadata %struct.tlist* %8, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @warn_for_collisions(%struct.tlist* %8) #8, !dbg !7481
  %9 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8, !dbg !7482
  call void @llvm.dbg.value(metadata %struct.tlist* %9, metadata !7430, metadata !DIExpression()), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %9, i32 0) #8, !dbg !7483
  %10 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7484
  call void @llvm.dbg.value(metadata %struct.tlist* %10, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %10, i32 0) #8, !dbg !7485
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7486
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8, !dbg !7486
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list3, metadata !7433, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %11, %struct.tlist** nonnull %tmp_list3, %struct.tlist** %pno_sp, %union.tree_node* null) #8, !dbg !7487
  %12 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8, !dbg !7488
  call void @llvm.dbg.value(metadata %struct.tlist* %12, metadata !7433, metadata !DIExpression()), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %12, i32 0) #8, !dbg !7489
  br label %cleanup, !dbg !7490

sw.bb9:                                           ; preds = %if.end3
  %x.addr.0.lcssa49 = phi %union.tree_node* [ %x.addr.0, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa49, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa49, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa49, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7432, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list2, align 8, !dbg !7491
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7430, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8, !dbg !7492
  %operands11 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0.lcssa49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7493
  %13 = load %union.tree_node*, %union.tree_node** %operands11, align 8, !dbg !7493
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list2, metadata !7432, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %13, %struct.tlist** nonnull %tmp_before, %struct.tlist** nonnull %tmp_list2, %union.tree_node* null) #8, !dbg !7494
  %14 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8, !dbg !7495
  call void @llvm.dbg.value(metadata %struct.tlist* %14, metadata !7432, metadata !DIExpression()), !dbg !7458
  call fastcc void @warn_for_collisions(%struct.tlist* %14) #8, !dbg !7496
  %15 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8, !dbg !7497
  call void @llvm.dbg.value(metadata %struct.tlist* %15, metadata !7430, metadata !DIExpression()), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %15, i32 0) #8, !dbg !7498
  %16 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8, !dbg !7499
  call void @llvm.dbg.value(metadata %struct.tlist* %16, metadata !7432, metadata !DIExpression()), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %16, i32 1) #8, !dbg !7500
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7431, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8, !dbg !7501
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7433, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8, !dbg !7502
  %arrayidx15 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands11, i64 1, !dbg !7503
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx15, align 8, !dbg !7503
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list3, metadata !7433, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %17, %struct.tlist** nonnull %tmp_list3, %struct.tlist** nonnull %tmp_nosp, %union.tree_node* null) #8, !dbg !7504
  %18 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7505
  call void @llvm.dbg.value(metadata %struct.tlist* %18, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @warn_for_collisions(%struct.tlist* %18) #8, !dbg !7506
  %19 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8, !dbg !7507
  call void @llvm.dbg.value(metadata %struct.tlist* %19, metadata !7433, metadata !DIExpression()), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %19, i32 0) #8, !dbg !7508
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7432, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list2, align 8, !dbg !7509
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7433, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8, !dbg !7510
  %arrayidx18 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands11, i64 2, !dbg !7511
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8, !dbg !7511
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list2, metadata !7432, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list3, metadata !7433, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %20, %struct.tlist** nonnull %tmp_list3, %struct.tlist** nonnull %tmp_list2, %union.tree_node* null) #8, !dbg !7512
  %21 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8, !dbg !7513
  call void @llvm.dbg.value(metadata %struct.tlist* %21, metadata !7432, metadata !DIExpression()), !dbg !7458
  call fastcc void @warn_for_collisions(%struct.tlist* %21) #8, !dbg !7514
  %22 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8, !dbg !7515
  call void @llvm.dbg.value(metadata %struct.tlist* %22, metadata !7433, metadata !DIExpression()), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %22, i32 0) #8, !dbg !7516
  %23 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8, !dbg !7517
  call void @llvm.dbg.value(metadata %struct.tlist* %23, metadata !7432, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** nonnull %tmp_nosp, %struct.tlist* %23, i32 0) #8, !dbg !7518
  %24 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7519
  call void @llvm.dbg.value(metadata %struct.tlist* %24, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** %pno_sp, %struct.tlist* %24, %union.tree_node* null, i32 0) #8, !dbg !7520
  br label %cleanup, !dbg !7521

sw.bb19:                                          ; preds = %if.end3, %if.end3, %if.end3, %if.end3
  %x.addr.0.lcssa50 = phi %union.tree_node* [ %x.addr.0, %if.end3 ], [ %x.addr.0, %if.end3 ], [ %x.addr.0, %if.end3 ], [ %x.addr.0, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa50, metadata !7426, metadata !DIExpression()), !dbg !7458
  %operands21 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0.lcssa50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7522
  %25 = load %union.tree_node*, %union.tree_node** %operands21, align 8, !dbg !7522
  tail call fastcc void @verify_tree(%union.tree_node* %25, %struct.tlist** %pno_sp, %struct.tlist** %pno_sp, %union.tree_node* %x.addr.0.lcssa50) #8, !dbg !7523
  br label %cleanup, !dbg !7524

sw.bb23:                                          ; preds = %if.end3
  %x.addr.0.lcssa51 = phi %union.tree_node* [ %x.addr.0, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa51, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa51, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa51, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7433, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8, !dbg !7525
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7431, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8, !dbg !7526
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7430, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8, !dbg !7527
  %operands25 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0.lcssa51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7528
  %arrayidx26 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands25, i64 1, !dbg !7528
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8, !dbg !7528
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %26, %struct.tlist** nonnull %tmp_before, %struct.tlist** nonnull %tmp_nosp, %union.tree_node* null) #8, !dbg !7529
  %27 = load %union.tree_node*, %union.tree_node** %operands25, align 8, !dbg !7530
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list3, metadata !7433, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list3, metadata !7433, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %27, %struct.tlist** nonnull %tmp_list3, %struct.tlist** nonnull %tmp_list3, %union.tree_node* %x.addr.0.lcssa51) #8, !dbg !7531
  %28 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8, !dbg !7532
  call void @llvm.dbg.value(metadata %struct.tlist* %28, metadata !7433, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** nonnull %tmp_before, %struct.tlist* %28, %union.tree_node* %x.addr.0.lcssa51, i32 1) #8, !dbg !7533
  %29 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8, !dbg !7534
  call void @llvm.dbg.value(metadata %struct.tlist* %29, metadata !7430, metadata !DIExpression()), !dbg !7458
  call fastcc void @warn_for_collisions(%struct.tlist* %29) #8, !dbg !7535
  %30 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8, !dbg !7536
  call void @llvm.dbg.value(metadata %struct.tlist* %30, metadata !7433, metadata !DIExpression()), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** %pno_sp, %struct.tlist* %30, %union.tree_node* %x.addr.0.lcssa51, i32 0) #8, !dbg !7537
  %31 = load %union.tree_node*, %union.tree_node** %operands25, align 8, !dbg !7538
  %32 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7539
  call void @llvm.dbg.value(metadata %struct.tlist* %32, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @warn_for_collisions_1(%union.tree_node* %31, %union.tree_node* %x.addr.0.lcssa51, %struct.tlist* %32, i32 1) #8, !dbg !7540
  %33 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8, !dbg !7541
  call void @llvm.dbg.value(metadata %struct.tlist* %33, metadata !7430, metadata !DIExpression()), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %33, i32 0) #8, !dbg !7542
  %34 = load %union.tree_node*, %union.tree_node** %operands25, align 8, !dbg !7543
  %call36 = call fastcc i32 @warning_candidate_p(%union.tree_node* %34) #8, !dbg !7545
  %tobool37 = icmp eq i32 %call36, 0, !dbg !7545
  br i1 %tobool37, label %if.end43, label %if.then38, !dbg !7546

if.then38:                                        ; preds = %sw.bb23
  %35 = load %union.tree_node*, %union.tree_node** %operands25, align 8, !dbg !7547
  %call42 = call fastcc %struct.tlist* @new_tlist(%struct.tlist* null, %union.tree_node* %35, %union.tree_node* %x.addr.0.lcssa51) #8, !dbg !7548
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** nonnull %tmp_nosp, %struct.tlist* %call42, i32 0) #8, !dbg !7549
  br label %if.end43, !dbg !7549

if.end43:                                         ; preds = %sw.bb23, %if.then38
  %36 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7550
  call void @llvm.dbg.value(metadata %struct.tlist* %36, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** %pno_sp, %struct.tlist* %36, %union.tree_node* null, i32 1) #8, !dbg !7551
  br label %cleanup, !dbg !7552

sw.bb44:                                          ; preds = %if.end3
  %x.addr.0.lcssa52 = phi %union.tree_node* [ %x.addr.0, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa52, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa52, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa52, metadata !7426, metadata !DIExpression()), !dbg !7458
  %37 = bitcast %struct.call_expr_arg_iterator_d* %iter to i8*, !dbg !7553
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #6, !dbg !7553
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7431, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8, !dbg !7554
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7430, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8, !dbg !7555
  %operands46 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0.lcssa52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7556
  %arrayidx47 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands46, i64 1, !dbg !7556
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx47, align 8, !dbg !7556
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %38, %struct.tlist** nonnull %tmp_before, %struct.tlist** nonnull %tmp_nosp, %union.tree_node* null) #8, !dbg !7557
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !7436, metadata !DIExpression(DW_OP_deref)), !dbg !7558
  %call48 = call fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %x.addr.0.lcssa52, %struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !7559
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !7445, metadata !DIExpression()), !dbg !7558
  br label %for.cond, !dbg !7559

for.cond:                                         ; preds = %for.body, %sw.bb44
  %arg.0 = phi %union.tree_node* [ %call48, %sw.bb44 ], [ %call50, %for.body ], !dbg !7561
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !7445, metadata !DIExpression()), !dbg !7558
  %tobool49 = icmp eq %union.tree_node* %arg.0, null, !dbg !7559
  br i1 %tobool49, label %for.end, label %for.body, !dbg !7559

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7433, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8, !dbg !7562
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7432, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list2, align 8, !dbg !7565
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list2, metadata !7432, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list3, metadata !7433, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* nonnull %arg.0, %struct.tlist** nonnull %tmp_list2, %struct.tlist** nonnull %tmp_list3, %union.tree_node* null) #8, !dbg !7566
  %39 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8, !dbg !7567
  call void @llvm.dbg.value(metadata %struct.tlist* %39, metadata !7432, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list3, metadata !7433, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** nonnull %tmp_list3, %struct.tlist* %39, i32 0) #8, !dbg !7568
  %40 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8, !dbg !7569
  call void @llvm.dbg.value(metadata %struct.tlist* %40, metadata !7433, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** nonnull %tmp_before, %struct.tlist* %40, %union.tree_node* null, i32 0) #8, !dbg !7570
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !7436, metadata !DIExpression(DW_OP_deref)), !dbg !7558
  %call50 = call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !7571
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !7445, metadata !DIExpression()), !dbg !7558
  br label %for.cond, !dbg !7571, !llvm.loop !7572

for.end:                                          ; preds = %for.cond
  %41 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7574
  call void @llvm.dbg.value(metadata %struct.tlist* %41, metadata !7431, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** nonnull %tmp_before, %struct.tlist* %41, %union.tree_node* null, i32 0) #8, !dbg !7575
  %42 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8, !dbg !7576
  call void @llvm.dbg.value(metadata %struct.tlist* %42, metadata !7430, metadata !DIExpression()), !dbg !7458
  call fastcc void @warn_for_collisions(%struct.tlist* %42) #8, !dbg !7577
  %43 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8, !dbg !7578
  call void @llvm.dbg.value(metadata %struct.tlist* %43, metadata !7430, metadata !DIExpression()), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %43, %union.tree_node* null, i32 0) #8, !dbg !7579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #6, !dbg !7580
  br label %cleanup

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %x.addr.1 = phi %union.tree_node* [ %48, %while.body ], [ %x.addr.0.lcssa53, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.1, metadata !7426, metadata !DIExpression()), !dbg !7458
  %tobool52 = icmp eq %union.tree_node* %x.addr.1, null, !dbg !7474
  br i1 %tobool52, label %cleanup.loopexit1, label %while.body, !dbg !7474

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7431, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8, !dbg !7581
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7430, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8, !dbg !7583
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7584
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8, !dbg !7584
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %45, %struct.tlist** nonnull %tmp_before, %struct.tlist** nonnull %tmp_nosp, %union.tree_node* null) #8, !dbg !7585
  %46 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8, !dbg !7586
  call void @llvm.dbg.value(metadata %struct.tlist* %46, metadata !7430, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** nonnull %tmp_nosp, %struct.tlist* %46, i32 0) #8, !dbg !7587
  %47 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7588
  call void @llvm.dbg.value(metadata %struct.tlist* %47, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** %pno_sp, %struct.tlist* %47, %union.tree_node* null, i32 0) #8, !dbg !7589
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7590
  %48 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !7590
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !7426, metadata !DIExpression()), !dbg !7458
  br label %while.cond, !dbg !7474, !llvm.loop !7591

sw.bb53:                                          ; preds = %if.end3
  %x.addr.0.lcssa54 = phi %union.tree_node* [ %x.addr.0, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa54, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa54, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa54, metadata !7426, metadata !DIExpression()), !dbg !7458
  br label %for.cond54, !dbg !7593

for.cond54:                                       ; preds = %for.inc61, %sw.bb53
  %t.0.in = phi %struct.tlist_cache** [ @save_expr_cache, %sw.bb53 ], [ %next, %for.inc61 ]
  %t.0 = load %struct.tlist_cache*, %struct.tlist_cache** %t.0.in, align 8, !dbg !7595
  call void @llvm.dbg.value(metadata %struct.tlist_cache* %t.0, metadata !7446, metadata !DIExpression()), !dbg !7596
  %cond = icmp eq %struct.tlist_cache* %t.0, null, !dbg !7597
  br i1 %cond, label %if.then64.loopexit, label %for.body56, !dbg !7597

for.body56:                                       ; preds = %for.cond54
  %expr = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %t.0, i64 0, i32 3, !dbg !7598
  %49 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !7598
  %call57 = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %49, %union.tree_node* %x.addr.0.lcssa54) #8, !dbg !7601
  %tobool58 = icmp eq i8 %call57, 0, !dbg !7601
  br i1 %tobool58, label %for.inc61, label %for.end62, !dbg !7602

for.inc61:                                        ; preds = %for.body56
  %next = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %t.0, i64 0, i32 0, !dbg !7603
  br label %for.cond54, !dbg !7604, !llvm.loop !7605

for.end62:                                        ; preds = %for.body56
  %t.0.lcssa39 = phi %struct.tlist_cache* [ %t.0, %for.body56 ], !dbg !7595
  %cache_before_sp104.phi.trans.insert = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %t.0.lcssa39, i64 0, i32 1, !dbg !7596
  %.pre21 = load %struct.tlist*, %struct.tlist** %cache_before_sp104.phi.trans.insert, align 8, !dbg !7607
  br label %if.end103, !dbg !7608

if.then64.loopexit:                               ; preds = %for.cond54
  store i64 32, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !7609
  %50 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 4) to i64*), align 8, !dbg !7609
  %51 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3) to i64*), align 8, !dbg !7609
  %sub.ptr.sub = sub i64 %50, %51, !dbg !7609
  %cmp65 = icmp slt i64 %sub.ptr.sub, 32, !dbg !7609
  %52 = inttoptr i64 %51 to i8*, !dbg !7609
  br i1 %cmp65, label %cond.true, label %cond.end, !dbg !7609

cond.true:                                        ; preds = %if.then64.loopexit
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @tlist_obstack, i32 32) #7, !dbg !7609
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !7609
  %.pre20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !7609
  br label %cond.end, !dbg !7609

cond.end:                                         ; preds = %if.then64.loopexit, %cond.true
  %53 = phi i8* [ %52, %if.then64.loopexit ], [ %.pre20, %cond.true ], !dbg !7609
  %54 = phi i64 [ 32, %if.then64.loopexit ], [ %.pre, %cond.true ], !dbg !7609
  %add.ptr = getelementptr inbounds i8, i8* %53, i64 %54, !dbg !7609
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !7609
  %55 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 2), align 8, !dbg !7609
  %cmp66 = icmp eq i8* %add.ptr, %55, !dbg !7609
  %56 = ptrtoint i8* %55 to i64, !dbg !7609
  %57 = ptrtoint i8* %add.ptr to i64, !dbg !7609
  br i1 %cmp66, label %cond.true68, label %cond.end72, !dbg !7609

cond.true68:                                      ; preds = %cond.end
  %bf.load69 = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 10), align 8, !dbg !7609
  %bf.set = or i8 %bf.load69, 2, !dbg !7609
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 10), align 8, !dbg !7609
  br label %cond.end72, !dbg !7609

cond.end72:                                       ; preds = %cond.end, %cond.true68
  store i64 %56, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !7609
  %58 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 6), align 8, !dbg !7609
  %conv78 = sext i32 %58 to i64, !dbg !7609
  %add = add nsw i64 %57, %conv78, !dbg !7609
  %neg = xor i32 %58, -1, !dbg !7609
  %conv79 = sext i32 %neg to i64, !dbg !7609
  %and = and i64 %add, %conv79, !dbg !7609
  %59 = inttoptr i64 %and to i8*, !dbg !7609
  store i8* %59, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !7609
  %60 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 1) to i64*), align 8, !dbg !7609
  %sub.ptr.sub82 = sub i64 %and, %60, !dbg !7609
  %61 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 4) to i64*), align 8, !dbg !7609
  %sub.ptr.sub85 = sub i64 %61, %60, !dbg !7609
  %cmp86 = icmp sgt i64 %sub.ptr.sub82, %sub.ptr.sub85, !dbg !7609
  %62 = bitcast i8* %55 to %struct.tlist_cache*, !dbg !7609
  br i1 %cmp86, label %cond.true88, label %cond.end90, !dbg !7609

cond.true88:                                      ; preds = %cond.end72
  store i64 %61, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3) to i64*), align 8, !dbg !7609
  br label %cond.end90, !dbg !7609

cond.end90:                                       ; preds = %cond.end72, %cond.true88
  %63 = phi i64 [ %and, %cond.end72 ], [ %61, %cond.true88 ], !dbg !7609
  store i64 %63, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 2) to i64*), align 8, !dbg !7609
  call void @llvm.dbg.value(metadata %struct.tlist_cache* %62, metadata !7446, metadata !DIExpression()), !dbg !7596
  %64 = load i64, i64* bitcast (%struct.tlist_cache** @save_expr_cache to i64*), align 8, !dbg !7610
  %65 = bitcast i8* %55 to i64*, !dbg !7611
  store i64 %64, i64* %65, align 8, !dbg !7611
  %expr93 = getelementptr inbounds i8, i8* %55, i64 24, !dbg !7612
  %66 = bitcast i8* %expr93 to %union.tree_node**, !dbg !7612
  store %union.tree_node* %x.addr.0.lcssa54, %union.tree_node** %66, align 8, !dbg !7613
  store i8* %55, i8** bitcast (%struct.tlist_cache** @save_expr_cache to i8**), align 8, !dbg !7614
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7431, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8, !dbg !7615
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7430, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8, !dbg !7616
  %operands95 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0.lcssa54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7617
  %67 = load %union.tree_node*, %union.tree_node** %operands95, align 8, !dbg !7617
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %67, %struct.tlist** nonnull %tmp_before, %struct.tlist** nonnull %tmp_nosp, %union.tree_node* null) #8, !dbg !7618
  %68 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7619
  call void @llvm.dbg.value(metadata %struct.tlist* %68, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @warn_for_collisions(%struct.tlist* %68) #8, !dbg !7620
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7433, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8, !dbg !7621
  %69 = bitcast %struct.tlist** %tmp_nosp to i64*, !dbg !7622
  br label %while.cond97, !dbg !7623

while.cond97:                                     ; preds = %while.body99, %cond.end90
  %70 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7624
  call void @llvm.dbg.value(metadata %struct.tlist* %70, metadata !7431, metadata !DIExpression()), !dbg !7458
  %tobool98 = icmp eq %struct.tlist* %70, null, !dbg !7623
  br i1 %tobool98, label %while.end102, label %while.body99, !dbg !7623

while.body99:                                     ; preds = %while.cond97
  call void @llvm.dbg.value(metadata %struct.tlist* %70, metadata !7431, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist* %70, metadata !7448, metadata !DIExpression()), !dbg !7622
  %71 = bitcast %struct.tlist* %70 to i64*, !dbg !7625
  %72 = load i64, i64* %71, align 8, !dbg !7625
  store i64 %72, i64* %69, align 8, !dbg !7626
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_list3, metadata !7433, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** nonnull %tmp_list3, %struct.tlist* nonnull %70, i32 0) #8, !dbg !7627
  br label %while.cond97, !dbg !7623, !llvm.loop !7628

while.end102:                                     ; preds = %while.cond97
  %73 = bitcast %struct.tlist** %tmp_before to i64*, !dbg !7630
  %74 = load i64, i64* %73, align 8, !dbg !7630
  %cache_before_sp = getelementptr inbounds i8, i8* %55, i64 8, !dbg !7631
  %75 = bitcast i8* %cache_before_sp to i64*, !dbg !7632
  store i64 %74, i64* %75, align 8, !dbg !7632
  %76 = bitcast %struct.tlist** %tmp_list3 to i64*, !dbg !7633
  %77 = load i64, i64* %76, align 8, !dbg !7633
  %cache_after_sp = getelementptr inbounds i8, i8* %55, i64 16, !dbg !7634
  %78 = bitcast i8* %cache_after_sp to i64*, !dbg !7635
  store i64 %77, i64* %78, align 8, !dbg !7635
  %79 = inttoptr i64 %74 to %struct.tlist*, !dbg !7636
  br label %if.end103, !dbg !7636

if.end103:                                        ; preds = %for.end62, %while.end102
  %80 = phi %struct.tlist* [ %.pre21, %for.end62 ], [ %79, %while.end102 ], !dbg !7607
  %t.1 = phi %struct.tlist_cache* [ %t.0.lcssa39, %for.end62 ], [ %62, %while.end102 ], !dbg !7596
  call void @llvm.dbg.value(metadata %struct.tlist_cache* %t.1, metadata !7446, metadata !DIExpression()), !dbg !7596
  call fastcc void @merge_tlist(%struct.tlist** %pbefore_sp, %struct.tlist* %80, i32 1) #8, !dbg !7637
  %cache_after_sp105 = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %t.1, i64 0, i32 2, !dbg !7638
  %81 = load %struct.tlist*, %struct.tlist** %cache_after_sp105, align 8, !dbg !7638
  call fastcc void @add_tlist(%struct.tlist** %pno_sp, %struct.tlist* %81, %union.tree_node* null, i32 1) #8, !dbg !7639
  br label %cleanup

sw.bb106:                                         ; preds = %if.end3
  %operands108 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7640
  %82 = load %union.tree_node*, %union.tree_node** %operands108, align 8, !dbg !7640
  call void @llvm.dbg.value(metadata %union.tree_node* %82, metadata !7426, metadata !DIExpression()), !dbg !7458
  %83 = getelementptr inbounds %union.tree_node, %union.tree_node* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7641
  %bf.load111 = load i64, i64* %83, align 8, !dbg !7641
  %bf.cast113 = and i64 %bf.load111, 65535, !dbg !7641
  %arrayidx115 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast113, !dbg !7641
  %84 = load i32, i32* %arrayidx115, align 4, !dbg !7641
  %cmp116 = icmp eq i32 %84, 3, !dbg !7641
  br i1 %cmp116, label %cleanup.loopexit2, label %restart.backedge, !dbg !7643

sw.default:                                       ; preds = %if.end3
  %cmp120 = icmp eq i32 %5, 6, !dbg !7644
  br i1 %cmp120, label %if.then122, label %if.else, !dbg !7645

if.then122:                                       ; preds = %sw.default
  %operands124 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7646
  %85 = load %union.tree_node*, %union.tree_node** %operands124, align 8, !dbg !7646
  call void @llvm.dbg.value(metadata %union.tree_node* %85, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7429, metadata !DIExpression()), !dbg !7458
  br label %restart.backedge, !dbg !7648

restart.backedge:                                 ; preds = %if.then122, %sw.bb106
  %x.addr.0.be = phi %union.tree_node* [ %85, %if.then122 ], [ %82, %sw.bb106 ]
  br label %restart, !dbg !7458

if.else:                                          ; preds = %sw.default
  %x.addr.0.lcssa55 = phi %union.tree_node* [ %x.addr.0, %sw.default ]
  %.lcssa47 = phi i32 [ %5, %sw.default ], !dbg !7466
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa55, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa55, metadata !7426, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0.lcssa55, metadata !7426, metadata !DIExpression()), !dbg !7458
  %.off = add i32 %.lcssa47, -4, !dbg !7649
  %86 = icmp ult i32 %.off, 7, !dbg !7649
  br i1 %86, label %if.then130, label %cleanup, !dbg !7649

if.then130:                                       ; preds = %if.else
  %call131 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %x.addr.0.lcssa55) #8, !dbg !7650
  call void @llvm.dbg.value(metadata i32 %call131, metadata !7456, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 0, metadata !7452, metadata !DIExpression()), !dbg !7651
  %operands137 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0.lcssa55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7652
  %87 = sext i32 %call131 to i64, !dbg !7656
  br label %for.cond132, !dbg !7656

for.cond132:                                      ; preds = %for.body135, %if.then130
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body135 ], [ 0, %if.then130 ], !dbg !7657
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7452, metadata !DIExpression()), !dbg !7651
  %cmp133 = icmp slt i64 %indvars.iv, %87, !dbg !7658
  br i1 %cmp133, label %for.body135, label %cleanup.loopexit, !dbg !7659

for.body135:                                      ; preds = %for.cond132
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7431, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8, !dbg !7660
  call void @llvm.dbg.value(metadata %struct.tlist* null, metadata !7430, metadata !DIExpression()), !dbg !7458
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8, !dbg !7661
  %arrayidx139 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands137, i64 %indvars.iv, !dbg !7662
  %88 = load %union.tree_node*, %union.tree_node** %arrayidx139, align 8, !dbg !7662
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_before, metadata !7430, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @verify_tree(%union.tree_node* %88, %struct.tlist** nonnull %tmp_before, %struct.tlist** nonnull %tmp_nosp, %union.tree_node* null) #8, !dbg !7663
  %89 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8, !dbg !7664
  call void @llvm.dbg.value(metadata %struct.tlist* %89, metadata !7430, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata %struct.tlist** %tmp_nosp, metadata !7431, metadata !DIExpression(DW_OP_deref)), !dbg !7458
  call fastcc void @merge_tlist(%struct.tlist** nonnull %tmp_nosp, %struct.tlist* %89, i32 0) #8, !dbg !7665
  %90 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8, !dbg !7666
  call void @llvm.dbg.value(metadata %struct.tlist* %90, metadata !7431, metadata !DIExpression()), !dbg !7458
  call fastcc void @add_tlist(%struct.tlist** %pno_sp, %struct.tlist* %90, %union.tree_node* null, i32 0) #8, !dbg !7667
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7668
  call void @llvm.dbg.value(metadata i32 undef, metadata !7452, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7651
  br label %for.cond132, !dbg !7669, !llvm.loop !7670

cleanup.loopexit:                                 ; preds = %for.cond132
  br label %cleanup, !dbg !7672

cleanup.loopexit1:                                ; preds = %while.cond
  br label %cleanup, !dbg !7672

cleanup.loopexit2:                                ; preds = %if.end3, %sw.bb106
  br label %cleanup, !dbg !7672

cleanup:                                          ; preds = %cleanup.loopexit2, %cleanup.loopexit1, %cleanup.loopexit, %if.else, %entry, %if.end103, %for.end, %if.end43, %sw.bb19, %sw.bb9, %sw.bb4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !7672
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !7672
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !7672
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7672
  ret void, !dbg !7672
}

; Function Attrs: nounwind uwtable
define internal fastcc void @warn_for_collisions(%struct.tlist* %list) unnamed_addr #5 !dbg !7673 {
entry:
  call void @llvm.dbg.value(metadata %struct.tlist* %list, metadata !7677, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata %struct.tlist* %list, metadata !7678, metadata !DIExpression()), !dbg !7679
  br label %for.cond, !dbg !7680

for.cond:                                         ; preds = %for.inc, %entry
  %tmp.0 = phi %struct.tlist* [ %list, %entry ], [ %2, %for.inc ], !dbg !7682
  call void @llvm.dbg.value(metadata %struct.tlist* %tmp.0, metadata !7678, metadata !DIExpression()), !dbg !7679
  %tobool = icmp eq %struct.tlist* %tmp.0, null, !dbg !7683
  br i1 %tobool, label %for.end, label %for.body, !dbg !7683

for.body:                                         ; preds = %for.cond
  %writer = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp.0, i64 0, i32 2, !dbg !7684
  %0 = load %union.tree_node*, %union.tree_node** %writer, align 8, !dbg !7684
  %tobool1 = icmp eq %union.tree_node* %0, null, !dbg !7688
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !7689

if.then:                                          ; preds = %for.body
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp.0, i64 0, i32 1, !dbg !7690
  %1 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !7690
  tail call fastcc void @warn_for_collisions_1(%union.tree_node* %1, %union.tree_node* nonnull %0, %struct.tlist* %list, i32 0) #8, !dbg !7691
  br label %for.inc, !dbg !7691

for.inc:                                          ; preds = %for.body, %if.then
  %next = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp.0, i64 0, i32 0, !dbg !7692
  %2 = load %struct.tlist*, %struct.tlist** %next, align 8, !dbg !7692
  call void @llvm.dbg.value(metadata %struct.tlist* %2, metadata !7678, metadata !DIExpression()), !dbg !7679
  br label %for.cond, !dbg !7693, !llvm.loop !7694

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7696
}

declare dso_local void @obstack_free(%struct.obstack*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_common_type_for_size(i32 %bits, i32 %unsignedp) local_unnamed_addr #5 !dbg !7697 {
entry:
  call void @llvm.dbg.value(metadata i32 %bits, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !7702, metadata !DIExpression()), !dbg !7703
  %0 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !7704
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %0, i64 0, i32 6, !dbg !7704
  %bf.load = load i32, i32* %precision, align 4, !dbg !7704
  %bf.clear = and i32 %bf.load, 1023, !dbg !7704
  %cmp = icmp eq i32 %bf.clear, %bits, !dbg !7706
  br i1 %cmp, label %if.then, label %if.end, !dbg !7707

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.tree_type* %0 to %union.tree_node*, !dbg !7707
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !7708
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !7708
  %cond = select i1 %tobool, %union.tree_node* %1, %union.tree_node* %2, !dbg !7708
  br label %return, !dbg !7708

if.end:                                           ; preds = %entry
  %3 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1) to %struct.tree_type**), align 8, !dbg !7709
  %precision2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 6, !dbg !7709
  %bf.load3 = load i32, i32* %precision2, align 4, !dbg !7709
  %bf.clear4 = and i32 %bf.load3, 1023, !dbg !7709
  %cmp5 = icmp eq i32 %bf.clear4, %bits, !dbg !7711
  br i1 %cmp5, label %if.then6, label %if.end12, !dbg !7712

if.then6:                                         ; preds = %if.end
  %4 = bitcast %struct.tree_type* %3 to %union.tree_node*, !dbg !7712
  %tobool7 = icmp eq i32 %unsignedp, 0, !dbg !7713
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !7713
  %cond11 = select i1 %tobool7, %union.tree_node* %4, %union.tree_node* %5, !dbg !7713
  br label %return, !dbg !7713

if.end12:                                         ; preds = %if.end
  %6 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3) to %struct.tree_type**), align 8, !dbg !7714
  %precision14 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 6, !dbg !7714
  %bf.load15 = load i32, i32* %precision14, align 4, !dbg !7714
  %bf.clear16 = and i32 %bf.load15, 1023, !dbg !7714
  %cmp17 = icmp eq i32 %bf.clear16, %bits, !dbg !7716
  br i1 %cmp17, label %if.then18, label %if.end24, !dbg !7717

if.then18:                                        ; preds = %if.end12
  %7 = bitcast %struct.tree_type* %6 to %union.tree_node*, !dbg !7717
  %tobool19 = icmp eq i32 %unsignedp, 0, !dbg !7718
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !7718
  %cond23 = select i1 %tobool19, %union.tree_node* %7, %union.tree_node* %8, !dbg !7718
  br label %return, !dbg !7718

if.end24:                                         ; preds = %if.end12
  %9 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7) to %struct.tree_type**), align 8, !dbg !7719
  %precision26 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 6, !dbg !7719
  %bf.load27 = load i32, i32* %precision26, align 4, !dbg !7719
  %bf.clear28 = and i32 %bf.load27, 1023, !dbg !7719
  %cmp29 = icmp eq i32 %bf.clear28, %bits, !dbg !7721
  br i1 %cmp29, label %if.then30, label %if.end36, !dbg !7722

if.then30:                                        ; preds = %if.end24
  %10 = bitcast %struct.tree_type* %9 to %union.tree_node*, !dbg !7722
  %tobool31 = icmp eq i32 %unsignedp, 0, !dbg !7723
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !7723
  %cond35 = select i1 %tobool31, %union.tree_node* %10, %union.tree_node* %11, !dbg !7723
  br label %return, !dbg !7723

if.end36:                                         ; preds = %if.end24
  %12 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9) to %struct.tree_type**), align 8, !dbg !7724
  %precision38 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 6, !dbg !7724
  %bf.load39 = load i32, i32* %precision38, align 4, !dbg !7724
  %bf.clear40 = and i32 %bf.load39, 1023, !dbg !7724
  %cmp41 = icmp eq i32 %bf.clear40, %bits, !dbg !7726
  br i1 %cmp41, label %if.then42, label %if.end48, !dbg !7727

if.then42:                                        ; preds = %if.end36
  %13 = bitcast %struct.tree_type* %12 to %union.tree_node*, !dbg !7727
  %tobool43 = icmp eq i32 %unsignedp, 0, !dbg !7728
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !7728
  %cond47 = select i1 %tobool43, %union.tree_node* %13, %union.tree_node* %14, !dbg !7728
  br label %return, !dbg !7728

if.end48:                                         ; preds = %if.end36
  %15 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 9) to %struct.tree_type**), align 8, !dbg !7729
  %precision50 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 6, !dbg !7729
  %bf.load51 = load i32, i32* %precision50, align 4, !dbg !7729
  %bf.clear52 = and i32 %bf.load51, 1023, !dbg !7729
  %cmp53 = icmp eq i32 %bf.clear52, %bits, !dbg !7731
  br i1 %cmp53, label %if.then54, label %if.end60, !dbg !7732

if.then54:                                        ; preds = %if.end48
  %16 = bitcast %struct.tree_type* %15 to %union.tree_node*, !dbg !7732
  %tobool55 = icmp eq i32 %unsignedp, 0, !dbg !7733
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 10), align 16, !dbg !7733
  %cond59 = select i1 %tobool55, %union.tree_node* %16, %union.tree_node* %17, !dbg !7733
  br label %return, !dbg !7733

if.end60:                                         ; preds = %if.end48
  %18 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 1) to %struct.tree_type**), align 8, !dbg !7734
  %precision62 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 6, !dbg !7734
  %bf.load63 = load i32, i32* %precision62, align 4, !dbg !7734
  %bf.clear64 = and i32 %bf.load63, 1023, !dbg !7734
  %cmp65 = icmp ult i32 %bf.clear64, %bits, !dbg !7736
  br i1 %cmp65, label %if.end72, label %if.then66, !dbg !7737

if.then66:                                        ; preds = %if.end60
  %19 = bitcast %struct.tree_type* %18 to %union.tree_node*, !dbg !7737
  %tobool67 = icmp eq i32 %unsignedp, 0, !dbg !7738
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 6), align 16, !dbg !7738
  %cond71 = select i1 %tobool67, %union.tree_node* %19, %union.tree_node* %20, !dbg !7738
  br label %return, !dbg !7738

if.end72:                                         ; preds = %if.end60
  %21 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 2) to %struct.tree_type**), align 16, !dbg !7739
  %precision74 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %21, i64 0, i32 6, !dbg !7739
  %bf.load75 = load i32, i32* %precision74, align 4, !dbg !7739
  %bf.clear76 = and i32 %bf.load75, 1023, !dbg !7739
  %cmp77 = icmp ult i32 %bf.clear76, %bits, !dbg !7741
  br i1 %cmp77, label %if.end84, label %if.then78, !dbg !7742

if.then78:                                        ; preds = %if.end72
  %22 = bitcast %struct.tree_type* %21 to %union.tree_node*, !dbg !7742
  %tobool79 = icmp eq i32 %unsignedp, 0, !dbg !7743
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 7), align 8, !dbg !7743
  %cond83 = select i1 %tobool79, %union.tree_node* %22, %union.tree_node* %23, !dbg !7743
  br label %return, !dbg !7743

if.end84:                                         ; preds = %if.end72
  %24 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 3) to %struct.tree_type**), align 8, !dbg !7744
  %precision86 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 6, !dbg !7744
  %bf.load87 = load i32, i32* %precision86, align 4, !dbg !7744
  %bf.clear88 = and i32 %bf.load87, 1023, !dbg !7744
  %cmp89 = icmp ult i32 %bf.clear88, %bits, !dbg !7746
  br i1 %cmp89, label %if.end96, label %if.then90, !dbg !7747

if.then90:                                        ; preds = %if.end84
  %25 = bitcast %struct.tree_type* %24 to %union.tree_node*, !dbg !7747
  %tobool91 = icmp eq i32 %unsignedp, 0, !dbg !7748
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 8), align 16, !dbg !7748
  %cond95 = select i1 %tobool91, %union.tree_node* %25, %union.tree_node* %26, !dbg !7748
  br label %return, !dbg !7748

if.end96:                                         ; preds = %if.end84
  %27 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 4) to %struct.tree_type**), align 16, !dbg !7749
  %precision98 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 6, !dbg !7749
  %bf.load99 = load i32, i32* %precision98, align 4, !dbg !7749
  %bf.clear100 = and i32 %bf.load99, 1023, !dbg !7749
  %cmp101 = icmp ult i32 %bf.clear100, %bits, !dbg !7751
  br i1 %cmp101, label %return, label %if.then102, !dbg !7752

if.then102:                                       ; preds = %if.end96
  %28 = bitcast %struct.tree_type* %27 to %union.tree_node*, !dbg !7752
  %tobool103 = icmp eq i32 %unsignedp, 0, !dbg !7753
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 9), align 8, !dbg !7753
  %cond107 = select i1 %tobool103, %union.tree_node* %28, %union.tree_node* %29, !dbg !7753
  br label %return, !dbg !7753

return:                                           ; preds = %if.end96, %if.then102, %if.then90, %if.then78, %if.then66, %if.then54, %if.then42, %if.then30, %if.then18, %if.then6, %if.then
  %retval.0 = phi %union.tree_node* [ %cond, %if.then ], [ %cond11, %if.then6 ], [ %cond23, %if.then18 ], [ %cond35, %if.then30 ], [ %cond47, %if.then42 ], [ %cond59, %if.then54 ], [ %cond71, %if.then66 ], [ %cond83, %if.then78 ], [ %cond95, %if.then90 ], [ %cond107, %if.then102 ], [ null, %if.end96 ], !dbg !7703
  ret %union.tree_node* %retval.0, !dbg !7754
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_common_fixed_point_type_for_size(i32 %ibit, i32 %fbit, i32 %unsignedp, i32 %satp) local_unnamed_addr #5 !dbg !7755 {
entry:
  call void @llvm.dbg.value(metadata i32 %ibit, metadata !7759, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %fbit, metadata !7760, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !7761, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %satp, metadata !7762, metadata !DIExpression()), !dbg !7764
  %cmp = icmp eq i32 %ibit, 0, !dbg !7765
  %tobool = icmp ne i32 %unsignedp, 0, !dbg !7767
  %cond = select i1 %tobool, i32 25, i32 20, !dbg !7768
  %cond2 = select i1 %tobool, i32 34, i32 30, !dbg !7768
  %mode.0 = select i1 %cmp, i32 %cond, i32 %cond2, !dbg !7768
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !7763, metadata !DIExpression()), !dbg !7764
  br label %for.cond, !dbg !7769

for.cond:                                         ; preds = %for.inc, %entry
  %mode.1 = phi i32 [ %mode.0, %entry ], [ %conv15, %for.inc ], !dbg !7764
  call void @llvm.dbg.value(metadata i32 %mode.1, metadata !7763, metadata !DIExpression()), !dbg !7764
  %cond1 = icmp eq i32 %mode.1, 0, !dbg !7770
  br i1 %cond1, label %if.then19.loopexit, label %for.body, !dbg !7770

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %mode.1 to i64, !dbg !7772
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_ibit, i64 0, i64 %idxprom, !dbg !7772
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7772
  %conv = zext i8 %0 to i32, !dbg !7772
  %cmp4 = icmp ult i32 %conv, %ibit, !dbg !7775
  br i1 %cmp4, label %for.inc, label %land.lhs.true, !dbg !7776

land.lhs.true:                                    ; preds = %for.body
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_fbit, i64 0, i64 %idxprom, !dbg !7777
  %1 = load i8, i8* %arrayidx7, align 1, !dbg !7777
  %conv8 = zext i8 %1 to i32, !dbg !7777
  %cmp9 = icmp ult i32 %conv8, %fbit, !dbg !7778
  br i1 %cmp9, label %for.inc, label %for.end, !dbg !7779

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %arrayidx14 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !7780
  %2 = load i8, i8* %arrayidx14, align 1, !dbg !7780
  %conv15 = zext i8 %2 to i32, !dbg !7780
  call void @llvm.dbg.value(metadata i32 %conv15, metadata !7763, metadata !DIExpression()), !dbg !7764
  br label %for.cond, !dbg !7781, !llvm.loop !7782

for.end:                                          ; preds = %land.lhs.true
  %mode.1.lcssa4 = phi i32 [ %mode.1, %land.lhs.true ], !dbg !7764
  call void @llvm.dbg.value(metadata i32 %mode.1.lcssa4, metadata !7763, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %mode.1.lcssa4, metadata !7763, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %mode.1.lcssa4, metadata !7763, metadata !DIExpression()), !dbg !7764
  br i1 false, label %for.end.if.then19_crit_edge, label %lor.lhs.false, !dbg !7784

for.end.if.then19_crit_edge:                      ; preds = %for.end
  br label %if.then19, !dbg !7784

lor.lhs.false:                                    ; preds = %for.end
  %3 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !7786
  %call = tail call zeroext i8 %3(i32 %mode.1.lcssa4) #7, !dbg !7787
  %tobool18 = icmp eq i8 %call, 0, !dbg !7787
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !7788

if.then19.loopexit:                               ; preds = %for.cond
  br label %if.then19, !dbg !7789

if.then19:                                        ; preds = %for.end.if.then19_crit_edge, %if.then19.loopexit, %lor.lhs.false
  tail call void (i8*, ...) @sorry(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.227, i64 0, i64 0)) #7, !dbg !7789
  br label %cleanup, !dbg !7791

if.end20:                                         ; preds = %lor.lhs.false
  %call21 = tail call %union.tree_node* @c_common_type_for_mode(i32 %mode.1.lcssa4, i32 %satp) #8, !dbg !7792
  br label %cleanup, !dbg !7793

cleanup:                                          ; preds = %if.end20, %if.then19
  %retval.0 = phi %union.tree_node* [ null, %if.then19 ], [ %call21, %if.end20 ], !dbg !7764
  ret %union.tree_node* %retval.0, !dbg !7794
}

declare dso_local void @sorry(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_common_type_for_mode(i32 %mode, i32 %unsignedp) local_unnamed_addr #5 !dbg !7795 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7799, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !7800, metadata !DIExpression()), !dbg !7810
  %0 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64**), align 8, !dbg !7811
  %bf.load = load i64, i64* %0, align 8, !dbg !7811
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !7811
  %cmp = icmp eq i64 %bf.cast3, 14, !dbg !7811
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7811

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %0 to %union.tree_node*, !dbg !7811
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !7811
  br label %cond.end, !dbg !7811

cond.false:                                       ; preds = %entry
  %type = bitcast i64* %0 to %struct.tree_type*, !dbg !7811
  %mode1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !7811
  %bf.load2 = load i32, i32* %mode1, align 4, !dbg !7811
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !7811
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !7811
  br label %cond.end, !dbg !7811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear3, %cond.false ], !dbg !7811
  %cmp4 = icmp eq i32 %cond, %mode, !dbg !7813
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7814

if.then:                                          ; preds = %cond.end
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !7815
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !7815
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !7815
  %cond8 = select i1 %tobool, %union.tree_node* %2, %union.tree_node* %1, !dbg !7815
  br label %cleanup1147, !dbg !7815

if.end:                                           ; preds = %cond.end
  %3 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1) to i64**), align 8, !dbg !7816
  %bf.load10 = load i64, i64* %3, align 8, !dbg !7816
  %bf.cast124 = and i64 %bf.load10, 65535, !dbg !7816
  %cmp13 = icmp eq i64 %bf.cast124, 14, !dbg !7816
  br i1 %cmp13, label %cond.true14, label %cond.false16, !dbg !7816

cond.true14:                                      ; preds = %if.end
  %.cast5 = bitcast i64* %3 to %union.tree_node*, !dbg !7816
  %call15 = tail call i32 @vector_type_mode(%union.tree_node* %.cast5) #7, !dbg !7816
  br label %cond.end22, !dbg !7816

cond.false16:                                     ; preds = %if.end
  %type17 = bitcast i64* %3 to %struct.tree_type*, !dbg !7816
  %mode18 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type17, i64 0, i32 6, !dbg !7816
  %bf.load19 = load i32, i32* %mode18, align 4, !dbg !7816
  %bf.lshr20 = lshr i32 %bf.load19, 16, !dbg !7816
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !7816
  br label %cond.end22, !dbg !7816

cond.end22:                                       ; preds = %cond.false16, %cond.true14
  %cond23 = phi i32 [ %call15, %cond.true14 ], [ %bf.clear21, %cond.false16 ], !dbg !7816
  %cmp24 = icmp eq i32 %cond23, %mode, !dbg !7818
  br i1 %cmp24, label %if.then25, label %if.end31, !dbg !7819

if.then25:                                        ; preds = %cond.end22
  %tobool26 = icmp eq i32 %unsignedp, 0, !dbg !7820
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !7820
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !7820
  %cond30 = select i1 %tobool26, %union.tree_node* %5, %union.tree_node* %4, !dbg !7820
  br label %cleanup1147, !dbg !7820

if.end31:                                         ; preds = %cond.end22
  %6 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3) to i64**), align 8, !dbg !7821
  %bf.load33 = load i64, i64* %6, align 8, !dbg !7821
  %bf.cast356 = and i64 %bf.load33, 65535, !dbg !7821
  %cmp36 = icmp eq i64 %bf.cast356, 14, !dbg !7821
  br i1 %cmp36, label %cond.true37, label %cond.false39, !dbg !7821

cond.true37:                                      ; preds = %if.end31
  %.cast7 = bitcast i64* %6 to %union.tree_node*, !dbg !7821
  %call38 = tail call i32 @vector_type_mode(%union.tree_node* %.cast7) #7, !dbg !7821
  br label %cond.end45, !dbg !7821

cond.false39:                                     ; preds = %if.end31
  %type40 = bitcast i64* %6 to %struct.tree_type*, !dbg !7821
  %mode41 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type40, i64 0, i32 6, !dbg !7821
  %bf.load42 = load i32, i32* %mode41, align 4, !dbg !7821
  %bf.lshr43 = lshr i32 %bf.load42, 16, !dbg !7821
  %bf.clear44 = and i32 %bf.lshr43, 255, !dbg !7821
  br label %cond.end45, !dbg !7821

cond.end45:                                       ; preds = %cond.false39, %cond.true37
  %cond46 = phi i32 [ %call38, %cond.true37 ], [ %bf.clear44, %cond.false39 ], !dbg !7821
  %cmp47 = icmp eq i32 %cond46, %mode, !dbg !7823
  br i1 %cmp47, label %if.then48, label %if.end54, !dbg !7824

if.then48:                                        ; preds = %cond.end45
  %tobool49 = icmp eq i32 %unsignedp, 0, !dbg !7825
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !7825
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !dbg !7825
  %cond53 = select i1 %tobool49, %union.tree_node* %8, %union.tree_node* %7, !dbg !7825
  br label %cleanup1147, !dbg !7825

if.end54:                                         ; preds = %cond.end45
  %9 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7) to i64**), align 8, !dbg !7826
  %bf.load56 = load i64, i64* %9, align 8, !dbg !7826
  %bf.cast588 = and i64 %bf.load56, 65535, !dbg !7826
  %cmp59 = icmp eq i64 %bf.cast588, 14, !dbg !7826
  br i1 %cmp59, label %cond.true60, label %cond.false62, !dbg !7826

cond.true60:                                      ; preds = %if.end54
  %.cast9 = bitcast i64* %9 to %union.tree_node*, !dbg !7826
  %call61 = tail call i32 @vector_type_mode(%union.tree_node* %.cast9) #7, !dbg !7826
  br label %cond.end68, !dbg !7826

cond.false62:                                     ; preds = %if.end54
  %type63 = bitcast i64* %9 to %struct.tree_type*, !dbg !7826
  %mode64 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type63, i64 0, i32 6, !dbg !7826
  %bf.load65 = load i32, i32* %mode64, align 4, !dbg !7826
  %bf.lshr66 = lshr i32 %bf.load65, 16, !dbg !7826
  %bf.clear67 = and i32 %bf.lshr66, 255, !dbg !7826
  br label %cond.end68, !dbg !7826

cond.end68:                                       ; preds = %cond.false62, %cond.true60
  %cond69 = phi i32 [ %call61, %cond.true60 ], [ %bf.clear67, %cond.false62 ], !dbg !7826
  %cmp70 = icmp eq i32 %cond69, %mode, !dbg !7828
  br i1 %cmp70, label %if.then71, label %if.end77, !dbg !7829

if.then71:                                        ; preds = %cond.end68
  %tobool72 = icmp eq i32 %unsignedp, 0, !dbg !7830
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !7830
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !7830
  %cond76 = select i1 %tobool72, %union.tree_node* %11, %union.tree_node* %10, !dbg !7830
  br label %cleanup1147, !dbg !7830

if.end77:                                         ; preds = %cond.end68
  %12 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9) to i64**), align 8, !dbg !7831
  %bf.load79 = load i64, i64* %12, align 8, !dbg !7831
  %bf.cast8110 = and i64 %bf.load79, 65535, !dbg !7831
  %cmp82 = icmp eq i64 %bf.cast8110, 14, !dbg !7831
  br i1 %cmp82, label %cond.true83, label %cond.false85, !dbg !7831

cond.true83:                                      ; preds = %if.end77
  %.cast11 = bitcast i64* %12 to %union.tree_node*, !dbg !7831
  %call84 = tail call i32 @vector_type_mode(%union.tree_node* %.cast11) #7, !dbg !7831
  br label %cond.end91, !dbg !7831

cond.false85:                                     ; preds = %if.end77
  %type86 = bitcast i64* %12 to %struct.tree_type*, !dbg !7831
  %mode87 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type86, i64 0, i32 6, !dbg !7831
  %bf.load88 = load i32, i32* %mode87, align 4, !dbg !7831
  %bf.lshr89 = lshr i32 %bf.load88, 16, !dbg !7831
  %bf.clear90 = and i32 %bf.lshr89, 255, !dbg !7831
  br label %cond.end91, !dbg !7831

cond.end91:                                       ; preds = %cond.false85, %cond.true83
  %cond92 = phi i32 [ %call84, %cond.true83 ], [ %bf.clear90, %cond.false85 ], !dbg !7831
  %cmp93 = icmp eq i32 %cond92, %mode, !dbg !7833
  br i1 %cmp93, label %if.then94, label %if.end100, !dbg !7834

if.then94:                                        ; preds = %cond.end91
  %tobool95 = icmp eq i32 %unsignedp, 0, !dbg !7835
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !7835
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !7835
  %cond99 = select i1 %tobool95, %union.tree_node* %14, %union.tree_node* %13, !dbg !7835
  br label %cleanup1147, !dbg !7835

if.end100:                                        ; preds = %cond.end91
  %15 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 9) to i64**), align 8, !dbg !7836
  %bf.load102 = load i64, i64* %15, align 8, !dbg !7836
  %bf.cast10412 = and i64 %bf.load102, 65535, !dbg !7836
  %cmp105 = icmp eq i64 %bf.cast10412, 14, !dbg !7836
  br i1 %cmp105, label %cond.true106, label %cond.false108, !dbg !7836

cond.true106:                                     ; preds = %if.end100
  %.cast13 = bitcast i64* %15 to %union.tree_node*, !dbg !7836
  %call107 = tail call i32 @vector_type_mode(%union.tree_node* %.cast13) #7, !dbg !7836
  br label %cond.end114, !dbg !7836

cond.false108:                                    ; preds = %if.end100
  %type109 = bitcast i64* %15 to %struct.tree_type*, !dbg !7836
  %mode110 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type109, i64 0, i32 6, !dbg !7836
  %bf.load111 = load i32, i32* %mode110, align 4, !dbg !7836
  %bf.lshr112 = lshr i32 %bf.load111, 16, !dbg !7836
  %bf.clear113 = and i32 %bf.lshr112, 255, !dbg !7836
  br label %cond.end114, !dbg !7836

cond.end114:                                      ; preds = %cond.false108, %cond.true106
  %cond115 = phi i32 [ %call107, %cond.true106 ], [ %bf.clear113, %cond.false108 ], !dbg !7836
  %cmp116 = icmp eq i32 %cond115, %mode, !dbg !7838
  br i1 %cmp116, label %if.then117, label %if.end123, !dbg !7839

if.then117:                                       ; preds = %cond.end114
  %tobool118 = icmp eq i32 %unsignedp, 0, !dbg !7840
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 10), align 16, !dbg !7840
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 9), align 8, !dbg !7840
  %cond122 = select i1 %tobool118, %union.tree_node* %17, %union.tree_node* %16, !dbg !7840
  br label %cleanup1147, !dbg !7840

if.end123:                                        ; preds = %cond.end114
  switch i32 %mode, label %if.end155 [
    i32 14, label %if.then125
    i32 15, label %if.then133
    i32 16, label %if.then141
    i32 17, label %if.then149
  ], !dbg !7841

if.then125:                                       ; preds = %if.end123
  %tobool126 = icmp eq i32 %unsignedp, 0, !dbg !7842
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 6), align 16, !dbg !7842
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 1), align 8, !dbg !7842
  %cond130 = select i1 %tobool126, %union.tree_node* %19, %union.tree_node* %18, !dbg !7842
  br label %cleanup1147, !dbg !7842

if.then133:                                       ; preds = %if.end123
  %tobool134 = icmp eq i32 %unsignedp, 0, !dbg !7844
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 7), align 8, !dbg !7844
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 2), align 16, !dbg !7844
  %cond138 = select i1 %tobool134, %union.tree_node* %21, %union.tree_node* %20, !dbg !7844
  br label %cleanup1147, !dbg !7844

if.then141:                                       ; preds = %if.end123
  %tobool142 = icmp eq i32 %unsignedp, 0, !dbg !7846
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 8), align 16, !dbg !7846
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 3), align 8, !dbg !7846
  %cond146 = select i1 %tobool142, %union.tree_node* %23, %union.tree_node* %22, !dbg !7846
  br label %cleanup1147, !dbg !7846

if.then149:                                       ; preds = %if.end123
  %tobool150 = icmp eq i32 %unsignedp, 0, !dbg !7848
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 9), align 8, !dbg !7848
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 4), align 16, !dbg !7848
  %cond154 = select i1 %tobool150, %union.tree_node* %25, %union.tree_node* %24, !dbg !7848
  br label %cleanup1147, !dbg !7848

if.end155:                                        ; preds = %if.end123
  %26 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 5) to i64**), align 8, !dbg !7850
  %bf.load157 = load i64, i64* %26, align 8, !dbg !7850
  %bf.cast15914 = and i64 %bf.load157, 65535, !dbg !7850
  %cmp160 = icmp eq i64 %bf.cast15914, 14, !dbg !7850
  br i1 %cmp160, label %cond.true161, label %cond.false163, !dbg !7850

cond.true161:                                     ; preds = %if.end155
  %.cast15 = bitcast i64* %26 to %union.tree_node*, !dbg !7850
  %call162 = tail call i32 @vector_type_mode(%union.tree_node* %.cast15) #7, !dbg !7850
  br label %cond.end169, !dbg !7850

cond.false163:                                    ; preds = %if.end155
  %type164 = bitcast i64* %26 to %struct.tree_type*, !dbg !7850
  %mode165 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type164, i64 0, i32 6, !dbg !7850
  %bf.load166 = load i32, i32* %mode165, align 4, !dbg !7850
  %bf.lshr167 = lshr i32 %bf.load166, 16, !dbg !7850
  %bf.clear168 = and i32 %bf.lshr167, 255, !dbg !7850
  br label %cond.end169, !dbg !7850

cond.end169:                                      ; preds = %cond.false163, %cond.true161
  %cond170 = phi i32 [ %call162, %cond.true161 ], [ %bf.clear168, %cond.false163 ], !dbg !7850
  %cmp171 = icmp eq i32 %cond170, %mode, !dbg !7852
  br i1 %cmp171, label %if.then172, label %if.end178, !dbg !7853

if.then172:                                       ; preds = %cond.end169
  %tobool173 = icmp eq i32 %unsignedp, 0, !dbg !7854
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 10), align 16, !dbg !7854
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 5), align 8, !dbg !7854
  %cond177 = select i1 %tobool173, %union.tree_node* %28, %union.tree_node* %27, !dbg !7854
  br label %cleanup1147, !dbg !7854

if.end178:                                        ; preds = %cond.end169
  %29 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31) to i64**), align 8, !dbg !7855
  %bf.load180 = load i64, i64* %29, align 8, !dbg !7855
  %bf.cast18216 = and i64 %bf.load180, 65535, !dbg !7855
  %cmp183 = icmp eq i64 %bf.cast18216, 14, !dbg !7855
  br i1 %cmp183, label %cond.true184, label %cond.false186, !dbg !7855

cond.true184:                                     ; preds = %if.end178
  %.cast17 = bitcast i64* %29 to %union.tree_node*, !dbg !7855
  %call185 = tail call i32 @vector_type_mode(%union.tree_node* %.cast17) #7, !dbg !7855
  br label %cond.end192, !dbg !7855

cond.false186:                                    ; preds = %if.end178
  %type187 = bitcast i64* %29 to %struct.tree_type*, !dbg !7855
  %mode188 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type187, i64 0, i32 6, !dbg !7855
  %bf.load189 = load i32, i32* %mode188, align 4, !dbg !7855
  %bf.lshr190 = lshr i32 %bf.load189, 16, !dbg !7855
  %bf.clear191 = and i32 %bf.lshr190, 255, !dbg !7855
  br label %cond.end192, !dbg !7855

cond.end192:                                      ; preds = %cond.false186, %cond.true184
  %cond193 = phi i32 [ %call185, %cond.true184 ], [ %bf.clear191, %cond.false186 ], !dbg !7855
  %cmp194 = icmp eq i32 %cond193, %mode, !dbg !7857
  br i1 %cmp194, label %if.then195, label %if.end196, !dbg !7858

if.then195:                                       ; preds = %cond.end192
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !7859
  br label %cleanup1147, !dbg !7860

if.end196:                                        ; preds = %cond.end192
  %31 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32) to i64**), align 16, !dbg !7861
  %bf.load198 = load i64, i64* %31, align 8, !dbg !7861
  %bf.cast20018 = and i64 %bf.load198, 65535, !dbg !7861
  %cmp201 = icmp eq i64 %bf.cast20018, 14, !dbg !7861
  br i1 %cmp201, label %cond.true202, label %cond.false204, !dbg !7861

cond.true202:                                     ; preds = %if.end196
  %.cast19 = bitcast i64* %31 to %union.tree_node*, !dbg !7861
  %call203 = tail call i32 @vector_type_mode(%union.tree_node* %.cast19) #7, !dbg !7861
  br label %cond.end210, !dbg !7861

cond.false204:                                    ; preds = %if.end196
  %type205 = bitcast i64* %31 to %struct.tree_type*, !dbg !7861
  %mode206 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type205, i64 0, i32 6, !dbg !7861
  %bf.load207 = load i32, i32* %mode206, align 4, !dbg !7861
  %bf.lshr208 = lshr i32 %bf.load207, 16, !dbg !7861
  %bf.clear209 = and i32 %bf.lshr208, 255, !dbg !7861
  br label %cond.end210, !dbg !7861

cond.end210:                                      ; preds = %cond.false204, %cond.true202
  %cond211 = phi i32 [ %call203, %cond.true202 ], [ %bf.clear209, %cond.false204 ], !dbg !7861
  %cmp212 = icmp eq i32 %cond211, %mode, !dbg !7863
  br i1 %cmp212, label %if.then213, label %if.end214, !dbg !7864

if.then213:                                       ; preds = %cond.end210
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !7865
  br label %cleanup1147, !dbg !7866

if.end214:                                        ; preds = %cond.end210
  %33 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33) to i64**), align 8, !dbg !7867
  %bf.load216 = load i64, i64* %33, align 8, !dbg !7867
  %bf.cast21820 = and i64 %bf.load216, 65535, !dbg !7867
  %cmp219 = icmp eq i64 %bf.cast21820, 14, !dbg !7867
  br i1 %cmp219, label %cond.true220, label %cond.false222, !dbg !7867

cond.true220:                                     ; preds = %if.end214
  %.cast21 = bitcast i64* %33 to %union.tree_node*, !dbg !7867
  %call221 = tail call i32 @vector_type_mode(%union.tree_node* %.cast21) #7, !dbg !7867
  br label %cond.end228, !dbg !7867

cond.false222:                                    ; preds = %if.end214
  %type223 = bitcast i64* %33 to %struct.tree_type*, !dbg !7867
  %mode224 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type223, i64 0, i32 6, !dbg !7867
  %bf.load225 = load i32, i32* %mode224, align 4, !dbg !7867
  %bf.lshr226 = lshr i32 %bf.load225, 16, !dbg !7867
  %bf.clear227 = and i32 %bf.lshr226, 255, !dbg !7867
  br label %cond.end228, !dbg !7867

cond.end228:                                      ; preds = %cond.false222, %cond.true220
  %cond229 = phi i32 [ %call221, %cond.true220 ], [ %bf.clear227, %cond.false222 ], !dbg !7867
  %cmp230 = icmp eq i32 %cond229, %mode, !dbg !7869
  br i1 %cmp230, label %if.then231, label %if.end232, !dbg !7870

if.then231:                                       ; preds = %cond.end228
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !7871
  br label %cleanup1147, !dbg !7872

if.end232:                                        ; preds = %cond.end228
  %35 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64**), align 16, !dbg !7873
  %bf.load234 = load i64, i64* %35, align 8, !dbg !7873
  %bf.cast23622 = and i64 %bf.load234, 65535, !dbg !7873
  %cmp237 = icmp eq i64 %bf.cast23622, 14, !dbg !7873
  br i1 %cmp237, label %cond.true238, label %cond.false240, !dbg !7873

cond.true238:                                     ; preds = %if.end232
  %.cast23 = bitcast i64* %35 to %union.tree_node*, !dbg !7873
  %call239 = tail call i32 @vector_type_mode(%union.tree_node* %.cast23) #7, !dbg !7873
  br label %cond.end246, !dbg !7873

cond.false240:                                    ; preds = %if.end232
  %type241 = bitcast i64* %35 to %struct.tree_type*, !dbg !7873
  %mode242 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type241, i64 0, i32 6, !dbg !7873
  %bf.load243 = load i32, i32* %mode242, align 4, !dbg !7873
  %bf.lshr244 = lshr i32 %bf.load243, 16, !dbg !7873
  %bf.clear245 = and i32 %bf.lshr244, 255, !dbg !7873
  br label %cond.end246, !dbg !7873

cond.end246:                                      ; preds = %cond.false240, %cond.true238
  %cond247 = phi i32 [ %call239, %cond.true238 ], [ %bf.clear245, %cond.false240 ], !dbg !7873
  %cmp248 = icmp eq i32 %cond247, %mode, !dbg !7875
  br i1 %cmp248, label %if.then249, label %if.end250, !dbg !7876

if.then249:                                       ; preds = %cond.end246
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7877
  br label %cleanup1147, !dbg !7878

if.end250:                                        ; preds = %cond.end246
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !7879
  %call251 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %37) #7, !dbg !7879
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7879
  %bf.load253 = load i64, i64* %38, align 8, !dbg !7879
  %bf.cast25524 = and i64 %bf.load253, 65535, !dbg !7879
  %cmp256 = icmp eq i64 %bf.cast25524, 14, !dbg !7879
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !7879
  %call258 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %39) #7, !dbg !7879
  br i1 %cmp256, label %cond.true257, label %cond.false260, !dbg !7879

cond.true257:                                     ; preds = %if.end250
  %call259 = tail call i32 @vector_type_mode(%union.tree_node* %call258) #7, !dbg !7879
  br label %cond.end267, !dbg !7879

cond.false260:                                    ; preds = %if.end250
  %type262 = bitcast %union.tree_node* %call258 to %struct.tree_type*, !dbg !7879
  %mode263 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type262, i64 0, i32 6, !dbg !7879
  %bf.load264 = load i32, i32* %mode263, align 4, !dbg !7879
  %bf.lshr265 = lshr i32 %bf.load264, 16, !dbg !7879
  %bf.clear266 = and i32 %bf.lshr265, 255, !dbg !7879
  br label %cond.end267, !dbg !7879

cond.end267:                                      ; preds = %cond.false260, %cond.true257
  %cond268 = phi i32 [ %call259, %cond.true257 ], [ %bf.clear266, %cond.false260 ], !dbg !7879
  %cmp269 = icmp eq i32 %cond268, %mode, !dbg !7881
  br i1 %cmp269, label %if.then270, label %if.end281, !dbg !7882

if.then270:                                       ; preds = %cond.end267
  %tobool271 = icmp eq i32 %unsignedp, 0, !dbg !7883
  %idxprom = zext i32 %mode to i64, !dbg !7884
  %arrayidx = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom, !dbg !7884
  %40 = load i16, i16* %arrayidx, align 2, !dbg !7884
  %conv = zext i16 %40 to i32, !dbg !7884
  br i1 %tobool271, label %cond.false274, label %cond.true272, !dbg !7883

cond.true272:                                     ; preds = %if.then270
  %call273 = tail call %union.tree_node* @make_unsigned_type(i32 %conv) #7, !dbg !7885
  br label %cleanup1147, !dbg !7883

cond.false274:                                    ; preds = %if.then270
  %call278 = tail call %union.tree_node* @make_signed_type(i32 %conv) #7, !dbg !7886
  br label %cleanup1147, !dbg !7883

if.end281:                                        ; preds = %cond.end267
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !7887
  %call282 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %41) #7, !dbg !7887
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call282, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7887
  %bf.load284 = load i64, i64* %42, align 8, !dbg !7887
  %bf.cast28625 = and i64 %bf.load284, 65535, !dbg !7887
  %cmp287 = icmp eq i64 %bf.cast28625, 14, !dbg !7887
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !7887
  %call290 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %43) #7, !dbg !7887
  br i1 %cmp287, label %cond.true289, label %cond.false292, !dbg !7887

cond.true289:                                     ; preds = %if.end281
  %call291 = tail call i32 @vector_type_mode(%union.tree_node* %call290) #7, !dbg !7887
  br label %cond.end299, !dbg !7887

cond.false292:                                    ; preds = %if.end281
  %type294 = bitcast %union.tree_node* %call290 to %struct.tree_type*, !dbg !7887
  %mode295 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type294, i64 0, i32 6, !dbg !7887
  %bf.load296 = load i32, i32* %mode295, align 4, !dbg !7887
  %bf.lshr297 = lshr i32 %bf.load296, 16, !dbg !7887
  %bf.clear298 = and i32 %bf.lshr297, 255, !dbg !7887
  br label %cond.end299, !dbg !7887

cond.end299:                                      ; preds = %cond.false292, %cond.true289
  %cond300 = phi i32 [ %call291, %cond.true289 ], [ %bf.clear298, %cond.false292 ], !dbg !7887
  %cmp301 = icmp eq i32 %cond300, %mode, !dbg !7889
  br i1 %cmp301, label %if.then303, label %if.end317, !dbg !7890

if.then303:                                       ; preds = %cond.end299
  %tobool304 = icmp eq i32 %unsignedp, 0, !dbg !7891
  %idxprom306 = zext i32 %mode to i64, !dbg !7892
  %arrayidx307 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom306, !dbg !7892
  %44 = load i16, i16* %arrayidx307, align 2, !dbg !7892
  %conv308 = zext i16 %44 to i32, !dbg !7892
  br i1 %tobool304, label %cond.false310, label %cond.true305, !dbg !7891

cond.true305:                                     ; preds = %if.then303
  %call309 = tail call %union.tree_node* @make_unsigned_type(i32 %conv308) #7, !dbg !7893
  br label %cleanup1147, !dbg !7891

cond.false310:                                    ; preds = %if.then303
  %call314 = tail call %union.tree_node* @make_signed_type(i32 %conv308) #7, !dbg !7894
  br label %cleanup1147, !dbg !7891

if.end317:                                        ; preds = %cond.end299
  %idxprom318 = zext i32 %mode to i64, !dbg !7895
  %arrayidx319 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom318, !dbg !7895
  %45 = load i8, i8* %arrayidx319, align 1, !dbg !7895
  %cmp321 = icmp eq i8 %45, 10, !dbg !7895
  br i1 %cmp321, label %if.then328, label %lor.lhs.false, !dbg !7895

lor.lhs.false:                                    ; preds = %if.end317
  %cmp326 = icmp eq i8 %45, 11, !dbg !7895
  br i1 %cmp326, label %if.then328, label %if.else, !dbg !7896

if.then328:                                       ; preds = %lor.lhs.false, %if.end317
  %46 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 28) to i64**), align 16, !dbg !7897
  %bf.load330 = load i64, i64* %46, align 8, !dbg !7897
  %bf.cast33266 = and i64 %bf.load330, 65535, !dbg !7897
  %cmp333 = icmp eq i64 %bf.cast33266, 14, !dbg !7897
  br i1 %cmp333, label %cond.true335, label %cond.false337, !dbg !7897

cond.true335:                                     ; preds = %if.then328
  %.cast67 = bitcast i64* %46 to %union.tree_node*, !dbg !7897
  %call336 = tail call i32 @vector_type_mode(%union.tree_node* %.cast67) #7, !dbg !7897
  br label %cond.end343, !dbg !7897

cond.false337:                                    ; preds = %if.then328
  %type338 = bitcast i64* %46 to %struct.tree_type*, !dbg !7897
  %mode339 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type338, i64 0, i32 6, !dbg !7897
  %bf.load340 = load i32, i32* %mode339, align 4, !dbg !7897
  %bf.lshr341 = lshr i32 %bf.load340, 16, !dbg !7897
  %bf.clear342 = and i32 %bf.lshr341, 255, !dbg !7897
  br label %cond.end343, !dbg !7897

cond.end343:                                      ; preds = %cond.false337, %cond.true335
  %cond344 = phi i32 [ %call336, %cond.true335 ], [ %bf.clear342, %cond.false337 ], !dbg !7897
  %cmp345 = icmp eq i32 %cond344, %mode, !dbg !7899
  br i1 %cmp345, label %if.then347, label %if.end348, !dbg !7900

if.then347:                                       ; preds = %cond.end343
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 16, !dbg !7901
  br label %cleanup, !dbg !7902

if.end348:                                        ; preds = %cond.end343
  %48 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 29) to i64**), align 8, !dbg !7903
  %bf.load350 = load i64, i64* %48, align 8, !dbg !7903
  %bf.cast35268 = and i64 %bf.load350, 65535, !dbg !7903
  %cmp353 = icmp eq i64 %bf.cast35268, 14, !dbg !7903
  br i1 %cmp353, label %cond.true355, label %cond.false357, !dbg !7903

cond.true355:                                     ; preds = %if.end348
  %.cast69 = bitcast i64* %48 to %union.tree_node*, !dbg !7903
  %call356 = tail call i32 @vector_type_mode(%union.tree_node* %.cast69) #7, !dbg !7903
  br label %cond.end363, !dbg !7903

cond.false357:                                    ; preds = %if.end348
  %type358 = bitcast i64* %48 to %struct.tree_type*, !dbg !7903
  %mode359 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type358, i64 0, i32 6, !dbg !7903
  %bf.load360 = load i32, i32* %mode359, align 4, !dbg !7903
  %bf.lshr361 = lshr i32 %bf.load360, 16, !dbg !7903
  %bf.clear362 = and i32 %bf.lshr361, 255, !dbg !7903
  br label %cond.end363, !dbg !7903

cond.end363:                                      ; preds = %cond.false357, %cond.true355
  %cond364 = phi i32 [ %call356, %cond.true355 ], [ %bf.clear362, %cond.false357 ], !dbg !7903
  %cmp365 = icmp eq i32 %cond364, %mode, !dbg !7905
  br i1 %cmp365, label %if.then367, label %if.end368, !dbg !7906

if.then367:                                       ; preds = %cond.end363
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 29), align 8, !dbg !7907
  br label %cleanup, !dbg !7908

if.end368:                                        ; preds = %cond.end363
  %50 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 30) to i64**), align 16, !dbg !7909
  %bf.load370 = load i64, i64* %50, align 8, !dbg !7909
  %bf.cast37270 = and i64 %bf.load370, 65535, !dbg !7909
  %cmp373 = icmp eq i64 %bf.cast37270, 14, !dbg !7909
  br i1 %cmp373, label %cond.true375, label %cond.false377, !dbg !7909

cond.true375:                                     ; preds = %if.end368
  %.cast71 = bitcast i64* %50 to %union.tree_node*, !dbg !7909
  %call376 = tail call i32 @vector_type_mode(%union.tree_node* %.cast71) #7, !dbg !7909
  br label %cond.end383, !dbg !7909

cond.false377:                                    ; preds = %if.end368
  %type378 = bitcast i64* %50 to %struct.tree_type*, !dbg !7909
  %mode379 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type378, i64 0, i32 6, !dbg !7909
  %bf.load380 = load i32, i32* %mode379, align 4, !dbg !7909
  %bf.lshr381 = lshr i32 %bf.load380, 16, !dbg !7909
  %bf.clear382 = and i32 %bf.lshr381, 255, !dbg !7909
  br label %cond.end383, !dbg !7909

cond.end383:                                      ; preds = %cond.false377, %cond.true375
  %cond384 = phi i32 [ %call376, %cond.true375 ], [ %bf.clear382, %cond.false377 ], !dbg !7909
  %cmp385 = icmp eq i32 %cond384, %mode, !dbg !7911
  br i1 %cmp385, label %if.then387, label %if.end388, !dbg !7912

if.then387:                                       ; preds = %cond.end383
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 30), align 16, !dbg !7913
  br label %cleanup, !dbg !7914

if.end388:                                        ; preds = %cond.end383
  %52 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 27) to i64**), align 8, !dbg !7915
  %bf.load390 = load i64, i64* %52, align 8, !dbg !7915
  %bf.cast39272 = and i64 %bf.load390, 65535, !dbg !7915
  %cmp393 = icmp eq i64 %bf.cast39272, 14, !dbg !7915
  br i1 %cmp393, label %cond.true395, label %cond.false397, !dbg !7915

cond.true395:                                     ; preds = %if.end388
  %.cast73 = bitcast i64* %52 to %union.tree_node*, !dbg !7915
  %call396 = tail call i32 @vector_type_mode(%union.tree_node* %.cast73) #7, !dbg !7915
  br label %cond.end403, !dbg !7915

cond.false397:                                    ; preds = %if.end388
  %type398 = bitcast i64* %52 to %struct.tree_type*, !dbg !7915
  %mode399 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type398, i64 0, i32 6, !dbg !7915
  %bf.load400 = load i32, i32* %mode399, align 4, !dbg !7915
  %bf.lshr401 = lshr i32 %bf.load400, 16, !dbg !7915
  %bf.clear402 = and i32 %bf.lshr401, 255, !dbg !7915
  br label %cond.end403, !dbg !7915

cond.end403:                                      ; preds = %cond.false397, %cond.true395
  %cond404 = phi i32 [ %call396, %cond.true395 ], [ %bf.clear402, %cond.false397 ], !dbg !7915
  %cmp405 = icmp ne i32 %cond404, %mode, !dbg !7917
  %tobool407 = icmp ne i32 %unsignedp, 0, !dbg !7918
  %or.cond = or i1 %cmp405, %tobool407, !dbg !7919
  br i1 %or.cond, label %if.end409, label %if.then408, !dbg !7919

if.then408:                                       ; preds = %cond.end403
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !dbg !7920
  br label %cleanup, !dbg !7921

if.end409:                                        ; preds = %cond.end403
  %arrayidx411 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom318, !dbg !7922
  %54 = load i8, i8* %arrayidx411, align 1, !dbg !7922
  %conv412 = zext i8 %54 to i32, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %conv412, metadata !7802, metadata !DIExpression()), !dbg !7923
  %call413 = tail call %union.tree_node* @c_common_type_for_mode(i32 %conv412, i32 %unsignedp) #8, !dbg !7924
  call void @llvm.dbg.value(metadata %union.tree_node* %call413, metadata !7805, metadata !DIExpression()), !dbg !7923
  %cmp414 = icmp eq %union.tree_node* %call413, null, !dbg !7925
  br i1 %cmp414, label %cleanup, label %if.then416, !dbg !7927

if.then416:                                       ; preds = %if.end409
  %call417 = tail call %union.tree_node* @build_complex_type(%union.tree_node* nonnull %call413) #7, !dbg !7928
  br label %cleanup, !dbg !7929

cleanup:                                          ; preds = %if.end409, %if.then416, %if.then408, %if.then387, %if.then367, %if.then347
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then347 ], [ false, %if.then367 ], [ false, %if.then387 ], [ false, %if.then416 ], [ false, %if.then408 ], [ true, %if.end409 ]
  %retval.0 = phi %union.tree_node* [ %47, %if.then347 ], [ %49, %if.then367 ], [ %51, %if.then387 ], [ %call417, %if.then416 ], [ %53, %if.then408 ], [ undef, %if.end409 ]
  br i1 %cleanup.dest.slot.0, label %if.end472, label %cleanup1147

if.else:                                          ; preds = %lor.lhs.false
  %cmp423 = icmp eq i8 %45, 12, !dbg !7930
  br i1 %cmp423, label %if.then455, label %lor.lhs.false425, !dbg !7930

lor.lhs.false425:                                 ; preds = %if.else
  %cmp429 = icmp eq i8 %45, 17, !dbg !7930
  br i1 %cmp429, label %if.then455, label %lor.lhs.false431, !dbg !7930

lor.lhs.false431:                                 ; preds = %lor.lhs.false425
  %cmp435 = icmp eq i8 %45, 13, !dbg !7930
  br i1 %cmp435, label %if.then455, label %lor.lhs.false437, !dbg !7930

lor.lhs.false437:                                 ; preds = %lor.lhs.false431
  %cmp441 = icmp eq i8 %45, 14, !dbg !7930
  br i1 %cmp441, label %if.then455, label %lor.lhs.false443, !dbg !7930

lor.lhs.false443:                                 ; preds = %lor.lhs.false437
  %cmp447 = icmp eq i8 %45, 15, !dbg !7930
  br i1 %cmp447, label %if.then455, label %lor.lhs.false449, !dbg !7930

lor.lhs.false449:                                 ; preds = %lor.lhs.false443
  %cmp453 = icmp eq i8 %45, 16, !dbg !7930
  br i1 %cmp453, label %if.then455, label %if.end472, !dbg !7931

if.then455:                                       ; preds = %lor.lhs.false449, %lor.lhs.false443, %lor.lhs.false437, %lor.lhs.false431, %lor.lhs.false425, %if.else
  %arrayidx458 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom318, !dbg !7932
  %55 = load i8, i8* %arrayidx458, align 1, !dbg !7932
  %conv459 = zext i8 %55 to i32, !dbg !7932
  call void @llvm.dbg.value(metadata i32 %conv459, metadata !7806, metadata !DIExpression()), !dbg !7933
  %call461 = tail call %union.tree_node* @c_common_type_for_mode(i32 %conv459, i32 %unsignedp) #8, !dbg !7934
  call void @llvm.dbg.value(metadata %union.tree_node* %call461, metadata !7809, metadata !DIExpression()), !dbg !7933
  %cmp462 = icmp eq %union.tree_node* %call461, null, !dbg !7935
  br i1 %cmp462, label %cleanup467, label %if.then464, !dbg !7937

if.then464:                                       ; preds = %if.then455
  %call465 = tail call %union.tree_node* @build_vector_type_for_mode(%union.tree_node* nonnull %call461, i32 %mode) #7, !dbg !7938
  br label %cleanup467, !dbg !7939

cleanup467:                                       ; preds = %if.then455, %if.then464
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then464 ], [ true, %if.then455 ]
  %retval.1 = phi %union.tree_node* [ %call465, %if.then464 ], [ undef, %if.then455 ]
  br i1 %cleanup.dest.slot.1, label %if.end472, label %cleanup1147

if.end472:                                        ; preds = %lor.lhs.false449, %cleanup467, %cleanup
  %56 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49) to i64**), align 8, !dbg !7940
  %bf.load474 = load i64, i64* %56, align 8, !dbg !7940
  %bf.cast47626 = and i64 %bf.load474, 65535, !dbg !7940
  %cmp477 = icmp eq i64 %bf.cast47626, 14, !dbg !7940
  br i1 %cmp477, label %cond.true479, label %cond.false481, !dbg !7940

cond.true479:                                     ; preds = %if.end472
  %.cast27 = bitcast i64* %56 to %union.tree_node*, !dbg !7940
  %call480 = tail call i32 @vector_type_mode(%union.tree_node* %.cast27) #7, !dbg !7940
  br label %cond.end487, !dbg !7940

cond.false481:                                    ; preds = %if.end472
  %type482 = bitcast i64* %56 to %struct.tree_type*, !dbg !7940
  %mode483 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type482, i64 0, i32 6, !dbg !7940
  %bf.load484 = load i32, i32* %mode483, align 4, !dbg !7940
  %bf.lshr485 = lshr i32 %bf.load484, 16, !dbg !7940
  %bf.clear486 = and i32 %bf.lshr485, 255, !dbg !7940
  br label %cond.end487, !dbg !7940

cond.end487:                                      ; preds = %cond.false481, %cond.true479
  %cond488 = phi i32 [ %call480, %cond.true479 ], [ %bf.clear486, %cond.false481 ], !dbg !7940
  %cmp489 = icmp eq i32 %cond488, %mode, !dbg !7942
  br i1 %cmp489, label %if.then491, label %if.end492, !dbg !7943

if.then491:                                       ; preds = %cond.end487
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49), align 8, !dbg !7944
  br label %cleanup1147, !dbg !7945

if.end492:                                        ; preds = %cond.end487
  %58 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50) to i64**), align 16, !dbg !7946
  %bf.load494 = load i64, i64* %58, align 8, !dbg !7946
  %bf.cast49628 = and i64 %bf.load494, 65535, !dbg !7946
  %cmp497 = icmp eq i64 %bf.cast49628, 14, !dbg !7946
  br i1 %cmp497, label %cond.true499, label %cond.false501, !dbg !7946

cond.true499:                                     ; preds = %if.end492
  %.cast29 = bitcast i64* %58 to %union.tree_node*, !dbg !7946
  %call500 = tail call i32 @vector_type_mode(%union.tree_node* %.cast29) #7, !dbg !7946
  br label %cond.end507, !dbg !7946

cond.false501:                                    ; preds = %if.end492
  %type502 = bitcast i64* %58 to %struct.tree_type*, !dbg !7946
  %mode503 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type502, i64 0, i32 6, !dbg !7946
  %bf.load504 = load i32, i32* %mode503, align 4, !dbg !7946
  %bf.lshr505 = lshr i32 %bf.load504, 16, !dbg !7946
  %bf.clear506 = and i32 %bf.lshr505, 255, !dbg !7946
  br label %cond.end507, !dbg !7946

cond.end507:                                      ; preds = %cond.false501, %cond.true499
  %cond508 = phi i32 [ %call500, %cond.true499 ], [ %bf.clear506, %cond.false501 ], !dbg !7946
  %cmp509 = icmp eq i32 %cond508, %mode, !dbg !7948
  br i1 %cmp509, label %if.then511, label %if.end512, !dbg !7949

if.then511:                                       ; preds = %cond.end507
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 16, !dbg !7950
  br label %cleanup1147, !dbg !7951

if.end512:                                        ; preds = %cond.end507
  %60 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51) to i64**), align 8, !dbg !7952
  %bf.load514 = load i64, i64* %60, align 8, !dbg !7952
  %bf.cast51630 = and i64 %bf.load514, 65535, !dbg !7952
  %cmp517 = icmp eq i64 %bf.cast51630, 14, !dbg !7952
  br i1 %cmp517, label %cond.true519, label %cond.false521, !dbg !7952

cond.true519:                                     ; preds = %if.end512
  %.cast31 = bitcast i64* %60 to %union.tree_node*, !dbg !7952
  %call520 = tail call i32 @vector_type_mode(%union.tree_node* %.cast31) #7, !dbg !7952
  br label %cond.end527, !dbg !7952

cond.false521:                                    ; preds = %if.end512
  %type522 = bitcast i64* %60 to %struct.tree_type*, !dbg !7952
  %mode523 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type522, i64 0, i32 6, !dbg !7952
  %bf.load524 = load i32, i32* %mode523, align 4, !dbg !7952
  %bf.lshr525 = lshr i32 %bf.load524, 16, !dbg !7952
  %bf.clear526 = and i32 %bf.lshr525, 255, !dbg !7952
  br label %cond.end527, !dbg !7952

cond.end527:                                      ; preds = %cond.false521, %cond.true519
  %cond528 = phi i32 [ %call520, %cond.true519 ], [ %bf.clear526, %cond.false521 ], !dbg !7952
  %cmp529 = icmp eq i32 %cond528, %mode, !dbg !7954
  br i1 %cmp529, label %if.then531, label %if.end532, !dbg !7955

if.then531:                                       ; preds = %cond.end527
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51), align 8, !dbg !7956
  br label %cleanup1147, !dbg !7957

if.end532:                                        ; preds = %cond.end527
  %cmp536 = icmp eq i8 %45, 4, !dbg !7958
  br i1 %cmp536, label %if.then556, label %lor.lhs.false538, !dbg !7958

lor.lhs.false538:                                 ; preds = %if.end532
  %cmp542 = icmp eq i8 %45, 6, !dbg !7958
  br i1 %cmp542, label %if.then556, label %lor.lhs.false544, !dbg !7958

lor.lhs.false544:                                 ; preds = %lor.lhs.false538
  %cmp548 = icmp eq i8 %45, 5, !dbg !7958
  br i1 %cmp548, label %if.then556, label %lor.lhs.false550, !dbg !7958

lor.lhs.false550:                                 ; preds = %lor.lhs.false544
  %cmp554 = icmp eq i8 %45, 7, !dbg !7958
  br i1 %cmp554, label %if.then556, label %if.end1119, !dbg !7960

if.then556:                                       ; preds = %lor.lhs.false550, %lor.lhs.false544, %lor.lhs.false538, %if.end532
  %62 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 65) to i64**), align 8, !dbg !7961
  %bf.load558 = load i64, i64* %62, align 8, !dbg !7961
  %bf.cast56034 = and i64 %bf.load558, 65535, !dbg !7961
  %cmp561 = icmp eq i64 %bf.cast56034, 14, !dbg !7961
  br i1 %cmp561, label %cond.true563, label %cond.false565, !dbg !7961

cond.true563:                                     ; preds = %if.then556
  %.cast35 = bitcast i64* %62 to %union.tree_node*, !dbg !7961
  %call564 = tail call i32 @vector_type_mode(%union.tree_node* %.cast35) #7, !dbg !7961
  br label %cond.end571, !dbg !7961

cond.false565:                                    ; preds = %if.then556
  %type566 = bitcast i64* %62 to %struct.tree_type*, !dbg !7961
  %mode567 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type566, i64 0, i32 6, !dbg !7961
  %bf.load568 = load i32, i32* %mode567, align 4, !dbg !7961
  %bf.lshr569 = lshr i32 %bf.load568, 16, !dbg !7961
  %bf.clear570 = and i32 %bf.lshr569, 255, !dbg !7961
  br label %cond.end571, !dbg !7961

cond.end571:                                      ; preds = %cond.false565, %cond.true563
  %cond572 = phi i32 [ %call564, %cond.true563 ], [ %bf.clear570, %cond.false565 ], !dbg !7961
  %cmp573 = icmp eq i32 %cond572, %mode, !dbg !7964
  br i1 %cmp573, label %if.then575, label %if.end581, !dbg !7965

if.then575:                                       ; preds = %cond.end571
  %tobool576 = icmp eq i32 %unsignedp, 0, !dbg !7966
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 57), align 8, !dbg !7966
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 65), align 8, !dbg !7966
  %cond580 = select i1 %tobool576, %union.tree_node* %64, %union.tree_node* %63, !dbg !7966
  br label %cleanup1147, !dbg !7966

if.end581:                                        ; preds = %cond.end571
  %65 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 66) to i64**), align 16, !dbg !7967
  %bf.load583 = load i64, i64* %65, align 8, !dbg !7967
  %bf.cast58536 = and i64 %bf.load583, 65535, !dbg !7967
  %cmp586 = icmp eq i64 %bf.cast58536, 14, !dbg !7967
  br i1 %cmp586, label %cond.true588, label %cond.false590, !dbg !7967

cond.true588:                                     ; preds = %if.end581
  %.cast37 = bitcast i64* %65 to %union.tree_node*, !dbg !7967
  %call589 = tail call i32 @vector_type_mode(%union.tree_node* %.cast37) #7, !dbg !7967
  br label %cond.end596, !dbg !7967

cond.false590:                                    ; preds = %if.end581
  %type591 = bitcast i64* %65 to %struct.tree_type*, !dbg !7967
  %mode592 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type591, i64 0, i32 6, !dbg !7967
  %bf.load593 = load i32, i32* %mode592, align 4, !dbg !7967
  %bf.lshr594 = lshr i32 %bf.load593, 16, !dbg !7967
  %bf.clear595 = and i32 %bf.lshr594, 255, !dbg !7967
  br label %cond.end596, !dbg !7967

cond.end596:                                      ; preds = %cond.false590, %cond.true588
  %cond597 = phi i32 [ %call589, %cond.true588 ], [ %bf.clear595, %cond.false590 ], !dbg !7967
  %cmp598 = icmp eq i32 %cond597, %mode, !dbg !7969
  br i1 %cmp598, label %if.then600, label %if.end606, !dbg !7970

if.then600:                                       ; preds = %cond.end596
  %tobool601 = icmp eq i32 %unsignedp, 0, !dbg !7971
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 58), align 16, !dbg !7971
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 66), align 16, !dbg !7971
  %cond605 = select i1 %tobool601, %union.tree_node* %67, %union.tree_node* %66, !dbg !7971
  br label %cleanup1147, !dbg !7971

if.end606:                                        ; preds = %cond.end596
  %68 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 67) to i64**), align 8, !dbg !7972
  %bf.load608 = load i64, i64* %68, align 8, !dbg !7972
  %bf.cast61038 = and i64 %bf.load608, 65535, !dbg !7972
  %cmp611 = icmp eq i64 %bf.cast61038, 14, !dbg !7972
  br i1 %cmp611, label %cond.true613, label %cond.false615, !dbg !7972

cond.true613:                                     ; preds = %if.end606
  %.cast39 = bitcast i64* %68 to %union.tree_node*, !dbg !7972
  %call614 = tail call i32 @vector_type_mode(%union.tree_node* %.cast39) #7, !dbg !7972
  br label %cond.end621, !dbg !7972

cond.false615:                                    ; preds = %if.end606
  %type616 = bitcast i64* %68 to %struct.tree_type*, !dbg !7972
  %mode617 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type616, i64 0, i32 6, !dbg !7972
  %bf.load618 = load i32, i32* %mode617, align 4, !dbg !7972
  %bf.lshr619 = lshr i32 %bf.load618, 16, !dbg !7972
  %bf.clear620 = and i32 %bf.lshr619, 255, !dbg !7972
  br label %cond.end621, !dbg !7972

cond.end621:                                      ; preds = %cond.false615, %cond.true613
  %cond622 = phi i32 [ %call614, %cond.true613 ], [ %bf.clear620, %cond.false615 ], !dbg !7972
  %cmp623 = icmp eq i32 %cond622, %mode, !dbg !7974
  br i1 %cmp623, label %if.then625, label %if.end631, !dbg !7975

if.then625:                                       ; preds = %cond.end621
  %tobool626 = icmp eq i32 %unsignedp, 0, !dbg !7976
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 59), align 8, !dbg !7976
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 67), align 8, !dbg !7976
  %cond630 = select i1 %tobool626, %union.tree_node* %70, %union.tree_node* %69, !dbg !7976
  br label %cleanup1147, !dbg !7976

if.end631:                                        ; preds = %cond.end621
  %71 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 68) to i64**), align 16, !dbg !7977
  %bf.load633 = load i64, i64* %71, align 8, !dbg !7977
  %bf.cast63540 = and i64 %bf.load633, 65535, !dbg !7977
  %cmp636 = icmp eq i64 %bf.cast63540, 14, !dbg !7977
  br i1 %cmp636, label %cond.true638, label %cond.false640, !dbg !7977

cond.true638:                                     ; preds = %if.end631
  %.cast41 = bitcast i64* %71 to %union.tree_node*, !dbg !7977
  %call639 = tail call i32 @vector_type_mode(%union.tree_node* %.cast41) #7, !dbg !7977
  br label %cond.end646, !dbg !7977

cond.false640:                                    ; preds = %if.end631
  %type641 = bitcast i64* %71 to %struct.tree_type*, !dbg !7977
  %mode642 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type641, i64 0, i32 6, !dbg !7977
  %bf.load643 = load i32, i32* %mode642, align 4, !dbg !7977
  %bf.lshr644 = lshr i32 %bf.load643, 16, !dbg !7977
  %bf.clear645 = and i32 %bf.lshr644, 255, !dbg !7977
  br label %cond.end646, !dbg !7977

cond.end646:                                      ; preds = %cond.false640, %cond.true638
  %cond647 = phi i32 [ %call639, %cond.true638 ], [ %bf.clear645, %cond.false640 ], !dbg !7977
  %cmp648 = icmp eq i32 %cond647, %mode, !dbg !7979
  br i1 %cmp648, label %if.then650, label %if.end656, !dbg !7980

if.then650:                                       ; preds = %cond.end646
  %tobool651 = icmp eq i32 %unsignedp, 0, !dbg !7981
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 60), align 16, !dbg !7981
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 68), align 16, !dbg !7981
  %cond655 = select i1 %tobool651, %union.tree_node* %73, %union.tree_node* %72, !dbg !7981
  br label %cleanup1147, !dbg !7981

if.end656:                                        ; preds = %cond.end646
  %74 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 69) to i64**), align 8, !dbg !7982
  %bf.load658 = load i64, i64* %74, align 8, !dbg !7982
  %bf.cast66042 = and i64 %bf.load658, 65535, !dbg !7982
  %cmp661 = icmp eq i64 %bf.cast66042, 14, !dbg !7982
  br i1 %cmp661, label %cond.true663, label %cond.false665, !dbg !7982

cond.true663:                                     ; preds = %if.end656
  %.cast43 = bitcast i64* %74 to %union.tree_node*, !dbg !7982
  %call664 = tail call i32 @vector_type_mode(%union.tree_node* %.cast43) #7, !dbg !7982
  br label %cond.end671, !dbg !7982

cond.false665:                                    ; preds = %if.end656
  %type666 = bitcast i64* %74 to %struct.tree_type*, !dbg !7982
  %mode667 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type666, i64 0, i32 6, !dbg !7982
  %bf.load668 = load i32, i32* %mode667, align 4, !dbg !7982
  %bf.lshr669 = lshr i32 %bf.load668, 16, !dbg !7982
  %bf.clear670 = and i32 %bf.lshr669, 255, !dbg !7982
  br label %cond.end671, !dbg !7982

cond.end671:                                      ; preds = %cond.false665, %cond.true663
  %cond672 = phi i32 [ %call664, %cond.true663 ], [ %bf.clear670, %cond.false665 ], !dbg !7982
  %cmp673 = icmp eq i32 %cond672, %mode, !dbg !7984
  br i1 %cmp673, label %if.then675, label %if.end681, !dbg !7985

if.then675:                                       ; preds = %cond.end671
  %tobool676 = icmp eq i32 %unsignedp, 0, !dbg !7986
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 61), align 8, !dbg !7986
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 69), align 8, !dbg !7986
  %cond680 = select i1 %tobool676, %union.tree_node* %76, %union.tree_node* %75, !dbg !7986
  br label %cleanup1147, !dbg !7986

if.end681:                                        ; preds = %cond.end671
  %77 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 70) to i64**), align 16, !dbg !7987
  %bf.load683 = load i64, i64* %77, align 8, !dbg !7987
  %bf.cast68544 = and i64 %bf.load683, 65535, !dbg !7987
  %cmp686 = icmp eq i64 %bf.cast68544, 14, !dbg !7987
  br i1 %cmp686, label %cond.true688, label %cond.false690, !dbg !7987

cond.true688:                                     ; preds = %if.end681
  %.cast45 = bitcast i64* %77 to %union.tree_node*, !dbg !7987
  %call689 = tail call i32 @vector_type_mode(%union.tree_node* %.cast45) #7, !dbg !7987
  br label %cond.end696, !dbg !7987

cond.false690:                                    ; preds = %if.end681
  %type691 = bitcast i64* %77 to %struct.tree_type*, !dbg !7987
  %mode692 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type691, i64 0, i32 6, !dbg !7987
  %bf.load693 = load i32, i32* %mode692, align 4, !dbg !7987
  %bf.lshr694 = lshr i32 %bf.load693, 16, !dbg !7987
  %bf.clear695 = and i32 %bf.lshr694, 255, !dbg !7987
  br label %cond.end696, !dbg !7987

cond.end696:                                      ; preds = %cond.false690, %cond.true688
  %cond697 = phi i32 [ %call689, %cond.true688 ], [ %bf.clear695, %cond.false690 ], !dbg !7987
  %cmp698 = icmp eq i32 %cond697, %mode, !dbg !7989
  br i1 %cmp698, label %if.then700, label %if.end706, !dbg !7990

if.then700:                                       ; preds = %cond.end696
  %tobool701 = icmp eq i32 %unsignedp, 0, !dbg !7991
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 62), align 16, !dbg !7991
  %79 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 70), align 16, !dbg !7991
  %cond705 = select i1 %tobool701, %union.tree_node* %79, %union.tree_node* %78, !dbg !7991
  br label %cleanup1147, !dbg !7991

if.end706:                                        ; preds = %cond.end696
  %80 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 71) to i64**), align 8, !dbg !7992
  %bf.load708 = load i64, i64* %80, align 8, !dbg !7992
  %bf.cast71046 = and i64 %bf.load708, 65535, !dbg !7992
  %cmp711 = icmp eq i64 %bf.cast71046, 14, !dbg !7992
  br i1 %cmp711, label %cond.true713, label %cond.false715, !dbg !7992

cond.true713:                                     ; preds = %if.end706
  %.cast47 = bitcast i64* %80 to %union.tree_node*, !dbg !7992
  %call714 = tail call i32 @vector_type_mode(%union.tree_node* %.cast47) #7, !dbg !7992
  br label %cond.end721, !dbg !7992

cond.false715:                                    ; preds = %if.end706
  %type716 = bitcast i64* %80 to %struct.tree_type*, !dbg !7992
  %mode717 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type716, i64 0, i32 6, !dbg !7992
  %bf.load718 = load i32, i32* %mode717, align 4, !dbg !7992
  %bf.lshr719 = lshr i32 %bf.load718, 16, !dbg !7992
  %bf.clear720 = and i32 %bf.lshr719, 255, !dbg !7992
  br label %cond.end721, !dbg !7992

cond.end721:                                      ; preds = %cond.false715, %cond.true713
  %cond722 = phi i32 [ %call714, %cond.true713 ], [ %bf.clear720, %cond.false715 ], !dbg !7992
  %cmp723 = icmp eq i32 %cond722, %mode, !dbg !7994
  br i1 %cmp723, label %if.then725, label %if.end731, !dbg !7995

if.then725:                                       ; preds = %cond.end721
  %tobool726 = icmp eq i32 %unsignedp, 0, !dbg !7996
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 63), align 8, !dbg !7996
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 71), align 8, !dbg !7996
  %cond730 = select i1 %tobool726, %union.tree_node* %82, %union.tree_node* %81, !dbg !7996
  br label %cleanup1147, !dbg !7996

if.end731:                                        ; preds = %cond.end721
  %83 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 72) to i64**), align 16, !dbg !7997
  %bf.load733 = load i64, i64* %83, align 8, !dbg !7997
  %bf.cast73548 = and i64 %bf.load733, 65535, !dbg !7997
  %cmp736 = icmp eq i64 %bf.cast73548, 14, !dbg !7997
  br i1 %cmp736, label %cond.true738, label %cond.false740, !dbg !7997

cond.true738:                                     ; preds = %if.end731
  %.cast49 = bitcast i64* %83 to %union.tree_node*, !dbg !7997
  %call739 = tail call i32 @vector_type_mode(%union.tree_node* %.cast49) #7, !dbg !7997
  br label %cond.end746, !dbg !7997

cond.false740:                                    ; preds = %if.end731
  %type741 = bitcast i64* %83 to %struct.tree_type*, !dbg !7997
  %mode742 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type741, i64 0, i32 6, !dbg !7997
  %bf.load743 = load i32, i32* %mode742, align 4, !dbg !7997
  %bf.lshr744 = lshr i32 %bf.load743, 16, !dbg !7997
  %bf.clear745 = and i32 %bf.lshr744, 255, !dbg !7997
  br label %cond.end746, !dbg !7997

cond.end746:                                      ; preds = %cond.false740, %cond.true738
  %cond747 = phi i32 [ %call739, %cond.true738 ], [ %bf.clear745, %cond.false740 ], !dbg !7997
  %cmp748 = icmp eq i32 %cond747, %mode, !dbg !7999
  br i1 %cmp748, label %if.then750, label %if.end756, !dbg !8000

if.then750:                                       ; preds = %cond.end746
  %tobool751 = icmp eq i32 %unsignedp, 0, !dbg !8001
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 64), align 16, !dbg !8001
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 72), align 16, !dbg !8001
  %cond755 = select i1 %tobool751, %union.tree_node* %85, %union.tree_node* %84, !dbg !8001
  br label %cleanup1147, !dbg !8001

if.end756:                                        ; preds = %cond.end746
  %86 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 81) to i64**), align 8, !dbg !8002
  %bf.load758 = load i64, i64* %86, align 8, !dbg !8002
  %bf.cast76050 = and i64 %bf.load758, 65535, !dbg !8002
  %cmp761 = icmp eq i64 %bf.cast76050, 14, !dbg !8002
  br i1 %cmp761, label %cond.true763, label %cond.false765, !dbg !8002

cond.true763:                                     ; preds = %if.end756
  %.cast51 = bitcast i64* %86 to %union.tree_node*, !dbg !8002
  %call764 = tail call i32 @vector_type_mode(%union.tree_node* %.cast51) #7, !dbg !8002
  br label %cond.end771, !dbg !8002

cond.false765:                                    ; preds = %if.end756
  %type766 = bitcast i64* %86 to %struct.tree_type*, !dbg !8002
  %mode767 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type766, i64 0, i32 6, !dbg !8002
  %bf.load768 = load i32, i32* %mode767, align 4, !dbg !8002
  %bf.lshr769 = lshr i32 %bf.load768, 16, !dbg !8002
  %bf.clear770 = and i32 %bf.lshr769, 255, !dbg !8002
  br label %cond.end771, !dbg !8002

cond.end771:                                      ; preds = %cond.false765, %cond.true763
  %cond772 = phi i32 [ %call764, %cond.true763 ], [ %bf.clear770, %cond.false765 ], !dbg !8002
  %cmp773 = icmp eq i32 %cond772, %mode, !dbg !8004
  br i1 %cmp773, label %if.then775, label %if.end781, !dbg !8005

if.then775:                                       ; preds = %cond.end771
  %tobool776 = icmp eq i32 %unsignedp, 0, !dbg !8006
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 73), align 8, !dbg !8006
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 81), align 8, !dbg !8006
  %cond780 = select i1 %tobool776, %union.tree_node* %88, %union.tree_node* %87, !dbg !8006
  br label %cleanup1147, !dbg !8006

if.end781:                                        ; preds = %cond.end771
  %89 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 82) to i64**), align 16, !dbg !8007
  %bf.load783 = load i64, i64* %89, align 8, !dbg !8007
  %bf.cast78552 = and i64 %bf.load783, 65535, !dbg !8007
  %cmp786 = icmp eq i64 %bf.cast78552, 14, !dbg !8007
  br i1 %cmp786, label %cond.true788, label %cond.false790, !dbg !8007

cond.true788:                                     ; preds = %if.end781
  %.cast53 = bitcast i64* %89 to %union.tree_node*, !dbg !8007
  %call789 = tail call i32 @vector_type_mode(%union.tree_node* %.cast53) #7, !dbg !8007
  br label %cond.end796, !dbg !8007

cond.false790:                                    ; preds = %if.end781
  %type791 = bitcast i64* %89 to %struct.tree_type*, !dbg !8007
  %mode792 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type791, i64 0, i32 6, !dbg !8007
  %bf.load793 = load i32, i32* %mode792, align 4, !dbg !8007
  %bf.lshr794 = lshr i32 %bf.load793, 16, !dbg !8007
  %bf.clear795 = and i32 %bf.lshr794, 255, !dbg !8007
  br label %cond.end796, !dbg !8007

cond.end796:                                      ; preds = %cond.false790, %cond.true788
  %cond797 = phi i32 [ %call789, %cond.true788 ], [ %bf.clear795, %cond.false790 ], !dbg !8007
  %cmp798 = icmp eq i32 %cond797, %mode, !dbg !8009
  br i1 %cmp798, label %if.then800, label %if.end806, !dbg !8010

if.then800:                                       ; preds = %cond.end796
  %tobool801 = icmp eq i32 %unsignedp, 0, !dbg !8011
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 74), align 16, !dbg !8011
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 82), align 16, !dbg !8011
  %cond805 = select i1 %tobool801, %union.tree_node* %91, %union.tree_node* %90, !dbg !8011
  br label %cleanup1147, !dbg !8011

if.end806:                                        ; preds = %cond.end796
  %92 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 83) to i64**), align 8, !dbg !8012
  %bf.load808 = load i64, i64* %92, align 8, !dbg !8012
  %bf.cast81054 = and i64 %bf.load808, 65535, !dbg !8012
  %cmp811 = icmp eq i64 %bf.cast81054, 14, !dbg !8012
  br i1 %cmp811, label %cond.true813, label %cond.false815, !dbg !8012

cond.true813:                                     ; preds = %if.end806
  %.cast55 = bitcast i64* %92 to %union.tree_node*, !dbg !8012
  %call814 = tail call i32 @vector_type_mode(%union.tree_node* %.cast55) #7, !dbg !8012
  br label %cond.end821, !dbg !8012

cond.false815:                                    ; preds = %if.end806
  %type816 = bitcast i64* %92 to %struct.tree_type*, !dbg !8012
  %mode817 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type816, i64 0, i32 6, !dbg !8012
  %bf.load818 = load i32, i32* %mode817, align 4, !dbg !8012
  %bf.lshr819 = lshr i32 %bf.load818, 16, !dbg !8012
  %bf.clear820 = and i32 %bf.lshr819, 255, !dbg !8012
  br label %cond.end821, !dbg !8012

cond.end821:                                      ; preds = %cond.false815, %cond.true813
  %cond822 = phi i32 [ %call814, %cond.true813 ], [ %bf.clear820, %cond.false815 ], !dbg !8012
  %cmp823 = icmp eq i32 %cond822, %mode, !dbg !8014
  br i1 %cmp823, label %if.then825, label %if.end831, !dbg !8015

if.then825:                                       ; preds = %cond.end821
  %tobool826 = icmp eq i32 %unsignedp, 0, !dbg !8016
  %93 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 75), align 8, !dbg !8016
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 83), align 8, !dbg !8016
  %cond830 = select i1 %tobool826, %union.tree_node* %94, %union.tree_node* %93, !dbg !8016
  br label %cleanup1147, !dbg !8016

if.end831:                                        ; preds = %cond.end821
  %95 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 84) to i64**), align 16, !dbg !8017
  %bf.load833 = load i64, i64* %95, align 8, !dbg !8017
  %bf.cast83556 = and i64 %bf.load833, 65535, !dbg !8017
  %cmp836 = icmp eq i64 %bf.cast83556, 14, !dbg !8017
  br i1 %cmp836, label %cond.true838, label %cond.false840, !dbg !8017

cond.true838:                                     ; preds = %if.end831
  %.cast57 = bitcast i64* %95 to %union.tree_node*, !dbg !8017
  %call839 = tail call i32 @vector_type_mode(%union.tree_node* %.cast57) #7, !dbg !8017
  br label %cond.end846, !dbg !8017

cond.false840:                                    ; preds = %if.end831
  %type841 = bitcast i64* %95 to %struct.tree_type*, !dbg !8017
  %mode842 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type841, i64 0, i32 6, !dbg !8017
  %bf.load843 = load i32, i32* %mode842, align 4, !dbg !8017
  %bf.lshr844 = lshr i32 %bf.load843, 16, !dbg !8017
  %bf.clear845 = and i32 %bf.lshr844, 255, !dbg !8017
  br label %cond.end846, !dbg !8017

cond.end846:                                      ; preds = %cond.false840, %cond.true838
  %cond847 = phi i32 [ %call839, %cond.true838 ], [ %bf.clear845, %cond.false840 ], !dbg !8017
  %cmp848 = icmp eq i32 %cond847, %mode, !dbg !8019
  br i1 %cmp848, label %if.then850, label %if.end856, !dbg !8020

if.then850:                                       ; preds = %cond.end846
  %tobool851 = icmp eq i32 %unsignedp, 0, !dbg !8021
  %96 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 76), align 16, !dbg !8021
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 84), align 16, !dbg !8021
  %cond855 = select i1 %tobool851, %union.tree_node* %97, %union.tree_node* %96, !dbg !8021
  br label %cleanup1147, !dbg !8021

if.end856:                                        ; preds = %cond.end846
  %98 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 85) to i64**), align 8, !dbg !8022
  %bf.load858 = load i64, i64* %98, align 8, !dbg !8022
  %bf.cast86058 = and i64 %bf.load858, 65535, !dbg !8022
  %cmp861 = icmp eq i64 %bf.cast86058, 14, !dbg !8022
  br i1 %cmp861, label %cond.true863, label %cond.false865, !dbg !8022

cond.true863:                                     ; preds = %if.end856
  %.cast59 = bitcast i64* %98 to %union.tree_node*, !dbg !8022
  %call864 = tail call i32 @vector_type_mode(%union.tree_node* %.cast59) #7, !dbg !8022
  br label %cond.end871, !dbg !8022

cond.false865:                                    ; preds = %if.end856
  %type866 = bitcast i64* %98 to %struct.tree_type*, !dbg !8022
  %mode867 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type866, i64 0, i32 6, !dbg !8022
  %bf.load868 = load i32, i32* %mode867, align 4, !dbg !8022
  %bf.lshr869 = lshr i32 %bf.load868, 16, !dbg !8022
  %bf.clear870 = and i32 %bf.lshr869, 255, !dbg !8022
  br label %cond.end871, !dbg !8022

cond.end871:                                      ; preds = %cond.false865, %cond.true863
  %cond872 = phi i32 [ %call864, %cond.true863 ], [ %bf.clear870, %cond.false865 ], !dbg !8022
  %cmp873 = icmp eq i32 %cond872, %mode, !dbg !8024
  br i1 %cmp873, label %if.then875, label %if.end881, !dbg !8025

if.then875:                                       ; preds = %cond.end871
  %tobool876 = icmp eq i32 %unsignedp, 0, !dbg !8026
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 77), align 8, !dbg !8026
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 85), align 8, !dbg !8026
  %cond880 = select i1 %tobool876, %union.tree_node* %100, %union.tree_node* %99, !dbg !8026
  br label %cleanup1147, !dbg !8026

if.end881:                                        ; preds = %cond.end871
  %101 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 86) to i64**), align 16, !dbg !8027
  %bf.load883 = load i64, i64* %101, align 8, !dbg !8027
  %bf.cast88560 = and i64 %bf.load883, 65535, !dbg !8027
  %cmp886 = icmp eq i64 %bf.cast88560, 14, !dbg !8027
  br i1 %cmp886, label %cond.true888, label %cond.false890, !dbg !8027

cond.true888:                                     ; preds = %if.end881
  %.cast61 = bitcast i64* %101 to %union.tree_node*, !dbg !8027
  %call889 = tail call i32 @vector_type_mode(%union.tree_node* %.cast61) #7, !dbg !8027
  br label %cond.end896, !dbg !8027

cond.false890:                                    ; preds = %if.end881
  %type891 = bitcast i64* %101 to %struct.tree_type*, !dbg !8027
  %mode892 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type891, i64 0, i32 6, !dbg !8027
  %bf.load893 = load i32, i32* %mode892, align 4, !dbg !8027
  %bf.lshr894 = lshr i32 %bf.load893, 16, !dbg !8027
  %bf.clear895 = and i32 %bf.lshr894, 255, !dbg !8027
  br label %cond.end896, !dbg !8027

cond.end896:                                      ; preds = %cond.false890, %cond.true888
  %cond897 = phi i32 [ %call889, %cond.true888 ], [ %bf.clear895, %cond.false890 ], !dbg !8027
  %cmp898 = icmp eq i32 %cond897, %mode, !dbg !8029
  br i1 %cmp898, label %if.then900, label %if.end906, !dbg !8030

if.then900:                                       ; preds = %cond.end896
  %tobool901 = icmp eq i32 %unsignedp, 0, !dbg !8031
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 78), align 16, !dbg !8031
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 86), align 16, !dbg !8031
  %cond905 = select i1 %tobool901, %union.tree_node* %103, %union.tree_node* %102, !dbg !8031
  br label %cleanup1147, !dbg !8031

if.end906:                                        ; preds = %cond.end896
  %104 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 87) to i64**), align 8, !dbg !8032
  %bf.load908 = load i64, i64* %104, align 8, !dbg !8032
  %bf.cast91062 = and i64 %bf.load908, 65535, !dbg !8032
  %cmp911 = icmp eq i64 %bf.cast91062, 14, !dbg !8032
  br i1 %cmp911, label %cond.true913, label %cond.false915, !dbg !8032

cond.true913:                                     ; preds = %if.end906
  %.cast63 = bitcast i64* %104 to %union.tree_node*, !dbg !8032
  %call914 = tail call i32 @vector_type_mode(%union.tree_node* %.cast63) #7, !dbg !8032
  br label %cond.end921, !dbg !8032

cond.false915:                                    ; preds = %if.end906
  %type916 = bitcast i64* %104 to %struct.tree_type*, !dbg !8032
  %mode917 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type916, i64 0, i32 6, !dbg !8032
  %bf.load918 = load i32, i32* %mode917, align 4, !dbg !8032
  %bf.lshr919 = lshr i32 %bf.load918, 16, !dbg !8032
  %bf.clear920 = and i32 %bf.lshr919, 255, !dbg !8032
  br label %cond.end921, !dbg !8032

cond.end921:                                      ; preds = %cond.false915, %cond.true913
  %cond922 = phi i32 [ %call914, %cond.true913 ], [ %bf.clear920, %cond.false915 ], !dbg !8032
  %cmp923 = icmp eq i32 %cond922, %mode, !dbg !8034
  br i1 %cmp923, label %if.then925, label %if.end931, !dbg !8035

if.then925:                                       ; preds = %cond.end921
  %tobool926 = icmp eq i32 %unsignedp, 0, !dbg !8036
  %105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 79), align 8, !dbg !8036
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 87), align 8, !dbg !8036
  %cond930 = select i1 %tobool926, %union.tree_node* %106, %union.tree_node* %105, !dbg !8036
  br label %cleanup1147, !dbg !8036

if.end931:                                        ; preds = %cond.end921
  %107 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 88) to i64**), align 16, !dbg !8037
  %bf.load933 = load i64, i64* %107, align 8, !dbg !8037
  %bf.cast93564 = and i64 %bf.load933, 65535, !dbg !8037
  %cmp936 = icmp eq i64 %bf.cast93564, 14, !dbg !8037
  br i1 %cmp936, label %cond.true938, label %cond.false940, !dbg !8037

cond.true938:                                     ; preds = %if.end931
  %.cast65 = bitcast i64* %107 to %union.tree_node*, !dbg !8037
  %call939 = tail call i32 @vector_type_mode(%union.tree_node* %.cast65) #7, !dbg !8037
  br label %cond.end946, !dbg !8037

cond.false940:                                    ; preds = %if.end931
  %type941 = bitcast i64* %107 to %struct.tree_type*, !dbg !8037
  %mode942 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type941, i64 0, i32 6, !dbg !8037
  %bf.load943 = load i32, i32* %mode942, align 4, !dbg !8037
  %bf.lshr944 = lshr i32 %bf.load943, 16, !dbg !8037
  %bf.clear945 = and i32 %bf.lshr944, 255, !dbg !8037
  br label %cond.end946, !dbg !8037

cond.end946:                                      ; preds = %cond.false940, %cond.true938
  %cond947 = phi i32 [ %call939, %cond.true938 ], [ %bf.clear945, %cond.false940 ], !dbg !8037
  %cmp948 = icmp eq i32 %cond947, %mode, !dbg !8039
  br i1 %cmp948, label %if.then950, label %if.end956, !dbg !8040

if.then950:                                       ; preds = %cond.end946
  %tobool951 = icmp eq i32 %unsignedp, 0, !dbg !8041
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 80), align 16, !dbg !8041
  %109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 88), align 16, !dbg !8041
  %cond955 = select i1 %tobool951, %union.tree_node* %109, %union.tree_node* %108, !dbg !8041
  br label %cleanup1147, !dbg !8041

if.end956:                                        ; preds = %cond.end946
  switch i32 %mode, label %if.end1119 [
    i32 20, label %if.then959
    i32 21, label %if.then968
    i32 22, label %if.then977
    i32 23, label %if.then986
    i32 24, label %if.then995
    i32 25, label %if.then1004
    i32 26, label %if.then1013
    i32 27, label %if.then1022
    i32 28, label %if.then1031
    i32 29, label %if.then1040
    i32 30, label %if.then1049
    i32 31, label %if.then1058
    i32 32, label %if.then1067
    i32 33, label %if.then1076
    i32 34, label %if.then1085
    i32 35, label %if.then1094
    i32 36, label %if.then1103
    i32 37, label %if.then1112
  ], !dbg !8042

if.then959:                                       ; preds = %if.end956
  %tobool960 = icmp eq i32 %unsignedp, 0, !dbg !8043
  %110 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 99), align 8, !dbg !8043
  %111 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 89), align 8, !dbg !8043
  %cond964 = select i1 %tobool960, %union.tree_node* %111, %union.tree_node* %110, !dbg !8043
  br label %cleanup1147, !dbg !8043

if.then968:                                       ; preds = %if.end956
  %tobool969 = icmp eq i32 %unsignedp, 0, !dbg !8045
  %112 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 100), align 16, !dbg !8045
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 90), align 16, !dbg !8045
  %cond973 = select i1 %tobool969, %union.tree_node* %113, %union.tree_node* %112, !dbg !8045
  br label %cleanup1147, !dbg !8045

if.then977:                                       ; preds = %if.end956
  %tobool978 = icmp eq i32 %unsignedp, 0, !dbg !8047
  %114 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 101), align 8, !dbg !8047
  %115 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 91), align 8, !dbg !8047
  %cond982 = select i1 %tobool978, %union.tree_node* %115, %union.tree_node* %114, !dbg !8047
  br label %cleanup1147, !dbg !8047

if.then986:                                       ; preds = %if.end956
  %tobool987 = icmp eq i32 %unsignedp, 0, !dbg !8049
  %116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 102), align 16, !dbg !8049
  %117 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 92), align 16, !dbg !8049
  %cond991 = select i1 %tobool987, %union.tree_node* %117, %union.tree_node* %116, !dbg !8049
  br label %cleanup1147, !dbg !8049

if.then995:                                       ; preds = %if.end956
  %tobool996 = icmp eq i32 %unsignedp, 0, !dbg !8051
  %118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 103), align 8, !dbg !8051
  %119 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 93), align 8, !dbg !8051
  %cond1000 = select i1 %tobool996, %union.tree_node* %119, %union.tree_node* %118, !dbg !8051
  br label %cleanup1147, !dbg !8051

if.then1004:                                      ; preds = %if.end956
  %tobool1005 = icmp eq i32 %unsignedp, 0, !dbg !8053
  %120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 104), align 16, !dbg !8053
  %121 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 94), align 16, !dbg !8053
  %cond1009 = select i1 %tobool1005, %union.tree_node* %121, %union.tree_node* %120, !dbg !8053
  br label %cleanup1147, !dbg !8053

if.then1013:                                      ; preds = %if.end956
  %tobool1014 = icmp eq i32 %unsignedp, 0, !dbg !8055
  %122 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 105), align 8, !dbg !8055
  %123 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 95), align 8, !dbg !8055
  %cond1018 = select i1 %tobool1014, %union.tree_node* %123, %union.tree_node* %122, !dbg !8055
  br label %cleanup1147, !dbg !8055

if.then1022:                                      ; preds = %if.end956
  %tobool1023 = icmp eq i32 %unsignedp, 0, !dbg !8057
  %124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 106), align 16, !dbg !8057
  %125 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 96), align 16, !dbg !8057
  %cond1027 = select i1 %tobool1023, %union.tree_node* %125, %union.tree_node* %124, !dbg !8057
  br label %cleanup1147, !dbg !8057

if.then1031:                                      ; preds = %if.end956
  %tobool1032 = icmp eq i32 %unsignedp, 0, !dbg !8059
  %126 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 107), align 8, !dbg !8059
  %127 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 97), align 8, !dbg !8059
  %cond1036 = select i1 %tobool1032, %union.tree_node* %127, %union.tree_node* %126, !dbg !8059
  br label %cleanup1147, !dbg !8059

if.then1040:                                      ; preds = %if.end956
  %tobool1041 = icmp eq i32 %unsignedp, 0, !dbg !8061
  %128 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 108), align 16, !dbg !8061
  %129 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 98), align 16, !dbg !8061
  %cond1045 = select i1 %tobool1041, %union.tree_node* %129, %union.tree_node* %128, !dbg !8061
  br label %cleanup1147, !dbg !8061

if.then1049:                                      ; preds = %if.end956
  %tobool1050 = icmp eq i32 %unsignedp, 0, !dbg !8063
  %130 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 117), align 8, !dbg !8063
  %131 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 109), align 8, !dbg !8063
  %cond1054 = select i1 %tobool1050, %union.tree_node* %131, %union.tree_node* %130, !dbg !8063
  br label %cleanup1147, !dbg !8063

if.then1058:                                      ; preds = %if.end956
  %tobool1059 = icmp eq i32 %unsignedp, 0, !dbg !8065
  %132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 118), align 16, !dbg !8065
  %133 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 110), align 16, !dbg !8065
  %cond1063 = select i1 %tobool1059, %union.tree_node* %133, %union.tree_node* %132, !dbg !8065
  br label %cleanup1147, !dbg !8065

if.then1067:                                      ; preds = %if.end956
  %tobool1068 = icmp eq i32 %unsignedp, 0, !dbg !8067
  %134 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 119), align 8, !dbg !8067
  %135 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 111), align 8, !dbg !8067
  %cond1072 = select i1 %tobool1068, %union.tree_node* %135, %union.tree_node* %134, !dbg !8067
  br label %cleanup1147, !dbg !8067

if.then1076:                                      ; preds = %if.end956
  %tobool1077 = icmp eq i32 %unsignedp, 0, !dbg !8069
  %136 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 120), align 16, !dbg !8069
  %137 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 112), align 16, !dbg !8069
  %cond1081 = select i1 %tobool1077, %union.tree_node* %137, %union.tree_node* %136, !dbg !8069
  br label %cleanup1147, !dbg !8069

if.then1085:                                      ; preds = %if.end956
  %tobool1086 = icmp eq i32 %unsignedp, 0, !dbg !8071
  %138 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 121), align 8, !dbg !8071
  %139 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 113), align 8, !dbg !8071
  %cond1090 = select i1 %tobool1086, %union.tree_node* %139, %union.tree_node* %138, !dbg !8071
  br label %cleanup1147, !dbg !8071

if.then1094:                                      ; preds = %if.end956
  %tobool1095 = icmp eq i32 %unsignedp, 0, !dbg !8073
  %140 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 122), align 16, !dbg !8073
  %141 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 114), align 16, !dbg !8073
  %cond1099 = select i1 %tobool1095, %union.tree_node* %141, %union.tree_node* %140, !dbg !8073
  br label %cleanup1147, !dbg !8073

if.then1103:                                      ; preds = %if.end956
  %tobool1104 = icmp eq i32 %unsignedp, 0, !dbg !8075
  %142 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 123), align 8, !dbg !8075
  %143 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 115), align 8, !dbg !8075
  %cond1108 = select i1 %tobool1104, %union.tree_node* %143, %union.tree_node* %142, !dbg !8075
  br label %cleanup1147, !dbg !8075

if.then1112:                                      ; preds = %if.end956
  %tobool1113 = icmp eq i32 %unsignedp, 0, !dbg !8077
  %144 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 124), align 16, !dbg !8077
  %145 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 116), align 16, !dbg !8077
  %cond1117 = select i1 %tobool1113, %union.tree_node* %145, %union.tree_node* %144, !dbg !8077
  br label %cleanup1147, !dbg !8077

if.end1119:                                       ; preds = %if.end956, %lor.lhs.false550
  br label %for.cond, !dbg !8079

for.cond:                                         ; preds = %for.inc, %if.end1119
  %t.0.in = phi %union.tree_node** [ @registered_builtin_types, %if.end1119 ], [ %chain, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !8081
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !7801, metadata !DIExpression()), !dbg !7810
  %tobool1120 = icmp eq %union.tree_node* %t.0, null, !dbg !8082
  br i1 %tobool1120, label %cleanup1147.loopexit, label %for.body, !dbg !8082

for.body:                                         ; preds = %for.cond
  %146 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8083
  %147 = bitcast %union.tree_node** %146 to i64**, !dbg !8083
  %148 = load i64*, i64** %147, align 8, !dbg !8083
  %bf.load1122 = load i64, i64* %148, align 8, !dbg !8083
  %bf.cast112432 = and i64 %bf.load1122, 65535, !dbg !8083
  %cmp1125 = icmp eq i64 %bf.cast112432, 14, !dbg !8083
  br i1 %cmp1125, label %cond.true1127, label %cond.false1131, !dbg !8083

cond.true1127:                                    ; preds = %for.body
  %.cast33 = bitcast i64* %148 to %union.tree_node*, !dbg !8083
  %call1130 = tail call i32 @vector_type_mode(%union.tree_node* %.cast33) #7, !dbg !8083
  br label %cond.end1139, !dbg !8083

cond.false1131:                                   ; preds = %for.body
  %type1134 = bitcast i64* %148 to %struct.tree_type*, !dbg !8083
  %mode1135 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1134, i64 0, i32 6, !dbg !8083
  %bf.load1136 = load i32, i32* %mode1135, align 4, !dbg !8083
  %bf.lshr1137 = lshr i32 %bf.load1136, 16, !dbg !8083
  %bf.clear1138 = and i32 %bf.lshr1137, 255, !dbg !8083
  br label %cond.end1139, !dbg !8083

cond.end1139:                                     ; preds = %cond.false1131, %cond.true1127
  %cond1140 = phi i32 [ %call1130, %cond.true1127 ], [ %bf.clear1138, %cond.false1131 ], !dbg !8083
  %cmp1141 = icmp eq i32 %cond1140, %mode, !dbg !8086
  br i1 %cmp1141, label %if.then1143, label %for.inc, !dbg !8087

if.then1143:                                      ; preds = %cond.end1139
  %.lcssa = phi %union.tree_node** [ %146, %cond.end1139 ], !dbg !8083
  %149 = load %union.tree_node*, %union.tree_node** %.lcssa, align 8, !dbg !8088
  br label %cleanup1147, !dbg !8089

for.inc:                                          ; preds = %cond.end1139
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8090
  br label %for.cond, !dbg !8091, !llvm.loop !8092

cleanup1147.loopexit:                             ; preds = %for.cond
  br label %cleanup1147, !dbg !8094

cleanup1147:                                      ; preds = %cleanup1147.loopexit, %if.then1112, %if.then1103, %if.then1094, %if.then1085, %if.then1076, %if.then1067, %if.then1058, %if.then1049, %if.then1040, %if.then1031, %if.then1022, %if.then1013, %if.then1004, %if.then995, %if.then986, %if.then977, %if.then968, %if.then959, %if.then950, %if.then925, %if.then900, %if.then875, %if.then850, %if.then825, %if.then800, %if.then775, %if.then750, %if.then725, %if.then700, %if.then675, %if.then650, %if.then625, %if.then600, %if.then575, %cond.true305, %cond.false310, %cond.true272, %cond.false274, %if.then172, %if.then149, %if.then141, %if.then133, %if.then125, %if.then117, %if.then94, %if.then71, %if.then48, %if.then25, %if.then, %cleanup, %cleanup467, %if.then1143, %if.then531, %if.then511, %if.then491, %if.then249, %if.then231, %if.then213, %if.then195
  %retval.2 = phi %union.tree_node* [ %30, %if.then195 ], [ %32, %if.then213 ], [ %34, %if.then231 ], [ %36, %if.then249 ], [ %retval.0, %cleanup ], [ %57, %if.then491 ], [ %59, %if.then511 ], [ %61, %if.then531 ], [ %149, %if.then1143 ], [ %retval.1, %cleanup467 ], [ %cond8, %if.then ], [ %cond30, %if.then25 ], [ %cond53, %if.then48 ], [ %cond76, %if.then71 ], [ %cond99, %if.then94 ], [ %cond122, %if.then117 ], [ %cond130, %if.then125 ], [ %cond138, %if.then133 ], [ %cond146, %if.then141 ], [ %cond154, %if.then149 ], [ %cond177, %if.then172 ], [ %call273, %cond.true272 ], [ %call278, %cond.false274 ], [ %call309, %cond.true305 ], [ %call314, %cond.false310 ], [ %cond580, %if.then575 ], [ %cond605, %if.then600 ], [ %cond630, %if.then625 ], [ %cond655, %if.then650 ], [ %cond680, %if.then675 ], [ %cond705, %if.then700 ], [ %cond730, %if.then725 ], [ %cond755, %if.then750 ], [ %cond780, %if.then775 ], [ %cond805, %if.then800 ], [ %cond830, %if.then825 ], [ %cond855, %if.then850 ], [ %cond880, %if.then875 ], [ %cond905, %if.then900 ], [ %cond930, %if.then925 ], [ %cond955, %if.then950 ], [ %cond964, %if.then959 ], [ %cond973, %if.then968 ], [ %cond982, %if.then977 ], [ %cond991, %if.then986 ], [ %cond1000, %if.then995 ], [ %cond1009, %if.then1004 ], [ %cond1018, %if.then1013 ], [ %cond1027, %if.then1022 ], [ %cond1036, %if.then1031 ], [ %cond1045, %if.then1040 ], [ %cond1054, %if.then1049 ], [ %cond1063, %if.then1058 ], [ %cond1072, %if.then1067 ], [ %cond1081, %if.then1076 ], [ %cond1090, %if.then1085 ], [ %cond1099, %if.then1094 ], [ %cond1108, %if.then1103 ], [ %cond1117, %if.then1112 ], [ null, %cleanup1147.loopexit ], !dbg !7810
  ret %union.tree_node* %retval.2, !dbg !8094
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_unsigned_type(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_signed_type(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_complex_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector_type_for_mode(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_nonstandard_integer_type(i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_build_bitfield_integer_type(i64 %width, i32 %unsignedp) local_unnamed_addr #5 !dbg !8095 {
entry:
  call void @llvm.dbg.value(metadata i64 %width, metadata !8099, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !8100, metadata !DIExpression()), !dbg !8101
  %0 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !8102
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %0, i64 0, i32 6, !dbg !8102
  %bf.load = load i32, i32* %precision, align 4, !dbg !8102
  %bf.clear = and i32 %bf.load, 1023, !dbg !8102
  %conv = zext i32 %bf.clear to i64, !dbg !8102
  %cmp = icmp eq i64 %conv, %width, !dbg !8104
  br i1 %cmp, label %if.then, label %if.end, !dbg !8105

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.tree_type* %0 to %union.tree_node*, !dbg !8105
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !8106
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !8106
  %cond = select i1 %tobool, %union.tree_node* %1, %union.tree_node* %2, !dbg !8106
  br label %return, !dbg !8106

if.end:                                           ; preds = %entry
  %3 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1) to %struct.tree_type**), align 8, !dbg !8107
  %precision3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 6, !dbg !8107
  %bf.load4 = load i32, i32* %precision3, align 4, !dbg !8107
  %bf.clear5 = and i32 %bf.load4, 1023, !dbg !8107
  %conv6 = zext i32 %bf.clear5 to i64, !dbg !8107
  %cmp7 = icmp eq i64 %conv6, %width, !dbg !8109
  br i1 %cmp7, label %if.then9, label %if.end15, !dbg !8110

if.then9:                                         ; preds = %if.end
  %4 = bitcast %struct.tree_type* %3 to %union.tree_node*, !dbg !8110
  %tobool10 = icmp eq i32 %unsignedp, 0, !dbg !8111
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !8111
  %cond14 = select i1 %tobool10, %union.tree_node* %4, %union.tree_node* %5, !dbg !8111
  br label %return, !dbg !8111

if.end15:                                         ; preds = %if.end
  %6 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3) to %struct.tree_type**), align 8, !dbg !8112
  %precision17 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 6, !dbg !8112
  %bf.load18 = load i32, i32* %precision17, align 4, !dbg !8112
  %bf.clear19 = and i32 %bf.load18, 1023, !dbg !8112
  %conv20 = zext i32 %bf.clear19 to i64, !dbg !8112
  %cmp21 = icmp eq i64 %conv20, %width, !dbg !8114
  br i1 %cmp21, label %if.then23, label %if.end29, !dbg !8115

if.then23:                                        ; preds = %if.end15
  %7 = bitcast %struct.tree_type* %6 to %union.tree_node*, !dbg !8115
  %tobool24 = icmp eq i32 %unsignedp, 0, !dbg !8116
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !8116
  %cond28 = select i1 %tobool24, %union.tree_node* %7, %union.tree_node* %8, !dbg !8116
  br label %return, !dbg !8116

if.end29:                                         ; preds = %if.end15
  %9 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7) to %struct.tree_type**), align 8, !dbg !8117
  %precision31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 6, !dbg !8117
  %bf.load32 = load i32, i32* %precision31, align 4, !dbg !8117
  %bf.clear33 = and i32 %bf.load32, 1023, !dbg !8117
  %conv34 = zext i32 %bf.clear33 to i64, !dbg !8117
  %cmp35 = icmp eq i64 %conv34, %width, !dbg !8119
  br i1 %cmp35, label %if.then37, label %if.end43, !dbg !8120

if.then37:                                        ; preds = %if.end29
  %10 = bitcast %struct.tree_type* %9 to %union.tree_node*, !dbg !8120
  %tobool38 = icmp eq i32 %unsignedp, 0, !dbg !8121
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !8121
  %cond42 = select i1 %tobool38, %union.tree_node* %10, %union.tree_node* %11, !dbg !8121
  br label %return, !dbg !8121

if.end43:                                         ; preds = %if.end29
  %12 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9) to %struct.tree_type**), align 8, !dbg !8122
  %precision45 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 6, !dbg !8122
  %bf.load46 = load i32, i32* %precision45, align 4, !dbg !8122
  %bf.clear47 = and i32 %bf.load46, 1023, !dbg !8122
  %conv48 = zext i32 %bf.clear47 to i64, !dbg !8122
  %cmp49 = icmp eq i64 %conv48, %width, !dbg !8124
  br i1 %cmp49, label %if.then51, label %if.end57, !dbg !8125

if.then51:                                        ; preds = %if.end43
  %13 = bitcast %struct.tree_type* %12 to %union.tree_node*, !dbg !8125
  %tobool52 = icmp eq i32 %unsignedp, 0, !dbg !8126
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !8126
  %cond56 = select i1 %tobool52, %union.tree_node* %13, %union.tree_node* %14, !dbg !8126
  br label %return, !dbg !8126

if.end57:                                         ; preds = %if.end43
  %call = tail call %union.tree_node* @build_nonstandard_integer_type(i64 %width, i32 %unsignedp) #7, !dbg !8127
  br label %return, !dbg !8128

return:                                           ; preds = %if.then51, %if.then37, %if.then23, %if.then9, %if.then, %if.end57
  %retval.0 = phi %union.tree_node* [ %call, %if.end57 ], [ %cond, %if.then ], [ %cond14, %if.then9 ], [ %cond28, %if.then23 ], [ %cond42, %if.then37 ], [ %cond56, %if.then51 ], !dbg !8101
  ret %union.tree_node* %retval.0, !dbg !8129
}

; Function Attrs: nounwind uwtable
define dso_local void @c_register_builtin_type(%union.tree_node* %type, i8* %name) local_unnamed_addr #5 !dbg !8130 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8134, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata i8* %name, metadata !8135, metadata !DIExpression()), !dbg !8137
  %call = tail call %union.tree_node* @get_identifier(i8* %name) #7, !dbg !8138
  %call1 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call, %union.tree_node* %type) #7, !dbg !8138
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8136, metadata !DIExpression()), !dbg !8137
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8139
  %0 = bitcast i40* %artificial_flag to i64*, !dbg !8139
  %bf.load = load i64, i64* %0, align 8, !dbg !8140
  %bf.set = or i64 %bf.load, 4096, !dbg !8140
  store i64 %bf.set, i64* %0, align 8, !dbg !8140
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !8141
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !8141
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !8141
  br i1 %tobool, label %if.then, label %if.end, !dbg !8143

if.then:                                          ; preds = %entry
  store %union.tree_node* %call1, %union.tree_node** %1, align 8, !dbg !8144
  br label %if.end, !dbg !8145

if.end:                                           ; preds = %entry, %if.then
  %call6 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call1) #7, !dbg !8146
  %3 = load %union.tree_node*, %union.tree_node** @registered_builtin_types, align 8, !dbg !8147
  %call7 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %type, %union.tree_node* %3) #7, !dbg !8147
  store %union.tree_node* %call7, %union.tree_node** @registered_builtin_types, align 8, !dbg !8148
  ret void, !dbg !8149
}

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @pushdecl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @binary_op_error(i32 %location, i32 %code, %union.tree_node* %type0, %union.tree_node* %type1) local_unnamed_addr #5 !dbg !8150 {
entry:
  call void @llvm.dbg.value(metadata i32 %location, metadata !8154, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32 %code, metadata !8155, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata %union.tree_node* %type0, metadata !8156, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata %union.tree_node* %type1, metadata !8157, metadata !DIExpression()), !dbg !8159
  switch i32 %code, label %sw.default [
    i32 63, label %sw.epilog
    i32 64, label %sw.bb1
    i32 65, label %sw.bb2
    i32 81, label %sw.bb3
    i32 80, label %sw.bb4
    i32 101, label %sw.bb5
    i32 102, label %sw.bb6
    i32 98, label %sw.bb7
    i32 100, label %sw.bb8
    i32 97, label %sw.bb9
    i32 99, label %sw.bb10
    i32 83, label %sw.bb11
    i32 84, label %sw.bb12
    i32 71, label %sw.bb13
    i32 73, label %sw.bb13
    i32 67, label %sw.bb14
    i32 69, label %sw.bb14
    i32 89, label %sw.bb15
    i32 87, label %sw.bb16
    i32 91, label %sw.bb17
    i32 92, label %sw.bb18
    i32 88, label %sw.bb19
  ], !dbg !8160

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.229, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8161

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.230, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8163

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.231, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8164

sw.bb4:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.232, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8165

sw.bb5:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.233, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8166

sw.bb6:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8167

sw.bb7:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.235, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8168

sw.bb8:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.236, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8169

sw.bb9:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8170

sw.bb10:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.238, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8171

sw.bb11:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.239, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8172

sw.bb12:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8173

sw.bb13:                                          ; preds = %entry, %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.241, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8174

sw.bb14:                                          ; preds = %entry, %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.242, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8175

sw.bb15:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.243, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8176

sw.bb16:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8177

sw.bb17:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8178

sw.bb18:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8179

sw.bb19:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i64 0, i64 0), metadata !8158, metadata !DIExpression()), !dbg !8159
  br label %sw.epilog, !dbg !8180

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 3377, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !8181
  br label %sw.epilog, !dbg !8182

sw.epilog:                                        ; preds = %entry, %sw.default, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %opname.0 = phi i8* [ undef, %sw.default ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i64 0, i64 0), %sw.bb19 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i64 0, i64 0), %sw.bb18 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i64 0, i64 0), %sw.bb17 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), %sw.bb16 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.243, i64 0, i64 0), %sw.bb15 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.242, i64 0, i64 0), %sw.bb14 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.241, i64 0, i64 0), %sw.bb13 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240, i64 0, i64 0), %sw.bb12 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.239, i64 0, i64 0), %sw.bb11 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.238, i64 0, i64 0), %sw.bb10 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), %sw.bb9 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.236, i64 0, i64 0), %sw.bb8 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.235, i64 0, i64 0), %sw.bb7 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234, i64 0, i64 0), %sw.bb6 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.233, i64 0, i64 0), %sw.bb5 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.232, i64 0, i64 0), %sw.bb4 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.231, i64 0, i64 0), %sw.bb3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.230, i64 0, i64 0), %sw.bb2 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.229, i64 0, i64 0), %sw.bb1 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.228, i64 0, i64 0), %entry ]
  call void @llvm.dbg.value(metadata i8* %opname.0, metadata !8158, metadata !DIExpression()), !dbg !8159
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.248, i64 0, i64 0), i8* %opname.0, %union.tree_node* %type0, %union.tree_node* %type1) #7, !dbg !8183
  ret void, !dbg !8184
}

declare dso_local void @error_at(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @shorten_compare(%union.tree_node** %op0_ptr, %union.tree_node** %op1_ptr, %union.tree_node** %restype_ptr, i32* %rescode_ptr) local_unnamed_addr #5 !dbg !8185 {
entry:
  %unsignedp0 = alloca i32, align 4
  %unsignedp1 = alloca i32, align 4
  %tmp = alloca %struct.expanded_location, align 8
  %tmp659 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %op0_ptr, metadata !8190, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node** %op1_ptr, metadata !8191, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node** %restype_ptr, metadata !8192, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32* %rescode_ptr, metadata !8193, metadata !DIExpression()), !dbg !8225
  %0 = load %union.tree_node*, %union.tree_node** %op0_ptr, align 8, !dbg !8226
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8195, metadata !DIExpression()), !dbg !8225
  %1 = load %union.tree_node*, %union.tree_node** %op1_ptr, align 8, !dbg !8227
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8196, metadata !DIExpression()), !dbg !8225
  %2 = bitcast i32* %unsignedp0 to i8*, !dbg !8228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #6, !dbg !8228
  %3 = bitcast i32* %unsignedp1 to i8*, !dbg !8228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #6, !dbg !8228
  %4 = load i32, i32* %rescode_ptr, align 4, !dbg !8229
  call void @llvm.dbg.value(metadata i32 %4, metadata !8203, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32* %unsignedp0, metadata !8197, metadata !DIExpression(DW_OP_deref)), !dbg !8225
  %call = call %union.tree_node* @get_narrower(%union.tree_node* %0, i32* nonnull %unsignedp0) #7, !dbg !8230
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8201, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32* %unsignedp1, metadata !8198, metadata !DIExpression(DW_OP_deref)), !dbg !8225
  %call1 = call %union.tree_node* @get_narrower(%union.tree_node* %1, i32* nonnull %unsignedp1) #7, !dbg !8231
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8202, metadata !DIExpression()), !dbg !8225
  %cmp = icmp eq %union.tree_node* %0, %call, !dbg !8232
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8234

land.lhs.true:                                    ; preds = %entry
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8235
  %5 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !8235
  %6 = load %union.tree_node*, %union.tree_node** %restype_ptr, align 8, !dbg !8236
  %cmp3 = icmp eq %union.tree_node* %5, %6, !dbg !8237
  br i1 %cmp3, label %if.end, label %if.then, !dbg !8238

if.then:                                          ; preds = %land.lhs.true
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8238
  %bf.load = load i64, i64* %7, align 8, !dbg !8239
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !8239
  %8 = trunc i64 %bf.lshr to i32, !dbg !8239
  %bf.cast = and i32 %8, 1, !dbg !8239
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !8197, metadata !DIExpression()), !dbg !8225
  store i32 %bf.cast, i32* %unsignedp0, align 4, !dbg !8240
  br label %if.end, !dbg !8241

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  %cmp6 = icmp eq %union.tree_node* %1, %call1, !dbg !8242
  br i1 %cmp6, label %land.lhs.true7, label %if.end19, !dbg !8244

land.lhs.true7:                                   ; preds = %if.end
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8245
  %9 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !8245
  %10 = load %union.tree_node*, %union.tree_node** %restype_ptr, align 8, !dbg !8246
  %cmp10 = icmp eq %union.tree_node* %9, %10, !dbg !8247
  br i1 %cmp10, label %if.end19, label %if.then11, !dbg !8248

if.then11:                                        ; preds = %land.lhs.true7
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8248
  %bf.load15 = load i64, i64* %11, align 8, !dbg !8249
  %bf.lshr16 = lshr i64 %bf.load15, 21, !dbg !8249
  %12 = trunc i64 %bf.lshr16 to i32, !dbg !8249
  %bf.cast18 = and i32 %12, 1, !dbg !8249
  call void @llvm.dbg.value(metadata i32 %bf.cast18, metadata !8198, metadata !DIExpression()), !dbg !8225
  store i32 %bf.cast18, i32* %unsignedp1, align 4, !dbg !8250
  br label %if.end19, !dbg !8251

if.end19:                                         ; preds = %land.lhs.true7, %if.then11, %if.end
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8252
  %13 = bitcast %union.tree_node** %type21 to i64**, !dbg !8252
  %14 = load i64*, i64** %13, align 8, !dbg !8252
  %bf.load23 = load i64, i64* %14, align 8, !dbg !8252
  %bf.cast2515 = and i64 %bf.load23, 65535, !dbg !8253
  %cmp26 = icmp eq i64 %bf.cast2515, 9, !dbg !8253
  %conv = zext i1 %cmp26 to i32, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8199, metadata !DIExpression()), !dbg !8225
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8254
  %15 = bitcast %union.tree_node** %type28 to i64**, !dbg !8254
  %16 = load i64*, i64** %15, align 8, !dbg !8254
  %bf.load30 = load i64, i64* %16, align 8, !dbg !8254
  %bf.cast3216 = and i64 %bf.load30, 65535, !dbg !8255
  %cmp33 = icmp eq i64 %bf.cast3216, 9, !dbg !8255
  %conv34 = zext i1 %cmp33 to i32, !dbg !8255
  call void @llvm.dbg.value(metadata i32 %conv34, metadata !8200, metadata !DIExpression()), !dbg !8225
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8256
  %bf.load36 = load i64, i64* %17, align 8, !dbg !8256
  %bf.cast3917 = and i64 %bf.load36, 131072, !dbg !8256
  %tobool = icmp eq i64 %bf.cast3917, 0, !dbg !8256
  br i1 %tobool, label %if.end53, label %land.lhs.true40, !dbg !8257

land.lhs.true40:                                  ; preds = %if.end19
  %call41 = call i32 @integer_zerop(%union.tree_node* %call1) #7, !dbg !8258
  %tobool42 = icmp eq i32 %call41, 0, !dbg !8258
  br i1 %tobool42, label %land.lhs.true43, label %if.end53, !dbg !8259

land.lhs.true43:                                  ; preds = %land.lhs.true40
  %call44 = call i32 @real_zerop(%union.tree_node* %call1) #7, !dbg !8260
  %tobool45 = icmp eq i32 %call44, 0, !dbg !8260
  br i1 %tobool45, label %land.lhs.true46, label %if.end53, !dbg !8261

land.lhs.true46:                                  ; preds = %land.lhs.true43
  %call47 = call i32 @fixed_zerop(%union.tree_node* %call1) #7, !dbg !8262
  %tobool48 = icmp eq i32 %call47, 0, !dbg !8262
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !8263

if.then49:                                        ; preds = %land.lhs.true46
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8204, metadata !DIExpression()), !dbg !8264
  %18 = load i32, i32* %unsignedp0, align 4, !dbg !8265
  call void @llvm.dbg.value(metadata i32 %18, metadata !8197, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %18, metadata !8207, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8201, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8202, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8204, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8195, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8196, metadata !DIExpression()), !dbg !8225
  store %union.tree_node* %1, %union.tree_node** %op0_ptr, align 8, !dbg !8266
  store %union.tree_node* %0, %union.tree_node** %op1_ptr, align 8, !dbg !8267
  %19 = load i32, i32* %unsignedp1, align 4, !dbg !8268
  call void @llvm.dbg.value(metadata i32 %19, metadata !8198, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %19, metadata !8197, metadata !DIExpression()), !dbg !8225
  store i32 %19, i32* %unsignedp0, align 4, !dbg !8269
  call void @llvm.dbg.value(metadata i32 %18, metadata !8198, metadata !DIExpression()), !dbg !8225
  store i32 %18, i32* %unsignedp1, align 4, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8207, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %conv34, metadata !8199, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8200, metadata !DIExpression()), !dbg !8225
  switch i32 %4, label %sw.default [
    i32 97, label %sw.epilog
    i32 99, label %sw.bb50
    i32 98, label %sw.bb51
    i32 100, label %sw.bb52
  ], !dbg !8271

sw.bb50:                                          ; preds = %if.then49
  call void @llvm.dbg.value(metadata i32 97, metadata !8203, metadata !DIExpression()), !dbg !8225
  br label %sw.epilog, !dbg !8272

sw.bb51:                                          ; preds = %if.then49
  call void @llvm.dbg.value(metadata i32 100, metadata !8203, metadata !DIExpression()), !dbg !8225
  br label %sw.epilog, !dbg !8274

sw.bb52:                                          ; preds = %if.then49
  call void @llvm.dbg.value(metadata i32 98, metadata !8203, metadata !DIExpression()), !dbg !8225
  br label %sw.epilog, !dbg !8275

sw.default:                                       ; preds = %if.then49
  br label %sw.epilog, !dbg !8276

sw.epilog:                                        ; preds = %if.then49, %sw.default, %sw.bb52, %sw.bb51, %sw.bb50
  %code.0 = phi i32 [ %4, %sw.default ], [ 98, %sw.bb52 ], [ 100, %sw.bb51 ], [ 97, %sw.bb50 ], [ 99, %if.then49 ], !dbg !8225
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !8203, metadata !DIExpression()), !dbg !8225
  store i32 %code.0, i32* %rescode_ptr, align 4, !dbg !8277
  br label %if.end53, !dbg !8278

if.end53:                                         ; preds = %land.lhs.true46, %land.lhs.true43, %land.lhs.true40, %if.end19, %sw.epilog
  %code.1 = phi i32 [ %4, %land.lhs.true40 ], [ %4, %land.lhs.true43 ], [ %4, %land.lhs.true46 ], [ %code.0, %sw.epilog ], [ %4, %if.end19 ], !dbg !8279
  %primop1.0 = phi %union.tree_node* [ %call1, %land.lhs.true40 ], [ %call1, %land.lhs.true43 ], [ %call1, %land.lhs.true46 ], [ %call, %sw.epilog ], [ %call1, %if.end19 ], !dbg !8225
  %primop0.0 = phi %union.tree_node* [ %call, %land.lhs.true40 ], [ %call, %land.lhs.true43 ], [ %call, %land.lhs.true46 ], [ %call1, %sw.epilog ], [ %call, %if.end19 ], !dbg !8225
  %real2.0 = phi i32 [ %conv34, %land.lhs.true40 ], [ %conv34, %land.lhs.true43 ], [ %conv34, %land.lhs.true46 ], [ %conv, %sw.epilog ], [ %conv34, %if.end19 ], !dbg !8225
  %real1.0 = phi i32 [ %conv, %land.lhs.true40 ], [ %conv, %land.lhs.true43 ], [ %conv, %land.lhs.true46 ], [ %conv34, %sw.epilog ], [ %conv, %if.end19 ], !dbg !8225
  %op1.0 = phi %union.tree_node* [ %1, %land.lhs.true40 ], [ %1, %land.lhs.true43 ], [ %1, %land.lhs.true46 ], [ %0, %sw.epilog ], [ %1, %if.end19 ], !dbg !8225
  %op0.0 = phi %union.tree_node* [ %0, %land.lhs.true40 ], [ %0, %land.lhs.true43 ], [ %0, %land.lhs.true46 ], [ %1, %sw.epilog ], [ %0, %if.end19 ], !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !8195, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !8196, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %real1.0, metadata !8199, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %real2.0, metadata !8200, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %primop0.0, metadata !8201, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %primop1.0, metadata !8202, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %code.1, metadata !8203, metadata !DIExpression()), !dbg !8225
  %20 = or i32 %real1.0, %real2.0, !dbg !8280
  %21 = icmp eq i32 %20, 0, !dbg !8280
  br i1 %21, label %land.lhs.true57, label %if.else478, !dbg !8280

land.lhs.true57:                                  ; preds = %if.end53
  %type59 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8281
  %22 = bitcast %union.tree_node** %type59 to i64**, !dbg !8281
  %23 = load i64*, i64** %22, align 8, !dbg !8281
  %bf.load61 = load i64, i64* %23, align 8, !dbg !8281
  %bf.cast6318 = and i64 %bf.load61, 65535, !dbg !8282
  %cmp64 = icmp eq i64 %bf.cast6318, 11, !dbg !8282
  %24 = bitcast i64* %23 to %struct.tree_type*, !dbg !8283
  %25 = bitcast i64* %23 to %union.tree_node*, !dbg !8283
  br i1 %cmp64, label %if.else478, label %land.lhs.true66, !dbg !8283

land.lhs.true66:                                  ; preds = %land.lhs.true57
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8284
  %bf.load68 = load i64, i64* %26, align 8, !dbg !8284
  %bf.cast7029 = and i64 %bf.load68, 65535, !dbg !8285
  %cmp71 = icmp eq i64 %bf.cast7029, 23, !dbg !8285
  br i1 %cmp71, label %land.lhs.true73, label %if.else478, !dbg !8286

land.lhs.true73:                                  ; preds = %land.lhs.true66
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 6, !dbg !8287
  %bf.load77 = load i32, i32* %precision, align 4, !dbg !8287
  %bf.clear78 = and i32 %bf.load77, 1023, !dbg !8287
  %27 = bitcast %union.tree_node** %restype_ptr to %struct.tree_type**, !dbg !8288
  %28 = load %struct.tree_type*, %struct.tree_type** %27, align 8, !dbg !8288
  %precision80 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %28, i64 0, i32 6, !dbg !8288
  %bf.load81 = load i32, i32* %precision80, align 4, !dbg !8288
  %bf.clear82 = and i32 %bf.load81, 1023, !dbg !8288
  %cmp83 = icmp ult i32 %bf.clear78, %bf.clear82, !dbg !8289
  br i1 %cmp83, label %if.then85, label %if.else478, !dbg !8290

if.then85:                                        ; preds = %land.lhs.true73
  %29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %28, i64 0, i32 0, i32 0, i32 0, !dbg !8290
  %bf.load87 = load i64, i64* %29, align 8, !dbg !8291
  %bf.lshr88 = lshr i64 %bf.load87, 21, !dbg !8291
  %30 = trunc i64 %bf.lshr88 to i32, !dbg !8291
  %bf.cast90 = and i32 %30, 1, !dbg !8291
  call void @llvm.dbg.value(metadata i32 %bf.cast90, metadata !8216, metadata !DIExpression()), !dbg !8292
  %31 = load i32, i32* %unsignedp0, align 4, !dbg !8293
  call void @llvm.dbg.value(metadata i32 %31, metadata !8197, metadata !DIExpression()), !dbg !8225
  %call93 = call %union.tree_node* @c_common_signed_or_unsigned_type(i32 %31, %union.tree_node* %25) #8, !dbg !8294
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !8194, metadata !DIExpression()), !dbg !8225
  %maxval95 = getelementptr inbounds %union.tree_node, %union.tree_node* %call93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8295
  %32 = bitcast %struct.rtx_def** %maxval95 to %union.tree_node**, !dbg !8295
  %33 = load %union.tree_node*, %union.tree_node** %32, align 8, !dbg !8295
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !8214, metadata !DIExpression()), !dbg !8292
  %minval97 = getelementptr inbounds %union.tree_node, %union.tree_node* %call93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !8296
  %34 = bitcast %struct.lang_decl** %minval97 to %union.tree_node**, !dbg !8296
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8, !dbg !8296
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !8215, metadata !DIExpression()), !dbg !8292
  %tobool98 = icmp eq i32 %bf.cast90, 0, !dbg !8297
  %36 = load i32, i32* %unsignedp0, align 4, !dbg !8299
  call void @llvm.dbg.value(metadata i32 %36, metadata !8197, metadata !DIExpression()), !dbg !8225
  %tobool100 = icmp ne i32 %36, 0, !dbg !8299
  %or.cond3 = or i1 %tobool98, %tobool100, !dbg !8300
  br i1 %or.cond3, label %if.then85.if.end103_crit_edge, label %if.then101, !dbg !8300

if.then85.if.end103_crit_edge:                    ; preds = %if.then85
  %.pre = load %union.tree_node*, %union.tree_node** %restype_ptr, align 8, !dbg !8301
  br label %if.end103, !dbg !8300

if.then101:                                       ; preds = %if.then85
  %37 = load %union.tree_node*, %union.tree_node** %restype_ptr, align 8, !dbg !8303
  %call102 = call %union.tree_node* @c_common_signed_type(%union.tree_node* %37) #8, !dbg !8304
  store %union.tree_node* %call102, %union.tree_node** %restype_ptr, align 8, !dbg !8305
  br label %if.end103, !dbg !8306

if.end103:                                        ; preds = %if.then85.if.end103_crit_edge, %if.then101
  %38 = phi %union.tree_node* [ %.pre, %if.then85.if.end103_crit_edge ], [ %call102, %if.then101 ], !dbg !8301
  %type105 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8307
  %39 = load %union.tree_node*, %union.tree_node** %type105, align 8, !dbg !8307
  %cmp106 = icmp eq %union.tree_node* %39, %38, !dbg !8308
  br i1 %cmp106, label %if.end119, label %if.then108, !dbg !8309

if.then108:                                       ; preds = %if.end103
  %int_cst109 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8310
  %low = bitcast i32* %int_cst109 to i64*, !dbg !8310
  %40 = load i64, i64* %low, align 8, !dbg !8310
  %high = getelementptr inbounds i32, i32* %int_cst109, i64 2, !dbg !8312
  %41 = bitcast i32* %high to i64*, !dbg !8312
  %42 = load i64, i64* %41, align 8, !dbg !8312
  %bf.load113 = load i64, i64* %26, align 8, !dbg !8313
  %bf.lshr114 = lshr i64 %bf.load113, 27, !dbg !8313
  %43 = trunc i64 %bf.lshr114 to i8, !dbg !8313
  %bf.cast116 = and i8 %43, 1, !dbg !8313
  %call118 = call %union.tree_node* @force_fit_type_double(%union.tree_node* %38, i64 %40, i64 %42, i32 0, i8 zeroext %bf.cast116) #7, !dbg !8314
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !8202, metadata !DIExpression()), !dbg !8225
  %.pre38 = load %union.tree_node*, %union.tree_node** %restype_ptr, align 8, !dbg !8315
  br label %if.end119, !dbg !8317

if.end119:                                        ; preds = %if.end103, %if.then108
  %44 = phi %union.tree_node* [ %.pre38, %if.then108 ], [ %38, %if.end103 ], !dbg !8315
  %primop1.1 = phi %union.tree_node* [ %call118, %if.then108 ], [ %primop1.0, %if.end103 ], !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %primop1.1, metadata !8202, metadata !DIExpression()), !dbg !8225
  %cmp120 = icmp eq %union.tree_node* %call93, %44, !dbg !8318
  br i1 %cmp120, label %if.end125, label %if.then122, !dbg !8319

if.then122:                                       ; preds = %if.end119
  %call123 = call %union.tree_node* @convert(%union.tree_node* %44, %union.tree_node* %35) #7, !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !8215, metadata !DIExpression()), !dbg !8292
  %45 = load %union.tree_node*, %union.tree_node** %restype_ptr, align 8, !dbg !8322
  %call124 = call %union.tree_node* @convert(%union.tree_node* %45, %union.tree_node* %33) #7, !dbg !8323
  call void @llvm.dbg.value(metadata %union.tree_node* %call124, metadata !8214, metadata !DIExpression()), !dbg !8292
  br label %if.end125, !dbg !8324

if.end125:                                        ; preds = %if.end119, %if.then122
  %maxval.0 = phi %union.tree_node* [ %call124, %if.then122 ], [ %33, %if.end119 ], !dbg !8292
  %minval.0 = phi %union.tree_node* [ %call123, %if.then122 ], [ %35, %if.end119 ], !dbg !8292
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.0, metadata !8215, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval.0, metadata !8214, metadata !DIExpression()), !dbg !8292
  %tobool126 = icmp ne i32 %bf.cast90, 0, !dbg !8325
  %46 = load i32, i32* %unsignedp0, align 4, !dbg !8327
  call void @llvm.dbg.value(metadata i32 %46, metadata !8197, metadata !DIExpression()), !dbg !8225
  %tobool128 = icmp ne i32 %46, 0, !dbg !8327
  %or.cond4 = and i1 %tobool126, %tobool128, !dbg !8328
  %int_cst131 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8329
  %high132 = getelementptr inbounds i32, i32* %int_cst131, i64 2, !dbg !8329
  %47 = bitcast i32* %high132 to i64*, !dbg !8329
  %48 = load i64, i64* %47, align 8, !dbg !8329
  %int_cst134 = getelementptr inbounds %union.tree_node, %union.tree_node* %minval.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8329
  %high135 = getelementptr inbounds i32, i32* %int_cst134, i64 2, !dbg !8329
  %49 = bitcast i32* %high135 to i64*, !dbg !8329
  %50 = load i64, i64* %49, align 8, !dbg !8329
  br i1 %or.cond4, label %if.then129, label %if.else, !dbg !8328

if.then129:                                       ; preds = %if.end125
  %cmp136 = icmp ult i64 %48, %50, !dbg !8330
  br i1 %cmp136, label %lor.end, label %lor.rhs, !dbg !8330

lor.rhs:                                          ; preds = %if.then129
  %cmp144 = icmp eq i64 %48, %50, !dbg !8330
  br i1 %cmp144, label %land.rhs, label %lor.end, !dbg !8330

land.rhs:                                         ; preds = %lor.rhs
  %low148 = bitcast i32* %int_cst131 to i64*, !dbg !8330
  %51 = load i64, i64* %low148, align 8, !dbg !8330
  %low151 = bitcast i32* %int_cst134 to i64*, !dbg !8330
  %52 = load i64, i64* %low151, align 8, !dbg !8330
  %cmp152 = icmp ult i64 %51, %52, !dbg !8330
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %if.then129
  %53 = phi i1 [ true, %if.then129 ], [ false, %lor.rhs ], [ %cmp152, %land.rhs ]
  call void @llvm.dbg.value(metadata i1 %53, metadata !8208, metadata !DIExpression()), !dbg !8292
  %int_cst158 = getelementptr inbounds %union.tree_node, %union.tree_node* %maxval.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8332
  %high159 = getelementptr inbounds i32, i32* %int_cst158, i64 2, !dbg !8332
  %54 = bitcast i32* %high159 to i64*, !dbg !8332
  %55 = load i64, i64* %54, align 8, !dbg !8332
  %cmp160 = icmp ult i64 %48, %55, !dbg !8332
  br i1 %cmp160, label %lor.end181, label %lor.rhs162, !dbg !8332

lor.rhs162:                                       ; preds = %lor.end
  %cmp169 = icmp eq i64 %48, %55, !dbg !8332
  br i1 %cmp169, label %land.rhs171, label %lor.end181, !dbg !8332

land.rhs171:                                      ; preds = %lor.rhs162
  %low174 = bitcast i32* %int_cst131 to i64*, !dbg !8332
  %56 = load i64, i64* %low174, align 8, !dbg !8332
  %low177 = bitcast i32* %int_cst158 to i64*, !dbg !8332
  %57 = load i64, i64* %low177, align 8, !dbg !8332
  %cmp178 = icmp ult i64 %56, %57, !dbg !8332
  %phitmp34 = zext i1 %cmp178 to i32
  br label %lor.end181

lor.end181:                                       ; preds = %lor.rhs162, %land.rhs171, %lor.end
  %58 = phi i32 [ 1, %lor.end ], [ 0, %lor.rhs162 ], [ %phitmp34, %land.rhs171 ]
  call void @llvm.dbg.value(metadata i32 %58, metadata !8211, metadata !DIExpression()), !dbg !8292
  %cmp189 = icmp ult i64 %50, %48, !dbg !8333
  br i1 %cmp189, label %lor.end210, label %lor.rhs191, !dbg !8333

lor.rhs191:                                       ; preds = %lor.end181
  %cmp198 = icmp eq i64 %50, %48, !dbg !8333
  br i1 %cmp198, label %land.rhs200, label %lor.end210, !dbg !8333

land.rhs200:                                      ; preds = %lor.rhs191
  %low203 = bitcast i32* %int_cst134 to i64*, !dbg !8333
  %59 = load i64, i64* %low203, align 8, !dbg !8333
  %low206 = bitcast i32* %int_cst131 to i64*, !dbg !8333
  %60 = load i64, i64* %low206, align 8, !dbg !8333
  %cmp207 = icmp ult i64 %59, %60, !dbg !8333
  %phitmp35 = zext i1 %cmp207 to i32
  br label %lor.end210

lor.end210:                                       ; preds = %lor.rhs191, %land.rhs200, %lor.end181
  %61 = phi i32 [ 1, %lor.end181 ], [ 0, %lor.rhs191 ], [ %phitmp35, %land.rhs200 ]
  call void @llvm.dbg.value(metadata i32 %61, metadata !8212, metadata !DIExpression()), !dbg !8292
  %cmp218 = icmp ult i64 %55, %48, !dbg !8334
  br i1 %cmp218, label %lor.end239, label %lor.rhs220, !dbg !8334

lor.rhs220:                                       ; preds = %lor.end210
  %cmp227 = icmp eq i64 %55, %48, !dbg !8334
  br i1 %cmp227, label %land.rhs229, label %lor.end239, !dbg !8334

land.rhs229:                                      ; preds = %lor.rhs220
  %low232 = bitcast i32* %int_cst158 to i64*, !dbg !8334
  %62 = load i64, i64* %low232, align 8, !dbg !8334
  %low235 = bitcast i32* %int_cst131 to i64*, !dbg !8334
  %63 = load i64, i64* %low235, align 8, !dbg !8334
  %cmp236 = icmp ult i64 %62, %63, !dbg !8334
  %phitmp36 = zext i1 %cmp236 to i32
  br label %lor.end239

lor.end239:                                       ; preds = %lor.rhs220, %land.rhs229, %lor.end210
  %64 = phi i32 [ 1, %lor.end210 ], [ 0, %lor.rhs220 ], [ %phitmp36, %land.rhs229 ]
  call void @llvm.dbg.value(metadata i32 %64, metadata !8213, metadata !DIExpression()), !dbg !8292
  br label %if.end357, !dbg !8335

if.else:                                          ; preds = %if.end125
  %cmp247 = icmp slt i64 %48, %50, !dbg !8336
  br i1 %cmp247, label %lor.end268, label %lor.rhs249, !dbg !8336

lor.rhs249:                                       ; preds = %if.else
  %cmp256 = icmp eq i64 %48, %50, !dbg !8336
  br i1 %cmp256, label %land.rhs258, label %lor.end268, !dbg !8336

land.rhs258:                                      ; preds = %lor.rhs249
  %low261 = bitcast i32* %int_cst131 to i64*, !dbg !8336
  %65 = load i64, i64* %low261, align 8, !dbg !8336
  %low264 = bitcast i32* %int_cst134 to i64*, !dbg !8336
  %66 = load i64, i64* %low264, align 8, !dbg !8336
  %cmp265 = icmp ult i64 %65, %66, !dbg !8336
  br label %lor.end268

lor.end268:                                       ; preds = %lor.rhs249, %land.rhs258, %if.else
  %67 = phi i1 [ true, %if.else ], [ false, %lor.rhs249 ], [ %cmp265, %land.rhs258 ]
  call void @llvm.dbg.value(metadata i1 %67, metadata !8208, metadata !DIExpression()), !dbg !8292
  %int_cst274 = getelementptr inbounds %union.tree_node, %union.tree_node* %maxval.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8338
  %high275 = getelementptr inbounds i32, i32* %int_cst274, i64 2, !dbg !8338
  %68 = bitcast i32* %high275 to i64*, !dbg !8338
  %69 = load i64, i64* %68, align 8, !dbg !8338
  %cmp276 = icmp slt i64 %48, %69, !dbg !8338
  br i1 %cmp276, label %lor.end297, label %lor.rhs278, !dbg !8338

lor.rhs278:                                       ; preds = %lor.end268
  %cmp285 = icmp eq i64 %48, %69, !dbg !8338
  br i1 %cmp285, label %land.rhs287, label %lor.end297, !dbg !8338

land.rhs287:                                      ; preds = %lor.rhs278
  %low290 = bitcast i32* %int_cst131 to i64*, !dbg !8338
  %70 = load i64, i64* %low290, align 8, !dbg !8338
  %low293 = bitcast i32* %int_cst274 to i64*, !dbg !8338
  %71 = load i64, i64* %low293, align 8, !dbg !8338
  %cmp294 = icmp ult i64 %70, %71, !dbg !8338
  %phitmp = zext i1 %cmp294 to i32
  br label %lor.end297

lor.end297:                                       ; preds = %lor.rhs278, %land.rhs287, %lor.end268
  %72 = phi i32 [ 1, %lor.end268 ], [ 0, %lor.rhs278 ], [ %phitmp, %land.rhs287 ]
  call void @llvm.dbg.value(metadata i32 %72, metadata !8211, metadata !DIExpression()), !dbg !8292
  %cmp305 = icmp slt i64 %50, %48, !dbg !8339
  br i1 %cmp305, label %lor.end326, label %lor.rhs307, !dbg !8339

lor.rhs307:                                       ; preds = %lor.end297
  %cmp314 = icmp eq i64 %50, %48, !dbg !8339
  br i1 %cmp314, label %land.rhs316, label %lor.end326, !dbg !8339

land.rhs316:                                      ; preds = %lor.rhs307
  %low319 = bitcast i32* %int_cst134 to i64*, !dbg !8339
  %73 = load i64, i64* %low319, align 8, !dbg !8339
  %low322 = bitcast i32* %int_cst131 to i64*, !dbg !8339
  %74 = load i64, i64* %low322, align 8, !dbg !8339
  %cmp323 = icmp ult i64 %73, %74, !dbg !8339
  %phitmp30 = zext i1 %cmp323 to i32
  br label %lor.end326

lor.end326:                                       ; preds = %lor.rhs307, %land.rhs316, %lor.end297
  %75 = phi i32 [ 1, %lor.end297 ], [ 0, %lor.rhs307 ], [ %phitmp30, %land.rhs316 ]
  call void @llvm.dbg.value(metadata i32 %75, metadata !8212, metadata !DIExpression()), !dbg !8292
  %cmp334 = icmp slt i64 %69, %48, !dbg !8340
  br i1 %cmp334, label %lor.end355, label %lor.rhs336, !dbg !8340

lor.rhs336:                                       ; preds = %lor.end326
  %cmp343 = icmp eq i64 %69, %48, !dbg !8340
  br i1 %cmp343, label %land.rhs345, label %lor.end355, !dbg !8340

land.rhs345:                                      ; preds = %lor.rhs336
  %low348 = bitcast i32* %int_cst274 to i64*, !dbg !8340
  %76 = load i64, i64* %low348, align 8, !dbg !8340
  %low351 = bitcast i32* %int_cst131 to i64*, !dbg !8340
  %77 = load i64, i64* %low351, align 8, !dbg !8340
  %cmp352 = icmp ult i64 %76, %77, !dbg !8340
  %phitmp31 = zext i1 %cmp352 to i32
  br label %lor.end355

lor.end355:                                       ; preds = %lor.rhs336, %land.rhs345, %lor.end326
  %78 = phi i32 [ 1, %lor.end326 ], [ 0, %lor.rhs336 ], [ %phitmp31, %land.rhs345 ]
  call void @llvm.dbg.value(metadata i32 %78, metadata !8213, metadata !DIExpression()), !dbg !8292
  br label %if.end357

if.end357:                                        ; preds = %lor.end355, %lor.end239
  %min_lt.0 = phi i32 [ %61, %lor.end239 ], [ %75, %lor.end355 ], !dbg !8329
  %max_gt.0 = phi i32 [ %58, %lor.end239 ], [ %72, %lor.end355 ], !dbg !8329
  %min_gt.0.in = phi i1 [ %53, %lor.end239 ], [ %67, %lor.end355 ]
  %max_lt.0 = phi i32 [ %64, %lor.end239 ], [ %78, %lor.end355 ], !dbg !8329
  call void @llvm.dbg.value(metadata i32 %max_lt.0, metadata !8213, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i1 %min_gt.0.in, metadata !8208, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i32 %max_gt.0, metadata !8211, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i32 %min_lt.0, metadata !8212, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8217, metadata !DIExpression()), !dbg !8292
  switch i32 %code.1, label %if.end419 [
    i32 102, label %if.then360
    i32 101, label %if.then368
    i32 97, label %if.then377
    i32 99, label %if.then387
    i32 98, label %if.then397
    i32 100, label %if.then407
  ], !dbg !8341

if.then360:                                       ; preds = %if.end357
  call void @llvm.dbg.value(metadata i1 %min_gt.0.in, metadata !8208, metadata !DIExpression()), !dbg !8292
  %tobool361 = icmp ne i32 %max_lt.0, 0, !dbg !8342
  %or.cond5 = or i1 %tobool361, %min_gt.0.in, !dbg !8346
  %79 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8346
  %val.0 = select i1 %or.cond5, %union.tree_node* %79, %union.tree_node* null, !dbg !8346
  br label %if.end419, !dbg !8346

if.then368:                                       ; preds = %if.end357
  %tobool369 = icmp ne i32 %max_lt.0, 0, !dbg !8347
  %or.cond6 = or i1 %tobool369, %min_gt.0.in, !dbg !8351
  %80 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8351
  %val.1 = select i1 %or.cond6, %union.tree_node* %80, %union.tree_node* null, !dbg !8351
  br label %if.end419, !dbg !8351

if.then377:                                       ; preds = %if.end357
  %tobool378 = icmp eq i32 %max_lt.0, 0, !dbg !8352
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8356
  %spec.select = select i1 %tobool378, %union.tree_node* null, %union.tree_node* %81, !dbg !8357
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !8217, metadata !DIExpression()), !dbg !8292
  %tobool381 = icmp eq i32 %min_lt.0, 0, !dbg !8358
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8360
  %val.3 = select i1 %tobool381, %union.tree_node* %82, %union.tree_node* %spec.select, !dbg !8360
  br label %if.end419, !dbg !8360

if.then387:                                       ; preds = %if.end357
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8361
  %spec.select7 = select i1 %min_gt.0.in, %union.tree_node* %83, %union.tree_node* null, !dbg !8365
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select7, metadata !8217, metadata !DIExpression()), !dbg !8292
  %tobool391 = icmp eq i32 %max_gt.0, 0, !dbg !8366
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8368
  %val.5 = select i1 %tobool391, %union.tree_node* %84, %union.tree_node* %spec.select7, !dbg !8368
  br label %if.end419, !dbg !8368

if.then397:                                       ; preds = %if.end357
  %tobool398 = icmp eq i32 %max_gt.0, 0, !dbg !8369
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8373
  %spec.select8 = select i1 %tobool398, %union.tree_node* %85, %union.tree_node* null, !dbg !8374
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select8, metadata !8217, metadata !DIExpression()), !dbg !8292
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8375
  %val.7 = select i1 %min_gt.0.in, %union.tree_node* %86, %union.tree_node* %spec.select8, !dbg !8375
  br label %if.end419, !dbg !8375

if.then407:                                       ; preds = %if.end357
  %tobool408 = icmp eq i32 %min_lt.0, 0, !dbg !8376
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8380
  %spec.select9 = select i1 %tobool408, %union.tree_node* %87, %union.tree_node* null, !dbg !8381
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select9, metadata !8217, metadata !DIExpression()), !dbg !8292
  %tobool411 = icmp eq i32 %max_lt.0, 0, !dbg !8382
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8384
  %val.9 = select i1 %tobool411, %union.tree_node* %spec.select9, %union.tree_node* %88, !dbg !8384
  br label %if.end419, !dbg !8384

if.end419:                                        ; preds = %if.then368, %if.then387, %if.end357, %if.then407, %if.then397, %if.then377, %if.then360
  %val.15 = phi %union.tree_node* [ %val.0, %if.then360 ], [ %val.1, %if.then368 ], [ %val.3, %if.then377 ], [ %val.5, %if.then387 ], [ %val.7, %if.then397 ], [ null, %if.end357 ], [ %val.9, %if.then407 ], !dbg !8385
  call void @llvm.dbg.value(metadata %union.tree_node* %val.15, metadata !8217, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i32 %46, metadata !8197, metadata !DIExpression()), !dbg !8225
  %or.cond10 = or i1 %tobool98, %tobool128, !dbg !8386
  br i1 %or.cond10, label %if.end437, label %if.then423, !dbg !8386

if.then423:                                       ; preds = %if.end419
  %cmp424 = icmp eq %union.tree_node* %val.15, null, !dbg !8388
  br i1 %cmp424, label %if.end435, label %if.then426, !dbg !8391

if.then426:                                       ; preds = %if.then423
  switch i32 %code.1, label %if.end435 [
    i32 97, label %sw.bb427
    i32 100, label %sw.bb427
    i32 98, label %sw.bb430
    i32 99, label %sw.bb430
  ], !dbg !8392

sw.bb427:                                         ; preds = %if.then426, %if.then426
  %89 = load %union.tree_node*, %union.tree_node** %34, align 8, !dbg !8393
  call void @llvm.dbg.value(metadata %union.tree_node* %89, metadata !8202, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8217, metadata !DIExpression()), !dbg !8292
  br label %if.end435, !dbg !8395

sw.bb430:                                         ; preds = %if.then426, %if.then426
  %90 = load %union.tree_node*, %union.tree_node** %32, align 8, !dbg !8396
  call void @llvm.dbg.value(metadata %union.tree_node* %90, metadata !8202, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8217, metadata !DIExpression()), !dbg !8292
  br label %if.end435, !dbg !8397

if.end435:                                        ; preds = %if.then423, %sw.bb427, %sw.bb430, %if.then426
  %primop1.3 = phi %union.tree_node* [ %primop1.1, %if.then423 ], [ %90, %sw.bb430 ], [ %89, %sw.bb427 ], [ %primop1.1, %if.then426 ], !dbg !8398
  %val.17 = phi %union.tree_node* [ null, %if.then423 ], [ null, %sw.bb430 ], [ null, %sw.bb427 ], [ %val.15, %if.then426 ], !dbg !8399
  call void @llvm.dbg.value(metadata %union.tree_node* %val.17, metadata !8217, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata %union.tree_node* %primop1.3, metadata !8202, metadata !DIExpression()), !dbg !8225
  %call436 = call %union.tree_node* @c_common_unsigned_type(%union.tree_node* %call93) #8, !dbg !8400
  call void @llvm.dbg.value(metadata %union.tree_node* %call436, metadata !8194, metadata !DIExpression()), !dbg !8225
  br label %if.end437, !dbg !8401

if.end437:                                        ; preds = %if.end419, %if.end435
  %primop1.4 = phi %union.tree_node* [ %primop1.3, %if.end435 ], [ %primop1.1, %if.end419 ], !dbg !8398
  %type.0 = phi %union.tree_node* [ %call436, %if.end435 ], [ %call93, %if.end419 ], !dbg !8292
  %val.18 = phi %union.tree_node* [ %val.17, %if.end435 ], [ %val.15, %if.end419 ], !dbg !8399
  call void @llvm.dbg.value(metadata %union.tree_node* %val.18, metadata !8217, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !8194, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %primop1.4, metadata !8202, metadata !DIExpression()), !dbg !8225
  %91 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8402
  %bf.load439 = load i64, i64* %91, align 8, !dbg !8402
  %bf.cast44132 = and i64 %bf.load439, 65535, !dbg !8404
  %cmp442 = icmp eq i64 %bf.cast44132, 23, !dbg !8404
  br i1 %cmp442, label %if.end455, label %if.then444, !dbg !8405

if.then444:                                       ; preds = %if.end437
  %92 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8406
  %cmp445 = icmp eq %union.tree_node* %val.18, %92, !dbg !8409
  br i1 %cmp445, label %if.then447, label %if.end449, !dbg !8410

if.then447:                                       ; preds = %if.then444
  %call448 = call zeroext i8 (i32, i8*, ...) @warning(i32 206, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.249, i64 0, i64 0)) #7, !dbg !8411
  br label %if.end449, !dbg !8411

if.end449:                                        ; preds = %if.then447, %if.then444
  %93 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8412
  %cmp450 = icmp eq %union.tree_node* %val.18, %93, !dbg !8414
  br i1 %cmp450, label %if.then452, label %if.end455, !dbg !8415

if.then452:                                       ; preds = %if.end449
  %call453 = call zeroext i8 (i32, i8*, ...) @warning(i32 206, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.250, i64 0, i64 0)) #7, !dbg !8416
  br label %if.end455, !dbg !8416

if.end455:                                        ; preds = %if.end437, %if.end449, %if.then452
  %cmp456 = icmp eq %union.tree_node* %val.18, null, !dbg !8417
  br i1 %cmp456, label %cleanup, label %if.then458, !dbg !8419

if.then458:                                       ; preds = %if.end455
  %bf.load460 = load i64, i64* %91, align 8, !dbg !8420
  %bf.cast46333 = and i64 %bf.load460, 65536, !dbg !8420
  %tobool464 = icmp eq i64 %bf.cast46333, 0, !dbg !8420
  br i1 %tobool464, label %cleanup, label %if.then465, !dbg !8423

if.then465:                                       ; preds = %if.then458
  %type467 = getelementptr inbounds %union.tree_node, %union.tree_node* %val.18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8424
  %94 = load %union.tree_node*, %union.tree_node** %type467, align 8, !dbg !8424
  %call468 = call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %94, %union.tree_node* %primop0.0, %union.tree_node* nonnull %val.18) #7, !dbg !8424
  br label %cleanup, !dbg !8425

cleanup:                                          ; preds = %if.then458, %if.end455, %if.then465
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then465 ], [ false, %if.then458 ], [ true, %if.end455 ]
  %retval.0 = phi %union.tree_node* [ %call468, %if.then465 ], [ %val.18, %if.then458 ], [ undef, %if.end455 ]
  br i1 %cleanup.dest.slot.0, label %if.end707, label %cleanup710

if.else478:                                       ; preds = %land.lhs.true57, %if.end53, %land.lhs.true73, %land.lhs.true66
  %tobool479 = icmp ne i32 %real1.0, 0, !dbg !8426
  %tobool481 = icmp ne i32 %real2.0, 0, !dbg !8427
  %or.cond11 = and i1 %tobool479, %tobool481, !dbg !8428
  br i1 %or.cond11, label %land.lhs.true482, label %if.else537, !dbg !8428

land.lhs.true482:                                 ; preds = %if.else478
  %type484 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8429
  %95 = bitcast %union.tree_node** %type484 to i64**, !dbg !8429
  %96 = load i64*, i64** %95, align 8, !dbg !8429
  %bf.load486 = load i64, i64* %96, align 8, !dbg !8429
  %bf.cast48826 = and i64 %bf.load486, 65535, !dbg !8429
  %cmp489 = icmp eq i64 %bf.cast48826, 14, !dbg !8429
  br i1 %cmp489, label %cond.true, label %cond.false, !dbg !8429

cond.true:                                        ; preds = %land.lhs.true482
  %.cast = bitcast i64* %96 to %union.tree_node*, !dbg !8429
  %call493 = call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !8429
  br label %cond.end, !dbg !8429

cond.false:                                       ; preds = %land.lhs.true482
  %type496 = bitcast i64* %96 to %struct.tree_type*, !dbg !8429
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type496, i64 0, i32 6, !dbg !8429
  %bf.load497 = load i32, i32* %mode, align 4, !dbg !8429
  %bf.lshr498 = lshr i32 %bf.load497, 16, !dbg !8429
  %bf.clear499 = and i32 %bf.lshr498, 255, !dbg !8429
  br label %cond.end, !dbg !8429

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call493, %cond.true ], [ %bf.clear499, %cond.false ], !dbg !8429
  %idxprom = zext i32 %cond to i64, !dbg !8429
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !8429
  %97 = load i8, i8* %arrayidx, align 1, !dbg !8429
  %cmp501 = icmp eq i8 %97, 9, !dbg !8429
  br i1 %cmp501, label %if.then531, label %lor.lhs.false503, !dbg !8430

lor.lhs.false503:                                 ; preds = %cond.end
  %type505 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8431
  %98 = bitcast %union.tree_node** %type505 to i64**, !dbg !8431
  %99 = load i64*, i64** %98, align 8, !dbg !8431
  %bf.load507 = load i64, i64* %99, align 8, !dbg !8431
  %bf.cast50927 = and i64 %bf.load507, 65535, !dbg !8431
  %cmp510 = icmp eq i64 %bf.cast50927, 14, !dbg !8431
  br i1 %cmp510, label %cond.true512, label %cond.false516, !dbg !8431

cond.true512:                                     ; preds = %lor.lhs.false503
  %.cast28 = bitcast i64* %99 to %union.tree_node*, !dbg !8431
  %call515 = call i32 @vector_type_mode(%union.tree_node* %.cast28) #7, !dbg !8431
  br label %cond.end524, !dbg !8431

cond.false516:                                    ; preds = %lor.lhs.false503
  %type519 = bitcast i64* %99 to %struct.tree_type*, !dbg !8431
  %mode520 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type519, i64 0, i32 6, !dbg !8431
  %bf.load521 = load i32, i32* %mode520, align 4, !dbg !8431
  %bf.lshr522 = lshr i32 %bf.load521, 16, !dbg !8431
  %bf.clear523 = and i32 %bf.lshr522, 255, !dbg !8431
  br label %cond.end524, !dbg !8431

cond.end524:                                      ; preds = %cond.false516, %cond.true512
  %cond525 = phi i32 [ %call515, %cond.true512 ], [ %bf.clear523, %cond.false516 ], !dbg !8431
  %idxprom526 = zext i32 %cond525 to i64, !dbg !8431
  %arrayidx527 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom526, !dbg !8431
  %100 = load i8, i8* %arrayidx527, align 1, !dbg !8431
  %cmp529 = icmp eq i8 %100, 9, !dbg !8431
  br i1 %cmp529, label %if.then531, label %if.else537, !dbg !8432

if.then531:                                       ; preds = %cond.end524, %cond.end
  %101 = load %union.tree_node*, %union.tree_node** %type484, align 8, !dbg !8433
  %type535 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8434
  %102 = load %union.tree_node*, %union.tree_node** %type535, align 8, !dbg !8434
  %call536 = call %union.tree_node* @common_type(%union.tree_node* %101, %union.tree_node* %102) #7, !dbg !8435
  call void @llvm.dbg.value(metadata %union.tree_node* %call536, metadata !8194, metadata !DIExpression()), !dbg !8225
  br label %if.end707, !dbg !8436

if.else537:                                       ; preds = %cond.end524, %if.else478
  br i1 %or.cond11, label %land.lhs.true541, label %if.else559, !dbg !8437

land.lhs.true541:                                 ; preds = %if.else537
  %type543 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8438
  %103 = bitcast %union.tree_node** %type543 to %struct.tree_type**, !dbg !8438
  %104 = load %struct.tree_type*, %struct.tree_type** %103, align 8, !dbg !8438
  %precision545 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %104, i64 0, i32 6, !dbg !8438
  %bf.load546 = load i32, i32* %precision545, align 4, !dbg !8438
  %type549 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8439
  %105 = bitcast %union.tree_node** %type549 to %struct.tree_type**, !dbg !8439
  %106 = load %struct.tree_type*, %struct.tree_type** %105, align 8, !dbg !8439
  %precision551 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %106, i64 0, i32 6, !dbg !8439
  %bf.load552 = load i32, i32* %precision551, align 4, !dbg !8439
  %107 = xor i32 %bf.load546, %bf.load552, !dbg !8440
  %108 = and i32 %107, 1023, !dbg !8440
  %cmp554 = icmp eq i32 %108, 0, !dbg !8440
  br i1 %cmp554, label %if.then556, label %if.else559, !dbg !8441

if.then556:                                       ; preds = %land.lhs.true541
  %109 = bitcast %struct.tree_type* %104 to %union.tree_node*, !dbg !8441
  call void @llvm.dbg.value(metadata %union.tree_node* %109, metadata !8194, metadata !DIExpression()), !dbg !8225
  br label %if.end707, !dbg !8442

if.else559:                                       ; preds = %land.lhs.true541, %if.else537
  %110 = load i32, i32* %unsignedp0, align 4, !dbg !8443
  call void @llvm.dbg.value(metadata i32 %110, metadata !8197, metadata !DIExpression()), !dbg !8225
  %111 = load i32, i32* %unsignedp1, align 4, !dbg !8444
  call void @llvm.dbg.value(metadata i32 %111, metadata !8198, metadata !DIExpression()), !dbg !8225
  %cmp560 = icmp eq i32 %110, %111, !dbg !8445
  %cmp563 = icmp eq i32 %real1.0, %real2.0, !dbg !8446
  %or.cond13 = and i1 %cmp560, %cmp563, !dbg !8447
  br i1 %or.cond13, label %land.lhs.true565, label %if.else559.if.else616_crit_edge, !dbg !8447

if.else559.if.else616_crit_edge:                  ; preds = %if.else559
  %.pre39 = load %union.tree_node*, %union.tree_node** %restype_ptr, align 8, !dbg !8448
  br label %if.else616, !dbg !8447

land.lhs.true565:                                 ; preds = %if.else559
  %type567 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8449
  %112 = bitcast %union.tree_node** %type567 to %struct.tree_type**, !dbg !8449
  %113 = load %struct.tree_type*, %struct.tree_type** %112, align 8, !dbg !8449
  %precision569 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %113, i64 0, i32 6, !dbg !8449
  %bf.load570 = load i32, i32* %precision569, align 4, !dbg !8449
  %bf.clear571 = and i32 %bf.load570, 1023, !dbg !8449
  %114 = bitcast %union.tree_node** %restype_ptr to %struct.tree_type**, !dbg !8450
  %115 = load %struct.tree_type*, %struct.tree_type** %114, align 8, !dbg !8450
  %precision573 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %115, i64 0, i32 6, !dbg !8450
  %bf.load574 = load i32, i32* %precision573, align 4, !dbg !8450
  %bf.clear575 = and i32 %bf.load574, 1023, !dbg !8450
  %cmp576 = icmp ult i32 %bf.clear571, %bf.clear575, !dbg !8451
  %116 = bitcast %struct.tree_type* %115 to %union.tree_node*, !dbg !8452
  %117 = bitcast %struct.tree_type* %113 to %union.tree_node*, !dbg !8452
  br i1 %cmp576, label %land.lhs.true578, label %if.else616, !dbg !8452

land.lhs.true578:                                 ; preds = %land.lhs.true565
  %type580 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8453
  %118 = bitcast %union.tree_node** %type580 to %struct.tree_type**, !dbg !8453
  %119 = load %struct.tree_type*, %struct.tree_type** %118, align 8, !dbg !8453
  %precision582 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %119, i64 0, i32 6, !dbg !8453
  %bf.load583 = load i32, i32* %precision582, align 4, !dbg !8453
  %bf.clear584 = and i32 %bf.load583, 1023, !dbg !8453
  %cmp589 = icmp ult i32 %bf.clear584, %bf.clear575, !dbg !8454
  br i1 %cmp589, label %if.then591, label %if.else616, !dbg !8455

if.then591:                                       ; preds = %land.lhs.true578
  %120 = bitcast %struct.tree_type* %119 to %union.tree_node*, !dbg !8455
  %call596 = call %union.tree_node* @common_type(%union.tree_node* %117, %union.tree_node* %120) #7, !dbg !8456
  call void @llvm.dbg.value(metadata %union.tree_node* %call596, metadata !8194, metadata !DIExpression()), !dbg !8225
  %121 = load i32, i32* %unsignedp0, align 4, !dbg !8458
  call void @llvm.dbg.value(metadata i32 %121, metadata !8197, metadata !DIExpression()), !dbg !8225
  %tobool597 = icmp eq i32 %121, 0, !dbg !8458
  br i1 %tobool597, label %lor.rhs598, label %lor.end605, !dbg !8459

lor.rhs598:                                       ; preds = %if.then591
  %122 = bitcast %union.tree_node** %restype_ptr to i64**, !dbg !8460
  %123 = load i64*, i64** %122, align 8, !dbg !8460
  %bf.load600 = load i64, i64* %123, align 8, !dbg !8460
  %bf.cast60325 = lshr i64 %bf.load600, 21, !dbg !8459
  %124 = trunc i64 %bf.cast60325 to i32, !dbg !8459
  %125 = and i32 %124, 1, !dbg !8459
  br label %lor.end605, !dbg !8459

lor.end605:                                       ; preds = %if.then591, %lor.rhs598
  %126 = phi i32 [ 1, %if.then591 ], [ %125, %lor.rhs598 ]
  %call607 = call %union.tree_node* @c_common_signed_or_unsigned_type(i32 %126, %union.tree_node* %call596) #8, !dbg !8461
  call void @llvm.dbg.value(metadata %union.tree_node* %call607, metadata !8194, metadata !DIExpression()), !dbg !8225
  %127 = load i32, i32* %unsignedp0, align 4, !dbg !8462
  call void @llvm.dbg.value(metadata i32 %127, metadata !8197, metadata !DIExpression()), !dbg !8225
  %128 = load %union.tree_node*, %union.tree_node** %type567, align 8, !dbg !8463
  %call610 = call %union.tree_node* @c_common_signed_or_unsigned_type(i32 %127, %union.tree_node* %128) #8, !dbg !8464
  %call611 = call %union.tree_node* @convert(%union.tree_node* %call610, %union.tree_node* %primop0.0) #7, !dbg !8465
  call void @llvm.dbg.value(metadata %union.tree_node* %call611, metadata !8201, metadata !DIExpression()), !dbg !8225
  %129 = load i32, i32* %unsignedp1, align 4, !dbg !8466
  call void @llvm.dbg.value(metadata i32 %129, metadata !8198, metadata !DIExpression()), !dbg !8225
  %130 = load %union.tree_node*, %union.tree_node** %type580, align 8, !dbg !8467
  %call614 = call %union.tree_node* @c_common_signed_or_unsigned_type(i32 %129, %union.tree_node* %130) #8, !dbg !8468
  %call615 = call %union.tree_node* @convert(%union.tree_node* %call614, %union.tree_node* %primop1.0) #7, !dbg !8469
  call void @llvm.dbg.value(metadata %union.tree_node* %call615, metadata !8202, metadata !DIExpression()), !dbg !8225
  br label %if.end707, !dbg !8470

if.else616:                                       ; preds = %if.else559.if.else616_crit_edge, %land.lhs.true578, %land.lhs.true565
  %131 = phi %union.tree_node* [ %.pre39, %if.else559.if.else616_crit_edge ], [ %116, %land.lhs.true578 ], [ %116, %land.lhs.true565 ], !dbg !8448
  call void @llvm.dbg.value(metadata %union.tree_node* %131, metadata !8194, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !8201, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !8202, metadata !DIExpression()), !dbg !8225
  br i1 %21, label %land.lhs.true620, label %if.end707, !dbg !8471

land.lhs.true620:                                 ; preds = %if.else616
  %call621 = call i32 @integer_zerop(%union.tree_node* %op1.0) #7, !dbg !8472
  %tobool622 = icmp eq i32 %call621, 0, !dbg !8472
  br i1 %tobool622, label %if.end707, label %land.lhs.true623, !dbg !8473

land.lhs.true623:                                 ; preds = %land.lhs.true620
  %132 = bitcast %union.tree_node** %restype_ptr to i64**, !dbg !8474
  %133 = load i64*, i64** %132, align 8, !dbg !8474
  %bf.load625 = load i64, i64* %133, align 8, !dbg !8474
  %bf.cast62819 = and i64 %bf.load625, 2097152, !dbg !8474
  %tobool629 = icmp eq i64 %bf.cast62819, 0, !dbg !8474
  br i1 %tobool629, label %if.end707, label %if.then630, !dbg !8475

if.then630:                                       ; preds = %land.lhs.true623
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8218, metadata !DIExpression()), !dbg !8476
  switch i32 %code.1, label %sw.epilog684 [
    i32 100, label %sw.bb631
    i32 97, label %sw.bb656
  ], !dbg !8477

sw.bb631:                                         ; preds = %if.then630
  %134 = load i32, i32* @warn_type_limits, align 4, !dbg !8478
  %tobool632 = icmp eq i32 %134, 0, !dbg !8478
  br i1 %tobool632, label %if.end655, label %land.lhs.true633, !dbg !8481

land.lhs.true633:                                 ; preds = %sw.bb631
  %135 = load i32, i32* @input_location, align 4, !dbg !8482
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %135) #7, !dbg !8482
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !8482
  %136 = load i8, i8* %sysp, align 8, !dbg !8482
  %cmp635 = icmp eq i8 %136, 0, !dbg !8482
  br i1 %cmp635, label %land.lhs.true637, label %if.end655, !dbg !8483

land.lhs.true637:                                 ; preds = %land.lhs.true633
  %137 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8484
  %bf.load639 = load i64, i64* %137, align 8, !dbg !8484
  %bf.cast64123 = and i64 %bf.load639, 65535, !dbg !8485
  %cmp642 = icmp eq i64 %bf.cast64123, 23, !dbg !8485
  br i1 %cmp642, label %land.lhs.true644, label %if.then653, !dbg !8486

land.lhs.true644:                                 ; preds = %land.lhs.true637
  %call645 = call %union.tree_node* @c_common_signed_type(%union.tree_node* %131) #8, !dbg !8487
  %call646 = call %union.tree_node* @convert(%union.tree_node* %call645, %union.tree_node* %op0.0) #7, !dbg !8487
  %138 = getelementptr inbounds %union.tree_node, %union.tree_node* %call646, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8487
  %bf.load648 = load i64, i64* %138, align 8, !dbg !8487
  %bf.cast65124 = and i64 %bf.load648, 134217728, !dbg !8487
  %tobool652 = icmp eq i64 %bf.cast65124, 0, !dbg !8487
  br i1 %tobool652, label %if.end655, label %if.then653, !dbg !8488

if.then653:                                       ; preds = %land.lhs.true644, %land.lhs.true637
  %call654 = call zeroext i8 (i32, i8*, ...) @warning(i32 206, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.251, i64 0, i64 0)) #7, !dbg !8489
  br label %if.end655, !dbg !8489

if.end655:                                        ; preds = %land.lhs.true644, %land.lhs.true633, %sw.bb631, %if.then653
  %139 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8490
  call void @llvm.dbg.value(metadata %union.tree_node* %139, metadata !8218, metadata !DIExpression()), !dbg !8476
  br label %sw.epilog684, !dbg !8491

sw.bb656:                                         ; preds = %if.then630
  %140 = load i32, i32* @warn_type_limits, align 4, !dbg !8492
  %tobool657 = icmp eq i32 %140, 0, !dbg !8492
  br i1 %tobool657, label %if.end682, label %land.lhs.true658, !dbg !8494

land.lhs.true658:                                 ; preds = %sw.bb656
  %141 = load i32, i32* @input_location, align 4, !dbg !8495
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp659, i32 %141) #7, !dbg !8495
  %sysp660 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp659, i64 0, i32 3, !dbg !8495
  %142 = load i8, i8* %sysp660, align 8, !dbg !8495
  %cmp662 = icmp eq i8 %142, 0, !dbg !8495
  br i1 %cmp662, label %land.lhs.true664, label %if.end682, !dbg !8496

land.lhs.true664:                                 ; preds = %land.lhs.true658
  %143 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8497
  %bf.load666 = load i64, i64* %143, align 8, !dbg !8497
  %bf.cast66821 = and i64 %bf.load666, 65535, !dbg !8498
  %cmp669 = icmp eq i64 %bf.cast66821, 23, !dbg !8498
  br i1 %cmp669, label %land.lhs.true671, label %if.then680, !dbg !8499

land.lhs.true671:                                 ; preds = %land.lhs.true664
  %call672 = call %union.tree_node* @c_common_signed_type(%union.tree_node* %131) #8, !dbg !8500
  %call673 = call %union.tree_node* @convert(%union.tree_node* %call672, %union.tree_node* %op0.0) #7, !dbg !8500
  %144 = getelementptr inbounds %union.tree_node, %union.tree_node* %call673, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8500
  %bf.load675 = load i64, i64* %144, align 8, !dbg !8500
  %bf.cast67822 = and i64 %bf.load675, 134217728, !dbg !8500
  %tobool679 = icmp eq i64 %bf.cast67822, 0, !dbg !8500
  br i1 %tobool679, label %if.end682, label %if.then680, !dbg !8501

if.then680:                                       ; preds = %land.lhs.true671, %land.lhs.true664
  %call681 = call zeroext i8 (i32, i8*, ...) @warning(i32 206, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.252, i64 0, i64 0)) #7, !dbg !8502
  br label %if.end682, !dbg !8502

if.end682:                                        ; preds = %land.lhs.true671, %land.lhs.true658, %sw.bb656, %if.then680
  %145 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8503
  call void @llvm.dbg.value(metadata %union.tree_node* %145, metadata !8218, metadata !DIExpression()), !dbg !8476
  br label %sw.epilog684, !dbg !8504

sw.epilog684:                                     ; preds = %if.then630, %if.end682, %if.end655
  %value.0 = phi %union.tree_node* [ %145, %if.end682 ], [ %139, %if.end655 ], [ null, %if.then630 ], !dbg !8476
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !8218, metadata !DIExpression()), !dbg !8476
  %cmp685 = icmp eq %union.tree_node* %value.0, null, !dbg !8505
  br i1 %cmp685, label %cleanup700, label %if.then687, !dbg !8507

if.then687:                                       ; preds = %sw.epilog684
  %146 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8508
  %bf.load689 = load i64, i64* %146, align 8, !dbg !8508
  %bf.cast69220 = and i64 %bf.load689, 65536, !dbg !8508
  %tobool693 = icmp eq i64 %bf.cast69220, 0, !dbg !8508
  br i1 %tobool693, label %cleanup700, label %if.then694, !dbg !8511

if.then694:                                       ; preds = %if.then687
  %type696 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8512
  %147 = load %union.tree_node*, %union.tree_node** %type696, align 8, !dbg !8512
  %call697 = call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %147, %union.tree_node* %op0.0, %union.tree_node* nonnull %value.0) #7, !dbg !8512
  br label %cleanup700, !dbg !8513

cleanup700:                                       ; preds = %if.then687, %sw.epilog684, %if.then694
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then694 ], [ false, %if.then687 ], [ true, %sw.epilog684 ]
  %retval.1 = phi %union.tree_node* [ %call697, %if.then694 ], [ %value.0, %if.then687 ], [ undef, %sw.epilog684 ]
  br i1 %cleanup.dest.slot.1, label %if.end707, label %cleanup710

if.end707:                                        ; preds = %land.lhs.true623, %land.lhs.true620, %if.else616, %if.then531, %lor.end605, %cleanup700, %if.then556, %cleanup
  %primop1.8 = phi %union.tree_node* [ %primop1.4, %cleanup ], [ %primop1.0, %if.then531 ], [ %primop1.0, %if.then556 ], [ %call615, %lor.end605 ], [ %op1.0, %cleanup700 ], [ %op1.0, %land.lhs.true623 ], [ %op1.0, %land.lhs.true620 ], [ %op1.0, %if.else616 ], !dbg !8225
  %primop0.4 = phi %union.tree_node* [ %primop0.0, %cleanup ], [ %primop0.0, %if.then531 ], [ %primop0.0, %if.then556 ], [ %call611, %lor.end605 ], [ %op0.0, %cleanup700 ], [ %op0.0, %land.lhs.true623 ], [ %op0.0, %land.lhs.true620 ], [ %op0.0, %if.else616 ], !dbg !8514
  %type.4 = phi %union.tree_node* [ %type.0, %cleanup ], [ %call536, %if.then531 ], [ %109, %if.then556 ], [ %call607, %lor.end605 ], [ %131, %cleanup700 ], [ %131, %land.lhs.true623 ], [ %131, %land.lhs.true620 ], [ %131, %if.else616 ], !dbg !8515
  call void @llvm.dbg.value(metadata %union.tree_node* %type.4, metadata !8194, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %primop0.4, metadata !8201, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %primop1.8, metadata !8202, metadata !DIExpression()), !dbg !8225
  %call708 = call %union.tree_node* @convert(%union.tree_node* %type.4, %union.tree_node* %primop0.4) #7, !dbg !8516
  store %union.tree_node* %call708, %union.tree_node** %op0_ptr, align 8, !dbg !8517
  %call709 = call %union.tree_node* @convert(%union.tree_node* %type.4, %union.tree_node* %primop1.8) #7, !dbg !8518
  store %union.tree_node* %call709, %union.tree_node** %op1_ptr, align 8, !dbg !8519
  %148 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 45) to i64*), align 8, !dbg !8520
  %149 = bitcast %union.tree_node** %restype_ptr to i64*, !dbg !8521
  store i64 %148, i64* %149, align 8, !dbg !8521
  br label %cleanup710, !dbg !8522

cleanup710:                                       ; preds = %cleanup700, %cleanup, %if.end707
  %retval.2 = phi %union.tree_node* [ null, %if.end707 ], [ %retval.1, %cleanup700 ], [ %retval.0, %cleanup ], !dbg !8225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #6, !dbg !8523
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #6, !dbg !8523
  ret %union.tree_node* %retval.2, !dbg !8523
}

declare dso_local i32 @real_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @fixed_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_fit_type_double(%union.tree_node*, i64, i64, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @pointer_int_sum(i32 %loc, i32 %resultcode, %union.tree_node* %ptrop, %union.tree_node* %intop) local_unnamed_addr #5 !dbg !8524 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8528, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata i32 %resultcode, metadata !8529, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* %ptrop, metadata !8530, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* %intop, metadata !8531, metadata !DIExpression()), !dbg !8539
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ptrop, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8540
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8540
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8534, metadata !DIExpression()), !dbg !8539
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8541
  %1 = bitcast %union.tree_node** %type2 to i64**, !dbg !8541
  %2 = load i64*, i64** %1, align 8, !dbg !8541
  %bf.load = load i64, i64* %2, align 8, !dbg !8541
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8543
  %cmp = icmp eq i64 %bf.cast1, 19, !dbg !8543
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !8544
  br i1 %cmp, label %if.then, label %if.else, !dbg !8544

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @pedantic, align 4, !dbg !8545
  %tobool = icmp eq i32 %4, 0, !dbg !8545
  %cond = select i1 %tobool, i32 162, i32 834, !dbg !8545
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 %cond, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.253, i64 0, i64 0)) #7, !dbg !8547
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8548
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !8532, metadata !DIExpression()), !dbg !8539
  br label %if.end31, !dbg !8549

if.else:                                          ; preds = %entry
  %cmp9 = icmp eq i64 %bf.cast1, 20, !dbg !8550
  br i1 %cmp9, label %if.then10, label %if.else14, !dbg !8552

if.then10:                                        ; preds = %if.else
  %6 = load i32, i32* @pedantic, align 4, !dbg !8553
  %tobool11 = icmp eq i32 %6, 0, !dbg !8553
  %cond12 = select i1 %tobool11, i32 162, i32 834, !dbg !8553
  %call13 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 %cond12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.254, i64 0, i64 0)) #7, !dbg !8555
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8556
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8532, metadata !DIExpression()), !dbg !8539
  br label %if.end31, !dbg !8557

if.else14:                                        ; preds = %if.else
  %cmp21 = icmp eq i64 %bf.cast1, 21, !dbg !8558
  br i1 %cmp21, label %if.then22, label %if.else26, !dbg !8560

if.then22:                                        ; preds = %if.else14
  %8 = load i32, i32* @pedantic, align 4, !dbg !8561
  %tobool23 = icmp eq i32 %8, 0, !dbg !8561
  %cond24 = select i1 %tobool23, i32 162, i32 834, !dbg !8561
  %call25 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 %cond24, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.255, i64 0, i64 0)) #7, !dbg !8563
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8564
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !8532, metadata !DIExpression()), !dbg !8539
  br label %if.end31, !dbg !8565

if.else26:                                        ; preds = %if.else14
  %call29 = tail call %union.tree_node* @size_in_bytes(%union.tree_node* %3) #7, !dbg !8566
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !8532, metadata !DIExpression()), !dbg !8539
  br label %if.end31

if.end31:                                         ; preds = %if.then10, %if.else26, %if.then22, %if.then
  %size_exp.2 = phi %union.tree_node* [ %5, %if.then ], [ %7, %if.then10 ], [ %9, %if.then22 ], [ %call29, %if.else26 ], !dbg !8567
  call void @llvm.dbg.value(metadata %union.tree_node* %size_exp.2, metadata !8532, metadata !DIExpression()), !dbg !8539
  tail call void @fold_defer_overflow_warnings() #7, !dbg !8568
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %intop, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8569
  %bf.load33 = load i64, i64* %10, align 8, !dbg !8569
  %bf.cast354 = and i64 %bf.load33, 65535, !dbg !8570
  %cmp36 = icmp eq i64 %bf.cast354, 63, !dbg !8570
  br i1 %cmp36, label %land.lhs.true, label %lor.lhs.false, !dbg !8571

lor.lhs.false:                                    ; preds = %if.end31
  %cmp41 = icmp eq i64 %bf.cast354, 64, !dbg !8572
  br i1 %cmp41, label %land.lhs.true, label %if.end140, !dbg !8573

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end31
  %bf.cast456 = and i64 %bf.load33, 131072, !dbg !8574
  %tobool46 = icmp eq i64 %bf.cast456, 0, !dbg !8574
  br i1 %tobool46, label %land.lhs.true47, label %if.end140, !dbg !8575

land.lhs.true47:                                  ; preds = %land.lhs.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %intop, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8576
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !8576
  %11 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !8576
  %12 = load i64*, i64** %11, align 8, !dbg !8576
  %bf.load49 = load i64, i64* %12, align 8, !dbg !8576
  %bf.cast527 = and i64 %bf.load49, 131072, !dbg !8576
  %tobool53 = icmp eq i64 %bf.cast527, 0, !dbg !8576
  %13 = bitcast i64* %12 to %union.tree_node*, !dbg !8577
  br i1 %tobool53, label %if.end140, label %land.lhs.true54, !dbg !8577

land.lhs.true54:                                  ; preds = %land.lhs.true47
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %size_exp.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8578
  %bf.load56 = load i64, i64* %14, align 8, !dbg !8578
  %bf.cast598 = and i64 %bf.load56, 131072, !dbg !8578
  %tobool60 = icmp eq i64 %bf.cast598, 0, !dbg !8578
  br i1 %tobool60, label %if.end140, label %land.lhs.true61, !dbg !8579

land.lhs.true61:                                  ; preds = %land.lhs.true54
  %15 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !8580
  %16 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !8580
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !8580
  %17 = bitcast %union.tree_node** %type66 to i64**, !dbg !8580
  %18 = load i64*, i64** %17, align 8, !dbg !8580
  %bf.load68 = load i64, i64* %18, align 8, !dbg !8580
  %bf.cast709 = and i64 %bf.load68, 65535, !dbg !8581
  %cmp71 = icmp eq i64 %bf.cast709, 8, !dbg !8581
  br i1 %cmp71, label %land.lhs.true72, label %if.end140, !dbg !8582

land.lhs.true72:                                  ; preds = %land.lhs.true61
  %type74 = getelementptr inbounds %union.tree_node, %union.tree_node* %intop, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8583
  %19 = bitcast %union.tree_node** %type74 to i64**, !dbg !8583
  %20 = load i64*, i64** %19, align 8, !dbg !8583
  %bf.load76 = load i64, i64* %20, align 8, !dbg !8583
  %bf.cast7910 = and i64 %bf.load76, 2097152, !dbg !8583
  %tobool80 = icmp eq i64 %bf.cast7910, 0, !dbg !8583
  %21 = bitcast i64* %20 to %union.tree_node*, !dbg !8584
  br i1 %tobool80, label %if.then94, label %lor.lhs.false81, !dbg !8584

lor.lhs.false81:                                  ; preds = %land.lhs.true72
  %22 = bitcast i64* %20 to %struct.tree_type*, !dbg !8584
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 6, !dbg !8585
  %bf.load85 = load i32, i32* %precision, align 4, !dbg !8585
  %23 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !8586
  %24 = load %struct.tree_type*, %struct.tree_type** %23, align 8, !dbg !8586
  %precision90 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 6, !dbg !8586
  %bf.load91 = load i32, i32* %precision90, align 4, !dbg !8586
  %25 = xor i32 %bf.load85, %bf.load91, !dbg !8587
  %26 = and i32 %25, 1023, !dbg !8587
  %cmp93 = icmp eq i32 %26, 0, !dbg !8587
  br i1 %cmp93, label %if.then94, label %if.end140, !dbg !8588

if.then94:                                        ; preds = %land.lhs.true72, %lor.lhs.false81
  call void @llvm.dbg.value(metadata i32 %resultcode, metadata !8535, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !8538, metadata !DIExpression()), !dbg !8589
  %cmp101 = icmp eq i64 %bf.cast354, 64, !dbg !8590
  br i1 %cmp101, label %if.then102, label %if.end105, !dbg !8592

if.then102:                                       ; preds = %if.then94
  %cmp103 = icmp eq i32 %resultcode, 63, !dbg !8593
  %cond104 = select i1 %cmp103, i32 64, i32 63, !dbg !8594
  call void @llvm.dbg.value(metadata i32 %cond104, metadata !8535, metadata !DIExpression()), !dbg !8589
  br label %if.end105, !dbg !8595

if.end105:                                        ; preds = %if.then102, %if.then94
  %subcode.0 = phi i32 [ %cond104, %if.then102 ], [ %resultcode, %if.then94 ], !dbg !8589
  call void @llvm.dbg.value(metadata i32 %subcode.0, metadata !8535, metadata !DIExpression()), !dbg !8589
  %bf.cast112 = and i64 %bf.load49, 65535, !dbg !8596
  %arrayidx113 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast112, !dbg !8596
  %27 = load i32, i32* %arrayidx113, align 4, !dbg !8596
  %cmp114 = icmp ugt i32 %27, 3, !dbg !8596
  br i1 %cmp114, label %land.lhs.true115, label %cond.end, !dbg !8596

land.lhs.true115:                                 ; preds = %if.end105
  %cmp125 = icmp ult i32 %27, 11, !dbg !8596
  br i1 %cmp125, label %cond.true, label %cond.end, !dbg !8596

cond.true:                                        ; preds = %land.lhs.true115
  %locus = getelementptr inbounds i64, i64* %12, i64 3, !dbg !8596
  %28 = bitcast i64* %locus to i32*, !dbg !8596
  %29 = load i32, i32* %28, align 8, !dbg !8596
  br label %cond.end, !dbg !8596

cond.end:                                         ; preds = %if.end105, %land.lhs.true115, %cond.true
  %cond130 = phi i32 [ %29, %cond.true ], [ 0, %land.lhs.true115 ], [ 0, %if.end105 ], !dbg !8596
  %call134 = tail call %union.tree_node* @convert(%union.tree_node* %21, %union.tree_node* %13) #7, !dbg !8597
  %call135 = tail call %union.tree_node* @build_binary_op(i32 %cond130, i32 %subcode.0, %union.tree_node* %ptrop, %union.tree_node* %call134, i32 1) #7, !dbg !8598
  call void @llvm.dbg.value(metadata %union.tree_node* %call135, metadata !8530, metadata !DIExpression()), !dbg !8539
  %30 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8599
  %call139 = tail call %union.tree_node* @convert(%union.tree_node* %21, %union.tree_node* %30) #7, !dbg !8600
  call void @llvm.dbg.value(metadata %union.tree_node* %call139, metadata !8531, metadata !DIExpression()), !dbg !8539
  br label %if.end140, !dbg !8601

if.end140:                                        ; preds = %land.lhs.true54, %land.lhs.true47, %land.lhs.true, %cond.end, %lor.lhs.false81, %land.lhs.true61, %lor.lhs.false
  %intop.addr.0 = phi %union.tree_node* [ %intop, %land.lhs.true ], [ %call139, %cond.end ], [ %intop, %lor.lhs.false81 ], [ %intop, %land.lhs.true61 ], [ %intop, %land.lhs.true54 ], [ %intop, %land.lhs.true47 ], [ %intop, %lor.lhs.false ]
  %ptrop.addr.0 = phi %union.tree_node* [ %ptrop, %land.lhs.true ], [ %call135, %cond.end ], [ %ptrop, %lor.lhs.false81 ], [ %ptrop, %land.lhs.true61 ], [ %ptrop, %land.lhs.true54 ], [ %ptrop, %land.lhs.true47 ], [ %ptrop, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ptrop.addr.0, metadata !8530, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* %intop.addr.0, metadata !8531, metadata !DIExpression()), !dbg !8539
  %type142 = getelementptr inbounds %union.tree_node, %union.tree_node* %intop.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8602
  %31 = bitcast %union.tree_node** %type142 to %struct.tree_type**, !dbg !8602
  %32 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !8602
  %precision144 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 6, !dbg !8602
  %bf.load145 = load i32, i32* %precision144, align 4, !dbg !8602
  %33 = load %struct.tree_type*, %struct.tree_type** bitcast ([4 x %union.tree_node*]* @sizetype_tab to %struct.tree_type**), align 16, !dbg !8604
  %precision148 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %33, i64 0, i32 6, !dbg !8604
  %bf.load149 = load i32, i32* %precision148, align 4, !dbg !8604
  %34 = xor i32 %bf.load145, %bf.load149, !dbg !8605
  %35 = and i32 %34, 1023, !dbg !8605
  %cmp151 = icmp eq i32 %35, 0, !dbg !8605
  br i1 %cmp151, label %lor.lhs.false152, label %if.end140.if.then166_crit_edge, !dbg !8606

if.end140.if.then166_crit_edge:                   ; preds = %if.end140
  %.cast.phi.trans.insert = getelementptr inbounds %struct.tree_type, %struct.tree_type* %33, i64 0, i32 0, i32 0, i32 0, !dbg !8607
  %bf.load172.pre = load i64, i64* %.cast.phi.trans.insert, align 8, !dbg !8608
  br label %if.then166, !dbg !8606

lor.lhs.false152:                                 ; preds = %if.end140
  %36 = bitcast %struct.tree_type* %32 to %union.tree_node*, !dbg !8606
  %37 = bitcast %struct.tree_type* %33 to %union.tree_node*, !dbg !8606
  %38 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %33, i64 0, i32 0, i32 0, i32 0, !dbg !8606
  %39 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 0, i32 0, i32 0, !dbg !8606
  %bf.load156 = load i64, i64* %39, align 8, !dbg !8609
  %bf.load161 = load i64, i64* %38, align 8, !dbg !8610
  %bf.lshr15712 = xor i64 %bf.load156, %bf.load161, !dbg !8611
  %40 = and i64 %bf.lshr15712, 2097152, !dbg !8611
  %cmp165 = icmp eq i64 %40, 0, !dbg !8611
  br i1 %cmp165, label %if.end178, label %if.then166, !dbg !8612

if.then166:                                       ; preds = %if.end140.if.then166_crit_edge, %lor.lhs.false152
  %bf.load172 = phi i64 [ %bf.load172.pre, %if.end140.if.then166_crit_edge ], [ %bf.load161, %lor.lhs.false152 ], !dbg !8608
  %bf.clear170 = and i32 %bf.load149, 1023, !dbg !8613
  %bf.lshr173 = lshr i64 %bf.load172, 21, !dbg !8608
  %41 = trunc i64 %bf.lshr173 to i32, !dbg !8608
  %bf.cast175 = and i32 %41, 1, !dbg !8608
  %call176 = tail call %union.tree_node* @c_common_type_for_size(i32 %bf.clear170, i32 %bf.cast175) #8, !dbg !8614
  %call177 = tail call %union.tree_node* @convert(%union.tree_node* %call176, %union.tree_node* %intop.addr.0) #7, !dbg !8615
  call void @llvm.dbg.value(metadata %union.tree_node* %call177, metadata !8531, metadata !DIExpression()), !dbg !8539
  %.pre = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !8616
  %type180.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8539
  %.pre14 = load %union.tree_node*, %union.tree_node** %type180.phi.trans.insert, align 8, !dbg !8617
  br label %if.end178, !dbg !8618

if.end178:                                        ; preds = %lor.lhs.false152, %if.then166
  %42 = phi %union.tree_node* [ %.pre14, %if.then166 ], [ %36, %lor.lhs.false152 ], !dbg !8617
  %43 = phi %union.tree_node* [ %.pre, %if.then166 ], [ %37, %lor.lhs.false152 ], !dbg !8616
  %intop.addr.1 = phi %union.tree_node* [ %call177, %if.then166 ], [ %intop.addr.0, %lor.lhs.false152 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %intop.addr.1, metadata !8531, metadata !DIExpression()), !dbg !8539
  %call181 = tail call %union.tree_node* @convert(%union.tree_node* %42, %union.tree_node* %size_exp.2) #7, !dbg !8619
  %call182 = tail call %union.tree_node* @build_binary_op(i32 %loc, i32 65, %union.tree_node* %intop.addr.1, %union.tree_node* %call181, i32 1) #7, !dbg !8620
  %call183 = tail call %union.tree_node* @convert(%union.tree_node* %43, %union.tree_node* %call182) #7, !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %call183, metadata !8531, metadata !DIExpression()), !dbg !8539
  %cmp184 = icmp eq i32 %resultcode, 64, !dbg !8622
  br i1 %cmp184, label %if.then185, label %if.end187, !dbg !8624

if.then185:                                       ; preds = %if.end178
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !8625
  %call186 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 79, %union.tree_node* %44, %union.tree_node* %call183) #7, !dbg !8625
  call void @llvm.dbg.value(metadata %union.tree_node* %call186, metadata !8531, metadata !DIExpression()), !dbg !8539
  br label %if.end187, !dbg !8626

if.end187:                                        ; preds = %if.then185, %if.end178
  %intop.addr.2 = phi %union.tree_node* [ %call186, %if.then185 ], [ %call183, %if.end178 ], !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* %intop.addr.2, metadata !8531, metadata !DIExpression()), !dbg !8539
  %call188 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %0, %union.tree_node* %ptrop.addr.0, %union.tree_node* %intop.addr.2) #7, !dbg !8627
  call void @llvm.dbg.value(metadata %union.tree_node* %call188, metadata !8533, metadata !DIExpression()), !dbg !8539
  tail call void @fold_undefer_and_ignore_overflow_warnings() #7, !dbg !8628
  ret %union.tree_node* %call188, !dbg !8629
}

declare dso_local %union.tree_node* @size_in_bytes(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fold_defer_overflow_warnings() local_unnamed_addr #2

declare dso_local %union.tree_node* @build_binary_op(i32, i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @fold_undefer_and_ignore_overflow_warnings() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_wrap_maybe_const(%union.tree_node* %expr, i8 zeroext %non_const) local_unnamed_addr #5 !dbg !8630 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i8 %non_const, metadata !8635, metadata !DIExpression()), !dbg !8638
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8639
  %bf.load = load i64, i64* %0, align 8, !dbg !8639
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !8640
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast4, !dbg !8640
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8640
  %cmp = icmp ugt i32 %1, 3, !dbg !8640
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !8640

land.lhs.true:                                    ; preds = %entry
  %cmp12 = icmp ult i32 %1, 11, !dbg !8640
  br i1 %cmp12, label %cond.true, label %cond.end, !dbg !8640

cond.true:                                        ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8640
  %3 = load i32, i32* %2, align 8, !dbg !8640
  br label %cond.end, !dbg !8640

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !8640
  call void @llvm.dbg.value(metadata i32 %cond, metadata !8637, metadata !DIExpression()), !dbg !8638
  %4 = load i32, i32* @c_language, align 4, !dbg !8641
  %and = and i32 %4, 2, !dbg !8641
  %cmp14 = icmp eq i32 %and, 0, !dbg !8641
  br i1 %cmp14, label %if.end, label %if.then, !dbg !8643

if.then:                                          ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 3842, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !8644
  br label %if.end, !dbg !8644

if.end:                                           ; preds = %cond.end, %if.then
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8638
  br label %while.cond, !dbg !8645

while.cond:                                       ; preds = %while.body, %if.end
  %expr.addr.0 = phi %union.tree_node* [ %expr, %if.end ], [ %9, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !8634, metadata !DIExpression()), !dbg !8638
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8645
  %bf.load17 = load i64, i64* %6, align 8, !dbg !8645
  %bf.cast192 = and i64 %bf.load17, 65535, !dbg !8645
  %cmp20 = icmp eq i64 %bf.cast192, 116, !dbg !8645
  br i1 %cmp20, label %land.lhs.true35, label %lor.lhs.false, !dbg !8645

lor.lhs.false:                                    ; preds = %while.cond
  %7 = or i64 %bf.cast192, 4, !dbg !8645
  %8 = icmp eq i64 %7, 117, !dbg !8645
  br i1 %8, label %land.lhs.true35, label %while.end, !dbg !8645

land.lhs.true35:                                  ; preds = %lor.lhs.false, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8645
  %9 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8645
  %cmp38 = icmp eq %union.tree_node* %9, %5, !dbg !8645
  br i1 %cmp38, label %while.end, label %land.rhs, !dbg !8645

land.rhs:                                         ; preds = %land.lhs.true35
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8645
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8645
  %type44 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8645
  %11 = load %union.tree_node*, %union.tree_node** %type44, align 8, !dbg !8645
  %cmp45 = icmp eq %union.tree_node* %10, %11, !dbg !8645
  br i1 %cmp45, label %while.body, label %while.end, !dbg !8645

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !8634, metadata !DIExpression()), !dbg !8638
  br label %while.cond, !dbg !8645, !llvm.loop !8646

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true35, %land.rhs
  %expr.addr.0.lcssa = phi %union.tree_node* [ %expr.addr.0, %lor.lhs.false ], [ %expr.addr.0, %land.lhs.true35 ], [ %expr.addr.0, %land.rhs ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !8634, metadata !DIExpression()), !dbg !8638
  %type51 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8647
  %12 = load %union.tree_node*, %union.tree_node** %type51, align 8, !dbg !8647
  %call = tail call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %12, %union.tree_node* null, %union.tree_node* %expr.addr.0.lcssa) #7, !dbg !8647
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8634, metadata !DIExpression()), !dbg !8638
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8648
  %bf.load54 = load i64, i64* %13, align 8, !dbg !8649
  %14 = and i8 %non_const, 1, !dbg !8649
  %bf.value = zext i8 %14 to i64, !dbg !8649
  %bf.shl = shl nuw nsw i64 %bf.value, 34, !dbg !8649
  %bf.clear55 = and i64 %bf.load54, -17179869185, !dbg !8649
  %bf.set = or i64 %bf.clear55, %bf.shl, !dbg !8649
  %bf.cast5 = and i64 %bf.load, 8388608, !dbg !8650
  %tobool = icmp eq i64 %bf.cast5, 0, !dbg !8650
  br i1 %tobool, label %if.end61, label %if.then56, !dbg !8652

if.then56:                                        ; preds = %while.end
  %bf.set60 = or i64 %bf.set, 8388608, !dbg !8653
  br label %if.end61, !dbg !8654

if.end61:                                         ; preds = %while.end, %if.then56
  %storemerge = phi i64 [ %bf.set60, %if.then56 ], [ %bf.set, %while.end ], !dbg !8638
  store i64 %storemerge, i64* %13, align 8, !dbg !8638
  tail call void @protected_set_expr_location(%union.tree_node* %call, i32 %cond) #7, !dbg !8655
  ret %union.tree_node* %call, !dbg !8656
}

declare dso_local void @protected_set_expr_location(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_save_expr(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !8657 {
entry:
  %maybe_const = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !8659, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !8660, metadata !DIExpression(DW_OP_deref)), !dbg !8661
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %maybe_const) #6, !dbg !8662
  call void @llvm.dbg.value(metadata i8 1, metadata !8660, metadata !DIExpression()), !dbg !8661
  store i8 1, i8* %maybe_const, align 1, !dbg !8663
  %0 = load i32, i32* @c_language, align 4, !dbg !8664
  %and = and i32 %0, 2, !dbg !8664
  %cmp = icmp eq i32 %and, 0, !dbg !8664
  br i1 %cmp, label %if.end, label %if.then, !dbg !8666

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @save_expr(%union.tree_node* %expr) #7, !dbg !8667
  br label %cleanup, !dbg !8668

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !8660, metadata !DIExpression(DW_OP_deref)), !dbg !8661
  %call1 = call %union.tree_node* @c_fully_fold(%union.tree_node* %expr, i8 zeroext 0, i8* nonnull %maybe_const) #8, !dbg !8669
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8659, metadata !DIExpression()), !dbg !8661
  %call2 = call %union.tree_node* @save_expr(%union.tree_node* %call1) #7, !dbg !8670
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !8659, metadata !DIExpression()), !dbg !8661
  %1 = load i8, i8* %maybe_const, align 1, !dbg !8671
  call void @llvm.dbg.value(metadata i8 %1, metadata !8660, metadata !DIExpression()), !dbg !8661
  %tobool = icmp eq i8 %1, 0, !dbg !8671
  br i1 %tobool, label %if.then3, label %cleanup, !dbg !8673

if.then3:                                         ; preds = %if.end
  %call4 = call %union.tree_node* @c_wrap_maybe_const(%union.tree_node* %call2, i8 zeroext 1) #8, !dbg !8674
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !8659, metadata !DIExpression()), !dbg !8661
  br label %cleanup, !dbg !8675

cleanup:                                          ; preds = %if.end, %if.then3, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call2, %if.end ], [ %call4, %if.then3 ], !dbg !8661
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !8660, metadata !DIExpression(DW_OP_deref)), !dbg !8661
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %maybe_const) #6, !dbg !8676
  ret %union.tree_node* %retval.0, !dbg !8676
}

declare dso_local %union.tree_node* @save_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @decl_with_nonnull_addr_p(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !8677 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !8679, metadata !DIExpression()), !dbg !8680
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8681
  %bf.load = load i64, i64* %0, align 8, !dbg !8681
  %bf.cast = and i64 %bf.load, 65535, !dbg !8681
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !8681
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8681
  %cmp = icmp eq i32 %1, 3, !dbg !8681
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8682

land.rhs:                                         ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast, 34, !dbg !8683
  br i1 %cmp5, label %land.end, label %lor.lhs.false, !dbg !8684

lor.lhs.false:                                    ; preds = %land.rhs
  %cmp10 = icmp eq i64 %bf.cast, 30, !dbg !8685
  br i1 %cmp10, label %land.end, label %lor.rhs, !dbg !8686

lor.rhs:                                          ; preds = %lor.lhs.false
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !8687
  %2 = bitcast i24* %weak_flag to i32*, !dbg !8687
  %bf.load11 = load i32, i32* %2, align 8, !dbg !8687
  %3 = trunc i32 %bf.load11 to i8, !dbg !8688
  %.lobit = lshr i8 %3, 7, !dbg !8686
  %.lobit.not = xor i8 %.lobit, 1, !dbg !8686
  br label %land.end, !dbg !8686

land.end:                                         ; preds = %land.rhs, %lor.lhs.false, %lor.rhs, %entry
  %4 = phi i8 [ 0, %entry ], [ 1, %lor.lhs.false ], [ 1, %land.rhs ], [ %.lobit.not, %lor.rhs ]
  ret i8 %4, !dbg !8689
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !8690 {
entry:
  br label %tailrecurse, !dbg !8706

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %expr.tr = phi %union.tree_node* [ %expr, %entry ], [ %expr.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata i32 %location, metadata !8694, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr, metadata !8695, metadata !DIExpression()), !dbg !8707
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8708
  %bf.load = load i64, i64* %0, align 8, !dbg !8708
  %1 = trunc i64 %bf.load to i16, !dbg !8708
  switch i16 %1, label %sw.epilog.loopexit [
    i16 101, label %sw.bb
    i16 102, label %sw.bb
    i16 109, label %sw.bb
    i16 110, label %sw.bb
    i16 98, label %sw.bb
    i16 100, label %sw.bb
    i16 97, label %sw.bb
    i16 99, label %sw.bb
    i16 106, label %sw.bb
    i16 108, label %sw.bb
    i16 105, label %sw.bb
    i16 107, label %sw.bb
    i16 104, label %sw.bb
    i16 103, label %sw.bb
    i16 91, label %sw.bb8
    i16 92, label %sw.bb8
    i16 93, label %sw.bb8
    i16 94, label %sw.bb8
    i16 95, label %sw.bb8
    i16 96, label %sw.bb27
    i16 0, label %return.loopexit
    i16 23, label %sw.bb43
    i16 24, label %sw.bb45
    i16 25, label %sw.bb52
    i16 29, label %sw.bb81
    i16 121, label %sw.bb83.loopexit
    i16 123, label %sw.bb118
    i16 79, label %sw.bb159
    i16 82, label %sw.bb159
    i16 78, label %sw.bb159
    i16 190, label %sw.bb159
    i16 85, label %sw.bb164
    i16 86, label %sw.bb164
    i16 56, label %sw.bb188
    i16 116, label %sw.bb217
    i16 113, label %sw.bb217
    i16 53, label %sw.bb261
  ], !dbg !8709

sw.bb:                                            ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %expr.tr.lcssa93 = phi %union.tree_node* [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ]
  %bf.load.lcssa67 = phi i64 [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], !dbg !8708
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa93, metadata !8695, metadata !DIExpression()), !dbg !8707
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8710
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8710
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 45), align 8, !dbg !8712
  %cmp = icmp eq %union.tree_node* %2, %3, !dbg !8713
  br i1 %cmp, label %return, label %if.end, !dbg !8714

if.end:                                           ; preds = %sw.bb
  %4 = trunc i64 %bf.load.lcssa67 to i32, !dbg !8715
  %bf.cast4 = and i32 %4, 65535, !dbg !8715
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8715
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8715
  %arrayidx7 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !8715
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx7, align 8, !dbg !8715
  %call = tail call %union.tree_node* @build2_stat(i32 %bf.cast4, %union.tree_node* %3, %union.tree_node* %5, %union.tree_node* %6) #7, !dbg !8715
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %ret, !dbg !8716

sw.bb8:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %expr.tr.lcssa94 = phi %union.tree_node* [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %tailrecurse ]
  %bf.load.lcssa68 = phi i64 [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], [ %bf.load, %tailrecurse ], !dbg !8708
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa94, metadata !8695, metadata !DIExpression()), !dbg !8707
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8717
  %7 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !8717
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 45), align 8, !dbg !8719
  %cmp11 = icmp eq %union.tree_node* %7, %8, !dbg !8720
  br i1 %cmp11, label %return, label %if.end13, !dbg !8721

if.end13:                                         ; preds = %sw.bb8
  %9 = trunc i64 %bf.load.lcssa68 to i32, !dbg !8722
  %bf.cast17 = and i32 %9, 65535, !dbg !8722
  %operands19 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8722
  %10 = load %union.tree_node*, %union.tree_node** %operands19, align 8, !dbg !8722
  %call21 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %10) #8, !dbg !8722
  %arrayidx24 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands19, i64 1, !dbg !8722
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx24, align 8, !dbg !8722
  %call25 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %11) #8, !dbg !8722
  %call26 = tail call %union.tree_node* @build2_stat(i32 %bf.cast17, %union.tree_node* %8, %union.tree_node* %call21, %union.tree_node* %call25) #7, !dbg !8722
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %ret, !dbg !8723

sw.bb27:                                          ; preds = %tailrecurse
  %expr.tr.lcssa95 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  %bf.load.lcssa69 = phi i64 [ %bf.load, %tailrecurse ], !dbg !8708
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa95, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa95, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa95, metadata !8695, metadata !DIExpression()), !dbg !8707
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8724
  %12 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !8724
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 45), align 8, !dbg !8726
  %cmp30 = icmp eq %union.tree_node* %12, %13, !dbg !8727
  br i1 %cmp30, label %return, label %if.end32, !dbg !8728

if.end32:                                         ; preds = %sw.bb27
  %14 = trunc i64 %bf.load.lcssa69 to i32, !dbg !8729
  %bf.cast36 = and i32 %14, 65535, !dbg !8729
  %operands38 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8729
  %15 = load %union.tree_node*, %union.tree_node** %operands38, align 8, !dbg !8729
  %call40 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %15) #8, !dbg !8729
  %call41 = tail call %union.tree_node* @build1_stat(i32 %bf.cast36, %union.tree_node* %13, %union.tree_node* %call40) #7, !dbg !8729
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %ret, !dbg !8730

sw.bb43:                                          ; preds = %tailrecurse
  %expr.tr.lcssa97 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa97, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa97, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa97, metadata !8695, metadata !DIExpression()), !dbg !8707
  %call44 = tail call i32 @integer_zerop(%union.tree_node* %expr.tr.lcssa97) #7, !dbg !8731
  %tobool = icmp eq i32 %call44, 0, !dbg !8731
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8731
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8731
  %cond = select i1 %tobool, %union.tree_node* %17, %union.tree_node* %16, !dbg !8731
  br label %return, !dbg !8731

sw.bb45:                                          ; preds = %tailrecurse
  %expr.tr.lcssa98 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa98, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa98, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa98, metadata !8695, metadata !DIExpression()), !dbg !8707
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8732
  %18 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !8732
  %19 = load %struct.real_value*, %struct.real_value** %18, align 8, !dbg !8732
  %call46 = tail call zeroext i8 @real_compare(i32 102, %struct.real_value* %19, %struct.real_value* nonnull @dconst0) #7, !dbg !8733
  %tobool47 = icmp eq i8 %call46, 0, !dbg !8733
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8733
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8733
  %cond51 = select i1 %tobool47, %union.tree_node* %21, %union.tree_node* %20, !dbg !8733
  br label %return, !dbg !8733

sw.bb52:                                          ; preds = %tailrecurse
  %expr.tr.lcssa99 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa99, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa99, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa99, metadata !8695, metadata !DIExpression()), !dbg !8707
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8734
  %22 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !8734
  %23 = load %struct.fixed_value*, %struct.fixed_value** %22, align 8, !dbg !8734
  %type54 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8735
  %24 = bitcast %union.tree_node** %type54 to i64**, !dbg !8735
  %25 = load i64*, i64** %24, align 8, !dbg !8735
  %bf.load56 = load i64, i64* %25, align 8, !dbg !8735
  %bf.cast5811 = and i64 %bf.load56, 65535, !dbg !8735
  %cmp59 = icmp eq i64 %bf.cast5811, 14, !dbg !8735
  br i1 %cmp59, label %cond.true61, label %cond.false65, !dbg !8735

cond.true61:                                      ; preds = %sw.bb52
  %.cast12 = bitcast i64* %25 to %union.tree_node*, !dbg !8735
  %call64 = tail call i32 @vector_type_mode(%union.tree_node* %.cast12) #7, !dbg !8735
  br label %cond.end71, !dbg !8735

cond.false65:                                     ; preds = %sw.bb52
  %type68 = bitcast i64* %25 to %struct.tree_type*, !dbg !8735
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type68, i64 0, i32 6, !dbg !8735
  %bf.load69 = load i32, i32* %mode, align 4, !dbg !8735
  %bf.lshr = lshr i32 %bf.load69, 16, !dbg !8735
  %bf.clear70 = and i32 %bf.lshr, 255, !dbg !8735
  br label %cond.end71, !dbg !8735

cond.end71:                                       ; preds = %cond.false65, %cond.true61
  %cond72 = phi i32 [ %call64, %cond.true61 ], [ %bf.clear70, %cond.false65 ], !dbg !8735
  %sub = add i32 %cond72, -20, !dbg !8735
  %idxprom = zext i32 %sub to i64, !dbg !8735
  %arrayidx73 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom, !dbg !8735
  %call74 = tail call zeroext i8 @fixed_compare(i32 102, %struct.fixed_value* %23, %struct.fixed_value* nonnull %arrayidx73) #7, !dbg !8736
  %tobool76 = icmp eq i8 %call74, 0, !dbg !8736
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8736
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !8736
  %cond80 = select i1 %tobool76, %union.tree_node* %27, %union.tree_node* %26, !dbg !8736
  br label %return, !dbg !8736

sw.bb81:                                          ; preds = %tailrecurse
  %expr.tr.lcssa100 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa100, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa100, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa100, metadata !8695, metadata !DIExpression()), !dbg !8707
  %call82 = tail call %union.tree_node* @build_unary_op(i32 %location, i32 121, %union.tree_node* %expr.tr.lcssa100, i32 0) #7, !dbg !8737
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %sw.bb83, !dbg !8738

sw.bb83.loopexit:                                 ; preds = %tailrecurse
  %expr.tr.lcssa101 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa101, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa101, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa101, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %sw.bb83, !dbg !8739

sw.bb83:                                          ; preds = %sw.bb83.loopexit, %sw.bb81
  %expr.addr.0 = phi %union.tree_node* [ %call82, %sw.bb81 ], [ %expr.tr.lcssa101, %sw.bb83.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !8695, metadata !DIExpression()), !dbg !8707
  %operands85 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8739
  %28 = load %union.tree_node*, %union.tree_node** %operands85, align 8, !dbg !8739
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !8696, metadata !DIExpression()), !dbg !8740
  %call87 = tail call zeroext i8 @decl_with_nonnull_addr_p(%union.tree_node* %28) #8, !dbg !8741
  %tobool88 = icmp eq i8 %call87, 0, !dbg !8741
  br i1 %tobool88, label %if.end91, label %if.then89, !dbg !8743

if.then89:                                        ; preds = %sw.bb83
  %call90 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 33, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.256, i64 0, i64 0), %union.tree_node* %28) #7, !dbg !8744
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8746
  br label %cleanup, !dbg !8747

if.end91:                                         ; preds = %sw.bb83
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8748
  %bf.load93 = load i64, i64* %30, align 8, !dbg !8748
  %bf.cast95 = and i64 %bf.load93, 65535, !dbg !8748
  %arrayidx97 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast95, !dbg !8748
  %31 = load i32, i32* %arrayidx97, align 4, !dbg !8748
  %cmp98 = icmp eq i32 %31, 3, !dbg !8748
  br i1 %cmp98, label %if.then100, label %if.end109, !dbg !8750

if.then100:                                       ; preds = %if.end91
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !8751
  %32 = bitcast i24* %weak_flag to i32*, !dbg !8751
  %bf.load101 = load i32, i32* %32, align 8, !dbg !8751
  %33 = trunc i32 %bf.load101 to i8, !dbg !8751
  %tobool104 = icmp slt i8 %33, 0, !dbg !8751
  br i1 %tobool104, label %cleanup, label %cond.true105, !dbg !8751

cond.true105:                                     ; preds = %if.then100
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 3976, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !8751
  br label %cleanup, !dbg !8751

if.end109:                                        ; preds = %if.end91
  %bf.cast11410 = and i64 %bf.load93, 65536, !dbg !8753
  %tobool115 = icmp eq i64 %bf.cast11410, 0, !dbg !8753
  br i1 %tobool115, label %if.else, label %if.then116, !dbg !8755

if.then116:                                       ; preds = %if.end109
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 45), align 8, !dbg !8756
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8756
  %call117 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %34, %union.tree_node* %28, %union.tree_node* %35) #7, !dbg !8756
  call void @llvm.dbg.value(metadata %union.tree_node* %call117, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %cleanup, !dbg !8758

if.else:                                          ; preds = %if.end109
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !8759
  br label %cleanup, !dbg !8760

cleanup:                                          ; preds = %cond.true105, %if.then100, %if.then116, %if.else, %if.then89
  %expr.addr.1 = phi %union.tree_node* [ %expr.addr.0, %if.then89 ], [ %call117, %if.then116 ], [ %expr.addr.0, %if.else ], [ %expr.addr.0, %if.then100 ], [ %expr.addr.0, %cond.true105 ]
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then89 ], [ 3, %if.then116 ], [ 1, %if.else ], [ 2, %if.then100 ], [ 2, %cond.true105 ]
  %retval.0 = phi %union.tree_node* [ %29, %if.then89 ], [ undef, %if.then116 ], [ %36, %if.else ], [ undef, %if.then100 ], [ undef, %cond.true105 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.1, metadata !8695, metadata !DIExpression()), !dbg !8707
  switch i32 %cleanup.dest.slot.0, label %unreachable [
    i32 1, label %return
    i32 2, label %sw.epilog
    i32 3, label %ret
  ]

sw.bb118:                                         ; preds = %tailrecurse
  %expr.tr.lcssa102 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  %bf.load.lcssa76 = phi i64 [ %bf.load, %tailrecurse ], !dbg !8708
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa102, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa102, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa102, metadata !8695, metadata !DIExpression()), !dbg !8707
  %bf.cast122 = and i64 %bf.load.lcssa76, 65535, !dbg !8761
  %arrayidx124 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast122, !dbg !8761
  %37 = load i32, i32* %arrayidx124, align 4, !dbg !8761
  %cmp125 = icmp ugt i32 %37, 3, !dbg !8761
  br i1 %cmp125, label %land.lhs.true, label %cond.end138, !dbg !8761

land.lhs.true:                                    ; preds = %sw.bb118
  %cmp133 = icmp ult i32 %37, 11, !dbg !8761
  br i1 %cmp133, label %cond.true135, label %cond.end138, !dbg !8761

cond.true135:                                     ; preds = %land.lhs.true
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8761
  %39 = load i32, i32* %38, align 8, !dbg !8761
  br label %cond.end138, !dbg !8761

cond.end138:                                      ; preds = %sw.bb118, %land.lhs.true, %cond.true135
  %cond139 = phi i32 [ %39, %cond.true135 ], [ 0, %land.lhs.true ], [ 0, %sw.bb118 ], !dbg !8761
  %operands141 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8762
  %arrayidx142 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands141, i64 1, !dbg !8762
  %40 = bitcast %union.tree_node** %arrayidx142 to i64**, !dbg !8762
  %41 = load i64*, i64** %40, align 8, !dbg !8762
  %bf.load144 = load i64, i64* %41, align 8, !dbg !8762
  %bf.cast1479 = and i64 %bf.load144, 65536, !dbg !8762
  %tobool148 = icmp eq i64 %bf.cast1479, 0, !dbg !8762
  %cond149 = select i1 %tobool148, i32 92, i32 94, !dbg !8762
  %42 = load %union.tree_node*, %union.tree_node** %operands141, align 8, !dbg !8763
  %call153 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %42) #8, !dbg !8764
  %43 = load %union.tree_node*, %union.tree_node** %arrayidx142, align 8, !dbg !8765
  %call157 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %43) #8, !dbg !8766
  %call158 = tail call %union.tree_node* @build_binary_op(i32 %cond139, i32 %cond149, %union.tree_node* %call153, %union.tree_node* %call157, i32 0) #7, !dbg !8767
  call void @llvm.dbg.value(metadata %union.tree_node* %call158, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %ret, !dbg !8768

sw.bb159:                                         ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  br label %tailrecurse.backedge, !dbg !8706

tailrecurse.backedge:                             ; preds = %sw.bb159, %if.else183, %if.then255
  %expr.tr.be.in = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8769
  %expr.tr.be = load %union.tree_node*, %union.tree_node** %expr.tr.be.in, align 8, !dbg !8769
  br label %tailrecurse, !dbg !8707

sw.bb164:                                         ; preds = %tailrecurse, %tailrecurse
  %operands166 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8770
  %arrayidx167 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands166, i64 1, !dbg !8770
  %44 = bitcast %union.tree_node** %arrayidx167 to i64**, !dbg !8770
  %45 = load i64*, i64** %44, align 8, !dbg !8770
  %bf.load169 = load i64, i64* %45, align 8, !dbg !8770
  %bf.cast1728 = and i64 %bf.load169, 65536, !dbg !8770
  %tobool173 = icmp eq i64 %bf.cast1728, 0, !dbg !8770
  br i1 %tobool173, label %if.else183, label %if.then174, !dbg !8772

if.then174:                                       ; preds = %sw.bb164
  %operands166.lcssa = phi %union.tree_node** [ %operands166, %sw.bb164 ], !dbg !8770
  %.lcssa106 = phi i64* [ %45, %sw.bb164 ], !dbg !8770
  %46 = bitcast i64* %.lcssa106 to %union.tree_node*, !dbg !8772
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 45), align 8, !dbg !8773
  %48 = load %union.tree_node*, %union.tree_node** %operands166.lcssa, align 8, !dbg !8773
  %call181 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %48) #8, !dbg !8773
  %call182 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %47, %union.tree_node* %46, %union.tree_node* %call181) #7, !dbg !8773
  call void @llvm.dbg.value(metadata %union.tree_node* %call182, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %ret, !dbg !8775

if.else183:                                       ; preds = %sw.bb164
  br label %tailrecurse.backedge, !dbg !8776

sw.bb188:                                         ; preds = %tailrecurse
  %expr.tr.lcssa103 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa103, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa103, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa103, metadata !8695, metadata !DIExpression()), !dbg !8707
  %49 = load i32, i32* @c_language, align 4, !dbg !8777
  %and = and i32 %49, 2, !dbg !8777
  %cmp189 = icmp eq i32 %and, 0, !dbg !8777
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 45), align 8, !dbg !8779
  %operands193 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8779
  %51 = load %union.tree_node*, %union.tree_node** %operands193, align 8, !dbg !8779
  %arrayidx197 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands193, i64 1, !dbg !8779
  %52 = load %union.tree_node*, %union.tree_node** %arrayidx197, align 8, !dbg !8779
  %call198 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %52) #8, !dbg !8779
  %arrayidx201 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands193, i64 2, !dbg !8779
  %53 = load %union.tree_node*, %union.tree_node** %arrayidx201, align 8, !dbg !8779
  %call202 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %53) #8, !dbg !8779
  br i1 %cmp189, label %if.else204, label %if.then191, !dbg !8780

if.then191:                                       ; preds = %sw.bb188
  %call203 = tail call %union.tree_node* @fold_build3_stat_loc(i32 %location, i32 56, %union.tree_node* %50, %union.tree_node* %51, %union.tree_node* %call198, %union.tree_node* %call202) #7, !dbg !8781
  call void @llvm.dbg.value(metadata %union.tree_node* %call203, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %ret, !dbg !8783

if.else204:                                       ; preds = %sw.bb188
  %call216 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %50, %union.tree_node* %51, %union.tree_node* %call198, %union.tree_node* %call202) #7, !dbg !8784
  call void @llvm.dbg.value(metadata %union.tree_node* %call216, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %ret, !dbg !8786

sw.bb217:                                         ; preds = %tailrecurse, %tailrecurse
  %type219 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8787
  %54 = bitcast %union.tree_node** %type219 to i64**, !dbg !8787
  %55 = load i64*, i64** %54, align 8, !dbg !8787
  %bf.load221 = load i64, i64* %55, align 8, !dbg !8787
  %bf.cast2236 = and i64 %bf.load221, 65535, !dbg !8789
  %cmp224 = icmp eq i64 %bf.cast2236, 12, !dbg !8789
  %56 = bitcast i64* %55 to %struct.tree_type*, !dbg !8790
  br i1 %cmp224, label %sw.epilog.loopexit, label %lor.lhs.false, !dbg !8790

lor.lhs.false:                                    ; preds = %sw.bb217
  %operands227 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8791
  %57 = bitcast %union.tree_node** %operands227 to %struct.tree_common**, !dbg !8791
  %58 = load %struct.tree_common*, %struct.tree_common** %57, align 8, !dbg !8791
  %type230 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %58, i64 0, i32 2, !dbg !8791
  %59 = bitcast %union.tree_node** %type230 to i64**, !dbg !8791
  %60 = load i64*, i64** %59, align 8, !dbg !8791
  %bf.load232 = load i64, i64* %60, align 8, !dbg !8791
  %bf.cast2347 = and i64 %bf.load232, 65535, !dbg !8792
  %cmp235 = icmp eq i64 %bf.cast2347, 12, !dbg !8792
  br i1 %cmp235, label %sw.epilog.loopexit, label %if.end238, !dbg !8793

if.end238:                                        ; preds = %lor.lhs.false
  %61 = bitcast i64* %60 to %struct.tree_type*, !dbg !8793
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %56, i64 0, i32 6, !dbg !8794
  %bf.load242 = load i32, i32* %precision, align 4, !dbg !8794
  %bf.clear243 = and i32 %bf.load242, 1023, !dbg !8794
  %precision250 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %61, i64 0, i32 6, !dbg !8796
  %bf.load251 = load i32, i32* %precision250, align 4, !dbg !8796
  %bf.clear252 = and i32 %bf.load251, 1023, !dbg !8796
  %cmp253 = icmp ult i32 %bf.clear243, %bf.clear252, !dbg !8797
  br i1 %cmp253, label %sw.epilog.loopexit, label %if.then255, !dbg !8798

if.then255:                                       ; preds = %if.end238
  br label %tailrecurse.backedge, !dbg !8799

sw.bb261:                                         ; preds = %tailrecurse
  %expr.tr.lcssa104 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  %.lcssa91 = phi i64* [ %0, %tailrecurse ], !dbg !8708
  %bf.load.lcssa78 = phi i64 [ %bf.load, %tailrecurse ], !dbg !8708
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa104, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa104, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa104, metadata !8695, metadata !DIExpression()), !dbg !8707
  %bf.cast2661 = and i64 %bf.load.lcssa78, 8388608, !dbg !8800
  %tobool267 = icmp eq i64 %bf.cast2661, 0, !dbg !8800
  %62 = load i32, i32* @warn_parentheses, align 4, !dbg !8802
  %tobool269 = icmp ne i32 %62, 0, !dbg !8802
  %or.cond = and i1 %tobool267, %tobool269, !dbg !8803
  br i1 %or.cond, label %if.then270, label %sw.epilog, !dbg !8803

if.then270:                                       ; preds = %sw.bb261
  %call271 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.257, i64 0, i64 0)) #7, !dbg !8804
  %bf.load273 = load i64, i64* %.lcssa91, align 8, !dbg !8806
  %bf.set = or i64 %bf.load273, 8388608, !dbg !8806
  store i64 %bf.set, i64* %.lcssa91, align 8, !dbg !8806
  br label %sw.epilog, !dbg !8807

sw.epilog.loopexit:                               ; preds = %lor.lhs.false, %sw.bb217, %tailrecurse, %if.end238
  %expr.tr.lcssa = phi %union.tree_node* [ %expr.tr, %lor.lhs.false ], [ %expr.tr, %sw.bb217 ], [ %expr.tr, %tailrecurse ], [ %expr.tr, %if.end238 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %sw.epilog, !dbg !8808

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.then270, %sw.bb261, %cleanup
  %expr.addr.2 = phi %union.tree_node* [ %expr.addr.1, %cleanup ], [ %expr.tr.lcssa104, %sw.bb261 ], [ %expr.tr.lcssa104, %if.then270 ], [ %expr.tr.lcssa, %sw.epilog.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.2, metadata !8695, metadata !DIExpression()), !dbg !8707
  %type277 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8808
  %63 = bitcast %union.tree_node** %type277 to i64**, !dbg !8808
  %64 = load i64*, i64** %63, align 8, !dbg !8808
  %bf.load279 = load i64, i64* %64, align 8, !dbg !8808
  %bf.cast2812 = and i64 %bf.load279, 65535, !dbg !8809
  %cmp282 = icmp eq i64 %bf.cast2812, 13, !dbg !8809
  %65 = bitcast i64* %64 to %union.tree_node*, !dbg !8810
  br i1 %cmp282, label %if.then284, label %if.end323, !dbg !8810

if.then284:                                       ; preds = %sw.epilog
  %call285 = tail call %union.tree_node* @c_save_expr(%union.tree_node* %expr.addr.2) #8, !dbg !8811
  call void @llvm.dbg.value(metadata %union.tree_node* %call285, metadata !8699, metadata !DIExpression()), !dbg !8812
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8813
  %bf.load287 = load i64, i64* %66, align 8, !dbg !8813
  %bf.cast289 = and i64 %bf.load287, 65535, !dbg !8813
  %arrayidx291 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast289, !dbg !8813
  %67 = load i32, i32* %arrayidx291, align 4, !dbg !8813
  %cmp292 = icmp ugt i32 %67, 3, !dbg !8813
  br i1 %cmp292, label %land.lhs.true294, label %cond.end307, !dbg !8813

land.lhs.true294:                                 ; preds = %if.then284
  %cmp301 = icmp ult i32 %67, 11, !dbg !8813
  br i1 %cmp301, label %cond.true303, label %cond.end307, !dbg !8813

cond.true303:                                     ; preds = %land.lhs.true294
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8813
  %69 = load i32, i32* %68, align 8, !dbg !8813
  br label %cond.end307, !dbg !8813

cond.end307:                                      ; preds = %if.then284, %land.lhs.true294, %cond.true303
  %cond308 = phi i32 [ %69, %cond.true303 ], [ 0, %land.lhs.true294 ], [ 0, %if.then284 ], !dbg !8813
  %bf.cast3135 = and i64 %bf.load287, 65536, !dbg !8814
  %tobool314 = icmp eq i64 %bf.cast3135, 0, !dbg !8814
  %cond315 = select i1 %tobool314, i32 92, i32 94, !dbg !8814
  %call316 = tail call %union.tree_node* @build_unary_op(i32 %location, i32 43, %union.tree_node* %call285, i32 0) #7, !dbg !8815
  %call317 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %call316) #8, !dbg !8816
  %call318 = tail call %union.tree_node* @build_unary_op(i32 %location, i32 44, %union.tree_node* %call285, i32 0) #7, !dbg !8817
  %call319 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %call318) #8, !dbg !8818
  %call320 = tail call %union.tree_node* @build_binary_op(i32 %cond308, i32 %cond315, %union.tree_node* %call317, %union.tree_node* %call319, i32 0) #7, !dbg !8819
  call void @llvm.dbg.value(metadata %union.tree_node* %call320, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %ret

if.end323:                                        ; preds = %sw.epilog
  %cmp330 = icmp eq i64 %bf.cast2812, 11, !dbg !8820
  br i1 %cmp330, label %if.then332, label %if.else363, !dbg !8821

if.then332:                                       ; preds = %if.end323
  br i1 false, label %cond.true343, label %cond.false347, !dbg !8822

cond.true343:                                     ; preds = %if.then332
  br label %cond.end355, !dbg !8822

cond.false347:                                    ; preds = %if.then332
  %type350 = bitcast i64* %64 to %struct.tree_type*, !dbg !8822
  %mode351 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type350, i64 0, i32 6, !dbg !8822
  %bf.load352 = load i32, i32* %mode351, align 4, !dbg !8822
  %bf.lshr353 = lshr i32 %bf.load352, 16, !dbg !8822
  %bf.clear354 = and i32 %bf.lshr353, 255, !dbg !8822
  %phitmp = add nsw i32 %bf.clear354, -20, !dbg !8822
  %phitmp66 = zext i32 %phitmp to i64, !dbg !8822
  br label %cond.end355, !dbg !8822

cond.end355:                                      ; preds = %cond.false347, %cond.true343
  %cond356 = phi i64 [ 0, %cond.true343 ], [ %phitmp66, %cond.false347 ]
  %arrayidx359 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %cond356, !dbg !8822
  %call360 = tail call %union.tree_node* @build_fixed(%union.tree_node* %65, %struct.fixed_value* nonnull byval(%struct.fixed_value) align 8 %arrayidx359) #7, !dbg !8823
  call void @llvm.dbg.value(metadata %union.tree_node* %call360, metadata !8702, metadata !DIExpression()), !dbg !8824
  %call361 = tail call %union.tree_node* @build_binary_op(i32 %location, i32 102, %union.tree_node* %expr.addr.2, %union.tree_node* %call360, i32 1) #7, !dbg !8825
  br label %return

if.else363:                                       ; preds = %if.end323
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8826
  %call364 = tail call %union.tree_node* @build_binary_op(i32 %location, i32 102, %union.tree_node* %expr.addr.2, %union.tree_node* %70, i32 1) #7, !dbg !8827
  br label %return, !dbg !8828

ret:                                              ; preds = %cond.end307, %if.else204, %if.then191, %if.then174, %cond.end138, %cleanup, %if.end32, %if.end13, %if.end
  %expr.addr.3 = phi %union.tree_node* [ %call320, %cond.end307 ], [ %call203, %if.then191 ], [ %call216, %if.else204 ], [ %call182, %if.then174 ], [ %call158, %cond.end138 ], [ %expr.addr.1, %cleanup ], [ %call41, %if.end32 ], [ %call26, %if.end13 ], [ %call, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.3, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.label(metadata !8705), !dbg !8829
  tail call void @protected_set_expr_location(%union.tree_node* %expr.addr.3, i32 %location) #7, !dbg !8830
  br label %return, !dbg !8831

return.loopexit:                                  ; preds = %tailrecurse
  %expr.tr.lcssa96 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa96, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa96, metadata !8695, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa96, metadata !8695, metadata !DIExpression()), !dbg !8707
  br label %return, !dbg !8832

return:                                           ; preds = %return.loopexit, %cond.end71, %sw.bb45, %sw.bb43, %sw.bb27, %sw.bb8, %sw.bb, %ret, %if.else363, %cond.end355, %cleanup
  %retval.1 = phi %union.tree_node* [ %expr.addr.3, %ret ], [ %call361, %cond.end355 ], [ %call364, %if.else363 ], [ %retval.0, %cleanup ], [ %expr.tr.lcssa93, %sw.bb ], [ %expr.tr.lcssa94, %sw.bb8 ], [ %expr.tr.lcssa95, %sw.bb27 ], [ %cond, %sw.bb43 ], [ %cond51, %sw.bb45 ], [ %cond80, %cond.end71 ], [ %expr.tr.lcssa96, %return.loopexit ], !dbg !8707
  ret %union.tree_node* %retval.1, !dbg !8832

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_compare(i32, %struct.real_value*, %struct.real_value*) local_unnamed_addr #2

declare dso_local zeroext i8 @fixed_compare(i32, %struct.fixed_value*, %struct.fixed_value*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_unary_op(i32, i32, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fixed(%union.tree_node*, %struct.fixed_value* byval(%struct.fixed_value) align 8) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define dso_local void @c_apply_type_quals_to_decl(i32 %type_quals, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !8833 {
entry:
  call void @llvm.dbg.value(metadata i32 %type_quals, metadata !8837, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8838, metadata !DIExpression()), !dbg !8840
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8841
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !8841
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8839, metadata !DIExpression()), !dbg !8840
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8842
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !8844
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !8845

if.end:                                           ; preds = %entry
  %and = and i32 %type_quals, 1, !dbg !8846
  %tobool = icmp eq i32 %and, 0, !dbg !8846
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true4, !dbg !8848

lor.lhs.false:                                    ; preds = %if.end
  %tobool2 = icmp eq %union.tree_node* %0, null, !dbg !8849
  br i1 %tobool2, label %if.end15, label %land.lhs.true, !dbg !8850

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8851
  %bf.load = load i64, i64* %2, align 8, !dbg !8851
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !8852
  %cmp3 = icmp eq i64 %bf.cast5, 12, !dbg !8852
  br i1 %cmp3, label %land.lhs.true4, label %if.end15, !dbg !8853

land.lhs.true4:                                   ; preds = %if.end, %land.lhs.true
  %tobool5 = icmp eq %union.tree_node* %0, null, !dbg !8854
  br i1 %tobool5, label %if.then11, label %land.lhs.true6, !dbg !8855

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %type7 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !8856
  %needs_constructing_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i64 0, i32 6, !dbg !8856
  %bf.load8 = load i32, i32* %needs_constructing_flag, align 4, !dbg !8856
  %bf.clear9 = and i32 %bf.load8, 2048, !dbg !8856
  %tobool10 = icmp eq i32 %bf.clear9, 0, !dbg !8856
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !8857

if.then11:                                        ; preds = %land.lhs.true6, %land.lhs.true4
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8858
  %bf.load13 = load i64, i64* %3, align 8, !dbg !8859
  %bf.set = or i64 %bf.load13, 1048576, !dbg !8859
  store i64 %bf.set, i64* %3, align 8, !dbg !8859
  br label %if.end15, !dbg !8858

if.end15:                                         ; preds = %land.lhs.true6, %lor.lhs.false, %if.then11, %land.lhs.true
  %and16 = and i32 %type_quals, 2, !dbg !8860
  %tobool17 = icmp eq i32 %and16, 0, !dbg !8860
  br i1 %tobool17, label %if.end27, label %if.then18, !dbg !8862

if.then18:                                        ; preds = %if.end15
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8863
  %bf.load20 = load i64, i64* %4, align 8, !dbg !8865
  %bf.set26 = or i64 %bf.load20, 589824, !dbg !8866
  store i64 %bf.set26, i64* %4, align 8, !dbg !8866
  br label %if.end27, !dbg !8867

if.end27:                                         ; preds = %if.end15, %if.then18
  %and28 = and i32 %type_quals, 4, !dbg !8868
  %tobool29 = icmp eq i32 %and28, 0, !dbg !8868
  br i1 %tobool29, label %cleanup.cont, label %while.cond.preheader, !dbg !8870

while.cond.preheader:                             ; preds = %if.end27
  br label %while.cond, !dbg !8871

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %type.0 = phi %union.tree_node* [ %6, %while.body ], [ %0, %while.cond.preheader ], !dbg !8840
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !8839, metadata !DIExpression()), !dbg !8840
  %cond = icmp eq %union.tree_node* %type.0, null, !dbg !8873
  br i1 %cond, label %if.then60.loopexit, label %land.rhs, !dbg !8873

land.rhs:                                         ; preds = %while.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8874
  %bf.load33 = load i64, i64* %5, align 8, !dbg !8874
  %bf.cast351 = and i64 %bf.load33, 65535, !dbg !8875
  %cmp36 = icmp eq i64 %bf.cast351, 15, !dbg !8875
  br i1 %cmp36, label %while.body, label %while.end, !dbg !8871

while.body:                                       ; preds = %land.rhs
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8876
  %6 = load %union.tree_node*, %union.tree_node** %type38, align 8, !dbg !8876
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !8839, metadata !DIExpression()), !dbg !8840
  br label %while.cond, !dbg !8871, !llvm.loop !8877

while.end:                                        ; preds = %land.rhs
  %bf.cast351.lcssa = phi i64 [ %bf.cast351, %land.rhs ], !dbg !8875
  %type.0.lcssa8 = phi %union.tree_node* [ %type.0, %land.rhs ], !dbg !8840
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0.lcssa8, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0.lcssa8, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0.lcssa8, metadata !8839, metadata !DIExpression()), !dbg !8840
  %cmp45 = icmp eq i64 %bf.cast351.lcssa, 10, !dbg !8878
  br i1 %cmp45, label %lor.lhs.false52, label %lor.lhs.false46, !dbg !8878

lor.lhs.false46:                                  ; preds = %while.end
  %cmp51 = icmp eq i64 %bf.cast351.lcssa, 12, !dbg !8878
  br i1 %cmp51, label %lor.lhs.false52, label %if.then60, !dbg !8880

lor.lhs.false52:                                  ; preds = %lor.lhs.false46, %while.end
  %type54 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0.lcssa8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8881
  %7 = bitcast %union.tree_node** %type54 to i64**, !dbg !8881
  %8 = load i64*, i64** %7, align 8, !dbg !8881
  %bf.load56 = load i64, i64* %8, align 8, !dbg !8881
  %bf.cast584 = and i64 %bf.load56, 65535, !dbg !8881
  %cmp59 = icmp eq i64 %bf.cast584, 20, !dbg !8881
  br i1 %cmp59, label %if.then60, label %cleanup.cont, !dbg !8882

if.then60.loopexit:                               ; preds = %while.cond
  br label %if.then60, !dbg !8883

if.then60:                                        ; preds = %if.then60.loopexit, %lor.lhs.false52, %lor.lhs.false46
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.258, i64 0, i64 0)) #7, !dbg !8883
  br label %cleanup.cont, !dbg !8883

cleanup.cont:                                     ; preds = %if.end27, %entry, %lor.lhs.false52, %if.then60
  ret void, !dbg !8884
}

; Function Attrs: nounwind uwtable
define dso_local i32 @c_common_get_alias_set(%union.tree_node* %t) local_unnamed_addr #5 !dbg !8885 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !8889, metadata !DIExpression()), !dbg !8901
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8902
  %bf.load = load i64, i64* %0, align 8, !dbg !8902
  %bf.cast = and i64 %bf.load, 65535, !dbg !8902
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !8902
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8902
  %cmp = icmp eq i32 %1, 2, !dbg !8902
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !8904

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1, !dbg !8905
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !8905
  %cmp1 = icmp eq %union.tree_node* %3, null, !dbg !8905
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !8906

if.then:                                          ; preds = %land.lhs.true
  %cmp6 = icmp eq i64 %bf.cast, 15, !dbg !8907
  br i1 %cmp6, label %if.then7, label %cleanup203, !dbg !8910

if.then7:                                         ; preds = %if.then
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8911
  %4 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !8911
  %call = tail call i32 @get_alias_set(%union.tree_node* %4) #7, !dbg !8912
  br label %cleanup203, !dbg !8913

if.end9:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !8890, metadata !DIExpression()), !dbg !8901
  br label %for.cond, !dbg !8914

for.cond:                                         ; preds = %for.inc, %if.end9
  %bf.load21 = phi i64 [ %bf.load, %if.end9 ], [ %bf.load11.pre, %for.inc ], !dbg !8916
  %u.0 = phi %union.tree_node* [ %t, %if.end9 ], [ %10, %for.inc ], !dbg !8918
  call void @llvm.dbg.value(metadata %union.tree_node* %u.0, metadata !8890, metadata !DIExpression()), !dbg !8901
  %bf.cast136 = and i64 %bf.load21, 65535, !dbg !8919
  %cmp14 = icmp eq i64 %bf.cast136, 41, !dbg !8919
  br i1 %cmp14, label %for.body, label %lor.rhs, !dbg !8920

lor.rhs:                                          ; preds = %for.cond
  %cmp19 = icmp eq i64 %bf.cast136, 45, !dbg !8921
  br i1 %cmp19, label %for.body, label %for.end, !dbg !8922

for.body:                                         ; preds = %for.cond, %lor.rhs
  br i1 %cmp14, label %land.lhs.true25, label %for.body.for.inc_crit_edge, !dbg !8923

for.body.for.inc_crit_edge:                       ; preds = %for.body
  %operands37.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %u.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8925
  %.pre = load %union.tree_node*, %union.tree_node** %operands37.phi.trans.insert, align 8, !dbg !8926
  br label %for.inc, !dbg !8923

land.lhs.true25:                                  ; preds = %for.body
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %u.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8927
  %5 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !8927
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !8927
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !8927
  %7 = bitcast %union.tree_node** %type28 to i64**, !dbg !8927
  %8 = load i64*, i64** %7, align 8, !dbg !8927
  %bf.load30 = load i64, i64* %8, align 8, !dbg !8927
  %bf.cast3224 = and i64 %bf.load30, 65535, !dbg !8928
  %cmp33 = icmp eq i64 %bf.cast3224, 17, !dbg !8928
  %9 = bitcast %struct.tree_common* %6 to %union.tree_node*, !dbg !8929
  br i1 %cmp33, label %cleanup203.loopexit, label %for.inc, !dbg !8929

for.inc:                                          ; preds = %for.body.for.inc_crit_edge, %land.lhs.true25
  %10 = phi %union.tree_node* [ %.pre, %for.body.for.inc_crit_edge ], [ %9, %land.lhs.true25 ], !dbg !8926
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !8890, metadata !DIExpression()), !dbg !8901
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8925
  %bf.load11.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !8916
  br label %for.cond, !dbg !8930, !llvm.loop !8931

for.end:                                          ; preds = %lor.rhs
  br i1 %cmp, label %if.end47, label %cleanup203, !dbg !8933

if.end47:                                         ; preds = %for.end
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !8934
  %cmp48 = icmp eq %union.tree_node* %11, %t, !dbg !8936
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !8937
  %cmp49 = icmp eq %union.tree_node* %12, %t, !dbg !8938
  %or.cond = or i1 %cmp48, %cmp49, !dbg !8939
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !8940
  %cmp51 = icmp eq %union.tree_node* %13, %t, !dbg !8941
  %or.cond3 = or i1 %or.cond, %cmp51, !dbg !8939
  br i1 %or.cond3, label %cleanup203, label %if.end53, !dbg !8939

if.end53:                                         ; preds = %if.end47
  %cmp58 = icmp eq i64 %bf.cast, 8, !dbg !8942
  br i1 %cmp58, label %land.lhs.true59, label %if.else, !dbg !8943

land.lhs.true59:                                  ; preds = %if.end53
  %bf.cast6322 = and i64 %bf.load, 2097152, !dbg !8944
  %tobool = icmp eq i64 %bf.cast6322, 0, !dbg !8944
  br i1 %tobool, label %if.else, label %if.then64, !dbg !8945

if.then64:                                        ; preds = %land.lhs.true59
  %call65 = tail call %union.tree_node* @c_common_signed_type(%union.tree_node* %t) #8, !dbg !8946
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !8892, metadata !DIExpression()), !dbg !8947
  %cmp66 = icmp eq %union.tree_node* %call65, %t, !dbg !8948
  br i1 %cmp66, label %cleanup, label %if.then67, !dbg !8950

if.then67:                                        ; preds = %if.then64
  %call68 = tail call i32 @get_alias_set(%union.tree_node* %call65) #7, !dbg !8951
  br label %cleanup, !dbg !8952

cleanup:                                          ; preds = %if.then64, %if.then67
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then67 ], [ true, %if.then64 ]
  %retval.0 = phi i32 [ %call68, %if.then67 ], [ undef, %if.then64 ]
  br i1 %cleanup.dest.slot.0, label %if.end92, label %cleanup203

if.else:                                          ; preds = %land.lhs.true59, %if.end53
  %cmp74 = icmp eq i64 %bf.cast, 10, !dbg !8953
  br i1 %cmp74, label %if.then81, label %lor.lhs.false75, !dbg !8953

lor.lhs.false75:                                  ; preds = %if.else
  %cmp80 = icmp eq i64 %bf.cast, 12, !dbg !8953
  br i1 %cmp80, label %if.then81, label %if.end92, !dbg !8954

if.then81:                                        ; preds = %lor.lhs.false75, %if.else
  %call83 = tail call %union.tree_node* @build_type_no_quals(%union.tree_node* %t) #7, !dbg !8955
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !8895, metadata !DIExpression()), !dbg !8956
  %cmp84 = icmp eq %union.tree_node* %call83, %t, !dbg !8957
  br i1 %cmp84, label %cleanup88, label %if.then85, !dbg !8959

if.then85:                                        ; preds = %if.then81
  %call86 = tail call i32 @get_alias_set(%union.tree_node* %call83) #7, !dbg !8960
  br label %cleanup88, !dbg !8961

cleanup88:                                        ; preds = %if.then81, %if.then85
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then85 ], [ true, %if.then81 ]
  %retval.1 = phi i32 [ %call86, %if.then85 ], [ undef, %if.then81 ]
  br i1 %cleanup.dest.slot.1, label %if.end92, label %cleanup203

if.end92:                                         ; preds = %lor.lhs.false75, %cleanup88, %cleanup
  %retval.3 = phi i32 [ %retval.0, %cleanup ], [ undef, %lor.lhs.false75 ], [ %retval.1, %cleanup88 ], !dbg !8962
  %14 = load i32, i32* @c_language, align 4, !dbg !8963
  %15 = load i32, i32* @flag_isoc99, align 4, !dbg !8965
  %16 = or i32 %14, %15, !dbg !8966
  %17 = icmp ne i32 %16, 0, !dbg !8966
  %18 = load i32, i32* @num_in_fnames, align 4, !dbg !8967
  %cmp98 = icmp eq i32 %18, 1, !dbg !8969
  %or.cond5 = or i1 %17, %cmp98, !dbg !8966
  br i1 %or.cond5, label %cleanup203, label %if.end100, !dbg !8966

if.end100:                                        ; preds = %if.end92
  %bf.load102 = load i64, i64* %0, align 8, !dbg !8970
  %bf.cast10411 = and i64 %bf.load102, 65535, !dbg !8971
  %cmp105 = icmp eq i64 %bf.cast10411, 10, !dbg !8971
  br i1 %cmp105, label %if.then106, label %if.end152, !dbg !8972

if.then106:                                       ; preds = %if.end100
  br label %for.cond109, !dbg !8973

for.cond109:                                      ; preds = %for.inc116, %if.then106
  %t.pn = phi %union.tree_node* [ %t, %if.then106 ], [ %t2.0, %for.inc116 ]
  %t2.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %t.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8975
  %t2.0 = load %union.tree_node*, %union.tree_node** %t2.0.in, align 8, !dbg !8975
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0, metadata !8898, metadata !DIExpression()), !dbg !8976
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8977
  %bf.load111 = load i64, i64* %19, align 8, !dbg !8977
  %bf.cast11317 = and i64 %bf.load111, 65535, !dbg !8979
  %cmp114 = icmp eq i64 %bf.cast11317, 10, !dbg !8979
  br i1 %cmp114, label %for.inc116, label %for.end119, !dbg !8980

for.inc116:                                       ; preds = %for.cond109
  br label %for.cond109, !dbg !8981, !llvm.loop !8982

for.end119:                                       ; preds = %for.cond109
  %t2.0.lcssa = phi %union.tree_node* [ %t2.0, %for.cond109 ], !dbg !8975
  %bf.cast11317.lcssa = phi i64 [ %bf.cast11317, %for.cond109 ], !dbg !8979
  %cmp124 = icmp eq i64 %bf.cast11317.lcssa, 16, !dbg !8984
  br i1 %cmp124, label %if.end144, label %land.lhs.true125, !dbg !8986

land.lhs.true125:                                 ; preds = %for.end119
  %cmp130 = icmp eq i64 %bf.cast11317.lcssa, 6, !dbg !8987
  br i1 %cmp130, label %if.end144, label %land.lhs.true131, !dbg !8988

land.lhs.true131:                                 ; preds = %land.lhs.true125
  %cmp136 = icmp eq i64 %bf.cast11317.lcssa, 18, !dbg !8989
  br i1 %cmp136, label %if.end144, label %land.lhs.true137, !dbg !8990

land.lhs.true137:                                 ; preds = %land.lhs.true131
  %cmp142 = icmp eq i64 %bf.cast11317.lcssa, 17, !dbg !8991
  br i1 %cmp142, label %if.end144, label %cleanup149, !dbg !8992

if.end144:                                        ; preds = %land.lhs.true137, %land.lhs.true131, %land.lhs.true125, %for.end119
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8993
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !8993
  %cmp146 = icmp eq %union.tree_node* %21, null, !dbg !8995
  %.retval.3 = select i1 %cmp146, i32 -1, i32 %retval.3, !dbg !8996
  %phitmp = xor i1 %cmp146, true, !dbg !8996
  br label %cleanup149, !dbg !8996

cleanup149:                                       ; preds = %land.lhs.true137, %if.end144
  %cleanup.dest.slot.2 = phi i1 [ false, %land.lhs.true137 ], [ %phitmp, %if.end144 ]
  %retval.4 = phi i32 [ -1, %land.lhs.true137 ], [ %.retval.3, %if.end144 ], !dbg !8901
  br i1 %cleanup.dest.slot.2, label %if.end152, label %cleanup203

if.end152:                                        ; preds = %cleanup149, %if.end100
  %cmp157 = icmp eq i64 %bf.cast10411, 16, !dbg !8997
  br i1 %cmp157, label %if.end183, label %land.lhs.true158, !dbg !8999

land.lhs.true158:                                 ; preds = %if.end152
  %cmp163 = icmp eq i64 %bf.cast10411, 6, !dbg !9000
  br i1 %cmp163, label %if.end183, label %land.lhs.true164, !dbg !9001

land.lhs.true164:                                 ; preds = %land.lhs.true158
  %cmp169 = icmp eq i64 %bf.cast10411, 18, !dbg !9002
  br i1 %cmp169, label %if.end183, label %land.lhs.true170, !dbg !9003

land.lhs.true170:                                 ; preds = %land.lhs.true164
  %cmp175 = icmp eq i64 %bf.cast10411, 17, !dbg !9004
  br i1 %cmp175, label %if.end183, label %land.lhs.true176, !dbg !9005

land.lhs.true176:                                 ; preds = %land.lhs.true170
  br i1 %cmp105, label %if.end183, label %cleanup203, !dbg !9006

if.end183:                                        ; preds = %land.lhs.true176, %land.lhs.true170, %land.lhs.true164, %land.lhs.true158, %if.end152
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9007
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !9007
  %cmp186 = icmp eq %union.tree_node* %23, null, !dbg !9009
  br i1 %cmp186, label %cleanup203, label %if.end188, !dbg !9010

if.end188:                                        ; preds = %if.end183
  %24 = load %struct.htab*, %struct.htab** @type_hash_table, align 8, !dbg !9011
  %tobool189 = icmp eq %struct.htab* %24, null, !dbg !9011
  br i1 %tobool189, label %if.then190, label %if.end192, !dbg !9013

if.then190:                                       ; preds = %if.end188
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** bitcast (i32 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 24) to i32 (i8*, i8*)**), align 8, !dbg !9014
  %call191 = tail call %struct.htab* @htab_create_alloc(i64 1021, i32 (i8*)* nonnull @c_type_hash, i32 (i8*, i8*)* %25, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !9014
  store %struct.htab* %call191, %struct.htab** @type_hash_table, align 8, !dbg !9015
  br label %if.end192, !dbg !9016

if.end192:                                        ; preds = %if.end188, %if.then190
  %26 = phi %struct.htab* [ %24, %if.end188 ], [ %call191, %if.then190 ], !dbg !9017
  %27 = bitcast %union.tree_node* %t to i8*, !dbg !9018
  %call193 = tail call i8** @htab_find_slot(%struct.htab* %26, i8* %27, i32 1) #7, !dbg !9019
  call void @llvm.dbg.value(metadata i8** %call193, metadata !8891, metadata !DIExpression()), !dbg !8901
  %28 = load i8*, i8** %call193, align 8, !dbg !9020
  %cmp194 = icmp eq i8* %28, null, !dbg !9022
  br i1 %cmp194, label %if.else201, label %if.then195, !dbg !9023

if.then195:                                       ; preds = %if.end192
  %29 = bitcast i8** %call193 to %struct.tree_type**, !dbg !9024
  %alias_set = getelementptr inbounds i8, i8* %28, i64 68, !dbg !9024
  %30 = bitcast i8* %alias_set to i32*, !dbg !9024
  %31 = load i32, i32* %30, align 4, !dbg !9024
  %type197 = bitcast %union.tree_node* %t to %struct.tree_type*, !dbg !9026
  %alias_set198 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type197, i64 0, i32 8, !dbg !9026
  store i32 %31, i32* %alias_set198, align 4, !dbg !9027
  %32 = load %struct.tree_type*, %struct.tree_type** %29, align 8, !dbg !9028
  %alias_set200 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 8, !dbg !9028
  %33 = load i32, i32* %alias_set200, align 4, !dbg !9028
  br label %cleanup203, !dbg !9029

if.else201:                                       ; preds = %if.end192
  %34 = bitcast i8** %call193 to %union.tree_node**, !dbg !9030
  store %union.tree_node* %t, %union.tree_node** %34, align 8, !dbg !9030
  br label %cleanup203, !dbg !9031

cleanup203.loopexit:                              ; preds = %land.lhs.true25
  br label %cleanup203, !dbg !9032

cleanup203:                                       ; preds = %cleanup203.loopexit, %land.lhs.true176, %if.end183, %if.end92, %if.end47, %for.end, %if.then, %cleanup, %cleanup88, %cleanup149, %if.else201, %if.then195, %if.then7
  %retval.5 = phi i32 [ %call, %if.then7 ], [ %retval.0, %cleanup ], [ %retval.4, %cleanup149 ], [ %33, %if.then195 ], [ -1, %if.else201 ], [ %retval.1, %cleanup88 ], [ -1, %if.then ], [ -1, %for.end ], [ 0, %if.end47 ], [ -1, %if.end92 ], [ -1, %land.lhs.true176 ], [ -1, %if.end183 ], [ 0, %cleanup203.loopexit ], !dbg !8901
  ret i32 %retval.5, !dbg !9032
}

declare dso_local %union.tree_node* @build_type_no_quals(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @c_type_hash(i8* %p) #5 !dbg !9033 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !9035, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata i32 0, metadata !9036, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata i8* %p, metadata !9039, metadata !DIExpression()), !dbg !9042
  %0 = bitcast i8* %p to i64*, !dbg !9043
  %bf.load = load i64, i64* %0, align 8, !dbg !9043
  %1 = trunc i64 %bf.load to i16, !dbg !9043
  switch i16 %1, label %sw.default [
    i16 10, label %sw.bb
    i16 6, label %sw.bb1
    i16 16, label %sw.bb3
    i16 18, label %sw.bb6
    i16 17, label %sw.bb9
  ], !dbg !9044

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p, metadata !9039, metadata !DIExpression()), !dbg !9042
  %type = getelementptr inbounds i8, i8* %p, i64 16, !dbg !9045
  %2 = bitcast i8* %type to i8**, !dbg !9045
  %3 = load i8*, i8** %2, align 8, !dbg !9045
  %call = tail call i32 @c_type_hash(i8* %3) #8, !dbg !9047
  %xor = xor i32 %call, 50343939, !dbg !9048
  ret i32 %xor, !dbg !9049

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 3, metadata !9037, metadata !DIExpression()), !dbg !9042
  %values = getelementptr inbounds i8, i8* %p, i64 24, !dbg !9050
  %4 = bitcast i8* %values to %union.tree_node**, !dbg !9050
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9050
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9041, metadata !DIExpression()), !dbg !9042
  br label %sw.epilog, !dbg !9051

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !9037, metadata !DIExpression()), !dbg !9042
  %values5 = getelementptr inbounds i8, i8* %p, i64 24, !dbg !9052
  %6 = bitcast i8* %values5 to %union.tree_node**, !dbg !9052
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !9052
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !9041, metadata !DIExpression()), !dbg !9042
  br label %sw.epilog, !dbg !9053

sw.bb6:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !9037, metadata !DIExpression()), !dbg !9042
  %values8 = getelementptr inbounds i8, i8* %p, i64 24, !dbg !9054
  %8 = bitcast i8* %values8 to %union.tree_node**, !dbg !9054
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !9054
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !9041, metadata !DIExpression()), !dbg !9042
  br label %sw.epilog, !dbg !9055

sw.bb9:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 2, metadata !9037, metadata !DIExpression()), !dbg !9042
  %values11 = getelementptr inbounds i8, i8* %p, i64 24, !dbg !9056
  %10 = bitcast i8* %values11 to %union.tree_node**, !dbg !9056
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !9056
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !9041, metadata !DIExpression()), !dbg !9042
  br label %sw.epilog, !dbg !9057

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 4189, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !9058
  br label %sw.epilog, !dbg !9059

sw.epilog:                                        ; preds = %sw.default, %sw.bb9, %sw.bb6, %sw.bb3, %sw.bb1
  %t2.0 = phi %union.tree_node* [ undef, %sw.default ], [ %11, %sw.bb9 ], [ %9, %sw.bb6 ], [ %7, %sw.bb3 ], [ %5, %sw.bb1 ]
  %shift.0 = phi i32 [ undef, %sw.default ], [ 2, %sw.bb9 ], [ 1, %sw.bb6 ], [ 0, %sw.bb3 ], [ 3, %sw.bb1 ]
  call void @llvm.dbg.value(metadata i32 %shift.0, metadata !9037, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0, metadata !9041, metadata !DIExpression()), !dbg !9042
  br label %for.cond, !dbg !9060

for.cond:                                         ; preds = %for.body, %sw.epilog
  %t2.1 = phi %union.tree_node* [ %t2.0, %sw.epilog ], [ %12, %for.body ]
  %i.0 = phi i32 [ 0, %sw.epilog ], [ %inc, %for.body ], !dbg !9042
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9036, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.1, metadata !9041, metadata !DIExpression()), !dbg !9042
  %tobool = icmp eq %union.tree_node* %t2.1, null, !dbg !9061
  br i1 %tobool, label %for.end, label %for.body, !dbg !9061

for.body:                                         ; preds = %for.cond
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9063
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9036, metadata !DIExpression()), !dbg !9042
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9065
  %12 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !9065
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !9041, metadata !DIExpression()), !dbg !9042
  br label %for.cond, !dbg !9066, !llvm.loop !9067

for.end:                                          ; preds = %for.cond
  %i.0.lcssa = phi i32 [ %i.0, %for.cond ], !dbg !9042
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9036, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9036, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9036, metadata !DIExpression()), !dbg !9042
  %size14 = getelementptr inbounds i8, i8* %p, i64 32, !dbg !9069
  %13 = bitcast i8* %size14 to i64**, !dbg !9069
  %14 = load i64*, i64** %13, align 8, !dbg !9069
  %bf.load16 = load i64, i64* %14, align 8, !dbg !9069
  %bf.cast181 = and i64 %bf.load16, 65535, !dbg !9071
  %cmp = icmp eq i64 %bf.cast181, 23, !dbg !9071
  br i1 %cmp, label %if.else, label %if.end, !dbg !9072

if.else:                                          ; preds = %for.end
  %15 = getelementptr inbounds i64, i64* %14, i64 3, !dbg !9073
  %16 = load i64, i64* %15, align 8, !dbg !9073
  %conv = trunc i64 %16 to i32, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %conv, metadata !9038, metadata !DIExpression()), !dbg !9042
  %phitmp = shl i32 %conv, 24
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %size.0 = phi i32 [ %phitmp, %if.else ], [ 0, %for.end ]
  %shl22 = shl i32 %i.0.lcssa, %shift.0, !dbg !9074
  %or = or i32 %size.0, %shl22, !dbg !9075
  ret i32 %or, !dbg !9049
}

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_sizeof_or_alignof_type(i32 %loc, %union.tree_node* %type, i8 zeroext %is_sizeof, i32 %complain) local_unnamed_addr #5 !dbg !9076 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9080, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9081, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i8 %is_sizeof, metadata !9082, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i32 %complain, metadata !9083, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9085, metadata !DIExpression()), !dbg !9087
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9088
  %bf.load = load i64, i64* %0, align 8, !dbg !9088
  %1 = trunc i64 %bf.load to i16, !dbg !9088
  %tobool = icmp eq i8 %is_sizeof, 0, !dbg !9089
  %cond = select i1 %tobool, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i64 0, i64 0), !dbg !9089
  call void @llvm.dbg.value(metadata i8* %cond, metadata !9084, metadata !DIExpression()), !dbg !9087
  switch i16 %1, label %if.else40 [
    i16 20, label %if.then
    i16 19, label %land.lhs.true25
    i16 0, label %if.else35
  ], !dbg !9090

if.then:                                          ; preds = %entry
  br i1 %tobool, label %if.else13, label %if.then3, !dbg !9091

if.then3:                                         ; preds = %if.then
  %cond2 = icmp eq i32 %complain, 0, !dbg !9094
  br i1 %cond2, label %if.then11, label %land.lhs.true, !dbg !9094

land.lhs.true:                                    ; preds = %if.then3
  %2 = load i32, i32* @pedantic, align 4, !dbg !9098
  %3 = load i32, i32* @warn_pointer_arith, align 4, !dbg !9099
  %4 = or i32 %2, %3, !dbg !9100
  %5 = icmp eq i32 %4, 0, !dbg !9100
  br i1 %5, label %if.else, label %if.then7, !dbg !9100

if.then7:                                         ; preds = %land.lhs.true
  %tobool8 = icmp eq i32 %2, 0, !dbg !9101
  %cond9 = select i1 %tobool8, i32 162, i32 834, !dbg !9101
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 %cond9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.259, i64 0, i64 0)) #7, !dbg !9102
  br label %if.end12, !dbg !9102

if.else:                                          ; preds = %land.lhs.true
  br i1 false, label %if.else.if.then11_crit_edge, label %if.end12, !dbg !9103

if.else.if.then11_crit_edge:                      ; preds = %if.else
  br label %if.then11, !dbg !9103

if.then11:                                        ; preds = %if.else.if.then11_crit_edge, %if.then3
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9104
  br label %cleanup, !dbg !9106

if.end12:                                         ; preds = %if.else, %if.then7
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !9107
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %if.end66, !dbg !9108

if.else13:                                        ; preds = %if.then
  %call14 = tail call %union.tree_node* @size_int_kind(i64 1, i32 0) #7, !dbg !9109
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %if.end66

land.lhs.true25:                                  ; preds = %entry
  %cond3 = icmp eq i32 %complain, 0, !dbg !9110
  br i1 %cond3, label %if.then37, label %land.lhs.true27, !dbg !9110

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %8 = load i32, i32* @pedantic, align 4, !dbg !9114
  %9 = load i32, i32* @warn_pointer_arith, align 4, !dbg !9115
  %10 = or i32 %8, %9, !dbg !9116
  %11 = icmp eq i32 %10, 0, !dbg !9116
  br i1 %11, label %if.else35, label %if.then31, !dbg !9116

if.then31:                                        ; preds = %land.lhs.true27
  %tobool32 = icmp eq i32 %8, 0, !dbg !9117
  %cond33 = select i1 %tobool32, i32 162, i32 834, !dbg !9117
  %call34 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 %cond33, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.260, i64 0, i64 0), i8* %cond) #7, !dbg !9118
  br label %if.end39, !dbg !9118

if.else35:                                        ; preds = %land.lhs.true27, %entry
  %tobool36 = icmp eq i32 %complain, 0, !dbg !9119
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !9121

if.then37:                                        ; preds = %if.else35, %land.lhs.true25
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9122
  br label %cleanup, !dbg !9123

if.end39:                                         ; preds = %if.else35, %if.then31
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !9124
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %if.end66, !dbg !9125

if.else40:                                        ; preds = %entry
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9126
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !9126
  %cmp42 = icmp eq %union.tree_node* %15, null, !dbg !9126
  br i1 %cmp42, label %if.then44, label %if.else48, !dbg !9128

if.then44:                                        ; preds = %if.else40
  %tobool45 = icmp eq i32 %complain, 0, !dbg !9129
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !9132

if.then46:                                        ; preds = %if.then44
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.261, i64 0, i64 0), i8* %cond, %union.tree_node* %type) #7, !dbg !9133
  br label %if.end47, !dbg !9133

if.end47:                                         ; preds = %if.then44, %if.then46
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !9134
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %if.end66, !dbg !9135

if.else48:                                        ; preds = %if.else40
  br i1 %tobool, label %if.else58, label %if.then50, !dbg !9136

if.then50:                                        ; preds = %if.else48
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9138
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !9138
  %19 = load %struct.tree_type*, %struct.tree_type** bitcast ([11 x %union.tree_node*]* @integer_types to %struct.tree_type**), align 16, !dbg !9140
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %19, i64 0, i32 6, !dbg !9140
  %bf.load53 = load i32, i32* %precision, align 4, !dbg !9140
  %bf.clear54 = lshr i32 %bf.load53, 3, !dbg !9140
  %div = and i32 %bf.clear54, 127, !dbg !9140
  %conv55 = zext i32 %div to i64, !dbg !9140
  %call56 = tail call %union.tree_node* @size_int_kind(i64 %conv55, i32 0) #7, !dbg !9140
  %call57 = tail call %union.tree_node* @size_binop_loc(i32 %loc, i32 68, %union.tree_node* %18, %union.tree_node* %call56) #7, !dbg !9141
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %if.end66, !dbg !9142

if.else58:                                        ; preds = %if.else48
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9143
  %21 = load i32, i32* %20, align 8, !dbg !9143
  %div60 = lshr i32 %21, 3, !dbg !9143
  %conv61 = zext i32 %div60 to i64, !dbg !9143
  %call62 = tail call %union.tree_node* @size_int_kind(i64 %conv61, i32 0) #7, !dbg !9143
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %if.end66

if.end66:                                         ; preds = %if.end39, %if.then50, %if.else58, %if.end47, %if.end12, %if.else13
  %value.4 = phi %union.tree_node* [ %7, %if.end12 ], [ %call14, %if.else13 ], [ %13, %if.end39 ], [ %16, %if.end47 ], [ %call57, %if.then50 ], [ %call62, %if.else58 ], !dbg !9144
  call void @llvm.dbg.value(metadata %union.tree_node* %value.4, metadata !9085, metadata !DIExpression()), !dbg !9087
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !9145
  %call67 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %22, %union.tree_node* %value.4) #7, !dbg !9146
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !9085, metadata !DIExpression()), !dbg !9087
  %type68 = getelementptr inbounds %union.tree_node, %union.tree_node* %call67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9147
  %23 = bitcast %union.tree_node** %type68 to %struct.tree_type**, !dbg !9147
  %24 = load %struct.tree_type*, %struct.tree_type** %23, align 8, !dbg !9147
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 6, !dbg !9147
  %bf.load70 = load i32, i32* %no_force_blk_flag, align 4, !dbg !9147
  %bf.clear71 = and i32 %bf.load70, 1024, !dbg !9147
  %tobool72 = icmp eq i32 %bf.clear71, 0, !dbg !9147
  br i1 %tobool72, label %cleanup, label %cond.true, !dbg !9147

cond.true:                                        ; preds = %if.end66
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 4414, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !9147
  br label %cleanup, !dbg !9147

cleanup:                                          ; preds = %if.end66, %cond.true, %if.then37, %if.then11
  %retval.0 = phi %union.tree_node* [ %6, %if.then11 ], [ %12, %if.then37 ], [ %call67, %if.end66 ], [ %call67, %cond.true ], !dbg !9087
  ret %union.tree_node* %retval.0, !dbg !9148
}

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_alignof_expr(i32 %loc, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !9149 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9151, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !9152, metadata !DIExpression()), !dbg !9164
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9165
  %bf.load = load i64, i64* %0, align 8, !dbg !9165
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9165
  %cmp = icmp eq i64 %bf.cast2, 32, !dbg !9165
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9165

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast2, 29, !dbg !9165
  br i1 %cmp5, label %if.then, label %if.else, !dbg !9166

if.then:                                          ; preds = %lor.lhs.false, %entry
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9167
  %1 = load i32, i32* %align, align 8, !dbg !9167
  %div = lshr i32 %1, 3, !dbg !9167
  %conv = zext i32 %div to i64, !dbg !9167
  %call = tail call %union.tree_node* @size_int_kind(i64 %conv, i32 0) #7, !dbg !9167
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9153, metadata !DIExpression()), !dbg !9164
  br label %if.end108, !dbg !9168

if.else:                                          ; preds = %lor.lhs.false
  %cmp10 = icmp eq i64 %bf.cast2, 41, !dbg !9169
  br i1 %cmp10, label %land.lhs.true, label %if.else19, !dbg !9170

land.lhs.true:                                    ; preds = %if.else
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9171
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9171
  %2 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_common**, !dbg !9171
  %3 = load %struct.tree_decl_common*, %struct.tree_decl_common** %2, align 8, !dbg !9171
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %3, i64 0, i32 2, !dbg !9171
  %4 = bitcast i40* %lang_flag_4 to i64*, !dbg !9171
  %bf.load13 = load i64, i64* %4, align 8, !dbg !9171
  %bf.cast1511 = and i64 %bf.load13, 524288, !dbg !9171
  %cmp16 = icmp eq i64 %bf.cast1511, 0, !dbg !9171
  br i1 %cmp16, label %if.else19, label %if.then18, !dbg !9172

if.then18:                                        ; preds = %land.lhs.true
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.262, i64 0, i64 0)) #7, !dbg !9173
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !9175
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9153, metadata !DIExpression()), !dbg !9164
  br label %if.end108, !dbg !9176

if.else19:                                        ; preds = %land.lhs.true, %if.else
  br i1 %cmp10, label %land.lhs.true26, label %if.else45, !dbg !9177

land.lhs.true26:                                  ; preds = %if.else19
  %operands28 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9178
  %arrayidx29 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands28, i64 1, !dbg !9178
  %6 = bitcast %union.tree_node** %arrayidx29 to i64**, !dbg !9178
  %7 = load i64*, i64** %6, align 8, !dbg !9178
  %bf.load31 = load i64, i64* %7, align 8, !dbg !9178
  %bf.cast3310 = and i64 %bf.load31, 65535, !dbg !9179
  %cmp34 = icmp eq i64 %bf.cast3310, 31, !dbg !9179
  br i1 %cmp34, label %if.then36, label %if.else45, !dbg !9180

if.then36:                                        ; preds = %land.lhs.true26
  %align41 = getelementptr inbounds i64, i64* %7, i64 8, !dbg !9181
  %8 = bitcast i64* %align41 to i32*, !dbg !9181
  %9 = load i32, i32* %8, align 8, !dbg !9181
  %div42 = lshr i32 %9, 3, !dbg !9181
  %conv43 = zext i32 %div42 to i64, !dbg !9181
  %call44 = tail call %union.tree_node* @size_int_kind(i64 %conv43, i32 0) #7, !dbg !9181
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !9153, metadata !DIExpression()), !dbg !9164
  br label %if.end108

if.else45:                                        ; preds = %land.lhs.true26, %if.else19
  %cmp50 = icmp eq i64 %bf.cast2, 47, !dbg !9182
  br i1 %cmp50, label %if.then52, label %if.else102, !dbg !9183

if.then52:                                        ; preds = %if.else45
  %operands55 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9184
  %10 = load %union.tree_node*, %union.tree_node** %operands55, align 8, !dbg !9184
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !9154, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !9160, metadata !DIExpression()), !dbg !9185
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9186
  %11 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !9186
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !9186
  %type58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !9186
  %13 = bitcast %union.tree_node** %type58 to %struct.tree_type**, !dbg !9186
  %14 = load %struct.tree_type*, %struct.tree_type** %13, align 8, !dbg !9186
  %align60 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %14, i64 0, i32 7, !dbg !9186
  %15 = load i32, i32* %align60, align 8, !dbg !9186
  call void @llvm.dbg.value(metadata i32 %15, metadata !9161, metadata !DIExpression()), !dbg !9185
  br label %while.cond, !dbg !9187

while.cond:                                       ; preds = %while.body, %if.then52
  %best.0 = phi %union.tree_node* [ %10, %if.then52 ], [ %spec.select, %while.body ], !dbg !9185
  %t53.0 = phi %union.tree_node* [ %10, %if.then52 ], [ %21, %while.body ], !dbg !9185
  %bestalign.0 = phi i32 [ %15, %if.then52 ], [ %spec.select1, %while.body ], !dbg !9185
  call void @llvm.dbg.value(metadata i32 %bestalign.0, metadata !9161, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %t53.0, metadata !9154, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %best.0, metadata !9160, metadata !DIExpression()), !dbg !9185
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %t53.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9188
  %bf.load62 = load i64, i64* %16, align 8, !dbg !9188
  %bf.cast647 = and i64 %bf.load62, 65535, !dbg !9188
  %cmp65 = icmp eq i64 %bf.cast647, 116, !dbg !9188
  %cmp72 = icmp eq i64 %bf.cast647, 113, !dbg !9188
  %or.cond = or i1 %cmp65, %cmp72, !dbg !9188
  br i1 %or.cond, label %land.rhs, label %while.end, !dbg !9188

land.rhs:                                         ; preds = %while.cond
  %operands75 = getelementptr inbounds %union.tree_node, %union.tree_node* %t53.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9189
  %17 = bitcast %union.tree_node** %operands75 to %struct.tree_common**, !dbg !9189
  %18 = load %struct.tree_common*, %struct.tree_common** %17, align 8, !dbg !9189
  %type78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !9189
  %19 = bitcast %union.tree_node** %type78 to i64**, !dbg !9189
  %20 = load i64*, i64** %19, align 8, !dbg !9189
  %bf.load80 = load i64, i64* %20, align 8, !dbg !9189
  %bf.cast829 = and i64 %bf.load80, 65535, !dbg !9190
  %cmp83 = icmp eq i64 %bf.cast829, 10, !dbg !9190
  %21 = bitcast %struct.tree_common* %18 to %union.tree_node*, !dbg !9187
  br i1 %cmp83, label %while.body, label %while.end, !dbg !9187

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !9154, metadata !DIExpression()), !dbg !9185
  %type91 = getelementptr inbounds i64, i64* %20, i64 2, !dbg !9191
  %22 = bitcast i64* %type91 to %struct.tree_type**, !dbg !9191
  %23 = load %struct.tree_type*, %struct.tree_type** %22, align 8, !dbg !9191
  %align93 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %23, i64 0, i32 7, !dbg !9191
  %24 = load i32, i32* %align93, align 8, !dbg !9191
  call void @llvm.dbg.value(metadata i32 %24, metadata !9162, metadata !DIExpression()), !dbg !9192
  %cmp94 = icmp sgt i32 %24, %bestalign.0, !dbg !9193
  %spec.select = select i1 %cmp94, %union.tree_node* %21, %union.tree_node* %best.0, !dbg !9195
  %spec.select1 = select i1 %cmp94, i32 %24, i32 %bestalign.0, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !9161, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !9160, metadata !DIExpression()), !dbg !9185
  br label %while.cond, !dbg !9187, !llvm.loop !9196

while.end:                                        ; preds = %while.cond, %land.rhs
  %best.0.lcssa = phi %union.tree_node* [ %best.0, %while.cond ], [ %best.0, %land.rhs ], !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %best.0.lcssa, metadata !9160, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %best.0.lcssa, metadata !9160, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %best.0.lcssa, metadata !9160, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %best.0.lcssa, metadata !9160, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %best.0.lcssa, metadata !9160, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %best.0.lcssa, metadata !9160, metadata !DIExpression()), !dbg !9185
  %type98 = getelementptr inbounds %union.tree_node, %union.tree_node* %best.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9198
  %25 = bitcast %union.tree_node** %type98 to %struct.tree_common**, !dbg !9198
  %26 = load %struct.tree_common*, %struct.tree_common** %25, align 8, !dbg !9198
  %type100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %26, i64 0, i32 2, !dbg !9198
  %27 = load %union.tree_node*, %union.tree_node** %type100, align 8, !dbg !9198
  %call101 = tail call %union.tree_node* @c_sizeof_or_alignof_type(i32 %loc, %union.tree_node* %27, i8 zeroext 0, i32 1) #8, !dbg !9198
  br label %cleanup

if.else102:                                       ; preds = %if.else45
  %type104 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9199
  %28 = load %union.tree_node*, %union.tree_node** %type104, align 8, !dbg !9199
  %call105 = tail call %union.tree_node* @c_sizeof_or_alignof_type(i32 %loc, %union.tree_node* %28, i8 zeroext 0, i32 1) #8, !dbg !9199
  br label %cleanup, !dbg !9200

if.end108:                                        ; preds = %if.then18, %if.then36, %if.then
  %t.1 = phi %union.tree_node* [ %call, %if.then ], [ %5, %if.then18 ], [ %call44, %if.then36 ], !dbg !9201
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !9153, metadata !DIExpression()), !dbg !9164
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !9202
  %call109 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %29, %union.tree_node* %t.1) #7, !dbg !9203
  br label %cleanup, !dbg !9204

cleanup:                                          ; preds = %if.end108, %if.else102, %while.end
  %retval.0 = phi %union.tree_node* [ %call109, %if.end108 ], [ %call101, %while.end ], [ %call105, %if.else102 ], !dbg !9164
  ret %union.tree_node* %retval.0, !dbg !9205
}

; Function Attrs: nounwind uwtable
define dso_local void @c_common_nodes_and_builtins() local_unnamed_addr #5 !dbg !9206 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9220
  tail call void @record_builtin_type(i32 28, i8* null, %union.tree_node* %0) #7, !dbg !9221
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !9222
  tail call void @record_builtin_type(i32 29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %union.tree_node* %1) #7, !dbg !9223
  %2 = load i32, i32* @c_language, align 4, !dbg !9224
  %and = and i32 %2, 2, !dbg !9224
  %cmp = icmp eq i32 %and, 0, !dbg !9224
  br i1 %cmp, label %if.end, label %if.then, !dbg !9226

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9227
  tail call void @record_builtin_type(i32 10, i8* null, %union.tree_node* %3) #7, !dbg !9228
  br label %if.end, !dbg !9228

if.end:                                           ; preds = %entry, %if.then
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !9229
  tail call void @record_builtin_type(i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.263, i64 0, i64 0), %union.tree_node* %4) #7, !dbg !9230
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !9231
  tail call void @record_builtin_type(i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), %union.tree_node* %5) #7, !dbg !9232
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !9233
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.265, i64 0, i64 0), %union.tree_node* %6) #7, !dbg !9234
  %7 = load i32, i32* @c_language, align 4, !dbg !9235
  %and1 = and i32 %7, 2, !dbg !9235
  %cmp2 = icmp eq i32 %and1, 0, !dbg !9235
  br i1 %cmp2, label %if.end4, label %if.then3, !dbg !9237

if.then3:                                         ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !9238
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.266, i64 0, i64 0), %union.tree_node* %8) #7, !dbg !9239
  br label %if.end4, !dbg !9239

if.end4:                                          ; preds = %if.end, %if.then3
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !9240
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0), %union.tree_node* %9) #7, !dbg !9241
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !9242
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0), %union.tree_node* %10) #7, !dbg !9243
  %11 = load i32, i32* @c_language, align 4, !dbg !9244
  %and5 = and i32 %11, 2, !dbg !9244
  %cmp6 = icmp eq i32 %and5, 0, !dbg !9244
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !9246

if.then7:                                         ; preds = %if.end4
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !9247
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.269, i64 0, i64 0), %union.tree_node* %12) #7, !dbg !9248
  br label %if.end8, !dbg !9248

if.end8:                                          ; preds = %if.end4, %if.then7
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !dbg !9249
  tail call void @record_builtin_type(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i64 0, i64 0), %union.tree_node* %13) #7, !dbg !9250
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !9251
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0), %union.tree_node* %14) #7, !dbg !9252
  %15 = load i32, i32* @c_language, align 4, !dbg !9253
  %and9 = and i32 %15, 2, !dbg !9253
  %cmp10 = icmp eq i32 %and9, 0, !dbg !9253
  br i1 %cmp10, label %if.end12, label %if.then11, !dbg !9255

if.then11:                                        ; preds = %if.end8
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !9256
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), %union.tree_node* %16) #7, !dbg !9257
  br label %if.end12, !dbg !9257

if.end12:                                         ; preds = %if.end8, %if.then11
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !9258
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0), %union.tree_node* %17) #7, !dbg !9259
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !9260
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0), %union.tree_node* %18) #7, !dbg !9261
  %19 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9262
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 1), align 8, !dbg !9263
  %call = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %20) #7, !dbg !9263
  %call13 = tail call %union.tree_node* %19(%union.tree_node* %call) #7, !dbg !9264
  %21 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9265
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 2), align 16, !dbg !9266
  %call14 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %22) #7, !dbg !9266
  %call15 = tail call %union.tree_node* %21(%union.tree_node* %call14) #7, !dbg !9267
  %23 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9268
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 3), align 8, !dbg !9269
  %call16 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %24) #7, !dbg !9269
  %call17 = tail call %union.tree_node* %23(%union.tree_node* %call16) #7, !dbg !9270
  %25 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9271
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 4), align 16, !dbg !9272
  %call18 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %26) #7, !dbg !9272
  %call19 = tail call %union.tree_node* %25(%union.tree_node* %call18) #7, !dbg !9273
  %27 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !9274
  %call20 = tail call zeroext i8 %27(i32 18) #7, !dbg !9276
  %tobool = icmp eq i8 %call20, 0, !dbg !9276
  br i1 %tobool, label %if.end25, label %if.then21, !dbg !9277

if.then21:                                        ; preds = %if.end12
  %28 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9278
  %call22 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.275, i64 0, i64 0)) #7, !dbg !9279
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 5), align 8, !dbg !9279
  %call23 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call22, %union.tree_node* %29) #7, !dbg !9279
  %call24 = tail call %union.tree_node* %28(%union.tree_node* %call23) #7, !dbg !9280
  br label %if.end25, !dbg !9280

if.end25:                                         ; preds = %if.end12, %if.then21
  %30 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9281
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 6), align 16, !dbg !9282
  %call26 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %31) #7, !dbg !9282
  %call27 = tail call %union.tree_node* %30(%union.tree_node* %call26) #7, !dbg !9283
  %32 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9284
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 7), align 8, !dbg !9285
  %call28 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %33) #7, !dbg !9285
  %call29 = tail call %union.tree_node* %32(%union.tree_node* %call28) #7, !dbg !9286
  %34 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9287
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 8), align 16, !dbg !9288
  %call30 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %35) #7, !dbg !9288
  %call31 = tail call %union.tree_node* %34(%union.tree_node* %call30) #7, !dbg !9289
  %36 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9290
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 9), align 8, !dbg !9291
  %call32 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %37) #7, !dbg !9291
  %call33 = tail call %union.tree_node* %36(%union.tree_node* %call32) #7, !dbg !9292
  %38 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !9293
  %call34 = tail call zeroext i8 %38(i32 18) #7, !dbg !9295
  %tobool35 = icmp eq i8 %call34, 0, !dbg !9295
  br i1 %tobool35, label %if.end40, label %if.then36, !dbg !9296

if.then36:                                        ; preds = %if.end25
  %39 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9297
  %call37 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.276, i64 0, i64 0)) #7, !dbg !9298
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 10), align 16, !dbg !9298
  %call38 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call37, %union.tree_node* %40) #7, !dbg !9298
  %call39 = tail call %union.tree_node* %39(%union.tree_node* %call38) #7, !dbg !9299
  br label %if.end40, !dbg !9299

if.end40:                                         ; preds = %if.end25, %if.then36
  %call41 = tail call %union.tree_node* @make_signed_type(i32 128) #7, !dbg !9300
  store %union.tree_node* %call41, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 9), align 8, !dbg !9301
  %41 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9302
  %call42 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %call41) #7, !dbg !9303
  %call43 = tail call %union.tree_node* %41(%union.tree_node* %call42) #7, !dbg !9304
  %call44 = tail call %union.tree_node* @make_unsigned_type(i32 128) #7, !dbg !9305
  store %union.tree_node* %call44, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 10), align 16, !dbg !9306
  %42 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9307
  %call45 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* null, %union.tree_node* %call44) #7, !dbg !9308
  %call46 = tail call %union.tree_node* %42(%union.tree_node* %call45) #7, !dbg !9309
  %call47 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0)) #7, !dbg !9310
  %call48 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call47) #7, !dbg !9310
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9310
  %43 = bitcast %union.tree_node** %type to i64*, !dbg !9310
  %44 = load i64, i64* %43, align 8, !dbg !9310
  store i64 %44, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41) to i64*), align 8, !dbg !9311
  %.cast = inttoptr i64 %44 to %union.tree_node*, !dbg !9312
  %call49 = tail call %union.tree_node* @c_common_signed_type(%union.tree_node* %.cast) #8, !dbg !9313
  store %union.tree_node* %call49, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 5), align 8, !dbg !9314
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !9315
  tail call void @set_sizetype(%union.tree_node* %45) #7, !dbg !9316
  %call50 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #7, !dbg !9317
  %call51 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call50) #7, !dbg !9317
  %type53 = getelementptr inbounds %union.tree_node, %union.tree_node* %call51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9317
  %46 = bitcast %union.tree_node** %type53 to i64*, !dbg !9317
  %47 = load i64, i64* %46, align 8, !dbg !9317
  store i64 %47, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 42) to i64*), align 16, !dbg !9318
  %48 = load i32, i32* @flag_short_double, align 4, !dbg !9319
  tail call void @build_common_tree_nodes_2(i32 %48) #7, !dbg !9320
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !9321
  tail call void @record_builtin_type(i32 30, i8* null, %union.tree_node* %49) #7, !dbg !9322
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !9323
  tail call void @record_builtin_type(i32 31, i8* null, %union.tree_node* %50) #7, !dbg !9324
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !9325
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.277, i64 0, i64 0), %union.tree_node* %51) #7, !dbg !9326
  %52 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !9327
  %call54 = tail call zeroext i8 %52(i32 42) #7, !dbg !9329
  %tobool55 = icmp eq i8 %call54, 0, !dbg !9329
  br i1 %tobool55, label %if.end64, label %land.lhs.true, !dbg !9330

land.lhs.true:                                    ; preds = %if.end40
  %53 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !9331
  %call56 = tail call zeroext i8 %53(i32 43) #7, !dbg !9332
  %tobool58 = icmp eq i8 %call56, 0, !dbg !9332
  br i1 %tobool58, label %if.end64, label %land.lhs.true59, !dbg !9333

land.lhs.true59:                                  ; preds = %land.lhs.true
  %54 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !9334
  %call60 = tail call zeroext i8 %54(i32 44) #7, !dbg !9335
  %tobool62 = icmp eq i8 %call60, 0, !dbg !9335
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !9336

if.then63:                                        ; preds = %land.lhs.true59
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49), align 8, !dbg !9337
  tail call void @record_builtin_type(i32 60, i8* null, %union.tree_node* %55) #7, !dbg !9339
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 16, !dbg !9340
  tail call void @record_builtin_type(i32 61, i8* null, %union.tree_node* %56) #7, !dbg !9341
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51), align 8, !dbg !9342
  tail call void @record_builtin_type(i32 62, i8* null, %union.tree_node* %57) #7, !dbg !9343
  br label %if.end64, !dbg !9344

if.end64:                                         ; preds = %land.lhs.true59, %land.lhs.true, %if.end40, %if.then63
  %58 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 20), align 8, !dbg !9345
  %call65 = tail call zeroext i8 %58() #7, !dbg !9347
  %tobool66 = icmp eq i8 %call65, 0, !dbg !9347
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !9348

if.then67:                                        ; preds = %if.end64
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 65), align 8, !dbg !9349
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.278, i64 0, i64 0), %union.tree_node* %59) #7, !dbg !9351
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 66), align 16, !dbg !9352
  tail call void @record_builtin_type(i32 63, i8* null, %union.tree_node* %60) #7, !dbg !9353
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 67), align 8, !dbg !9354
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.279, i64 0, i64 0), %union.tree_node* %61) #7, !dbg !9355
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 68), align 16, !dbg !9356
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.280, i64 0, i64 0), %union.tree_node* %62) #7, !dbg !9357
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 69), align 8, !dbg !9358
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.281, i64 0, i64 0), %union.tree_node* %63) #7, !dbg !9359
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 70), align 16, !dbg !9360
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.282, i64 0, i64 0), %union.tree_node* %64) #7, !dbg !9361
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 71), align 8, !dbg !9362
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.283, i64 0, i64 0), %union.tree_node* %65) #7, !dbg !9363
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 72), align 16, !dbg !9364
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.284, i64 0, i64 0), %union.tree_node* %66) #7, !dbg !9365
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 57), align 8, !dbg !9366
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.285, i64 0, i64 0), %union.tree_node* %67) #7, !dbg !9367
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 58), align 16, !dbg !9368
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.286, i64 0, i64 0), %union.tree_node* %68) #7, !dbg !9369
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 59), align 8, !dbg !9370
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.287, i64 0, i64 0), %union.tree_node* %69) #7, !dbg !9371
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 60), align 16, !dbg !9372
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.288, i64 0, i64 0), %union.tree_node* %70) #7, !dbg !9373
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 61), align 8, !dbg !9374
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.289, i64 0, i64 0), %union.tree_node* %71) #7, !dbg !9375
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 62), align 16, !dbg !9376
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.290, i64 0, i64 0), %union.tree_node* %72) #7, !dbg !9377
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 63), align 8, !dbg !9378
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.291, i64 0, i64 0), %union.tree_node* %73) #7, !dbg !9379
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 64), align 16, !dbg !9380
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.292, i64 0, i64 0), %union.tree_node* %74) #7, !dbg !9381
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 81), align 8, !dbg !9382
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.293, i64 0, i64 0), %union.tree_node* %75) #7, !dbg !9383
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 82), align 16, !dbg !9384
  tail call void @record_builtin_type(i32 64, i8* null, %union.tree_node* %76) #7, !dbg !9385
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 83), align 8, !dbg !9386
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.294, i64 0, i64 0), %union.tree_node* %77) #7, !dbg !9387
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 84), align 16, !dbg !9388
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.295, i64 0, i64 0), %union.tree_node* %78) #7, !dbg !9389
  %79 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 85), align 8, !dbg !9390
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.296, i64 0, i64 0), %union.tree_node* %79) #7, !dbg !9391
  %80 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 86), align 16, !dbg !9392
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.297, i64 0, i64 0), %union.tree_node* %80) #7, !dbg !9393
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 87), align 8, !dbg !9394
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.298, i64 0, i64 0), %union.tree_node* %81) #7, !dbg !9395
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 88), align 16, !dbg !9396
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.299, i64 0, i64 0), %union.tree_node* %82) #7, !dbg !9397
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 73), align 8, !dbg !9398
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.300, i64 0, i64 0), %union.tree_node* %83) #7, !dbg !9399
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 74), align 16, !dbg !9400
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.301, i64 0, i64 0), %union.tree_node* %84) #7, !dbg !9401
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 75), align 8, !dbg !9402
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.302, i64 0, i64 0), %union.tree_node* %85) #7, !dbg !9403
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 76), align 16, !dbg !9404
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.303, i64 0, i64 0), %union.tree_node* %86) #7, !dbg !9405
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 77), align 8, !dbg !9406
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.304, i64 0, i64 0), %union.tree_node* %87) #7, !dbg !9407
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 78), align 16, !dbg !9408
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.305, i64 0, i64 0), %union.tree_node* %88) #7, !dbg !9409
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 79), align 8, !dbg !9410
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.306, i64 0, i64 0), %union.tree_node* %89) #7, !dbg !9411
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 80), align 16, !dbg !9412
  tail call void @record_builtin_type(i32 152, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.307, i64 0, i64 0), %union.tree_node* %90) #7, !dbg !9413
  br label %if.end68, !dbg !9414

if.end68:                                         ; preds = %if.end64, %if.then67
  %91 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9415
  %call69 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.308, i64 0, i64 0)) #7, !dbg !9416
  %92 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !dbg !9416
  %call70 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call69, %union.tree_node* %92) #7, !dbg !9416
  %call71 = tail call %union.tree_node* %91(%union.tree_node* %call70) #7, !dbg !9417
  %93 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9418
  %call72 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.309, i64 0, i64 0)) #7, !dbg !9419
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 16, !dbg !9419
  %call73 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call72, %union.tree_node* %94) #7, !dbg !9419
  %call74 = tail call %union.tree_node* %93(%union.tree_node* %call73) #7, !dbg !9420
  %95 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9421
  %call75 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.310, i64 0, i64 0)) #7, !dbg !9422
  %96 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 29), align 8, !dbg !9422
  %call76 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call75, %union.tree_node* %96) #7, !dbg !9422
  %call77 = tail call %union.tree_node* %95(%union.tree_node* %call76) #7, !dbg !9423
  %97 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9424
  %call78 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.311, i64 0, i64 0)) #7, !dbg !9425
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 30), align 16, !dbg !9425
  %call79 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call78, %union.tree_node* %98) #7, !dbg !9425
  %call80 = tail call %union.tree_node* %97(%union.tree_node* %call79) #7, !dbg !9426
  %99 = load i32, i32* @c_language, align 4, !dbg !9427
  %and81 = and i32 %99, 2, !dbg !9427
  %cmp82 = icmp eq i32 %and81, 0, !dbg !9427
  br i1 %cmp82, label %if.end86, label %if.then84, !dbg !9429

if.then84:                                        ; preds = %if.end68
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !9430
  %call85 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %100) #7, !dbg !9431
  store %union.tree_node* %call85, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 48), align 16, !dbg !9432
  br label %if.end86, !dbg !9433

if.end86:                                         ; preds = %if.end68, %if.then84
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9434
  tail call void @record_builtin_type(i32 32, i8* null, %union.tree_node* %101) #7, !dbg !9435
  %102 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to %struct.tree_type**), align 16, !dbg !9436
  %name = getelementptr inbounds %struct.tree_type, %struct.tree_type* %102, i64 0, i32 12, !dbg !9436
  %103 = bitcast %union.tree_node** %name to i64*, !dbg !9436
  %104 = load i64, i64* %103, align 8, !dbg !9436
  store %union.tree_node* null, %union.tree_node** %name, align 8, !dbg !9437
  %105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9438
  %call90 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %105, i32 1) #7, !dbg !9438
  %106 = getelementptr inbounds %union.tree_node, %union.tree_node* %call90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !9438
  %107 = bitcast %union.tree_node** %106 to i64*, !dbg !9439
  store i64 %104, i64* %107, align 8, !dbg !9439
  %108 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to %struct.tree_type**), align 16, !dbg !9440
  %name94 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %108, i64 0, i32 12, !dbg !9440
  %109 = bitcast %union.tree_node** %name94 to i64*, !dbg !9441
  store i64 %104, i64* %109, align 8, !dbg !9441
  %call95 = tail call %union.tree_node* @make_node_stat(i32 23) #7, !dbg !9442
  store %union.tree_node* %call95, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 53), align 8, !dbg !9443
  %110 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !9444
  %type97 = getelementptr inbounds %union.tree_node, %union.tree_node* %call95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9445
  %111 = bitcast %union.tree_node** %type97 to i64*, !dbg !9446
  store i64 %110, i64* %111, align 8, !dbg !9446
  %call98 = tail call %union.tree_node* @build_void_list_node() #7, !dbg !9447
  store %union.tree_node* %call98, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !9448
  %call99 = tail call %union.tree_node* @size_int_kind(i64 200, i32 0) #7, !dbg !9449
  %call100 = tail call %union.tree_node* @build_index_type(%union.tree_node* %call99) #7, !dbg !9450
  call void @llvm.dbg.value(metadata %union.tree_node* %call100, metadata !9211, metadata !DIExpression()), !dbg !9451
  %112 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !9452
  %call101 = tail call %union.tree_node* @build_array_type(%union.tree_node* %112, %union.tree_node* %call100) #7, !dbg !9453
  store %union.tree_node* %call101, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 38), align 16, !dbg !9454
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9455
  %call102 = tail call %union.tree_node* @build_array_type(%union.tree_node* %113, %union.tree_node* %call100) #7, !dbg !9456
  store %union.tree_node* %call102, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 42), align 16, !dbg !9457
  %114 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !9458
  %call103 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %114) #7, !dbg !9459
  store %union.tree_node* %call103, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 43), align 8, !dbg !9460
  %115 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !9461
  %call104 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %115, i32 1) #7, !dbg !9462
  %call105 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call104) #7, !dbg !9463
  store %union.tree_node* %call105, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 44), align 16, !dbg !9464
  %116 = load i32, i32* @flag_short_wchar, align 4, !dbg !9465
  %tobool106 = icmp eq i32 %116, 0, !dbg !9465
  %cond = select i1 %tobool106, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.263, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0), !dbg !9465
  %call107 = tail call %union.tree_node* @get_identifier(i8* %cond) #7, !dbg !9466
  store %union.tree_node* %call107, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 2), align 16, !dbg !9467
  %call108 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call107) #7, !dbg !9468
  %type110 = getelementptr inbounds %union.tree_node, %union.tree_node* %call108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9468
  %117 = bitcast %union.tree_node** %type110 to i64*, !dbg !9468
  %118 = load i64, i64* %117, align 8, !dbg !9468
  store i64 %118, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 2) to i64*), align 16, !dbg !9469
  %.cast2 = inttoptr i64 %118 to %struct.tree_type*, !dbg !9470
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast2, i64 0, i32 6, !dbg !9470
  %bf.load = load i32, i32* %precision, align 4, !dbg !9470
  %bf.clear = and i32 %bf.load, 1023, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !9210, metadata !DIExpression()), !dbg !9451
  store i64 %118, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 3) to i64*), align 8, !dbg !9471
  %119 = load i32, i32* @c_language, align 4, !dbg !9472
  %and112 = and i32 %119, 2, !dbg !9472
  %cmp113 = icmp eq i32 %and112, 0, !dbg !9472
  %120 = inttoptr i64 %118 to %union.tree_node*, !dbg !9474
  br i1 %cmp113, label %if.end123, label %if.then115, !dbg !9474

if.then115:                                       ; preds = %if.end86
  %121 = inttoptr i64 %118 to i64*, !dbg !9474
  %bf.load116 = load i64, i64* %121, align 8, !dbg !9475
  %bf.cast8 = and i64 %bf.load116, 2097152, !dbg !9475
  %tobool118 = icmp eq i64 %bf.cast8, 0, !dbg !9475
  br i1 %tobool118, label %if.else, label %if.then119, !dbg !9478

if.then119:                                       ; preds = %if.then115
  %call120 = tail call %union.tree_node* @make_unsigned_type(i32 %bf.clear) #7, !dbg !9479
  br label %if.end122, !dbg !9480

if.else:                                          ; preds = %if.then115
  %call121 = tail call %union.tree_node* @make_signed_type(i32 %bf.clear) #7, !dbg !9481
  br label %if.end122

if.end122:                                        ; preds = %if.else, %if.then119
  %storemerge = phi %union.tree_node* [ %call121, %if.else ], [ %call120, %if.then119 ], !dbg !9482
  store %union.tree_node* %storemerge, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 2), align 16, !dbg !9482
  tail call void @record_builtin_type(i32 70, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i64 0, i64 0), %union.tree_node* %storemerge) #7, !dbg !9483
  %.pre = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 2), align 16, !dbg !9484
  br label %if.end123, !dbg !9485

if.end123:                                        ; preds = %if.end86, %if.end122
  %122 = phi %union.tree_node* [ %120, %if.end86 ], [ %.pre, %if.end122 ], !dbg !9484
  %call124 = tail call %union.tree_node* @build_array_type(%union.tree_node* %122, %union.tree_node* %call100) #7, !dbg !9486
  store %union.tree_node* %call124, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 41), align 8, !dbg !9487
  %call125 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0)) #7, !dbg !9488
  store %union.tree_node* %call125, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 0), align 16, !dbg !9489
  %call126 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call125) #7, !dbg !9490
  %type128 = getelementptr inbounds %union.tree_node, %union.tree_node* %call126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9490
  %123 = bitcast %union.tree_node** %type128 to i64*, !dbg !9490
  %124 = load i64, i64* %123, align 8, !dbg !9490
  store i64 %124, i64* bitcast ([55 x %union.tree_node*]* @c_global_trees to i64*), align 16, !dbg !9491
  call void @llvm.dbg.value(metadata i32 undef, metadata !9208, metadata !DIExpression(DW_OP_constu, 1023, DW_OP_and, DW_OP_stack_value)), !dbg !9451
  %125 = load i32, i32* @c_language, align 4, !dbg !9492
  %and133 = and i32 %125, 2, !dbg !9492
  %cmp134 = icmp eq i32 %and133, 0, !dbg !9492
  %126 = inttoptr i64 %124 to %union.tree_node*, !dbg !9494
  br i1 %cmp134, label %if.end142, label %if.then136, !dbg !9494

if.then136:                                       ; preds = %if.end123
  %.cast3 = inttoptr i64 %124 to %struct.tree_type*, !dbg !9495
  %precision130 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast3, i64 0, i32 6, !dbg !9495
  %bf.load131 = load i32, i32* %precision130, align 4, !dbg !9495
  call void @llvm.dbg.value(metadata i32 %bf.load131, metadata !9208, metadata !DIExpression(DW_OP_constu, 1023, DW_OP_and, DW_OP_stack_value)), !dbg !9451
  %bf.clear132 = and i32 %bf.load131, 1023, !dbg !9495
  call void @llvm.dbg.value(metadata i32 %bf.clear132, metadata !9208, metadata !DIExpression()), !dbg !9451
  %call137 = tail call %union.tree_node* @make_unsigned_type(i32 %bf.clear132) #7, !dbg !9496
  store %union.tree_node* %call137, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 0), align 16, !dbg !9498
  %127 = load i32, i32* @cxx_dialect, align 4, !dbg !9499
  %cmp138 = icmp eq i32 %127, 1, !dbg !9501
  br i1 %cmp138, label %if.then140, label %if.end142, !dbg !9502

if.then140:                                       ; preds = %if.then136
  tail call void @record_builtin_type(i32 91, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i64 0, i64 0), %union.tree_node* %call137) #7, !dbg !9503
  %.pre9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 0), align 16, !dbg !9504
  br label %if.end142, !dbg !9503

if.end142:                                        ; preds = %if.end123, %if.then136, %if.then140
  %128 = phi %union.tree_node* [ %126, %if.end123 ], [ %call137, %if.then136 ], [ %.pre9, %if.then140 ], !dbg !9504
  %call143 = tail call %union.tree_node* @build_array_type(%union.tree_node* %128, %union.tree_node* %call100) #7, !dbg !9505
  store %union.tree_node* %call143, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 39), align 8, !dbg !9506
  %call144 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0)) #7, !dbg !9507
  store %union.tree_node* %call144, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 1), align 8, !dbg !9508
  %call145 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call144) #7, !dbg !9509
  %type147 = getelementptr inbounds %union.tree_node, %union.tree_node* %call145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9509
  %129 = bitcast %union.tree_node** %type147 to i64*, !dbg !9509
  %130 = load i64, i64* %129, align 8, !dbg !9509
  store i64 %130, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 1) to i64*), align 8, !dbg !9510
  call void @llvm.dbg.value(metadata i32 undef, metadata !9209, metadata !DIExpression(DW_OP_constu, 1023, DW_OP_and, DW_OP_stack_value)), !dbg !9451
  %131 = load i32, i32* @c_language, align 4, !dbg !9511
  %and152 = and i32 %131, 2, !dbg !9511
  %cmp153 = icmp eq i32 %and152, 0, !dbg !9511
  %132 = inttoptr i64 %130 to %union.tree_node*, !dbg !9513
  br i1 %cmp153, label %if.end161, label %if.then155, !dbg !9513

if.then155:                                       ; preds = %if.end142
  %.cast4 = inttoptr i64 %130 to %struct.tree_type*, !dbg !9514
  %precision149 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast4, i64 0, i32 6, !dbg !9514
  %bf.load150 = load i32, i32* %precision149, align 4, !dbg !9514
  call void @llvm.dbg.value(metadata i32 %bf.load150, metadata !9209, metadata !DIExpression(DW_OP_constu, 1023, DW_OP_and, DW_OP_stack_value)), !dbg !9451
  %bf.clear151 = and i32 %bf.load150, 1023, !dbg !9514
  call void @llvm.dbg.value(metadata i32 %bf.clear151, metadata !9209, metadata !DIExpression()), !dbg !9451
  %call156 = tail call %union.tree_node* @make_unsigned_type(i32 %bf.clear151) #7, !dbg !9515
  store %union.tree_node* %call156, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 1), align 8, !dbg !9517
  %133 = load i32, i32* @cxx_dialect, align 4, !dbg !9518
  %cmp157 = icmp eq i32 %133, 1, !dbg !9520
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !9521

if.then159:                                       ; preds = %if.then155
  tail call void @record_builtin_type(i32 92, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i64 0, i64 0), %union.tree_node* %call156) #7, !dbg !9522
  %.pre10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 1), align 8, !dbg !9523
  br label %if.end161, !dbg !9522

if.end161:                                        ; preds = %if.end142, %if.then155, %if.then159
  %134 = phi %union.tree_node* [ %132, %if.end142 ], [ %call156, %if.then155 ], [ %.pre10, %if.then159 ], !dbg !9523
  %call162 = tail call %union.tree_node* @build_array_type(%union.tree_node* %134, %union.tree_node* %call100) #7, !dbg !9524
  store %union.tree_node* %call162, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 40), align 16, !dbg !9525
  %call163 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0)) #7, !dbg !9526
  %call164 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call163) #7, !dbg !9526
  %type166 = getelementptr inbounds %union.tree_node, %union.tree_node* %call164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9526
  %135 = bitcast %union.tree_node** %type166 to i64*, !dbg !9526
  %136 = load i64, i64* %135, align 8, !dbg !9526
  store i64 %136, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 4) to i64*), align 16, !dbg !9527
  %call167 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0)) #7, !dbg !9528
  %call168 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call167) #7, !dbg !9528
  %type170 = getelementptr inbounds %union.tree_node, %union.tree_node* %call168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9528
  %137 = bitcast %union.tree_node** %type170 to i64*, !dbg !9528
  %138 = load i64, i64* %137, align 8, !dbg !9528
  store i64 %138, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 7) to i64*), align 8, !dbg !9529
  %call171 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0)) #7, !dbg !9530
  %call172 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call171) #7, !dbg !9530
  %type174 = getelementptr inbounds %union.tree_node, %union.tree_node* %call172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9530
  %139 = bitcast %union.tree_node** %type174 to i64*, !dbg !9530
  %140 = load i64, i64* %139, align 8, !dbg !9530
  store i64 %140, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 8) to i64*), align 16, !dbg !9531
  %call176 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #8, !dbg !9532
  %call177 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call176) #7, !dbg !9532
  %type179 = getelementptr inbounds %union.tree_node, %union.tree_node* %call177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9532
  %141 = bitcast %union.tree_node** %type179 to i64*, !dbg !9532
  %142 = load i64, i64* %141, align 8, !dbg !9532
  store i64 %142, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 11) to i64*), align 8, !dbg !9534
  %call182 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0)) #8, !dbg !9535
  %call183 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call182) #7, !dbg !9535
  %type185 = getelementptr inbounds %union.tree_node, %union.tree_node* %call183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9535
  %143 = bitcast %union.tree_node** %type185 to i64*, !dbg !9535
  %144 = load i64, i64* %143, align 8, !dbg !9535
  store i64 %144, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 12) to i64*), align 16, !dbg !9537
  %call188 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i64 0, i64 0)) #8, !dbg !9538
  %call189 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call188) #7, !dbg !9538
  %type191 = getelementptr inbounds %union.tree_node, %union.tree_node* %call189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9538
  %145 = bitcast %union.tree_node** %type191 to i64*, !dbg !9538
  %146 = load i64, i64* %145, align 8, !dbg !9538
  store i64 %146, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 13) to i64*), align 8, !dbg !9540
  %call194 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #8, !dbg !9541
  %call195 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call194) #7, !dbg !9541
  %type197 = getelementptr inbounds %union.tree_node, %union.tree_node* %call195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9541
  %147 = bitcast %union.tree_node** %type197 to i64*, !dbg !9541
  %148 = load i64, i64* %147, align 8, !dbg !9541
  store i64 %148, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 14) to i64*), align 16, !dbg !9543
  %call200 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0)) #8, !dbg !9544
  %call201 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call200) #7, !dbg !9544
  %type203 = getelementptr inbounds %union.tree_node, %union.tree_node* %call201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9544
  %149 = bitcast %union.tree_node** %type203 to i64*, !dbg !9544
  %150 = load i64, i64* %149, align 8, !dbg !9544
  store i64 %150, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 15) to i64*), align 8, !dbg !9546
  %call206 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !9547
  %call207 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call206) #7, !dbg !9547
  %type209 = getelementptr inbounds %union.tree_node, %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9547
  %151 = bitcast %union.tree_node** %type209 to i64*, !dbg !9547
  %152 = load i64, i64* %151, align 8, !dbg !9547
  store i64 %152, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 16) to i64*), align 16, !dbg !9549
  %call212 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0)) #8, !dbg !9550
  %call213 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call212) #7, !dbg !9550
  %type215 = getelementptr inbounds %union.tree_node, %union.tree_node* %call213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9550
  %153 = bitcast %union.tree_node** %type215 to i64*, !dbg !9550
  %154 = load i64, i64* %153, align 8, !dbg !9550
  store i64 %154, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 17) to i64*), align 8, !dbg !9552
  %call218 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0)) #8, !dbg !9553
  %call219 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call218) #7, !dbg !9553
  %type221 = getelementptr inbounds %union.tree_node, %union.tree_node* %call219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9553
  %155 = bitcast %union.tree_node** %type221 to i64*, !dbg !9553
  %156 = load i64, i64* %155, align 8, !dbg !9553
  store i64 %156, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 18) to i64*), align 16, !dbg !9555
  %call226 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0)) #8, !dbg !9556
  %call227 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call226) #7, !dbg !9556
  %type229 = getelementptr inbounds %union.tree_node, %union.tree_node* %call227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9556
  %157 = bitcast %union.tree_node** %type229 to i64*, !dbg !9556
  %158 = load i64, i64* %157, align 8, !dbg !9556
  store i64 %158, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 19) to i64*), align 8, !dbg !9558
  %call232 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0)) #8, !dbg !9559
  %call233 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call232) #7, !dbg !9559
  %type235 = getelementptr inbounds %union.tree_node, %union.tree_node* %call233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9559
  %159 = bitcast %union.tree_node** %type235 to i64*, !dbg !9559
  %160 = load i64, i64* %159, align 8, !dbg !9559
  store i64 %160, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 20) to i64*), align 16, !dbg !9561
  %call238 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i64 0, i64 0)) #8, !dbg !9562
  %call239 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call238) #7, !dbg !9562
  %type241 = getelementptr inbounds %union.tree_node, %union.tree_node* %call239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9562
  %161 = bitcast %union.tree_node** %type241 to i64*, !dbg !9562
  %162 = load i64, i64* %161, align 8, !dbg !9562
  store i64 %162, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 21) to i64*), align 8, !dbg !9564
  %call244 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #8, !dbg !9565
  %call245 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call244) #7, !dbg !9565
  %type247 = getelementptr inbounds %union.tree_node, %union.tree_node* %call245, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9565
  %163 = bitcast %union.tree_node** %type247 to i64*, !dbg !9565
  %164 = load i64, i64* %163, align 8, !dbg !9565
  store i64 %164, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 22) to i64*), align 16, !dbg !9567
  %call252 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0)) #8, !dbg !9568
  %call253 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call252) #7, !dbg !9568
  %type255 = getelementptr inbounds %union.tree_node, %union.tree_node* %call253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9568
  %165 = bitcast %union.tree_node** %type255 to i64*, !dbg !9568
  %166 = load i64, i64* %165, align 8, !dbg !9568
  store i64 %166, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 23) to i64*), align 8, !dbg !9570
  %call258 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !9571
  %call259 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call258) #7, !dbg !9571
  %type261 = getelementptr inbounds %union.tree_node, %union.tree_node* %call259, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9571
  %167 = bitcast %union.tree_node** %type261 to i64*, !dbg !9571
  %168 = load i64, i64* %167, align 8, !dbg !9571
  store i64 %168, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 24) to i64*), align 16, !dbg !9573
  %call264 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0)) #8, !dbg !9574
  %call265 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call264) #7, !dbg !9574
  %type267 = getelementptr inbounds %union.tree_node, %union.tree_node* %call265, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9574
  %169 = bitcast %union.tree_node** %type267 to i64*, !dbg !9574
  %170 = load i64, i64* %169, align 8, !dbg !9574
  store i64 %170, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 25) to i64*), align 8, !dbg !9576
  %call270 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0)) #8, !dbg !9577
  %call271 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call270) #7, !dbg !9577
  %type273 = getelementptr inbounds %union.tree_node, %union.tree_node* %call271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9577
  %171 = bitcast %union.tree_node** %type273 to i64*, !dbg !9577
  %172 = load i64, i64* %171, align 8, !dbg !9577
  store i64 %172, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 26) to i64*), align 16, !dbg !9579
  %call278 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0)) #8, !dbg !9580
  %call279 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call278) #7, !dbg !9580
  %type281 = getelementptr inbounds %union.tree_node, %union.tree_node* %call279, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9580
  %173 = bitcast %union.tree_node** %type281 to i64*, !dbg !9580
  %174 = load i64, i64* %173, align 8, !dbg !9580
  store i64 %174, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 27) to i64*), align 8, !dbg !9582
  %call284 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0)) #8, !dbg !9583
  %call285 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call284) #7, !dbg !9583
  %type287 = getelementptr inbounds %union.tree_node, %union.tree_node* %call285, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9583
  %175 = bitcast %union.tree_node** %type287 to i64*, !dbg !9583
  %176 = load i64, i64* %175, align 8, !dbg !9583
  store i64 %176, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 28) to i64*), align 16, !dbg !9585
  %call292 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #8, !dbg !9586
  %call293 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call292) #7, !dbg !9586
  %type295 = getelementptr inbounds %union.tree_node, %union.tree_node* %call293, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9586
  %177 = bitcast %union.tree_node** %type295 to i64*, !dbg !9586
  %178 = load i64, i64* %177, align 8, !dbg !9586
  store i64 %178, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 29) to i64*), align 8, !dbg !9588
  %call300 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #8, !dbg !9589
  %call301 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call300) #7, !dbg !9589
  %type303 = getelementptr inbounds %union.tree_node, %union.tree_node* %call301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9589
  %179 = bitcast %union.tree_node** %type303 to i64*, !dbg !9589
  %180 = load i64, i64* %179, align 8, !dbg !9589
  store i64 %180, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 30) to i64*), align 16, !dbg !9591
  %call308 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0)) #8, !dbg !9592
  %call309 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call308) #7, !dbg !9592
  %type311 = getelementptr inbounds %union.tree_node, %union.tree_node* %call309, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9592
  %181 = bitcast %union.tree_node** %type311 to i64*, !dbg !9592
  %182 = load i64, i64* %181, align 8, !dbg !9592
  store i64 %182, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 31) to i64*), align 8, !dbg !9594
  %call314 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !9595
  %call315 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call314) #7, !dbg !9595
  %type317 = getelementptr inbounds %union.tree_node, %union.tree_node* %call315, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9595
  %183 = bitcast %union.tree_node** %type317 to i64*, !dbg !9595
  %184 = load i64, i64* %183, align 8, !dbg !9595
  store i64 %184, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 32) to i64*), align 16, !dbg !9597
  %call322 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0)) #8, !dbg !9598
  %call323 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call322) #7, !dbg !9598
  %type325 = getelementptr inbounds %union.tree_node, %union.tree_node* %call323, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9598
  %185 = bitcast %union.tree_node** %type325 to i64*, !dbg !9598
  %186 = load i64, i64* %185, align 8, !dbg !9598
  store i64 %186, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 33) to i64*), align 8, !dbg !9600
  %call330 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0)) #8, !dbg !9601
  %call331 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call330) #7, !dbg !9601
  %type333 = getelementptr inbounds %union.tree_node, %union.tree_node* %call331, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9601
  %187 = bitcast %union.tree_node** %type333 to i64*, !dbg !9601
  %188 = load i64, i64* %187, align 8, !dbg !9601
  store i64 %188, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 34) to i64*), align 16, !dbg !9603
  %call338 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0)) #8, !dbg !9604
  %call339 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call338) #7, !dbg !9604
  %type341 = getelementptr inbounds %union.tree_node, %union.tree_node* %call339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9604
  %189 = bitcast %union.tree_node** %type341 to i64*, !dbg !9604
  %190 = load i64, i64* %189, align 8, !dbg !9604
  store i64 %190, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 35) to i64*), align 8, !dbg !9606
  %call346 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #8, !dbg !9607
  %call347 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call346) #7, !dbg !9607
  %type349 = getelementptr inbounds %union.tree_node, %union.tree_node* %call347, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9607
  %191 = bitcast %union.tree_node** %type349 to i64*, !dbg !9607
  %192 = load i64, i64* %191, align 8, !dbg !9607
  store i64 %192, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 36) to i64*), align 16, !dbg !9609
  %call354 = tail call fastcc %union.tree_node* @c_get_ident(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0)) #8, !dbg !9610
  %call355 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call354) #7, !dbg !9610
  %type357 = getelementptr inbounds %union.tree_node, %union.tree_node* %call355, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9610
  %193 = bitcast %union.tree_node** %type357 to i64*, !dbg !9610
  %194 = load i64, i64* %193, align 8, !dbg !9610
  store i64 %194, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 37) to i64*), align 8, !dbg !9612
  %195 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9613
  %call359 = tail call %union.tree_node* @build_function_type(%union.tree_node* %195, %union.tree_node* null) #7, !dbg !9614
  store %union.tree_node* %call359, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 48), align 16, !dbg !9615
  %call360 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #7, !dbg !9616
  %call361 = tail call %union.tree_node* @identifier_global_value(%union.tree_node* %call360) #7, !dbg !9616
  %type363 = getelementptr inbounds %union.tree_node, %union.tree_node* %call361, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9616
  %196 = bitcast %union.tree_node** %type363 to i64*, !dbg !9616
  %197 = load i64, i64* %196, align 8, !dbg !9616
  store i64 %197, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 43) to i64*), align 8, !dbg !9617
  %.cast5 = inttoptr i64 %197 to %union.tree_node*, !dbg !9618
  %call364 = tail call %union.tree_node* @c_common_unsigned_type(%union.tree_node* %.cast5) #8, !dbg !9619
  store %union.tree_node* %call364, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 6), align 16, !dbg !9620
  %198 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 1), align 8, !dbg !9621
  %call365 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.312, i64 0, i64 0)) #7, !dbg !9622
  %199 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 44), align 16, !dbg !9622
  %call366 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call365, %union.tree_node* %199) #7, !dbg !9622
  %call367 = tail call %union.tree_node* %198(%union.tree_node* %call366) #7, !dbg !9623
  %200 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 44) to i64**), align 16, !dbg !9624
  %bf.load372 = load i64, i64* %200, align 8, !dbg !9624
  %bf.cast3746 = and i64 %bf.load372, 65535, !dbg !9626
  %cmp375 = icmp eq i64 %bf.cast3746, 15, !dbg !9626
  %201 = bitcast i64* %200 to %union.tree_node*, !dbg !9627
  br i1 %cmp375, label %if.then377, label %if.else381, !dbg !9627

if.then377:                                       ; preds = %if.end161
  %type379 = getelementptr inbounds i64, i64* %200, i64 2, !dbg !9628
  %202 = bitcast i64* %type379 to %union.tree_node**, !dbg !9628
  %203 = load %union.tree_node*, %union.tree_node** %202, align 8, !dbg !9628
  %call380 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %203) #7, !dbg !9630
  call void @llvm.dbg.value(metadata %union.tree_node* %call380, metadata !9212, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata %union.tree_node* %call380, metadata !9213, metadata !DIExpression()), !dbg !9451
  br label %if.end383, !dbg !9631

if.else381:                                       ; preds = %if.end161
  call void @llvm.dbg.value(metadata %union.tree_node* %201, metadata !9213, metadata !DIExpression()), !dbg !9451
  %call382 = tail call %union.tree_node* @build_reference_type(%union.tree_node* %201) #7, !dbg !9632
  call void @llvm.dbg.value(metadata %union.tree_node* %call382, metadata !9212, metadata !DIExpression()), !dbg !9451
  br label %if.end383

if.end383:                                        ; preds = %if.else381, %if.then377
  %va_list_ref_type_node.0 = phi %union.tree_node* [ %call380, %if.then377 ], [ %call382, %if.else381 ], !dbg !9634
  %va_list_arg_type_node.0 = phi %union.tree_node* [ %call380, %if.then377 ], [ %201, %if.else381 ], !dbg !9634
  call void @llvm.dbg.value(metadata %union.tree_node* %va_list_arg_type_node.0, metadata !9213, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata %union.tree_node* %va_list_ref_type_node.0, metadata !9212, metadata !DIExpression()), !dbg !9451
  %204 = load i32, i32* @flag_preprocess_only, align 4, !dbg !9635
  %tobool384 = icmp eq i32 %204, 0, !dbg !9635
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !9637

if.then385:                                       ; preds = %if.end383
  tail call fastcc void @c_define_builtins(%union.tree_node* %va_list_ref_type_node.0, %union.tree_node* %va_list_arg_type_node.0) #8, !dbg !9638
  br label %if.end386, !dbg !9638

if.end386:                                        ; preds = %if.end383, %if.then385
  %call387 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.313, i64 0, i64 0)) #7, !dbg !9639
  store %union.tree_node* %call387, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !9640
  %call388 = tail call %union.tree_node* @make_node_stat(i32 23) #7, !dbg !9641
  store %union.tree_node* %call388, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 54), align 16, !dbg !9642
  %call389 = tail call %union.tree_node* @c_common_type_for_size(i32 32, i32 0) #8, !dbg !9643
  %205 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 54) to %struct.tree_common**), align 16, !dbg !9644
  %type391 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %205, i64 0, i32 2, !dbg !9644
  store %union.tree_node* %call389, %union.tree_node** %type391, align 8, !dbg !9645
  %call392 = tail call i8* @memset(i8* bitcast ([252 x %union.tree_node*]* @builtin_types to i8*), i32 0, i64 2016) #7, !dbg !9646
  ret void, !dbg !9647
}

declare dso_local void @record_builtin_type(i32, i8*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @identifier_global_value(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @set_sizetype(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @build_common_tree_nodes_2(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_variant_type_copy(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_void_list_node() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @c_get_ident(i8* %id) unnamed_addr #0 !dbg !9648 {
entry:
  call void @llvm.dbg.value(metadata i8* %id, metadata !9652, metadata !DIExpression()), !dbg !9653
  %call = tail call %union.tree_node* @get_identifier(i8* %id) #7, !dbg !9654
  ret %union.tree_node* %call, !dbg !9655
}

declare dso_local %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_reference_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_define_builtins(%union.tree_node* %va_list_ref_type_node, %union.tree_node* %va_list_arg_type_node) unnamed_addr #5 !dbg !9656 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %va_list_ref_type_node, metadata !9658, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata %union.tree_node* %va_list_arg_type_node, metadata !9659, metadata !DIExpression()), !dbg !9660
  %0 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !9661
  store i64 %0, i64* bitcast ([252 x %union.tree_node*]* @builtin_types to i64*), align 16, !dbg !9661
  %1 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to i64*), align 8, !dbg !9664
  store i64 %1, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 1) to i64*), align 8, !dbg !9664
  %2 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !9665
  store i64 %2, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 2) to i64*), align 16, !dbg !9665
  %3 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6) to i64*), align 16, !dbg !9666
  store i64 %3, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 3) to i64*), align 8, !dbg !9666
  %4 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7) to i64*), align 8, !dbg !9667
  store i64 %4, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 4) to i64*), align 16, !dbg !9667
  %5 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8) to i64*), align 16, !dbg !9668
  store i64 %5, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 5) to i64*), align 8, !dbg !9668
  %6 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9) to i64*), align 8, !dbg !9669
  store i64 %6, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 6) to i64*), align 16, !dbg !9669
  %7 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10) to i64*), align 16, !dbg !9670
  store i64 %7, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 7) to i64*), align 8, !dbg !9670
  %8 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 7) to i64*), align 8, !dbg !9671
  store i64 %8, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 8) to i64*), align 16, !dbg !9671
  %9 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 8) to i64*), align 16, !dbg !9672
  store i64 %9, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 9) to i64*), align 8, !dbg !9672
  %10 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 11) to i64*), align 8, !dbg !9673
  store i64 %10, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 10) to i64*), align 16, !dbg !9673
  %11 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 12) to i64*), align 16, !dbg !9674
  store i64 %11, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 11) to i64*), align 8, !dbg !9674
  %12 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !9675
  %13 = load i32, i32* @word_mode, align 4, !dbg !9675
  %call = tail call %union.tree_node* %12(i32 %13, i32 1) #7, !dbg !9675
  store %union.tree_node* %call, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 12), align 16, !dbg !9675
  %14 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !9676
  %15 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 10), align 8, !dbg !9676
  %call1 = tail call i32 %15() #7, !dbg !9676
  %call2 = tail call %union.tree_node* %14(i32 %call1, i32 1) #7, !dbg !9676
  store %union.tree_node* %call2, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 13), align 8, !dbg !9676
  %16 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31) to i64*), align 8, !dbg !9677
  store i64 %16, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 14) to i64*), align 16, !dbg !9677
  %17 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32) to i64*), align 16, !dbg !9678
  store i64 %17, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 15) to i64*), align 8, !dbg !9678
  %18 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33) to i64*), align 8, !dbg !9679
  store i64 %18, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 16) to i64*), align 16, !dbg !9679
  %19 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 28) to i64*), align 16, !dbg !9680
  store i64 %19, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 17) to i64*), align 8, !dbg !9680
  %20 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 29) to i64*), align 8, !dbg !9681
  store i64 %20, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 18) to i64*), align 16, !dbg !9681
  %21 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 30) to i64*), align 16, !dbg !9682
  store i64 %21, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 19) to i64*), align 8, !dbg !9682
  %22 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39) to i64*), align 8, !dbg !9683
  store i64 %22, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 20) to i64*), align 16, !dbg !9683
  %23 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 48) to i64*), align 16, !dbg !9684
  store i64 %23, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 21) to i64*), align 8, !dbg !9684
  %24 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 40) to i64*), align 16, !dbg !9685
  store i64 %24, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 22) to i64*), align 16, !dbg !9685
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9686
  %call3 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %25, i32 2) #7, !dbg !9686
  %call4 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call3) #7, !dbg !9686
  store %union.tree_node* %call4, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 23), align 8, !dbg !9686
  %26 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !9687
  %27 = load i32, i32* @ptr_mode, align 4, !dbg !9687
  %call5 = tail call %union.tree_node* %26(i32 %27, i32 0) #7, !dbg !9687
  store %union.tree_node* %call5, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 24), align 16, !dbg !9687
  %28 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 37) to i64*), align 8, !dbg !9688
  store i64 %28, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 25) to i64*), align 8, !dbg !9688
  %29 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 34) to i64*), align 16, !dbg !9689
  store i64 %29, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 26) to i64*), align 16, !dbg !9689
  %30 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 35) to i64*), align 8, !dbg !9690
  store i64 %30, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 27) to i64*), align 8, !dbg !9690
  %31 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 36) to i64*), align 16, !dbg !9691
  store i64 %31, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 28) to i64*), align 16, !dbg !9691
  %32 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 42) to i64*), align 16, !dbg !9692
  store i64 %32, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 29) to i64*), align 8, !dbg !9692
  %33 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41) to i64*), align 8, !dbg !9693
  store i64 %33, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 30) to i64*), align 16, !dbg !9693
  %34 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 5) to i64*), align 8, !dbg !9694
  store i64 %34, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 31) to i64*), align 8, !dbg !9694
  %35 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 4) to i64*), align 16, !dbg !9695
  store i64 %35, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 32) to i64*), align 16, !dbg !9695
  %36 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 43) to i64*), align 8, !dbg !9696
  store i64 %36, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 33) to i64*), align 8, !dbg !9696
  %37 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 44) to i64*), align 16, !dbg !9697
  store i64 %37, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 34) to i64*), align 16, !dbg !9697
  %38 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49) to i64*), align 8, !dbg !9698
  store i64 %38, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 35) to i64*), align 8, !dbg !9698
  %39 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50) to i64*), align 16, !dbg !9699
  store i64 %39, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 36) to i64*), align 16, !dbg !9699
  %40 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51) to i64*), align 8, !dbg !9700
  store i64 %40, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 37) to i64*), align 8, !dbg !9700
  %41 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 52) to i64*), align 16, !dbg !9701
  store i64 %41, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 38) to i64*), align 16, !dbg !9701
  %42 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 53) to i64*), align 8, !dbg !9702
  store i64 %42, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 39) to i64*), align 8, !dbg !9702
  %43 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 54) to i64*), align 16, !dbg !9703
  store i64 %43, i64* bitcast (%union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 40) to i64*), align 16, !dbg !9703
  store %union.tree_node* %va_list_ref_type_node, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 41), align 8, !dbg !9704
  store %union.tree_node* %va_list_arg_type_node, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 42), align 16, !dbg !9705
  %call6 = tail call %union.tree_node* @builtin_type_for_size(i32 8, i8 zeroext 1) #8, !dbg !9706
  store %union.tree_node* %call6, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 43), align 8, !dbg !9706
  %call7 = tail call %union.tree_node* @builtin_type_for_size(i32 16, i8 zeroext 1) #8, !dbg !9707
  store %union.tree_node* %call7, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 44), align 16, !dbg !9707
  %call8 = tail call %union.tree_node* @builtin_type_for_size(i32 32, i8 zeroext 1) #8, !dbg !9708
  store %union.tree_node* %call8, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 45), align 8, !dbg !9708
  %call9 = tail call %union.tree_node* @builtin_type_for_size(i32 64, i8 zeroext 1) #8, !dbg !9709
  store %union.tree_node* %call9, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 46), align 16, !dbg !9709
  %call10 = tail call %union.tree_node* @builtin_type_for_size(i32 128, i8 zeroext 1) #8, !dbg !9710
  store %union.tree_node* %call10, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 47), align 8, !dbg !9710
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 34), align 16, !dbg !9711
  %call11 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %44) #7, !dbg !9711
  store %union.tree_node* %call11, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 48), align 16, !dbg !9711
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 4), align 16, !dbg !9712
  %call12 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %45) #7, !dbg !9712
  store %union.tree_node* %call12, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 49), align 8, !dbg !9712
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 7), align 8, !dbg !9713
  %call13 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %46) #7, !dbg !9713
  store %union.tree_node* %call13, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 50), align 16, !dbg !9713
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 20), align 16, !dbg !9714
  %call14 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %47) #7, !dbg !9714
  store %union.tree_node* %call14, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 51), align 8, !dbg !9714
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 52, i32 0, i8 zeroext 0, i32 0) #8, !dbg !9715
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 53, i32 1, i8 zeroext 0, i32 0) #8, !dbg !9716
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 54, i32 20, i8 zeroext 0, i32 0) #8, !dbg !9717
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 55, i32 29, i8 zeroext 0, i32 0) #8, !dbg !9718
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 56, i32 2, i8 zeroext 0, i32 0) #8, !dbg !9719
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 57, i32 3, i8 zeroext 0, i32 0) #8, !dbg !9720
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 58, i32 14, i8 zeroext 0, i32 0) #8, !dbg !9721
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 59, i32 15, i8 zeroext 0, i32 0) #8, !dbg !9722
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 60, i32 16, i8 zeroext 0, i32 0) #8, !dbg !9723
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 61, i32 35, i8 zeroext 0, i32 0) #8, !dbg !9724
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 62, i32 36, i8 zeroext 0, i32 0) #8, !dbg !9725
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 63, i32 37, i8 zeroext 0, i32 0) #8, !dbg !9726
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 64, i32 4, i8 zeroext 0, i32 1, i32 4) #8, !dbg !9727
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 65, i32 6, i8 zeroext 0, i32 1, i32 6) #8, !dbg !9728
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 66, i32 8, i8 zeroext 0, i32 1, i32 8) #8, !dbg !9729
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 67, i32 14, i8 zeroext 0, i32 1, i32 14) #8, !dbg !9730
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 68, i32 15, i8 zeroext 0, i32 1, i32 15) #8, !dbg !9731
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 69, i32 16, i8 zeroext 0, i32 1, i32 16) #8, !dbg !9732
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 70, i32 17, i8 zeroext 0, i32 1, i32 17) #8, !dbg !9733
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 71, i32 18, i8 zeroext 0, i32 1, i32 18) #8, !dbg !9734
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 72, i32 19, i8 zeroext 0, i32 1, i32 19) #8, !dbg !9735
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 73, i32 14, i8 zeroext 0, i32 1, i32 17) #8, !dbg !9736
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 74, i32 15, i8 zeroext 0, i32 1, i32 18) #8, !dbg !9737
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 75, i32 16, i8 zeroext 0, i32 1, i32 19) #8, !dbg !9738
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 76, i32 17, i8 zeroext 0, i32 1, i32 14) #8, !dbg !9739
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 77, i32 18, i8 zeroext 0, i32 1, i32 15) #8, !dbg !9740
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 78, i32 19, i8 zeroext 0, i32 1, i32 16) #8, !dbg !9741
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 79, i32 20, i8 zeroext 0, i32 1, i32 3) #8, !dbg !9742
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 80, i32 20, i8 zeroext 0, i32 1, i32 30) #8, !dbg !9743
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 81, i32 2, i8 zeroext 0, i32 1, i32 2) #8, !dbg !9744
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 82, i32 2, i8 zeroext 0, i32 1, i32 3) #8, !dbg !9745
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 83, i32 2, i8 zeroext 0, i32 1, i32 4) #8, !dbg !9746
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 84, i32 2, i8 zeroext 0, i32 1, i32 5) #8, !dbg !9747
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 85, i32 2, i8 zeroext 0, i32 1, i32 6) #8, !dbg !9748
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 86, i32 2, i8 zeroext 0, i32 1, i32 7) #8, !dbg !9749
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 87, i32 2, i8 zeroext 0, i32 1, i32 8) #8, !dbg !9750
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 88, i32 2, i8 zeroext 0, i32 1, i32 9) #8, !dbg !9751
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 89, i32 2, i8 zeroext 0, i32 1, i32 20) #8, !dbg !9752
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 90, i32 2, i8 zeroext 0, i32 1, i32 14) #8, !dbg !9753
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 91, i32 2, i8 zeroext 0, i32 1, i32 15) #8, !dbg !9754
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 92, i32 2, i8 zeroext 0, i32 1, i32 16) #8, !dbg !9755
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 93, i32 2, i8 zeroext 0, i32 1, i32 35) #8, !dbg !9756
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 94, i32 2, i8 zeroext 0, i32 1, i32 36) #8, !dbg !9757
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 95, i32 2, i8 zeroext 0, i32 1, i32 37) #8, !dbg !9758
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 96, i32 4, i8 zeroext 0, i32 1, i32 14) #8, !dbg !9759
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 97, i32 4, i8 zeroext 0, i32 1, i32 15) #8, !dbg !9760
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 98, i32 4, i8 zeroext 0, i32 1, i32 16) #8, !dbg !9761
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 99, i32 6, i8 zeroext 0, i32 1, i32 14) #8, !dbg !9762
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 100, i32 6, i8 zeroext 0, i32 1, i32 15) #8, !dbg !9763
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 101, i32 6, i8 zeroext 0, i32 1, i32 16) #8, !dbg !9764
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 102, i32 0, i8 zeroext 0, i32 1, i32 20) #8, !dbg !9765
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 103, i32 30, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9766
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 104, i32 2, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9767
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 105, i32 20, i8 zeroext 0, i32 1, i32 20) #8, !dbg !9768
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 106, i32 0, i8 zeroext 0, i32 1, i32 41) #8, !dbg !9769
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 107, i32 0, i8 zeroext 0, i32 1, i32 2) #8, !dbg !9770
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 108, i32 14, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9771
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 109, i32 15, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9772
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 110, i32 16, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9773
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 111, i32 35, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9774
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 112, i32 36, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9775
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 113, i32 37, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9776
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 114, i32 33, i8 zeroext 0, i32 1, i32 34) #8, !dbg !9777
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 115, i32 13, i8 zeroext 0, i32 1, i32 20) #8, !dbg !9778
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 116, i32 2, i8 zeroext 0, i32 1, i32 32) #8, !dbg !9779
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 117, i32 32, i8 zeroext 0, i32 1, i32 32) #8, !dbg !9780
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 118, i32 35, i8 zeroext 0, i32 1, i32 35) #8, !dbg !9781
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 119, i32 36, i8 zeroext 0, i32 1, i32 36) #8, !dbg !9782
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 120, i32 37, i8 zeroext 0, i32 1, i32 37) #8, !dbg !9783
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 121, i32 0, i8 zeroext 0, i32 1, i32 23) #8, !dbg !9784
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 122, i32 0, i8 zeroext 0, i32 1, i32 51) #8, !dbg !9785
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 123, i32 3, i8 zeroext 0, i32 1, i32 3) #8, !dbg !9786
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 124, i32 5, i8 zeroext 0, i32 1, i32 5) #8, !dbg !9787
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 125, i32 7, i8 zeroext 0, i32 1, i32 7) #8, !dbg !9788
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 126, i32 10, i8 zeroext 0, i32 1, i32 10) #8, !dbg !9789
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 127, i32 11, i8 zeroext 0, i32 1, i32 11) #8, !dbg !9790
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 102), align 16, !dbg !9791
  %call15 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %48) #7, !dbg !9791
  store %union.tree_node* %call15, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 128), align 16, !dbg !9791
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 129, i32 0, i8 zeroext 0, i32 2, i32 20, i32 2) #8, !dbg !9792
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 130, i32 33, i8 zeroext 0, i32 2, i32 33, i32 34) #8, !dbg !9793
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 131, i32 2, i8 zeroext 0, i32 2, i32 34, i32 34) #8, !dbg !9794
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 132, i32 33, i8 zeroext 0, i32 2, i32 34, i32 34) #8, !dbg !9795
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 133, i32 30, i8 zeroext 0, i32 2, i32 34, i32 34) #8, !dbg !9796
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 134, i32 33, i8 zeroext 0, i32 2, i32 34, i32 2) #8, !dbg !9797
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 135, i32 33, i8 zeroext 0, i32 2, i32 34, i32 30) #8, !dbg !9798
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 136, i32 2, i8 zeroext 0, i32 2, i32 34, i32 21) #8, !dbg !9799
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 137, i32 2, i8 zeroext 0, i32 2, i32 2, i32 21) #8, !dbg !9800
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 138, i32 0, i8 zeroext 0, i32 2, i32 24, i32 20) #8, !dbg !9801
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 139, i32 0, i8 zeroext 0, i32 2, i32 41, i32 42) #8, !dbg !9802
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 140, i32 4, i8 zeroext 0, i32 2, i32 4, i32 4) #8, !dbg !9803
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 141, i32 2, i8 zeroext 0, i32 2, i32 20, i32 34) #8, !dbg !9804
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 142, i32 0, i8 zeroext 0, i32 2, i32 20, i32 30) #8, !dbg !9805
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 143, i32 14, i8 zeroext 0, i32 2, i32 14, i32 14) #8, !dbg !9806
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 144, i32 15, i8 zeroext 0, i32 2, i32 15, i32 15) #8, !dbg !9807
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 145, i32 16, i8 zeroext 0, i32 2, i32 16, i32 16) #8, !dbg !9808
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 146, i32 14, i8 zeroext 0, i32 2, i32 14, i32 26) #8, !dbg !9809
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 147, i32 15, i8 zeroext 0, i32 2, i32 15, i32 27) #8, !dbg !9810
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 148, i32 16, i8 zeroext 0, i32 2, i32 16, i32 28) #8, !dbg !9811
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 149, i32 14, i8 zeroext 0, i32 2, i32 14, i32 16) #8, !dbg !9812
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 150, i32 15, i8 zeroext 0, i32 2, i32 15, i32 16) #8, !dbg !9813
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 151, i32 14, i8 zeroext 0, i32 2, i32 14, i32 2) #8, !dbg !9814
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 152, i32 15, i8 zeroext 0, i32 2, i32 15, i32 2) #8, !dbg !9815
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 153, i32 16, i8 zeroext 0, i32 2, i32 16, i32 2) #8, !dbg !9816
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 154, i32 14, i8 zeroext 0, i32 2, i32 14, i32 25) #8, !dbg !9817
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 155, i32 15, i8 zeroext 0, i32 2, i32 15, i32 25) #8, !dbg !9818
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 156, i32 16, i8 zeroext 0, i32 2, i32 16, i32 25) #8, !dbg !9819
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 157, i32 14, i8 zeroext 0, i32 2, i32 2, i32 14) #8, !dbg !9820
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 158, i32 15, i8 zeroext 0, i32 2, i32 2, i32 15) #8, !dbg !9821
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 159, i32 16, i8 zeroext 0, i32 2, i32 2, i32 16) #8, !dbg !9822
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 160, i32 14, i8 zeroext 0, i32 2, i32 14, i32 4) #8, !dbg !9823
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 161, i32 15, i8 zeroext 0, i32 2, i32 15, i32 4) #8, !dbg !9824
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 162, i32 16, i8 zeroext 0, i32 2, i32 16, i32 4) #8, !dbg !9825
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 163, i32 2, i8 zeroext 0, i32 2, i32 34, i32 42) #8, !dbg !9826
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 164, i32 20, i8 zeroext 0, i32 2, i32 30, i32 30) #8, !dbg !9827
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 165, i32 20, i8 zeroext 0, i32 2, i32 20, i32 30) #8, !dbg !9828
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 166, i32 17, i8 zeroext 0, i32 2, i32 17, i32 17) #8, !dbg !9829
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 167, i32 18, i8 zeroext 0, i32 2, i32 18, i32 18) #8, !dbg !9830
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 168, i32 19, i8 zeroext 0, i32 2, i32 19, i32 19) #8, !dbg !9831
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 169, i32 0, i8 zeroext 0, i32 2, i32 20, i32 20) #8, !dbg !9832
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 170, i32 2, i8 zeroext 0, i32 2, i32 34, i32 48) #8, !dbg !9833
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 171, i32 30, i8 zeroext 0, i32 2, i32 22, i32 2) #8, !dbg !9834
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 172, i32 43, i8 zeroext 0, i32 2, i32 23, i32 43) #8, !dbg !9835
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 173, i32 44, i8 zeroext 0, i32 2, i32 23, i32 44) #8, !dbg !9836
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 174, i32 45, i8 zeroext 0, i32 2, i32 23, i32 45) #8, !dbg !9837
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 175, i32 46, i8 zeroext 0, i32 2, i32 23, i32 46) #8, !dbg !9838
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 176, i32 47, i8 zeroext 0, i32 2, i32 23, i32 47) #8, !dbg !9839
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 177, i32 1, i8 zeroext 0, i32 2, i32 49, i32 49) #8, !dbg !9840
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 178, i32 1, i8 zeroext 0, i32 2, i32 50, i32 50) #8, !dbg !9841
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 169), align 8, !dbg !9842
  %call16 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %49) #7, !dbg !9842
  store %union.tree_node* %call16, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 179), align 8, !dbg !9842
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 180, i32 33, i8 zeroext 0, i32 3, i32 33, i32 34, i32 30) #8, !dbg !9843
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 181, i32 2, i8 zeroext 0, i32 3, i32 34, i32 34, i32 30) #8, !dbg !9844
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 182, i32 20, i8 zeroext 0, i32 3, i32 20, i32 22, i32 30) #8, !dbg !9845
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 183, i32 2, i8 zeroext 0, i32 3, i32 22, i32 22, i32 30) #8, !dbg !9846
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 184, i32 20, i8 zeroext 0, i32 3, i32 20, i32 2, i32 30) #8, !dbg !9847
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 185, i32 0, i8 zeroext 0, i32 3, i32 20, i32 2, i32 2) #8, !dbg !9848
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 186, i32 0, i8 zeroext 0, i32 3, i32 22, i32 20, i32 30) #8, !dbg !9849
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 187, i32 2, i8 zeroext 0, i32 3, i32 33, i32 34, i32 42) #8, !dbg !9850
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 188, i32 2, i8 zeroext 0, i32 3, i32 34, i32 34, i32 42) #8, !dbg !9851
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 189, i32 2, i8 zeroext 0, i32 3, i32 21, i32 34, i32 42) #8, !dbg !9852
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 190, i32 33, i8 zeroext 0, i32 3, i32 34, i32 34, i32 2) #8, !dbg !9853
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 191, i32 14, i8 zeroext 0, i32 3, i32 14, i32 14, i32 14) #8, !dbg !9854
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 192, i32 15, i8 zeroext 0, i32 3, i32 15, i32 15, i32 15) #8, !dbg !9855
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 193, i32 16, i8 zeroext 0, i32 3, i32 16, i32 16, i32 16) #8, !dbg !9856
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 194, i32 14, i8 zeroext 0, i32 3, i32 14, i32 14, i32 25) #8, !dbg !9857
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 195, i32 15, i8 zeroext 0, i32 3, i32 15, i32 15, i32 25) #8, !dbg !9858
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 196, i32 16, i8 zeroext 0, i32 3, i32 16, i32 16, i32 25) #8, !dbg !9859
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 197, i32 0, i8 zeroext 0, i32 3, i32 14, i32 26, i32 26) #8, !dbg !9860
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 198, i32 0, i8 zeroext 0, i32 3, i32 15, i32 27, i32 27) #8, !dbg !9861
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 199, i32 0, i8 zeroext 0, i32 3, i32 16, i32 28, i32 28) #8, !dbg !9862
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 200, i32 0, i8 zeroext 0, i32 3, i32 20, i32 20, i32 20) #8, !dbg !9863
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 201, i32 2, i8 zeroext 0, i32 3, i32 34, i32 48, i32 48) #8, !dbg !9864
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 202, i32 2, i8 zeroext 0, i32 3, i32 2, i32 34, i32 42) #8, !dbg !9865
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 203, i32 1, i8 zeroext 0, i32 3, i32 23, i32 43, i32 43) #8, !dbg !9866
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 204, i32 1, i8 zeroext 0, i32 3, i32 23, i32 44, i32 44) #8, !dbg !9867
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 205, i32 1, i8 zeroext 0, i32 3, i32 23, i32 45, i32 45) #8, !dbg !9868
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 206, i32 1, i8 zeroext 0, i32 3, i32 23, i32 46, i32 46) #8, !dbg !9869
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 207, i32 1, i8 zeroext 0, i32 3, i32 23, i32 47, i32 47) #8, !dbg !9870
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 208, i32 43, i8 zeroext 0, i32 3, i32 23, i32 43, i32 43) #8, !dbg !9871
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 209, i32 44, i8 zeroext 0, i32 3, i32 23, i32 44, i32 44) #8, !dbg !9872
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 210, i32 45, i8 zeroext 0, i32 3, i32 23, i32 45, i32 45) #8, !dbg !9873
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 211, i32 46, i8 zeroext 0, i32 3, i32 23, i32 46, i32 46) #8, !dbg !9874
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 212, i32 47, i8 zeroext 0, i32 3, i32 23, i32 47, i32 47) #8, !dbg !9875
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 213, i32 0, i8 zeroext 0, i32 3, i32 128, i32 20, i32 3) #8, !dbg !9876
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 214, i32 20, i8 zeroext 0, i32 3, i32 22, i32 2, i32 30) #8, !dbg !9877
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 215, i32 30, i8 zeroext 0, i32 4, i32 22, i32 30, i32 30, i32 21) #8, !dbg !9878
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 216, i32 2, i8 zeroext 0, i32 4, i32 33, i32 30, i32 34, i32 42) #8, !dbg !9879
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 217, i32 30, i8 zeroext 0, i32 4, i32 33, i32 30, i32 34, i32 22) #8, !dbg !9880
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 218, i32 20, i8 zeroext 0, i32 4, i32 20, i32 22, i32 30, i32 30) #8, !dbg !9881
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 219, i32 20, i8 zeroext 0, i32 4, i32 20, i32 2, i32 30, i32 30) #8, !dbg !9882
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 220, i32 33, i8 zeroext 0, i32 4, i32 33, i32 34, i32 30, i32 30) #8, !dbg !9883
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 221, i32 2, i8 zeroext 0, i32 4, i32 21, i32 2, i32 34, i32 42) #8, !dbg !9884
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 222, i32 0, i8 zeroext 0, i32 4, i32 128, i32 20, i32 3, i32 3) #8, !dbg !9885
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 223, i32 0, i8 zeroext 0, i32 4, i32 20, i32 12, i32 12, i32 20) #8, !dbg !9886
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 224, i32 2, i8 zeroext 0, i32 5, i32 33, i32 2, i32 30, i32 34, i32 42) #8, !dbg !9887
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 225, i32 1, i8 zeroext 0, i32 5, i32 4, i32 4, i32 4, i32 49, i32 49) #8, !dbg !9888
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 226, i32 2, i8 zeroext 0, i32 6, i32 33, i32 30, i32 2, i32 30, i32 34, i32 42) #8, !dbg !9889
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 227, i32 1, i8 zeroext 0, i32 6, i32 4, i32 4, i32 4, i32 4, i32 49, i32 49) #8, !dbg !9890
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 228, i32 0, i8 zeroext 0, i32 6, i32 128, i32 20, i32 3, i32 4, i32 4, i32 4) #8, !dbg !9891
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 229, i32 1, i8 zeroext 0, i32 6, i32 1, i32 7, i32 7, i32 7, i32 50, i32 50) #8, !dbg !9892
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 230, i32 0, i8 zeroext 0, i32 7, i32 128, i32 20, i32 3, i32 4, i32 4, i32 4, i32 4) #8, !dbg !9893
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 231, i32 0, i8 zeroext 0, i32 7, i32 128, i32 20, i32 179, i32 4, i32 4, i32 1, i32 3) #8, !dbg !9894
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 232, i32 1, i8 zeroext 0, i32 7, i32 1, i32 7, i32 7, i32 7, i32 7, i32 50, i32 50) #8, !dbg !9895
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 233, i32 0, i8 zeroext 1, i32 0) #8, !dbg !9896
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 234, i32 2, i8 zeroext 1, i32 0) #8, !dbg !9897
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 235, i32 20, i8 zeroext 1, i32 0) #8, !dbg !9898
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 236, i32 0, i8 zeroext 1, i32 1, i32 41) #8, !dbg !9899
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 237, i32 0, i8 zeroext 1, i32 1, i32 22) #8, !dbg !9900
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 238, i32 2, i8 zeroext 1, i32 1, i32 34) #8, !dbg !9901
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 239, i32 2, i8 zeroext 1, i32 2, i32 21, i32 34) #8, !dbg !9902
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 240, i32 2, i8 zeroext 1, i32 2, i32 33, i32 34) #8, !dbg !9903
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 241, i32 2, i8 zeroext 1, i32 2, i32 34, i32 34) #8, !dbg !9904
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 242, i32 2, i8 zeroext 1, i32 2, i32 2, i32 34) #8, !dbg !9905
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 243, i32 2, i8 zeroext 1, i32 3, i32 33, i32 30, i32 34) #8, !dbg !9906
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 244, i32 31, i8 zeroext 1, i32 3, i32 33, i32 30, i32 34) #8, !dbg !9907
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 245, i32 2, i8 zeroext 1, i32 3, i32 21, i32 2, i32 34) #8, !dbg !9908
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 246, i32 2, i8 zeroext 1, i32 4, i32 33, i32 2, i32 30, i32 34) #8, !dbg !9909
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 247, i32 2, i8 zeroext 1, i32 5, i32 33, i32 30, i32 2, i32 30, i32 34) #8, !dbg !9910
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 248, i32 2, i8 zeroext 1, i32 5, i32 2, i32 2, i32 2, i32 2, i32 2) #8, !dbg !9911
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !9912
  %call17 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %50) #7, !dbg !9912
  store %union.tree_node* %call17, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 249), align 8, !dbg !9912
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 250, i32 20, i8 zeroext 0, i32 3, i32 249, i32 20, i32 30) #8, !dbg !9913
  store %union.tree_node* null, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !9914
  tail call fastcc void @c_init_attributes() #8, !dbg !9916
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9917
  %52 = load i32, i32* @flag_errno_math, align 4, !dbg !9917
  %tobool = icmp eq i32 %52, 0, !dbg !9917
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !9917

cond.false:                                       ; preds = %entry
  %53 = load i32, i32* @flag_rounding_math, align 4, !dbg !9917
  %tobool18 = icmp eq i32 %53, 0, !dbg !9917
  %cond = select i1 %tobool18, i64 46, i64 48, !dbg !9917
  br label %cond.end, !dbg !9917

cond.end:                                         ; preds = %entry, %cond.false
  %cond19 = phi i64 [ %cond, %cond.false ], [ 45, %entry ], !dbg !9917
  %arrayidx = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond19, !dbg !9917
  %54 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9917
  tail call fastcc void @def_builtin_1(i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.422, i64 0, i64 0), i32 3, %union.tree_node* %51, %union.tree_node* %51, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %54, i8 zeroext 1) #8, !dbg !9917
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9921
  %56 = load i32, i32* @flag_isoc99, align 4, !dbg !9921
  %tobool20 = icmp eq i32 %56, 0, !dbg !9921
  %conv = zext i1 %tobool20 to i8, !dbg !9921
  %57 = load i32, i32* @flag_errno_math, align 4, !dbg !9921
  %tobool21 = icmp eq i32 %57, 0, !dbg !9921
  br i1 %tobool21, label %cond.false23, label %cond.end26, !dbg !9921

cond.false23:                                     ; preds = %cond.end
  %58 = load i32, i32* @flag_rounding_math, align 4, !dbg !9921
  %tobool24 = icmp eq i32 %58, 0, !dbg !9921
  %cond25 = select i1 %tobool24, i64 46, i64 48, !dbg !9921
  br label %cond.end26, !dbg !9921

cond.end26:                                       ; preds = %cond.end, %cond.false23
  %cond27 = phi i64 [ %cond25, %cond.false23 ], [ 45, %cond.end ], !dbg !9921
  %arrayidx29 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond27, !dbg !9921
  %59 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8, !dbg !9921
  %60 = load i32, i32* @linux_uclibc, align 4, !dbg !9921
  %61 = trunc i32 %60 to i8, !dbg !9921
  %62 = and i8 %61, 1, !dbg !9921
  %63 = xor i8 %62, 1, !dbg !9921
  tail call fastcc void @def_builtin_1(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.423, i64 0, i64 0), i32 3, %union.tree_node* %55, %union.tree_node* %55, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv, %union.tree_node* %59, i8 zeroext %63) #8, !dbg !9921
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9923
  %65 = load i32, i32* @flag_isoc99, align 4, !dbg !9923
  %tobool32 = icmp eq i32 %65, 0, !dbg !9923
  %conv35 = zext i1 %tobool32 to i8, !dbg !9923
  %66 = load i32, i32* @flag_errno_math, align 4, !dbg !9923
  %tobool36 = icmp eq i32 %66, 0, !dbg !9923
  br i1 %tobool36, label %cond.false38, label %cond.end41, !dbg !9923

cond.false38:                                     ; preds = %cond.end26
  %67 = load i32, i32* @flag_rounding_math, align 4, !dbg !9923
  %tobool39 = icmp eq i32 %67, 0, !dbg !9923
  %cond40 = select i1 %tobool39, i64 46, i64 48, !dbg !9923
  br label %cond.end41, !dbg !9923

cond.end41:                                       ; preds = %cond.end26, %cond.false38
  %cond42 = phi i64 [ %cond40, %cond.false38 ], [ 45, %cond.end26 ], !dbg !9923
  %arrayidx44 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond42, !dbg !9923
  %68 = load %union.tree_node*, %union.tree_node** %arrayidx44, align 8, !dbg !9923
  %69 = load i32, i32* @linux_uclibc, align 4, !dbg !9923
  %70 = trunc i32 %69 to i8, !dbg !9923
  %71 = and i8 %70, 1, !dbg !9923
  %72 = xor i8 %71, 1, !dbg !9923
  tail call fastcc void @def_builtin_1(i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.424, i64 0, i64 0), i32 3, %union.tree_node* %64, %union.tree_node* %64, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv35, %union.tree_node* %68, i8 zeroext %72) #8, !dbg !9923
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9925
  %74 = load i32, i32* @flag_isoc99, align 4, !dbg !9925
  %tobool49 = icmp eq i32 %74, 0, !dbg !9925
  %conv52 = zext i1 %tobool49 to i8, !dbg !9925
  %75 = load i32, i32* @flag_errno_math, align 4, !dbg !9925
  %tobool53 = icmp eq i32 %75, 0, !dbg !9925
  br i1 %tobool53, label %cond.false55, label %cond.end58, !dbg !9925

cond.false55:                                     ; preds = %cond.end41
  %76 = load i32, i32* @flag_rounding_math, align 4, !dbg !9925
  %tobool56 = icmp eq i32 %76, 0, !dbg !9925
  %cond57 = select i1 %tobool56, i64 46, i64 48, !dbg !9925
  br label %cond.end58, !dbg !9925

cond.end58:                                       ; preds = %cond.end41, %cond.false55
  %cond59 = phi i64 [ %cond57, %cond.false55 ], [ 45, %cond.end41 ], !dbg !9925
  %arrayidx61 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond59, !dbg !9925
  %77 = load %union.tree_node*, %union.tree_node** %arrayidx61, align 8, !dbg !9925
  %78 = load i32, i32* @linux_uclibc, align 4, !dbg !9925
  %79 = trunc i32 %78 to i8, !dbg !9925
  %80 = and i8 %79, 1, !dbg !9925
  %81 = xor i8 %80, 1, !dbg !9925
  tail call fastcc void @def_builtin_1(i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.425, i64 0, i64 0), i32 3, %union.tree_node* %73, %union.tree_node* %73, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv52, %union.tree_node* %77, i8 zeroext %81) #8, !dbg !9925
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9927
  %83 = load i32, i32* @flag_isoc99, align 4, !dbg !9927
  %tobool66 = icmp eq i32 %83, 0, !dbg !9927
  %conv69 = zext i1 %tobool66 to i8, !dbg !9927
  %84 = load i32, i32* @flag_errno_math, align 4, !dbg !9927
  %tobool70 = icmp eq i32 %84, 0, !dbg !9927
  br i1 %tobool70, label %cond.false72, label %cond.end75, !dbg !9927

cond.false72:                                     ; preds = %cond.end58
  %85 = load i32, i32* @flag_rounding_math, align 4, !dbg !9927
  %tobool73 = icmp eq i32 %85, 0, !dbg !9927
  %cond74 = select i1 %tobool73, i64 46, i64 48, !dbg !9927
  br label %cond.end75, !dbg !9927

cond.end75:                                       ; preds = %cond.end58, %cond.false72
  %cond76 = phi i64 [ %cond74, %cond.false72 ], [ 45, %cond.end58 ], !dbg !9927
  %arrayidx78 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond76, !dbg !9927
  %86 = load %union.tree_node*, %union.tree_node** %arrayidx78, align 8, !dbg !9927
  %87 = load i32, i32* @linux_uclibc, align 4, !dbg !9927
  %88 = trunc i32 %87 to i8, !dbg !9927
  %89 = and i8 %88, 1, !dbg !9927
  %90 = xor i8 %89, 1, !dbg !9927
  tail call fastcc void @def_builtin_1(i32 4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.426, i64 0, i64 0), i32 3, %union.tree_node* %82, %union.tree_node* %82, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv69, %union.tree_node* %86, i8 zeroext %90) #8, !dbg !9927
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9929
  %92 = load i32, i32* @flag_isoc99, align 4, !dbg !9929
  %tobool83 = icmp eq i32 %92, 0, !dbg !9929
  %conv86 = zext i1 %tobool83 to i8, !dbg !9929
  %93 = load i32, i32* @flag_errno_math, align 4, !dbg !9929
  %tobool87 = icmp eq i32 %93, 0, !dbg !9929
  br i1 %tobool87, label %cond.false89, label %cond.end92, !dbg !9929

cond.false89:                                     ; preds = %cond.end75
  %94 = load i32, i32* @flag_rounding_math, align 4, !dbg !9929
  %tobool90 = icmp eq i32 %94, 0, !dbg !9929
  %cond91 = select i1 %tobool90, i64 46, i64 48, !dbg !9929
  br label %cond.end92, !dbg !9929

cond.end92:                                       ; preds = %cond.end75, %cond.false89
  %cond93 = phi i64 [ %cond91, %cond.false89 ], [ 45, %cond.end75 ], !dbg !9929
  %arrayidx95 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond93, !dbg !9929
  %95 = load %union.tree_node*, %union.tree_node** %arrayidx95, align 8, !dbg !9929
  %96 = load i32, i32* @linux_uclibc, align 4, !dbg !9929
  %97 = trunc i32 %96 to i8, !dbg !9929
  %98 = and i8 %97, 1, !dbg !9929
  %99 = xor i8 %98, 1, !dbg !9929
  tail call fastcc void @def_builtin_1(i32 5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.427, i64 0, i64 0), i32 3, %union.tree_node* %91, %union.tree_node* %91, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv86, %union.tree_node* %95, i8 zeroext %99) #8, !dbg !9929
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9931
  %101 = load i32, i32* @flag_errno_math, align 4, !dbg !9931
  %tobool100 = icmp eq i32 %101, 0, !dbg !9931
  br i1 %tobool100, label %cond.false102, label %cond.end105, !dbg !9931

cond.false102:                                    ; preds = %cond.end92
  %102 = load i32, i32* @flag_rounding_math, align 4, !dbg !9931
  %tobool103 = icmp eq i32 %102, 0, !dbg !9931
  %cond104 = select i1 %tobool103, i64 46, i64 48, !dbg !9931
  br label %cond.end105, !dbg !9931

cond.end105:                                      ; preds = %cond.end92, %cond.false102
  %cond106 = phi i64 [ %cond104, %cond.false102 ], [ 45, %cond.end92 ], !dbg !9931
  %arrayidx108 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond106, !dbg !9931
  %103 = load %union.tree_node*, %union.tree_node** %arrayidx108, align 8, !dbg !9931
  tail call fastcc void @def_builtin_1(i32 6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.428, i64 0, i64 0), i32 3, %union.tree_node* %100, %union.tree_node* %100, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %103, i8 zeroext 1) #8, !dbg !9931
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9933
  %105 = load i32, i32* @flag_isoc99, align 4, !dbg !9933
  %tobool109 = icmp eq i32 %105, 0, !dbg !9933
  %conv112 = zext i1 %tobool109 to i8, !dbg !9933
  %106 = load i32, i32* @flag_errno_math, align 4, !dbg !9933
  %tobool113 = icmp eq i32 %106, 0, !dbg !9933
  br i1 %tobool113, label %cond.false115, label %cond.end118, !dbg !9933

cond.false115:                                    ; preds = %cond.end105
  %107 = load i32, i32* @flag_rounding_math, align 4, !dbg !9933
  %tobool116 = icmp eq i32 %107, 0, !dbg !9933
  %cond117 = select i1 %tobool116, i64 46, i64 48, !dbg !9933
  br label %cond.end118, !dbg !9933

cond.end118:                                      ; preds = %cond.end105, %cond.false115
  %cond119 = phi i64 [ %cond117, %cond.false115 ], [ 45, %cond.end105 ], !dbg !9933
  %arrayidx121 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond119, !dbg !9933
  %108 = load %union.tree_node*, %union.tree_node** %arrayidx121, align 8, !dbg !9933
  %109 = load i32, i32* @linux_uclibc, align 4, !dbg !9933
  %110 = trunc i32 %109 to i8, !dbg !9933
  %111 = and i8 %110, 1, !dbg !9933
  %112 = xor i8 %111, 1, !dbg !9933
  tail call fastcc void @def_builtin_1(i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.429, i64 0, i64 0), i32 3, %union.tree_node* %104, %union.tree_node* %104, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv112, %union.tree_node* %108, i8 zeroext %112) #8, !dbg !9933
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9935
  %114 = load i32, i32* @flag_isoc99, align 4, !dbg !9935
  %tobool126 = icmp eq i32 %114, 0, !dbg !9935
  %conv129 = zext i1 %tobool126 to i8, !dbg !9935
  %115 = load i32, i32* @flag_rounding_math, align 4, !dbg !9935
  %tobool130 = icmp eq i32 %115, 0, !dbg !9935
  %cond131 = select i1 %tobool130, i64 46, i64 48, !dbg !9935
  %arrayidx133 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond131, !dbg !9935
  %116 = load %union.tree_node*, %union.tree_node** %arrayidx133, align 16, !dbg !9935
  %117 = load i32, i32* @linux_uclibc, align 4, !dbg !9935
  %118 = trunc i32 %117 to i8, !dbg !9935
  %119 = and i8 %118, 1, !dbg !9935
  %120 = xor i8 %119, 1, !dbg !9935
  tail call fastcc void @def_builtin_1(i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.430, i64 0, i64 0), i32 3, %union.tree_node* %113, %union.tree_node* %113, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv129, %union.tree_node* %116, i8 zeroext %120) #8, !dbg !9935
  %121 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9937
  %122 = load i32, i32* @flag_isoc99, align 4, !dbg !9937
  %tobool138 = icmp eq i32 %122, 0, !dbg !9937
  %conv141 = zext i1 %tobool138 to i8, !dbg !9937
  %123 = load i32, i32* @flag_rounding_math, align 4, !dbg !9937
  %tobool142 = icmp eq i32 %123, 0, !dbg !9937
  %cond143 = select i1 %tobool142, i64 46, i64 48, !dbg !9937
  %arrayidx145 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond143, !dbg !9937
  %124 = load %union.tree_node*, %union.tree_node** %arrayidx145, align 16, !dbg !9937
  %125 = load i32, i32* @linux_uclibc, align 4, !dbg !9937
  %126 = trunc i32 %125 to i8, !dbg !9937
  %127 = and i8 %126, 1, !dbg !9937
  %128 = xor i8 %127, 1, !dbg !9937
  tail call fastcc void @def_builtin_1(i32 9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.431, i64 0, i64 0), i32 3, %union.tree_node* %121, %union.tree_node* %121, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv141, %union.tree_node* %124, i8 zeroext %128) #8, !dbg !9937
  %129 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9939
  %130 = load i32, i32* @flag_isoc99, align 4, !dbg !9939
  %tobool150 = icmp eq i32 %130, 0, !dbg !9939
  %conv153 = zext i1 %tobool150 to i8, !dbg !9939
  %131 = load i32, i32* @flag_rounding_math, align 4, !dbg !9939
  %tobool154 = icmp eq i32 %131, 0, !dbg !9939
  %cond155 = select i1 %tobool154, i64 46, i64 48, !dbg !9939
  %arrayidx157 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond155, !dbg !9939
  %132 = load %union.tree_node*, %union.tree_node** %arrayidx157, align 16, !dbg !9939
  %133 = load i32, i32* @linux_uclibc, align 4, !dbg !9939
  %134 = trunc i32 %133 to i8, !dbg !9939
  %135 = and i8 %134, 1, !dbg !9939
  %136 = xor i8 %135, 1, !dbg !9939
  tail call fastcc void @def_builtin_1(i32 10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.432, i64 0, i64 0), i32 3, %union.tree_node* %129, %union.tree_node* %129, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv153, %union.tree_node* %132, i8 zeroext %136) #8, !dbg !9939
  %137 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9941
  %138 = load i32, i32* @flag_isoc99, align 4, !dbg !9941
  %tobool162 = icmp eq i32 %138, 0, !dbg !9941
  %conv165 = zext i1 %tobool162 to i8, !dbg !9941
  %139 = load i32, i32* @flag_errno_math, align 4, !dbg !9941
  %tobool166 = icmp eq i32 %139, 0, !dbg !9941
  br i1 %tobool166, label %cond.false168, label %cond.end171, !dbg !9941

cond.false168:                                    ; preds = %cond.end118
  %140 = load i32, i32* @flag_rounding_math, align 4, !dbg !9941
  %tobool169 = icmp eq i32 %140, 0, !dbg !9941
  %cond170 = select i1 %tobool169, i64 46, i64 48, !dbg !9941
  br label %cond.end171, !dbg !9941

cond.end171:                                      ; preds = %cond.end118, %cond.false168
  %cond172 = phi i64 [ %cond170, %cond.false168 ], [ 45, %cond.end118 ], !dbg !9941
  %arrayidx174 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond172, !dbg !9941
  %141 = load %union.tree_node*, %union.tree_node** %arrayidx174, align 8, !dbg !9941
  %142 = load i32, i32* @linux_uclibc, align 4, !dbg !9941
  %143 = trunc i32 %142 to i8, !dbg !9941
  %144 = and i8 %143, 1, !dbg !9941
  %145 = xor i8 %144, 1, !dbg !9941
  tail call fastcc void @def_builtin_1(i32 11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.433, i64 0, i64 0), i32 3, %union.tree_node* %137, %union.tree_node* %137, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv165, %union.tree_node* %141, i8 zeroext %145) #8, !dbg !9941
  %146 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9943
  %147 = load i32, i32* @flag_rounding_math, align 4, !dbg !9943
  %tobool179 = icmp eq i32 %147, 0, !dbg !9943
  %cond180 = select i1 %tobool179, i64 46, i64 48, !dbg !9943
  %arrayidx182 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond180, !dbg !9943
  %148 = load %union.tree_node*, %union.tree_node** %arrayidx182, align 16, !dbg !9943
  tail call fastcc void @def_builtin_1(i32 12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.434, i64 0, i64 0), i32 3, %union.tree_node* %146, %union.tree_node* %146, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %148, i8 zeroext 1) #8, !dbg !9943
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !9945
  %150 = load i32, i32* @flag_errno_math, align 4, !dbg !9945
  %tobool183 = icmp eq i32 %150, 0, !dbg !9945
  br i1 %tobool183, label %cond.false185, label %cond.end188, !dbg !9945

cond.false185:                                    ; preds = %cond.end171
  %151 = load i32, i32* @flag_rounding_math, align 4, !dbg !9945
  %tobool186 = icmp eq i32 %151, 0, !dbg !9945
  %cond187 = select i1 %tobool186, i64 46, i64 48, !dbg !9945
  br label %cond.end188, !dbg !9945

cond.end188:                                      ; preds = %cond.end171, %cond.false185
  %cond189 = phi i64 [ %cond187, %cond.false185 ], [ 45, %cond.end171 ], !dbg !9945
  %arrayidx191 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond189, !dbg !9945
  %152 = load %union.tree_node*, %union.tree_node** %arrayidx191, align 8, !dbg !9945
  tail call fastcc void @def_builtin_1(i32 13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.435, i64 0, i64 0), i32 3, %union.tree_node* %149, %union.tree_node* %149, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %152, i8 zeroext 1) #8, !dbg !9945
  %153 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !9947
  %154 = load i32, i32* @flag_isoc99, align 4, !dbg !9947
  %tobool192 = icmp eq i32 %154, 0, !dbg !9947
  %conv195 = zext i1 %tobool192 to i8, !dbg !9947
  %155 = load i32, i32* @flag_errno_math, align 4, !dbg !9947
  %tobool196 = icmp eq i32 %155, 0, !dbg !9947
  br i1 %tobool196, label %cond.false198, label %cond.end201, !dbg !9947

cond.false198:                                    ; preds = %cond.end188
  %156 = load i32, i32* @flag_rounding_math, align 4, !dbg !9947
  %tobool199 = icmp eq i32 %156, 0, !dbg !9947
  %cond200 = select i1 %tobool199, i64 46, i64 48, !dbg !9947
  br label %cond.end201, !dbg !9947

cond.end201:                                      ; preds = %cond.end188, %cond.false198
  %cond202 = phi i64 [ %cond200, %cond.false198 ], [ 45, %cond.end188 ], !dbg !9947
  %arrayidx204 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond202, !dbg !9947
  %157 = load %union.tree_node*, %union.tree_node** %arrayidx204, align 8, !dbg !9947
  %158 = load i32, i32* @linux_uclibc, align 4, !dbg !9947
  %159 = trunc i32 %158 to i8, !dbg !9947
  %160 = and i8 %159, 1, !dbg !9947
  %161 = xor i8 %160, 1, !dbg !9947
  tail call fastcc void @def_builtin_1(i32 14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.436, i64 0, i64 0), i32 3, %union.tree_node* %153, %union.tree_node* %153, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv195, %union.tree_node* %157, i8 zeroext %161) #8, !dbg !9947
  %162 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !9949
  %163 = load i32, i32* @flag_isoc99, align 4, !dbg !9949
  %tobool209 = icmp eq i32 %163, 0, !dbg !9949
  %conv212 = zext i1 %tobool209 to i8, !dbg !9949
  %164 = load i32, i32* @flag_errno_math, align 4, !dbg !9949
  %tobool213 = icmp eq i32 %164, 0, !dbg !9949
  br i1 %tobool213, label %cond.false215, label %cond.end218, !dbg !9949

cond.false215:                                    ; preds = %cond.end201
  %165 = load i32, i32* @flag_rounding_math, align 4, !dbg !9949
  %tobool216 = icmp eq i32 %165, 0, !dbg !9949
  %cond217 = select i1 %tobool216, i64 46, i64 48, !dbg !9949
  br label %cond.end218, !dbg !9949

cond.end218:                                      ; preds = %cond.end201, %cond.false215
  %cond219 = phi i64 [ %cond217, %cond.false215 ], [ 45, %cond.end201 ], !dbg !9949
  %arrayidx221 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond219, !dbg !9949
  %166 = load %union.tree_node*, %union.tree_node** %arrayidx221, align 8, !dbg !9949
  %167 = load i32, i32* @linux_uclibc, align 4, !dbg !9949
  %168 = trunc i32 %167 to i8, !dbg !9949
  %169 = and i8 %168, 1, !dbg !9949
  %170 = xor i8 %169, 1, !dbg !9949
  tail call fastcc void @def_builtin_1(i32 15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.437, i64 0, i64 0), i32 3, %union.tree_node* %162, %union.tree_node* %162, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv212, %union.tree_node* %166, i8 zeroext %170) #8, !dbg !9949
  %171 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9951
  %172 = load i32, i32* @flag_isoc99, align 4, !dbg !9951
  %tobool226 = icmp eq i32 %172, 0, !dbg !9951
  %conv229 = zext i1 %tobool226 to i8, !dbg !9951
  %173 = load i32, i32* @flag_rounding_math, align 4, !dbg !9951
  %tobool230 = icmp eq i32 %173, 0, !dbg !9951
  %cond231 = select i1 %tobool230, i64 46, i64 48, !dbg !9951
  %arrayidx233 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond231, !dbg !9951
  %174 = load %union.tree_node*, %union.tree_node** %arrayidx233, align 16, !dbg !9951
  %175 = load i32, i32* @linux_uclibc, align 4, !dbg !9951
  %176 = trunc i32 %175 to i8, !dbg !9951
  %177 = and i8 %176, 1, !dbg !9951
  %178 = xor i8 %177, 1, !dbg !9951
  tail call fastcc void @def_builtin_1(i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.438, i64 0, i64 0), i32 3, %union.tree_node* %171, %union.tree_node* %171, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv229, %union.tree_node* %174, i8 zeroext %178) #8, !dbg !9951
  %179 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9953
  %180 = load i32, i32* @flag_isoc99, align 4, !dbg !9953
  %tobool238 = icmp eq i32 %180, 0, !dbg !9953
  %conv241 = zext i1 %tobool238 to i8, !dbg !9953
  %181 = load i32, i32* @flag_errno_math, align 4, !dbg !9953
  %tobool242 = icmp eq i32 %181, 0, !dbg !9953
  br i1 %tobool242, label %cond.false244, label %cond.end247, !dbg !9953

cond.false244:                                    ; preds = %cond.end218
  %182 = load i32, i32* @flag_rounding_math, align 4, !dbg !9953
  %tobool245 = icmp eq i32 %182, 0, !dbg !9953
  %cond246 = select i1 %tobool245, i64 46, i64 48, !dbg !9953
  br label %cond.end247, !dbg !9953

cond.end247:                                      ; preds = %cond.end218, %cond.false244
  %cond248 = phi i64 [ %cond246, %cond.false244 ], [ 45, %cond.end218 ], !dbg !9953
  %arrayidx250 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond248, !dbg !9953
  %183 = load %union.tree_node*, %union.tree_node** %arrayidx250, align 8, !dbg !9953
  %184 = load i32, i32* @linux_uclibc, align 4, !dbg !9953
  %185 = trunc i32 %184 to i8, !dbg !9953
  %186 = and i8 %185, 1, !dbg !9953
  %187 = xor i8 %186, 1, !dbg !9953
  tail call fastcc void @def_builtin_1(i32 17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.439, i64 0, i64 0), i32 3, %union.tree_node* %179, %union.tree_node* %179, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv241, %union.tree_node* %183, i8 zeroext %187) #8, !dbg !9953
  %188 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9955
  %189 = load i32, i32* @flag_isoc99, align 4, !dbg !9955
  %tobool255 = icmp eq i32 %189, 0, !dbg !9955
  %conv258 = zext i1 %tobool255 to i8, !dbg !9955
  %190 = load i32, i32* @flag_errno_math, align 4, !dbg !9955
  %tobool259 = icmp eq i32 %190, 0, !dbg !9955
  br i1 %tobool259, label %cond.false261, label %cond.end264, !dbg !9955

cond.false261:                                    ; preds = %cond.end247
  %191 = load i32, i32* @flag_rounding_math, align 4, !dbg !9955
  %tobool262 = icmp eq i32 %191, 0, !dbg !9955
  %cond263 = select i1 %tobool262, i64 46, i64 48, !dbg !9955
  br label %cond.end264, !dbg !9955

cond.end264:                                      ; preds = %cond.end247, %cond.false261
  %cond265 = phi i64 [ %cond263, %cond.false261 ], [ 45, %cond.end247 ], !dbg !9955
  %arrayidx267 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond265, !dbg !9955
  %192 = load %union.tree_node*, %union.tree_node** %arrayidx267, align 8, !dbg !9955
  %193 = load i32, i32* @linux_uclibc, align 4, !dbg !9955
  %194 = trunc i32 %193 to i8, !dbg !9955
  %195 = and i8 %194, 1, !dbg !9955
  %196 = xor i8 %195, 1, !dbg !9955
  tail call fastcc void @def_builtin_1(i32 18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.440, i64 0, i64 0), i32 3, %union.tree_node* %188, %union.tree_node* %188, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv258, %union.tree_node* %192, i8 zeroext %196) #8, !dbg !9955
  %197 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9957
  %198 = load i32, i32* @flag_isoc99, align 4, !dbg !9957
  %tobool272 = icmp eq i32 %198, 0, !dbg !9957
  %conv275 = zext i1 %tobool272 to i8, !dbg !9957
  %199 = load i32, i32* @flag_errno_math, align 4, !dbg !9957
  %tobool276 = icmp eq i32 %199, 0, !dbg !9957
  br i1 %tobool276, label %cond.false278, label %cond.end281, !dbg !9957

cond.false278:                                    ; preds = %cond.end264
  %200 = load i32, i32* @flag_rounding_math, align 4, !dbg !9957
  %tobool279 = icmp eq i32 %200, 0, !dbg !9957
  %cond280 = select i1 %tobool279, i64 46, i64 48, !dbg !9957
  br label %cond.end281, !dbg !9957

cond.end281:                                      ; preds = %cond.end264, %cond.false278
  %cond282 = phi i64 [ %cond280, %cond.false278 ], [ 45, %cond.end264 ], !dbg !9957
  %arrayidx284 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond282, !dbg !9957
  %201 = load %union.tree_node*, %union.tree_node** %arrayidx284, align 8, !dbg !9957
  %202 = load i32, i32* @linux_uclibc, align 4, !dbg !9957
  %203 = trunc i32 %202 to i8, !dbg !9957
  %204 = and i8 %203, 1, !dbg !9957
  %205 = xor i8 %204, 1, !dbg !9957
  tail call fastcc void @def_builtin_1(i32 19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.441, i64 0, i64 0), i32 3, %union.tree_node* %197, %union.tree_node* %197, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv275, %union.tree_node* %201, i8 zeroext %205) #8, !dbg !9957
  %206 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9959
  %207 = load i32, i32* @flag_isoc99, align 4, !dbg !9959
  %tobool289 = icmp eq i32 %207, 0, !dbg !9959
  %conv292 = zext i1 %tobool289 to i8, !dbg !9959
  %208 = load i32, i32* @flag_rounding_math, align 4, !dbg !9959
  %tobool293 = icmp eq i32 %208, 0, !dbg !9959
  %cond294 = select i1 %tobool293, i64 46, i64 48, !dbg !9959
  %arrayidx296 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond294, !dbg !9959
  %209 = load %union.tree_node*, %union.tree_node** %arrayidx296, align 16, !dbg !9959
  %210 = load i32, i32* @linux_uclibc, align 4, !dbg !9959
  %211 = trunc i32 %210 to i8, !dbg !9959
  %212 = and i8 %211, 1, !dbg !9959
  %213 = xor i8 %212, 1, !dbg !9959
  tail call fastcc void @def_builtin_1(i32 20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.442, i64 0, i64 0), i32 3, %union.tree_node* %206, %union.tree_node* %206, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv292, %union.tree_node* %209, i8 zeroext %213) #8, !dbg !9959
  %214 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9961
  %215 = load i32, i32* @flag_isoc99, align 4, !dbg !9961
  %tobool301 = icmp eq i32 %215, 0, !dbg !9961
  %conv304 = zext i1 %tobool301 to i8, !dbg !9961
  %216 = load i32, i32* @flag_rounding_math, align 4, !dbg !9961
  %tobool305 = icmp eq i32 %216, 0, !dbg !9961
  %cond306 = select i1 %tobool305, i64 46, i64 48, !dbg !9961
  %arrayidx308 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond306, !dbg !9961
  %217 = load %union.tree_node*, %union.tree_node** %arrayidx308, align 16, !dbg !9961
  %218 = load i32, i32* @linux_uclibc, align 4, !dbg !9961
  %219 = trunc i32 %218 to i8, !dbg !9961
  %220 = and i8 %219, 1, !dbg !9961
  %221 = xor i8 %220, 1, !dbg !9961
  tail call fastcc void @def_builtin_1(i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.443, i64 0, i64 0), i32 3, %union.tree_node* %214, %union.tree_node* %214, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv304, %union.tree_node* %217, i8 zeroext %221) #8, !dbg !9961
  %222 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9963
  %223 = load i32, i32* @flag_isoc99, align 4, !dbg !9963
  %tobool313 = icmp eq i32 %223, 0, !dbg !9963
  %conv316 = zext i1 %tobool313 to i8, !dbg !9963
  %224 = load i32, i32* @flag_rounding_math, align 4, !dbg !9963
  %tobool317 = icmp eq i32 %224, 0, !dbg !9963
  %cond318 = select i1 %tobool317, i64 46, i64 48, !dbg !9963
  %arrayidx320 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond318, !dbg !9963
  %225 = load %union.tree_node*, %union.tree_node** %arrayidx320, align 16, !dbg !9963
  %226 = load i32, i32* @linux_uclibc, align 4, !dbg !9963
  %227 = trunc i32 %226 to i8, !dbg !9963
  %228 = and i8 %227, 1, !dbg !9963
  %229 = xor i8 %228, 1, !dbg !9963
  tail call fastcc void @def_builtin_1(i32 22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.444, i64 0, i64 0), i32 3, %union.tree_node* %222, %union.tree_node* %222, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv316, %union.tree_node* %225, i8 zeroext %229) #8, !dbg !9963
  %230 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9965
  %231 = load i32, i32* @flag_isoc99, align 4, !dbg !9965
  %tobool325 = icmp eq i32 %231, 0, !dbg !9965
  %conv328 = zext i1 %tobool325 to i8, !dbg !9965
  %232 = load i32, i32* @flag_rounding_math, align 4, !dbg !9965
  %tobool329 = icmp eq i32 %232, 0, !dbg !9965
  %cond330 = select i1 %tobool329, i64 46, i64 48, !dbg !9965
  %arrayidx332 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond330, !dbg !9965
  %233 = load %union.tree_node*, %union.tree_node** %arrayidx332, align 16, !dbg !9965
  %234 = load i32, i32* @linux_uclibc, align 4, !dbg !9965
  %235 = trunc i32 %234 to i8, !dbg !9965
  %236 = and i8 %235, 1, !dbg !9965
  %237 = xor i8 %236, 1, !dbg !9965
  tail call fastcc void @def_builtin_1(i32 23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.445, i64 0, i64 0), i32 3, %union.tree_node* %230, %union.tree_node* %230, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv328, %union.tree_node* %233, i8 zeroext %237) #8, !dbg !9965
  %238 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9967
  %239 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !9967
  tail call fastcc void @def_builtin_1(i32 24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.446, i64 0, i64 0), i32 3, %union.tree_node* %238, %union.tree_node* %238, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %239, i8 zeroext 1) #8, !dbg !9967
  %240 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9969
  %241 = load i32, i32* @flag_isoc99, align 4, !dbg !9969
  %tobool337 = icmp eq i32 %241, 0, !dbg !9969
  %conv340 = zext i1 %tobool337 to i8, !dbg !9969
  %242 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !9969
  %243 = load i32, i32* @linux_uclibc, align 4, !dbg !9969
  %244 = trunc i32 %243 to i8, !dbg !9969
  %245 = and i8 %244, 1, !dbg !9969
  %246 = xor i8 %245, 1, !dbg !9969
  tail call fastcc void @def_builtin_1(i32 25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.447, i64 0, i64 0), i32 3, %union.tree_node* %240, %union.tree_node* %240, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv340, %union.tree_node* %242, i8 zeroext %246) #8, !dbg !9969
  %247 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9971
  %248 = load i32, i32* @flag_isoc99, align 4, !dbg !9971
  %tobool345 = icmp eq i32 %248, 0, !dbg !9971
  %conv348 = zext i1 %tobool345 to i8, !dbg !9971
  %249 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !9971
  %250 = load i32, i32* @linux_uclibc, align 4, !dbg !9971
  %251 = trunc i32 %250 to i8, !dbg !9971
  %252 = and i8 %251, 1, !dbg !9971
  %253 = xor i8 %252, 1, !dbg !9971
  tail call fastcc void @def_builtin_1(i32 26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.448, i64 0, i64 0), i32 3, %union.tree_node* %247, %union.tree_node* %247, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv348, %union.tree_node* %249, i8 zeroext %253) #8, !dbg !9971
  %254 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !9973
  %255 = load i32, i32* @flag_isoc99, align 4, !dbg !9973
  %tobool353 = icmp eq i32 %255, 0, !dbg !9973
  %conv356 = zext i1 %tobool353 to i8, !dbg !9973
  %256 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !9973
  %257 = load i32, i32* @linux_uclibc, align 4, !dbg !9973
  %258 = trunc i32 %257 to i8, !dbg !9973
  %259 = and i8 %258, 1, !dbg !9973
  %260 = xor i8 %259, 1, !dbg !9973
  tail call fastcc void @def_builtin_1(i32 27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.449, i64 0, i64 0), i32 3, %union.tree_node* %254, %union.tree_node* %254, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv356, %union.tree_node* %256, i8 zeroext %260) #8, !dbg !9973
  %261 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !9975
  %262 = load i32, i32* @flag_isoc99, align 4, !dbg !9975
  %tobool361 = icmp eq i32 %262, 0, !dbg !9975
  %conv364 = zext i1 %tobool361 to i8, !dbg !9975
  %263 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !9975
  %264 = load i32, i32* @linux_uclibc, align 4, !dbg !9975
  %265 = trunc i32 %264 to i8, !dbg !9975
  %266 = and i8 %265, 1, !dbg !9975
  %267 = xor i8 %266, 1, !dbg !9975
  tail call fastcc void @def_builtin_1(i32 28, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.450, i64 0, i64 0), i32 3, %union.tree_node* %261, %union.tree_node* %261, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv364, %union.tree_node* %263, i8 zeroext %267) #8, !dbg !9975
  %268 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !9977
  %269 = load i32, i32* @flag_isoc99, align 4, !dbg !9977
  %tobool369 = icmp eq i32 %269, 0, !dbg !9977
  %conv372 = zext i1 %tobool369 to i8, !dbg !9977
  %270 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !9977
  %271 = load i32, i32* @linux_uclibc, align 4, !dbg !9977
  %272 = trunc i32 %271 to i8, !dbg !9977
  %273 = and i8 %272, 1, !dbg !9977
  %274 = xor i8 %273, 1, !dbg !9977
  tail call fastcc void @def_builtin_1(i32 29, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.451, i64 0, i64 0), i32 3, %union.tree_node* %268, %union.tree_node* %268, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv372, %union.tree_node* %270, i8 zeroext %274) #8, !dbg !9977
  %275 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9979
  %276 = load i32, i32* @flag_rounding_math, align 4, !dbg !9979
  %tobool377 = icmp eq i32 %276, 0, !dbg !9979
  %cond378 = select i1 %tobool377, i64 46, i64 48, !dbg !9979
  %arrayidx380 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond378, !dbg !9979
  %277 = load %union.tree_node*, %union.tree_node** %arrayidx380, align 16, !dbg !9979
  tail call fastcc void @def_builtin_1(i32 30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.452, i64 0, i64 0), i32 3, %union.tree_node* %275, %union.tree_node* %275, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %277, i8 zeroext 1) #8, !dbg !9979
  %278 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9981
  %279 = load i32, i32* @flag_isoc99, align 4, !dbg !9981
  %tobool381 = icmp eq i32 %279, 0, !dbg !9981
  %conv384 = zext i1 %tobool381 to i8, !dbg !9981
  %280 = load i32, i32* @flag_rounding_math, align 4, !dbg !9981
  %tobool385 = icmp eq i32 %280, 0, !dbg !9981
  %cond386 = select i1 %tobool385, i64 46, i64 48, !dbg !9981
  %arrayidx388 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond386, !dbg !9981
  %281 = load %union.tree_node*, %union.tree_node** %arrayidx388, align 16, !dbg !9981
  %282 = load i32, i32* @linux_uclibc, align 4, !dbg !9981
  %283 = trunc i32 %282 to i8, !dbg !9981
  %284 = and i8 %283, 1, !dbg !9981
  %285 = xor i8 %284, 1, !dbg !9981
  tail call fastcc void @def_builtin_1(i32 31, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.453, i64 0, i64 0), i32 3, %union.tree_node* %278, %union.tree_node* %278, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv384, %union.tree_node* %281, i8 zeroext %285) #8, !dbg !9981
  %286 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9983
  %287 = load i32, i32* @flag_errno_math, align 4, !dbg !9983
  %tobool393 = icmp eq i32 %287, 0, !dbg !9983
  br i1 %tobool393, label %cond.false395, label %cond.end398, !dbg !9983

cond.false395:                                    ; preds = %cond.end281
  %288 = load i32, i32* @flag_rounding_math, align 4, !dbg !9983
  %tobool396 = icmp eq i32 %288, 0, !dbg !9983
  %cond397 = select i1 %tobool396, i64 46, i64 48, !dbg !9983
  br label %cond.end398, !dbg !9983

cond.end398:                                      ; preds = %cond.end281, %cond.false395
  %cond399 = phi i64 [ %cond397, %cond.false395 ], [ 45, %cond.end281 ], !dbg !9983
  %arrayidx401 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond399, !dbg !9983
  %289 = load %union.tree_node*, %union.tree_node** %arrayidx401, align 8, !dbg !9983
  tail call fastcc void @def_builtin_1(i32 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.454, i64 0, i64 0), i32 3, %union.tree_node* %286, %union.tree_node* %286, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %289, i8 zeroext 1) #8, !dbg !9983
  %290 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !9985
  %291 = load i32, i32* @flag_isoc99, align 4, !dbg !9985
  %tobool402 = icmp eq i32 %291, 0, !dbg !9985
  %conv405 = zext i1 %tobool402 to i8, !dbg !9985
  %292 = load i32, i32* @flag_errno_math, align 4, !dbg !9985
  %tobool406 = icmp eq i32 %292, 0, !dbg !9985
  br i1 %tobool406, label %cond.false408, label %cond.end411, !dbg !9985

cond.false408:                                    ; preds = %cond.end398
  %293 = load i32, i32* @flag_rounding_math, align 4, !dbg !9985
  %tobool409 = icmp eq i32 %293, 0, !dbg !9985
  %cond410 = select i1 %tobool409, i64 46, i64 48, !dbg !9985
  br label %cond.end411, !dbg !9985

cond.end411:                                      ; preds = %cond.end398, %cond.false408
  %cond412 = phi i64 [ %cond410, %cond.false408 ], [ 45, %cond.end398 ], !dbg !9985
  %arrayidx414 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond412, !dbg !9985
  %294 = load %union.tree_node*, %union.tree_node** %arrayidx414, align 8, !dbg !9985
  %295 = load i32, i32* @linux_uclibc, align 4, !dbg !9985
  %296 = trunc i32 %295 to i8, !dbg !9985
  %297 = and i8 %296, 1, !dbg !9985
  %298 = xor i8 %297, 1, !dbg !9985
  tail call fastcc void @def_builtin_1(i32 33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.455, i64 0, i64 0), i32 3, %union.tree_node* %290, %union.tree_node* %290, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv405, %union.tree_node* %294, i8 zeroext %298) #8, !dbg !9985
  %299 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9987
  %300 = load i32, i32* @flag_isoc99, align 4, !dbg !9987
  %tobool419 = icmp eq i32 %300, 0, !dbg !9987
  %conv422 = zext i1 %tobool419 to i8, !dbg !9987
  %301 = load i32, i32* @flag_errno_math, align 4, !dbg !9987
  %tobool423 = icmp eq i32 %301, 0, !dbg !9987
  br i1 %tobool423, label %cond.false425, label %cond.end428, !dbg !9987

cond.false425:                                    ; preds = %cond.end411
  %302 = load i32, i32* @flag_rounding_math, align 4, !dbg !9987
  %tobool426 = icmp eq i32 %302, 0, !dbg !9987
  %cond427 = select i1 %tobool426, i64 46, i64 48, !dbg !9987
  br label %cond.end428, !dbg !9987

cond.end428:                                      ; preds = %cond.end411, %cond.false425
  %cond429 = phi i64 [ %cond427, %cond.false425 ], [ 45, %cond.end411 ], !dbg !9987
  %arrayidx431 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond429, !dbg !9987
  %303 = load %union.tree_node*, %union.tree_node** %arrayidx431, align 8, !dbg !9987
  %304 = load i32, i32* @linux_uclibc, align 4, !dbg !9987
  %305 = trunc i32 %304 to i8, !dbg !9987
  %306 = and i8 %305, 1, !dbg !9987
  %307 = xor i8 %306, 1, !dbg !9987
  tail call fastcc void @def_builtin_1(i32 34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.456, i64 0, i64 0), i32 3, %union.tree_node* %299, %union.tree_node* %299, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv422, %union.tree_node* %303, i8 zeroext %307) #8, !dbg !9987
  %308 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !9989
  %309 = load i32, i32* @flag_isoc99, align 4, !dbg !9989
  %tobool436 = icmp eq i32 %309, 0, !dbg !9989
  %conv439 = zext i1 %tobool436 to i8, !dbg !9989
  %310 = load i32, i32* @flag_rounding_math, align 4, !dbg !9989
  %tobool440 = icmp eq i32 %310, 0, !dbg !9989
  %cond441 = select i1 %tobool440, i64 46, i64 48, !dbg !9989
  %arrayidx443 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond441, !dbg !9989
  %311 = load %union.tree_node*, %union.tree_node** %arrayidx443, align 16, !dbg !9989
  %312 = load i32, i32* @linux_uclibc, align 4, !dbg !9989
  %313 = trunc i32 %312 to i8, !dbg !9989
  %314 = and i8 %313, 1, !dbg !9989
  %315 = xor i8 %314, 1, !dbg !9989
  tail call fastcc void @def_builtin_1(i32 35, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.457, i64 0, i64 0), i32 3, %union.tree_node* %308, %union.tree_node* %308, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv439, %union.tree_node* %311, i8 zeroext %315) #8, !dbg !9989
  %316 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !9991
  %317 = load i32, i32* @flag_errno_math, align 4, !dbg !9991
  %tobool448 = icmp eq i32 %317, 0, !dbg !9991
  br i1 %tobool448, label %cond.false450, label %cond.end453, !dbg !9991

cond.false450:                                    ; preds = %cond.end428
  %318 = load i32, i32* @flag_rounding_math, align 4, !dbg !9991
  %tobool451 = icmp eq i32 %318, 0, !dbg !9991
  %cond452 = select i1 %tobool451, i64 46, i64 48, !dbg !9991
  br label %cond.end453, !dbg !9991

cond.end453:                                      ; preds = %cond.end428, %cond.false450
  %cond454 = phi i64 [ %cond452, %cond.false450 ], [ 45, %cond.end428 ], !dbg !9991
  %arrayidx456 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond454, !dbg !9991
  %319 = load %union.tree_node*, %union.tree_node** %arrayidx456, align 8, !dbg !9991
  tail call fastcc void @def_builtin_1(i32 36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.458, i64 0, i64 0), i32 3, %union.tree_node* %316, %union.tree_node* %316, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %319, i8 zeroext 0) #8, !dbg !9991
  %320 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !9993
  %321 = load i32, i32* @flag_errno_math, align 4, !dbg !9993
  %tobool457 = icmp eq i32 %321, 0, !dbg !9993
  br i1 %tobool457, label %cond.false459, label %cond.end462, !dbg !9993

cond.false459:                                    ; preds = %cond.end453
  %322 = load i32, i32* @flag_rounding_math, align 4, !dbg !9993
  %tobool460 = icmp eq i32 %322, 0, !dbg !9993
  %cond461 = select i1 %tobool460, i64 46, i64 48, !dbg !9993
  br label %cond.end462, !dbg !9993

cond.end462:                                      ; preds = %cond.end453, %cond.false459
  %cond463 = phi i64 [ %cond461, %cond.false459 ], [ 45, %cond.end453 ], !dbg !9993
  %arrayidx465 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond463, !dbg !9993
  %323 = load %union.tree_node*, %union.tree_node** %arrayidx465, align 8, !dbg !9993
  tail call fastcc void @def_builtin_1(i32 37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.459, i64 0, i64 0), i32 3, %union.tree_node* %320, %union.tree_node* %320, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %323, i8 zeroext 0) #8, !dbg !9993
  %324 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !9995
  %325 = load i32, i32* @flag_errno_math, align 4, !dbg !9995
  %tobool466 = icmp eq i32 %325, 0, !dbg !9995
  br i1 %tobool466, label %cond.false468, label %cond.end471, !dbg !9995

cond.false468:                                    ; preds = %cond.end462
  %326 = load i32, i32* @flag_rounding_math, align 4, !dbg !9995
  %tobool469 = icmp eq i32 %326, 0, !dbg !9995
  %cond470 = select i1 %tobool469, i64 46, i64 48, !dbg !9995
  br label %cond.end471, !dbg !9995

cond.end471:                                      ; preds = %cond.end462, %cond.false468
  %cond472 = phi i64 [ %cond470, %cond.false468 ], [ 45, %cond.end462 ], !dbg !9995
  %arrayidx474 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond472, !dbg !9995
  %327 = load %union.tree_node*, %union.tree_node** %arrayidx474, align 8, !dbg !9995
  tail call fastcc void @def_builtin_1(i32 38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.460, i64 0, i64 0), i32 3, %union.tree_node* %324, %union.tree_node* %324, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %327, i8 zeroext 0) #8, !dbg !9995
  %328 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9997
  %329 = load i32, i32* @flag_isoc99, align 4, !dbg !9997
  %tobool475 = icmp eq i32 %329, 0, !dbg !9997
  %conv478 = zext i1 %tobool475 to i8, !dbg !9997
  %330 = load i32, i32* @flag_rounding_math, align 4, !dbg !9997
  %tobool479 = icmp eq i32 %330, 0, !dbg !9997
  %cond480 = select i1 %tobool479, i64 46, i64 48, !dbg !9997
  %arrayidx482 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond480, !dbg !9997
  %331 = load %union.tree_node*, %union.tree_node** %arrayidx482, align 16, !dbg !9997
  %332 = load i32, i32* @linux_uclibc, align 4, !dbg !9997
  %333 = trunc i32 %332 to i8, !dbg !9997
  %334 = and i8 %333, 1, !dbg !9997
  %335 = xor i8 %334, 1, !dbg !9997
  tail call fastcc void @def_builtin_1(i32 39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.461, i64 0, i64 0), i32 3, %union.tree_node* %328, %union.tree_node* %328, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv478, %union.tree_node* %331, i8 zeroext %335) #8, !dbg !9997
  %336 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !9999
  %337 = load i32, i32* @flag_isoc99, align 4, !dbg !9999
  %tobool487 = icmp eq i32 %337, 0, !dbg !9999
  %conv490 = zext i1 %tobool487 to i8, !dbg !9999
  %338 = load i32, i32* @flag_errno_math, align 4, !dbg !9999
  %tobool491 = icmp eq i32 %338, 0, !dbg !9999
  br i1 %tobool491, label %cond.false493, label %cond.end496, !dbg !9999

cond.false493:                                    ; preds = %cond.end471
  %339 = load i32, i32* @flag_rounding_math, align 4, !dbg !9999
  %tobool494 = icmp eq i32 %339, 0, !dbg !9999
  %cond495 = select i1 %tobool494, i64 46, i64 48, !dbg !9999
  br label %cond.end496, !dbg !9999

cond.end496:                                      ; preds = %cond.end471, %cond.false493
  %cond497 = phi i64 [ %cond495, %cond.false493 ], [ 45, %cond.end471 ], !dbg !9999
  %arrayidx499 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond497, !dbg !9999
  %340 = load %union.tree_node*, %union.tree_node** %arrayidx499, align 8, !dbg !9999
  %341 = load i32, i32* @linux_uclibc, align 4, !dbg !9999
  %342 = trunc i32 %341 to i8, !dbg !9999
  %343 = and i8 %342, 1, !dbg !9999
  %344 = xor i8 %343, 1, !dbg !9999
  tail call fastcc void @def_builtin_1(i32 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.462, i64 0, i64 0), i32 3, %union.tree_node* %336, %union.tree_node* %336, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv490, %union.tree_node* %340, i8 zeroext %344) #8, !dbg !9999
  %345 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10001
  %346 = load i32, i32* @flag_isoc99, align 4, !dbg !10001
  %tobool504 = icmp eq i32 %346, 0, !dbg !10001
  %conv507 = zext i1 %tobool504 to i8, !dbg !10001
  %347 = load i32, i32* @flag_errno_math, align 4, !dbg !10001
  %tobool508 = icmp eq i32 %347, 0, !dbg !10001
  br i1 %tobool508, label %cond.false510, label %cond.end513, !dbg !10001

cond.false510:                                    ; preds = %cond.end496
  %348 = load i32, i32* @flag_rounding_math, align 4, !dbg !10001
  %tobool511 = icmp eq i32 %348, 0, !dbg !10001
  %cond512 = select i1 %tobool511, i64 46, i64 48, !dbg !10001
  br label %cond.end513, !dbg !10001

cond.end513:                                      ; preds = %cond.end496, %cond.false510
  %cond514 = phi i64 [ %cond512, %cond.false510 ], [ 45, %cond.end496 ], !dbg !10001
  %arrayidx516 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond514, !dbg !10001
  %349 = load %union.tree_node*, %union.tree_node** %arrayidx516, align 8, !dbg !10001
  %350 = load i32, i32* @linux_uclibc, align 4, !dbg !10001
  %351 = trunc i32 %350 to i8, !dbg !10001
  %352 = and i8 %351, 1, !dbg !10001
  %353 = xor i8 %352, 1, !dbg !10001
  tail call fastcc void @def_builtin_1(i32 41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.463, i64 0, i64 0), i32 3, %union.tree_node* %345, %union.tree_node* %345, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv507, %union.tree_node* %349, i8 zeroext %353) #8, !dbg !10001
  %354 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10003
  %355 = load i32, i32* @flag_isoc99, align 4, !dbg !10003
  %tobool521 = icmp eq i32 %355, 0, !dbg !10003
  %conv524 = zext i1 %tobool521 to i8, !dbg !10003
  %356 = load i32, i32* @flag_errno_math, align 4, !dbg !10003
  %tobool525 = icmp eq i32 %356, 0, !dbg !10003
  br i1 %tobool525, label %cond.false527, label %cond.end530, !dbg !10003

cond.false527:                                    ; preds = %cond.end513
  %357 = load i32, i32* @flag_rounding_math, align 4, !dbg !10003
  %tobool528 = icmp eq i32 %357, 0, !dbg !10003
  %cond529 = select i1 %tobool528, i64 46, i64 48, !dbg !10003
  br label %cond.end530, !dbg !10003

cond.end530:                                      ; preds = %cond.end513, %cond.false527
  %cond531 = phi i64 [ %cond529, %cond.false527 ], [ 45, %cond.end513 ], !dbg !10003
  %arrayidx533 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond531, !dbg !10003
  %358 = load %union.tree_node*, %union.tree_node** %arrayidx533, align 8, !dbg !10003
  %359 = load i32, i32* @linux_uclibc, align 4, !dbg !10003
  %360 = trunc i32 %359 to i8, !dbg !10003
  %361 = and i8 %360, 1, !dbg !10003
  %362 = xor i8 %361, 1, !dbg !10003
  tail call fastcc void @def_builtin_1(i32 42, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.464, i64 0, i64 0), i32 3, %union.tree_node* %354, %union.tree_node* %354, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv524, %union.tree_node* %358, i8 zeroext %362) #8, !dbg !10003
  %363 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10005
  %364 = load i32, i32* @flag_isoc99, align 4, !dbg !10005
  %tobool538 = icmp eq i32 %364, 0, !dbg !10005
  %conv541 = zext i1 %tobool538 to i8, !dbg !10005
  %365 = load i32, i32* @flag_rounding_math, align 4, !dbg !10005
  %tobool542 = icmp eq i32 %365, 0, !dbg !10005
  %cond543 = select i1 %tobool542, i64 46, i64 48, !dbg !10005
  %arrayidx545 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond543, !dbg !10005
  %366 = load %union.tree_node*, %union.tree_node** %arrayidx545, align 16, !dbg !10005
  %367 = load i32, i32* @linux_uclibc, align 4, !dbg !10005
  %368 = trunc i32 %367 to i8, !dbg !10005
  %369 = and i8 %368, 1, !dbg !10005
  %370 = xor i8 %369, 1, !dbg !10005
  tail call fastcc void @def_builtin_1(i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.465, i64 0, i64 0), i32 3, %union.tree_node* %363, %union.tree_node* %363, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv541, %union.tree_node* %366, i8 zeroext %370) #8, !dbg !10005
  %371 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10007
  %372 = load i32, i32* @flag_isoc99, align 4, !dbg !10007
  %tobool550 = icmp eq i32 %372, 0, !dbg !10007
  %conv553 = zext i1 %tobool550 to i8, !dbg !10007
  %373 = load i32, i32* @flag_rounding_math, align 4, !dbg !10007
  %tobool554 = icmp eq i32 %373, 0, !dbg !10007
  %cond555 = select i1 %tobool554, i64 46, i64 48, !dbg !10007
  %arrayidx557 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond555, !dbg !10007
  %374 = load %union.tree_node*, %union.tree_node** %arrayidx557, align 16, !dbg !10007
  %375 = load i32, i32* @linux_uclibc, align 4, !dbg !10007
  %376 = trunc i32 %375 to i8, !dbg !10007
  %377 = and i8 %376, 1, !dbg !10007
  %378 = xor i8 %377, 1, !dbg !10007
  tail call fastcc void @def_builtin_1(i32 44, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.466, i64 0, i64 0), i32 3, %union.tree_node* %371, %union.tree_node* %371, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv553, %union.tree_node* %374, i8 zeroext %378) #8, !dbg !10007
  %379 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10009
  %380 = load i32, i32* @flag_errno_math, align 4, !dbg !10009
  %tobool562 = icmp eq i32 %380, 0, !dbg !10009
  br i1 %tobool562, label %cond.false564, label %cond.end567, !dbg !10009

cond.false564:                                    ; preds = %cond.end530
  %381 = load i32, i32* @flag_rounding_math, align 4, !dbg !10009
  %tobool565 = icmp eq i32 %381, 0, !dbg !10009
  %cond566 = select i1 %tobool565, i64 46, i64 48, !dbg !10009
  br label %cond.end567, !dbg !10009

cond.end567:                                      ; preds = %cond.end530, %cond.false564
  %cond568 = phi i64 [ %cond566, %cond.false564 ], [ 45, %cond.end530 ], !dbg !10009
  %arrayidx570 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond568, !dbg !10009
  %382 = load %union.tree_node*, %union.tree_node** %arrayidx570, align 8, !dbg !10009
  tail call fastcc void @def_builtin_1(i32 45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.467, i64 0, i64 0), i32 3, %union.tree_node* %379, %union.tree_node* %379, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %382, i8 zeroext 1) #8, !dbg !10009
  %383 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10011
  %384 = load i32, i32* @flag_errno_math, align 4, !dbg !10011
  %tobool571 = icmp eq i32 %384, 0, !dbg !10011
  br i1 %tobool571, label %cond.false573, label %cond.end576, !dbg !10011

cond.false573:                                    ; preds = %cond.end567
  %385 = load i32, i32* @flag_rounding_math, align 4, !dbg !10011
  %tobool574 = icmp eq i32 %385, 0, !dbg !10011
  %cond575 = select i1 %tobool574, i64 46, i64 48, !dbg !10011
  br label %cond.end576, !dbg !10011

cond.end576:                                      ; preds = %cond.end567, %cond.false573
  %cond577 = phi i64 [ %cond575, %cond.false573 ], [ 45, %cond.end567 ], !dbg !10011
  %arrayidx579 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond577, !dbg !10011
  %386 = load %union.tree_node*, %union.tree_node** %arrayidx579, align 8, !dbg !10011
  tail call fastcc void @def_builtin_1(i32 46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i64 0, i64 0), i32 3, %union.tree_node* %383, %union.tree_node* %383, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %386, i8 zeroext 0) #8, !dbg !10011
  %387 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10013
  %388 = load i32, i32* @flag_errno_math, align 4, !dbg !10013
  %tobool580 = icmp eq i32 %388, 0, !dbg !10013
  br i1 %tobool580, label %cond.false582, label %cond.end585, !dbg !10013

cond.false582:                                    ; preds = %cond.end576
  %389 = load i32, i32* @flag_rounding_math, align 4, !dbg !10013
  %tobool583 = icmp eq i32 %389, 0, !dbg !10013
  %cond584 = select i1 %tobool583, i64 46, i64 48, !dbg !10013
  br label %cond.end585, !dbg !10013

cond.end585:                                      ; preds = %cond.end576, %cond.false582
  %cond586 = phi i64 [ %cond584, %cond.false582 ], [ 45, %cond.end576 ], !dbg !10013
  %arrayidx588 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond586, !dbg !10013
  %390 = load %union.tree_node*, %union.tree_node** %arrayidx588, align 8, !dbg !10013
  tail call fastcc void @def_builtin_1(i32 47, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.469, i64 0, i64 0), i32 3, %union.tree_node* %387, %union.tree_node* %387, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %390, i8 zeroext 0) #8, !dbg !10013
  %391 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10015
  %392 = load i32, i32* @flag_errno_math, align 4, !dbg !10015
  %tobool589 = icmp eq i32 %392, 0, !dbg !10015
  br i1 %tobool589, label %cond.false591, label %cond.end594, !dbg !10015

cond.false591:                                    ; preds = %cond.end585
  %393 = load i32, i32* @flag_rounding_math, align 4, !dbg !10015
  %tobool592 = icmp eq i32 %393, 0, !dbg !10015
  %cond593 = select i1 %tobool592, i64 46, i64 48, !dbg !10015
  br label %cond.end594, !dbg !10015

cond.end594:                                      ; preds = %cond.end585, %cond.false591
  %cond595 = phi i64 [ %cond593, %cond.false591 ], [ 45, %cond.end585 ], !dbg !10015
  %arrayidx597 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond595, !dbg !10015
  %394 = load %union.tree_node*, %union.tree_node** %arrayidx597, align 8, !dbg !10015
  tail call fastcc void @def_builtin_1(i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.470, i64 0, i64 0), i32 3, %union.tree_node* %391, %union.tree_node* %391, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %394, i8 zeroext 0) #8, !dbg !10015
  %395 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10017
  %396 = load i32, i32* @flag_isoc99, align 4, !dbg !10017
  %tobool598 = icmp eq i32 %396, 0, !dbg !10017
  %conv601 = zext i1 %tobool598 to i8, !dbg !10017
  %397 = load i32, i32* @flag_errno_math, align 4, !dbg !10017
  %tobool602 = icmp eq i32 %397, 0, !dbg !10017
  br i1 %tobool602, label %cond.false604, label %cond.end607, !dbg !10017

cond.false604:                                    ; preds = %cond.end594
  %398 = load i32, i32* @flag_rounding_math, align 4, !dbg !10017
  %tobool605 = icmp eq i32 %398, 0, !dbg !10017
  %cond606 = select i1 %tobool605, i64 46, i64 48, !dbg !10017
  br label %cond.end607, !dbg !10017

cond.end607:                                      ; preds = %cond.end594, %cond.false604
  %cond608 = phi i64 [ %cond606, %cond.false604 ], [ 45, %cond.end594 ], !dbg !10017
  %arrayidx610 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond608, !dbg !10017
  %399 = load %union.tree_node*, %union.tree_node** %arrayidx610, align 8, !dbg !10017
  %400 = load i32, i32* @linux_uclibc, align 4, !dbg !10017
  %401 = trunc i32 %400 to i8, !dbg !10017
  %402 = and i8 %401, 1, !dbg !10017
  %403 = xor i8 %402, 1, !dbg !10017
  tail call fastcc void @def_builtin_1(i32 49, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.471, i64 0, i64 0), i32 3, %union.tree_node* %395, %union.tree_node* %395, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv601, %union.tree_node* %399, i8 zeroext %403) #8, !dbg !10017
  %404 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10019
  %405 = load i32, i32* @flag_isoc99, align 4, !dbg !10019
  %tobool615 = icmp eq i32 %405, 0, !dbg !10019
  %conv618 = zext i1 %tobool615 to i8, !dbg !10019
  %406 = load i32, i32* @flag_errno_math, align 4, !dbg !10019
  %tobool619 = icmp eq i32 %406, 0, !dbg !10019
  br i1 %tobool619, label %cond.false621, label %cond.end624, !dbg !10019

cond.false621:                                    ; preds = %cond.end607
  %407 = load i32, i32* @flag_rounding_math, align 4, !dbg !10019
  %tobool622 = icmp eq i32 %407, 0, !dbg !10019
  %cond623 = select i1 %tobool622, i64 46, i64 48, !dbg !10019
  br label %cond.end624, !dbg !10019

cond.end624:                                      ; preds = %cond.end607, %cond.false621
  %cond625 = phi i64 [ %cond623, %cond.false621 ], [ 45, %cond.end607 ], !dbg !10019
  %arrayidx627 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond625, !dbg !10019
  %408 = load %union.tree_node*, %union.tree_node** %arrayidx627, align 8, !dbg !10019
  %409 = load i32, i32* @linux_uclibc, align 4, !dbg !10019
  %410 = trunc i32 %409 to i8, !dbg !10019
  %411 = and i8 %410, 1, !dbg !10019
  %412 = xor i8 %411, 1, !dbg !10019
  tail call fastcc void @def_builtin_1(i32 50, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.472, i64 0, i64 0), i32 3, %union.tree_node* %404, %union.tree_node* %404, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv618, %union.tree_node* %408, i8 zeroext %412) #8, !dbg !10019
  %413 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10021
  %414 = load i32, i32* @flag_isoc99, align 4, !dbg !10021
  %tobool632 = icmp eq i32 %414, 0, !dbg !10021
  %conv635 = zext i1 %tobool632 to i8, !dbg !10021
  %415 = load i32, i32* @flag_errno_math, align 4, !dbg !10021
  %tobool636 = icmp eq i32 %415, 0, !dbg !10021
  br i1 %tobool636, label %cond.false638, label %cond.end641, !dbg !10021

cond.false638:                                    ; preds = %cond.end624
  %416 = load i32, i32* @flag_rounding_math, align 4, !dbg !10021
  %tobool639 = icmp eq i32 %416, 0, !dbg !10021
  %cond640 = select i1 %tobool639, i64 46, i64 48, !dbg !10021
  br label %cond.end641, !dbg !10021

cond.end641:                                      ; preds = %cond.end624, %cond.false638
  %cond642 = phi i64 [ %cond640, %cond.false638 ], [ 45, %cond.end624 ], !dbg !10021
  %arrayidx644 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond642, !dbg !10021
  %417 = load %union.tree_node*, %union.tree_node** %arrayidx644, align 8, !dbg !10021
  %418 = load i32, i32* @linux_uclibc, align 4, !dbg !10021
  %419 = trunc i32 %418 to i8, !dbg !10021
  %420 = and i8 %419, 1, !dbg !10021
  %421 = xor i8 %420, 1, !dbg !10021
  tail call fastcc void @def_builtin_1(i32 51, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.473, i64 0, i64 0), i32 3, %union.tree_node* %413, %union.tree_node* %413, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv635, %union.tree_node* %417, i8 zeroext %421) #8, !dbg !10021
  %422 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10023
  %423 = load i32, i32* @flag_isoc99, align 4, !dbg !10023
  %tobool649 = icmp eq i32 %423, 0, !dbg !10023
  %conv652 = zext i1 %tobool649 to i8, !dbg !10023
  %424 = load i32, i32* @flag_errno_math, align 4, !dbg !10023
  %tobool653 = icmp eq i32 %424, 0, !dbg !10023
  br i1 %tobool653, label %cond.false655, label %cond.end658, !dbg !10023

cond.false655:                                    ; preds = %cond.end641
  %425 = load i32, i32* @flag_rounding_math, align 4, !dbg !10023
  %tobool656 = icmp eq i32 %425, 0, !dbg !10023
  %cond657 = select i1 %tobool656, i64 46, i64 48, !dbg !10023
  br label %cond.end658, !dbg !10023

cond.end658:                                      ; preds = %cond.end641, %cond.false655
  %cond659 = phi i64 [ %cond657, %cond.false655 ], [ 45, %cond.end641 ], !dbg !10023
  %arrayidx661 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond659, !dbg !10023
  %426 = load %union.tree_node*, %union.tree_node** %arrayidx661, align 8, !dbg !10023
  %427 = load i32, i32* @linux_uclibc, align 4, !dbg !10023
  %428 = trunc i32 %427 to i8, !dbg !10023
  %429 = and i8 %428, 1, !dbg !10023
  %430 = xor i8 %429, 1, !dbg !10023
  tail call fastcc void @def_builtin_1(i32 52, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.474, i64 0, i64 0), i32 3, %union.tree_node* %422, %union.tree_node* %422, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv652, %union.tree_node* %426, i8 zeroext %430) #8, !dbg !10023
  %431 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10025
  %432 = load i32, i32* @flag_isoc99, align 4, !dbg !10025
  %tobool666 = icmp eq i32 %432, 0, !dbg !10025
  %conv669 = zext i1 %tobool666 to i8, !dbg !10025
  %433 = load i32, i32* @flag_errno_math, align 4, !dbg !10025
  %tobool670 = icmp eq i32 %433, 0, !dbg !10025
  br i1 %tobool670, label %cond.false672, label %cond.end675, !dbg !10025

cond.false672:                                    ; preds = %cond.end658
  %434 = load i32, i32* @flag_rounding_math, align 4, !dbg !10025
  %tobool673 = icmp eq i32 %434, 0, !dbg !10025
  %cond674 = select i1 %tobool673, i64 46, i64 48, !dbg !10025
  br label %cond.end675, !dbg !10025

cond.end675:                                      ; preds = %cond.end658, %cond.false672
  %cond676 = phi i64 [ %cond674, %cond.false672 ], [ 45, %cond.end658 ], !dbg !10025
  %arrayidx678 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond676, !dbg !10025
  %435 = load %union.tree_node*, %union.tree_node** %arrayidx678, align 8, !dbg !10025
  %436 = load i32, i32* @linux_uclibc, align 4, !dbg !10025
  %437 = trunc i32 %436 to i8, !dbg !10025
  %438 = and i8 %437, 1, !dbg !10025
  %439 = xor i8 %438, 1, !dbg !10025
  tail call fastcc void @def_builtin_1(i32 53, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.475, i64 0, i64 0), i32 3, %union.tree_node* %431, %union.tree_node* %431, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv669, %union.tree_node* %435, i8 zeroext %439) #8, !dbg !10025
  %440 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10027
  %441 = load i32, i32* @flag_isoc99, align 4, !dbg !10027
  %tobool683 = icmp eq i32 %441, 0, !dbg !10027
  %conv686 = zext i1 %tobool683 to i8, !dbg !10027
  %442 = load i32, i32* @flag_errno_math, align 4, !dbg !10027
  %tobool687 = icmp eq i32 %442, 0, !dbg !10027
  br i1 %tobool687, label %cond.false689, label %cond.end692, !dbg !10027

cond.false689:                                    ; preds = %cond.end675
  %443 = load i32, i32* @flag_rounding_math, align 4, !dbg !10027
  %tobool690 = icmp eq i32 %443, 0, !dbg !10027
  %cond691 = select i1 %tobool690, i64 46, i64 48, !dbg !10027
  br label %cond.end692, !dbg !10027

cond.end692:                                      ; preds = %cond.end675, %cond.false689
  %cond693 = phi i64 [ %cond691, %cond.false689 ], [ 45, %cond.end675 ], !dbg !10027
  %arrayidx695 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond693, !dbg !10027
  %444 = load %union.tree_node*, %union.tree_node** %arrayidx695, align 8, !dbg !10027
  %445 = load i32, i32* @linux_uclibc, align 4, !dbg !10027
  %446 = trunc i32 %445 to i8, !dbg !10027
  %447 = and i8 %446, 1, !dbg !10027
  %448 = xor i8 %447, 1, !dbg !10027
  tail call fastcc void @def_builtin_1(i32 54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.476, i64 0, i64 0), i32 3, %union.tree_node* %440, %union.tree_node* %440, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv686, %union.tree_node* %444, i8 zeroext %448) #8, !dbg !10027
  %449 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10029
  %450 = load i32, i32* @flag_isoc99, align 4, !dbg !10029
  %tobool700 = icmp eq i32 %450, 0, !dbg !10029
  %conv703 = zext i1 %tobool700 to i8, !dbg !10029
  %451 = load i32, i32* @flag_errno_math, align 4, !dbg !10029
  %tobool704 = icmp eq i32 %451, 0, !dbg !10029
  br i1 %tobool704, label %cond.false706, label %cond.end709, !dbg !10029

cond.false706:                                    ; preds = %cond.end692
  %452 = load i32, i32* @flag_rounding_math, align 4, !dbg !10029
  %tobool707 = icmp eq i32 %452, 0, !dbg !10029
  %cond708 = select i1 %tobool707, i64 46, i64 48, !dbg !10029
  br label %cond.end709, !dbg !10029

cond.end709:                                      ; preds = %cond.end692, %cond.false706
  %cond710 = phi i64 [ %cond708, %cond.false706 ], [ 45, %cond.end692 ], !dbg !10029
  %arrayidx712 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond710, !dbg !10029
  %453 = load %union.tree_node*, %union.tree_node** %arrayidx712, align 8, !dbg !10029
  %454 = load i32, i32* @linux_uclibc, align 4, !dbg !10029
  %455 = trunc i32 %454 to i8, !dbg !10029
  %456 = and i8 %455, 1, !dbg !10029
  %457 = xor i8 %456, 1, !dbg !10029
  tail call fastcc void @def_builtin_1(i32 55, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.477, i64 0, i64 0), i32 3, %union.tree_node* %449, %union.tree_node* %449, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv703, %union.tree_node* %453, i8 zeroext %457) #8, !dbg !10029
  %458 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10031
  %459 = load i32, i32* @flag_isoc99, align 4, !dbg !10031
  %tobool717 = icmp eq i32 %459, 0, !dbg !10031
  %conv720 = zext i1 %tobool717 to i8, !dbg !10031
  %460 = load i32, i32* @flag_errno_math, align 4, !dbg !10031
  %tobool721 = icmp eq i32 %460, 0, !dbg !10031
  br i1 %tobool721, label %cond.false723, label %cond.end726, !dbg !10031

cond.false723:                                    ; preds = %cond.end709
  %461 = load i32, i32* @flag_rounding_math, align 4, !dbg !10031
  %tobool724 = icmp eq i32 %461, 0, !dbg !10031
  %cond725 = select i1 %tobool724, i64 46, i64 48, !dbg !10031
  br label %cond.end726, !dbg !10031

cond.end726:                                      ; preds = %cond.end709, %cond.false723
  %cond727 = phi i64 [ %cond725, %cond.false723 ], [ 45, %cond.end709 ], !dbg !10031
  %arrayidx729 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond727, !dbg !10031
  %462 = load %union.tree_node*, %union.tree_node** %arrayidx729, align 8, !dbg !10031
  %463 = load i32, i32* @linux_uclibc, align 4, !dbg !10031
  %464 = trunc i32 %463 to i8, !dbg !10031
  %465 = and i8 %464, 1, !dbg !10031
  %466 = xor i8 %465, 1, !dbg !10031
  tail call fastcc void @def_builtin_1(i32 56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.478, i64 0, i64 0), i32 3, %union.tree_node* %458, %union.tree_node* %458, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv720, %union.tree_node* %462, i8 zeroext %466) #8, !dbg !10031
  %467 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10033
  %468 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10033
  tail call fastcc void @def_builtin_1(i32 57, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.479, i64 0, i64 0), i32 3, %union.tree_node* %467, %union.tree_node* %467, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %468, i8 zeroext 1) #8, !dbg !10033
  %469 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10035
  %470 = load i32, i32* @flag_isoc99, align 4, !dbg !10035
  %tobool734 = icmp eq i32 %470, 0, !dbg !10035
  %conv737 = zext i1 %tobool734 to i8, !dbg !10035
  %471 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10035
  %472 = load i32, i32* @linux_uclibc, align 4, !dbg !10035
  %473 = trunc i32 %472 to i8, !dbg !10035
  %474 = and i8 %473, 1, !dbg !10035
  %475 = xor i8 %474, 1, !dbg !10035
  tail call fastcc void @def_builtin_1(i32 58, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.480, i64 0, i64 0), i32 3, %union.tree_node* %469, %union.tree_node* %469, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv737, %union.tree_node* %471, i8 zeroext %475) #8, !dbg !10035
  %476 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10037
  %477 = load i32, i32* @flag_isoc99, align 4, !dbg !10037
  %tobool742 = icmp eq i32 %477, 0, !dbg !10037
  %conv745 = zext i1 %tobool742 to i8, !dbg !10037
  %478 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10037
  %479 = load i32, i32* @linux_uclibc, align 4, !dbg !10037
  %480 = trunc i32 %479 to i8, !dbg !10037
  %481 = and i8 %480, 1, !dbg !10037
  %482 = xor i8 %481, 1, !dbg !10037
  tail call fastcc void @def_builtin_1(i32 59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.481, i64 0, i64 0), i32 3, %union.tree_node* %476, %union.tree_node* %476, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv745, %union.tree_node* %478, i8 zeroext %482) #8, !dbg !10037
  %483 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10039
  %484 = load i32, i32* @flag_isoc99, align 4, !dbg !10039
  %tobool750 = icmp eq i32 %484, 0, !dbg !10039
  %conv753 = zext i1 %tobool750 to i8, !dbg !10039
  %485 = load i32, i32* @flag_errno_math, align 4, !dbg !10039
  %tobool754 = icmp eq i32 %485, 0, !dbg !10039
  br i1 %tobool754, label %cond.false756, label %cond.end759, !dbg !10039

cond.false756:                                    ; preds = %cond.end726
  %486 = load i32, i32* @flag_rounding_math, align 4, !dbg !10039
  %tobool757 = icmp eq i32 %486, 0, !dbg !10039
  %cond758 = select i1 %tobool757, i64 46, i64 48, !dbg !10039
  br label %cond.end759, !dbg !10039

cond.end759:                                      ; preds = %cond.end726, %cond.false756
  %cond760 = phi i64 [ %cond758, %cond.false756 ], [ 45, %cond.end726 ], !dbg !10039
  %arrayidx762 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond760, !dbg !10039
  %487 = load %union.tree_node*, %union.tree_node** %arrayidx762, align 8, !dbg !10039
  %488 = load i32, i32* @linux_uclibc, align 4, !dbg !10039
  %489 = trunc i32 %488 to i8, !dbg !10039
  %490 = and i8 %489, 1, !dbg !10039
  %491 = xor i8 %490, 1, !dbg !10039
  tail call fastcc void @def_builtin_1(i32 60, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.482, i64 0, i64 0), i32 3, %union.tree_node* %483, %union.tree_node* %483, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv753, %union.tree_node* %487, i8 zeroext %491) #8, !dbg !10039
  %492 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10041
  %493 = load i32, i32* @flag_isoc99, align 4, !dbg !10041
  %tobool767 = icmp eq i32 %493, 0, !dbg !10041
  %conv770 = zext i1 %tobool767 to i8, !dbg !10041
  %494 = load i32, i32* @flag_errno_math, align 4, !dbg !10041
  %tobool771 = icmp eq i32 %494, 0, !dbg !10041
  br i1 %tobool771, label %cond.false773, label %cond.end776, !dbg !10041

cond.false773:                                    ; preds = %cond.end759
  %495 = load i32, i32* @flag_rounding_math, align 4, !dbg !10041
  %tobool774 = icmp eq i32 %495, 0, !dbg !10041
  %cond775 = select i1 %tobool774, i64 46, i64 48, !dbg !10041
  br label %cond.end776, !dbg !10041

cond.end776:                                      ; preds = %cond.end759, %cond.false773
  %cond777 = phi i64 [ %cond775, %cond.false773 ], [ 45, %cond.end759 ], !dbg !10041
  %arrayidx779 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond777, !dbg !10041
  %496 = load %union.tree_node*, %union.tree_node** %arrayidx779, align 8, !dbg !10041
  %497 = load i32, i32* @linux_uclibc, align 4, !dbg !10041
  %498 = trunc i32 %497 to i8, !dbg !10041
  %499 = and i8 %498, 1, !dbg !10041
  %500 = xor i8 %499, 1, !dbg !10041
  tail call fastcc void @def_builtin_1(i32 61, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.483, i64 0, i64 0), i32 3, %union.tree_node* %492, %union.tree_node* %492, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv770, %union.tree_node* %496, i8 zeroext %500) #8, !dbg !10041
  %501 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10043
  %502 = load i32, i32* @flag_isoc99, align 4, !dbg !10043
  %tobool784 = icmp eq i32 %502, 0, !dbg !10043
  %conv787 = zext i1 %tobool784 to i8, !dbg !10043
  %503 = load i32, i32* @flag_errno_math, align 4, !dbg !10043
  %tobool788 = icmp eq i32 %503, 0, !dbg !10043
  br i1 %tobool788, label %cond.false790, label %cond.end793, !dbg !10043

cond.false790:                                    ; preds = %cond.end776
  %504 = load i32, i32* @flag_rounding_math, align 4, !dbg !10043
  %tobool791 = icmp eq i32 %504, 0, !dbg !10043
  %cond792 = select i1 %tobool791, i64 46, i64 48, !dbg !10043
  br label %cond.end793, !dbg !10043

cond.end793:                                      ; preds = %cond.end776, %cond.false790
  %cond794 = phi i64 [ %cond792, %cond.false790 ], [ 45, %cond.end776 ], !dbg !10043
  %arrayidx796 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond794, !dbg !10043
  %505 = load %union.tree_node*, %union.tree_node** %arrayidx796, align 8, !dbg !10043
  %506 = load i32, i32* @linux_uclibc, align 4, !dbg !10043
  %507 = trunc i32 %506 to i8, !dbg !10043
  %508 = and i8 %507, 1, !dbg !10043
  %509 = xor i8 %508, 1, !dbg !10043
  tail call fastcc void @def_builtin_1(i32 62, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.484, i64 0, i64 0), i32 3, %union.tree_node* %501, %union.tree_node* %501, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv787, %union.tree_node* %505, i8 zeroext %509) #8, !dbg !10043
  %510 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10045
  %511 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10045
  tail call fastcc void @def_builtin_1(i32 63, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.485, i64 0, i64 0), i32 3, %union.tree_node* %510, %union.tree_node* %510, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %511, i8 zeroext 1) #8, !dbg !10045
  %512 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10047
  %513 = load i32, i32* @flag_isoc99, align 4, !dbg !10047
  %tobool801 = icmp eq i32 %513, 0, !dbg !10047
  %conv804 = zext i1 %tobool801 to i8, !dbg !10047
  %514 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10047
  %515 = load i32, i32* @linux_uclibc, align 4, !dbg !10047
  %516 = trunc i32 %515 to i8, !dbg !10047
  %517 = and i8 %516, 1, !dbg !10047
  %518 = xor i8 %517, 1, !dbg !10047
  tail call fastcc void @def_builtin_1(i32 64, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.486, i64 0, i64 0), i32 3, %union.tree_node* %512, %union.tree_node* %512, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv804, %union.tree_node* %514, i8 zeroext %518) #8, !dbg !10047
  %519 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10049
  %520 = load i32, i32* @flag_isoc99, align 4, !dbg !10049
  %tobool809 = icmp eq i32 %520, 0, !dbg !10049
  %conv812 = zext i1 %tobool809 to i8, !dbg !10049
  %521 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10049
  %522 = load i32, i32* @linux_uclibc, align 4, !dbg !10049
  %523 = trunc i32 %522 to i8, !dbg !10049
  %524 = and i8 %523, 1, !dbg !10049
  %525 = xor i8 %524, 1, !dbg !10049
  tail call fastcc void @def_builtin_1(i32 65, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.487, i64 0, i64 0), i32 3, %union.tree_node* %519, %union.tree_node* %519, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv812, %union.tree_node* %521, i8 zeroext %525) #8, !dbg !10049
  %526 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 192), align 16, !dbg !10051
  %527 = load i32, i32* @flag_isoc99, align 4, !dbg !10051
  %tobool817 = icmp eq i32 %527, 0, !dbg !10051
  %conv820 = zext i1 %tobool817 to i8, !dbg !10051
  %528 = load i32, i32* @flag_rounding_math, align 4, !dbg !10051
  %tobool821 = icmp eq i32 %528, 0, !dbg !10051
  %cond822 = select i1 %tobool821, i64 46, i64 48, !dbg !10051
  %arrayidx824 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond822, !dbg !10051
  %529 = load %union.tree_node*, %union.tree_node** %arrayidx824, align 16, !dbg !10051
  %530 = load i32, i32* @linux_uclibc, align 4, !dbg !10051
  %531 = trunc i32 %530 to i8, !dbg !10051
  %532 = and i8 %531, 1, !dbg !10051
  %533 = xor i8 %532, 1, !dbg !10051
  tail call fastcc void @def_builtin_1(i32 66, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.488, i64 0, i64 0), i32 3, %union.tree_node* %526, %union.tree_node* %526, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv820, %union.tree_node* %529, i8 zeroext %533) #8, !dbg !10051
  %534 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 191), align 8, !dbg !10053
  %535 = load i32, i32* @flag_isoc99, align 4, !dbg !10053
  %tobool829 = icmp eq i32 %535, 0, !dbg !10053
  %conv832 = zext i1 %tobool829 to i8, !dbg !10053
  %536 = load i32, i32* @flag_rounding_math, align 4, !dbg !10053
  %tobool833 = icmp eq i32 %536, 0, !dbg !10053
  %cond834 = select i1 %tobool833, i64 46, i64 48, !dbg !10053
  %arrayidx836 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond834, !dbg !10053
  %537 = load %union.tree_node*, %union.tree_node** %arrayidx836, align 16, !dbg !10053
  %538 = load i32, i32* @linux_uclibc, align 4, !dbg !10053
  %539 = trunc i32 %538 to i8, !dbg !10053
  %540 = and i8 %539, 1, !dbg !10053
  %541 = xor i8 %540, 1, !dbg !10053
  tail call fastcc void @def_builtin_1(i32 67, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.489, i64 0, i64 0), i32 3, %union.tree_node* %534, %union.tree_node* %534, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv832, %union.tree_node* %537, i8 zeroext %541) #8, !dbg !10053
  %542 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 193), align 8, !dbg !10055
  %543 = load i32, i32* @flag_isoc99, align 4, !dbg !10055
  %tobool841 = icmp eq i32 %543, 0, !dbg !10055
  %conv844 = zext i1 %tobool841 to i8, !dbg !10055
  %544 = load i32, i32* @flag_rounding_math, align 4, !dbg !10055
  %tobool845 = icmp eq i32 %544, 0, !dbg !10055
  %cond846 = select i1 %tobool845, i64 46, i64 48, !dbg !10055
  %arrayidx848 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond846, !dbg !10055
  %545 = load %union.tree_node*, %union.tree_node** %arrayidx848, align 16, !dbg !10055
  %546 = load i32, i32* @linux_uclibc, align 4, !dbg !10055
  %547 = trunc i32 %546 to i8, !dbg !10055
  %548 = and i8 %547, 1, !dbg !10055
  %549 = xor i8 %548, 1, !dbg !10055
  tail call fastcc void @def_builtin_1(i32 68, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.490, i64 0, i64 0), i32 3, %union.tree_node* %542, %union.tree_node* %542, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv844, %union.tree_node* %545, i8 zeroext %549) #8, !dbg !10055
  %550 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10057
  %551 = load i32, i32* @flag_isoc99, align 4, !dbg !10057
  %tobool853 = icmp eq i32 %551, 0, !dbg !10057
  %conv856 = zext i1 %tobool853 to i8, !dbg !10057
  %552 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10057
  %553 = load i32, i32* @linux_uclibc, align 4, !dbg !10057
  %554 = trunc i32 %553 to i8, !dbg !10057
  %555 = and i8 %554, 1, !dbg !10057
  %556 = xor i8 %555, 1, !dbg !10057
  tail call fastcc void @def_builtin_1(i32 69, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.491, i64 0, i64 0), i32 3, %union.tree_node* %550, %union.tree_node* %550, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv856, %union.tree_node* %552, i8 zeroext %556) #8, !dbg !10057
  %557 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10059
  %558 = load i32, i32* @flag_isoc99, align 4, !dbg !10059
  %tobool861 = icmp eq i32 %558, 0, !dbg !10059
  %conv864 = zext i1 %tobool861 to i8, !dbg !10059
  %559 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10059
  %560 = load i32, i32* @linux_uclibc, align 4, !dbg !10059
  %561 = trunc i32 %560 to i8, !dbg !10059
  %562 = and i8 %561, 1, !dbg !10059
  %563 = xor i8 %562, 1, !dbg !10059
  tail call fastcc void @def_builtin_1(i32 70, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.492, i64 0, i64 0), i32 3, %union.tree_node* %557, %union.tree_node* %557, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv864, %union.tree_node* %559, i8 zeroext %563) #8, !dbg !10059
  %564 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10061
  %565 = load i32, i32* @flag_isoc99, align 4, !dbg !10061
  %tobool869 = icmp eq i32 %565, 0, !dbg !10061
  %conv872 = zext i1 %tobool869 to i8, !dbg !10061
  %566 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10061
  %567 = load i32, i32* @linux_uclibc, align 4, !dbg !10061
  %568 = trunc i32 %567 to i8, !dbg !10061
  %569 = and i8 %568, 1, !dbg !10061
  %570 = xor i8 %569, 1, !dbg !10061
  tail call fastcc void @def_builtin_1(i32 71, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.493, i64 0, i64 0), i32 3, %union.tree_node* %564, %union.tree_node* %564, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv872, %union.tree_node* %566, i8 zeroext %570) #8, !dbg !10061
  %571 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10063
  %572 = load i32, i32* @flag_isoc99, align 4, !dbg !10063
  %tobool877 = icmp eq i32 %572, 0, !dbg !10063
  %conv880 = zext i1 %tobool877 to i8, !dbg !10063
  %573 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10063
  %574 = load i32, i32* @linux_uclibc, align 4, !dbg !10063
  %575 = trunc i32 %574 to i8, !dbg !10063
  %576 = and i8 %575, 1, !dbg !10063
  %577 = xor i8 %576, 1, !dbg !10063
  tail call fastcc void @def_builtin_1(i32 72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.494, i64 0, i64 0), i32 3, %union.tree_node* %571, %union.tree_node* %571, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv880, %union.tree_node* %573, i8 zeroext %577) #8, !dbg !10063
  %578 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10065
  %579 = load i32, i32* @flag_isoc99, align 4, !dbg !10065
  %tobool885 = icmp eq i32 %579, 0, !dbg !10065
  %conv888 = zext i1 %tobool885 to i8, !dbg !10065
  %580 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10065
  %581 = load i32, i32* @linux_uclibc, align 4, !dbg !10065
  %582 = trunc i32 %581 to i8, !dbg !10065
  %583 = and i8 %582, 1, !dbg !10065
  %584 = xor i8 %583, 1, !dbg !10065
  tail call fastcc void @def_builtin_1(i32 73, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.495, i64 0, i64 0), i32 3, %union.tree_node* %578, %union.tree_node* %578, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv888, %union.tree_node* %580, i8 zeroext %584) #8, !dbg !10065
  %585 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10067
  %586 = load i32, i32* @flag_isoc99, align 4, !dbg !10067
  %tobool893 = icmp eq i32 %586, 0, !dbg !10067
  %conv896 = zext i1 %tobool893 to i8, !dbg !10067
  %587 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10067
  %588 = load i32, i32* @linux_uclibc, align 4, !dbg !10067
  %589 = trunc i32 %588 to i8, !dbg !10067
  %590 = and i8 %589, 1, !dbg !10067
  %591 = xor i8 %590, 1, !dbg !10067
  tail call fastcc void @def_builtin_1(i32 74, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.496, i64 0, i64 0), i32 3, %union.tree_node* %585, %union.tree_node* %585, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv896, %union.tree_node* %587, i8 zeroext %591) #8, !dbg !10067
  %592 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10069
  %593 = load i32, i32* @flag_errno_math, align 4, !dbg !10069
  %tobool901 = icmp eq i32 %593, 0, !dbg !10069
  br i1 %tobool901, label %cond.false903, label %cond.end906, !dbg !10069

cond.false903:                                    ; preds = %cond.end793
  %594 = load i32, i32* @flag_rounding_math, align 4, !dbg !10069
  %tobool904 = icmp eq i32 %594, 0, !dbg !10069
  %cond905 = select i1 %tobool904, i64 46, i64 48, !dbg !10069
  br label %cond.end906, !dbg !10069

cond.end906:                                      ; preds = %cond.end793, %cond.false903
  %cond907 = phi i64 [ %cond905, %cond.false903 ], [ 45, %cond.end793 ], !dbg !10069
  %arrayidx909 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond907, !dbg !10069
  %595 = load %union.tree_node*, %union.tree_node** %arrayidx909, align 8, !dbg !10069
  tail call fastcc void @def_builtin_1(i32 75, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.497, i64 0, i64 0), i32 3, %union.tree_node* %592, %union.tree_node* %592, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %595, i8 zeroext 1) #8, !dbg !10069
  %596 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10071
  %597 = load i32, i32* @flag_isoc99, align 4, !dbg !10071
  %tobool910 = icmp eq i32 %597, 0, !dbg !10071
  %conv913 = zext i1 %tobool910 to i8, !dbg !10071
  %598 = load i32, i32* @flag_errno_math, align 4, !dbg !10071
  %tobool914 = icmp eq i32 %598, 0, !dbg !10071
  br i1 %tobool914, label %cond.false916, label %cond.end919, !dbg !10071

cond.false916:                                    ; preds = %cond.end906
  %599 = load i32, i32* @flag_rounding_math, align 4, !dbg !10071
  %tobool917 = icmp eq i32 %599, 0, !dbg !10071
  %cond918 = select i1 %tobool917, i64 46, i64 48, !dbg !10071
  br label %cond.end919, !dbg !10071

cond.end919:                                      ; preds = %cond.end906, %cond.false916
  %cond920 = phi i64 [ %cond918, %cond.false916 ], [ 45, %cond.end906 ], !dbg !10071
  %arrayidx922 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond920, !dbg !10071
  %600 = load %union.tree_node*, %union.tree_node** %arrayidx922, align 8, !dbg !10071
  %601 = load i32, i32* @linux_uclibc, align 4, !dbg !10071
  %602 = trunc i32 %601 to i8, !dbg !10071
  %603 = and i8 %602, 1, !dbg !10071
  %604 = xor i8 %603, 1, !dbg !10071
  tail call fastcc void @def_builtin_1(i32 76, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.498, i64 0, i64 0), i32 3, %union.tree_node* %596, %union.tree_node* %596, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv913, %union.tree_node* %600, i8 zeroext %604) #8, !dbg !10071
  %605 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10073
  %606 = load i32, i32* @flag_isoc99, align 4, !dbg !10073
  %tobool927 = icmp eq i32 %606, 0, !dbg !10073
  %conv930 = zext i1 %tobool927 to i8, !dbg !10073
  %607 = load i32, i32* @flag_errno_math, align 4, !dbg !10073
  %tobool931 = icmp eq i32 %607, 0, !dbg !10073
  br i1 %tobool931, label %cond.false933, label %cond.end936, !dbg !10073

cond.false933:                                    ; preds = %cond.end919
  %608 = load i32, i32* @flag_rounding_math, align 4, !dbg !10073
  %tobool934 = icmp eq i32 %608, 0, !dbg !10073
  %cond935 = select i1 %tobool934, i64 46, i64 48, !dbg !10073
  br label %cond.end936, !dbg !10073

cond.end936:                                      ; preds = %cond.end919, %cond.false933
  %cond937 = phi i64 [ %cond935, %cond.false933 ], [ 45, %cond.end919 ], !dbg !10073
  %arrayidx939 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond937, !dbg !10073
  %609 = load %union.tree_node*, %union.tree_node** %arrayidx939, align 8, !dbg !10073
  %610 = load i32, i32* @linux_uclibc, align 4, !dbg !10073
  %611 = trunc i32 %610 to i8, !dbg !10073
  %612 = and i8 %611, 1, !dbg !10073
  %613 = xor i8 %612, 1, !dbg !10073
  tail call fastcc void @def_builtin_1(i32 77, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.499, i64 0, i64 0), i32 3, %union.tree_node* %605, %union.tree_node* %605, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv930, %union.tree_node* %609, i8 zeroext %613) #8, !dbg !10073
  %614 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 155), align 8, !dbg !10075
  %615 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10075
  tail call fastcc void @def_builtin_1(i32 78, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.500, i64 0, i64 0), i32 3, %union.tree_node* %614, %union.tree_node* %614, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %615, i8 zeroext 1) #8, !dbg !10075
  %616 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 154), align 16, !dbg !10077
  %617 = load i32, i32* @flag_isoc99, align 4, !dbg !10077
  %tobool944 = icmp eq i32 %617, 0, !dbg !10077
  %conv947 = zext i1 %tobool944 to i8, !dbg !10077
  %618 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10077
  %619 = load i32, i32* @linux_uclibc, align 4, !dbg !10077
  %620 = trunc i32 %619 to i8, !dbg !10077
  %621 = and i8 %620, 1, !dbg !10077
  %622 = xor i8 %621, 1, !dbg !10077
  tail call fastcc void @def_builtin_1(i32 79, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.501, i64 0, i64 0), i32 3, %union.tree_node* %616, %union.tree_node* %616, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv947, %union.tree_node* %618, i8 zeroext %622) #8, !dbg !10077
  %623 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 156), align 16, !dbg !10079
  %624 = load i32, i32* @flag_isoc99, align 4, !dbg !10079
  %tobool952 = icmp eq i32 %624, 0, !dbg !10079
  %conv955 = zext i1 %tobool952 to i8, !dbg !10079
  %625 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10079
  %626 = load i32, i32* @linux_uclibc, align 4, !dbg !10079
  %627 = trunc i32 %626 to i8, !dbg !10079
  %628 = and i8 %627, 1, !dbg !10079
  %629 = xor i8 %628, 1, !dbg !10079
  tail call fastcc void @def_builtin_1(i32 80, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.502, i64 0, i64 0), i32 3, %union.tree_node* %623, %union.tree_node* %623, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv955, %union.tree_node* %625, i8 zeroext %629) #8, !dbg !10079
  %630 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10081
  %631 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10081
  tail call fastcc void @def_builtin_1(i32 81, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.503, i64 0, i64 0), i32 3, %union.tree_node* %630, %union.tree_node* %630, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %631, i8 zeroext 0) #8, !dbg !10081
  %632 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10083
  %633 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10083
  tail call fastcc void @def_builtin_1(i32 82, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.504, i64 0, i64 0), i32 3, %union.tree_node* %632, %union.tree_node* %632, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %633, i8 zeroext 0) #8, !dbg !10083
  %634 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10085
  %635 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10085
  tail call fastcc void @def_builtin_1(i32 83, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.505, i64 0, i64 0), i32 3, %union.tree_node* %634, %union.tree_node* %634, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %635, i8 zeroext 0) #8, !dbg !10085
  %636 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 155), align 8, !dbg !10087
  %637 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10087
  tail call fastcc void @def_builtin_1(i32 84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.506, i64 0, i64 0), i32 3, %union.tree_node* %636, %union.tree_node* %636, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %637, i8 zeroext 0) #8, !dbg !10087
  %638 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 154), align 16, !dbg !10089
  %639 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10089
  tail call fastcc void @def_builtin_1(i32 85, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.507, i64 0, i64 0), i32 3, %union.tree_node* %638, %union.tree_node* %638, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %639, i8 zeroext 0) #8, !dbg !10089
  %640 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 156), align 16, !dbg !10091
  %641 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10091
  tail call fastcc void @def_builtin_1(i32 86, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.508, i64 0, i64 0), i32 3, %union.tree_node* %640, %union.tree_node* %640, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %641, i8 zeroext 0) #8, !dbg !10091
  %642 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 59), align 8, !dbg !10093
  %643 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10093
  %644 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10093
  tail call fastcc void @def_builtin_1(i32 87, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.509, i64 0, i64 0), i32 3, %union.tree_node* %642, %union.tree_node* %643, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %644, i8 zeroext 1) #8, !dbg !10093
  %645 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 58), align 16, !dbg !10095
  %646 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10095
  %647 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10095
  tail call fastcc void @def_builtin_1(i32 88, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.510, i64 0, i64 0), i32 3, %union.tree_node* %645, %union.tree_node* %646, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %647, i8 zeroext 1) #8, !dbg !10095
  %648 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 60), align 16, !dbg !10097
  %649 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10097
  %650 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10097
  tail call fastcc void @def_builtin_1(i32 89, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.511, i64 0, i64 0), i32 3, %union.tree_node* %648, %union.tree_node* %649, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %650, i8 zeroext 1) #8, !dbg !10097
  %651 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10099
  %652 = load i32, i32* @flag_isoc99, align 4, !dbg !10099
  %tobool960 = icmp eq i32 %652, 0, !dbg !10099
  %conv963 = zext i1 %tobool960 to i8, !dbg !10099
  %653 = load i32, i32* @flag_errno_math, align 4, !dbg !10099
  %tobool964 = icmp eq i32 %653, 0, !dbg !10099
  br i1 %tobool964, label %cond.false966, label %cond.end969, !dbg !10099

cond.false966:                                    ; preds = %cond.end936
  %654 = load i32, i32* @flag_rounding_math, align 4, !dbg !10099
  %tobool967 = icmp eq i32 %654, 0, !dbg !10099
  %cond968 = select i1 %tobool967, i64 46, i64 48, !dbg !10099
  br label %cond.end969, !dbg !10099

cond.end969:                                      ; preds = %cond.end936, %cond.false966
  %cond970 = phi i64 [ %cond968, %cond.false966 ], [ 45, %cond.end936 ], !dbg !10099
  %arrayidx972 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond970, !dbg !10099
  %655 = load %union.tree_node*, %union.tree_node** %arrayidx972, align 8, !dbg !10099
  %656 = load i32, i32* @linux_uclibc, align 4, !dbg !10099
  %657 = trunc i32 %656 to i8, !dbg !10099
  %658 = and i8 %657, 1, !dbg !10099
  %659 = xor i8 %658, 1, !dbg !10099
  tail call fastcc void @def_builtin_1(i32 90, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.512, i64 0, i64 0), i32 3, %union.tree_node* %651, %union.tree_node* %651, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv963, %union.tree_node* %655, i8 zeroext %659) #8, !dbg !10099
  %660 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10101
  %661 = load i32, i32* @flag_isoc99, align 4, !dbg !10101
  %tobool977 = icmp eq i32 %661, 0, !dbg !10101
  %conv980 = zext i1 %tobool977 to i8, !dbg !10101
  %662 = load i32, i32* @flag_errno_math, align 4, !dbg !10101
  %tobool981 = icmp eq i32 %662, 0, !dbg !10101
  br i1 %tobool981, label %cond.false983, label %cond.end986, !dbg !10101

cond.false983:                                    ; preds = %cond.end969
  %663 = load i32, i32* @flag_rounding_math, align 4, !dbg !10101
  %tobool984 = icmp eq i32 %663, 0, !dbg !10101
  %cond985 = select i1 %tobool984, i64 46, i64 48, !dbg !10101
  br label %cond.end986, !dbg !10101

cond.end986:                                      ; preds = %cond.end969, %cond.false983
  %cond987 = phi i64 [ %cond985, %cond.false983 ], [ 45, %cond.end969 ], !dbg !10101
  %arrayidx989 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond987, !dbg !10101
  %664 = load %union.tree_node*, %union.tree_node** %arrayidx989, align 8, !dbg !10101
  %665 = load i32, i32* @linux_uclibc, align 4, !dbg !10101
  %666 = trunc i32 %665 to i8, !dbg !10101
  %667 = and i8 %666, 1, !dbg !10101
  %668 = xor i8 %667, 1, !dbg !10101
  tail call fastcc void @def_builtin_1(i32 91, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.513, i64 0, i64 0), i32 3, %union.tree_node* %660, %union.tree_node* %660, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv980, %union.tree_node* %664, i8 zeroext %668) #8, !dbg !10101
  %669 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10103
  %670 = load i32, i32* @flag_isoc99, align 4, !dbg !10103
  %tobool994 = icmp eq i32 %670, 0, !dbg !10103
  %conv997 = zext i1 %tobool994 to i8, !dbg !10103
  %671 = load i32, i32* @flag_errno_math, align 4, !dbg !10103
  %tobool998 = icmp eq i32 %671, 0, !dbg !10103
  br i1 %tobool998, label %cond.false1000, label %cond.end1003, !dbg !10103

cond.false1000:                                   ; preds = %cond.end986
  %672 = load i32, i32* @flag_rounding_math, align 4, !dbg !10103
  %tobool1001 = icmp eq i32 %672, 0, !dbg !10103
  %cond1002 = select i1 %tobool1001, i64 46, i64 48, !dbg !10103
  br label %cond.end1003, !dbg !10103

cond.end1003:                                     ; preds = %cond.end986, %cond.false1000
  %cond1004 = phi i64 [ %cond1002, %cond.false1000 ], [ 45, %cond.end986 ], !dbg !10103
  %arrayidx1006 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1004, !dbg !10103
  %673 = load %union.tree_node*, %union.tree_node** %arrayidx1006, align 8, !dbg !10103
  %674 = load i32, i32* @linux_uclibc, align 4, !dbg !10103
  %675 = trunc i32 %674 to i8, !dbg !10103
  %676 = and i8 %675, 1, !dbg !10103
  %677 = xor i8 %676, 1, !dbg !10103
  tail call fastcc void @def_builtin_1(i32 92, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.514, i64 0, i64 0), i32 3, %union.tree_node* %669, %union.tree_node* %669, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv997, %union.tree_node* %673, i8 zeroext %677) #8, !dbg !10103
  %678 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 91), align 8, !dbg !10105
  %679 = load i32, i32* @flag_isoc99, align 4, !dbg !10105
  %tobool1011 = icmp eq i32 %679, 0, !dbg !10105
  %conv1014 = zext i1 %tobool1011 to i8, !dbg !10105
  %680 = load i32, i32* @flag_errno_math, align 4, !dbg !10105
  %tobool1015 = icmp eq i32 %680, 0, !dbg !10105
  br i1 %tobool1015, label %cond.false1017, label %cond.end1020, !dbg !10105

cond.false1017:                                   ; preds = %cond.end1003
  %681 = load i32, i32* @flag_rounding_math, align 4, !dbg !10105
  %tobool1018 = icmp eq i32 %681, 0, !dbg !10105
  %cond1019 = select i1 %tobool1018, i64 46, i64 48, !dbg !10105
  br label %cond.end1020, !dbg !10105

cond.end1020:                                     ; preds = %cond.end1003, %cond.false1017
  %cond1021 = phi i64 [ %cond1019, %cond.false1017 ], [ 45, %cond.end1003 ], !dbg !10105
  %arrayidx1023 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1021, !dbg !10105
  %682 = load %union.tree_node*, %union.tree_node** %arrayidx1023, align 8, !dbg !10105
  %683 = load i32, i32* @linux_uclibc, align 4, !dbg !10105
  %684 = trunc i32 %683 to i8, !dbg !10105
  %685 = and i8 %684, 1, !dbg !10105
  %686 = xor i8 %685, 1, !dbg !10105
  tail call fastcc void @def_builtin_1(i32 93, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.515, i64 0, i64 0), i32 3, %union.tree_node* %678, %union.tree_node* %678, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1014, %union.tree_node* %682, i8 zeroext %686) #8, !dbg !10105
  %687 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 90), align 16, !dbg !10107
  %688 = load i32, i32* @flag_isoc99, align 4, !dbg !10107
  %tobool1028 = icmp eq i32 %688, 0, !dbg !10107
  %conv1031 = zext i1 %tobool1028 to i8, !dbg !10107
  %689 = load i32, i32* @flag_errno_math, align 4, !dbg !10107
  %tobool1032 = icmp eq i32 %689, 0, !dbg !10107
  br i1 %tobool1032, label %cond.false1034, label %cond.end1037, !dbg !10107

cond.false1034:                                   ; preds = %cond.end1020
  %690 = load i32, i32* @flag_rounding_math, align 4, !dbg !10107
  %tobool1035 = icmp eq i32 %690, 0, !dbg !10107
  %cond1036 = select i1 %tobool1035, i64 46, i64 48, !dbg !10107
  br label %cond.end1037, !dbg !10107

cond.end1037:                                     ; preds = %cond.end1020, %cond.false1034
  %cond1038 = phi i64 [ %cond1036, %cond.false1034 ], [ 45, %cond.end1020 ], !dbg !10107
  %arrayidx1040 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1038, !dbg !10107
  %691 = load %union.tree_node*, %union.tree_node** %arrayidx1040, align 8, !dbg !10107
  %692 = load i32, i32* @linux_uclibc, align 4, !dbg !10107
  %693 = trunc i32 %692 to i8, !dbg !10107
  %694 = and i8 %693, 1, !dbg !10107
  %695 = xor i8 %694, 1, !dbg !10107
  tail call fastcc void @def_builtin_1(i32 94, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.516, i64 0, i64 0), i32 3, %union.tree_node* %687, %union.tree_node* %687, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1031, %union.tree_node* %691, i8 zeroext %695) #8, !dbg !10107
  %696 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 92), align 16, !dbg !10109
  %697 = load i32, i32* @flag_isoc99, align 4, !dbg !10109
  %tobool1045 = icmp eq i32 %697, 0, !dbg !10109
  %conv1048 = zext i1 %tobool1045 to i8, !dbg !10109
  %698 = load i32, i32* @flag_errno_math, align 4, !dbg !10109
  %tobool1049 = icmp eq i32 %698, 0, !dbg !10109
  br i1 %tobool1049, label %cond.false1051, label %cond.end1054, !dbg !10109

cond.false1051:                                   ; preds = %cond.end1037
  %699 = load i32, i32* @flag_rounding_math, align 4, !dbg !10109
  %tobool1052 = icmp eq i32 %699, 0, !dbg !10109
  %cond1053 = select i1 %tobool1052, i64 46, i64 48, !dbg !10109
  br label %cond.end1054, !dbg !10109

cond.end1054:                                     ; preds = %cond.end1037, %cond.false1051
  %cond1055 = phi i64 [ %cond1053, %cond.false1051 ], [ 45, %cond.end1037 ], !dbg !10109
  %arrayidx1057 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1055, !dbg !10109
  %700 = load %union.tree_node*, %union.tree_node** %arrayidx1057, align 8, !dbg !10109
  %701 = load i32, i32* @linux_uclibc, align 4, !dbg !10109
  %702 = trunc i32 %701 to i8, !dbg !10109
  %703 = and i8 %702, 1, !dbg !10109
  %704 = xor i8 %703, 1, !dbg !10109
  tail call fastcc void @def_builtin_1(i32 95, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.517, i64 0, i64 0), i32 3, %union.tree_node* %696, %union.tree_node* %696, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1048, %union.tree_node* %700, i8 zeroext %704) #8, !dbg !10109
  %705 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 59), align 8, !dbg !10111
  %706 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10111
  %707 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10111
  tail call fastcc void @def_builtin_1(i32 96, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.518, i64 0, i64 0), i32 3, %union.tree_node* %705, %union.tree_node* %706, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %707, i8 zeroext 1) #8, !dbg !10111
  %708 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 58), align 16, !dbg !10113
  %709 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10113
  %710 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10113
  tail call fastcc void @def_builtin_1(i32 97, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.519, i64 0, i64 0), i32 3, %union.tree_node* %708, %union.tree_node* %709, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %710, i8 zeroext 1) #8, !dbg !10113
  %711 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 60), align 16, !dbg !10115
  %712 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10115
  %713 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10115
  tail call fastcc void @def_builtin_1(i32 98, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.520, i64 0, i64 0), i32 3, %union.tree_node* %711, %union.tree_node* %712, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %713, i8 zeroext 1) #8, !dbg !10115
  %714 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 61), align 8, !dbg !10117
  %715 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10117
  %716 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10117
  tail call fastcc void @def_builtin_1(i32 99, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.521, i64 0, i64 0), i32 3, %union.tree_node* %714, %union.tree_node* %715, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %716, i8 zeroext 1) #8, !dbg !10117
  %717 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 62), align 16, !dbg !10119
  %718 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10119
  %719 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10119
  tail call fastcc void @def_builtin_1(i32 100, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.522, i64 0, i64 0), i32 3, %union.tree_node* %717, %union.tree_node* %718, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %719, i8 zeroext 1) #8, !dbg !10119
  %720 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 63), align 8, !dbg !10121
  %721 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10121
  %722 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10121
  tail call fastcc void @def_builtin_1(i32 101, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.523, i64 0, i64 0), i32 3, %union.tree_node* %720, %union.tree_node* %721, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %722, i8 zeroext 1) #8, !dbg !10121
  %723 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10123
  %724 = load i32, i32* @flag_errno_math, align 4, !dbg !10123
  %tobool1062 = icmp eq i32 %724, 0, !dbg !10123
  br i1 %tobool1062, label %cond.false1064, label %cond.end1067, !dbg !10123

cond.false1064:                                   ; preds = %cond.end1054
  %725 = load i32, i32* @flag_rounding_math, align 4, !dbg !10123
  %tobool1065 = icmp eq i32 %725, 0, !dbg !10123
  %cond1066 = select i1 %tobool1065, i64 46, i64 48, !dbg !10123
  br label %cond.end1067, !dbg !10123

cond.end1067:                                     ; preds = %cond.end1054, %cond.false1064
  %cond1068 = phi i64 [ %cond1066, %cond.false1064 ], [ 45, %cond.end1054 ], !dbg !10123
  %arrayidx1070 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1068, !dbg !10123
  %726 = load %union.tree_node*, %union.tree_node** %arrayidx1070, align 8, !dbg !10123
  tail call fastcc void @def_builtin_1(i32 102, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.524, i64 0, i64 0), i32 3, %union.tree_node* %723, %union.tree_node* %723, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %726, i8 zeroext 0) #8, !dbg !10123
  %727 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10125
  %728 = load i32, i32* @flag_errno_math, align 4, !dbg !10125
  %tobool1071 = icmp eq i32 %728, 0, !dbg !10125
  br i1 %tobool1071, label %cond.false1073, label %cond.end1076, !dbg !10125

cond.false1073:                                   ; preds = %cond.end1067
  %729 = load i32, i32* @flag_rounding_math, align 4, !dbg !10125
  %tobool1074 = icmp eq i32 %729, 0, !dbg !10125
  %cond1075 = select i1 %tobool1074, i64 46, i64 48, !dbg !10125
  br label %cond.end1076, !dbg !10125

cond.end1076:                                     ; preds = %cond.end1067, %cond.false1073
  %cond1077 = phi i64 [ %cond1075, %cond.false1073 ], [ 45, %cond.end1067 ], !dbg !10125
  %arrayidx1079 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1077, !dbg !10125
  %730 = load %union.tree_node*, %union.tree_node** %arrayidx1079, align 8, !dbg !10125
  tail call fastcc void @def_builtin_1(i32 103, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.525, i64 0, i64 0), i32 3, %union.tree_node* %727, %union.tree_node* %727, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %730, i8 zeroext 0) #8, !dbg !10125
  %731 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10127
  %732 = load i32, i32* @flag_errno_math, align 4, !dbg !10127
  %tobool1080 = icmp eq i32 %732, 0, !dbg !10127
  br i1 %tobool1080, label %cond.false1082, label %cond.end1085, !dbg !10127

cond.false1082:                                   ; preds = %cond.end1076
  %733 = load i32, i32* @flag_rounding_math, align 4, !dbg !10127
  %tobool1083 = icmp eq i32 %733, 0, !dbg !10127
  %cond1084 = select i1 %tobool1083, i64 46, i64 48, !dbg !10127
  br label %cond.end1085, !dbg !10127

cond.end1085:                                     ; preds = %cond.end1076, %cond.false1082
  %cond1086 = phi i64 [ %cond1084, %cond.false1082 ], [ 45, %cond.end1076 ], !dbg !10127
  %arrayidx1088 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1086, !dbg !10127
  %734 = load %union.tree_node*, %union.tree_node** %arrayidx1088, align 8, !dbg !10127
  tail call fastcc void @def_builtin_1(i32 104, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.526, i64 0, i64 0), i32 3, %union.tree_node* %731, %union.tree_node* %731, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %734, i8 zeroext 0) #8, !dbg !10127
  %735 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10129
  %736 = load i32, i32* @flag_errno_math, align 4, !dbg !10129
  %tobool1089 = icmp eq i32 %736, 0, !dbg !10129
  br i1 %tobool1089, label %cond.false1091, label %cond.end1094, !dbg !10129

cond.false1091:                                   ; preds = %cond.end1085
  %737 = load i32, i32* @flag_rounding_math, align 4, !dbg !10129
  %tobool1092 = icmp eq i32 %737, 0, !dbg !10129
  %cond1093 = select i1 %tobool1092, i64 46, i64 48, !dbg !10129
  br label %cond.end1094, !dbg !10129

cond.end1094:                                     ; preds = %cond.end1085, %cond.false1091
  %cond1095 = phi i64 [ %cond1093, %cond.false1091 ], [ 45, %cond.end1085 ], !dbg !10129
  %arrayidx1097 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1095, !dbg !10129
  %738 = load %union.tree_node*, %union.tree_node** %arrayidx1097, align 8, !dbg !10129
  tail call fastcc void @def_builtin_1(i32 105, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.527, i64 0, i64 0), i32 3, %union.tree_node* %735, %union.tree_node* %735, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %738, i8 zeroext 0) #8, !dbg !10129
  %739 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10131
  %740 = load i32, i32* @flag_errno_math, align 4, !dbg !10131
  %tobool1098 = icmp eq i32 %740, 0, !dbg !10131
  br i1 %tobool1098, label %cond.false1100, label %cond.end1103, !dbg !10131

cond.false1100:                                   ; preds = %cond.end1094
  %741 = load i32, i32* @flag_rounding_math, align 4, !dbg !10131
  %tobool1101 = icmp eq i32 %741, 0, !dbg !10131
  %cond1102 = select i1 %tobool1101, i64 46, i64 48, !dbg !10131
  br label %cond.end1103, !dbg !10131

cond.end1103:                                     ; preds = %cond.end1094, %cond.false1100
  %cond1104 = phi i64 [ %cond1102, %cond.false1100 ], [ 45, %cond.end1094 ], !dbg !10131
  %arrayidx1106 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1104, !dbg !10131
  %742 = load %union.tree_node*, %union.tree_node** %arrayidx1106, align 8, !dbg !10131
  tail call fastcc void @def_builtin_1(i32 106, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.528, i64 0, i64 0), i32 3, %union.tree_node* %739, %union.tree_node* %739, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %742, i8 zeroext 0) #8, !dbg !10131
  %743 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10133
  %744 = load i32, i32* @flag_errno_math, align 4, !dbg !10133
  %tobool1107 = icmp eq i32 %744, 0, !dbg !10133
  br i1 %tobool1107, label %cond.false1109, label %cond.end1112, !dbg !10133

cond.false1109:                                   ; preds = %cond.end1103
  %745 = load i32, i32* @flag_rounding_math, align 4, !dbg !10133
  %tobool1110 = icmp eq i32 %745, 0, !dbg !10133
  %cond1111 = select i1 %tobool1110, i64 46, i64 48, !dbg !10133
  br label %cond.end1112, !dbg !10133

cond.end1112:                                     ; preds = %cond.end1103, %cond.false1109
  %cond1113 = phi i64 [ %cond1111, %cond.false1109 ], [ 45, %cond.end1103 ], !dbg !10133
  %arrayidx1115 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1113, !dbg !10133
  %746 = load %union.tree_node*, %union.tree_node** %arrayidx1115, align 8, !dbg !10133
  tail call fastcc void @def_builtin_1(i32 107, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.529, i64 0, i64 0), i32 3, %union.tree_node* %743, %union.tree_node* %743, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %746, i8 zeroext 0) #8, !dbg !10133
  %747 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 158), align 16, !dbg !10135
  %748 = load i32, i32* @flag_errno_math, align 4, !dbg !10135
  %tobool1116 = icmp eq i32 %748, 0, !dbg !10135
  br i1 %tobool1116, label %cond.false1118, label %cond.end1121, !dbg !10135

cond.false1118:                                   ; preds = %cond.end1112
  %749 = load i32, i32* @flag_rounding_math, align 4, !dbg !10135
  %tobool1119 = icmp eq i32 %749, 0, !dbg !10135
  %cond1120 = select i1 %tobool1119, i64 46, i64 48, !dbg !10135
  br label %cond.end1121, !dbg !10135

cond.end1121:                                     ; preds = %cond.end1112, %cond.false1118
  %cond1122 = phi i64 [ %cond1120, %cond.false1118 ], [ 45, %cond.end1112 ], !dbg !10135
  %arrayidx1124 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1122, !dbg !10135
  %750 = load %union.tree_node*, %union.tree_node** %arrayidx1124, align 8, !dbg !10135
  tail call fastcc void @def_builtin_1(i32 108, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.530, i64 0, i64 0), i32 3, %union.tree_node* %747, %union.tree_node* %747, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %750, i8 zeroext 0) #8, !dbg !10135
  %751 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 157), align 8, !dbg !10137
  %752 = load i32, i32* @flag_errno_math, align 4, !dbg !10137
  %tobool1125 = icmp eq i32 %752, 0, !dbg !10137
  br i1 %tobool1125, label %cond.false1127, label %cond.end1130, !dbg !10137

cond.false1127:                                   ; preds = %cond.end1121
  %753 = load i32, i32* @flag_rounding_math, align 4, !dbg !10137
  %tobool1128 = icmp eq i32 %753, 0, !dbg !10137
  %cond1129 = select i1 %tobool1128, i64 46, i64 48, !dbg !10137
  br label %cond.end1130, !dbg !10137

cond.end1130:                                     ; preds = %cond.end1121, %cond.false1127
  %cond1131 = phi i64 [ %cond1129, %cond.false1127 ], [ 45, %cond.end1121 ], !dbg !10137
  %arrayidx1133 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1131, !dbg !10137
  %754 = load %union.tree_node*, %union.tree_node** %arrayidx1133, align 8, !dbg !10137
  tail call fastcc void @def_builtin_1(i32 109, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.531, i64 0, i64 0), i32 3, %union.tree_node* %751, %union.tree_node* %751, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %754, i8 zeroext 0) #8, !dbg !10137
  %755 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 159), align 8, !dbg !10139
  %756 = load i32, i32* @flag_errno_math, align 4, !dbg !10139
  %tobool1134 = icmp eq i32 %756, 0, !dbg !10139
  br i1 %tobool1134, label %cond.false1136, label %cond.end1139, !dbg !10139

cond.false1136:                                   ; preds = %cond.end1130
  %757 = load i32, i32* @flag_rounding_math, align 4, !dbg !10139
  %tobool1137 = icmp eq i32 %757, 0, !dbg !10139
  %cond1138 = select i1 %tobool1137, i64 46, i64 48, !dbg !10139
  br label %cond.end1139, !dbg !10139

cond.end1139:                                     ; preds = %cond.end1130, %cond.false1136
  %cond1140 = phi i64 [ %cond1138, %cond.false1136 ], [ 45, %cond.end1130 ], !dbg !10139
  %arrayidx1142 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1140, !dbg !10139
  %758 = load %union.tree_node*, %union.tree_node** %arrayidx1142, align 8, !dbg !10139
  tail call fastcc void @def_builtin_1(i32 110, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.532, i64 0, i64 0), i32 3, %union.tree_node* %755, %union.tree_node* %755, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %758, i8 zeroext 0) #8, !dbg !10139
  %759 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 97), align 8, !dbg !10141
  %760 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10141
  %761 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10141
  tail call fastcc void @def_builtin_1(i32 111, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.533, i64 0, i64 0), i32 3, %union.tree_node* %759, %union.tree_node* %760, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %761, i8 zeroext 1) #8, !dbg !10141
  %762 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 96), align 16, !dbg !10143
  %763 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10143
  %764 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10143
  tail call fastcc void @def_builtin_1(i32 112, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.534, i64 0, i64 0), i32 3, %union.tree_node* %762, %union.tree_node* %763, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %764, i8 zeroext 1) #8, !dbg !10143
  %765 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 98), align 16, !dbg !10145
  %766 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10145
  %767 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10145
  tail call fastcc void @def_builtin_1(i32 113, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.535, i64 0, i64 0), i32 3, %union.tree_node* %765, %union.tree_node* %766, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %767, i8 zeroext 1) #8, !dbg !10145
  %768 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 152), align 16, !dbg !10147
  %769 = load i32, i32* @flag_errno_math, align 4, !dbg !10147
  %tobool1143 = icmp eq i32 %769, 0, !dbg !10147
  br i1 %tobool1143, label %cond.false1145, label %cond.end1148, !dbg !10147

cond.false1145:                                   ; preds = %cond.end1139
  %770 = load i32, i32* @flag_rounding_math, align 4, !dbg !10147
  %tobool1146 = icmp eq i32 %770, 0, !dbg !10147
  %cond1147 = select i1 %tobool1146, i64 46, i64 48, !dbg !10147
  br label %cond.end1148, !dbg !10147

cond.end1148:                                     ; preds = %cond.end1139, %cond.false1145
  %cond1149 = phi i64 [ %cond1147, %cond.false1145 ], [ 45, %cond.end1139 ], !dbg !10147
  %arrayidx1151 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1149, !dbg !10147
  %771 = load %union.tree_node*, %union.tree_node** %arrayidx1151, align 8, !dbg !10147
  tail call fastcc void @def_builtin_1(i32 114, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.536, i64 0, i64 0), i32 3, %union.tree_node* %768, %union.tree_node* %768, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %771, i8 zeroext 1) #8, !dbg !10147
  %772 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 151), align 8, !dbg !10149
  %773 = load i32, i32* @flag_isoc99, align 4, !dbg !10149
  %tobool1152 = icmp eq i32 %773, 0, !dbg !10149
  %conv1155 = zext i1 %tobool1152 to i8, !dbg !10149
  %774 = load i32, i32* @flag_errno_math, align 4, !dbg !10149
  %tobool1156 = icmp eq i32 %774, 0, !dbg !10149
  br i1 %tobool1156, label %cond.false1158, label %cond.end1161, !dbg !10149

cond.false1158:                                   ; preds = %cond.end1148
  %775 = load i32, i32* @flag_rounding_math, align 4, !dbg !10149
  %tobool1159 = icmp eq i32 %775, 0, !dbg !10149
  %cond1160 = select i1 %tobool1159, i64 46, i64 48, !dbg !10149
  br label %cond.end1161, !dbg !10149

cond.end1161:                                     ; preds = %cond.end1148, %cond.false1158
  %cond1162 = phi i64 [ %cond1160, %cond.false1158 ], [ 45, %cond.end1148 ], !dbg !10149
  %arrayidx1164 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1162, !dbg !10149
  %776 = load %union.tree_node*, %union.tree_node** %arrayidx1164, align 8, !dbg !10149
  %777 = load i32, i32* @linux_uclibc, align 4, !dbg !10149
  %778 = trunc i32 %777 to i8, !dbg !10149
  %779 = and i8 %778, 1, !dbg !10149
  %780 = xor i8 %779, 1, !dbg !10149
  tail call fastcc void @def_builtin_1(i32 115, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.537, i64 0, i64 0), i32 3, %union.tree_node* %772, %union.tree_node* %772, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1155, %union.tree_node* %776, i8 zeroext %780) #8, !dbg !10149
  %781 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 153), align 8, !dbg !10151
  %782 = load i32, i32* @flag_isoc99, align 4, !dbg !10151
  %tobool1169 = icmp eq i32 %782, 0, !dbg !10151
  %conv1172 = zext i1 %tobool1169 to i8, !dbg !10151
  %783 = load i32, i32* @flag_errno_math, align 4, !dbg !10151
  %tobool1173 = icmp eq i32 %783, 0, !dbg !10151
  br i1 %tobool1173, label %cond.false1175, label %cond.end1178, !dbg !10151

cond.false1175:                                   ; preds = %cond.end1161
  %784 = load i32, i32* @flag_rounding_math, align 4, !dbg !10151
  %tobool1176 = icmp eq i32 %784, 0, !dbg !10151
  %cond1177 = select i1 %tobool1176, i64 46, i64 48, !dbg !10151
  br label %cond.end1178, !dbg !10151

cond.end1178:                                     ; preds = %cond.end1161, %cond.false1175
  %cond1179 = phi i64 [ %cond1177, %cond.false1175 ], [ 45, %cond.end1161 ], !dbg !10151
  %arrayidx1181 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1179, !dbg !10151
  %785 = load %union.tree_node*, %union.tree_node** %arrayidx1181, align 8, !dbg !10151
  %786 = load i32, i32* @linux_uclibc, align 4, !dbg !10151
  %787 = trunc i32 %786 to i8, !dbg !10151
  %788 = and i8 %787, 1, !dbg !10151
  %789 = xor i8 %788, 1, !dbg !10151
  tail call fastcc void @def_builtin_1(i32 116, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.538, i64 0, i64 0), i32 3, %union.tree_node* %781, %union.tree_node* %781, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1172, %union.tree_node* %785, i8 zeroext %789) #8, !dbg !10151
  %790 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 97), align 8, !dbg !10153
  %791 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10153
  %792 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10153
  tail call fastcc void @def_builtin_1(i32 117, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.539, i64 0, i64 0), i32 3, %union.tree_node* %790, %union.tree_node* %791, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %792, i8 zeroext 1) #8, !dbg !10153
  %793 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 96), align 16, !dbg !10155
  %794 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10155
  %795 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10155
  tail call fastcc void @def_builtin_1(i32 118, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.540, i64 0, i64 0), i32 3, %union.tree_node* %793, %union.tree_node* %794, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %795, i8 zeroext 1) #8, !dbg !10155
  %796 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 98), align 16, !dbg !10157
  %797 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10157
  %798 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10157
  tail call fastcc void @def_builtin_1(i32 119, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.541, i64 0, i64 0), i32 3, %union.tree_node* %796, %union.tree_node* %797, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %798, i8 zeroext 1) #8, !dbg !10157
  %799 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10159
  %800 = load i32, i32* @flag_isoc99, align 4, !dbg !10159
  %tobool1186 = icmp eq i32 %800, 0, !dbg !10159
  %conv1189 = zext i1 %tobool1186 to i8, !dbg !10159
  %801 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10159
  %802 = load i32, i32* @linux_uclibc, align 4, !dbg !10159
  %803 = trunc i32 %802 to i8, !dbg !10159
  %804 = and i8 %803, 1, !dbg !10159
  %805 = xor i8 %804, 1, !dbg !10159
  tail call fastcc void @def_builtin_1(i32 120, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.542, i64 0, i64 0), i32 3, %union.tree_node* %799, %union.tree_node* %799, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1189, %union.tree_node* %801, i8 zeroext %805) #8, !dbg !10159
  %806 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10161
  %807 = load i32, i32* @flag_isoc99, align 4, !dbg !10161
  %tobool1194 = icmp eq i32 %807, 0, !dbg !10161
  %conv1197 = zext i1 %tobool1194 to i8, !dbg !10161
  %808 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10161
  %809 = load i32, i32* @linux_uclibc, align 4, !dbg !10161
  %810 = trunc i32 %809 to i8, !dbg !10161
  %811 = and i8 %810, 1, !dbg !10161
  %812 = xor i8 %811, 1, !dbg !10161
  tail call fastcc void @def_builtin_1(i32 121, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.543, i64 0, i64 0), i32 3, %union.tree_node* %806, %union.tree_node* %806, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1197, %union.tree_node* %808, i8 zeroext %812) #8, !dbg !10161
  %813 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10163
  %814 = load i32, i32* @flag_isoc99, align 4, !dbg !10163
  %tobool1202 = icmp eq i32 %814, 0, !dbg !10163
  %conv1205 = zext i1 %tobool1202 to i8, !dbg !10163
  %815 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10163
  %816 = load i32, i32* @linux_uclibc, align 4, !dbg !10163
  %817 = trunc i32 %816 to i8, !dbg !10163
  %818 = and i8 %817, 1, !dbg !10163
  %819 = xor i8 %818, 1, !dbg !10163
  tail call fastcc void @def_builtin_1(i32 122, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.544, i64 0, i64 0), i32 3, %union.tree_node* %813, %union.tree_node* %813, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1205, %union.tree_node* %815, i8 zeroext %819) #8, !dbg !10163
  %820 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 155), align 8, !dbg !10165
  %821 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10165
  tail call fastcc void @def_builtin_1(i32 123, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.545, i64 0, i64 0), i32 3, %union.tree_node* %820, %union.tree_node* %820, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %821, i8 zeroext 0) #8, !dbg !10165
  %822 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 154), align 16, !dbg !10167
  %823 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10167
  tail call fastcc void @def_builtin_1(i32 124, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.546, i64 0, i64 0), i32 3, %union.tree_node* %822, %union.tree_node* %822, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %823, i8 zeroext 0) #8, !dbg !10167
  %824 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 156), align 16, !dbg !10169
  %825 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10169
  tail call fastcc void @def_builtin_1(i32 125, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.547, i64 0, i64 0), i32 3, %union.tree_node* %824, %union.tree_node* %824, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %825, i8 zeroext 0) #8, !dbg !10169
  %826 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 100), align 16, !dbg !10171
  %827 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10171
  %828 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10171
  tail call fastcc void @def_builtin_1(i32 126, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.548, i64 0, i64 0), i32 3, %union.tree_node* %826, %union.tree_node* %827, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %828, i8 zeroext 1) #8, !dbg !10171
  %829 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 99), align 8, !dbg !10173
  %830 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10173
  %831 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10173
  tail call fastcc void @def_builtin_1(i32 127, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.549, i64 0, i64 0), i32 3, %union.tree_node* %829, %union.tree_node* %830, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %831, i8 zeroext 1) #8, !dbg !10173
  %832 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 101), align 8, !dbg !10175
  %833 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10175
  %834 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10175
  tail call fastcc void @def_builtin_1(i32 128, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.550, i64 0, i64 0), i32 3, %union.tree_node* %832, %union.tree_node* %833, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %834, i8 zeroext 1) #8, !dbg !10175
  %835 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 100), align 16, !dbg !10177
  %836 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10177
  %837 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10177
  tail call fastcc void @def_builtin_1(i32 129, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.551, i64 0, i64 0), i32 3, %union.tree_node* %835, %union.tree_node* %836, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %837, i8 zeroext 1) #8, !dbg !10177
  %838 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 99), align 8, !dbg !10179
  %839 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10179
  %840 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10179
  tail call fastcc void @def_builtin_1(i32 130, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.552, i64 0, i64 0), i32 3, %union.tree_node* %838, %union.tree_node* %839, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %840, i8 zeroext 1) #8, !dbg !10179
  %841 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 101), align 8, !dbg !10181
  %842 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10181
  %843 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10181
  tail call fastcc void @def_builtin_1(i32 131, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.553, i64 0, i64 0), i32 3, %union.tree_node* %841, %union.tree_node* %842, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %843, i8 zeroext 1) #8, !dbg !10181
  %844 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 100), align 16, !dbg !10183
  %845 = load i32, i32* @flag_isoc99, align 4, !dbg !10183
  %tobool1210 = icmp eq i32 %845, 0, !dbg !10183
  %conv1213 = zext i1 %tobool1210 to i8, !dbg !10183
  %846 = load i32, i32* @flag_errno_math, align 4, !dbg !10183
  %tobool1214 = icmp eq i32 %846, 0, !dbg !10183
  br i1 %tobool1214, label %cond.false1216, label %cond.end1219, !dbg !10183

cond.false1216:                                   ; preds = %cond.end1178
  %847 = load i32, i32* @flag_rounding_math, align 4, !dbg !10183
  %tobool1217 = icmp eq i32 %847, 0, !dbg !10183
  %cond1218 = select i1 %tobool1217, i64 46, i64 48, !dbg !10183
  br label %cond.end1219, !dbg !10183

cond.end1219:                                     ; preds = %cond.end1178, %cond.false1216
  %cond1220 = phi i64 [ %cond1218, %cond.false1216 ], [ 45, %cond.end1178 ], !dbg !10183
  %arrayidx1222 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1220, !dbg !10183
  %848 = load %union.tree_node*, %union.tree_node** %arrayidx1222, align 8, !dbg !10183
  %849 = load i32, i32* @linux_uclibc, align 4, !dbg !10183
  %850 = trunc i32 %849 to i8, !dbg !10183
  %851 = and i8 %850, 1, !dbg !10183
  %852 = xor i8 %851, 1, !dbg !10183
  tail call fastcc void @def_builtin_1(i32 132, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.554, i64 0, i64 0), i32 3, %union.tree_node* %844, %union.tree_node* %844, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1213, %union.tree_node* %848, i8 zeroext %852) #8, !dbg !10183
  %853 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 99), align 8, !dbg !10185
  %854 = load i32, i32* @flag_isoc99, align 4, !dbg !10185
  %tobool1227 = icmp eq i32 %854, 0, !dbg !10185
  %conv1230 = zext i1 %tobool1227 to i8, !dbg !10185
  %855 = load i32, i32* @flag_errno_math, align 4, !dbg !10185
  %tobool1231 = icmp eq i32 %855, 0, !dbg !10185
  br i1 %tobool1231, label %cond.false1233, label %cond.end1236, !dbg !10185

cond.false1233:                                   ; preds = %cond.end1219
  %856 = load i32, i32* @flag_rounding_math, align 4, !dbg !10185
  %tobool1234 = icmp eq i32 %856, 0, !dbg !10185
  %cond1235 = select i1 %tobool1234, i64 46, i64 48, !dbg !10185
  br label %cond.end1236, !dbg !10185

cond.end1236:                                     ; preds = %cond.end1219, %cond.false1233
  %cond1237 = phi i64 [ %cond1235, %cond.false1233 ], [ 45, %cond.end1219 ], !dbg !10185
  %arrayidx1239 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1237, !dbg !10185
  %857 = load %union.tree_node*, %union.tree_node** %arrayidx1239, align 8, !dbg !10185
  %858 = load i32, i32* @linux_uclibc, align 4, !dbg !10185
  %859 = trunc i32 %858 to i8, !dbg !10185
  %860 = and i8 %859, 1, !dbg !10185
  %861 = xor i8 %860, 1, !dbg !10185
  tail call fastcc void @def_builtin_1(i32 133, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.555, i64 0, i64 0), i32 3, %union.tree_node* %853, %union.tree_node* %853, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1230, %union.tree_node* %857, i8 zeroext %861) #8, !dbg !10185
  %862 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 101), align 8, !dbg !10187
  %863 = load i32, i32* @flag_isoc99, align 4, !dbg !10187
  %tobool1244 = icmp eq i32 %863, 0, !dbg !10187
  %conv1247 = zext i1 %tobool1244 to i8, !dbg !10187
  %864 = load i32, i32* @flag_errno_math, align 4, !dbg !10187
  %tobool1248 = icmp eq i32 %864, 0, !dbg !10187
  br i1 %tobool1248, label %cond.false1250, label %cond.end1253, !dbg !10187

cond.false1250:                                   ; preds = %cond.end1236
  %865 = load i32, i32* @flag_rounding_math, align 4, !dbg !10187
  %tobool1251 = icmp eq i32 %865, 0, !dbg !10187
  %cond1252 = select i1 %tobool1251, i64 46, i64 48, !dbg !10187
  br label %cond.end1253, !dbg !10187

cond.end1253:                                     ; preds = %cond.end1236, %cond.false1250
  %cond1254 = phi i64 [ %cond1252, %cond.false1250 ], [ 45, %cond.end1236 ], !dbg !10187
  %arrayidx1256 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1254, !dbg !10187
  %866 = load %union.tree_node*, %union.tree_node** %arrayidx1256, align 8, !dbg !10187
  %867 = load i32, i32* @linux_uclibc, align 4, !dbg !10187
  %868 = trunc i32 %867 to i8, !dbg !10187
  %869 = and i8 %868, 1, !dbg !10187
  %870 = xor i8 %869, 1, !dbg !10187
  tail call fastcc void @def_builtin_1(i32 134, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.556, i64 0, i64 0), i32 3, %union.tree_node* %862, %union.tree_node* %862, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1247, %union.tree_node* %866, i8 zeroext %870) #8, !dbg !10187
  %871 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 100), align 16, !dbg !10189
  %872 = load i32, i32* @flag_isoc99, align 4, !dbg !10189
  %tobool1261 = icmp eq i32 %872, 0, !dbg !10189
  %conv1264 = zext i1 %tobool1261 to i8, !dbg !10189
  %873 = load i32, i32* @flag_errno_math, align 4, !dbg !10189
  %tobool1265 = icmp eq i32 %873, 0, !dbg !10189
  %cond1266 = select i1 %tobool1265, i64 46, i64 45, !dbg !10189
  %arrayidx1268 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1266, !dbg !10189
  %874 = load %union.tree_node*, %union.tree_node** %arrayidx1268, align 8, !dbg !10189
  %875 = load i32, i32* @linux_uclibc, align 4, !dbg !10189
  %876 = trunc i32 %875 to i8, !dbg !10189
  %877 = and i8 %876, 1, !dbg !10189
  %878 = xor i8 %877, 1, !dbg !10189
  tail call fastcc void @def_builtin_1(i32 135, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.557, i64 0, i64 0), i32 3, %union.tree_node* %871, %union.tree_node* %871, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1264, %union.tree_node* %874, i8 zeroext %878) #8, !dbg !10189
  %879 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 99), align 8, !dbg !10191
  %880 = load i32, i32* @flag_isoc99, align 4, !dbg !10191
  %tobool1273 = icmp eq i32 %880, 0, !dbg !10191
  %conv1276 = zext i1 %tobool1273 to i8, !dbg !10191
  %881 = load i32, i32* @flag_errno_math, align 4, !dbg !10191
  %tobool1277 = icmp eq i32 %881, 0, !dbg !10191
  %cond1278 = select i1 %tobool1277, i64 46, i64 45, !dbg !10191
  %arrayidx1280 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1278, !dbg !10191
  %882 = load %union.tree_node*, %union.tree_node** %arrayidx1280, align 8, !dbg !10191
  %883 = load i32, i32* @linux_uclibc, align 4, !dbg !10191
  %884 = trunc i32 %883 to i8, !dbg !10191
  %885 = and i8 %884, 1, !dbg !10191
  %886 = xor i8 %885, 1, !dbg !10191
  tail call fastcc void @def_builtin_1(i32 136, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.558, i64 0, i64 0), i32 3, %union.tree_node* %879, %union.tree_node* %879, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1276, %union.tree_node* %882, i8 zeroext %886) #8, !dbg !10191
  %887 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 101), align 8, !dbg !10193
  %888 = load i32, i32* @flag_isoc99, align 4, !dbg !10193
  %tobool1285 = icmp eq i32 %888, 0, !dbg !10193
  %conv1288 = zext i1 %tobool1285 to i8, !dbg !10193
  %889 = load i32, i32* @flag_errno_math, align 4, !dbg !10193
  %tobool1289 = icmp eq i32 %889, 0, !dbg !10193
  %cond1290 = select i1 %tobool1289, i64 46, i64 45, !dbg !10193
  %arrayidx1292 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1290, !dbg !10193
  %890 = load %union.tree_node*, %union.tree_node** %arrayidx1292, align 8, !dbg !10193
  %891 = load i32, i32* @linux_uclibc, align 4, !dbg !10193
  %892 = trunc i32 %891 to i8, !dbg !10193
  %893 = and i8 %892, 1, !dbg !10193
  %894 = xor i8 %893, 1, !dbg !10193
  tail call fastcc void @def_builtin_1(i32 137, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.559, i64 0, i64 0), i32 3, %union.tree_node* %887, %union.tree_node* %887, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1288, %union.tree_node* %890, i8 zeroext %894) #8, !dbg !10193
  %895 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10195
  %896 = load i32, i32* @flag_errno_math, align 4, !dbg !10195
  %tobool1297 = icmp eq i32 %896, 0, !dbg !10195
  br i1 %tobool1297, label %cond.false1299, label %cond.end1302, !dbg !10195

cond.false1299:                                   ; preds = %cond.end1253
  %897 = load i32, i32* @flag_rounding_math, align 4, !dbg !10195
  %tobool1300 = icmp eq i32 %897, 0, !dbg !10195
  %cond1301 = select i1 %tobool1300, i64 46, i64 48, !dbg !10195
  br label %cond.end1302, !dbg !10195

cond.end1302:                                     ; preds = %cond.end1253, %cond.false1299
  %cond1303 = phi i64 [ %cond1301, %cond.false1299 ], [ 45, %cond.end1253 ], !dbg !10195
  %arrayidx1305 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1303, !dbg !10195
  %898 = load %union.tree_node*, %union.tree_node** %arrayidx1305, align 8, !dbg !10195
  tail call fastcc void @def_builtin_1(i32 138, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.560, i64 0, i64 0), i32 3, %union.tree_node* %895, %union.tree_node* %895, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %898, i8 zeroext 1) #8, !dbg !10195
  %899 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10197
  %900 = load i32, i32* @flag_errno_math, align 4, !dbg !10197
  %tobool1306 = icmp eq i32 %900, 0, !dbg !10197
  br i1 %tobool1306, label %cond.false1308, label %cond.end1311, !dbg !10197

cond.false1308:                                   ; preds = %cond.end1302
  %901 = load i32, i32* @flag_rounding_math, align 4, !dbg !10197
  %tobool1309 = icmp eq i32 %901, 0, !dbg !10197
  %cond1310 = select i1 %tobool1309, i64 46, i64 48, !dbg !10197
  br label %cond.end1311, !dbg !10197

cond.end1311:                                     ; preds = %cond.end1302, %cond.false1308
  %cond1312 = phi i64 [ %cond1310, %cond.false1308 ], [ 45, %cond.end1302 ], !dbg !10197
  %arrayidx1314 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1312, !dbg !10197
  %902 = load %union.tree_node*, %union.tree_node** %arrayidx1314, align 8, !dbg !10197
  tail call fastcc void @def_builtin_1(i32 139, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.561, i64 0, i64 0), i32 3, %union.tree_node* %899, %union.tree_node* %899, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %902, i8 zeroext 1) #8, !dbg !10197
  %903 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10199
  %904 = load i32, i32* @flag_isoc99, align 4, !dbg !10199
  %tobool1315 = icmp eq i32 %904, 0, !dbg !10199
  %conv1318 = zext i1 %tobool1315 to i8, !dbg !10199
  %905 = load i32, i32* @flag_errno_math, align 4, !dbg !10199
  %tobool1319 = icmp eq i32 %905, 0, !dbg !10199
  br i1 %tobool1319, label %cond.false1321, label %cond.end1324, !dbg !10199

cond.false1321:                                   ; preds = %cond.end1311
  %906 = load i32, i32* @flag_rounding_math, align 4, !dbg !10199
  %tobool1322 = icmp eq i32 %906, 0, !dbg !10199
  %cond1323 = select i1 %tobool1322, i64 46, i64 48, !dbg !10199
  br label %cond.end1324, !dbg !10199

cond.end1324:                                     ; preds = %cond.end1311, %cond.false1321
  %cond1325 = phi i64 [ %cond1323, %cond.false1321 ], [ 45, %cond.end1311 ], !dbg !10199
  %arrayidx1327 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1325, !dbg !10199
  %907 = load %union.tree_node*, %union.tree_node** %arrayidx1327, align 8, !dbg !10199
  %908 = load i32, i32* @linux_uclibc, align 4, !dbg !10199
  %909 = trunc i32 %908 to i8, !dbg !10199
  %910 = and i8 %909, 1, !dbg !10199
  %911 = xor i8 %910, 1, !dbg !10199
  tail call fastcc void @def_builtin_1(i32 140, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.562, i64 0, i64 0), i32 3, %union.tree_node* %903, %union.tree_node* %903, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1318, %union.tree_node* %907, i8 zeroext %911) #8, !dbg !10199
  %912 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10201
  %913 = load i32, i32* @flag_isoc99, align 4, !dbg !10201
  %tobool1332 = icmp eq i32 %913, 0, !dbg !10201
  %conv1335 = zext i1 %tobool1332 to i8, !dbg !10201
  %914 = load i32, i32* @flag_errno_math, align 4, !dbg !10201
  %tobool1336 = icmp eq i32 %914, 0, !dbg !10201
  br i1 %tobool1336, label %cond.false1338, label %cond.end1341, !dbg !10201

cond.false1338:                                   ; preds = %cond.end1324
  %915 = load i32, i32* @flag_rounding_math, align 4, !dbg !10201
  %tobool1339 = icmp eq i32 %915, 0, !dbg !10201
  %cond1340 = select i1 %tobool1339, i64 46, i64 48, !dbg !10201
  br label %cond.end1341, !dbg !10201

cond.end1341:                                     ; preds = %cond.end1324, %cond.false1338
  %cond1342 = phi i64 [ %cond1340, %cond.false1338 ], [ 45, %cond.end1324 ], !dbg !10201
  %arrayidx1344 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1342, !dbg !10201
  %916 = load %union.tree_node*, %union.tree_node** %arrayidx1344, align 8, !dbg !10201
  %917 = load i32, i32* @linux_uclibc, align 4, !dbg !10201
  %918 = trunc i32 %917 to i8, !dbg !10201
  %919 = and i8 %918, 1, !dbg !10201
  %920 = xor i8 %919, 1, !dbg !10201
  tail call fastcc void @def_builtin_1(i32 141, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.563, i64 0, i64 0), i32 3, %union.tree_node* %912, %union.tree_node* %912, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1335, %union.tree_node* %916, i8 zeroext %920) #8, !dbg !10201
  %921 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10203
  %922 = load i32, i32* @flag_isoc99, align 4, !dbg !10203
  %tobool1349 = icmp eq i32 %922, 0, !dbg !10203
  %conv1352 = zext i1 %tobool1349 to i8, !dbg !10203
  %923 = load i32, i32* @flag_errno_math, align 4, !dbg !10203
  %tobool1353 = icmp eq i32 %923, 0, !dbg !10203
  br i1 %tobool1353, label %cond.false1355, label %cond.end1358, !dbg !10203

cond.false1355:                                   ; preds = %cond.end1341
  %924 = load i32, i32* @flag_rounding_math, align 4, !dbg !10203
  %tobool1356 = icmp eq i32 %924, 0, !dbg !10203
  %cond1357 = select i1 %tobool1356, i64 46, i64 48, !dbg !10203
  br label %cond.end1358, !dbg !10203

cond.end1358:                                     ; preds = %cond.end1341, %cond.false1355
  %cond1359 = phi i64 [ %cond1357, %cond.false1355 ], [ 45, %cond.end1341 ], !dbg !10203
  %arrayidx1361 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1359, !dbg !10203
  %925 = load %union.tree_node*, %union.tree_node** %arrayidx1361, align 8, !dbg !10203
  %926 = load i32, i32* @linux_uclibc, align 4, !dbg !10203
  %927 = trunc i32 %926 to i8, !dbg !10203
  %928 = and i8 %927, 1, !dbg !10203
  %929 = xor i8 %928, 1, !dbg !10203
  tail call fastcc void @def_builtin_1(i32 142, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.564, i64 0, i64 0), i32 3, %union.tree_node* %921, %union.tree_node* %921, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1352, %union.tree_node* %925, i8 zeroext %929) #8, !dbg !10203
  %930 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10205
  %931 = load i32, i32* @flag_isoc99, align 4, !dbg !10205
  %tobool1366 = icmp eq i32 %931, 0, !dbg !10205
  %conv1369 = zext i1 %tobool1366 to i8, !dbg !10205
  %932 = load i32, i32* @flag_errno_math, align 4, !dbg !10205
  %tobool1370 = icmp eq i32 %932, 0, !dbg !10205
  br i1 %tobool1370, label %cond.false1372, label %cond.end1375, !dbg !10205

cond.false1372:                                   ; preds = %cond.end1358
  %933 = load i32, i32* @flag_rounding_math, align 4, !dbg !10205
  %tobool1373 = icmp eq i32 %933, 0, !dbg !10205
  %cond1374 = select i1 %tobool1373, i64 46, i64 48, !dbg !10205
  br label %cond.end1375, !dbg !10205

cond.end1375:                                     ; preds = %cond.end1358, %cond.false1372
  %cond1376 = phi i64 [ %cond1374, %cond.false1372 ], [ 45, %cond.end1358 ], !dbg !10205
  %arrayidx1378 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1376, !dbg !10205
  %934 = load %union.tree_node*, %union.tree_node** %arrayidx1378, align 8, !dbg !10205
  %935 = load i32, i32* @linux_uclibc, align 4, !dbg !10205
  %936 = trunc i32 %935 to i8, !dbg !10205
  %937 = and i8 %936, 1, !dbg !10205
  %938 = xor i8 %937, 1, !dbg !10205
  tail call fastcc void @def_builtin_1(i32 143, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.565, i64 0, i64 0), i32 3, %union.tree_node* %930, %union.tree_node* %930, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1369, %union.tree_node* %934, i8 zeroext %938) #8, !dbg !10205
  %939 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10207
  %940 = load i32, i32* @flag_isoc99, align 4, !dbg !10207
  %tobool1383 = icmp eq i32 %940, 0, !dbg !10207
  %conv1386 = zext i1 %tobool1383 to i8, !dbg !10207
  %941 = load i32, i32* @flag_errno_math, align 4, !dbg !10207
  %tobool1387 = icmp eq i32 %941, 0, !dbg !10207
  br i1 %tobool1387, label %cond.false1389, label %cond.end1392, !dbg !10207

cond.false1389:                                   ; preds = %cond.end1375
  %942 = load i32, i32* @flag_rounding_math, align 4, !dbg !10207
  %tobool1390 = icmp eq i32 %942, 0, !dbg !10207
  %cond1391 = select i1 %tobool1390, i64 46, i64 48, !dbg !10207
  br label %cond.end1392, !dbg !10207

cond.end1392:                                     ; preds = %cond.end1375, %cond.false1389
  %cond1393 = phi i64 [ %cond1391, %cond.false1389 ], [ 45, %cond.end1375 ], !dbg !10207
  %arrayidx1395 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1393, !dbg !10207
  %943 = load %union.tree_node*, %union.tree_node** %arrayidx1395, align 8, !dbg !10207
  %944 = load i32, i32* @linux_uclibc, align 4, !dbg !10207
  %945 = trunc i32 %944 to i8, !dbg !10207
  %946 = and i8 %945, 1, !dbg !10207
  %947 = xor i8 %946, 1, !dbg !10207
  tail call fastcc void @def_builtin_1(i32 144, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.566, i64 0, i64 0), i32 3, %union.tree_node* %939, %union.tree_node* %939, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1386, %union.tree_node* %943, i8 zeroext %947) #8, !dbg !10207
  %948 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10209
  %949 = load i32, i32* @flag_isoc99, align 4, !dbg !10209
  %tobool1400 = icmp eq i32 %949, 0, !dbg !10209
  %conv1403 = zext i1 %tobool1400 to i8, !dbg !10209
  %950 = load i32, i32* @flag_errno_math, align 4, !dbg !10209
  %tobool1404 = icmp eq i32 %950, 0, !dbg !10209
  br i1 %tobool1404, label %cond.false1406, label %cond.end1409, !dbg !10209

cond.false1406:                                   ; preds = %cond.end1392
  %951 = load i32, i32* @flag_rounding_math, align 4, !dbg !10209
  %tobool1407 = icmp eq i32 %951, 0, !dbg !10209
  %cond1408 = select i1 %tobool1407, i64 46, i64 48, !dbg !10209
  br label %cond.end1409, !dbg !10209

cond.end1409:                                     ; preds = %cond.end1392, %cond.false1406
  %cond1410 = phi i64 [ %cond1408, %cond.false1406 ], [ 45, %cond.end1392 ], !dbg !10209
  %arrayidx1412 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1410, !dbg !10209
  %952 = load %union.tree_node*, %union.tree_node** %arrayidx1412, align 8, !dbg !10209
  %953 = load i32, i32* @linux_uclibc, align 4, !dbg !10209
  %954 = trunc i32 %953 to i8, !dbg !10209
  %955 = and i8 %954, 1, !dbg !10209
  %956 = xor i8 %955, 1, !dbg !10209
  tail call fastcc void @def_builtin_1(i32 145, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.567, i64 0, i64 0), i32 3, %union.tree_node* %948, %union.tree_node* %948, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1403, %union.tree_node* %952, i8 zeroext %956) #8, !dbg !10209
  %957 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10211
  %958 = load i32, i32* @flag_isoc99, align 4, !dbg !10211
  %tobool1417 = icmp eq i32 %958, 0, !dbg !10211
  %conv1420 = zext i1 %tobool1417 to i8, !dbg !10211
  %959 = load i32, i32* @flag_errno_math, align 4, !dbg !10211
  %tobool1421 = icmp eq i32 %959, 0, !dbg !10211
  br i1 %tobool1421, label %cond.false1423, label %cond.end1426, !dbg !10211

cond.false1423:                                   ; preds = %cond.end1409
  %960 = load i32, i32* @flag_rounding_math, align 4, !dbg !10211
  %tobool1424 = icmp eq i32 %960, 0, !dbg !10211
  %cond1425 = select i1 %tobool1424, i64 46, i64 48, !dbg !10211
  br label %cond.end1426, !dbg !10211

cond.end1426:                                     ; preds = %cond.end1409, %cond.false1423
  %cond1427 = phi i64 [ %cond1425, %cond.false1423 ], [ 45, %cond.end1409 ], !dbg !10211
  %arrayidx1429 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1427, !dbg !10211
  %961 = load %union.tree_node*, %union.tree_node** %arrayidx1429, align 8, !dbg !10211
  %962 = load i32, i32* @linux_uclibc, align 4, !dbg !10211
  %963 = trunc i32 %962 to i8, !dbg !10211
  %964 = and i8 %963, 1, !dbg !10211
  %965 = xor i8 %964, 1, !dbg !10211
  tail call fastcc void @def_builtin_1(i32 146, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.568, i64 0, i64 0), i32 3, %union.tree_node* %957, %union.tree_node* %957, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1420, %union.tree_node* %961, i8 zeroext %965) #8, !dbg !10211
  %966 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10213
  %967 = load i32, i32* @flag_isoc99, align 4, !dbg !10213
  %tobool1434 = icmp eq i32 %967, 0, !dbg !10213
  %conv1437 = zext i1 %tobool1434 to i8, !dbg !10213
  %968 = load i32, i32* @flag_errno_math, align 4, !dbg !10213
  %tobool1438 = icmp eq i32 %968, 0, !dbg !10213
  br i1 %tobool1438, label %cond.false1440, label %cond.end1443, !dbg !10213

cond.false1440:                                   ; preds = %cond.end1426
  %969 = load i32, i32* @flag_rounding_math, align 4, !dbg !10213
  %tobool1441 = icmp eq i32 %969, 0, !dbg !10213
  %cond1442 = select i1 %tobool1441, i64 46, i64 48, !dbg !10213
  br label %cond.end1443, !dbg !10213

cond.end1443:                                     ; preds = %cond.end1426, %cond.false1440
  %cond1444 = phi i64 [ %cond1442, %cond.false1440 ], [ 45, %cond.end1426 ], !dbg !10213
  %arrayidx1446 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1444, !dbg !10213
  %970 = load %union.tree_node*, %union.tree_node** %arrayidx1446, align 8, !dbg !10213
  %971 = load i32, i32* @linux_uclibc, align 4, !dbg !10213
  %972 = trunc i32 %971 to i8, !dbg !10213
  %973 = and i8 %972, 1, !dbg !10213
  %974 = xor i8 %973, 1, !dbg !10213
  tail call fastcc void @def_builtin_1(i32 147, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.569, i64 0, i64 0), i32 3, %union.tree_node* %966, %union.tree_node* %966, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1437, %union.tree_node* %970, i8 zeroext %974) #8, !dbg !10213
  %975 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10215
  %976 = load i32, i32* @flag_isoc99, align 4, !dbg !10215
  %tobool1451 = icmp eq i32 %976, 0, !dbg !10215
  %conv1454 = zext i1 %tobool1451 to i8, !dbg !10215
  %977 = load i32, i32* @flag_errno_math, align 4, !dbg !10215
  %tobool1455 = icmp eq i32 %977, 0, !dbg !10215
  br i1 %tobool1455, label %cond.false1457, label %cond.end1460, !dbg !10215

cond.false1457:                                   ; preds = %cond.end1443
  %978 = load i32, i32* @flag_rounding_math, align 4, !dbg !10215
  %tobool1458 = icmp eq i32 %978, 0, !dbg !10215
  %cond1459 = select i1 %tobool1458, i64 46, i64 48, !dbg !10215
  br label %cond.end1460, !dbg !10215

cond.end1460:                                     ; preds = %cond.end1443, %cond.false1457
  %cond1461 = phi i64 [ %cond1459, %cond.false1457 ], [ 45, %cond.end1443 ], !dbg !10215
  %arrayidx1463 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1461, !dbg !10215
  %979 = load %union.tree_node*, %union.tree_node** %arrayidx1463, align 8, !dbg !10215
  %980 = load i32, i32* @linux_uclibc, align 4, !dbg !10215
  %981 = trunc i32 %980 to i8, !dbg !10215
  %982 = and i8 %981, 1, !dbg !10215
  %983 = xor i8 %982, 1, !dbg !10215
  tail call fastcc void @def_builtin_1(i32 148, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.570, i64 0, i64 0), i32 3, %union.tree_node* %975, %union.tree_node* %975, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1454, %union.tree_node* %979, i8 zeroext %983) #8, !dbg !10215
  %984 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10217
  %985 = load i32, i32* @flag_isoc99, align 4, !dbg !10217
  %tobool1468 = icmp eq i32 %985, 0, !dbg !10217
  %conv1471 = zext i1 %tobool1468 to i8, !dbg !10217
  %986 = load i32, i32* @flag_errno_math, align 4, !dbg !10217
  %tobool1472 = icmp eq i32 %986, 0, !dbg !10217
  br i1 %tobool1472, label %cond.false1474, label %cond.end1477, !dbg !10217

cond.false1474:                                   ; preds = %cond.end1460
  %987 = load i32, i32* @flag_rounding_math, align 4, !dbg !10217
  %tobool1475 = icmp eq i32 %987, 0, !dbg !10217
  %cond1476 = select i1 %tobool1475, i64 46, i64 48, !dbg !10217
  br label %cond.end1477, !dbg !10217

cond.end1477:                                     ; preds = %cond.end1460, %cond.false1474
  %cond1478 = phi i64 [ %cond1476, %cond.false1474 ], [ 45, %cond.end1460 ], !dbg !10217
  %arrayidx1480 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1478, !dbg !10217
  %988 = load %union.tree_node*, %union.tree_node** %arrayidx1480, align 8, !dbg !10217
  %989 = load i32, i32* @linux_uclibc, align 4, !dbg !10217
  %990 = trunc i32 %989 to i8, !dbg !10217
  %991 = and i8 %990, 1, !dbg !10217
  %992 = xor i8 %991, 1, !dbg !10217
  tail call fastcc void @def_builtin_1(i32 149, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.571, i64 0, i64 0), i32 3, %union.tree_node* %984, %union.tree_node* %984, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1471, %union.tree_node* %988, i8 zeroext %992) #8, !dbg !10217
  %993 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10219
  %994 = load i32, i32* @flag_isoc99, align 4, !dbg !10219
  %tobool1485 = icmp eq i32 %994, 0, !dbg !10219
  %conv1488 = zext i1 %tobool1485 to i8, !dbg !10219
  %995 = load i32, i32* @flag_errno_math, align 4, !dbg !10219
  %tobool1489 = icmp eq i32 %995, 0, !dbg !10219
  br i1 %tobool1489, label %cond.false1491, label %cond.end1494, !dbg !10219

cond.false1491:                                   ; preds = %cond.end1477
  %996 = load i32, i32* @flag_rounding_math, align 4, !dbg !10219
  %tobool1492 = icmp eq i32 %996, 0, !dbg !10219
  %cond1493 = select i1 %tobool1492, i64 46, i64 48, !dbg !10219
  br label %cond.end1494, !dbg !10219

cond.end1494:                                     ; preds = %cond.end1477, %cond.false1491
  %cond1495 = phi i64 [ %cond1493, %cond.false1491 ], [ 45, %cond.end1477 ], !dbg !10219
  %arrayidx1497 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1495, !dbg !10219
  %997 = load %union.tree_node*, %union.tree_node** %arrayidx1497, align 8, !dbg !10219
  %998 = load i32, i32* @linux_uclibc, align 4, !dbg !10219
  %999 = trunc i32 %998 to i8, !dbg !10219
  %1000 = and i8 %999, 1, !dbg !10219
  %1001 = xor i8 %1000, 1, !dbg !10219
  tail call fastcc void @def_builtin_1(i32 150, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.572, i64 0, i64 0), i32 3, %union.tree_node* %993, %union.tree_node* %993, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1488, %union.tree_node* %997, i8 zeroext %1001) #8, !dbg !10219
  %1002 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10221
  %1003 = load i32, i32* @flag_isoc99, align 4, !dbg !10221
  %tobool1502 = icmp eq i32 %1003, 0, !dbg !10221
  %conv1505 = zext i1 %tobool1502 to i8, !dbg !10221
  %1004 = load i32, i32* @flag_errno_math, align 4, !dbg !10221
  %tobool1506 = icmp eq i32 %1004, 0, !dbg !10221
  br i1 %tobool1506, label %cond.false1508, label %cond.end1511, !dbg !10221

cond.false1508:                                   ; preds = %cond.end1494
  %1005 = load i32, i32* @flag_rounding_math, align 4, !dbg !10221
  %tobool1509 = icmp eq i32 %1005, 0, !dbg !10221
  %cond1510 = select i1 %tobool1509, i64 46, i64 48, !dbg !10221
  br label %cond.end1511, !dbg !10221

cond.end1511:                                     ; preds = %cond.end1494, %cond.false1508
  %cond1512 = phi i64 [ %cond1510, %cond.false1508 ], [ 45, %cond.end1494 ], !dbg !10221
  %arrayidx1514 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1512, !dbg !10221
  %1006 = load %union.tree_node*, %union.tree_node** %arrayidx1514, align 8, !dbg !10221
  %1007 = load i32, i32* @linux_uclibc, align 4, !dbg !10221
  %1008 = trunc i32 %1007 to i8, !dbg !10221
  %1009 = and i8 %1008, 1, !dbg !10221
  %1010 = xor i8 %1009, 1, !dbg !10221
  tail call fastcc void @def_builtin_1(i32 151, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.573, i64 0, i64 0), i32 3, %union.tree_node* %1002, %union.tree_node* %1002, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1505, %union.tree_node* %1006, i8 zeroext %1010) #8, !dbg !10221
  %1011 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10223
  %1012 = load i32, i32* @flag_isoc99, align 4, !dbg !10223
  %tobool1519 = icmp eq i32 %1012, 0, !dbg !10223
  %conv1522 = zext i1 %tobool1519 to i8, !dbg !10223
  %1013 = load i32, i32* @flag_errno_math, align 4, !dbg !10223
  %tobool1523 = icmp eq i32 %1013, 0, !dbg !10223
  br i1 %tobool1523, label %cond.false1525, label %cond.end1528, !dbg !10223

cond.false1525:                                   ; preds = %cond.end1511
  %1014 = load i32, i32* @flag_rounding_math, align 4, !dbg !10223
  %tobool1526 = icmp eq i32 %1014, 0, !dbg !10223
  %cond1527 = select i1 %tobool1526, i64 46, i64 48, !dbg !10223
  br label %cond.end1528, !dbg !10223

cond.end1528:                                     ; preds = %cond.end1511, %cond.false1525
  %cond1529 = phi i64 [ %cond1527, %cond.false1525 ], [ 45, %cond.end1511 ], !dbg !10223
  %arrayidx1531 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1529, !dbg !10223
  %1015 = load %union.tree_node*, %union.tree_node** %arrayidx1531, align 8, !dbg !10223
  %1016 = load i32, i32* @linux_uclibc, align 4, !dbg !10223
  %1017 = trunc i32 %1016 to i8, !dbg !10223
  %1018 = and i8 %1017, 1, !dbg !10223
  %1019 = xor i8 %1018, 1, !dbg !10223
  tail call fastcc void @def_builtin_1(i32 152, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.574, i64 0, i64 0), i32 3, %union.tree_node* %1011, %union.tree_node* %1011, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1522, %union.tree_node* %1015, i8 zeroext %1019) #8, !dbg !10223
  %1020 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 97), align 8, !dbg !10225
  %1021 = load i32, i32* @flag_isoc99, align 4, !dbg !10225
  %tobool1536 = icmp eq i32 %1021, 0, !dbg !10225
  %conv1539 = zext i1 %tobool1536 to i8, !dbg !10225
  %1022 = load i32, i32* @flag_errno_math, align 4, !dbg !10225
  %tobool1540 = icmp eq i32 %1022, 0, !dbg !10225
  br i1 %tobool1540, label %cond.false1542, label %cond.end1545, !dbg !10225

cond.false1542:                                   ; preds = %cond.end1528
  %1023 = load i32, i32* @flag_rounding_math, align 4, !dbg !10225
  %tobool1543 = icmp eq i32 %1023, 0, !dbg !10225
  %cond1544 = select i1 %tobool1543, i64 46, i64 48, !dbg !10225
  br label %cond.end1545, !dbg !10225

cond.end1545:                                     ; preds = %cond.end1528, %cond.false1542
  %cond1546 = phi i64 [ %cond1544, %cond.false1542 ], [ 45, %cond.end1528 ], !dbg !10225
  %arrayidx1548 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1546, !dbg !10225
  %1024 = load %union.tree_node*, %union.tree_node** %arrayidx1548, align 8, !dbg !10225
  %1025 = load i32, i32* @linux_uclibc, align 4, !dbg !10225
  %1026 = trunc i32 %1025 to i8, !dbg !10225
  %1027 = and i8 %1026, 1, !dbg !10225
  %1028 = xor i8 %1027, 1, !dbg !10225
  tail call fastcc void @def_builtin_1(i32 153, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.575, i64 0, i64 0), i32 3, %union.tree_node* %1020, %union.tree_node* %1020, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1539, %union.tree_node* %1024, i8 zeroext %1028) #8, !dbg !10225
  %1029 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 96), align 16, !dbg !10227
  %1030 = load i32, i32* @flag_isoc99, align 4, !dbg !10227
  %tobool1553 = icmp eq i32 %1030, 0, !dbg !10227
  %conv1556 = zext i1 %tobool1553 to i8, !dbg !10227
  %1031 = load i32, i32* @flag_errno_math, align 4, !dbg !10227
  %tobool1557 = icmp eq i32 %1031, 0, !dbg !10227
  br i1 %tobool1557, label %cond.false1559, label %cond.end1562, !dbg !10227

cond.false1559:                                   ; preds = %cond.end1545
  %1032 = load i32, i32* @flag_rounding_math, align 4, !dbg !10227
  %tobool1560 = icmp eq i32 %1032, 0, !dbg !10227
  %cond1561 = select i1 %tobool1560, i64 46, i64 48, !dbg !10227
  br label %cond.end1562, !dbg !10227

cond.end1562:                                     ; preds = %cond.end1545, %cond.false1559
  %cond1563 = phi i64 [ %cond1561, %cond.false1559 ], [ 45, %cond.end1545 ], !dbg !10227
  %arrayidx1565 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1563, !dbg !10227
  %1033 = load %union.tree_node*, %union.tree_node** %arrayidx1565, align 8, !dbg !10227
  %1034 = load i32, i32* @linux_uclibc, align 4, !dbg !10227
  %1035 = trunc i32 %1034 to i8, !dbg !10227
  %1036 = and i8 %1035, 1, !dbg !10227
  %1037 = xor i8 %1036, 1, !dbg !10227
  tail call fastcc void @def_builtin_1(i32 154, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.576, i64 0, i64 0), i32 3, %union.tree_node* %1029, %union.tree_node* %1029, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1556, %union.tree_node* %1033, i8 zeroext %1037) #8, !dbg !10227
  %1038 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 98), align 16, !dbg !10229
  %1039 = load i32, i32* @flag_isoc99, align 4, !dbg !10229
  %tobool1570 = icmp eq i32 %1039, 0, !dbg !10229
  %conv1573 = zext i1 %tobool1570 to i8, !dbg !10229
  %1040 = load i32, i32* @flag_errno_math, align 4, !dbg !10229
  %tobool1574 = icmp eq i32 %1040, 0, !dbg !10229
  br i1 %tobool1574, label %cond.false1576, label %cond.end1579, !dbg !10229

cond.false1576:                                   ; preds = %cond.end1562
  %1041 = load i32, i32* @flag_rounding_math, align 4, !dbg !10229
  %tobool1577 = icmp eq i32 %1041, 0, !dbg !10229
  %cond1578 = select i1 %tobool1577, i64 46, i64 48, !dbg !10229
  br label %cond.end1579, !dbg !10229

cond.end1579:                                     ; preds = %cond.end1562, %cond.false1576
  %cond1580 = phi i64 [ %cond1578, %cond.false1576 ], [ 45, %cond.end1562 ], !dbg !10229
  %arrayidx1582 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1580, !dbg !10229
  %1042 = load %union.tree_node*, %union.tree_node** %arrayidx1582, align 8, !dbg !10229
  %1043 = load i32, i32* @linux_uclibc, align 4, !dbg !10229
  %1044 = trunc i32 %1043 to i8, !dbg !10229
  %1045 = and i8 %1044, 1, !dbg !10229
  %1046 = xor i8 %1045, 1, !dbg !10229
  tail call fastcc void @def_builtin_1(i32 155, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.577, i64 0, i64 0), i32 3, %union.tree_node* %1038, %union.tree_node* %1038, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1573, %union.tree_node* %1042, i8 zeroext %1046) #8, !dbg !10229
  %1047 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 97), align 8, !dbg !10231
  %1048 = load i32, i32* @flag_isoc99, align 4, !dbg !10231
  %tobool1587 = icmp eq i32 %1048, 0, !dbg !10231
  %conv1590 = zext i1 %tobool1587 to i8, !dbg !10231
  %1049 = load i32, i32* @flag_errno_math, align 4, !dbg !10231
  %tobool1591 = icmp eq i32 %1049, 0, !dbg !10231
  %cond1592 = select i1 %tobool1591, i64 46, i64 45, !dbg !10231
  %arrayidx1594 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1592, !dbg !10231
  %1050 = load %union.tree_node*, %union.tree_node** %arrayidx1594, align 8, !dbg !10231
  %1051 = load i32, i32* @linux_uclibc, align 4, !dbg !10231
  %1052 = trunc i32 %1051 to i8, !dbg !10231
  %1053 = and i8 %1052, 1, !dbg !10231
  %1054 = xor i8 %1053, 1, !dbg !10231
  tail call fastcc void @def_builtin_1(i32 156, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.578, i64 0, i64 0), i32 3, %union.tree_node* %1047, %union.tree_node* %1047, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1590, %union.tree_node* %1050, i8 zeroext %1054) #8, !dbg !10231
  %1055 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 96), align 16, !dbg !10233
  %1056 = load i32, i32* @flag_isoc99, align 4, !dbg !10233
  %tobool1599 = icmp eq i32 %1056, 0, !dbg !10233
  %conv1602 = zext i1 %tobool1599 to i8, !dbg !10233
  %1057 = load i32, i32* @flag_errno_math, align 4, !dbg !10233
  %tobool1603 = icmp eq i32 %1057, 0, !dbg !10233
  %cond1604 = select i1 %tobool1603, i64 46, i64 45, !dbg !10233
  %arrayidx1606 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1604, !dbg !10233
  %1058 = load %union.tree_node*, %union.tree_node** %arrayidx1606, align 8, !dbg !10233
  %1059 = load i32, i32* @linux_uclibc, align 4, !dbg !10233
  %1060 = trunc i32 %1059 to i8, !dbg !10233
  %1061 = and i8 %1060, 1, !dbg !10233
  %1062 = xor i8 %1061, 1, !dbg !10233
  tail call fastcc void @def_builtin_1(i32 157, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.579, i64 0, i64 0), i32 3, %union.tree_node* %1055, %union.tree_node* %1055, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1602, %union.tree_node* %1058, i8 zeroext %1062) #8, !dbg !10233
  %1063 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 98), align 16, !dbg !10235
  %1064 = load i32, i32* @flag_isoc99, align 4, !dbg !10235
  %tobool1611 = icmp eq i32 %1064, 0, !dbg !10235
  %conv1614 = zext i1 %tobool1611 to i8, !dbg !10235
  %1065 = load i32, i32* @flag_errno_math, align 4, !dbg !10235
  %tobool1615 = icmp eq i32 %1065, 0, !dbg !10235
  %cond1616 = select i1 %tobool1615, i64 46, i64 45, !dbg !10235
  %arrayidx1618 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1616, !dbg !10235
  %1066 = load %union.tree_node*, %union.tree_node** %arrayidx1618, align 8, !dbg !10235
  %1067 = load i32, i32* @linux_uclibc, align 4, !dbg !10235
  %1068 = trunc i32 %1067 to i8, !dbg !10235
  %1069 = and i8 %1068, 1, !dbg !10235
  %1070 = xor i8 %1069, 1, !dbg !10235
  tail call fastcc void @def_builtin_1(i32 158, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.580, i64 0, i64 0), i32 3, %union.tree_node* %1063, %union.tree_node* %1063, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1614, %union.tree_node* %1066, i8 zeroext %1070) #8, !dbg !10235
  %1071 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 147), align 8, !dbg !10237
  %1072 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10237
  tail call fastcc void @def_builtin_1(i32 159, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.581, i64 0, i64 0), i32 3, %union.tree_node* %1071, %union.tree_node* %1071, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %1072, i8 zeroext 1) #8, !dbg !10237
  %1073 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 146), align 16, !dbg !10239
  %1074 = load i32, i32* @flag_isoc99, align 4, !dbg !10239
  %tobool1623 = icmp eq i32 %1074, 0, !dbg !10239
  %conv1626 = zext i1 %tobool1623 to i8, !dbg !10239
  %1075 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10239
  %1076 = load i32, i32* @linux_uclibc, align 4, !dbg !10239
  %1077 = trunc i32 %1076 to i8, !dbg !10239
  %1078 = and i8 %1077, 1, !dbg !10239
  %1079 = xor i8 %1078, 1, !dbg !10239
  tail call fastcc void @def_builtin_1(i32 160, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.582, i64 0, i64 0), i32 3, %union.tree_node* %1073, %union.tree_node* %1073, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1626, %union.tree_node* %1075, i8 zeroext %1079) #8, !dbg !10239
  %1080 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 148), align 16, !dbg !10241
  %1081 = load i32, i32* @flag_isoc99, align 4, !dbg !10241
  %tobool1631 = icmp eq i32 %1081, 0, !dbg !10241
  %conv1634 = zext i1 %tobool1631 to i8, !dbg !10241
  %1082 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10241
  %1083 = load i32, i32* @linux_uclibc, align 4, !dbg !10241
  %1084 = trunc i32 %1083 to i8, !dbg !10241
  %1085 = and i8 %1084, 1, !dbg !10241
  %1086 = xor i8 %1085, 1, !dbg !10241
  tail call fastcc void @def_builtin_1(i32 161, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.583, i64 0, i64 0), i32 3, %union.tree_node* %1080, %union.tree_node* %1080, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1634, %union.tree_node* %1082, i8 zeroext %1086) #8, !dbg !10241
  %1087 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 109), align 8, !dbg !10243
  %1088 = load i32, i32* @flag_isoc99, align 4, !dbg !10243
  %tobool1639 = icmp eq i32 %1088, 0, !dbg !10243
  %conv1642 = zext i1 %tobool1639 to i8, !dbg !10243
  %1089 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10243
  %1090 = load i32, i32* @linux_uclibc, align 4, !dbg !10243
  %1091 = trunc i32 %1090 to i8, !dbg !10243
  %1092 = and i8 %1091, 1, !dbg !10243
  %1093 = xor i8 %1092, 1, !dbg !10243
  tail call fastcc void @def_builtin_1(i32 162, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.584, i64 0, i64 0), i32 3, %union.tree_node* %1087, %union.tree_node* %1087, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1642, %union.tree_node* %1089, i8 zeroext %1093) #8, !dbg !10243
  %1094 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 108), align 16, !dbg !10245
  %1095 = load i32, i32* @flag_isoc99, align 4, !dbg !10245
  %tobool1647 = icmp eq i32 %1095, 0, !dbg !10245
  %conv1650 = zext i1 %tobool1647 to i8, !dbg !10245
  %1096 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10245
  %1097 = load i32, i32* @linux_uclibc, align 4, !dbg !10245
  %1098 = trunc i32 %1097 to i8, !dbg !10245
  %1099 = and i8 %1098, 1, !dbg !10245
  %1100 = xor i8 %1099, 1, !dbg !10245
  tail call fastcc void @def_builtin_1(i32 163, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i64 0, i64 0), i32 3, %union.tree_node* %1094, %union.tree_node* %1094, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1650, %union.tree_node* %1096, i8 zeroext %1100) #8, !dbg !10245
  %1101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 110), align 16, !dbg !10247
  %1102 = load i32, i32* @flag_isoc99, align 4, !dbg !10247
  %tobool1655 = icmp eq i32 %1102, 0, !dbg !10247
  %conv1658 = zext i1 %tobool1655 to i8, !dbg !10247
  %1103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10247
  %1104 = load i32, i32* @linux_uclibc, align 4, !dbg !10247
  %1105 = trunc i32 %1104 to i8, !dbg !10247
  %1106 = and i8 %1105, 1, !dbg !10247
  %1107 = xor i8 %1106, 1, !dbg !10247
  tail call fastcc void @def_builtin_1(i32 164, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.586, i64 0, i64 0), i32 3, %union.tree_node* %1101, %union.tree_node* %1101, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1658, %union.tree_node* %1103, i8 zeroext %1107) #8, !dbg !10247
  %1108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 111), align 8, !dbg !10249
  %1109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10249
  %1110 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10249
  tail call fastcc void @def_builtin_1(i32 165, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.587, i64 0, i64 0), i32 3, %union.tree_node* %1108, %union.tree_node* %1109, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1110, i8 zeroext 1) #8, !dbg !10249
  %1111 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 112), align 16, !dbg !10251
  %1112 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10251
  %1113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10251
  tail call fastcc void @def_builtin_1(i32 166, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.588, i64 0, i64 0), i32 3, %union.tree_node* %1111, %union.tree_node* %1112, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1113, i8 zeroext 1) #8, !dbg !10251
  %1114 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 113), align 8, !dbg !10253
  %1115 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10253
  %1116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10253
  tail call fastcc void @def_builtin_1(i32 167, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.589, i64 0, i64 0), i32 3, %union.tree_node* %1114, %union.tree_node* %1115, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1116, i8 zeroext 1) #8, !dbg !10253
  %1117 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 109), align 8, !dbg !10255
  %1118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10255
  %1119 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10255
  tail call fastcc void @def_builtin_1(i32 168, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.590, i64 0, i64 0), i32 3, %union.tree_node* %1117, %union.tree_node* %1118, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1119, i8 zeroext 1) #8, !dbg !10255
  %1120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 108), align 16, !dbg !10257
  %1121 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10257
  %1122 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10257
  tail call fastcc void @def_builtin_1(i32 169, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.591, i64 0, i64 0), i32 3, %union.tree_node* %1120, %union.tree_node* %1121, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1122, i8 zeroext 1) #8, !dbg !10257
  %1123 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 110), align 16, !dbg !10259
  %1124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10259
  %1125 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10259
  tail call fastcc void @def_builtin_1(i32 170, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.592, i64 0, i64 0), i32 3, %union.tree_node* %1123, %union.tree_node* %1124, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1125, i8 zeroext 1) #8, !dbg !10259
  %1126 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10261
  %1127 = load i32, i32* @flag_isoc99, align 4, !dbg !10261
  %tobool1663 = icmp eq i32 %1127, 0, !dbg !10261
  %conv1666 = zext i1 %tobool1663 to i8, !dbg !10261
  %1128 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10261
  %1129 = load i32, i32* @linux_uclibc, align 4, !dbg !10261
  %1130 = trunc i32 %1129 to i8, !dbg !10261
  %1131 = and i8 %1130, 1, !dbg !10261
  %1132 = xor i8 %1131, 1, !dbg !10261
  tail call fastcc void @def_builtin_1(i32 171, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.593, i64 0, i64 0), i32 3, %union.tree_node* %1126, %union.tree_node* %1126, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1666, %union.tree_node* %1128, i8 zeroext %1132) #8, !dbg !10261
  %1133 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10263
  %1134 = load i32, i32* @flag_isoc99, align 4, !dbg !10263
  %tobool1671 = icmp eq i32 %1134, 0, !dbg !10263
  %conv1674 = zext i1 %tobool1671 to i8, !dbg !10263
  %1135 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10263
  %1136 = load i32, i32* @linux_uclibc, align 4, !dbg !10263
  %1137 = trunc i32 %1136 to i8, !dbg !10263
  %1138 = and i8 %1137, 1, !dbg !10263
  %1139 = xor i8 %1138, 1, !dbg !10263
  tail call fastcc void @def_builtin_1(i32 172, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.594, i64 0, i64 0), i32 3, %union.tree_node* %1133, %union.tree_node* %1133, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1674, %union.tree_node* %1135, i8 zeroext %1139) #8, !dbg !10263
  %1140 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10265
  %1141 = load i32, i32* @flag_isoc99, align 4, !dbg !10265
  %tobool1679 = icmp eq i32 %1141, 0, !dbg !10265
  %conv1682 = zext i1 %tobool1679 to i8, !dbg !10265
  %1142 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10265
  %1143 = load i32, i32* @linux_uclibc, align 4, !dbg !10265
  %1144 = trunc i32 %1143 to i8, !dbg !10265
  %1145 = and i8 %1144, 1, !dbg !10265
  %1146 = xor i8 %1145, 1, !dbg !10265
  tail call fastcc void @def_builtin_1(i32 173, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.595, i64 0, i64 0), i32 3, %union.tree_node* %1140, %union.tree_node* %1140, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1682, %union.tree_node* %1142, i8 zeroext %1146) #8, !dbg !10265
  %1147 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10267
  %1148 = load i32, i32* @flag_isoc99, align 4, !dbg !10267
  %tobool1687 = icmp eq i32 %1148, 0, !dbg !10267
  %conv1690 = zext i1 %tobool1687 to i8, !dbg !10267
  %1149 = load i32, i32* @flag_errno_math, align 4, !dbg !10267
  %tobool1691 = icmp eq i32 %1149, 0, !dbg !10267
  br i1 %tobool1691, label %cond.false1693, label %cond.end1696, !dbg !10267

cond.false1693:                                   ; preds = %cond.end1579
  %1150 = load i32, i32* @flag_rounding_math, align 4, !dbg !10267
  %tobool1694 = icmp eq i32 %1150, 0, !dbg !10267
  %cond1695 = select i1 %tobool1694, i64 46, i64 48, !dbg !10267
  br label %cond.end1696, !dbg !10267

cond.end1696:                                     ; preds = %cond.end1579, %cond.false1693
  %cond1697 = phi i64 [ %cond1695, %cond.false1693 ], [ 45, %cond.end1579 ], !dbg !10267
  %arrayidx1699 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1697, !dbg !10267
  %1151 = load %union.tree_node*, %union.tree_node** %arrayidx1699, align 8, !dbg !10267
  %1152 = load i32, i32* @linux_uclibc, align 4, !dbg !10267
  %1153 = trunc i32 %1152 to i8, !dbg !10267
  %1154 = and i8 %1153, 1, !dbg !10267
  %1155 = xor i8 %1154, 1, !dbg !10267
  tail call fastcc void @def_builtin_1(i32 174, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.596, i64 0, i64 0), i32 3, %union.tree_node* %1147, %union.tree_node* %1147, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1690, %union.tree_node* %1151, i8 zeroext %1155) #8, !dbg !10267
  %1156 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10269
  %1157 = load i32, i32* @flag_isoc99, align 4, !dbg !10269
  %tobool1704 = icmp eq i32 %1157, 0, !dbg !10269
  %conv1707 = zext i1 %tobool1704 to i8, !dbg !10269
  %1158 = load i32, i32* @flag_errno_math, align 4, !dbg !10269
  %tobool1708 = icmp eq i32 %1158, 0, !dbg !10269
  br i1 %tobool1708, label %cond.false1710, label %cond.end1713, !dbg !10269

cond.false1710:                                   ; preds = %cond.end1696
  %1159 = load i32, i32* @flag_rounding_math, align 4, !dbg !10269
  %tobool1711 = icmp eq i32 %1159, 0, !dbg !10269
  %cond1712 = select i1 %tobool1711, i64 46, i64 48, !dbg !10269
  br label %cond.end1713, !dbg !10269

cond.end1713:                                     ; preds = %cond.end1696, %cond.false1710
  %cond1714 = phi i64 [ %cond1712, %cond.false1710 ], [ 45, %cond.end1696 ], !dbg !10269
  %arrayidx1716 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1714, !dbg !10269
  %1160 = load %union.tree_node*, %union.tree_node** %arrayidx1716, align 8, !dbg !10269
  %1161 = load i32, i32* @linux_uclibc, align 4, !dbg !10269
  %1162 = trunc i32 %1161 to i8, !dbg !10269
  %1163 = and i8 %1162, 1, !dbg !10269
  %1164 = xor i8 %1163, 1, !dbg !10269
  tail call fastcc void @def_builtin_1(i32 175, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.597, i64 0, i64 0), i32 3, %union.tree_node* %1156, %union.tree_node* %1156, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1707, %union.tree_node* %1160, i8 zeroext %1164) #8, !dbg !10269
  %1165 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10271
  %1166 = load i32, i32* @flag_isoc99, align 4, !dbg !10271
  %tobool1721 = icmp eq i32 %1166, 0, !dbg !10271
  %conv1724 = zext i1 %tobool1721 to i8, !dbg !10271
  %1167 = load i32, i32* @flag_errno_math, align 4, !dbg !10271
  %tobool1725 = icmp eq i32 %1167, 0, !dbg !10271
  br i1 %tobool1725, label %cond.false1727, label %cond.end1730, !dbg !10271

cond.false1727:                                   ; preds = %cond.end1713
  %1168 = load i32, i32* @flag_rounding_math, align 4, !dbg !10271
  %tobool1728 = icmp eq i32 %1168, 0, !dbg !10271
  %cond1729 = select i1 %tobool1728, i64 46, i64 48, !dbg !10271
  br label %cond.end1730, !dbg !10271

cond.end1730:                                     ; preds = %cond.end1713, %cond.false1727
  %cond1731 = phi i64 [ %cond1729, %cond.false1727 ], [ 45, %cond.end1713 ], !dbg !10271
  %arrayidx1733 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1731, !dbg !10271
  %1169 = load %union.tree_node*, %union.tree_node** %arrayidx1733, align 8, !dbg !10271
  %1170 = load i32, i32* @linux_uclibc, align 4, !dbg !10271
  %1171 = trunc i32 %1170 to i8, !dbg !10271
  %1172 = and i8 %1171, 1, !dbg !10271
  %1173 = xor i8 %1172, 1, !dbg !10271
  tail call fastcc void @def_builtin_1(i32 176, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.598, i64 0, i64 0), i32 3, %union.tree_node* %1165, %union.tree_node* %1165, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1724, %union.tree_node* %1169, i8 zeroext %1173) #8, !dbg !10271
  %1174 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 150), align 16, !dbg !10273
  %1175 = load i32, i32* @flag_isoc99, align 4, !dbg !10273
  %tobool1738 = icmp eq i32 %1175, 0, !dbg !10273
  %conv1741 = zext i1 %tobool1738 to i8, !dbg !10273
  %1176 = load i32, i32* @flag_errno_math, align 4, !dbg !10273
  %tobool1742 = icmp eq i32 %1176, 0, !dbg !10273
  br i1 %tobool1742, label %cond.false1744, label %cond.end1747, !dbg !10273

cond.false1744:                                   ; preds = %cond.end1730
  %1177 = load i32, i32* @flag_rounding_math, align 4, !dbg !10273
  %tobool1745 = icmp eq i32 %1177, 0, !dbg !10273
  %cond1746 = select i1 %tobool1745, i64 46, i64 48, !dbg !10273
  br label %cond.end1747, !dbg !10273

cond.end1747:                                     ; preds = %cond.end1730, %cond.false1744
  %cond1748 = phi i64 [ %cond1746, %cond.false1744 ], [ 45, %cond.end1730 ], !dbg !10273
  %arrayidx1750 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1748, !dbg !10273
  %1178 = load %union.tree_node*, %union.tree_node** %arrayidx1750, align 8, !dbg !10273
  %1179 = load i32, i32* @linux_uclibc, align 4, !dbg !10273
  %1180 = trunc i32 %1179 to i8, !dbg !10273
  %1181 = and i8 %1180, 1, !dbg !10273
  %1182 = xor i8 %1181, 1, !dbg !10273
  tail call fastcc void @def_builtin_1(i32 177, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.599, i64 0, i64 0), i32 3, %union.tree_node* %1174, %union.tree_node* %1174, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1741, %union.tree_node* %1178, i8 zeroext %1182) #8, !dbg !10273
  %1183 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 149), align 8, !dbg !10275
  %1184 = load i32, i32* @flag_isoc99, align 4, !dbg !10275
  %tobool1755 = icmp eq i32 %1184, 0, !dbg !10275
  %conv1758 = zext i1 %tobool1755 to i8, !dbg !10275
  %1185 = load i32, i32* @flag_errno_math, align 4, !dbg !10275
  %tobool1759 = icmp eq i32 %1185, 0, !dbg !10275
  br i1 %tobool1759, label %cond.false1761, label %cond.end1764, !dbg !10275

cond.false1761:                                   ; preds = %cond.end1747
  %1186 = load i32, i32* @flag_rounding_math, align 4, !dbg !10275
  %tobool1762 = icmp eq i32 %1186, 0, !dbg !10275
  %cond1763 = select i1 %tobool1762, i64 46, i64 48, !dbg !10275
  br label %cond.end1764, !dbg !10275

cond.end1764:                                     ; preds = %cond.end1747, %cond.false1761
  %cond1765 = phi i64 [ %cond1763, %cond.false1761 ], [ 45, %cond.end1747 ], !dbg !10275
  %arrayidx1767 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1765, !dbg !10275
  %1187 = load %union.tree_node*, %union.tree_node** %arrayidx1767, align 8, !dbg !10275
  %1188 = load i32, i32* @linux_uclibc, align 4, !dbg !10275
  %1189 = trunc i32 %1188 to i8, !dbg !10275
  %1190 = and i8 %1189, 1, !dbg !10275
  %1191 = xor i8 %1190, 1, !dbg !10275
  tail call fastcc void @def_builtin_1(i32 178, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.600, i64 0, i64 0), i32 3, %union.tree_node* %1183, %union.tree_node* %1183, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1758, %union.tree_node* %1187, i8 zeroext %1191) #8, !dbg !10275
  %1192 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10277
  %1193 = load i32, i32* @flag_isoc99, align 4, !dbg !10277
  %tobool1772 = icmp eq i32 %1193, 0, !dbg !10277
  %conv1775 = zext i1 %tobool1772 to i8, !dbg !10277
  %1194 = load i32, i32* @flag_errno_math, align 4, !dbg !10277
  %tobool1776 = icmp eq i32 %1194, 0, !dbg !10277
  br i1 %tobool1776, label %cond.false1778, label %cond.end1781, !dbg !10277

cond.false1778:                                   ; preds = %cond.end1764
  %1195 = load i32, i32* @flag_rounding_math, align 4, !dbg !10277
  %tobool1779 = icmp eq i32 %1195, 0, !dbg !10277
  %cond1780 = select i1 %tobool1779, i64 46, i64 48, !dbg !10277
  br label %cond.end1781, !dbg !10277

cond.end1781:                                     ; preds = %cond.end1764, %cond.false1778
  %cond1782 = phi i64 [ %cond1780, %cond.false1778 ], [ 45, %cond.end1764 ], !dbg !10277
  %arrayidx1784 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1782, !dbg !10277
  %1196 = load %union.tree_node*, %union.tree_node** %arrayidx1784, align 8, !dbg !10277
  %1197 = load i32, i32* @linux_uclibc, align 4, !dbg !10277
  %1198 = trunc i32 %1197 to i8, !dbg !10277
  %1199 = and i8 %1198, 1, !dbg !10277
  %1200 = xor i8 %1199, 1, !dbg !10277
  tail call fastcc void @def_builtin_1(i32 179, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.601, i64 0, i64 0), i32 3, %union.tree_node* %1192, %union.tree_node* %1192, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1775, %union.tree_node* %1196, i8 zeroext %1200) #8, !dbg !10277
  %1201 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10279
  %1202 = load i32, i32* @flag_errno_math, align 4, !dbg !10279
  %tobool1789 = icmp eq i32 %1202, 0, !dbg !10279
  br i1 %tobool1789, label %cond.false1791, label %cond.end1794, !dbg !10279

cond.false1791:                                   ; preds = %cond.end1781
  %1203 = load i32, i32* @flag_rounding_math, align 4, !dbg !10279
  %tobool1792 = icmp eq i32 %1203, 0, !dbg !10279
  %cond1793 = select i1 %tobool1792, i64 46, i64 48, !dbg !10279
  br label %cond.end1794, !dbg !10279

cond.end1794:                                     ; preds = %cond.end1781, %cond.false1791
  %cond1795 = phi i64 [ %cond1793, %cond.false1791 ], [ 45, %cond.end1781 ], !dbg !10279
  %arrayidx1797 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1795, !dbg !10279
  %1204 = load %union.tree_node*, %union.tree_node** %arrayidx1797, align 8, !dbg !10279
  tail call fastcc void @def_builtin_1(i32 180, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.602, i64 0, i64 0), i32 3, %union.tree_node* %1201, %union.tree_node* %1201, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %1204, i8 zeroext 1) #8, !dbg !10279
  %1205 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10281
  %1206 = load i32, i32* @flag_errno_math, align 4, !dbg !10281
  %tobool1798 = icmp eq i32 %1206, 0, !dbg !10281
  br i1 %tobool1798, label %cond.false1800, label %cond.end1803, !dbg !10281

cond.false1800:                                   ; preds = %cond.end1794
  %1207 = load i32, i32* @flag_rounding_math, align 4, !dbg !10281
  %tobool1801 = icmp eq i32 %1207, 0, !dbg !10281
  %cond1802 = select i1 %tobool1801, i64 46, i64 48, !dbg !10281
  br label %cond.end1803, !dbg !10281

cond.end1803:                                     ; preds = %cond.end1794, %cond.false1800
  %cond1804 = phi i64 [ %cond1802, %cond.false1800 ], [ 45, %cond.end1794 ], !dbg !10281
  %arrayidx1806 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1804, !dbg !10281
  %1208 = load %union.tree_node*, %union.tree_node** %arrayidx1806, align 8, !dbg !10281
  tail call fastcc void @def_builtin_1(i32 181, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.603, i64 0, i64 0), i32 3, %union.tree_node* %1205, %union.tree_node* %1205, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1208, i8 zeroext 0) #8, !dbg !10281
  %1209 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10283
  %1210 = load i32, i32* @flag_errno_math, align 4, !dbg !10283
  %tobool1807 = icmp eq i32 %1210, 0, !dbg !10283
  br i1 %tobool1807, label %cond.false1809, label %cond.end1812, !dbg !10283

cond.false1809:                                   ; preds = %cond.end1803
  %1211 = load i32, i32* @flag_rounding_math, align 4, !dbg !10283
  %tobool1810 = icmp eq i32 %1211, 0, !dbg !10283
  %cond1811 = select i1 %tobool1810, i64 46, i64 48, !dbg !10283
  br label %cond.end1812, !dbg !10283

cond.end1812:                                     ; preds = %cond.end1803, %cond.false1809
  %cond1813 = phi i64 [ %cond1811, %cond.false1809 ], [ 45, %cond.end1803 ], !dbg !10283
  %arrayidx1815 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1813, !dbg !10283
  %1212 = load %union.tree_node*, %union.tree_node** %arrayidx1815, align 8, !dbg !10283
  tail call fastcc void @def_builtin_1(i32 182, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.604, i64 0, i64 0), i32 3, %union.tree_node* %1209, %union.tree_node* %1209, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1212, i8 zeroext 0) #8, !dbg !10283
  %1213 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10285
  %1214 = load i32, i32* @flag_errno_math, align 4, !dbg !10285
  %tobool1816 = icmp eq i32 %1214, 0, !dbg !10285
  br i1 %tobool1816, label %cond.false1818, label %cond.end1821, !dbg !10285

cond.false1818:                                   ; preds = %cond.end1812
  %1215 = load i32, i32* @flag_rounding_math, align 4, !dbg !10285
  %tobool1819 = icmp eq i32 %1215, 0, !dbg !10285
  %cond1820 = select i1 %tobool1819, i64 46, i64 48, !dbg !10285
  br label %cond.end1821, !dbg !10285

cond.end1821:                                     ; preds = %cond.end1812, %cond.false1818
  %cond1822 = phi i64 [ %cond1820, %cond.false1818 ], [ 45, %cond.end1812 ], !dbg !10285
  %arrayidx1824 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1822, !dbg !10285
  %1216 = load %union.tree_node*, %union.tree_node** %arrayidx1824, align 8, !dbg !10285
  tail call fastcc void @def_builtin_1(i32 183, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.605, i64 0, i64 0), i32 3, %union.tree_node* %1213, %union.tree_node* %1213, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1216, i8 zeroext 0) #8, !dbg !10285
  %1217 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10287
  %1218 = load i32, i32* @flag_isoc99, align 4, !dbg !10287
  %tobool1825 = icmp eq i32 %1218, 0, !dbg !10287
  %conv1828 = zext i1 %tobool1825 to i8, !dbg !10287
  %1219 = load i32, i32* @flag_errno_math, align 4, !dbg !10287
  %tobool1829 = icmp eq i32 %1219, 0, !dbg !10287
  br i1 %tobool1829, label %cond.false1831, label %cond.end1834, !dbg !10287

cond.false1831:                                   ; preds = %cond.end1821
  %1220 = load i32, i32* @flag_rounding_math, align 4, !dbg !10287
  %tobool1832 = icmp eq i32 %1220, 0, !dbg !10287
  %cond1833 = select i1 %tobool1832, i64 46, i64 48, !dbg !10287
  br label %cond.end1834, !dbg !10287

cond.end1834:                                     ; preds = %cond.end1821, %cond.false1831
  %cond1835 = phi i64 [ %cond1833, %cond.false1831 ], [ 45, %cond.end1821 ], !dbg !10287
  %arrayidx1837 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1835, !dbg !10287
  %1221 = load %union.tree_node*, %union.tree_node** %arrayidx1837, align 8, !dbg !10287
  %1222 = load i32, i32* @linux_uclibc, align 4, !dbg !10287
  %1223 = trunc i32 %1222 to i8, !dbg !10287
  %1224 = and i8 %1223, 1, !dbg !10287
  %1225 = xor i8 %1224, 1, !dbg !10287
  tail call fastcc void @def_builtin_1(i32 184, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.606, i64 0, i64 0), i32 3, %union.tree_node* %1217, %union.tree_node* %1217, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1828, %union.tree_node* %1221, i8 zeroext %1225) #8, !dbg !10287
  %1226 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 152), align 16, !dbg !10289
  %1227 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10289
  %1228 = load i32, i32* @flag_rounding_math, align 4, !dbg !10289
  %tobool1842 = icmp eq i32 %1228, 0, !dbg !10289
  %cond1843 = select i1 %tobool1842, i64 46, i64 48, !dbg !10289
  %arrayidx1845 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1843, !dbg !10289
  %1229 = load %union.tree_node*, %union.tree_node** %arrayidx1845, align 16, !dbg !10289
  tail call fastcc void @def_builtin_1(i32 185, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.607, i64 0, i64 0), i32 3, %union.tree_node* %1226, %union.tree_node* %1227, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1229, i8 zeroext 1) #8, !dbg !10289
  %1230 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 151), align 8, !dbg !10291
  %1231 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10291
  %1232 = load i32, i32* @flag_rounding_math, align 4, !dbg !10291
  %tobool1846 = icmp eq i32 %1232, 0, !dbg !10291
  %cond1847 = select i1 %tobool1846, i64 46, i64 48, !dbg !10291
  %arrayidx1849 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1847, !dbg !10291
  %1233 = load %union.tree_node*, %union.tree_node** %arrayidx1849, align 16, !dbg !10291
  tail call fastcc void @def_builtin_1(i32 186, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.608, i64 0, i64 0), i32 3, %union.tree_node* %1230, %union.tree_node* %1231, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1233, i8 zeroext 1) #8, !dbg !10291
  %1234 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 153), align 8, !dbg !10293
  %1235 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10293
  %1236 = load i32, i32* @flag_rounding_math, align 4, !dbg !10293
  %tobool1850 = icmp eq i32 %1236, 0, !dbg !10293
  %cond1851 = select i1 %tobool1850, i64 46, i64 48, !dbg !10293
  %arrayidx1853 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1851, !dbg !10293
  %1237 = load %union.tree_node*, %union.tree_node** %arrayidx1853, align 16, !dbg !10293
  tail call fastcc void @def_builtin_1(i32 187, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.609, i64 0, i64 0), i32 3, %union.tree_node* %1234, %union.tree_node* %1235, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1237, i8 zeroext 1) #8, !dbg !10293
  %1238 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10295
  %1239 = load i32, i32* @flag_isoc99, align 4, !dbg !10295
  %tobool1854 = icmp eq i32 %1239, 0, !dbg !10295
  %conv1857 = zext i1 %tobool1854 to i8, !dbg !10295
  %1240 = load i32, i32* @flag_errno_math, align 4, !dbg !10295
  %tobool1858 = icmp eq i32 %1240, 0, !dbg !10295
  br i1 %tobool1858, label %cond.false1860, label %cond.end1863, !dbg !10295

cond.false1860:                                   ; preds = %cond.end1834
  %1241 = load i32, i32* @flag_rounding_math, align 4, !dbg !10295
  %tobool1861 = icmp eq i32 %1241, 0, !dbg !10295
  %cond1862 = select i1 %tobool1861, i64 46, i64 48, !dbg !10295
  br label %cond.end1863, !dbg !10295

cond.end1863:                                     ; preds = %cond.end1834, %cond.false1860
  %cond1864 = phi i64 [ %cond1862, %cond.false1860 ], [ 45, %cond.end1834 ], !dbg !10295
  %arrayidx1866 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1864, !dbg !10295
  %1242 = load %union.tree_node*, %union.tree_node** %arrayidx1866, align 8, !dbg !10295
  %1243 = load i32, i32* @linux_uclibc, align 4, !dbg !10295
  %1244 = trunc i32 %1243 to i8, !dbg !10295
  %1245 = and i8 %1244, 1, !dbg !10295
  %1246 = xor i8 %1245, 1, !dbg !10295
  tail call fastcc void @def_builtin_1(i32 188, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.610, i64 0, i64 0), i32 3, %union.tree_node* %1238, %union.tree_node* %1238, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1857, %union.tree_node* %1242, i8 zeroext %1246) #8, !dbg !10295
  %1247 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10297
  %1248 = load i32, i32* @flag_isoc99, align 4, !dbg !10297
  %tobool1871 = icmp eq i32 %1248, 0, !dbg !10297
  %conv1874 = zext i1 %tobool1871 to i8, !dbg !10297
  %1249 = load i32, i32* @flag_errno_math, align 4, !dbg !10297
  %tobool1875 = icmp eq i32 %1249, 0, !dbg !10297
  br i1 %tobool1875, label %cond.false1877, label %cond.end1880, !dbg !10297

cond.false1877:                                   ; preds = %cond.end1863
  %1250 = load i32, i32* @flag_rounding_math, align 4, !dbg !10297
  %tobool1878 = icmp eq i32 %1250, 0, !dbg !10297
  %cond1879 = select i1 %tobool1878, i64 46, i64 48, !dbg !10297
  br label %cond.end1880, !dbg !10297

cond.end1880:                                     ; preds = %cond.end1863, %cond.false1877
  %cond1881 = phi i64 [ %cond1879, %cond.false1877 ], [ 45, %cond.end1863 ], !dbg !10297
  %arrayidx1883 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1881, !dbg !10297
  %1251 = load %union.tree_node*, %union.tree_node** %arrayidx1883, align 8, !dbg !10297
  %1252 = load i32, i32* @linux_uclibc, align 4, !dbg !10297
  %1253 = trunc i32 %1252 to i8, !dbg !10297
  %1254 = and i8 %1253, 1, !dbg !10297
  %1255 = xor i8 %1254, 1, !dbg !10297
  tail call fastcc void @def_builtin_1(i32 189, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.611, i64 0, i64 0), i32 3, %union.tree_node* %1247, %union.tree_node* %1247, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1874, %union.tree_node* %1251, i8 zeroext %1255) #8, !dbg !10297
  %1256 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10299
  %1257 = load i32, i32* @flag_isoc99, align 4, !dbg !10299
  %tobool1888 = icmp eq i32 %1257, 0, !dbg !10299
  %conv1891 = zext i1 %tobool1888 to i8, !dbg !10299
  %1258 = load i32, i32* @flag_errno_math, align 4, !dbg !10299
  %tobool1892 = icmp eq i32 %1258, 0, !dbg !10299
  br i1 %tobool1892, label %cond.false1894, label %cond.end1897, !dbg !10299

cond.false1894:                                   ; preds = %cond.end1880
  %1259 = load i32, i32* @flag_rounding_math, align 4, !dbg !10299
  %tobool1895 = icmp eq i32 %1259, 0, !dbg !10299
  %cond1896 = select i1 %tobool1895, i64 46, i64 48, !dbg !10299
  br label %cond.end1897, !dbg !10299

cond.end1897:                                     ; preds = %cond.end1880, %cond.false1894
  %cond1898 = phi i64 [ %cond1896, %cond.false1894 ], [ 45, %cond.end1880 ], !dbg !10299
  %arrayidx1900 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1898, !dbg !10299
  %1260 = load %union.tree_node*, %union.tree_node** %arrayidx1900, align 8, !dbg !10299
  %1261 = load i32, i32* @linux_uclibc, align 4, !dbg !10299
  %1262 = trunc i32 %1261 to i8, !dbg !10299
  %1263 = and i8 %1262, 1, !dbg !10299
  %1264 = xor i8 %1263, 1, !dbg !10299
  tail call fastcc void @def_builtin_1(i32 190, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.612, i64 0, i64 0), i32 3, %union.tree_node* %1256, %union.tree_node* %1256, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1891, %union.tree_node* %1260, i8 zeroext %1264) #8, !dbg !10299
  %1265 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10301
  %1266 = load i32, i32* @flag_isoc99, align 4, !dbg !10301
  %tobool1905 = icmp eq i32 %1266, 0, !dbg !10301
  %conv1908 = zext i1 %tobool1905 to i8, !dbg !10301
  %1267 = load i32, i32* @flag_errno_math, align 4, !dbg !10301
  %tobool1909 = icmp eq i32 %1267, 0, !dbg !10301
  br i1 %tobool1909, label %cond.false1911, label %cond.end1914, !dbg !10301

cond.false1911:                                   ; preds = %cond.end1897
  %1268 = load i32, i32* @flag_rounding_math, align 4, !dbg !10301
  %tobool1912 = icmp eq i32 %1268, 0, !dbg !10301
  %cond1913 = select i1 %tobool1912, i64 46, i64 48, !dbg !10301
  br label %cond.end1914, !dbg !10301

cond.end1914:                                     ; preds = %cond.end1897, %cond.false1911
  %cond1915 = phi i64 [ %cond1913, %cond.false1911 ], [ 45, %cond.end1897 ], !dbg !10301
  %arrayidx1917 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1915, !dbg !10301
  %1269 = load %union.tree_node*, %union.tree_node** %arrayidx1917, align 8, !dbg !10301
  %1270 = load i32, i32* @linux_uclibc, align 4, !dbg !10301
  %1271 = trunc i32 %1270 to i8, !dbg !10301
  %1272 = and i8 %1271, 1, !dbg !10301
  %1273 = xor i8 %1272, 1, !dbg !10301
  tail call fastcc void @def_builtin_1(i32 191, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.613, i64 0, i64 0), i32 3, %union.tree_node* %1265, %union.tree_node* %1265, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1908, %union.tree_node* %1269, i8 zeroext %1273) #8, !dbg !10301
  %1274 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 195), align 8, !dbg !10303
  %1275 = load i32, i32* @flag_isoc99, align 4, !dbg !10303
  %tobool1922 = icmp eq i32 %1275, 0, !dbg !10303
  %conv1925 = zext i1 %tobool1922 to i8, !dbg !10303
  %1276 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10303
  %1277 = load i32, i32* @linux_uclibc, align 4, !dbg !10303
  %1278 = trunc i32 %1277 to i8, !dbg !10303
  %1279 = and i8 %1278, 1, !dbg !10303
  %1280 = xor i8 %1279, 1, !dbg !10303
  tail call fastcc void @def_builtin_1(i32 192, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.614, i64 0, i64 0), i32 3, %union.tree_node* %1274, %union.tree_node* %1274, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1925, %union.tree_node* %1276, i8 zeroext %1280) #8, !dbg !10303
  %1281 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 194), align 16, !dbg !10305
  %1282 = load i32, i32* @flag_isoc99, align 4, !dbg !10305
  %tobool1930 = icmp eq i32 %1282, 0, !dbg !10305
  %conv1933 = zext i1 %tobool1930 to i8, !dbg !10305
  %1283 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10305
  %1284 = load i32, i32* @linux_uclibc, align 4, !dbg !10305
  %1285 = trunc i32 %1284 to i8, !dbg !10305
  %1286 = and i8 %1285, 1, !dbg !10305
  %1287 = xor i8 %1286, 1, !dbg !10305
  tail call fastcc void @def_builtin_1(i32 193, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.615, i64 0, i64 0), i32 3, %union.tree_node* %1281, %union.tree_node* %1281, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1933, %union.tree_node* %1283, i8 zeroext %1287) #8, !dbg !10305
  %1288 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 196), align 16, !dbg !10307
  %1289 = load i32, i32* @flag_isoc99, align 4, !dbg !10307
  %tobool1938 = icmp eq i32 %1289, 0, !dbg !10307
  %conv1941 = zext i1 %tobool1938 to i8, !dbg !10307
  %1290 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10307
  %1291 = load i32, i32* @linux_uclibc, align 4, !dbg !10307
  %1292 = trunc i32 %1291 to i8, !dbg !10307
  %1293 = and i8 %1292, 1, !dbg !10307
  %1294 = xor i8 %1293, 1, !dbg !10307
  tail call fastcc void @def_builtin_1(i32 194, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.616, i64 0, i64 0), i32 3, %union.tree_node* %1288, %union.tree_node* %1288, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1941, %union.tree_node* %1290, i8 zeroext %1294) #8, !dbg !10307
  %1295 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10309
  %1296 = load i32, i32* @flag_isoc99, align 4, !dbg !10309
  %tobool1946 = icmp eq i32 %1296, 0, !dbg !10309
  %conv1949 = zext i1 %tobool1946 to i8, !dbg !10309
  %1297 = load i32, i32* @flag_errno_math, align 4, !dbg !10309
  %tobool1950 = icmp eq i32 %1297, 0, !dbg !10309
  br i1 %tobool1950, label %cond.false1952, label %cond.end1955, !dbg !10309

cond.false1952:                                   ; preds = %cond.end1914
  %1298 = load i32, i32* @flag_rounding_math, align 4, !dbg !10309
  %tobool1953 = icmp eq i32 %1298, 0, !dbg !10309
  %cond1954 = select i1 %tobool1953, i64 46, i64 48, !dbg !10309
  br label %cond.end1955, !dbg !10309

cond.end1955:                                     ; preds = %cond.end1914, %cond.false1952
  %cond1956 = phi i64 [ %cond1954, %cond.false1952 ], [ 45, %cond.end1914 ], !dbg !10309
  %arrayidx1958 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1956, !dbg !10309
  %1299 = load %union.tree_node*, %union.tree_node** %arrayidx1958, align 8, !dbg !10309
  %1300 = load i32, i32* @linux_uclibc, align 4, !dbg !10309
  %1301 = trunc i32 %1300 to i8, !dbg !10309
  %1302 = and i8 %1301, 1, !dbg !10309
  %1303 = xor i8 %1302, 1, !dbg !10309
  tail call fastcc void @def_builtin_1(i32 195, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.617, i64 0, i64 0), i32 3, %union.tree_node* %1295, %union.tree_node* %1295, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1949, %union.tree_node* %1299, i8 zeroext %1303) #8, !dbg !10309
  %1304 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10311
  %1305 = load i32, i32* @flag_isoc99, align 4, !dbg !10311
  %tobool1963 = icmp eq i32 %1305, 0, !dbg !10311
  %conv1966 = zext i1 %tobool1963 to i8, !dbg !10311
  %1306 = load i32, i32* @flag_errno_math, align 4, !dbg !10311
  %tobool1967 = icmp eq i32 %1306, 0, !dbg !10311
  br i1 %tobool1967, label %cond.false1969, label %cond.end1972, !dbg !10311

cond.false1969:                                   ; preds = %cond.end1955
  %1307 = load i32, i32* @flag_rounding_math, align 4, !dbg !10311
  %tobool1970 = icmp eq i32 %1307, 0, !dbg !10311
  %cond1971 = select i1 %tobool1970, i64 46, i64 48, !dbg !10311
  br label %cond.end1972, !dbg !10311

cond.end1972:                                     ; preds = %cond.end1955, %cond.false1969
  %cond1973 = phi i64 [ %cond1971, %cond.false1969 ], [ 45, %cond.end1955 ], !dbg !10311
  %arrayidx1975 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1973, !dbg !10311
  %1308 = load %union.tree_node*, %union.tree_node** %arrayidx1975, align 8, !dbg !10311
  %1309 = load i32, i32* @linux_uclibc, align 4, !dbg !10311
  %1310 = trunc i32 %1309 to i8, !dbg !10311
  %1311 = and i8 %1310, 1, !dbg !10311
  %1312 = xor i8 %1311, 1, !dbg !10311
  tail call fastcc void @def_builtin_1(i32 196, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.618, i64 0, i64 0), i32 3, %union.tree_node* %1304, %union.tree_node* %1304, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1966, %union.tree_node* %1308, i8 zeroext %1312) #8, !dbg !10311
  %1313 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10313
  %1314 = load i32, i32* @flag_isoc99, align 4, !dbg !10313
  %tobool1980 = icmp eq i32 %1314, 0, !dbg !10313
  %conv1983 = zext i1 %tobool1980 to i8, !dbg !10313
  %1315 = load i32, i32* @flag_errno_math, align 4, !dbg !10313
  %tobool1984 = icmp eq i32 %1315, 0, !dbg !10313
  br i1 %tobool1984, label %cond.false1986, label %cond.end1989, !dbg !10313

cond.false1986:                                   ; preds = %cond.end1972
  %1316 = load i32, i32* @flag_rounding_math, align 4, !dbg !10313
  %tobool1987 = icmp eq i32 %1316, 0, !dbg !10313
  %cond1988 = select i1 %tobool1987, i64 46, i64 48, !dbg !10313
  br label %cond.end1989, !dbg !10313

cond.end1989:                                     ; preds = %cond.end1972, %cond.false1986
  %cond1990 = phi i64 [ %cond1988, %cond.false1986 ], [ 45, %cond.end1972 ], !dbg !10313
  %arrayidx1992 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond1990, !dbg !10313
  %1317 = load %union.tree_node*, %union.tree_node** %arrayidx1992, align 8, !dbg !10313
  %1318 = load i32, i32* @linux_uclibc, align 4, !dbg !10313
  %1319 = trunc i32 %1318 to i8, !dbg !10313
  %1320 = and i8 %1319, 1, !dbg !10313
  %1321 = xor i8 %1320, 1, !dbg !10313
  tail call fastcc void @def_builtin_1(i32 197, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.619, i64 0, i64 0), i32 3, %union.tree_node* %1313, %union.tree_node* %1313, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv1983, %union.tree_node* %1317, i8 zeroext %1321) #8, !dbg !10313
  %1322 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10315
  %1323 = load i32, i32* @flag_isoc99, align 4, !dbg !10315
  %tobool1997 = icmp eq i32 %1323, 0, !dbg !10315
  %conv2000 = zext i1 %tobool1997 to i8, !dbg !10315
  %1324 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10315
  %1325 = load i32, i32* @linux_uclibc, align 4, !dbg !10315
  %1326 = trunc i32 %1325 to i8, !dbg !10315
  %1327 = and i8 %1326, 1, !dbg !10315
  %1328 = xor i8 %1327, 1, !dbg !10315
  tail call fastcc void @def_builtin_1(i32 198, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.620, i64 0, i64 0), i32 3, %union.tree_node* %1322, %union.tree_node* %1322, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2000, %union.tree_node* %1324, i8 zeroext %1328) #8, !dbg !10315
  %1329 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10317
  %1330 = load i32, i32* @flag_isoc99, align 4, !dbg !10317
  %tobool2005 = icmp eq i32 %1330, 0, !dbg !10317
  %conv2008 = zext i1 %tobool2005 to i8, !dbg !10317
  %1331 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10317
  %1332 = load i32, i32* @linux_uclibc, align 4, !dbg !10317
  %1333 = trunc i32 %1332 to i8, !dbg !10317
  %1334 = and i8 %1333, 1, !dbg !10317
  %1335 = xor i8 %1334, 1, !dbg !10317
  tail call fastcc void @def_builtin_1(i32 199, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.621, i64 0, i64 0), i32 3, %union.tree_node* %1329, %union.tree_node* %1329, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2008, %union.tree_node* %1331, i8 zeroext %1335) #8, !dbg !10317
  %1336 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10319
  %1337 = load i32, i32* @flag_isoc99, align 4, !dbg !10319
  %tobool2013 = icmp eq i32 %1337, 0, !dbg !10319
  %conv2016 = zext i1 %tobool2013 to i8, !dbg !10319
  %1338 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10319
  %1339 = load i32, i32* @linux_uclibc, align 4, !dbg !10319
  %1340 = trunc i32 %1339 to i8, !dbg !10319
  %1341 = and i8 %1340, 1, !dbg !10319
  %1342 = xor i8 %1341, 1, !dbg !10319
  tail call fastcc void @def_builtin_1(i32 200, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.622, i64 0, i64 0), i32 3, %union.tree_node* %1336, %union.tree_node* %1336, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2016, %union.tree_node* %1338, i8 zeroext %1342) #8, !dbg !10319
  %1343 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 144), align 16, !dbg !10321
  %1344 = load i32, i32* @flag_errno_math, align 4, !dbg !10321
  %tobool2021 = icmp eq i32 %1344, 0, !dbg !10321
  br i1 %tobool2021, label %cond.false2023, label %cond.end2026, !dbg !10321

cond.false2023:                                   ; preds = %cond.end1989
  %1345 = load i32, i32* @flag_rounding_math, align 4, !dbg !10321
  %tobool2024 = icmp eq i32 %1345, 0, !dbg !10321
  %cond2025 = select i1 %tobool2024, i64 46, i64 48, !dbg !10321
  br label %cond.end2026, !dbg !10321

cond.end2026:                                     ; preds = %cond.end1989, %cond.false2023
  %cond2027 = phi i64 [ %cond2025, %cond.false2023 ], [ 45, %cond.end1989 ], !dbg !10321
  %arrayidx2029 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2027, !dbg !10321
  %1346 = load %union.tree_node*, %union.tree_node** %arrayidx2029, align 8, !dbg !10321
  tail call fastcc void @def_builtin_1(i32 201, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.623, i64 0, i64 0), i32 3, %union.tree_node* %1343, %union.tree_node* %1343, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1346, i8 zeroext 0) #8, !dbg !10321
  %1347 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 143), align 8, !dbg !10323
  %1348 = load i32, i32* @flag_errno_math, align 4, !dbg !10323
  %tobool2030 = icmp eq i32 %1348, 0, !dbg !10323
  br i1 %tobool2030, label %cond.false2032, label %cond.end2035, !dbg !10323

cond.false2032:                                   ; preds = %cond.end2026
  %1349 = load i32, i32* @flag_rounding_math, align 4, !dbg !10323
  %tobool2033 = icmp eq i32 %1349, 0, !dbg !10323
  %cond2034 = select i1 %tobool2033, i64 46, i64 48, !dbg !10323
  br label %cond.end2035, !dbg !10323

cond.end2035:                                     ; preds = %cond.end2026, %cond.false2032
  %cond2036 = phi i64 [ %cond2034, %cond.false2032 ], [ 45, %cond.end2026 ], !dbg !10323
  %arrayidx2038 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2036, !dbg !10323
  %1350 = load %union.tree_node*, %union.tree_node** %arrayidx2038, align 8, !dbg !10323
  tail call fastcc void @def_builtin_1(i32 202, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.624, i64 0, i64 0), i32 3, %union.tree_node* %1347, %union.tree_node* %1347, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1350, i8 zeroext 0) #8, !dbg !10323
  %1351 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 145), align 8, !dbg !10325
  %1352 = load i32, i32* @flag_errno_math, align 4, !dbg !10325
  %tobool2039 = icmp eq i32 %1352, 0, !dbg !10325
  br i1 %tobool2039, label %cond.false2041, label %cond.end2044, !dbg !10325

cond.false2041:                                   ; preds = %cond.end2035
  %1353 = load i32, i32* @flag_rounding_math, align 4, !dbg !10325
  %tobool2042 = icmp eq i32 %1353, 0, !dbg !10325
  %cond2043 = select i1 %tobool2042, i64 46, i64 48, !dbg !10325
  br label %cond.end2044, !dbg !10325

cond.end2044:                                     ; preds = %cond.end2035, %cond.false2041
  %cond2045 = phi i64 [ %cond2043, %cond.false2041 ], [ 45, %cond.end2035 ], !dbg !10325
  %arrayidx2047 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2045, !dbg !10325
  %1354 = load %union.tree_node*, %union.tree_node** %arrayidx2047, align 8, !dbg !10325
  tail call fastcc void @def_builtin_1(i32 203, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.625, i64 0, i64 0), i32 3, %union.tree_node* %1351, %union.tree_node* %1351, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1354, i8 zeroext 0) #8, !dbg !10325
  %1355 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 161), align 8, !dbg !10327
  %1356 = load i32, i32* @flag_isoc99, align 4, !dbg !10327
  %tobool2048 = icmp eq i32 %1356, 0, !dbg !10327
  %conv2051 = zext i1 %tobool2048 to i8, !dbg !10327
  %1357 = load i32, i32* @flag_errno_math, align 4, !dbg !10327
  %tobool2052 = icmp eq i32 %1357, 0, !dbg !10327
  br i1 %tobool2052, label %cond.false2054, label %cond.end2057, !dbg !10327

cond.false2054:                                   ; preds = %cond.end2044
  %1358 = load i32, i32* @flag_rounding_math, align 4, !dbg !10327
  %tobool2055 = icmp eq i32 %1358, 0, !dbg !10327
  %cond2056 = select i1 %tobool2055, i64 46, i64 48, !dbg !10327
  br label %cond.end2057, !dbg !10327

cond.end2057:                                     ; preds = %cond.end2044, %cond.false2054
  %cond2058 = phi i64 [ %cond2056, %cond.false2054 ], [ 45, %cond.end2044 ], !dbg !10327
  %arrayidx2060 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2058, !dbg !10327
  %1359 = load %union.tree_node*, %union.tree_node** %arrayidx2060, align 8, !dbg !10327
  %1360 = load i32, i32* @linux_uclibc, align 4, !dbg !10327
  %1361 = trunc i32 %1360 to i8, !dbg !10327
  %1362 = and i8 %1361, 1, !dbg !10327
  %1363 = xor i8 %1362, 1, !dbg !10327
  tail call fastcc void @def_builtin_1(i32 204, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.626, i64 0, i64 0), i32 3, %union.tree_node* %1355, %union.tree_node* %1355, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2051, %union.tree_node* %1359, i8 zeroext %1363) #8, !dbg !10327
  %1364 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 160), align 16, !dbg !10329
  %1365 = load i32, i32* @flag_isoc99, align 4, !dbg !10329
  %tobool2065 = icmp eq i32 %1365, 0, !dbg !10329
  %conv2068 = zext i1 %tobool2065 to i8, !dbg !10329
  %1366 = load i32, i32* @flag_errno_math, align 4, !dbg !10329
  %tobool2069 = icmp eq i32 %1366, 0, !dbg !10329
  br i1 %tobool2069, label %cond.false2071, label %cond.end2074, !dbg !10329

cond.false2071:                                   ; preds = %cond.end2057
  %1367 = load i32, i32* @flag_rounding_math, align 4, !dbg !10329
  %tobool2072 = icmp eq i32 %1367, 0, !dbg !10329
  %cond2073 = select i1 %tobool2072, i64 46, i64 48, !dbg !10329
  br label %cond.end2074, !dbg !10329

cond.end2074:                                     ; preds = %cond.end2057, %cond.false2071
  %cond2075 = phi i64 [ %cond2073, %cond.false2071 ], [ 45, %cond.end2057 ], !dbg !10329
  %arrayidx2077 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2075, !dbg !10329
  %1368 = load %union.tree_node*, %union.tree_node** %arrayidx2077, align 8, !dbg !10329
  %1369 = load i32, i32* @linux_uclibc, align 4, !dbg !10329
  %1370 = trunc i32 %1369 to i8, !dbg !10329
  %1371 = and i8 %1370, 1, !dbg !10329
  %1372 = xor i8 %1371, 1, !dbg !10329
  tail call fastcc void @def_builtin_1(i32 205, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.627, i64 0, i64 0), i32 3, %union.tree_node* %1364, %union.tree_node* %1364, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2068, %union.tree_node* %1368, i8 zeroext %1372) #8, !dbg !10329
  %1373 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 162), align 16, !dbg !10331
  %1374 = load i32, i32* @flag_isoc99, align 4, !dbg !10331
  %tobool2082 = icmp eq i32 %1374, 0, !dbg !10331
  %conv2085 = zext i1 %tobool2082 to i8, !dbg !10331
  %1375 = load i32, i32* @flag_errno_math, align 4, !dbg !10331
  %tobool2086 = icmp eq i32 %1375, 0, !dbg !10331
  br i1 %tobool2086, label %cond.false2088, label %cond.end2091, !dbg !10331

cond.false2088:                                   ; preds = %cond.end2074
  %1376 = load i32, i32* @flag_rounding_math, align 4, !dbg !10331
  %tobool2089 = icmp eq i32 %1376, 0, !dbg !10331
  %cond2090 = select i1 %tobool2089, i64 46, i64 48, !dbg !10331
  br label %cond.end2091, !dbg !10331

cond.end2091:                                     ; preds = %cond.end2074, %cond.false2088
  %cond2092 = phi i64 [ %cond2090, %cond.false2088 ], [ 45, %cond.end2074 ], !dbg !10331
  %arrayidx2094 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2092, !dbg !10331
  %1377 = load %union.tree_node*, %union.tree_node** %arrayidx2094, align 8, !dbg !10331
  %1378 = load i32, i32* @linux_uclibc, align 4, !dbg !10331
  %1379 = trunc i32 %1378 to i8, !dbg !10331
  %1380 = and i8 %1379, 1, !dbg !10331
  %1381 = xor i8 %1380, 1, !dbg !10331
  tail call fastcc void @def_builtin_1(i32 206, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.628, i64 0, i64 0), i32 3, %union.tree_node* %1373, %union.tree_node* %1373, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2085, %union.tree_node* %1377, i8 zeroext %1381) #8, !dbg !10331
  %1382 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 152), align 16, !dbg !10333
  %1383 = load i32, i32* @flag_isoc99, align 4, !dbg !10333
  %tobool2099 = icmp eq i32 %1383, 0, !dbg !10333
  %conv2102 = zext i1 %tobool2099 to i8, !dbg !10333
  %1384 = load i32, i32* @flag_errno_math, align 4, !dbg !10333
  %tobool2103 = icmp eq i32 %1384, 0, !dbg !10333
  br i1 %tobool2103, label %cond.false2105, label %cond.end2108, !dbg !10333

cond.false2105:                                   ; preds = %cond.end2091
  %1385 = load i32, i32* @flag_rounding_math, align 4, !dbg !10333
  %tobool2106 = icmp eq i32 %1385, 0, !dbg !10333
  %cond2107 = select i1 %tobool2106, i64 46, i64 48, !dbg !10333
  br label %cond.end2108, !dbg !10333

cond.end2108:                                     ; preds = %cond.end2091, %cond.false2105
  %cond2109 = phi i64 [ %cond2107, %cond.false2105 ], [ 45, %cond.end2091 ], !dbg !10333
  %arrayidx2111 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2109, !dbg !10333
  %1386 = load %union.tree_node*, %union.tree_node** %arrayidx2111, align 8, !dbg !10333
  %1387 = load i32, i32* @linux_uclibc, align 4, !dbg !10333
  %1388 = trunc i32 %1387 to i8, !dbg !10333
  %1389 = and i8 %1388, 1, !dbg !10333
  %1390 = xor i8 %1389, 1, !dbg !10333
  tail call fastcc void @def_builtin_1(i32 207, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.629, i64 0, i64 0), i32 3, %union.tree_node* %1382, %union.tree_node* %1382, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2102, %union.tree_node* %1386, i8 zeroext %1390) #8, !dbg !10333
  %1391 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 151), align 8, !dbg !10335
  %1392 = load i32, i32* @flag_isoc99, align 4, !dbg !10335
  %tobool2116 = icmp eq i32 %1392, 0, !dbg !10335
  %conv2119 = zext i1 %tobool2116 to i8, !dbg !10335
  %1393 = load i32, i32* @flag_errno_math, align 4, !dbg !10335
  %tobool2120 = icmp eq i32 %1393, 0, !dbg !10335
  br i1 %tobool2120, label %cond.false2122, label %cond.end2125, !dbg !10335

cond.false2122:                                   ; preds = %cond.end2108
  %1394 = load i32, i32* @flag_rounding_math, align 4, !dbg !10335
  %tobool2123 = icmp eq i32 %1394, 0, !dbg !10335
  %cond2124 = select i1 %tobool2123, i64 46, i64 48, !dbg !10335
  br label %cond.end2125, !dbg !10335

cond.end2125:                                     ; preds = %cond.end2108, %cond.false2122
  %cond2126 = phi i64 [ %cond2124, %cond.false2122 ], [ 45, %cond.end2108 ], !dbg !10335
  %arrayidx2128 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2126, !dbg !10335
  %1395 = load %union.tree_node*, %union.tree_node** %arrayidx2128, align 8, !dbg !10335
  %1396 = load i32, i32* @linux_uclibc, align 4, !dbg !10335
  %1397 = trunc i32 %1396 to i8, !dbg !10335
  %1398 = and i8 %1397, 1, !dbg !10335
  %1399 = xor i8 %1398, 1, !dbg !10335
  tail call fastcc void @def_builtin_1(i32 208, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.630, i64 0, i64 0), i32 3, %union.tree_node* %1391, %union.tree_node* %1391, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2119, %union.tree_node* %1395, i8 zeroext %1399) #8, !dbg !10335
  %1400 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 153), align 8, !dbg !10337
  %1401 = load i32, i32* @flag_isoc99, align 4, !dbg !10337
  %tobool2133 = icmp eq i32 %1401, 0, !dbg !10337
  %conv2136 = zext i1 %tobool2133 to i8, !dbg !10337
  %1402 = load i32, i32* @flag_errno_math, align 4, !dbg !10337
  %tobool2137 = icmp eq i32 %1402, 0, !dbg !10337
  br i1 %tobool2137, label %cond.false2139, label %cond.end2142, !dbg !10337

cond.false2139:                                   ; preds = %cond.end2125
  %1403 = load i32, i32* @flag_rounding_math, align 4, !dbg !10337
  %tobool2140 = icmp eq i32 %1403, 0, !dbg !10337
  %cond2141 = select i1 %tobool2140, i64 46, i64 48, !dbg !10337
  br label %cond.end2142, !dbg !10337

cond.end2142:                                     ; preds = %cond.end2125, %cond.false2139
  %cond2143 = phi i64 [ %cond2141, %cond.false2139 ], [ 45, %cond.end2125 ], !dbg !10337
  %arrayidx2145 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2143, !dbg !10337
  %1404 = load %union.tree_node*, %union.tree_node** %arrayidx2145, align 8, !dbg !10337
  %1405 = load i32, i32* @linux_uclibc, align 4, !dbg !10337
  %1406 = trunc i32 %1405 to i8, !dbg !10337
  %1407 = and i8 %1406, 1, !dbg !10337
  %1408 = xor i8 %1407, 1, !dbg !10337
  tail call fastcc void @def_builtin_1(i32 209, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.631, i64 0, i64 0), i32 3, %union.tree_node* %1400, %union.tree_node* %1400, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2136, %union.tree_node* %1404, i8 zeroext %1408) #8, !dbg !10337
  %1409 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 91), align 8, !dbg !10339
  %1410 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10339
  tail call fastcc void @def_builtin_1(i32 210, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.632, i64 0, i64 0), i32 3, %union.tree_node* %1409, %union.tree_node* %1409, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1410, i8 zeroext 0) #8, !dbg !10339
  %1411 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 90), align 16, !dbg !10341
  %1412 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10341
  tail call fastcc void @def_builtin_1(i32 211, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.633, i64 0, i64 0), i32 3, %union.tree_node* %1411, %union.tree_node* %1411, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1412, i8 zeroext 0) #8, !dbg !10341
  %1413 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 92), align 16, !dbg !10343
  %1414 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10343
  tail call fastcc void @def_builtin_1(i32 212, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.634, i64 0, i64 0), i32 3, %union.tree_node* %1413, %union.tree_node* %1413, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1414, i8 zeroext 0) #8, !dbg !10343
  %1415 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 93), align 8, !dbg !10345
  %1416 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10345
  tail call fastcc void @def_builtin_1(i32 213, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.635, i64 0, i64 0), i32 3, %union.tree_node* %1415, %union.tree_node* %1415, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1416, i8 zeroext 0) #8, !dbg !10345
  %1417 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 94), align 16, !dbg !10347
  %1418 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10347
  tail call fastcc void @def_builtin_1(i32 214, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.636, i64 0, i64 0), i32 3, %union.tree_node* %1417, %union.tree_node* %1417, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1418, i8 zeroext 0) #8, !dbg !10347
  %1419 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 95), align 8, !dbg !10349
  %1420 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10349
  tail call fastcc void @def_builtin_1(i32 215, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.637, i64 0, i64 0), i32 3, %union.tree_node* %1419, %union.tree_node* %1419, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1420, i8 zeroext 0) #8, !dbg !10349
  %1421 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10351
  %1422 = load i32, i32* @flag_errno_math, align 4, !dbg !10351
  %tobool2150 = icmp eq i32 %1422, 0, !dbg !10351
  br i1 %tobool2150, label %cond.false2152, label %cond.end2155, !dbg !10351

cond.false2152:                                   ; preds = %cond.end2142
  %1423 = load i32, i32* @flag_rounding_math, align 4, !dbg !10351
  %tobool2153 = icmp eq i32 %1423, 0, !dbg !10351
  %cond2154 = select i1 %tobool2153, i64 46, i64 48, !dbg !10351
  br label %cond.end2155, !dbg !10351

cond.end2155:                                     ; preds = %cond.end2142, %cond.false2152
  %cond2156 = phi i64 [ %cond2154, %cond.false2152 ], [ 45, %cond.end2142 ], !dbg !10351
  %arrayidx2158 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2156, !dbg !10351
  %1424 = load %union.tree_node*, %union.tree_node** %arrayidx2158, align 8, !dbg !10351
  tail call fastcc void @def_builtin_1(i32 216, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.638, i64 0, i64 0), i32 3, %union.tree_node* %1421, %union.tree_node* %1421, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1424, i8 zeroext 0) #8, !dbg !10351
  %1425 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10353
  %1426 = load i32, i32* @flag_errno_math, align 4, !dbg !10353
  %tobool2159 = icmp eq i32 %1426, 0, !dbg !10353
  br i1 %tobool2159, label %cond.false2161, label %cond.end2164, !dbg !10353

cond.false2161:                                   ; preds = %cond.end2155
  %1427 = load i32, i32* @flag_rounding_math, align 4, !dbg !10353
  %tobool2162 = icmp eq i32 %1427, 0, !dbg !10353
  %cond2163 = select i1 %tobool2162, i64 46, i64 48, !dbg !10353
  br label %cond.end2164, !dbg !10353

cond.end2164:                                     ; preds = %cond.end2155, %cond.false2161
  %cond2165 = phi i64 [ %cond2163, %cond.false2161 ], [ 45, %cond.end2155 ], !dbg !10353
  %arrayidx2167 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2165, !dbg !10353
  %1428 = load %union.tree_node*, %union.tree_node** %arrayidx2167, align 8, !dbg !10353
  tail call fastcc void @def_builtin_1(i32 217, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.639, i64 0, i64 0), i32 3, %union.tree_node* %1425, %union.tree_node* %1425, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1428, i8 zeroext 0) #8, !dbg !10353
  %1429 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10355
  %1430 = load i32, i32* @flag_errno_math, align 4, !dbg !10355
  %tobool2168 = icmp eq i32 %1430, 0, !dbg !10355
  br i1 %tobool2168, label %cond.false2170, label %cond.end2173, !dbg !10355

cond.false2170:                                   ; preds = %cond.end2164
  %1431 = load i32, i32* @flag_rounding_math, align 4, !dbg !10355
  %tobool2171 = icmp eq i32 %1431, 0, !dbg !10355
  %cond2172 = select i1 %tobool2171, i64 46, i64 48, !dbg !10355
  br label %cond.end2173, !dbg !10355

cond.end2173:                                     ; preds = %cond.end2164, %cond.false2170
  %cond2174 = phi i64 [ %cond2172, %cond.false2170 ], [ 45, %cond.end2164 ], !dbg !10355
  %arrayidx2176 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2174, !dbg !10355
  %1432 = load %union.tree_node*, %union.tree_node** %arrayidx2176, align 8, !dbg !10355
  tail call fastcc void @def_builtin_1(i32 218, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.640, i64 0, i64 0), i32 3, %union.tree_node* %1429, %union.tree_node* %1429, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1432, i8 zeroext 0) #8, !dbg !10355
  %1433 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10357
  %1434 = load i32, i32* @flag_rounding_math, align 4, !dbg !10357
  %tobool2177 = icmp eq i32 %1434, 0, !dbg !10357
  %cond2178 = select i1 %tobool2177, i64 46, i64 48, !dbg !10357
  %arrayidx2180 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2178, !dbg !10357
  %1435 = load %union.tree_node*, %union.tree_node** %arrayidx2180, align 16, !dbg !10357
  tail call fastcc void @def_builtin_1(i32 219, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.641, i64 0, i64 0), i32 3, %union.tree_node* %1433, %union.tree_node* %1433, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %1435, i8 zeroext 1) #8, !dbg !10357
  %1436 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 198), align 16, !dbg !10359
  %1437 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10359
  tail call fastcc void @def_builtin_1(i32 220, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.642, i64 0, i64 0), i32 3, %union.tree_node* %1436, %union.tree_node* %1436, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1437, i8 zeroext 0) #8, !dbg !10359
  %1438 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 197), align 8, !dbg !10361
  %1439 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10361
  tail call fastcc void @def_builtin_1(i32 221, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.643, i64 0, i64 0), i32 3, %union.tree_node* %1438, %union.tree_node* %1438, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1439, i8 zeroext 0) #8, !dbg !10361
  %1440 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 199), align 8, !dbg !10363
  %1441 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10363
  tail call fastcc void @def_builtin_1(i32 222, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.644, i64 0, i64 0), i32 3, %union.tree_node* %1440, %union.tree_node* %1440, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1441, i8 zeroext 0) #8, !dbg !10363
  %1442 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10365
  %1443 = load i32, i32* @flag_isoc99, align 4, !dbg !10365
  %tobool2181 = icmp eq i32 %1443, 0, !dbg !10365
  %conv2184 = zext i1 %tobool2181 to i8, !dbg !10365
  %1444 = load i32, i32* @flag_rounding_math, align 4, !dbg !10365
  %tobool2185 = icmp eq i32 %1444, 0, !dbg !10365
  %cond2186 = select i1 %tobool2185, i64 46, i64 48, !dbg !10365
  %arrayidx2188 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2186, !dbg !10365
  %1445 = load %union.tree_node*, %union.tree_node** %arrayidx2188, align 16, !dbg !10365
  %1446 = load i32, i32* @linux_uclibc, align 4, !dbg !10365
  %1447 = trunc i32 %1446 to i8, !dbg !10365
  %1448 = and i8 %1447, 1, !dbg !10365
  %1449 = xor i8 %1448, 1, !dbg !10365
  tail call fastcc void @def_builtin_1(i32 223, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.645, i64 0, i64 0), i32 3, %union.tree_node* %1442, %union.tree_node* %1442, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2184, %union.tree_node* %1445, i8 zeroext %1449) #8, !dbg !10365
  %1450 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10367
  %1451 = load i32, i32* @flag_errno_math, align 4, !dbg !10367
  %tobool2193 = icmp eq i32 %1451, 0, !dbg !10367
  br i1 %tobool2193, label %cond.false2195, label %cond.end2198, !dbg !10367

cond.false2195:                                   ; preds = %cond.end2173
  %1452 = load i32, i32* @flag_rounding_math, align 4, !dbg !10367
  %tobool2196 = icmp eq i32 %1452, 0, !dbg !10367
  %cond2197 = select i1 %tobool2196, i64 46, i64 48, !dbg !10367
  br label %cond.end2198, !dbg !10367

cond.end2198:                                     ; preds = %cond.end2173, %cond.false2195
  %cond2199 = phi i64 [ %cond2197, %cond.false2195 ], [ 45, %cond.end2173 ], !dbg !10367
  %arrayidx2201 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2199, !dbg !10367
  %1453 = load %union.tree_node*, %union.tree_node** %arrayidx2201, align 8, !dbg !10367
  tail call fastcc void @def_builtin_1(i32 224, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.646, i64 0, i64 0), i32 3, %union.tree_node* %1450, %union.tree_node* %1450, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %1453, i8 zeroext 1) #8, !dbg !10367
  %1454 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10369
  %1455 = load i32, i32* @flag_isoc99, align 4, !dbg !10369
  %tobool2202 = icmp eq i32 %1455, 0, !dbg !10369
  %conv2205 = zext i1 %tobool2202 to i8, !dbg !10369
  %1456 = load i32, i32* @flag_errno_math, align 4, !dbg !10369
  %tobool2206 = icmp eq i32 %1456, 0, !dbg !10369
  br i1 %tobool2206, label %cond.false2208, label %cond.end2211, !dbg !10369

cond.false2208:                                   ; preds = %cond.end2198
  %1457 = load i32, i32* @flag_rounding_math, align 4, !dbg !10369
  %tobool2209 = icmp eq i32 %1457, 0, !dbg !10369
  %cond2210 = select i1 %tobool2209, i64 46, i64 48, !dbg !10369
  br label %cond.end2211, !dbg !10369

cond.end2211:                                     ; preds = %cond.end2198, %cond.false2208
  %cond2212 = phi i64 [ %cond2210, %cond.false2208 ], [ 45, %cond.end2198 ], !dbg !10369
  %arrayidx2214 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2212, !dbg !10369
  %1458 = load %union.tree_node*, %union.tree_node** %arrayidx2214, align 8, !dbg !10369
  %1459 = load i32, i32* @linux_uclibc, align 4, !dbg !10369
  %1460 = trunc i32 %1459 to i8, !dbg !10369
  %1461 = and i8 %1460, 1, !dbg !10369
  %1462 = xor i8 %1461, 1, !dbg !10369
  tail call fastcc void @def_builtin_1(i32 225, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.647, i64 0, i64 0), i32 3, %union.tree_node* %1454, %union.tree_node* %1454, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2205, %union.tree_node* %1458, i8 zeroext %1462) #8, !dbg !10369
  %1463 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10371
  %1464 = load i32, i32* @flag_isoc99, align 4, !dbg !10371
  %tobool2219 = icmp eq i32 %1464, 0, !dbg !10371
  %conv2222 = zext i1 %tobool2219 to i8, !dbg !10371
  %1465 = load i32, i32* @flag_errno_math, align 4, !dbg !10371
  %tobool2223 = icmp eq i32 %1465, 0, !dbg !10371
  br i1 %tobool2223, label %cond.false2225, label %cond.end2228, !dbg !10371

cond.false2225:                                   ; preds = %cond.end2211
  %1466 = load i32, i32* @flag_rounding_math, align 4, !dbg !10371
  %tobool2226 = icmp eq i32 %1466, 0, !dbg !10371
  %cond2227 = select i1 %tobool2226, i64 46, i64 48, !dbg !10371
  br label %cond.end2228, !dbg !10371

cond.end2228:                                     ; preds = %cond.end2211, %cond.false2225
  %cond2229 = phi i64 [ %cond2227, %cond.false2225 ], [ 45, %cond.end2211 ], !dbg !10371
  %arrayidx2231 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2229, !dbg !10371
  %1467 = load %union.tree_node*, %union.tree_node** %arrayidx2231, align 8, !dbg !10371
  %1468 = load i32, i32* @linux_uclibc, align 4, !dbg !10371
  %1469 = trunc i32 %1468 to i8, !dbg !10371
  %1470 = and i8 %1469, 1, !dbg !10371
  %1471 = xor i8 %1470, 1, !dbg !10371
  tail call fastcc void @def_builtin_1(i32 226, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.648, i64 0, i64 0), i32 3, %union.tree_node* %1463, %union.tree_node* %1463, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2222, %union.tree_node* %1467, i8 zeroext %1471) #8, !dbg !10371
  %1472 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10373
  %1473 = load i32, i32* @flag_isoc99, align 4, !dbg !10373
  %tobool2236 = icmp eq i32 %1473, 0, !dbg !10373
  %conv2239 = zext i1 %tobool2236 to i8, !dbg !10373
  %1474 = load i32, i32* @flag_rounding_math, align 4, !dbg !10373
  %tobool2240 = icmp eq i32 %1474, 0, !dbg !10373
  %cond2241 = select i1 %tobool2240, i64 46, i64 48, !dbg !10373
  %arrayidx2243 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2241, !dbg !10373
  %1475 = load %union.tree_node*, %union.tree_node** %arrayidx2243, align 16, !dbg !10373
  %1476 = load i32, i32* @linux_uclibc, align 4, !dbg !10373
  %1477 = trunc i32 %1476 to i8, !dbg !10373
  %1478 = and i8 %1477, 1, !dbg !10373
  %1479 = xor i8 %1478, 1, !dbg !10373
  tail call fastcc void @def_builtin_1(i32 227, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.649, i64 0, i64 0), i32 3, %union.tree_node* %1472, %union.tree_node* %1472, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2239, %union.tree_node* %1475, i8 zeroext %1479) #8, !dbg !10373
  %1480 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10375
  %1481 = load i32, i32* @flag_errno_math, align 4, !dbg !10375
  %tobool2248 = icmp eq i32 %1481, 0, !dbg !10375
  br i1 %tobool2248, label %cond.false2250, label %cond.end2253, !dbg !10375

cond.false2250:                                   ; preds = %cond.end2228
  %1482 = load i32, i32* @flag_rounding_math, align 4, !dbg !10375
  %tobool2251 = icmp eq i32 %1482, 0, !dbg !10375
  %cond2252 = select i1 %tobool2251, i64 46, i64 48, !dbg !10375
  br label %cond.end2253, !dbg !10375

cond.end2253:                                     ; preds = %cond.end2228, %cond.false2250
  %cond2254 = phi i64 [ %cond2252, %cond.false2250 ], [ 45, %cond.end2228 ], !dbg !10375
  %arrayidx2256 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2254, !dbg !10375
  %1483 = load %union.tree_node*, %union.tree_node** %arrayidx2256, align 8, !dbg !10375
  tail call fastcc void @def_builtin_1(i32 228, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.650, i64 0, i64 0), i32 3, %union.tree_node* %1480, %union.tree_node* %1480, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %1483, i8 zeroext 1) #8, !dbg !10375
  %1484 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10377
  %1485 = load i32, i32* @flag_isoc99, align 4, !dbg !10377
  %tobool2257 = icmp eq i32 %1485, 0, !dbg !10377
  %conv2260 = zext i1 %tobool2257 to i8, !dbg !10377
  %1486 = load i32, i32* @flag_errno_math, align 4, !dbg !10377
  %tobool2261 = icmp eq i32 %1486, 0, !dbg !10377
  br i1 %tobool2261, label %cond.false2263, label %cond.end2266, !dbg !10377

cond.false2263:                                   ; preds = %cond.end2253
  %1487 = load i32, i32* @flag_rounding_math, align 4, !dbg !10377
  %tobool2264 = icmp eq i32 %1487, 0, !dbg !10377
  %cond2265 = select i1 %tobool2264, i64 46, i64 48, !dbg !10377
  br label %cond.end2266, !dbg !10377

cond.end2266:                                     ; preds = %cond.end2253, %cond.false2263
  %cond2267 = phi i64 [ %cond2265, %cond.false2263 ], [ 45, %cond.end2253 ], !dbg !10377
  %arrayidx2269 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2267, !dbg !10377
  %1488 = load %union.tree_node*, %union.tree_node** %arrayidx2269, align 8, !dbg !10377
  %1489 = load i32, i32* @linux_uclibc, align 4, !dbg !10377
  %1490 = trunc i32 %1489 to i8, !dbg !10377
  %1491 = and i8 %1490, 1, !dbg !10377
  %1492 = xor i8 %1491, 1, !dbg !10377
  tail call fastcc void @def_builtin_1(i32 229, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.651, i64 0, i64 0), i32 3, %union.tree_node* %1484, %union.tree_node* %1484, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2260, %union.tree_node* %1488, i8 zeroext %1492) #8, !dbg !10377
  %1493 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10379
  %1494 = load i32, i32* @flag_isoc99, align 4, !dbg !10379
  %tobool2274 = icmp eq i32 %1494, 0, !dbg !10379
  %conv2277 = zext i1 %tobool2274 to i8, !dbg !10379
  %1495 = load i32, i32* @flag_errno_math, align 4, !dbg !10379
  %tobool2278 = icmp eq i32 %1495, 0, !dbg !10379
  br i1 %tobool2278, label %cond.false2280, label %cond.end2283, !dbg !10379

cond.false2280:                                   ; preds = %cond.end2266
  %1496 = load i32, i32* @flag_rounding_math, align 4, !dbg !10379
  %tobool2281 = icmp eq i32 %1496, 0, !dbg !10379
  %cond2282 = select i1 %tobool2281, i64 46, i64 48, !dbg !10379
  br label %cond.end2283, !dbg !10379

cond.end2283:                                     ; preds = %cond.end2266, %cond.false2280
  %cond2284 = phi i64 [ %cond2282, %cond.false2280 ], [ 45, %cond.end2266 ], !dbg !10379
  %arrayidx2286 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2284, !dbg !10379
  %1497 = load %union.tree_node*, %union.tree_node** %arrayidx2286, align 8, !dbg !10379
  %1498 = load i32, i32* @linux_uclibc, align 4, !dbg !10379
  %1499 = trunc i32 %1498 to i8, !dbg !10379
  %1500 = and i8 %1499, 1, !dbg !10379
  %1501 = xor i8 %1500, 1, !dbg !10379
  tail call fastcc void @def_builtin_1(i32 230, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.652, i64 0, i64 0), i32 3, %union.tree_node* %1493, %union.tree_node* %1493, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2277, %union.tree_node* %1497, i8 zeroext %1501) #8, !dbg !10379
  %1502 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10381
  %1503 = load i32, i32* @flag_rounding_math, align 4, !dbg !10381
  %tobool2291 = icmp eq i32 %1503, 0, !dbg !10381
  %cond2292 = select i1 %tobool2291, i64 46, i64 48, !dbg !10381
  %arrayidx2294 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2292, !dbg !10381
  %1504 = load %union.tree_node*, %union.tree_node** %arrayidx2294, align 16, !dbg !10381
  tail call fastcc void @def_builtin_1(i32 231, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.653, i64 0, i64 0), i32 3, %union.tree_node* %1502, %union.tree_node* %1502, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %1504, i8 zeroext 1) #8, !dbg !10381
  %1505 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10383
  %1506 = load i32, i32* @flag_isoc99, align 4, !dbg !10383
  %tobool2295 = icmp eq i32 %1506, 0, !dbg !10383
  %conv2298 = zext i1 %tobool2295 to i8, !dbg !10383
  %1507 = load i32, i32* @flag_rounding_math, align 4, !dbg !10383
  %tobool2299 = icmp eq i32 %1507, 0, !dbg !10383
  %cond2300 = select i1 %tobool2299, i64 46, i64 48, !dbg !10383
  %arrayidx2302 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2300, !dbg !10383
  %1508 = load %union.tree_node*, %union.tree_node** %arrayidx2302, align 16, !dbg !10383
  %1509 = load i32, i32* @linux_uclibc, align 4, !dbg !10383
  %1510 = trunc i32 %1509 to i8, !dbg !10383
  %1511 = and i8 %1510, 1, !dbg !10383
  %1512 = xor i8 %1511, 1, !dbg !10383
  tail call fastcc void @def_builtin_1(i32 232, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.654, i64 0, i64 0), i32 3, %union.tree_node* %1505, %union.tree_node* %1505, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2298, %union.tree_node* %1508, i8 zeroext %1512) #8, !dbg !10383
  %1513 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10385
  %1514 = load i32, i32* @flag_rounding_math, align 4, !dbg !10385
  %tobool2307 = icmp eq i32 %1514, 0, !dbg !10385
  %cond2308 = select i1 %tobool2307, i64 46, i64 48, !dbg !10385
  %arrayidx2310 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2308, !dbg !10385
  %1515 = load %union.tree_node*, %union.tree_node** %arrayidx2310, align 16, !dbg !10385
  tail call fastcc void @def_builtin_1(i32 233, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.655, i64 0, i64 0), i32 3, %union.tree_node* %1513, %union.tree_node* %1513, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %1515, i8 zeroext 1) #8, !dbg !10385
  %1516 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10387
  %1517 = load i32, i32* @flag_isoc99, align 4, !dbg !10387
  %tobool2311 = icmp eq i32 %1517, 0, !dbg !10387
  %conv2314 = zext i1 %tobool2311 to i8, !dbg !10387
  %1518 = load i32, i32* @flag_rounding_math, align 4, !dbg !10387
  %tobool2315 = icmp eq i32 %1518, 0, !dbg !10387
  %cond2316 = select i1 %tobool2315, i64 46, i64 48, !dbg !10387
  %arrayidx2318 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2316, !dbg !10387
  %1519 = load %union.tree_node*, %union.tree_node** %arrayidx2318, align 16, !dbg !10387
  %1520 = load i32, i32* @linux_uclibc, align 4, !dbg !10387
  %1521 = trunc i32 %1520 to i8, !dbg !10387
  %1522 = and i8 %1521, 1, !dbg !10387
  %1523 = xor i8 %1522, 1, !dbg !10387
  tail call fastcc void @def_builtin_1(i32 234, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.656, i64 0, i64 0), i32 3, %union.tree_node* %1516, %union.tree_node* %1516, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2314, %union.tree_node* %1519, i8 zeroext %1523) #8, !dbg !10387
  %1524 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10389
  %1525 = load i32, i32* @flag_isoc99, align 4, !dbg !10389
  %tobool2323 = icmp eq i32 %1525, 0, !dbg !10389
  %conv2326 = zext i1 %tobool2323 to i8, !dbg !10389
  %1526 = load i32, i32* @flag_rounding_math, align 4, !dbg !10389
  %tobool2327 = icmp eq i32 %1526, 0, !dbg !10389
  %cond2328 = select i1 %tobool2327, i64 46, i64 48, !dbg !10389
  %arrayidx2330 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2328, !dbg !10389
  %1527 = load %union.tree_node*, %union.tree_node** %arrayidx2330, align 16, !dbg !10389
  %1528 = load i32, i32* @linux_uclibc, align 4, !dbg !10389
  %1529 = trunc i32 %1528 to i8, !dbg !10389
  %1530 = and i8 %1529, 1, !dbg !10389
  %1531 = xor i8 %1530, 1, !dbg !10389
  tail call fastcc void @def_builtin_1(i32 235, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.657, i64 0, i64 0), i32 3, %union.tree_node* %1524, %union.tree_node* %1524, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2326, %union.tree_node* %1527, i8 zeroext %1531) #8, !dbg !10389
  %1532 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10391
  %1533 = load i32, i32* @flag_isoc99, align 4, !dbg !10391
  %tobool2335 = icmp eq i32 %1533, 0, !dbg !10391
  %conv2338 = zext i1 %tobool2335 to i8, !dbg !10391
  %1534 = load i32, i32* @flag_rounding_math, align 4, !dbg !10391
  %tobool2339 = icmp eq i32 %1534, 0, !dbg !10391
  %cond2340 = select i1 %tobool2339, i64 46, i64 48, !dbg !10391
  %arrayidx2342 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2340, !dbg !10391
  %1535 = load %union.tree_node*, %union.tree_node** %arrayidx2342, align 16, !dbg !10391
  %1536 = load i32, i32* @linux_uclibc, align 4, !dbg !10391
  %1537 = trunc i32 %1536 to i8, !dbg !10391
  %1538 = and i8 %1537, 1, !dbg !10391
  %1539 = xor i8 %1538, 1, !dbg !10391
  tail call fastcc void @def_builtin_1(i32 236, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.658, i64 0, i64 0), i32 3, %union.tree_node* %1532, %union.tree_node* %1532, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2338, %union.tree_node* %1535, i8 zeroext %1539) #8, !dbg !10391
  %1540 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10393
  %1541 = load i32, i32* @flag_isoc99, align 4, !dbg !10393
  %tobool2347 = icmp eq i32 %1541, 0, !dbg !10393
  %conv2350 = zext i1 %tobool2347 to i8, !dbg !10393
  %1542 = load i32, i32* @flag_errno_math, align 4, !dbg !10393
  %tobool2351 = icmp eq i32 %1542, 0, !dbg !10393
  br i1 %tobool2351, label %cond.false2353, label %cond.end2356, !dbg !10393

cond.false2353:                                   ; preds = %cond.end2283
  %1543 = load i32, i32* @flag_rounding_math, align 4, !dbg !10393
  %tobool2354 = icmp eq i32 %1543, 0, !dbg !10393
  %cond2355 = select i1 %tobool2354, i64 46, i64 48, !dbg !10393
  br label %cond.end2356, !dbg !10393

cond.end2356:                                     ; preds = %cond.end2283, %cond.false2353
  %cond2357 = phi i64 [ %cond2355, %cond.false2353 ], [ 45, %cond.end2283 ], !dbg !10393
  %arrayidx2359 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2357, !dbg !10393
  %1544 = load %union.tree_node*, %union.tree_node** %arrayidx2359, align 8, !dbg !10393
  %1545 = load i32, i32* @linux_uclibc, align 4, !dbg !10393
  %1546 = trunc i32 %1545 to i8, !dbg !10393
  %1547 = and i8 %1546, 1, !dbg !10393
  %1548 = xor i8 %1547, 1, !dbg !10393
  tail call fastcc void @def_builtin_1(i32 237, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.659, i64 0, i64 0), i32 3, %union.tree_node* %1540, %union.tree_node* %1540, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2350, %union.tree_node* %1544, i8 zeroext %1548) #8, !dbg !10393
  %1549 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10395
  %1550 = load i32, i32* @flag_isoc99, align 4, !dbg !10395
  %tobool2364 = icmp eq i32 %1550, 0, !dbg !10395
  %conv2367 = zext i1 %tobool2364 to i8, !dbg !10395
  %1551 = load i32, i32* @flag_errno_math, align 4, !dbg !10395
  %tobool2368 = icmp eq i32 %1551, 0, !dbg !10395
  br i1 %tobool2368, label %cond.false2370, label %cond.end2373, !dbg !10395

cond.false2370:                                   ; preds = %cond.end2356
  %1552 = load i32, i32* @flag_rounding_math, align 4, !dbg !10395
  %tobool2371 = icmp eq i32 %1552, 0, !dbg !10395
  %cond2372 = select i1 %tobool2371, i64 46, i64 48, !dbg !10395
  br label %cond.end2373, !dbg !10395

cond.end2373:                                     ; preds = %cond.end2356, %cond.false2370
  %cond2374 = phi i64 [ %cond2372, %cond.false2370 ], [ 45, %cond.end2356 ], !dbg !10395
  %arrayidx2376 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2374, !dbg !10395
  %1553 = load %union.tree_node*, %union.tree_node** %arrayidx2376, align 8, !dbg !10395
  %1554 = load i32, i32* @linux_uclibc, align 4, !dbg !10395
  %1555 = trunc i32 %1554 to i8, !dbg !10395
  %1556 = and i8 %1555, 1, !dbg !10395
  %1557 = xor i8 %1556, 1, !dbg !10395
  tail call fastcc void @def_builtin_1(i32 238, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.660, i64 0, i64 0), i32 3, %union.tree_node* %1549, %union.tree_node* %1549, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2367, %union.tree_node* %1553, i8 zeroext %1557) #8, !dbg !10395
  %1558 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10397
  %1559 = load i32, i32* @flag_isoc99, align 4, !dbg !10397
  %tobool2381 = icmp eq i32 %1559, 0, !dbg !10397
  %conv2384 = zext i1 %tobool2381 to i8, !dbg !10397
  %1560 = load i32, i32* @flag_errno_math, align 4, !dbg !10397
  %tobool2385 = icmp eq i32 %1560, 0, !dbg !10397
  br i1 %tobool2385, label %cond.false2387, label %cond.end2390, !dbg !10397

cond.false2387:                                   ; preds = %cond.end2373
  %1561 = load i32, i32* @flag_rounding_math, align 4, !dbg !10397
  %tobool2388 = icmp eq i32 %1561, 0, !dbg !10397
  %cond2389 = select i1 %tobool2388, i64 46, i64 48, !dbg !10397
  br label %cond.end2390, !dbg !10397

cond.end2390:                                     ; preds = %cond.end2373, %cond.false2387
  %cond2391 = phi i64 [ %cond2389, %cond.false2387 ], [ 45, %cond.end2373 ], !dbg !10397
  %arrayidx2393 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2391, !dbg !10397
  %1562 = load %union.tree_node*, %union.tree_node** %arrayidx2393, align 8, !dbg !10397
  %1563 = load i32, i32* @linux_uclibc, align 4, !dbg !10397
  %1564 = trunc i32 %1563 to i8, !dbg !10397
  %1565 = and i8 %1564, 1, !dbg !10397
  %1566 = xor i8 %1565, 1, !dbg !10397
  tail call fastcc void @def_builtin_1(i32 239, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.661, i64 0, i64 0), i32 3, %union.tree_node* %1558, %union.tree_node* %1558, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2384, %union.tree_node* %1562, i8 zeroext %1566) #8, !dbg !10397
  %1567 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10399
  %1568 = load i32, i32* @flag_isoc99, align 4, !dbg !10399
  %tobool2398 = icmp eq i32 %1568, 0, !dbg !10399
  %conv2401 = zext i1 %tobool2398 to i8, !dbg !10399
  %1569 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10399
  %1570 = load i32, i32* @linux_uclibc, align 4, !dbg !10399
  %1571 = trunc i32 %1570 to i8, !dbg !10399
  %1572 = and i8 %1571, 1, !dbg !10399
  %1573 = xor i8 %1572, 1, !dbg !10399
  tail call fastcc void @def_builtin_1(i32 240, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.662, i64 0, i64 0), i32 3, %union.tree_node* %1567, %union.tree_node* %1567, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2401, %union.tree_node* %1569, i8 zeroext %1573) #8, !dbg !10399
  %1574 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10401
  %1575 = load i32, i32* @flag_isoc99, align 4, !dbg !10401
  %tobool2406 = icmp eq i32 %1575, 0, !dbg !10401
  %conv2409 = zext i1 %tobool2406 to i8, !dbg !10401
  %1576 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10401
  %1577 = load i32, i32* @linux_uclibc, align 4, !dbg !10401
  %1578 = trunc i32 %1577 to i8, !dbg !10401
  %1579 = and i8 %1578, 1, !dbg !10401
  %1580 = xor i8 %1579, 1, !dbg !10401
  tail call fastcc void @def_builtin_1(i32 241, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.663, i64 0, i64 0), i32 3, %union.tree_node* %1574, %union.tree_node* %1574, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2409, %union.tree_node* %1576, i8 zeroext %1580) #8, !dbg !10401
  %1581 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10403
  %1582 = load i32, i32* @flag_isoc99, align 4, !dbg !10403
  %tobool2414 = icmp eq i32 %1582, 0, !dbg !10403
  %conv2417 = zext i1 %tobool2414 to i8, !dbg !10403
  %1583 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10403
  %1584 = load i32, i32* @linux_uclibc, align 4, !dbg !10403
  %1585 = trunc i32 %1584 to i8, !dbg !10403
  %1586 = and i8 %1585, 1, !dbg !10403
  %1587 = xor i8 %1586, 1, !dbg !10403
  tail call fastcc void @def_builtin_1(i32 242, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.664, i64 0, i64 0), i32 3, %union.tree_node* %1581, %union.tree_node* %1581, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2417, %union.tree_node* %1583, i8 zeroext %1587) #8, !dbg !10403
  %1588 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10405
  %1589 = load i32, i32* @flag_errno_math, align 4, !dbg !10405
  %tobool2422 = icmp eq i32 %1589, 0, !dbg !10405
  br i1 %tobool2422, label %cond.false2424, label %cond.end2427, !dbg !10405

cond.false2424:                                   ; preds = %cond.end2390
  %1590 = load i32, i32* @flag_rounding_math, align 4, !dbg !10405
  %tobool2425 = icmp eq i32 %1590, 0, !dbg !10405
  %cond2426 = select i1 %tobool2425, i64 46, i64 48, !dbg !10405
  br label %cond.end2427, !dbg !10405

cond.end2427:                                     ; preds = %cond.end2390, %cond.false2424
  %cond2428 = phi i64 [ %cond2426, %cond.false2424 ], [ 45, %cond.end2390 ], !dbg !10405
  %arrayidx2430 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2428, !dbg !10405
  %1591 = load %union.tree_node*, %union.tree_node** %arrayidx2430, align 8, !dbg !10405
  tail call fastcc void @def_builtin_1(i32 243, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.665, i64 0, i64 0), i32 3, %union.tree_node* %1588, %union.tree_node* %1588, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1591, i8 zeroext 0) #8, !dbg !10405
  %1592 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10407
  %1593 = load i32, i32* @flag_errno_math, align 4, !dbg !10407
  %tobool2431 = icmp eq i32 %1593, 0, !dbg !10407
  br i1 %tobool2431, label %cond.false2433, label %cond.end2436, !dbg !10407

cond.false2433:                                   ; preds = %cond.end2427
  %1594 = load i32, i32* @flag_rounding_math, align 4, !dbg !10407
  %tobool2434 = icmp eq i32 %1594, 0, !dbg !10407
  %cond2435 = select i1 %tobool2434, i64 46, i64 48, !dbg !10407
  br label %cond.end2436, !dbg !10407

cond.end2436:                                     ; preds = %cond.end2427, %cond.false2433
  %cond2437 = phi i64 [ %cond2435, %cond.false2433 ], [ 45, %cond.end2427 ], !dbg !10407
  %arrayidx2439 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2437, !dbg !10407
  %1595 = load %union.tree_node*, %union.tree_node** %arrayidx2439, align 8, !dbg !10407
  tail call fastcc void @def_builtin_1(i32 244, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.666, i64 0, i64 0), i32 3, %union.tree_node* %1592, %union.tree_node* %1592, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1595, i8 zeroext 0) #8, !dbg !10407
  %1596 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10409
  %1597 = load i32, i32* @flag_errno_math, align 4, !dbg !10409
  %tobool2440 = icmp eq i32 %1597, 0, !dbg !10409
  br i1 %tobool2440, label %cond.false2442, label %cond.end2445, !dbg !10409

cond.false2442:                                   ; preds = %cond.end2436
  %1598 = load i32, i32* @flag_rounding_math, align 4, !dbg !10409
  %tobool2443 = icmp eq i32 %1598, 0, !dbg !10409
  %cond2444 = select i1 %tobool2443, i64 46, i64 48, !dbg !10409
  br label %cond.end2445, !dbg !10409

cond.end2445:                                     ; preds = %cond.end2436, %cond.false2442
  %cond2446 = phi i64 [ %cond2444, %cond.false2442 ], [ 45, %cond.end2436 ], !dbg !10409
  %arrayidx2448 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2446, !dbg !10409
  %1599 = load %union.tree_node*, %union.tree_node** %arrayidx2448, align 8, !dbg !10409
  tail call fastcc void @def_builtin_1(i32 245, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.667, i64 0, i64 0), i32 3, %union.tree_node* %1596, %union.tree_node* %1596, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1599, i8 zeroext 0) #8, !dbg !10409
  %1600 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 68), align 16, !dbg !10411
  %1601 = load i32, i32* @flag_errno_math, align 4, !dbg !10411
  %tobool2449 = icmp eq i32 %1601, 0, !dbg !10411
  br i1 %tobool2449, label %cond.false2451, label %cond.end2454, !dbg !10411

cond.false2451:                                   ; preds = %cond.end2445
  %1602 = load i32, i32* @flag_rounding_math, align 4, !dbg !10411
  %tobool2452 = icmp eq i32 %1602, 0, !dbg !10411
  %cond2453 = select i1 %tobool2452, i64 46, i64 48, !dbg !10411
  br label %cond.end2454, !dbg !10411

cond.end2454:                                     ; preds = %cond.end2445, %cond.false2451
  %cond2455 = phi i64 [ %cond2453, %cond.false2451 ], [ 45, %cond.end2445 ], !dbg !10411
  %arrayidx2457 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2455, !dbg !10411
  %1603 = load %union.tree_node*, %union.tree_node** %arrayidx2457, align 8, !dbg !10411
  tail call fastcc void @def_builtin_1(i32 246, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.668, i64 0, i64 0), i32 3, %union.tree_node* %1600, %union.tree_node* %1600, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1603, i8 zeroext 0) #8, !dbg !10411
  %1604 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 67), align 8, !dbg !10413
  %1605 = load i32, i32* @flag_errno_math, align 4, !dbg !10413
  %tobool2458 = icmp eq i32 %1605, 0, !dbg !10413
  br i1 %tobool2458, label %cond.false2460, label %cond.end2463, !dbg !10413

cond.false2460:                                   ; preds = %cond.end2454
  %1606 = load i32, i32* @flag_rounding_math, align 4, !dbg !10413
  %tobool2461 = icmp eq i32 %1606, 0, !dbg !10413
  %cond2462 = select i1 %tobool2461, i64 46, i64 48, !dbg !10413
  br label %cond.end2463, !dbg !10413

cond.end2463:                                     ; preds = %cond.end2454, %cond.false2460
  %cond2464 = phi i64 [ %cond2462, %cond.false2460 ], [ 45, %cond.end2454 ], !dbg !10413
  %arrayidx2466 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2464, !dbg !10413
  %1607 = load %union.tree_node*, %union.tree_node** %arrayidx2466, align 8, !dbg !10413
  tail call fastcc void @def_builtin_1(i32 247, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.669, i64 0, i64 0), i32 3, %union.tree_node* %1604, %union.tree_node* %1604, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1607, i8 zeroext 0) #8, !dbg !10413
  %1608 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 69), align 8, !dbg !10415
  %1609 = load i32, i32* @flag_errno_math, align 4, !dbg !10415
  %tobool2467 = icmp eq i32 %1609, 0, !dbg !10415
  br i1 %tobool2467, label %cond.false2469, label %cond.end2472, !dbg !10415

cond.false2469:                                   ; preds = %cond.end2463
  %1610 = load i32, i32* @flag_rounding_math, align 4, !dbg !10415
  %tobool2470 = icmp eq i32 %1610, 0, !dbg !10415
  %cond2471 = select i1 %tobool2470, i64 46, i64 48, !dbg !10415
  br label %cond.end2472, !dbg !10415

cond.end2472:                                     ; preds = %cond.end2463, %cond.false2469
  %cond2473 = phi i64 [ %cond2471, %cond.false2469 ], [ 45, %cond.end2463 ], !dbg !10415
  %arrayidx2475 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2473, !dbg !10415
  %1611 = load %union.tree_node*, %union.tree_node** %arrayidx2475, align 8, !dbg !10415
  tail call fastcc void @def_builtin_1(i32 248, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.670, i64 0, i64 0), i32 3, %union.tree_node* %1608, %union.tree_node* %1608, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1611, i8 zeroext 0) #8, !dbg !10415
  %1612 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 158), align 16, !dbg !10417
  %1613 = load i32, i32* @flag_errno_math, align 4, !dbg !10417
  %tobool2476 = icmp eq i32 %1613, 0, !dbg !10417
  br i1 %tobool2476, label %cond.false2478, label %cond.end2481, !dbg !10417

cond.false2478:                                   ; preds = %cond.end2472
  %1614 = load i32, i32* @flag_rounding_math, align 4, !dbg !10417
  %tobool2479 = icmp eq i32 %1614, 0, !dbg !10417
  %cond2480 = select i1 %tobool2479, i64 46, i64 48, !dbg !10417
  br label %cond.end2481, !dbg !10417

cond.end2481:                                     ; preds = %cond.end2472, %cond.false2478
  %cond2482 = phi i64 [ %cond2480, %cond.false2478 ], [ 45, %cond.end2472 ], !dbg !10417
  %arrayidx2484 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2482, !dbg !10417
  %1615 = load %union.tree_node*, %union.tree_node** %arrayidx2484, align 8, !dbg !10417
  tail call fastcc void @def_builtin_1(i32 249, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.671, i64 0, i64 0), i32 3, %union.tree_node* %1612, %union.tree_node* %1612, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1615, i8 zeroext 0) #8, !dbg !10417
  %1616 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 157), align 8, !dbg !10419
  %1617 = load i32, i32* @flag_errno_math, align 4, !dbg !10419
  %tobool2485 = icmp eq i32 %1617, 0, !dbg !10419
  br i1 %tobool2485, label %cond.false2487, label %cond.end2490, !dbg !10419

cond.false2487:                                   ; preds = %cond.end2481
  %1618 = load i32, i32* @flag_rounding_math, align 4, !dbg !10419
  %tobool2488 = icmp eq i32 %1618, 0, !dbg !10419
  %cond2489 = select i1 %tobool2488, i64 46, i64 48, !dbg !10419
  br label %cond.end2490, !dbg !10419

cond.end2490:                                     ; preds = %cond.end2481, %cond.false2487
  %cond2491 = phi i64 [ %cond2489, %cond.false2487 ], [ 45, %cond.end2481 ], !dbg !10419
  %arrayidx2493 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2491, !dbg !10419
  %1619 = load %union.tree_node*, %union.tree_node** %arrayidx2493, align 8, !dbg !10419
  tail call fastcc void @def_builtin_1(i32 250, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.672, i64 0, i64 0), i32 3, %union.tree_node* %1616, %union.tree_node* %1616, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1619, i8 zeroext 0) #8, !dbg !10419
  %1620 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 159), align 8, !dbg !10421
  %1621 = load i32, i32* @flag_errno_math, align 4, !dbg !10421
  %tobool2494 = icmp eq i32 %1621, 0, !dbg !10421
  br i1 %tobool2494, label %cond.false2496, label %cond.end2499, !dbg !10421

cond.false2496:                                   ; preds = %cond.end2490
  %1622 = load i32, i32* @flag_rounding_math, align 4, !dbg !10421
  %tobool2497 = icmp eq i32 %1622, 0, !dbg !10421
  %cond2498 = select i1 %tobool2497, i64 46, i64 48, !dbg !10421
  br label %cond.end2499, !dbg !10421

cond.end2499:                                     ; preds = %cond.end2490, %cond.false2496
  %cond2500 = phi i64 [ %cond2498, %cond.false2496 ], [ 45, %cond.end2490 ], !dbg !10421
  %arrayidx2502 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2500, !dbg !10421
  %1623 = load %union.tree_node*, %union.tree_node** %arrayidx2502, align 8, !dbg !10421
  tail call fastcc void @def_builtin_1(i32 251, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.673, i64 0, i64 0), i32 3, %union.tree_node* %1620, %union.tree_node* %1620, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1623, i8 zeroext 0) #8, !dbg !10421
  %1624 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 74), align 16, !dbg !10423
  %1625 = load i32, i32* @flag_isoc99, align 4, !dbg !10423
  %tobool2503 = icmp eq i32 %1625, 0, !dbg !10423
  %conv2506 = zext i1 %tobool2503 to i8, !dbg !10423
  %1626 = load i32, i32* @flag_rounding_math, align 4, !dbg !10423
  %tobool2507 = icmp eq i32 %1626, 0, !dbg !10423
  %cond2508 = select i1 %tobool2507, i64 46, i64 48, !dbg !10423
  %arrayidx2510 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2508, !dbg !10423
  %1627 = load %union.tree_node*, %union.tree_node** %arrayidx2510, align 16, !dbg !10423
  %1628 = load i32, i32* @linux_uclibc, align 4, !dbg !10423
  %1629 = trunc i32 %1628 to i8, !dbg !10423
  %1630 = and i8 %1629, 1, !dbg !10423
  %1631 = xor i8 %1630, 1, !dbg !10423
  tail call fastcc void @def_builtin_1(i32 252, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.674, i64 0, i64 0), i32 3, %union.tree_node* %1624, %union.tree_node* %1624, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2506, %union.tree_node* %1627, i8 zeroext %1631) #8, !dbg !10423
  %1632 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 73), align 8, !dbg !10425
  %1633 = load i32, i32* @flag_isoc99, align 4, !dbg !10425
  %tobool2515 = icmp eq i32 %1633, 0, !dbg !10425
  %conv2518 = zext i1 %tobool2515 to i8, !dbg !10425
  %1634 = load i32, i32* @flag_rounding_math, align 4, !dbg !10425
  %tobool2519 = icmp eq i32 %1634, 0, !dbg !10425
  %cond2520 = select i1 %tobool2519, i64 46, i64 48, !dbg !10425
  %arrayidx2522 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2520, !dbg !10425
  %1635 = load %union.tree_node*, %union.tree_node** %arrayidx2522, align 16, !dbg !10425
  %1636 = load i32, i32* @linux_uclibc, align 4, !dbg !10425
  %1637 = trunc i32 %1636 to i8, !dbg !10425
  %1638 = and i8 %1637, 1, !dbg !10425
  %1639 = xor i8 %1638, 1, !dbg !10425
  tail call fastcc void @def_builtin_1(i32 253, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.675, i64 0, i64 0), i32 3, %union.tree_node* %1632, %union.tree_node* %1632, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2518, %union.tree_node* %1635, i8 zeroext %1639) #8, !dbg !10425
  %1640 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 75), align 8, !dbg !10427
  %1641 = load i32, i32* @flag_isoc99, align 4, !dbg !10427
  %tobool2527 = icmp eq i32 %1641, 0, !dbg !10427
  %conv2530 = zext i1 %tobool2527 to i8, !dbg !10427
  %1642 = load i32, i32* @flag_rounding_math, align 4, !dbg !10427
  %tobool2531 = icmp eq i32 %1642, 0, !dbg !10427
  %cond2532 = select i1 %tobool2531, i64 46, i64 48, !dbg !10427
  %arrayidx2534 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2532, !dbg !10427
  %1643 = load %union.tree_node*, %union.tree_node** %arrayidx2534, align 16, !dbg !10427
  %1644 = load i32, i32* @linux_uclibc, align 4, !dbg !10427
  %1645 = trunc i32 %1644 to i8, !dbg !10427
  %1646 = and i8 %1645, 1, !dbg !10427
  %1647 = xor i8 %1646, 1, !dbg !10427
  tail call fastcc void @def_builtin_1(i32 254, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.676, i64 0, i64 0), i32 3, %union.tree_node* %1640, %union.tree_node* %1640, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2530, %union.tree_node* %1643, i8 zeroext %1647) #8, !dbg !10427
  %1648 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10429
  %1649 = load i32, i32* @flag_isoc99, align 4, !dbg !10429
  %tobool2539 = icmp eq i32 %1649, 0, !dbg !10429
  %conv2542 = zext i1 %tobool2539 to i8, !dbg !10429
  %1650 = load i32, i32* @flag_rounding_math, align 4, !dbg !10429
  %tobool2543 = icmp eq i32 %1650, 0, !dbg !10429
  %cond2544 = select i1 %tobool2543, i64 46, i64 48, !dbg !10429
  %arrayidx2546 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2544, !dbg !10429
  %1651 = load %union.tree_node*, %union.tree_node** %arrayidx2546, align 16, !dbg !10429
  %1652 = load i32, i32* @linux_uclibc, align 4, !dbg !10429
  %1653 = trunc i32 %1652 to i8, !dbg !10429
  %1654 = and i8 %1653, 1, !dbg !10429
  %1655 = xor i8 %1654, 1, !dbg !10429
  tail call fastcc void @def_builtin_1(i32 255, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.677, i64 0, i64 0), i32 3, %union.tree_node* %1648, %union.tree_node* %1648, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2542, %union.tree_node* %1651, i8 zeroext %1655) #8, !dbg !10429
  %1656 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10431
  %1657 = load i32, i32* @flag_isoc99, align 4, !dbg !10431
  %tobool2551 = icmp eq i32 %1657, 0, !dbg !10431
  %conv2554 = zext i1 %tobool2551 to i8, !dbg !10431
  %1658 = load i32, i32* @flag_rounding_math, align 4, !dbg !10431
  %tobool2555 = icmp eq i32 %1658, 0, !dbg !10431
  %cond2556 = select i1 %tobool2555, i64 46, i64 48, !dbg !10431
  %arrayidx2558 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2556, !dbg !10431
  %1659 = load %union.tree_node*, %union.tree_node** %arrayidx2558, align 16, !dbg !10431
  %1660 = load i32, i32* @linux_uclibc, align 4, !dbg !10431
  %1661 = trunc i32 %1660 to i8, !dbg !10431
  %1662 = and i8 %1661, 1, !dbg !10431
  %1663 = xor i8 %1662, 1, !dbg !10431
  tail call fastcc void @def_builtin_1(i32 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.678, i64 0, i64 0), i32 3, %union.tree_node* %1656, %union.tree_node* %1656, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2554, %union.tree_node* %1659, i8 zeroext %1663) #8, !dbg !10431
  %1664 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10433
  %1665 = load i32, i32* @flag_isoc99, align 4, !dbg !10433
  %tobool2563 = icmp eq i32 %1665, 0, !dbg !10433
  %conv2566 = zext i1 %tobool2563 to i8, !dbg !10433
  %1666 = load i32, i32* @flag_rounding_math, align 4, !dbg !10433
  %tobool2567 = icmp eq i32 %1666, 0, !dbg !10433
  %cond2568 = select i1 %tobool2567, i64 46, i64 48, !dbg !10433
  %arrayidx2570 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2568, !dbg !10433
  %1667 = load %union.tree_node*, %union.tree_node** %arrayidx2570, align 16, !dbg !10433
  %1668 = load i32, i32* @linux_uclibc, align 4, !dbg !10433
  %1669 = trunc i32 %1668 to i8, !dbg !10433
  %1670 = and i8 %1669, 1, !dbg !10433
  %1671 = xor i8 %1670, 1, !dbg !10433
  tail call fastcc void @def_builtin_1(i32 257, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.679, i64 0, i64 0), i32 3, %union.tree_node* %1664, %union.tree_node* %1664, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2566, %union.tree_node* %1667, i8 zeroext %1671) #8, !dbg !10433
  %1672 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10435
  %1673 = load i32, i32* @flag_isoc99, align 4, !dbg !10435
  %tobool2575 = icmp eq i32 %1673, 0, !dbg !10435
  %conv2578 = zext i1 %tobool2575 to i8, !dbg !10435
  %1674 = load i32, i32* @flag_rounding_math, align 4, !dbg !10435
  %tobool2579 = icmp eq i32 %1674, 0, !dbg !10435
  %cond2580 = select i1 %tobool2579, i64 46, i64 48, !dbg !10435
  %arrayidx2582 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2580, !dbg !10435
  %1675 = load %union.tree_node*, %union.tree_node** %arrayidx2582, align 16, !dbg !10435
  %1676 = load i32, i32* @linux_uclibc, align 4, !dbg !10435
  %1677 = trunc i32 %1676 to i8, !dbg !10435
  %1678 = and i8 %1677, 1, !dbg !10435
  %1679 = xor i8 %1678, 1, !dbg !10435
  tail call fastcc void @def_builtin_1(i32 258, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.680, i64 0, i64 0), i32 3, %union.tree_node* %1672, %union.tree_node* %1672, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2578, %union.tree_node* %1675, i8 zeroext %1679) #8, !dbg !10435
  %1680 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10437
  %1681 = load i32, i32* @flag_isoc99, align 4, !dbg !10437
  %tobool2587 = icmp eq i32 %1681, 0, !dbg !10437
  %conv2590 = zext i1 %tobool2587 to i8, !dbg !10437
  %1682 = load i32, i32* @flag_rounding_math, align 4, !dbg !10437
  %tobool2591 = icmp eq i32 %1682, 0, !dbg !10437
  %cond2592 = select i1 %tobool2591, i64 46, i64 48, !dbg !10437
  %arrayidx2594 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2592, !dbg !10437
  %1683 = load %union.tree_node*, %union.tree_node** %arrayidx2594, align 16, !dbg !10437
  %1684 = load i32, i32* @linux_uclibc, align 4, !dbg !10437
  %1685 = trunc i32 %1684 to i8, !dbg !10437
  %1686 = and i8 %1685, 1, !dbg !10437
  %1687 = xor i8 %1686, 1, !dbg !10437
  tail call fastcc void @def_builtin_1(i32 259, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.681, i64 0, i64 0), i32 3, %union.tree_node* %1680, %union.tree_node* %1680, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2590, %union.tree_node* %1683, i8 zeroext %1687) #8, !dbg !10437
  %1688 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10439
  %1689 = load i32, i32* @flag_isoc99, align 4, !dbg !10439
  %tobool2599 = icmp eq i32 %1689, 0, !dbg !10439
  %conv2602 = zext i1 %tobool2599 to i8, !dbg !10439
  %1690 = load i32, i32* @flag_rounding_math, align 4, !dbg !10439
  %tobool2603 = icmp eq i32 %1690, 0, !dbg !10439
  %cond2604 = select i1 %tobool2603, i64 46, i64 48, !dbg !10439
  %arrayidx2606 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2604, !dbg !10439
  %1691 = load %union.tree_node*, %union.tree_node** %arrayidx2606, align 16, !dbg !10439
  %1692 = load i32, i32* @linux_uclibc, align 4, !dbg !10439
  %1693 = trunc i32 %1692 to i8, !dbg !10439
  %1694 = and i8 %1693, 1, !dbg !10439
  %1695 = xor i8 %1694, 1, !dbg !10439
  tail call fastcc void @def_builtin_1(i32 260, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.682, i64 0, i64 0), i32 3, %union.tree_node* %1688, %union.tree_node* %1688, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2602, %union.tree_node* %1691, i8 zeroext %1695) #8, !dbg !10439
  %1696 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 74), align 16, !dbg !10441
  %1697 = load i32, i32* @flag_isoc99, align 4, !dbg !10441
  %tobool2611 = icmp eq i32 %1697, 0, !dbg !10441
  %conv2614 = zext i1 %tobool2611 to i8, !dbg !10441
  %1698 = load i32, i32* @flag_rounding_math, align 4, !dbg !10441
  %tobool2615 = icmp eq i32 %1698, 0, !dbg !10441
  %cond2616 = select i1 %tobool2615, i64 46, i64 48, !dbg !10441
  %arrayidx2618 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2616, !dbg !10441
  %1699 = load %union.tree_node*, %union.tree_node** %arrayidx2618, align 16, !dbg !10441
  %1700 = load i32, i32* @linux_uclibc, align 4, !dbg !10441
  %1701 = trunc i32 %1700 to i8, !dbg !10441
  %1702 = and i8 %1701, 1, !dbg !10441
  %1703 = xor i8 %1702, 1, !dbg !10441
  tail call fastcc void @def_builtin_1(i32 261, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.683, i64 0, i64 0), i32 3, %union.tree_node* %1696, %union.tree_node* %1696, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2614, %union.tree_node* %1699, i8 zeroext %1703) #8, !dbg !10441
  %1704 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 73), align 8, !dbg !10443
  %1705 = load i32, i32* @flag_isoc99, align 4, !dbg !10443
  %tobool2623 = icmp eq i32 %1705, 0, !dbg !10443
  %conv2626 = zext i1 %tobool2623 to i8, !dbg !10443
  %1706 = load i32, i32* @flag_rounding_math, align 4, !dbg !10443
  %tobool2627 = icmp eq i32 %1706, 0, !dbg !10443
  %cond2628 = select i1 %tobool2627, i64 46, i64 48, !dbg !10443
  %arrayidx2630 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2628, !dbg !10443
  %1707 = load %union.tree_node*, %union.tree_node** %arrayidx2630, align 16, !dbg !10443
  %1708 = load i32, i32* @linux_uclibc, align 4, !dbg !10443
  %1709 = trunc i32 %1708 to i8, !dbg !10443
  %1710 = and i8 %1709, 1, !dbg !10443
  %1711 = xor i8 %1710, 1, !dbg !10443
  tail call fastcc void @def_builtin_1(i32 262, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.684, i64 0, i64 0), i32 3, %union.tree_node* %1704, %union.tree_node* %1704, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2626, %union.tree_node* %1707, i8 zeroext %1711) #8, !dbg !10443
  %1712 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 75), align 8, !dbg !10445
  %1713 = load i32, i32* @flag_isoc99, align 4, !dbg !10445
  %tobool2635 = icmp eq i32 %1713, 0, !dbg !10445
  %conv2638 = zext i1 %tobool2635 to i8, !dbg !10445
  %1714 = load i32, i32* @flag_rounding_math, align 4, !dbg !10445
  %tobool2639 = icmp eq i32 %1714, 0, !dbg !10445
  %cond2640 = select i1 %tobool2639, i64 46, i64 48, !dbg !10445
  %arrayidx2642 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2640, !dbg !10445
  %1715 = load %union.tree_node*, %union.tree_node** %arrayidx2642, align 16, !dbg !10445
  %1716 = load i32, i32* @linux_uclibc, align 4, !dbg !10445
  %1717 = trunc i32 %1716 to i8, !dbg !10445
  %1718 = and i8 %1717, 1, !dbg !10445
  %1719 = xor i8 %1718, 1, !dbg !10445
  tail call fastcc void @def_builtin_1(i32 263, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.685, i64 0, i64 0), i32 3, %union.tree_node* %1712, %union.tree_node* %1712, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2638, %union.tree_node* %1715, i8 zeroext %1719) #8, !dbg !10445
  %1720 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10447
  %1721 = load i32, i32* @flag_isoc99, align 4, !dbg !10447
  %tobool2647 = icmp eq i32 %1721, 0, !dbg !10447
  %conv2650 = zext i1 %tobool2647 to i8, !dbg !10447
  %1722 = load i32, i32* @flag_rounding_math, align 4, !dbg !10447
  %tobool2651 = icmp eq i32 %1722, 0, !dbg !10447
  %cond2652 = select i1 %tobool2651, i64 46, i64 48, !dbg !10447
  %arrayidx2654 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2652, !dbg !10447
  %1723 = load %union.tree_node*, %union.tree_node** %arrayidx2654, align 16, !dbg !10447
  %1724 = load i32, i32* @linux_uclibc, align 4, !dbg !10447
  %1725 = trunc i32 %1724 to i8, !dbg !10447
  %1726 = and i8 %1725, 1, !dbg !10447
  %1727 = xor i8 %1726, 1, !dbg !10447
  tail call fastcc void @def_builtin_1(i32 264, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.686, i64 0, i64 0), i32 3, %union.tree_node* %1720, %union.tree_node* %1720, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2650, %union.tree_node* %1723, i8 zeroext %1727) #8, !dbg !10447
  %1728 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10449
  %1729 = load i32, i32* @flag_isoc99, align 4, !dbg !10449
  %tobool2659 = icmp eq i32 %1729, 0, !dbg !10449
  %conv2662 = zext i1 %tobool2659 to i8, !dbg !10449
  %1730 = load i32, i32* @flag_rounding_math, align 4, !dbg !10449
  %tobool2663 = icmp eq i32 %1730, 0, !dbg !10449
  %cond2664 = select i1 %tobool2663, i64 46, i64 48, !dbg !10449
  %arrayidx2666 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2664, !dbg !10449
  %1731 = load %union.tree_node*, %union.tree_node** %arrayidx2666, align 16, !dbg !10449
  %1732 = load i32, i32* @linux_uclibc, align 4, !dbg !10449
  %1733 = trunc i32 %1732 to i8, !dbg !10449
  %1734 = and i8 %1733, 1, !dbg !10449
  %1735 = xor i8 %1734, 1, !dbg !10449
  tail call fastcc void @def_builtin_1(i32 265, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.687, i64 0, i64 0), i32 3, %union.tree_node* %1728, %union.tree_node* %1728, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2662, %union.tree_node* %1731, i8 zeroext %1735) #8, !dbg !10449
  %1736 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10451
  %1737 = load i32, i32* @flag_isoc99, align 4, !dbg !10451
  %tobool2671 = icmp eq i32 %1737, 0, !dbg !10451
  %conv2674 = zext i1 %tobool2671 to i8, !dbg !10451
  %1738 = load i32, i32* @flag_rounding_math, align 4, !dbg !10451
  %tobool2675 = icmp eq i32 %1738, 0, !dbg !10451
  %cond2676 = select i1 %tobool2675, i64 46, i64 48, !dbg !10451
  %arrayidx2678 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2676, !dbg !10451
  %1739 = load %union.tree_node*, %union.tree_node** %arrayidx2678, align 16, !dbg !10451
  %1740 = load i32, i32* @linux_uclibc, align 4, !dbg !10451
  %1741 = trunc i32 %1740 to i8, !dbg !10451
  %1742 = and i8 %1741, 1, !dbg !10451
  %1743 = xor i8 %1742, 1, !dbg !10451
  tail call fastcc void @def_builtin_1(i32 266, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.688, i64 0, i64 0), i32 3, %union.tree_node* %1736, %union.tree_node* %1736, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2674, %union.tree_node* %1739, i8 zeroext %1743) #8, !dbg !10451
  %1744 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10453
  %1745 = load i32, i32* @flag_isoc99, align 4, !dbg !10453
  %tobool2683 = icmp eq i32 %1745, 0, !dbg !10453
  %conv2686 = zext i1 %tobool2683 to i8, !dbg !10453
  %1746 = load i32, i32* @flag_rounding_math, align 4, !dbg !10453
  %tobool2687 = icmp eq i32 %1746, 0, !dbg !10453
  %cond2688 = select i1 %tobool2687, i64 46, i64 48, !dbg !10453
  %arrayidx2690 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2688, !dbg !10453
  %1747 = load %union.tree_node*, %union.tree_node** %arrayidx2690, align 16, !dbg !10453
  %1748 = load i32, i32* @linux_uclibc, align 4, !dbg !10453
  %1749 = trunc i32 %1748 to i8, !dbg !10453
  %1750 = and i8 %1749, 1, !dbg !10453
  %1751 = xor i8 %1750, 1, !dbg !10453
  tail call fastcc void @def_builtin_1(i32 267, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.689, i64 0, i64 0), i32 3, %union.tree_node* %1744, %union.tree_node* %1744, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2686, %union.tree_node* %1747, i8 zeroext %1751) #8, !dbg !10453
  %1752 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10455
  %1753 = load i32, i32* @flag_isoc99, align 4, !dbg !10455
  %tobool2695 = icmp eq i32 %1753, 0, !dbg !10455
  %conv2698 = zext i1 %tobool2695 to i8, !dbg !10455
  %1754 = load i32, i32* @flag_rounding_math, align 4, !dbg !10455
  %tobool2699 = icmp eq i32 %1754, 0, !dbg !10455
  %cond2700 = select i1 %tobool2699, i64 46, i64 48, !dbg !10455
  %arrayidx2702 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2700, !dbg !10455
  %1755 = load %union.tree_node*, %union.tree_node** %arrayidx2702, align 16, !dbg !10455
  %1756 = load i32, i32* @linux_uclibc, align 4, !dbg !10455
  %1757 = trunc i32 %1756 to i8, !dbg !10455
  %1758 = and i8 %1757, 1, !dbg !10455
  %1759 = xor i8 %1758, 1, !dbg !10455
  tail call fastcc void @def_builtin_1(i32 268, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.690, i64 0, i64 0), i32 3, %union.tree_node* %1752, %union.tree_node* %1752, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2698, %union.tree_node* %1755, i8 zeroext %1759) #8, !dbg !10455
  %1760 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10457
  %1761 = load i32, i32* @flag_isoc99, align 4, !dbg !10457
  %tobool2707 = icmp eq i32 %1761, 0, !dbg !10457
  %conv2710 = zext i1 %tobool2707 to i8, !dbg !10457
  %1762 = load i32, i32* @flag_rounding_math, align 4, !dbg !10457
  %tobool2711 = icmp eq i32 %1762, 0, !dbg !10457
  %cond2712 = select i1 %tobool2711, i64 46, i64 48, !dbg !10457
  %arrayidx2714 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2712, !dbg !10457
  %1763 = load %union.tree_node*, %union.tree_node** %arrayidx2714, align 16, !dbg !10457
  %1764 = load i32, i32* @linux_uclibc, align 4, !dbg !10457
  %1765 = trunc i32 %1764 to i8, !dbg !10457
  %1766 = and i8 %1765, 1, !dbg !10457
  %1767 = xor i8 %1766, 1, !dbg !10457
  tail call fastcc void @def_builtin_1(i32 269, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.691, i64 0, i64 0), i32 3, %union.tree_node* %1760, %union.tree_node* %1760, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2710, %union.tree_node* %1763, i8 zeroext %1767) #8, !dbg !10457
  %1768 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10459
  %1769 = load i32, i32* @flag_isoc99, align 4, !dbg !10459
  %tobool2719 = icmp eq i32 %1769, 0, !dbg !10459
  %conv2722 = zext i1 %tobool2719 to i8, !dbg !10459
  %1770 = load i32, i32* @flag_rounding_math, align 4, !dbg !10459
  %tobool2723 = icmp eq i32 %1770, 0, !dbg !10459
  %cond2724 = select i1 %tobool2723, i64 46, i64 48, !dbg !10459
  %arrayidx2726 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2724, !dbg !10459
  %1771 = load %union.tree_node*, %union.tree_node** %arrayidx2726, align 16, !dbg !10459
  %1772 = load i32, i32* @linux_uclibc, align 4, !dbg !10459
  %1773 = trunc i32 %1772 to i8, !dbg !10459
  %1774 = and i8 %1773, 1, !dbg !10459
  %1775 = xor i8 %1774, 1, !dbg !10459
  tail call fastcc void @def_builtin_1(i32 270, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.692, i64 0, i64 0), i32 3, %union.tree_node* %1768, %union.tree_node* %1768, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2722, %union.tree_node* %1771, i8 zeroext %1775) #8, !dbg !10459
  %1776 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10461
  %1777 = load i32, i32* @flag_isoc99, align 4, !dbg !10461
  %tobool2731 = icmp eq i32 %1777, 0, !dbg !10461
  %conv2734 = zext i1 %tobool2731 to i8, !dbg !10461
  %1778 = load i32, i32* @flag_rounding_math, align 4, !dbg !10461
  %tobool2735 = icmp eq i32 %1778, 0, !dbg !10461
  %cond2736 = select i1 %tobool2735, i64 46, i64 48, !dbg !10461
  %arrayidx2738 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2736, !dbg !10461
  %1779 = load %union.tree_node*, %union.tree_node** %arrayidx2738, align 16, !dbg !10461
  %1780 = load i32, i32* @linux_uclibc, align 4, !dbg !10461
  %1781 = trunc i32 %1780 to i8, !dbg !10461
  %1782 = and i8 %1781, 1, !dbg !10461
  %1783 = xor i8 %1782, 1, !dbg !10461
  tail call fastcc void @def_builtin_1(i32 271, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.693, i64 0, i64 0), i32 3, %union.tree_node* %1776, %union.tree_node* %1776, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2734, %union.tree_node* %1779, i8 zeroext %1783) #8, !dbg !10461
  %1784 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10463
  %1785 = load i32, i32* @flag_isoc99, align 4, !dbg !10463
  %tobool2743 = icmp eq i32 %1785, 0, !dbg !10463
  %conv2746 = zext i1 %tobool2743 to i8, !dbg !10463
  %1786 = load i32, i32* @flag_rounding_math, align 4, !dbg !10463
  %tobool2747 = icmp eq i32 %1786, 0, !dbg !10463
  %cond2748 = select i1 %tobool2747, i64 46, i64 48, !dbg !10463
  %arrayidx2750 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2748, !dbg !10463
  %1787 = load %union.tree_node*, %union.tree_node** %arrayidx2750, align 16, !dbg !10463
  %1788 = load i32, i32* @linux_uclibc, align 4, !dbg !10463
  %1789 = trunc i32 %1788 to i8, !dbg !10463
  %1790 = and i8 %1789, 1, !dbg !10463
  %1791 = xor i8 %1790, 1, !dbg !10463
  tail call fastcc void @def_builtin_1(i32 272, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.694, i64 0, i64 0), i32 3, %union.tree_node* %1784, %union.tree_node* %1784, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2746, %union.tree_node* %1787, i8 zeroext %1791) #8, !dbg !10463
  %1792 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10465
  %1793 = load i32, i32* @flag_isoc99, align 4, !dbg !10465
  %tobool2755 = icmp eq i32 %1793, 0, !dbg !10465
  %conv2758 = zext i1 %tobool2755 to i8, !dbg !10465
  %1794 = load i32, i32* @flag_rounding_math, align 4, !dbg !10465
  %tobool2759 = icmp eq i32 %1794, 0, !dbg !10465
  %cond2760 = select i1 %tobool2759, i64 46, i64 48, !dbg !10465
  %arrayidx2762 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2760, !dbg !10465
  %1795 = load %union.tree_node*, %union.tree_node** %arrayidx2762, align 16, !dbg !10465
  %1796 = load i32, i32* @linux_uclibc, align 4, !dbg !10465
  %1797 = trunc i32 %1796 to i8, !dbg !10465
  %1798 = and i8 %1797, 1, !dbg !10465
  %1799 = xor i8 %1798, 1, !dbg !10465
  tail call fastcc void @def_builtin_1(i32 273, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.695, i64 0, i64 0), i32 3, %union.tree_node* %1792, %union.tree_node* %1792, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2758, %union.tree_node* %1795, i8 zeroext %1799) #8, !dbg !10465
  %1800 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10467
  %1801 = load i32, i32* @flag_isoc99, align 4, !dbg !10467
  %tobool2767 = icmp eq i32 %1801, 0, !dbg !10467
  %conv2770 = zext i1 %tobool2767 to i8, !dbg !10467
  %1802 = load i32, i32* @flag_rounding_math, align 4, !dbg !10467
  %tobool2771 = icmp eq i32 %1802, 0, !dbg !10467
  %cond2772 = select i1 %tobool2771, i64 46, i64 48, !dbg !10467
  %arrayidx2774 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2772, !dbg !10467
  %1803 = load %union.tree_node*, %union.tree_node** %arrayidx2774, align 16, !dbg !10467
  %1804 = load i32, i32* @linux_uclibc, align 4, !dbg !10467
  %1805 = trunc i32 %1804 to i8, !dbg !10467
  %1806 = and i8 %1805, 1, !dbg !10467
  %1807 = xor i8 %1806, 1, !dbg !10467
  tail call fastcc void @def_builtin_1(i32 274, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.696, i64 0, i64 0), i32 3, %union.tree_node* %1800, %union.tree_node* %1800, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2770, %union.tree_node* %1803, i8 zeroext %1807) #8, !dbg !10467
  %1808 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10469
  %1809 = load i32, i32* @flag_isoc99, align 4, !dbg !10469
  %tobool2779 = icmp eq i32 %1809, 0, !dbg !10469
  %conv2782 = zext i1 %tobool2779 to i8, !dbg !10469
  %1810 = load i32, i32* @flag_rounding_math, align 4, !dbg !10469
  %tobool2783 = icmp eq i32 %1810, 0, !dbg !10469
  %cond2784 = select i1 %tobool2783, i64 46, i64 48, !dbg !10469
  %arrayidx2786 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2784, !dbg !10469
  %1811 = load %union.tree_node*, %union.tree_node** %arrayidx2786, align 16, !dbg !10469
  %1812 = load i32, i32* @linux_uclibc, align 4, !dbg !10469
  %1813 = trunc i32 %1812 to i8, !dbg !10469
  %1814 = and i8 %1813, 1, !dbg !10469
  %1815 = xor i8 %1814, 1, !dbg !10469
  tail call fastcc void @def_builtin_1(i32 275, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.697, i64 0, i64 0), i32 3, %union.tree_node* %1808, %union.tree_node* %1808, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2782, %union.tree_node* %1811, i8 zeroext %1815) #8, !dbg !10469
  %1816 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10471
  %1817 = load i32, i32* @flag_isoc99, align 4, !dbg !10471
  %tobool2791 = icmp eq i32 %1817, 0, !dbg !10471
  %conv2794 = zext i1 %tobool2791 to i8, !dbg !10471
  %1818 = load i32, i32* @flag_rounding_math, align 4, !dbg !10471
  %tobool2795 = icmp eq i32 %1818, 0, !dbg !10471
  %cond2796 = select i1 %tobool2795, i64 46, i64 48, !dbg !10471
  %arrayidx2798 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2796, !dbg !10471
  %1819 = load %union.tree_node*, %union.tree_node** %arrayidx2798, align 16, !dbg !10471
  %1820 = load i32, i32* @linux_uclibc, align 4, !dbg !10471
  %1821 = trunc i32 %1820 to i8, !dbg !10471
  %1822 = and i8 %1821, 1, !dbg !10471
  %1823 = xor i8 %1822, 1, !dbg !10471
  tail call fastcc void @def_builtin_1(i32 276, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.698, i64 0, i64 0), i32 3, %union.tree_node* %1816, %union.tree_node* %1816, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2794, %union.tree_node* %1819, i8 zeroext %1823) #8, !dbg !10471
  %1824 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10473
  %1825 = load i32, i32* @flag_isoc99, align 4, !dbg !10473
  %tobool2803 = icmp eq i32 %1825, 0, !dbg !10473
  %conv2806 = zext i1 %tobool2803 to i8, !dbg !10473
  %1826 = load i32, i32* @flag_rounding_math, align 4, !dbg !10473
  %tobool2807 = icmp eq i32 %1826, 0, !dbg !10473
  %cond2808 = select i1 %tobool2807, i64 46, i64 48, !dbg !10473
  %arrayidx2810 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2808, !dbg !10473
  %1827 = load %union.tree_node*, %union.tree_node** %arrayidx2810, align 16, !dbg !10473
  %1828 = load i32, i32* @linux_uclibc, align 4, !dbg !10473
  %1829 = trunc i32 %1828 to i8, !dbg !10473
  %1830 = and i8 %1829, 1, !dbg !10473
  %1831 = xor i8 %1830, 1, !dbg !10473
  tail call fastcc void @def_builtin_1(i32 277, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.699, i64 0, i64 0), i32 3, %union.tree_node* %1824, %union.tree_node* %1824, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2806, %union.tree_node* %1827, i8 zeroext %1831) #8, !dbg !10473
  %1832 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10475
  %1833 = load i32, i32* @flag_isoc99, align 4, !dbg !10475
  %tobool2815 = icmp eq i32 %1833, 0, !dbg !10475
  %conv2818 = zext i1 %tobool2815 to i8, !dbg !10475
  %1834 = load i32, i32* @flag_rounding_math, align 4, !dbg !10475
  %tobool2819 = icmp eq i32 %1834, 0, !dbg !10475
  %cond2820 = select i1 %tobool2819, i64 46, i64 48, !dbg !10475
  %arrayidx2822 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2820, !dbg !10475
  %1835 = load %union.tree_node*, %union.tree_node** %arrayidx2822, align 16, !dbg !10475
  %1836 = load i32, i32* @linux_uclibc, align 4, !dbg !10475
  %1837 = trunc i32 %1836 to i8, !dbg !10475
  %1838 = and i8 %1837, 1, !dbg !10475
  %1839 = xor i8 %1838, 1, !dbg !10475
  tail call fastcc void @def_builtin_1(i32 278, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.700, i64 0, i64 0), i32 3, %union.tree_node* %1832, %union.tree_node* %1832, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2818, %union.tree_node* %1835, i8 zeroext %1839) #8, !dbg !10475
  %1840 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10477
  %1841 = load i32, i32* @flag_isoc99, align 4, !dbg !10477
  %tobool2827 = icmp eq i32 %1841, 0, !dbg !10477
  %conv2830 = zext i1 %tobool2827 to i8, !dbg !10477
  %1842 = load i32, i32* @flag_rounding_math, align 4, !dbg !10477
  %tobool2831 = icmp eq i32 %1842, 0, !dbg !10477
  %cond2832 = select i1 %tobool2831, i64 46, i64 48, !dbg !10477
  %arrayidx2834 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2832, !dbg !10477
  %1843 = load %union.tree_node*, %union.tree_node** %arrayidx2834, align 16, !dbg !10477
  %1844 = load i32, i32* @linux_uclibc, align 4, !dbg !10477
  %1845 = trunc i32 %1844 to i8, !dbg !10477
  %1846 = and i8 %1845, 1, !dbg !10477
  %1847 = xor i8 %1846, 1, !dbg !10477
  tail call fastcc void @def_builtin_1(i32 279, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.701, i64 0, i64 0), i32 3, %union.tree_node* %1840, %union.tree_node* %1840, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2830, %union.tree_node* %1843, i8 zeroext %1847) #8, !dbg !10477
  %1848 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10479
  %1849 = load i32, i32* @flag_isoc99, align 4, !dbg !10479
  %tobool2839 = icmp eq i32 %1849, 0, !dbg !10479
  %conv2842 = zext i1 %tobool2839 to i8, !dbg !10479
  %1850 = load i32, i32* @flag_rounding_math, align 4, !dbg !10479
  %tobool2843 = icmp eq i32 %1850, 0, !dbg !10479
  %cond2844 = select i1 %tobool2843, i64 46, i64 48, !dbg !10479
  %arrayidx2846 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2844, !dbg !10479
  %1851 = load %union.tree_node*, %union.tree_node** %arrayidx2846, align 16, !dbg !10479
  %1852 = load i32, i32* @linux_uclibc, align 4, !dbg !10479
  %1853 = trunc i32 %1852 to i8, !dbg !10479
  %1854 = and i8 %1853, 1, !dbg !10479
  %1855 = xor i8 %1854, 1, !dbg !10479
  tail call fastcc void @def_builtin_1(i32 280, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.702, i64 0, i64 0), i32 3, %union.tree_node* %1848, %union.tree_node* %1848, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2842, %union.tree_node* %1851, i8 zeroext %1855) #8, !dbg !10479
  %1856 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10481
  %1857 = load i32, i32* @flag_isoc99, align 4, !dbg !10481
  %tobool2851 = icmp eq i32 %1857, 0, !dbg !10481
  %conv2854 = zext i1 %tobool2851 to i8, !dbg !10481
  %1858 = load i32, i32* @flag_rounding_math, align 4, !dbg !10481
  %tobool2855 = icmp eq i32 %1858, 0, !dbg !10481
  %cond2856 = select i1 %tobool2855, i64 46, i64 48, !dbg !10481
  %arrayidx2858 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2856, !dbg !10481
  %1859 = load %union.tree_node*, %union.tree_node** %arrayidx2858, align 16, !dbg !10481
  %1860 = load i32, i32* @linux_uclibc, align 4, !dbg !10481
  %1861 = trunc i32 %1860 to i8, !dbg !10481
  %1862 = and i8 %1861, 1, !dbg !10481
  %1863 = xor i8 %1862, 1, !dbg !10481
  tail call fastcc void @def_builtin_1(i32 281, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.703, i64 0, i64 0), i32 3, %union.tree_node* %1856, %union.tree_node* %1856, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2854, %union.tree_node* %1859, i8 zeroext %1863) #8, !dbg !10481
  %1864 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10483
  %1865 = load i32, i32* @flag_isoc99, align 4, !dbg !10483
  %tobool2863 = icmp eq i32 %1865, 0, !dbg !10483
  %conv2866 = zext i1 %tobool2863 to i8, !dbg !10483
  %1866 = load i32, i32* @flag_rounding_math, align 4, !dbg !10483
  %tobool2867 = icmp eq i32 %1866, 0, !dbg !10483
  %cond2868 = select i1 %tobool2867, i64 46, i64 48, !dbg !10483
  %arrayidx2870 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2868, !dbg !10483
  %1867 = load %union.tree_node*, %union.tree_node** %arrayidx2870, align 16, !dbg !10483
  %1868 = load i32, i32* @linux_uclibc, align 4, !dbg !10483
  %1869 = trunc i32 %1868 to i8, !dbg !10483
  %1870 = and i8 %1869, 1, !dbg !10483
  %1871 = xor i8 %1870, 1, !dbg !10483
  tail call fastcc void @def_builtin_1(i32 282, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.704, i64 0, i64 0), i32 3, %union.tree_node* %1864, %union.tree_node* %1864, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2866, %union.tree_node* %1867, i8 zeroext %1871) #8, !dbg !10483
  %1872 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10485
  %1873 = load i32, i32* @flag_isoc99, align 4, !dbg !10485
  %tobool2875 = icmp eq i32 %1873, 0, !dbg !10485
  %conv2878 = zext i1 %tobool2875 to i8, !dbg !10485
  %1874 = load i32, i32* @flag_rounding_math, align 4, !dbg !10485
  %tobool2879 = icmp eq i32 %1874, 0, !dbg !10485
  %cond2880 = select i1 %tobool2879, i64 46, i64 48, !dbg !10485
  %arrayidx2882 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2880, !dbg !10485
  %1875 = load %union.tree_node*, %union.tree_node** %arrayidx2882, align 16, !dbg !10485
  %1876 = load i32, i32* @linux_uclibc, align 4, !dbg !10485
  %1877 = trunc i32 %1876 to i8, !dbg !10485
  %1878 = and i8 %1877, 1, !dbg !10485
  %1879 = xor i8 %1878, 1, !dbg !10485
  tail call fastcc void @def_builtin_1(i32 283, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.705, i64 0, i64 0), i32 3, %union.tree_node* %1872, %union.tree_node* %1872, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2878, %union.tree_node* %1875, i8 zeroext %1879) #8, !dbg !10485
  %1880 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10487
  %1881 = load i32, i32* @flag_isoc99, align 4, !dbg !10487
  %tobool2887 = icmp eq i32 %1881, 0, !dbg !10487
  %conv2890 = zext i1 %tobool2887 to i8, !dbg !10487
  %1882 = load i32, i32* @flag_rounding_math, align 4, !dbg !10487
  %tobool2891 = icmp eq i32 %1882, 0, !dbg !10487
  %cond2892 = select i1 %tobool2891, i64 46, i64 48, !dbg !10487
  %arrayidx2894 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2892, !dbg !10487
  %1883 = load %union.tree_node*, %union.tree_node** %arrayidx2894, align 16, !dbg !10487
  %1884 = load i32, i32* @linux_uclibc, align 4, !dbg !10487
  %1885 = trunc i32 %1884 to i8, !dbg !10487
  %1886 = and i8 %1885, 1, !dbg !10487
  %1887 = xor i8 %1886, 1, !dbg !10487
  tail call fastcc void @def_builtin_1(i32 284, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.706, i64 0, i64 0), i32 3, %union.tree_node* %1880, %union.tree_node* %1880, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2890, %union.tree_node* %1883, i8 zeroext %1887) #8, !dbg !10487
  %1888 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 77), align 8, !dbg !10489
  %1889 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10489
  %1890 = load i32, i32* @flag_rounding_math, align 4, !dbg !10489
  %tobool2899 = icmp eq i32 %1890, 0, !dbg !10489
  %cond2900 = select i1 %tobool2899, i64 46, i64 48, !dbg !10489
  %arrayidx2902 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2900, !dbg !10489
  %1891 = load %union.tree_node*, %union.tree_node** %arrayidx2902, align 16, !dbg !10489
  tail call fastcc void @def_builtin_1(i32 285, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.707, i64 0, i64 0), i32 3, %union.tree_node* %1888, %union.tree_node* %1889, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1891, i8 zeroext 1) #8, !dbg !10489
  %1892 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 76), align 16, !dbg !10491
  %1893 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10491
  %1894 = load i32, i32* @flag_rounding_math, align 4, !dbg !10491
  %tobool2903 = icmp eq i32 %1894, 0, !dbg !10491
  %cond2904 = select i1 %tobool2903, i64 46, i64 48, !dbg !10491
  %arrayidx2906 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2904, !dbg !10491
  %1895 = load %union.tree_node*, %union.tree_node** %arrayidx2906, align 16, !dbg !10491
  tail call fastcc void @def_builtin_1(i32 286, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.708, i64 0, i64 0), i32 3, %union.tree_node* %1892, %union.tree_node* %1893, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1895, i8 zeroext 1) #8, !dbg !10491
  %1896 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 78), align 16, !dbg !10493
  %1897 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10493
  %1898 = load i32, i32* @flag_rounding_math, align 4, !dbg !10493
  %tobool2907 = icmp eq i32 %1898, 0, !dbg !10493
  %cond2908 = select i1 %tobool2907, i64 46, i64 48, !dbg !10493
  %arrayidx2910 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2908, !dbg !10493
  %1899 = load %union.tree_node*, %union.tree_node** %arrayidx2910, align 16, !dbg !10493
  tail call fastcc void @def_builtin_1(i32 287, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.709, i64 0, i64 0), i32 3, %union.tree_node* %1896, %union.tree_node* %1897, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %1899, i8 zeroext 1) #8, !dbg !10493
  %1900 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 74), align 16, !dbg !10495
  %1901 = load i32, i32* @flag_isoc99, align 4, !dbg !10495
  %tobool2911 = icmp eq i32 %1901, 0, !dbg !10495
  %conv2914 = zext i1 %tobool2911 to i8, !dbg !10495
  %1902 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10495
  %1903 = load i32, i32* @linux_uclibc, align 4, !dbg !10495
  %1904 = trunc i32 %1903 to i8, !dbg !10495
  %1905 = and i8 %1904, 1, !dbg !10495
  %1906 = xor i8 %1905, 1, !dbg !10495
  tail call fastcc void @def_builtin_1(i32 288, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.710, i64 0, i64 0), i32 3, %union.tree_node* %1900, %union.tree_node* %1900, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2914, %union.tree_node* %1902, i8 zeroext %1906) #8, !dbg !10495
  %1907 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 73), align 8, !dbg !10497
  %1908 = load i32, i32* @flag_isoc99, align 4, !dbg !10497
  %tobool2919 = icmp eq i32 %1908, 0, !dbg !10497
  %conv2922 = zext i1 %tobool2919 to i8, !dbg !10497
  %1909 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10497
  %1910 = load i32, i32* @linux_uclibc, align 4, !dbg !10497
  %1911 = trunc i32 %1910 to i8, !dbg !10497
  %1912 = and i8 %1911, 1, !dbg !10497
  %1913 = xor i8 %1912, 1, !dbg !10497
  tail call fastcc void @def_builtin_1(i32 289, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.711, i64 0, i64 0), i32 3, %union.tree_node* %1907, %union.tree_node* %1907, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2922, %union.tree_node* %1909, i8 zeroext %1913) #8, !dbg !10497
  %1914 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 75), align 8, !dbg !10499
  %1915 = load i32, i32* @flag_isoc99, align 4, !dbg !10499
  %tobool2927 = icmp eq i32 %1915, 0, !dbg !10499
  %conv2930 = zext i1 %tobool2927 to i8, !dbg !10499
  %1916 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10499
  %1917 = load i32, i32* @linux_uclibc, align 4, !dbg !10499
  %1918 = trunc i32 %1917 to i8, !dbg !10499
  %1919 = and i8 %1918, 1, !dbg !10499
  %1920 = xor i8 %1919, 1, !dbg !10499
  tail call fastcc void @def_builtin_1(i32 290, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.712, i64 0, i64 0), i32 3, %union.tree_node* %1914, %union.tree_node* %1914, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2930, %union.tree_node* %1916, i8 zeroext %1920) #8, !dbg !10499
  %1921 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10501
  %1922 = load i32, i32* @flag_isoc99, align 4, !dbg !10501
  %tobool2935 = icmp eq i32 %1922, 0, !dbg !10501
  %conv2938 = zext i1 %tobool2935 to i8, !dbg !10501
  %1923 = load i32, i32* @flag_rounding_math, align 4, !dbg !10501
  %tobool2939 = icmp eq i32 %1923, 0, !dbg !10501
  %cond2940 = select i1 %tobool2939, i64 46, i64 48, !dbg !10501
  %arrayidx2942 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2940, !dbg !10501
  %1924 = load %union.tree_node*, %union.tree_node** %arrayidx2942, align 16, !dbg !10501
  %1925 = load i32, i32* @linux_uclibc, align 4, !dbg !10501
  %1926 = trunc i32 %1925 to i8, !dbg !10501
  %1927 = and i8 %1926, 1, !dbg !10501
  %1928 = xor i8 %1927, 1, !dbg !10501
  tail call fastcc void @def_builtin_1(i32 291, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.713, i64 0, i64 0), i32 3, %union.tree_node* %1921, %union.tree_node* %1921, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2938, %union.tree_node* %1924, i8 zeroext %1928) #8, !dbg !10501
  %1929 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10503
  %1930 = load i32, i32* @flag_isoc99, align 4, !dbg !10503
  %tobool2947 = icmp eq i32 %1930, 0, !dbg !10503
  %conv2950 = zext i1 %tobool2947 to i8, !dbg !10503
  %1931 = load i32, i32* @flag_rounding_math, align 4, !dbg !10503
  %tobool2951 = icmp eq i32 %1931, 0, !dbg !10503
  %cond2952 = select i1 %tobool2951, i64 46, i64 48, !dbg !10503
  %arrayidx2954 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2952, !dbg !10503
  %1932 = load %union.tree_node*, %union.tree_node** %arrayidx2954, align 16, !dbg !10503
  %1933 = load i32, i32* @linux_uclibc, align 4, !dbg !10503
  %1934 = trunc i32 %1933 to i8, !dbg !10503
  %1935 = and i8 %1934, 1, !dbg !10503
  %1936 = xor i8 %1935, 1, !dbg !10503
  tail call fastcc void @def_builtin_1(i32 292, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.714, i64 0, i64 0), i32 3, %union.tree_node* %1929, %union.tree_node* %1929, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2950, %union.tree_node* %1932, i8 zeroext %1936) #8, !dbg !10503
  %1937 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10505
  %1938 = load i32, i32* @flag_isoc99, align 4, !dbg !10505
  %tobool2959 = icmp eq i32 %1938, 0, !dbg !10505
  %conv2962 = zext i1 %tobool2959 to i8, !dbg !10505
  %1939 = load i32, i32* @flag_rounding_math, align 4, !dbg !10505
  %tobool2963 = icmp eq i32 %1939, 0, !dbg !10505
  %cond2964 = select i1 %tobool2963, i64 46, i64 48, !dbg !10505
  %arrayidx2966 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2964, !dbg !10505
  %1940 = load %union.tree_node*, %union.tree_node** %arrayidx2966, align 16, !dbg !10505
  %1941 = load i32, i32* @linux_uclibc, align 4, !dbg !10505
  %1942 = trunc i32 %1941 to i8, !dbg !10505
  %1943 = and i8 %1942, 1, !dbg !10505
  %1944 = xor i8 %1943, 1, !dbg !10505
  tail call fastcc void @def_builtin_1(i32 293, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.715, i64 0, i64 0), i32 3, %union.tree_node* %1937, %union.tree_node* %1937, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2962, %union.tree_node* %1940, i8 zeroext %1944) #8, !dbg !10505
  %1945 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10507
  %1946 = load i32, i32* @flag_rounding_math, align 4, !dbg !10507
  %tobool2971 = icmp eq i32 %1946, 0, !dbg !10507
  %cond2972 = select i1 %tobool2971, i64 46, i64 48, !dbg !10507
  %arrayidx2974 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2972, !dbg !10507
  %1947 = load %union.tree_node*, %union.tree_node** %arrayidx2974, align 16, !dbg !10507
  tail call fastcc void @def_builtin_1(i32 294, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.716, i64 0, i64 0), i32 3, %union.tree_node* %1945, %union.tree_node* %1945, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1947, i8 zeroext 0) #8, !dbg !10507
  %1948 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10509
  %1949 = load i32, i32* @flag_rounding_math, align 4, !dbg !10509
  %tobool2975 = icmp eq i32 %1949, 0, !dbg !10509
  %cond2976 = select i1 %tobool2975, i64 46, i64 48, !dbg !10509
  %arrayidx2978 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2976, !dbg !10509
  %1950 = load %union.tree_node*, %union.tree_node** %arrayidx2978, align 16, !dbg !10509
  tail call fastcc void @def_builtin_1(i32 295, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.717, i64 0, i64 0), i32 3, %union.tree_node* %1948, %union.tree_node* %1948, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1950, i8 zeroext 0) #8, !dbg !10509
  %1951 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10511
  %1952 = load i32, i32* @flag_rounding_math, align 4, !dbg !10511
  %tobool2979 = icmp eq i32 %1952, 0, !dbg !10511
  %cond2980 = select i1 %tobool2979, i64 46, i64 48, !dbg !10511
  %arrayidx2982 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond2980, !dbg !10511
  %1953 = load %union.tree_node*, %union.tree_node** %arrayidx2982, align 16, !dbg !10511
  tail call fastcc void @def_builtin_1(i32 296, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.718, i64 0, i64 0), i32 3, %union.tree_node* %1951, %union.tree_node* %1951, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %1953, i8 zeroext 0) #8, !dbg !10511
  %1954 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10513
  %1955 = load i32, i32* @flag_isoc99, align 4, !dbg !10513
  %tobool2983 = icmp eq i32 %1955, 0, !dbg !10513
  %conv2986 = zext i1 %tobool2983 to i8, !dbg !10513
  %1956 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10513
  %1957 = load i32, i32* @linux_uclibc, align 4, !dbg !10513
  %1958 = trunc i32 %1957 to i8, !dbg !10513
  %1959 = and i8 %1958, 1, !dbg !10513
  %1960 = xor i8 %1959, 1, !dbg !10513
  tail call fastcc void @def_builtin_1(i32 297, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.719, i64 0, i64 0), i32 3, %union.tree_node* %1954, %union.tree_node* %1954, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2986, %union.tree_node* %1956, i8 zeroext %1960) #8, !dbg !10513
  %1961 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10515
  %1962 = load i32, i32* @flag_isoc99, align 4, !dbg !10515
  %tobool2991 = icmp eq i32 %1962, 0, !dbg !10515
  %conv2994 = zext i1 %tobool2991 to i8, !dbg !10515
  %1963 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10515
  %1964 = load i32, i32* @linux_uclibc, align 4, !dbg !10515
  %1965 = trunc i32 %1964 to i8, !dbg !10515
  %1966 = and i8 %1965, 1, !dbg !10515
  %1967 = xor i8 %1966, 1, !dbg !10515
  tail call fastcc void @def_builtin_1(i32 298, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.720, i64 0, i64 0), i32 3, %union.tree_node* %1961, %union.tree_node* %1961, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv2994, %union.tree_node* %1963, i8 zeroext %1967) #8, !dbg !10515
  %1968 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10517
  %1969 = load i32, i32* @flag_isoc99, align 4, !dbg !10517
  %tobool2999 = icmp eq i32 %1969, 0, !dbg !10517
  %conv3002 = zext i1 %tobool2999 to i8, !dbg !10517
  %1970 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10517
  %1971 = load i32, i32* @linux_uclibc, align 4, !dbg !10517
  %1972 = trunc i32 %1971 to i8, !dbg !10517
  %1973 = and i8 %1972, 1, !dbg !10517
  %1974 = xor i8 %1973, 1, !dbg !10517
  tail call fastcc void @def_builtin_1(i32 299, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.721, i64 0, i64 0), i32 3, %union.tree_node* %1968, %union.tree_node* %1968, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3002, %union.tree_node* %1970, i8 zeroext %1974) #8, !dbg !10517
  %1975 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 167), align 8, !dbg !10519
  %1976 = load i32, i32* @flag_isoc99, align 4, !dbg !10519
  %tobool3007 = icmp eq i32 %1976, 0, !dbg !10519
  %conv3010 = zext i1 %tobool3007 to i8, !dbg !10519
  %1977 = load i32, i32* @flag_rounding_math, align 4, !dbg !10519
  %tobool3011 = icmp eq i32 %1977, 0, !dbg !10519
  %cond3012 = select i1 %tobool3011, i64 46, i64 48, !dbg !10519
  %arrayidx3014 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3012, !dbg !10519
  %1978 = load %union.tree_node*, %union.tree_node** %arrayidx3014, align 16, !dbg !10519
  %1979 = load i32, i32* @linux_uclibc, align 4, !dbg !10519
  %1980 = trunc i32 %1979 to i8, !dbg !10519
  %1981 = and i8 %1980, 1, !dbg !10519
  %1982 = xor i8 %1981, 1, !dbg !10519
  tail call fastcc void @def_builtin_1(i32 300, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.722, i64 0, i64 0), i32 3, %union.tree_node* %1975, %union.tree_node* %1975, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3010, %union.tree_node* %1978, i8 zeroext %1982) #8, !dbg !10519
  %1983 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 166), align 16, !dbg !10521
  %1984 = load i32, i32* @flag_isoc99, align 4, !dbg !10521
  %tobool3019 = icmp eq i32 %1984, 0, !dbg !10521
  %conv3022 = zext i1 %tobool3019 to i8, !dbg !10521
  %1985 = load i32, i32* @flag_rounding_math, align 4, !dbg !10521
  %tobool3023 = icmp eq i32 %1985, 0, !dbg !10521
  %cond3024 = select i1 %tobool3023, i64 46, i64 48, !dbg !10521
  %arrayidx3026 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3024, !dbg !10521
  %1986 = load %union.tree_node*, %union.tree_node** %arrayidx3026, align 16, !dbg !10521
  %1987 = load i32, i32* @linux_uclibc, align 4, !dbg !10521
  %1988 = trunc i32 %1987 to i8, !dbg !10521
  %1989 = and i8 %1988, 1, !dbg !10521
  %1990 = xor i8 %1989, 1, !dbg !10521
  tail call fastcc void @def_builtin_1(i32 301, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.723, i64 0, i64 0), i32 3, %union.tree_node* %1983, %union.tree_node* %1983, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3022, %union.tree_node* %1986, i8 zeroext %1990) #8, !dbg !10521
  %1991 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 168), align 16, !dbg !10523
  %1992 = load i32, i32* @flag_isoc99, align 4, !dbg !10523
  %tobool3031 = icmp eq i32 %1992, 0, !dbg !10523
  %conv3034 = zext i1 %tobool3031 to i8, !dbg !10523
  %1993 = load i32, i32* @flag_rounding_math, align 4, !dbg !10523
  %tobool3035 = icmp eq i32 %1993, 0, !dbg !10523
  %cond3036 = select i1 %tobool3035, i64 46, i64 48, !dbg !10523
  %arrayidx3038 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3036, !dbg !10523
  %1994 = load %union.tree_node*, %union.tree_node** %arrayidx3038, align 16, !dbg !10523
  %1995 = load i32, i32* @linux_uclibc, align 4, !dbg !10523
  %1996 = trunc i32 %1995 to i8, !dbg !10523
  %1997 = and i8 %1996, 1, !dbg !10523
  %1998 = xor i8 %1997, 1, !dbg !10523
  tail call fastcc void @def_builtin_1(i32 302, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.724, i64 0, i64 0), i32 3, %union.tree_node* %1991, %union.tree_node* %1991, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3034, %union.tree_node* %1994, i8 zeroext %1998) #8, !dbg !10523
  %1999 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10525
  %2000 = load i32, i32* @flag_isoc99, align 4, !dbg !10525
  %tobool3043 = icmp eq i32 %2000, 0, !dbg !10525
  %conv3046 = zext i1 %tobool3043 to i8, !dbg !10525
  %2001 = load i32, i32* @flag_rounding_math, align 4, !dbg !10525
  %tobool3047 = icmp eq i32 %2001, 0, !dbg !10525
  %cond3048 = select i1 %tobool3047, i64 46, i64 48, !dbg !10525
  %arrayidx3050 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3048, !dbg !10525
  %2002 = load %union.tree_node*, %union.tree_node** %arrayidx3050, align 16, !dbg !10525
  %2003 = load i32, i32* @linux_uclibc, align 4, !dbg !10525
  %2004 = trunc i32 %2003 to i8, !dbg !10525
  %2005 = and i8 %2004, 1, !dbg !10525
  %2006 = xor i8 %2005, 1, !dbg !10525
  tail call fastcc void @def_builtin_1(i32 303, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.725, i64 0, i64 0), i32 3, %union.tree_node* %1999, %union.tree_node* %1999, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3046, %union.tree_node* %2002, i8 zeroext %2006) #8, !dbg !10525
  %2007 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10527
  %2008 = load i32, i32* @flag_isoc99, align 4, !dbg !10527
  %tobool3055 = icmp eq i32 %2008, 0, !dbg !10527
  %conv3058 = zext i1 %tobool3055 to i8, !dbg !10527
  %2009 = load i32, i32* @flag_rounding_math, align 4, !dbg !10527
  %tobool3059 = icmp eq i32 %2009, 0, !dbg !10527
  %cond3060 = select i1 %tobool3059, i64 46, i64 48, !dbg !10527
  %arrayidx3062 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3060, !dbg !10527
  %2010 = load %union.tree_node*, %union.tree_node** %arrayidx3062, align 16, !dbg !10527
  %2011 = load i32, i32* @linux_uclibc, align 4, !dbg !10527
  %2012 = trunc i32 %2011 to i8, !dbg !10527
  %2013 = and i8 %2012, 1, !dbg !10527
  %2014 = xor i8 %2013, 1, !dbg !10527
  tail call fastcc void @def_builtin_1(i32 304, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.726, i64 0, i64 0), i32 3, %union.tree_node* %2007, %union.tree_node* %2007, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3058, %union.tree_node* %2010, i8 zeroext %2014) #8, !dbg !10527
  %2015 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10529
  %2016 = load i32, i32* @flag_isoc99, align 4, !dbg !10529
  %tobool3067 = icmp eq i32 %2016, 0, !dbg !10529
  %conv3070 = zext i1 %tobool3067 to i8, !dbg !10529
  %2017 = load i32, i32* @flag_rounding_math, align 4, !dbg !10529
  %tobool3071 = icmp eq i32 %2017, 0, !dbg !10529
  %cond3072 = select i1 %tobool3071, i64 46, i64 48, !dbg !10529
  %arrayidx3074 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3072, !dbg !10529
  %2018 = load %union.tree_node*, %union.tree_node** %arrayidx3074, align 16, !dbg !10529
  %2019 = load i32, i32* @linux_uclibc, align 4, !dbg !10529
  %2020 = trunc i32 %2019 to i8, !dbg !10529
  %2021 = and i8 %2020, 1, !dbg !10529
  %2022 = xor i8 %2021, 1, !dbg !10529
  tail call fastcc void @def_builtin_1(i32 305, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.727, i64 0, i64 0), i32 3, %union.tree_node* %2015, %union.tree_node* %2015, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3070, %union.tree_node* %2018, i8 zeroext %2022) #8, !dbg !10529
  %2023 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 74), align 16, !dbg !10531
  %2024 = load i32, i32* @flag_isoc99, align 4, !dbg !10531
  %tobool3079 = icmp eq i32 %2024, 0, !dbg !10531
  %conv3082 = zext i1 %tobool3079 to i8, !dbg !10531
  %2025 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10531
  %2026 = load i32, i32* @linux_uclibc, align 4, !dbg !10531
  %2027 = trunc i32 %2026 to i8, !dbg !10531
  %2028 = and i8 %2027, 1, !dbg !10531
  %2029 = xor i8 %2028, 1, !dbg !10531
  tail call fastcc void @def_builtin_1(i32 306, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.728, i64 0, i64 0), i32 3, %union.tree_node* %2023, %union.tree_node* %2023, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3082, %union.tree_node* %2025, i8 zeroext %2029) #8, !dbg !10531
  %2030 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 73), align 8, !dbg !10533
  %2031 = load i32, i32* @flag_isoc99, align 4, !dbg !10533
  %tobool3087 = icmp eq i32 %2031, 0, !dbg !10533
  %conv3090 = zext i1 %tobool3087 to i8, !dbg !10533
  %2032 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10533
  %2033 = load i32, i32* @linux_uclibc, align 4, !dbg !10533
  %2034 = trunc i32 %2033 to i8, !dbg !10533
  %2035 = and i8 %2034, 1, !dbg !10533
  %2036 = xor i8 %2035, 1, !dbg !10533
  tail call fastcc void @def_builtin_1(i32 307, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.729, i64 0, i64 0), i32 3, %union.tree_node* %2030, %union.tree_node* %2030, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3090, %union.tree_node* %2032, i8 zeroext %2036) #8, !dbg !10533
  %2037 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 75), align 8, !dbg !10535
  %2038 = load i32, i32* @flag_isoc99, align 4, !dbg !10535
  %tobool3095 = icmp eq i32 %2038, 0, !dbg !10535
  %conv3098 = zext i1 %tobool3095 to i8, !dbg !10535
  %2039 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10535
  %2040 = load i32, i32* @linux_uclibc, align 4, !dbg !10535
  %2041 = trunc i32 %2040 to i8, !dbg !10535
  %2042 = and i8 %2041, 1, !dbg !10535
  %2043 = xor i8 %2042, 1, !dbg !10535
  tail call fastcc void @def_builtin_1(i32 308, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.730, i64 0, i64 0), i32 3, %union.tree_node* %2037, %union.tree_node* %2037, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3098, %union.tree_node* %2039, i8 zeroext %2043) #8, !dbg !10535
  %2044 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10537
  %2045 = load i32, i32* @flag_isoc99, align 4, !dbg !10537
  %tobool3103 = icmp eq i32 %2045, 0, !dbg !10537
  %conv3106 = zext i1 %tobool3103 to i8, !dbg !10537
  %2046 = load i32, i32* @flag_rounding_math, align 4, !dbg !10537
  %tobool3107 = icmp eq i32 %2046, 0, !dbg !10537
  %cond3108 = select i1 %tobool3107, i64 46, i64 48, !dbg !10537
  %arrayidx3110 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3108, !dbg !10537
  %2047 = load %union.tree_node*, %union.tree_node** %arrayidx3110, align 16, !dbg !10537
  %2048 = load i32, i32* @linux_uclibc, align 4, !dbg !10537
  %2049 = trunc i32 %2048 to i8, !dbg !10537
  %2050 = and i8 %2049, 1, !dbg !10537
  %2051 = xor i8 %2050, 1, !dbg !10537
  tail call fastcc void @def_builtin_1(i32 309, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.731, i64 0, i64 0), i32 3, %union.tree_node* %2044, %union.tree_node* %2044, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3106, %union.tree_node* %2047, i8 zeroext %2051) #8, !dbg !10537
  %2052 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10539
  %2053 = load i32, i32* @flag_isoc99, align 4, !dbg !10539
  %tobool3115 = icmp eq i32 %2053, 0, !dbg !10539
  %conv3118 = zext i1 %tobool3115 to i8, !dbg !10539
  %2054 = load i32, i32* @flag_rounding_math, align 4, !dbg !10539
  %tobool3119 = icmp eq i32 %2054, 0, !dbg !10539
  %cond3120 = select i1 %tobool3119, i64 46, i64 48, !dbg !10539
  %arrayidx3122 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3120, !dbg !10539
  %2055 = load %union.tree_node*, %union.tree_node** %arrayidx3122, align 16, !dbg !10539
  %2056 = load i32, i32* @linux_uclibc, align 4, !dbg !10539
  %2057 = trunc i32 %2056 to i8, !dbg !10539
  %2058 = and i8 %2057, 1, !dbg !10539
  %2059 = xor i8 %2058, 1, !dbg !10539
  tail call fastcc void @def_builtin_1(i32 310, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.732, i64 0, i64 0), i32 3, %union.tree_node* %2052, %union.tree_node* %2052, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3118, %union.tree_node* %2055, i8 zeroext %2059) #8, !dbg !10539
  %2060 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10541
  %2061 = load i32, i32* @flag_isoc99, align 4, !dbg !10541
  %tobool3127 = icmp eq i32 %2061, 0, !dbg !10541
  %conv3130 = zext i1 %tobool3127 to i8, !dbg !10541
  %2062 = load i32, i32* @flag_rounding_math, align 4, !dbg !10541
  %tobool3131 = icmp eq i32 %2062, 0, !dbg !10541
  %cond3132 = select i1 %tobool3131, i64 46, i64 48, !dbg !10541
  %arrayidx3134 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3132, !dbg !10541
  %2063 = load %union.tree_node*, %union.tree_node** %arrayidx3134, align 16, !dbg !10541
  %2064 = load i32, i32* @linux_uclibc, align 4, !dbg !10541
  %2065 = trunc i32 %2064 to i8, !dbg !10541
  %2066 = and i8 %2065, 1, !dbg !10541
  %2067 = xor i8 %2066, 1, !dbg !10541
  tail call fastcc void @def_builtin_1(i32 311, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.733, i64 0, i64 0), i32 3, %union.tree_node* %2060, %union.tree_node* %2060, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3130, %union.tree_node* %2063, i8 zeroext %2067) #8, !dbg !10541
  %2068 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10543
  %2069 = load i32, i32* @flag_isoc99, align 4, !dbg !10543
  %tobool3139 = icmp eq i32 %2069, 0, !dbg !10543
  %conv3142 = zext i1 %tobool3139 to i8, !dbg !10543
  %2070 = load i32, i32* @flag_rounding_math, align 4, !dbg !10543
  %tobool3143 = icmp eq i32 %2070, 0, !dbg !10543
  %cond3144 = select i1 %tobool3143, i64 46, i64 48, !dbg !10543
  %arrayidx3146 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3144, !dbg !10543
  %2071 = load %union.tree_node*, %union.tree_node** %arrayidx3146, align 16, !dbg !10543
  %2072 = load i32, i32* @linux_uclibc, align 4, !dbg !10543
  %2073 = trunc i32 %2072 to i8, !dbg !10543
  %2074 = and i8 %2073, 1, !dbg !10543
  %2075 = xor i8 %2074, 1, !dbg !10543
  tail call fastcc void @def_builtin_1(i32 312, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.734, i64 0, i64 0), i32 3, %union.tree_node* %2068, %union.tree_node* %2068, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3142, %union.tree_node* %2071, i8 zeroext %2075) #8, !dbg !10543
  %2076 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10545
  %2077 = load i32, i32* @flag_isoc99, align 4, !dbg !10545
  %tobool3151 = icmp eq i32 %2077, 0, !dbg !10545
  %conv3154 = zext i1 %tobool3151 to i8, !dbg !10545
  %2078 = load i32, i32* @flag_rounding_math, align 4, !dbg !10545
  %tobool3155 = icmp eq i32 %2078, 0, !dbg !10545
  %cond3156 = select i1 %tobool3155, i64 46, i64 48, !dbg !10545
  %arrayidx3158 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3156, !dbg !10545
  %2079 = load %union.tree_node*, %union.tree_node** %arrayidx3158, align 16, !dbg !10545
  %2080 = load i32, i32* @linux_uclibc, align 4, !dbg !10545
  %2081 = trunc i32 %2080 to i8, !dbg !10545
  %2082 = and i8 %2081, 1, !dbg !10545
  %2083 = xor i8 %2082, 1, !dbg !10545
  tail call fastcc void @def_builtin_1(i32 313, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.735, i64 0, i64 0), i32 3, %union.tree_node* %2076, %union.tree_node* %2076, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3154, %union.tree_node* %2079, i8 zeroext %2083) #8, !dbg !10545
  %2084 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10547
  %2085 = load i32, i32* @flag_isoc99, align 4, !dbg !10547
  %tobool3163 = icmp eq i32 %2085, 0, !dbg !10547
  %conv3166 = zext i1 %tobool3163 to i8, !dbg !10547
  %2086 = load i32, i32* @flag_rounding_math, align 4, !dbg !10547
  %tobool3167 = icmp eq i32 %2086, 0, !dbg !10547
  %cond3168 = select i1 %tobool3167, i64 46, i64 48, !dbg !10547
  %arrayidx3170 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3168, !dbg !10547
  %2087 = load %union.tree_node*, %union.tree_node** %arrayidx3170, align 16, !dbg !10547
  %2088 = load i32, i32* @linux_uclibc, align 4, !dbg !10547
  %2089 = trunc i32 %2088 to i8, !dbg !10547
  %2090 = and i8 %2089, 1, !dbg !10547
  %2091 = xor i8 %2090, 1, !dbg !10547
  tail call fastcc void @def_builtin_1(i32 314, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.736, i64 0, i64 0), i32 3, %union.tree_node* %2084, %union.tree_node* %2084, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3166, %union.tree_node* %2087, i8 zeroext %2091) #8, !dbg !10547
  %2092 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10549
  %2093 = load i32, i32* @flag_isoc99, align 4, !dbg !10549
  %tobool3175 = icmp eq i32 %2093, 0, !dbg !10549
  %conv3178 = zext i1 %tobool3175 to i8, !dbg !10549
  %2094 = load i32, i32* @flag_rounding_math, align 4, !dbg !10549
  %tobool3179 = icmp eq i32 %2094, 0, !dbg !10549
  %cond3180 = select i1 %tobool3179, i64 46, i64 48, !dbg !10549
  %arrayidx3182 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3180, !dbg !10549
  %2095 = load %union.tree_node*, %union.tree_node** %arrayidx3182, align 16, !dbg !10549
  %2096 = load i32, i32* @linux_uclibc, align 4, !dbg !10549
  %2097 = trunc i32 %2096 to i8, !dbg !10549
  %2098 = and i8 %2097, 1, !dbg !10549
  %2099 = xor i8 %2098, 1, !dbg !10549
  tail call fastcc void @def_builtin_1(i32 315, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.737, i64 0, i64 0), i32 3, %union.tree_node* %2092, %union.tree_node* %2092, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3178, %union.tree_node* %2095, i8 zeroext %2099) #8, !dbg !10549
  %2100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10551
  %2101 = load i32, i32* @flag_isoc99, align 4, !dbg !10551
  %tobool3187 = icmp eq i32 %2101, 0, !dbg !10551
  %conv3190 = zext i1 %tobool3187 to i8, !dbg !10551
  %2102 = load i32, i32* @flag_rounding_math, align 4, !dbg !10551
  %tobool3191 = icmp eq i32 %2102, 0, !dbg !10551
  %cond3192 = select i1 %tobool3191, i64 46, i64 48, !dbg !10551
  %arrayidx3194 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3192, !dbg !10551
  %2103 = load %union.tree_node*, %union.tree_node** %arrayidx3194, align 16, !dbg !10551
  %2104 = load i32, i32* @linux_uclibc, align 4, !dbg !10551
  %2105 = trunc i32 %2104 to i8, !dbg !10551
  %2106 = and i8 %2105, 1, !dbg !10551
  %2107 = xor i8 %2106, 1, !dbg !10551
  tail call fastcc void @def_builtin_1(i32 316, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.738, i64 0, i64 0), i32 3, %union.tree_node* %2100, %union.tree_node* %2100, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3190, %union.tree_node* %2103, i8 zeroext %2107) #8, !dbg !10551
  %2108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10553
  %2109 = load i32, i32* @flag_isoc99, align 4, !dbg !10553
  %tobool3199 = icmp eq i32 %2109, 0, !dbg !10553
  %conv3202 = zext i1 %tobool3199 to i8, !dbg !10553
  %2110 = load i32, i32* @flag_rounding_math, align 4, !dbg !10553
  %tobool3203 = icmp eq i32 %2110, 0, !dbg !10553
  %cond3204 = select i1 %tobool3203, i64 46, i64 48, !dbg !10553
  %arrayidx3206 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3204, !dbg !10553
  %2111 = load %union.tree_node*, %union.tree_node** %arrayidx3206, align 16, !dbg !10553
  %2112 = load i32, i32* @linux_uclibc, align 4, !dbg !10553
  %2113 = trunc i32 %2112 to i8, !dbg !10553
  %2114 = and i8 %2113, 1, !dbg !10553
  %2115 = xor i8 %2114, 1, !dbg !10553
  tail call fastcc void @def_builtin_1(i32 317, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.739, i64 0, i64 0), i32 3, %union.tree_node* %2108, %union.tree_node* %2108, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3202, %union.tree_node* %2111, i8 zeroext %2115) #8, !dbg !10553
  %2116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10555
  %2117 = load i32, i32* @flag_isoc99, align 4, !dbg !10555
  %tobool3211 = icmp eq i32 %2117, 0, !dbg !10555
  %conv3214 = zext i1 %tobool3211 to i8, !dbg !10555
  %2118 = load i32, i32* @flag_rounding_math, align 4, !dbg !10555
  %tobool3215 = icmp eq i32 %2118, 0, !dbg !10555
  %cond3216 = select i1 %tobool3215, i64 46, i64 48, !dbg !10555
  %arrayidx3218 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3216, !dbg !10555
  %2119 = load %union.tree_node*, %union.tree_node** %arrayidx3218, align 16, !dbg !10555
  %2120 = load i32, i32* @linux_uclibc, align 4, !dbg !10555
  %2121 = trunc i32 %2120 to i8, !dbg !10555
  %2122 = and i8 %2121, 1, !dbg !10555
  %2123 = xor i8 %2122, 1, !dbg !10555
  tail call fastcc void @def_builtin_1(i32 318, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.740, i64 0, i64 0), i32 3, %union.tree_node* %2116, %union.tree_node* %2116, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3214, %union.tree_node* %2119, i8 zeroext %2123) #8, !dbg !10555
  %2124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10557
  %2125 = load i32, i32* @flag_isoc99, align 4, !dbg !10557
  %tobool3223 = icmp eq i32 %2125, 0, !dbg !10557
  %conv3226 = zext i1 %tobool3223 to i8, !dbg !10557
  %2126 = load i32, i32* @flag_rounding_math, align 4, !dbg !10557
  %tobool3227 = icmp eq i32 %2126, 0, !dbg !10557
  %cond3228 = select i1 %tobool3227, i64 46, i64 48, !dbg !10557
  %arrayidx3230 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3228, !dbg !10557
  %2127 = load %union.tree_node*, %union.tree_node** %arrayidx3230, align 16, !dbg !10557
  %2128 = load i32, i32* @linux_uclibc, align 4, !dbg !10557
  %2129 = trunc i32 %2128 to i8, !dbg !10557
  %2130 = and i8 %2129, 1, !dbg !10557
  %2131 = xor i8 %2130, 1, !dbg !10557
  tail call fastcc void @def_builtin_1(i32 319, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.741, i64 0, i64 0), i32 3, %union.tree_node* %2124, %union.tree_node* %2124, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3226, %union.tree_node* %2127, i8 zeroext %2131) #8, !dbg !10557
  %2132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 71), align 8, !dbg !10559
  %2133 = load i32, i32* @flag_isoc99, align 4, !dbg !10559
  %tobool3235 = icmp eq i32 %2133, 0, !dbg !10559
  %conv3238 = zext i1 %tobool3235 to i8, !dbg !10559
  %2134 = load i32, i32* @flag_rounding_math, align 4, !dbg !10559
  %tobool3239 = icmp eq i32 %2134, 0, !dbg !10559
  %cond3240 = select i1 %tobool3239, i64 46, i64 48, !dbg !10559
  %arrayidx3242 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3240, !dbg !10559
  %2135 = load %union.tree_node*, %union.tree_node** %arrayidx3242, align 16, !dbg !10559
  %2136 = load i32, i32* @linux_uclibc, align 4, !dbg !10559
  %2137 = trunc i32 %2136 to i8, !dbg !10559
  %2138 = and i8 %2137, 1, !dbg !10559
  %2139 = xor i8 %2138, 1, !dbg !10559
  tail call fastcc void @def_builtin_1(i32 320, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.742, i64 0, i64 0), i32 3, %union.tree_node* %2132, %union.tree_node* %2132, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3238, %union.tree_node* %2135, i8 zeroext %2139) #8, !dbg !10559
  %2140 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 70), align 16, !dbg !10561
  %2141 = load i32, i32* @flag_isoc99, align 4, !dbg !10561
  %tobool3247 = icmp eq i32 %2141, 0, !dbg !10561
  %conv3250 = zext i1 %tobool3247 to i8, !dbg !10561
  %2142 = load i32, i32* @flag_rounding_math, align 4, !dbg !10561
  %tobool3251 = icmp eq i32 %2142, 0, !dbg !10561
  %cond3252 = select i1 %tobool3251, i64 46, i64 48, !dbg !10561
  %arrayidx3254 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3252, !dbg !10561
  %2143 = load %union.tree_node*, %union.tree_node** %arrayidx3254, align 16, !dbg !10561
  %2144 = load i32, i32* @linux_uclibc, align 4, !dbg !10561
  %2145 = trunc i32 %2144 to i8, !dbg !10561
  %2146 = and i8 %2145, 1, !dbg !10561
  %2147 = xor i8 %2146, 1, !dbg !10561
  tail call fastcc void @def_builtin_1(i32 321, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.743, i64 0, i64 0), i32 3, %union.tree_node* %2140, %union.tree_node* %2140, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3250, %union.tree_node* %2143, i8 zeroext %2147) #8, !dbg !10561
  %2148 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10563
  %2149 = load i32, i32* @flag_isoc99, align 4, !dbg !10563
  %tobool3259 = icmp eq i32 %2149, 0, !dbg !10563
  %conv3262 = zext i1 %tobool3259 to i8, !dbg !10563
  %2150 = load i32, i32* @flag_rounding_math, align 4, !dbg !10563
  %tobool3263 = icmp eq i32 %2150, 0, !dbg !10563
  %cond3264 = select i1 %tobool3263, i64 46, i64 48, !dbg !10563
  %arrayidx3266 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3264, !dbg !10563
  %2151 = load %union.tree_node*, %union.tree_node** %arrayidx3266, align 16, !dbg !10563
  %2152 = load i32, i32* @linux_uclibc, align 4, !dbg !10563
  %2153 = trunc i32 %2152 to i8, !dbg !10563
  %2154 = and i8 %2153, 1, !dbg !10563
  %2155 = xor i8 %2154, 1, !dbg !10563
  tail call fastcc void @def_builtin_1(i32 322, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.744, i64 0, i64 0), i32 3, %union.tree_node* %2148, %union.tree_node* %2148, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3262, %union.tree_node* %2151, i8 zeroext %2155) #8, !dbg !10563
  %2156 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 72), align 16, !dbg !10565
  %2157 = load i32, i32* @flag_isoc99, align 4, !dbg !10565
  %tobool3271 = icmp eq i32 %2157, 0, !dbg !10565
  %conv3274 = zext i1 %tobool3271 to i8, !dbg !10565
  %2158 = load i32, i32* @flag_rounding_math, align 4, !dbg !10565
  %tobool3275 = icmp eq i32 %2158, 0, !dbg !10565
  %cond3276 = select i1 %tobool3275, i64 46, i64 48, !dbg !10565
  %arrayidx3278 = getelementptr inbounds [107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 %cond3276, !dbg !10565
  %2159 = load %union.tree_node*, %union.tree_node** %arrayidx3278, align 16, !dbg !10565
  %2160 = load i32, i32* @linux_uclibc, align 4, !dbg !10565
  %2161 = trunc i32 %2160 to i8, !dbg !10565
  %2162 = and i8 %2161, 1, !dbg !10565
  %2163 = xor i8 %2162, 1, !dbg !10565
  tail call fastcc void @def_builtin_1(i32 323, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.745, i64 0, i64 0), i32 3, %union.tree_node* %2156, %union.tree_node* %2156, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3274, %union.tree_node* %2159, i8 zeroext %2163) #8, !dbg !10565
  %2164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 183), align 8, !dbg !10567
  %2165 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10567
  tail call fastcc void @def_builtin_1(i32 324, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.746, i64 0, i64 0), i32 3, %union.tree_node* %2164, %union.tree_node* %2164, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2165, i8 zeroext 0) #8, !dbg !10567
  %2166 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 186), align 16, !dbg !10569
  %2167 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10569
  tail call fastcc void @def_builtin_1(i32 325, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.747, i64 0, i64 0), i32 3, %union.tree_node* %2166, %union.tree_node* %2166, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2167, i8 zeroext 0) #8, !dbg !10569
  %2168 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 142), align 16, !dbg !10571
  %2169 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10571
  tail call fastcc void @def_builtin_1(i32 326, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.748, i64 0, i64 0), i32 3, %union.tree_node* %2168, %union.tree_node* %2168, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2169, i8 zeroext 0) #8, !dbg !10571
  %2170 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 134), align 16, !dbg !10573
  %2171 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10573
  tail call fastcc void @def_builtin_1(i32 327, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.749, i64 0, i64 0), i32 3, %union.tree_node* %2170, %union.tree_node* %2170, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2171, i8 zeroext 0) #8, !dbg !10573
  %2172 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 214), align 16, !dbg !10575
  %2173 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10575
  tail call fastcc void @def_builtin_1(i32 328, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.750, i64 0, i64 0), i32 3, %union.tree_node* %2172, %union.tree_node* %2172, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2173, i8 zeroext 1) #8, !dbg !10575
  %2174 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 183), align 8, !dbg !10577
  %2175 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10577
  tail call fastcc void @def_builtin_1(i32 329, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.751, i64 0, i64 0), i32 3, %union.tree_node* %2174, %union.tree_node* %2174, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2175, i8 zeroext 1) #8, !dbg !10577
  %2176 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 182), align 16, !dbg !10579
  %2177 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10579
  tail call fastcc void @def_builtin_1(i32 330, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.752, i64 0, i64 0), i32 3, %union.tree_node* %2176, %union.tree_node* %2176, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2177, i8 zeroext 1) #8, !dbg !10579
  %2178 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 182), align 16, !dbg !10581
  %2179 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10581
  tail call fastcc void @def_builtin_1(i32 331, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.753, i64 0, i64 0), i32 3, %union.tree_node* %2178, %union.tree_node* %2178, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2179, i8 zeroext 1) #8, !dbg !10581
  %2180 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 182), align 16, !dbg !10583
  %2181 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10583
  tail call fastcc void @def_builtin_1(i32 332, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.754, i64 0, i64 0), i32 3, %union.tree_node* %2180, %union.tree_node* %2180, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2181, i8 zeroext 0) #8, !dbg !10583
  %2182 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 184), align 16, !dbg !10585
  %2183 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10585
  tail call fastcc void @def_builtin_1(i32 333, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.755, i64 0, i64 0), i32 3, %union.tree_node* %2182, %union.tree_node* %2182, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2183, i8 zeroext 1) #8, !dbg !10585
  %2184 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 134), align 16, !dbg !10587
  %2185 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10587
  tail call fastcc void @def_builtin_1(i32 334, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.756, i64 0, i64 0), i32 3, %union.tree_node* %2184, %union.tree_node* %2184, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2185, i8 zeroext 0) #8, !dbg !10587
  %2186 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 130), align 16, !dbg !10589
  %2187 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10589
  tail call fastcc void @def_builtin_1(i32 335, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.757, i64 0, i64 0), i32 3, %union.tree_node* %2186, %union.tree_node* %2186, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2187, i8 zeroext 0) #8, !dbg !10589
  %2188 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 180), align 16, !dbg !10591
  %2189 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10591
  tail call fastcc void @def_builtin_1(i32 336, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.758, i64 0, i64 0), i32 3, %union.tree_node* %2188, %union.tree_node* %2188, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2189, i8 zeroext 0) #8, !dbg !10591
  %2190 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 131), align 8, !dbg !10593
  %2191 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10593
  tail call fastcc void @def_builtin_1(i32 337, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.759, i64 0, i64 0), i32 3, %union.tree_node* %2190, %union.tree_node* %2190, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2191, i8 zeroext 0) #8, !dbg !10593
  %2192 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 130), align 16, !dbg !10595
  %2193 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10595
  tail call fastcc void @def_builtin_1(i32 338, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.760, i64 0, i64 0), i32 3, %union.tree_node* %2192, %union.tree_node* %2192, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2193, i8 zeroext 1) #8, !dbg !10595
  %2194 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 134), align 16, !dbg !10597
  %2195 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10597
  tail call fastcc void @def_builtin_1(i32 339, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.761, i64 0, i64 0), i32 3, %union.tree_node* %2194, %union.tree_node* %2194, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2195, i8 zeroext 1) #8, !dbg !10597
  %2196 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 131), align 8, !dbg !10599
  %2197 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10599
  tail call fastcc void @def_builtin_1(i32 340, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.762, i64 0, i64 0), i32 3, %union.tree_node* %2196, %union.tree_node* %2196, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2197, i8 zeroext 1) #8, !dbg !10599
  %2198 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 130), align 16, !dbg !10601
  %2199 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10601
  tail call fastcc void @def_builtin_1(i32 341, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.763, i64 0, i64 0), i32 3, %union.tree_node* %2198, %union.tree_node* %2198, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2199, i8 zeroext 1) #8, !dbg !10601
  %2200 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 133), align 8, !dbg !10603
  %2201 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10603
  tail call fastcc void @def_builtin_1(i32 342, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.764, i64 0, i64 0), i32 3, %union.tree_node* %2200, %union.tree_node* %2200, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2201, i8 zeroext 1) #8, !dbg !10603
  %2202 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 114), align 16, !dbg !10605
  %2203 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 66), align 16, !dbg !10605
  tail call fastcc void @def_builtin_1(i32 343, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.765, i64 0, i64 0), i32 3, %union.tree_node* %2202, %union.tree_node* %2202, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2203, i8 zeroext 0) #8, !dbg !10605
  %2204 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 135), align 8, !dbg !10607
  %2205 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 66), align 16, !dbg !10607
  tail call fastcc void @def_builtin_1(i32 344, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.766, i64 0, i64 0), i32 3, %union.tree_node* %2204, %union.tree_node* %2204, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2205, i8 zeroext 0) #8, !dbg !10607
  %2206 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 103), align 8, !dbg !10609
  %2207 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10609
  tail call fastcc void @def_builtin_1(i32 345, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.767, i64 0, i64 0), i32 3, %union.tree_node* %2206, %union.tree_node* %2206, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2207, i8 zeroext 1) #8, !dbg !10609
  %2208 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 181), align 8, !dbg !10611
  %2209 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10611
  tail call fastcc void @def_builtin_1(i32 346, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.768, i64 0, i64 0), i32 3, %union.tree_node* %2208, %union.tree_node* %2208, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2209, i8 zeroext 0) #8, !dbg !10611
  %2210 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 180), align 16, !dbg !10613
  %2211 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10613
  tail call fastcc void @def_builtin_1(i32 347, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.769, i64 0, i64 0), i32 3, %union.tree_node* %2210, %union.tree_node* %2210, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2211, i8 zeroext 1) #8, !dbg !10613
  %2212 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 181), align 8, !dbg !10615
  %2213 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10615
  tail call fastcc void @def_builtin_1(i32 348, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.770, i64 0, i64 0), i32 3, %union.tree_node* %2212, %union.tree_node* %2212, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2213, i8 zeroext 1) #8, !dbg !10615
  %2214 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 180), align 16, !dbg !10617
  %2215 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10617
  tail call fastcc void @def_builtin_1(i32 349, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.771, i64 0, i64 0), i32 3, %union.tree_node* %2214, %union.tree_node* %2214, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2215, i8 zeroext 1) #8, !dbg !10617
  %2216 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 132), align 16, !dbg !10619
  %2217 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10619
  tail call fastcc void @def_builtin_1(i32 350, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.772, i64 0, i64 0), i32 3, %union.tree_node* %2216, %union.tree_node* %2216, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2217, i8 zeroext 1) #8, !dbg !10619
  %2218 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 134), align 16, !dbg !10621
  %2219 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10621
  tail call fastcc void @def_builtin_1(i32 351, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.773, i64 0, i64 0), i32 3, %union.tree_node* %2218, %union.tree_node* %2218, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2219, i8 zeroext 1) #8, !dbg !10621
  %2220 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 133), align 8, !dbg !10623
  %2221 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10623
  tail call fastcc void @def_builtin_1(i32 352, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.774, i64 0, i64 0), i32 3, %union.tree_node* %2220, %union.tree_node* %2220, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2221, i8 zeroext 1) #8, !dbg !10623
  %2222 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 132), align 16, !dbg !10625
  %2223 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !10625
  tail call fastcc void @def_builtin_1(i32 353, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.775, i64 0, i64 0), i32 3, %union.tree_node* %2222, %union.tree_node* %2222, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2223, i8 zeroext 1) #8, !dbg !10625
  %2224 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 239), align 8, !dbg !10627
  %2225 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 75), align 8, !dbg !10627
  tail call fastcc void @def_builtin_1(i32 354, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.776, i64 0, i64 0), i32 3, %union.tree_node* %2224, %union.tree_node* %2224, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2225, i8 zeroext 1) #8, !dbg !10627
  %2226 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 239), align 8, !dbg !10629
  %2227 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 75), align 8, !dbg !10629
  tail call fastcc void @def_builtin_1(i32 355, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.777, i64 0, i64 0), i32 3, %union.tree_node* %2226, %union.tree_node* %2226, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2227, i8 zeroext 0) #8, !dbg !10629
  %2228 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 137), align 8, !dbg !10631
  %2229 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10631
  tail call fastcc void @def_builtin_1(i32 356, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.778, i64 0, i64 0), i32 3, %union.tree_node* %2228, %union.tree_node* %2228, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2229, i8 zeroext 1) #8, !dbg !10631
  %2230 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 137), align 8, !dbg !10633
  %2231 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10633
  tail call fastcc void @def_builtin_1(i32 357, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.779, i64 0, i64 0), i32 3, %union.tree_node* %2230, %union.tree_node* %2230, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2231, i8 zeroext 0) #8, !dbg !10633
  %2232 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 137), align 8, !dbg !10635
  %2233 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10635
  tail call fastcc void @def_builtin_1(i32 358, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.780, i64 0, i64 0), i32 3, %union.tree_node* %2232, %union.tree_node* %2232, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2233, i8 zeroext 1) #8, !dbg !10635
  %2234 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 137), align 8, !dbg !10637
  %2235 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10637
  tail call fastcc void @def_builtin_1(i32 359, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.781, i64 0, i64 0), i32 3, %union.tree_node* %2234, %union.tree_node* %2234, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2235, i8 zeroext 0) #8, !dbg !10637
  %2236 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 136), align 16, !dbg !10639
  %2237 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10639
  tail call fastcc void @def_builtin_1(i32 360, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.782, i64 0, i64 0), i32 3, %union.tree_node* %2236, %union.tree_node* %2236, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2237, i8 zeroext 1) #8, !dbg !10639
  %2238 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 136), align 16, !dbg !10641
  %2239 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10641
  tail call fastcc void @def_builtin_1(i32 361, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.783, i64 0, i64 0), i32 3, %union.tree_node* %2238, %union.tree_node* %2238, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2239, i8 zeroext 0) #8, !dbg !10641
  %2240 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 239), align 8, !dbg !10643
  %2241 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 99), align 8, !dbg !10643
  tail call fastcc void @def_builtin_1(i32 362, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.784, i64 0, i64 0), i32 3, %union.tree_node* %2240, %union.tree_node* %2240, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2241, i8 zeroext 1) #8, !dbg !10643
  %2242 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 215), align 8, !dbg !10645
  %2243 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10645
  tail call fastcc void @def_builtin_1(i32 363, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.785, i64 0, i64 0), i32 3, %union.tree_node* %2242, %union.tree_node* %2242, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2243, i8 zeroext 1) #8, !dbg !10645
  %2244 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 215), align 8, !dbg !10647
  %2245 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10647
  tail call fastcc void @def_builtin_1(i32 364, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.786, i64 0, i64 0), i32 3, %union.tree_node* %2244, %union.tree_node* %2244, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2245, i8 zeroext 0) #8, !dbg !10647
  %2246 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 238), align 16, !dbg !10649
  %2247 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 70), align 16, !dbg !10649
  tail call fastcc void @def_builtin_1(i32 365, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.787, i64 0, i64 0), i32 3, %union.tree_node* %2246, %union.tree_node* %2246, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2247, i8 zeroext 1) #8, !dbg !10649
  %2248 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 238), align 16, !dbg !10651
  %2249 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 70), align 16, !dbg !10651
  tail call fastcc void @def_builtin_1(i32 366, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.788, i64 0, i64 0), i32 3, %union.tree_node* %2248, %union.tree_node* %2248, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2249, i8 zeroext 0) #8, !dbg !10651
  %2250 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10653
  %2251 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10653
  tail call fastcc void @def_builtin_1(i32 367, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.789, i64 0, i64 0), i32 3, %union.tree_node* %2250, %union.tree_node* %2250, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2251, i8 zeroext 1) #8, !dbg !10653
  %2252 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10655
  %2253 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10655
  tail call fastcc void @def_builtin_1(i32 368, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.790, i64 0, i64 0), i32 3, %union.tree_node* %2252, %union.tree_node* %2252, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2253, i8 zeroext 0) #8, !dbg !10655
  %2254 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 104), align 16, !dbg !10657
  %2255 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10657
  tail call fastcc void @def_builtin_1(i32 369, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.791, i64 0, i64 0), i32 3, %union.tree_node* %2254, %union.tree_node* %2254, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2255, i8 zeroext 1) #8, !dbg !10657
  %2256 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 104), align 16, !dbg !10659
  %2257 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !10659
  tail call fastcc void @def_builtin_1(i32 370, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.792, i64 0, i64 0), i32 3, %union.tree_node* %2256, %union.tree_node* %2256, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2257, i8 zeroext 0) #8, !dbg !10659
  %2258 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 238), align 16, !dbg !10661
  %2259 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 94), align 16, !dbg !10661
  tail call fastcc void @def_builtin_1(i32 371, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.793, i64 0, i64 0), i32 3, %union.tree_node* %2258, %union.tree_node* %2258, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2259, i8 zeroext 1) #8, !dbg !10661
  %2260 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 243), align 8, !dbg !10663
  %2261 = load i32, i32* @flag_isoc99, align 4, !dbg !10663
  %tobool3283 = icmp eq i32 %2261, 0, !dbg !10663
  %conv3286 = zext i1 %tobool3283 to i8, !dbg !10663
  %2262 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 82), align 16, !dbg !10663
  %2263 = load i32, i32* @linux_uclibc, align 4, !dbg !10663
  %2264 = trunc i32 %2263 to i8, !dbg !10663
  %2265 = and i8 %2264, 1, !dbg !10663
  %2266 = xor i8 %2265, 1, !dbg !10663
  tail call fastcc void @def_builtin_1(i32 372, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.794, i64 0, i64 0), i32 3, %union.tree_node* %2260, %union.tree_node* %2260, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3286, %union.tree_node* %2262, i8 zeroext %2266) #8, !dbg !10663
  %2267 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 240), align 16, !dbg !10665
  %2268 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 76), align 16, !dbg !10665
  tail call fastcc void @def_builtin_1(i32 373, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.795, i64 0, i64 0), i32 3, %union.tree_node* %2267, %union.tree_node* %2267, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2268, i8 zeroext 1) #8, !dbg !10665
  %2269 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 241), align 8, !dbg !10667
  %2270 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 100), align 16, !dbg !10667
  tail call fastcc void @def_builtin_1(i32 374, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.796, i64 0, i64 0), i32 3, %union.tree_node* %2269, %union.tree_node* %2269, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2270, i8 zeroext 1) #8, !dbg !10667
  %2271 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 189), align 8, !dbg !10669
  %2272 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 72), align 16, !dbg !10669
  tail call fastcc void @def_builtin_1(i32 375, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.797, i64 0, i64 0), i32 3, %union.tree_node* %2271, %union.tree_node* %2271, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2272, i8 zeroext 1) #8, !dbg !10669
  %2273 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 189), align 8, !dbg !10671
  %2274 = load i32, i32* @flag_isoc99, align 4, !dbg !10671
  %tobool3291 = icmp eq i32 %2274, 0, !dbg !10671
  %conv3294 = zext i1 %tobool3291 to i8, !dbg !10671
  %2275 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 96), align 16, !dbg !10671
  %2276 = load i32, i32* @linux_uclibc, align 4, !dbg !10671
  %2277 = trunc i32 %2276 to i8, !dbg !10671
  %2278 = and i8 %2277, 1, !dbg !10671
  %2279 = xor i8 %2278, 1, !dbg !10671
  tail call fastcc void @def_builtin_1(i32 376, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.798, i64 0, i64 0), i32 3, %union.tree_node* %2273, %union.tree_node* %2273, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3294, %union.tree_node* %2275, i8 zeroext %2279) #8, !dbg !10671
  %2280 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 163), align 8, !dbg !10673
  %2281 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 68), align 16, !dbg !10673
  tail call fastcc void @def_builtin_1(i32 377, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.799, i64 0, i64 0), i32 3, %union.tree_node* %2280, %union.tree_node* %2280, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2281, i8 zeroext 1) #8, !dbg !10673
  %2282 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 163), align 8, !dbg !10675
  %2283 = load i32, i32* @flag_isoc99, align 4, !dbg !10675
  %tobool3299 = icmp eq i32 %2283, 0, !dbg !10675
  %conv3302 = zext i1 %tobool3299 to i8, !dbg !10675
  %2284 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 92), align 16, !dbg !10675
  %2285 = load i32, i32* @linux_uclibc, align 4, !dbg !10675
  %2286 = trunc i32 %2285 to i8, !dbg !10675
  %2287 = and i8 %2286, 1, !dbg !10675
  %2288 = xor i8 %2287, 1, !dbg !10675
  tail call fastcc void @def_builtin_1(i32 378, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.800, i64 0, i64 0), i32 3, %union.tree_node* %2282, %union.tree_node* %2282, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3302, %union.tree_node* %2284, i8 zeroext %2288) #8, !dbg !10675
  %2289 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 216), align 16, !dbg !10677
  %2290 = load i32, i32* @flag_isoc99, align 4, !dbg !10677
  %tobool3307 = icmp eq i32 %2290, 0, !dbg !10677
  %conv3310 = zext i1 %tobool3307 to i8, !dbg !10677
  %2291 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 79), align 8, !dbg !10677
  %2292 = load i32, i32* @linux_uclibc, align 4, !dbg !10677
  %2293 = trunc i32 %2292 to i8, !dbg !10677
  %2294 = and i8 %2293, 1, !dbg !10677
  %2295 = xor i8 %2294, 1, !dbg !10677
  tail call fastcc void @def_builtin_1(i32 379, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.801, i64 0, i64 0), i32 3, %union.tree_node* %2289, %union.tree_node* %2289, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3310, %union.tree_node* %2291, i8 zeroext %2295) #8, !dbg !10677
  %2296 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 187), align 8, !dbg !10679
  %2297 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 73), align 8, !dbg !10679
  tail call fastcc void @def_builtin_1(i32 380, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.802, i64 0, i64 0), i32 3, %union.tree_node* %2296, %union.tree_node* %2296, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2297, i8 zeroext 1) #8, !dbg !10679
  %2298 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 188), align 16, !dbg !10681
  %2299 = load i32, i32* @flag_isoc99, align 4, !dbg !10681
  %tobool3315 = icmp eq i32 %2299, 0, !dbg !10681
  %conv3318 = zext i1 %tobool3315 to i8, !dbg !10681
  %2300 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 97), align 8, !dbg !10681
  %2301 = load i32, i32* @linux_uclibc, align 4, !dbg !10681
  %2302 = trunc i32 %2301 to i8, !dbg !10681
  %2303 = and i8 %2302, 1, !dbg !10681
  %2304 = xor i8 %2303, 1, !dbg !10681
  tail call fastcc void @def_builtin_1(i32 381, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.803, i64 0, i64 0), i32 3, %union.tree_node* %2298, %union.tree_node* %2298, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3318, %union.tree_node* %2300, i8 zeroext %2304) #8, !dbg !10681
  %2305 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10683
  %2306 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10683
  tail call fastcc void @def_builtin_1(i32 382, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.804, i64 0, i64 0), i32 3, %union.tree_node* %2305, %union.tree_node* %2305, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2306, i8 zeroext 1) #8, !dbg !10683
  %2307 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10685
  %2308 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10685
  tail call fastcc void @def_builtin_1(i32 383, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.805, i64 0, i64 0), i32 3, %union.tree_node* %2307, %union.tree_node* %2307, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2308, i8 zeroext 1) #8, !dbg !10685
  %2309 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10687
  %2310 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10687
  tail call fastcc void @def_builtin_1(i32 384, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.806, i64 0, i64 0), i32 3, %union.tree_node* %2309, %union.tree_node* %2309, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2310, i8 zeroext 0) #8, !dbg !10687
  %2311 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10689
  %2312 = load i32, i32* @flag_isoc99, align 4, !dbg !10689
  %tobool3323 = icmp eq i32 %2312, 0, !dbg !10689
  %conv3326 = zext i1 %tobool3323 to i8, !dbg !10689
  %2313 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10689
  %2314 = load i32, i32* @linux_uclibc, align 4, !dbg !10689
  %2315 = trunc i32 %2314 to i8, !dbg !10689
  %2316 = and i8 %2315, 1, !dbg !10689
  %2317 = xor i8 %2316, 1, !dbg !10689
  tail call fastcc void @def_builtin_1(i32 385, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.807, i64 0, i64 0), i32 3, %union.tree_node* %2311, %union.tree_node* %2311, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3326, %union.tree_node* %2313, i8 zeroext %2317) #8, !dbg !10689
  %2318 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10691
  %2319 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10691
  tail call fastcc void @def_builtin_1(i32 386, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.808, i64 0, i64 0), i32 3, %union.tree_node* %2318, %union.tree_node* %2318, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2319, i8 zeroext 1) #8, !dbg !10691
  %2320 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10693
  %2321 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10693
  tail call fastcc void @def_builtin_1(i32 387, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.809, i64 0, i64 0), i32 3, %union.tree_node* %2320, %union.tree_node* %2320, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2321, i8 zeroext 1) #8, !dbg !10693
  %2322 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10695
  %2323 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10695
  tail call fastcc void @def_builtin_1(i32 388, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.810, i64 0, i64 0), i32 3, %union.tree_node* %2322, %union.tree_node* %2322, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2323, i8 zeroext 1) #8, !dbg !10695
  %2324 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10697
  %2325 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10697
  tail call fastcc void @def_builtin_1(i32 389, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.811, i64 0, i64 0), i32 3, %union.tree_node* %2324, %union.tree_node* %2324, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2325, i8 zeroext 1) #8, !dbg !10697
  %2326 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10699
  %2327 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10699
  tail call fastcc void @def_builtin_1(i32 390, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.812, i64 0, i64 0), i32 3, %union.tree_node* %2326, %union.tree_node* %2326, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2327, i8 zeroext 1) #8, !dbg !10699
  %2328 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10701
  %2329 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10701
  tail call fastcc void @def_builtin_1(i32 391, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.813, i64 0, i64 0), i32 3, %union.tree_node* %2328, %union.tree_node* %2328, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2329, i8 zeroext 1) #8, !dbg !10701
  %2330 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10703
  %2331 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10703
  tail call fastcc void @def_builtin_1(i32 392, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.814, i64 0, i64 0), i32 3, %union.tree_node* %2330, %union.tree_node* %2330, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2331, i8 zeroext 1) #8, !dbg !10703
  %2332 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10705
  %2333 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10705
  tail call fastcc void @def_builtin_1(i32 393, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.815, i64 0, i64 0), i32 3, %union.tree_node* %2332, %union.tree_node* %2332, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2333, i8 zeroext 1) #8, !dbg !10705
  %2334 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10707
  %2335 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10707
  tail call fastcc void @def_builtin_1(i32 394, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.816, i64 0, i64 0), i32 3, %union.tree_node* %2334, %union.tree_node* %2334, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2335, i8 zeroext 1) #8, !dbg !10707
  %2336 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10709
  %2337 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10709
  tail call fastcc void @def_builtin_1(i32 395, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.817, i64 0, i64 0), i32 3, %union.tree_node* %2336, %union.tree_node* %2336, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2337, i8 zeroext 0) #8, !dbg !10709
  %2338 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10711
  %2339 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10711
  tail call fastcc void @def_builtin_1(i32 396, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.818, i64 0, i64 0), i32 3, %union.tree_node* %2338, %union.tree_node* %2338, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2339, i8 zeroext 1) #8, !dbg !10711
  %2340 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10713
  %2341 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10713
  tail call fastcc void @def_builtin_1(i32 397, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.819, i64 0, i64 0), i32 3, %union.tree_node* %2340, %union.tree_node* %2340, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2341, i8 zeroext 1) #8, !dbg !10713
  %2342 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10715
  %2343 = load i32, i32* @flag_isoc94, align 4, !dbg !10715
  %tobool3331 = icmp eq i32 %2343, 0, !dbg !10715
  %conv3334 = zext i1 %tobool3331 to i8, !dbg !10715
  %2344 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10715
  %2345 = load i32, i32* @linux_uclibc, align 4, !dbg !10715
  %2346 = trunc i32 %2345 to i8, !dbg !10715
  %2347 = and i8 %2346, 1, !dbg !10715
  %2348 = xor i8 %2347, 1, !dbg !10715
  tail call fastcc void @def_builtin_1(i32 398, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.820, i64 0, i64 0), i32 3, %union.tree_node* %2342, %union.tree_node* %2342, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3334, %union.tree_node* %2344, i8 zeroext %2348) #8, !dbg !10715
  %2349 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10717
  %2350 = load i32, i32* @flag_isoc94, align 4, !dbg !10717
  %tobool3339 = icmp eq i32 %2350, 0, !dbg !10717
  %conv3342 = zext i1 %tobool3339 to i8, !dbg !10717
  %2351 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10717
  %2352 = load i32, i32* @linux_uclibc, align 4, !dbg !10717
  %2353 = trunc i32 %2352 to i8, !dbg !10717
  %2354 = and i8 %2353, 1, !dbg !10717
  %2355 = xor i8 %2354, 1, !dbg !10717
  tail call fastcc void @def_builtin_1(i32 399, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.821, i64 0, i64 0), i32 3, %union.tree_node* %2349, %union.tree_node* %2349, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3342, %union.tree_node* %2351, i8 zeroext %2355) #8, !dbg !10717
  %2356 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10719
  %2357 = load i32, i32* @flag_isoc99, align 4, !dbg !10719
  %tobool3347 = icmp eq i32 %2357, 0, !dbg !10719
  %conv3350 = zext i1 %tobool3347 to i8, !dbg !10719
  %2358 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10719
  %2359 = load i32, i32* @linux_uclibc, align 4, !dbg !10719
  %2360 = trunc i32 %2359 to i8, !dbg !10719
  %2361 = and i8 %2360, 1, !dbg !10719
  %2362 = xor i8 %2361, 1, !dbg !10719
  tail call fastcc void @def_builtin_1(i32 400, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.822, i64 0, i64 0), i32 3, %union.tree_node* %2356, %union.tree_node* %2356, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3350, %union.tree_node* %2358, i8 zeroext %2362) #8, !dbg !10719
  %2363 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10721
  %2364 = load i32, i32* @flag_isoc94, align 4, !dbg !10721
  %tobool3355 = icmp eq i32 %2364, 0, !dbg !10721
  %conv3358 = zext i1 %tobool3355 to i8, !dbg !10721
  %2365 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10721
  %2366 = load i32, i32* @linux_uclibc, align 4, !dbg !10721
  %2367 = trunc i32 %2366 to i8, !dbg !10721
  %2368 = and i8 %2367, 1, !dbg !10721
  %2369 = xor i8 %2368, 1, !dbg !10721
  tail call fastcc void @def_builtin_1(i32 401, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.823, i64 0, i64 0), i32 3, %union.tree_node* %2363, %union.tree_node* %2363, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3358, %union.tree_node* %2365, i8 zeroext %2369) #8, !dbg !10721
  %2370 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10723
  %2371 = load i32, i32* @flag_isoc94, align 4, !dbg !10723
  %tobool3363 = icmp eq i32 %2371, 0, !dbg !10723
  %conv3366 = zext i1 %tobool3363 to i8, !dbg !10723
  %2372 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10723
  %2373 = load i32, i32* @linux_uclibc, align 4, !dbg !10723
  %2374 = trunc i32 %2373 to i8, !dbg !10723
  %2375 = and i8 %2374, 1, !dbg !10723
  %2376 = xor i8 %2375, 1, !dbg !10723
  tail call fastcc void @def_builtin_1(i32 402, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.824, i64 0, i64 0), i32 3, %union.tree_node* %2370, %union.tree_node* %2370, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3366, %union.tree_node* %2372, i8 zeroext %2376) #8, !dbg !10723
  %2377 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10725
  %2378 = load i32, i32* @flag_isoc94, align 4, !dbg !10725
  %tobool3371 = icmp eq i32 %2378, 0, !dbg !10725
  %conv3374 = zext i1 %tobool3371 to i8, !dbg !10725
  %2379 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10725
  %2380 = load i32, i32* @linux_uclibc, align 4, !dbg !10725
  %2381 = trunc i32 %2380 to i8, !dbg !10725
  %2382 = and i8 %2381, 1, !dbg !10725
  %2383 = xor i8 %2382, 1, !dbg !10725
  tail call fastcc void @def_builtin_1(i32 403, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.825, i64 0, i64 0), i32 3, %union.tree_node* %2377, %union.tree_node* %2377, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3374, %union.tree_node* %2379, i8 zeroext %2383) #8, !dbg !10725
  %2384 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10727
  %2385 = load i32, i32* @flag_isoc94, align 4, !dbg !10727
  %tobool3379 = icmp eq i32 %2385, 0, !dbg !10727
  %conv3382 = zext i1 %tobool3379 to i8, !dbg !10727
  %2386 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10727
  %2387 = load i32, i32* @linux_uclibc, align 4, !dbg !10727
  %2388 = trunc i32 %2387 to i8, !dbg !10727
  %2389 = and i8 %2388, 1, !dbg !10727
  %2390 = xor i8 %2389, 1, !dbg !10727
  tail call fastcc void @def_builtin_1(i32 404, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.826, i64 0, i64 0), i32 3, %union.tree_node* %2384, %union.tree_node* %2384, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3382, %union.tree_node* %2386, i8 zeroext %2390) #8, !dbg !10727
  %2391 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10729
  %2392 = load i32, i32* @flag_isoc94, align 4, !dbg !10729
  %tobool3387 = icmp eq i32 %2392, 0, !dbg !10729
  %conv3390 = zext i1 %tobool3387 to i8, !dbg !10729
  %2393 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10729
  %2394 = load i32, i32* @linux_uclibc, align 4, !dbg !10729
  %2395 = trunc i32 %2394 to i8, !dbg !10729
  %2396 = and i8 %2395, 1, !dbg !10729
  %2397 = xor i8 %2396, 1, !dbg !10729
  tail call fastcc void @def_builtin_1(i32 405, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.827, i64 0, i64 0), i32 3, %union.tree_node* %2391, %union.tree_node* %2391, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3390, %union.tree_node* %2393, i8 zeroext %2397) #8, !dbg !10729
  %2398 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10731
  %2399 = load i32, i32* @flag_isoc94, align 4, !dbg !10731
  %tobool3395 = icmp eq i32 %2399, 0, !dbg !10731
  %conv3398 = zext i1 %tobool3395 to i8, !dbg !10731
  %2400 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10731
  %2401 = load i32, i32* @linux_uclibc, align 4, !dbg !10731
  %2402 = trunc i32 %2401 to i8, !dbg !10731
  %2403 = and i8 %2402, 1, !dbg !10731
  %2404 = xor i8 %2403, 1, !dbg !10731
  tail call fastcc void @def_builtin_1(i32 406, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.828, i64 0, i64 0), i32 3, %union.tree_node* %2398, %union.tree_node* %2398, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3398, %union.tree_node* %2400, i8 zeroext %2404) #8, !dbg !10731
  %2405 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10733
  %2406 = load i32, i32* @flag_isoc94, align 4, !dbg !10733
  %tobool3403 = icmp eq i32 %2406, 0, !dbg !10733
  %conv3406 = zext i1 %tobool3403 to i8, !dbg !10733
  %2407 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10733
  %2408 = load i32, i32* @linux_uclibc, align 4, !dbg !10733
  %2409 = trunc i32 %2408 to i8, !dbg !10733
  %2410 = and i8 %2409, 1, !dbg !10733
  %2411 = xor i8 %2410, 1, !dbg !10733
  tail call fastcc void @def_builtin_1(i32 407, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.829, i64 0, i64 0), i32 3, %union.tree_node* %2405, %union.tree_node* %2405, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3406, %union.tree_node* %2407, i8 zeroext %2411) #8, !dbg !10733
  %2412 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10735
  %2413 = load i32, i32* @flag_isoc94, align 4, !dbg !10735
  %tobool3411 = icmp eq i32 %2413, 0, !dbg !10735
  %conv3414 = zext i1 %tobool3411 to i8, !dbg !10735
  %2414 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10735
  %2415 = load i32, i32* @linux_uclibc, align 4, !dbg !10735
  %2416 = trunc i32 %2415 to i8, !dbg !10735
  %2417 = and i8 %2416, 1, !dbg !10735
  %2418 = xor i8 %2417, 1, !dbg !10735
  tail call fastcc void @def_builtin_1(i32 408, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.830, i64 0, i64 0), i32 3, %union.tree_node* %2412, %union.tree_node* %2412, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3414, %union.tree_node* %2414, i8 zeroext %2418) #8, !dbg !10735
  %2419 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 116), align 16, !dbg !10737
  %2420 = load i32, i32* @flag_isoc94, align 4, !dbg !10737
  %tobool3419 = icmp eq i32 %2420, 0, !dbg !10737
  %conv3422 = zext i1 %tobool3419 to i8, !dbg !10737
  %2421 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10737
  %2422 = load i32, i32* @linux_uclibc, align 4, !dbg !10737
  %2423 = trunc i32 %2422 to i8, !dbg !10737
  %2424 = and i8 %2423, 1, !dbg !10737
  %2425 = xor i8 %2424, 1, !dbg !10737
  tail call fastcc void @def_builtin_1(i32 409, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.831, i64 0, i64 0), i32 3, %union.tree_node* %2419, %union.tree_node* %2419, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3422, %union.tree_node* %2421, i8 zeroext %2425) #8, !dbg !10737
  %2426 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 117), align 8, !dbg !10739
  %2427 = load i32, i32* @flag_isoc94, align 4, !dbg !10739
  %tobool3427 = icmp eq i32 %2427, 0, !dbg !10739
  %conv3430 = zext i1 %tobool3427 to i8, !dbg !10739
  %2428 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10739
  %2429 = load i32, i32* @linux_uclibc, align 4, !dbg !10739
  %2430 = trunc i32 %2429 to i8, !dbg !10739
  %2431 = and i8 %2430, 1, !dbg !10739
  %2432 = xor i8 %2431, 1, !dbg !10739
  tail call fastcc void @def_builtin_1(i32 410, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.832, i64 0, i64 0), i32 3, %union.tree_node* %2426, %union.tree_node* %2426, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3430, %union.tree_node* %2428, i8 zeroext %2432) #8, !dbg !10739
  %2433 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 117), align 8, !dbg !10741
  %2434 = load i32, i32* @flag_isoc94, align 4, !dbg !10741
  %tobool3435 = icmp eq i32 %2434, 0, !dbg !10741
  %conv3438 = zext i1 %tobool3435 to i8, !dbg !10741
  %2435 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10741
  %2436 = load i32, i32* @linux_uclibc, align 4, !dbg !10741
  %2437 = trunc i32 %2436 to i8, !dbg !10741
  %2438 = and i8 %2437, 1, !dbg !10741
  %2439 = xor i8 %2438, 1, !dbg !10741
  tail call fastcc void @def_builtin_1(i32 411, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.833, i64 0, i64 0), i32 3, %union.tree_node* %2433, %union.tree_node* %2433, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3438, %union.tree_node* %2435, i8 zeroext %2439) #8, !dbg !10741
  %2440 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !10743
  %2441 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10743
  tail call fastcc void @def_builtin_1(i32 412, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.834, i64 0, i64 0), i32 3, %union.tree_node* %2440, %union.tree_node* %2440, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2441, i8 zeroext 1) #8, !dbg !10743
  %2442 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10745
  %2443 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10745
  tail call fastcc void @def_builtin_1(i32 413, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.835, i64 0, i64 0), i32 3, %union.tree_node* %2442, %union.tree_node* %2442, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2443, i8 zeroext 1) #8, !dbg !10745
  %2444 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 235), align 8, !dbg !10747
  %2445 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10747
  %2446 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10747
  tail call fastcc void @def_builtin_1(i32 414, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.836, i64 0, i64 0), i32 3, %union.tree_node* %2444, %union.tree_node* %2445, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2446, i8 zeroext 1) #8, !dbg !10747
  %2447 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 80), align 16, !dbg !10749
  %2448 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 50), align 16, !dbg !10749
  tail call fastcc void @def_builtin_1(i32 415, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.837, i64 0, i64 0), i32 3, %union.tree_node* %2447, %union.tree_node* %2447, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2448, i8 zeroext 0) #8, !dbg !10749
  %2449 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 250), align 16, !dbg !10751
  %2450 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10751
  %2451 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10751
  tail call fastcc void @def_builtin_1(i32 416, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.838, i64 0, i64 0), i32 3, %union.tree_node* %2449, %union.tree_node* %2450, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2451, i8 zeroext 1) #8, !dbg !10751
  %2452 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 235), align 8, !dbg !10753
  %2453 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10753
  %2454 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10753
  tail call fastcc void @def_builtin_1(i32 417, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.839, i64 0, i64 0), i32 3, %union.tree_node* %2452, %union.tree_node* %2453, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2454, i8 zeroext 1) #8, !dbg !10753
  %2455 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10755
  %2456 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10755
  %2457 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10755
  tail call fastcc void @def_builtin_1(i32 418, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.840, i64 0, i64 0), i32 3, %union.tree_node* %2455, %union.tree_node* %2456, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2457, i8 zeroext 1) #8, !dbg !10755
  %2458 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 126), align 16, !dbg !10757
  %2459 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10757
  %2460 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10757
  tail call fastcc void @def_builtin_1(i32 419, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.841, i64 0, i64 0), i32 3, %union.tree_node* %2458, %union.tree_node* %2459, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2460, i8 zeroext 1) #8, !dbg !10757
  %2461 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 127), align 8, !dbg !10759
  %2462 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10759
  %2463 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10759
  tail call fastcc void @def_builtin_1(i32 420, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.842, i64 0, i64 0), i32 3, %union.tree_node* %2461, %union.tree_node* %2462, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2463, i8 zeroext 1) #8, !dbg !10759
  %2464 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 169), align 8, !dbg !10761
  %2465 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10761
  tail call fastcc void @def_builtin_1(i32 421, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.843, i64 0, i64 0), i32 3, %union.tree_node* %2464, %union.tree_node* %2464, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2465, i8 zeroext 0) #8, !dbg !10761
  %2466 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 164), align 16, !dbg !10763
  %2467 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 50), align 16, !dbg !10763
  tail call fastcc void @def_builtin_1(i32 422, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.844, i64 0, i64 0), i32 3, %union.tree_node* %2466, %union.tree_node* %2466, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2467, i8 zeroext 1) #8, !dbg !10763
  %2468 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10765
  %2469 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10765
  %2470 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10765
  tail call fastcc void @def_builtin_1(i32 423, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.845, i64 0, i64 0), i32 3, %union.tree_node* %2468, %union.tree_node* %2469, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2470, i8 zeroext 1) #8, !dbg !10765
  %2471 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 82), align 16, !dbg !10767
  %2472 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10767
  %2473 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10767
  tail call fastcc void @def_builtin_1(i32 424, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.846, i64 0, i64 0), i32 3, %union.tree_node* %2471, %union.tree_node* %2472, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2473, i8 zeroext 1) #8, !dbg !10767
  %2474 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 88), align 16, !dbg !10769
  %2475 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10769
  %2476 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10769
  tail call fastcc void @def_builtin_1(i32 425, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.847, i64 0, i64 0), i32 3, %union.tree_node* %2474, %union.tree_node* %2475, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2476, i8 zeroext 1) #8, !dbg !10769
  %2477 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 84), align 16, !dbg !10771
  %2478 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10771
  %2479 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10771
  tail call fastcc void @def_builtin_1(i32 426, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.848, i64 0, i64 0), i32 3, %union.tree_node* %2477, %union.tree_node* %2478, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2479, i8 zeroext 1) #8, !dbg !10771
  %2480 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 86), align 16, !dbg !10773
  %2481 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10773
  %2482 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10773
  tail call fastcc void @def_builtin_1(i32 427, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.849, i64 0, i64 0), i32 3, %union.tree_node* %2480, %union.tree_node* %2481, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2482, i8 zeroext 1) #8, !dbg !10773
  %2483 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10775
  %2484 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10775
  %2485 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10775
  tail call fastcc void @def_builtin_1(i32 428, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.850, i64 0, i64 0), i32 3, %union.tree_node* %2483, %union.tree_node* %2484, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2485, i8 zeroext 1) #8, !dbg !10775
  %2486 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 82), align 16, !dbg !10777
  %2487 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10777
  %2488 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10777
  tail call fastcc void @def_builtin_1(i32 429, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.851, i64 0, i64 0), i32 3, %union.tree_node* %2486, %union.tree_node* %2487, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2488, i8 zeroext 1) #8, !dbg !10777
  %2489 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 88), align 16, !dbg !10779
  %2490 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10779
  %2491 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10779
  tail call fastcc void @def_builtin_1(i32 430, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.852, i64 0, i64 0), i32 3, %union.tree_node* %2489, %union.tree_node* %2490, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2491, i8 zeroext 1) #8, !dbg !10779
  %2492 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 84), align 16, !dbg !10781
  %2493 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10781
  %2494 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10781
  tail call fastcc void @def_builtin_1(i32 431, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.853, i64 0, i64 0), i32 3, %union.tree_node* %2492, %union.tree_node* %2493, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2494, i8 zeroext 1) #8, !dbg !10781
  %2495 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 86), align 16, !dbg !10783
  %2496 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10783
  %2497 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10783
  tail call fastcc void @def_builtin_1(i32 432, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.854, i64 0, i64 0), i32 3, %union.tree_node* %2495, %union.tree_node* %2496, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2497, i8 zeroext 1) #8, !dbg !10783
  %2498 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 190), align 16, !dbg !10785
  %2499 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 106), align 16, !dbg !10785
  tail call fastcc void @def_builtin_1(i32 433, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.855, i64 0, i64 0), i32 3, %union.tree_node* %2498, %union.tree_node* %2498, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2499, i8 zeroext 0) #8, !dbg !10785
  %2500 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 132), align 16, !dbg !10787
  %2501 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 106), align 16, !dbg !10787
  tail call fastcc void @def_builtin_1(i32 434, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.856, i64 0, i64 0), i32 3, %union.tree_node* %2500, %union.tree_node* %2500, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2501, i8 zeroext 0) #8, !dbg !10787
  %2502 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 54), align 16, !dbg !10789
  %2503 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10789
  %2504 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10789
  tail call fastcc void @def_builtin_1(i32 435, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.857, i64 0, i64 0), i32 3, %union.tree_node* %2502, %union.tree_node* %2503, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2504, i8 zeroext 1) #8, !dbg !10789
  %2505 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 57), align 8, !dbg !10791
  %2506 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10791
  %2507 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10791
  tail call fastcc void @def_builtin_1(i32 436, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.858, i64 0, i64 0), i32 3, %union.tree_node* %2505, %union.tree_node* %2506, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2507, i8 zeroext 1) #8, !dbg !10791
  %2508 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 138), align 16, !dbg !10793
  %2509 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10793
  %2510 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10793
  tail call fastcc void @def_builtin_1(i32 437, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.859, i64 0, i64 0), i32 3, %union.tree_node* %2508, %union.tree_node* %2509, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2510, i8 zeroext 1) #8, !dbg !10793
  %2511 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10795
  %2512 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10795
  %2513 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10795
  tail call fastcc void @def_builtin_1(i32 438, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.860, i64 0, i64 0), i32 3, %union.tree_node* %2511, %union.tree_node* %2512, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2513, i8 zeroext 1) #8, !dbg !10795
  %2514 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 241), align 8, !dbg !10797
  %2515 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 51), align 8, !dbg !10797
  tail call fastcc void @def_builtin_1(i32 439, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.861, i64 0, i64 0), i32 3, %union.tree_node* %2514, %union.tree_node* %2514, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2515, i8 zeroext 0) #8, !dbg !10797
  %2516 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 241), align 8, !dbg !10799
  %2517 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 51), align 8, !dbg !10799
  tail call fastcc void @def_builtin_1(i32 440, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.862, i64 0, i64 0), i32 3, %union.tree_node* %2516, %union.tree_node* %2516, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2517, i8 zeroext 0) #8, !dbg !10799
  %2518 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 241), align 8, !dbg !10801
  %2519 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 56), align 16, !dbg !10801
  tail call fastcc void @def_builtin_1(i32 441, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.863, i64 0, i64 0), i32 3, %union.tree_node* %2518, %union.tree_node* %2518, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2519, i8 zeroext 0) #8, !dbg !10801
  %2520 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 170), align 16, !dbg !10803
  %2521 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10803
  tail call fastcc void @def_builtin_1(i32 442, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.864, i64 0, i64 0), i32 3, %union.tree_node* %2520, %union.tree_node* %2520, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2521, i8 zeroext 0) #8, !dbg !10803
  %2522 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 170), align 16, !dbg !10805
  %2523 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10805
  tail call fastcc void @def_builtin_1(i32 443, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.865, i64 0, i64 0), i32 3, %union.tree_node* %2522, %union.tree_node* %2522, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2523, i8 zeroext 0) #8, !dbg !10805
  %2524 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 201), align 8, !dbg !10807
  %2525 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10807
  tail call fastcc void @def_builtin_1(i32 444, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.866, i64 0, i64 0), i32 3, %union.tree_node* %2524, %union.tree_node* %2524, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2525, i8 zeroext 0) #8, !dbg !10807
  %2526 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 107), align 8, !dbg !10809
  %2527 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10809
  tail call fastcc void @def_builtin_1(i32 445, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.867, i64 0, i64 0), i32 3, %union.tree_node* %2526, %union.tree_node* %2526, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2527, i8 zeroext 1) #8, !dbg !10809
  %2528 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 140), align 16, !dbg !10811
  %2529 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10811
  %2530 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10811
  tail call fastcc void @def_builtin_1(i32 446, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.868, i64 0, i64 0), i32 3, %union.tree_node* %2528, %union.tree_node* %2529, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2530, i8 zeroext 1) #8, !dbg !10811
  %2531 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 115), align 8, !dbg !10813
  %2532 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10813
  %2533 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10813
  tail call fastcc void @def_builtin_1(i32 447, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.869, i64 0, i64 0), i32 3, %union.tree_node* %2531, %union.tree_node* %2532, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2533, i8 zeroext 1) #8, !dbg !10813
  %2534 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 105), align 8, !dbg !10815
  %2535 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10815
  %2536 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10815
  tail call fastcc void @def_builtin_1(i32 448, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.870, i64 0, i64 0), i32 3, %union.tree_node* %2534, %union.tree_node* %2535, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2536, i8 zeroext 1) #8, !dbg !10815
  %2537 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 81), align 8, !dbg !10817
  %2538 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10817
  tail call fastcc void @def_builtin_1(i32 449, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.871, i64 0, i64 0), i32 3, %union.tree_node* %2537, %union.tree_node* %2537, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2538, i8 zeroext 0) #8, !dbg !10817
  %2539 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 87), align 8, !dbg !10819
  %2540 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10819
  tail call fastcc void @def_builtin_1(i32 450, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.872, i64 0, i64 0), i32 3, %union.tree_node* %2539, %union.tree_node* %2539, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2540, i8 zeroext 0) #8, !dbg !10819
  %2541 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 83), align 8, !dbg !10821
  %2542 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10821
  tail call fastcc void @def_builtin_1(i32 451, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.873, i64 0, i64 0), i32 3, %union.tree_node* %2541, %union.tree_node* %2541, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2542, i8 zeroext 0) #8, !dbg !10821
  %2543 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 85), align 8, !dbg !10823
  %2544 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10823
  tail call fastcc void @def_builtin_1(i32 452, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.874, i64 0, i64 0), i32 3, %union.tree_node* %2543, %union.tree_node* %2543, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2544, i8 zeroext 0) #8, !dbg !10823
  %2545 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 55), align 8, !dbg !10825
  %2546 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10825
  tail call fastcc void @def_builtin_1(i32 453, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.875, i64 0, i64 0), i32 3, %union.tree_node* %2545, %union.tree_node* %2545, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2546, i8 zeroext 0) #8, !dbg !10825
  %2547 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 79), align 8, !dbg !10827
  %2548 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10827
  %2549 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10827
  tail call fastcc void @def_builtin_1(i32 454, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.876, i64 0, i64 0), i32 3, %union.tree_node* %2547, %union.tree_node* %2548, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2549, i8 zeroext 1) #8, !dbg !10827
  %2550 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 102), align 16, !dbg !10829
  %2551 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10829
  tail call fastcc void @def_builtin_1(i32 455, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.877, i64 0, i64 0), i32 3, %union.tree_node* %2550, %union.tree_node* %2550, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2551, i8 zeroext 1) #8, !dbg !10829
  %2552 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 105), align 8, !dbg !10831
  %2553 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10831
  %2554 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10831
  tail call fastcc void @def_builtin_1(i32 456, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.878, i64 0, i64 0), i32 3, %union.tree_node* %2552, %union.tree_node* %2553, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2554, i8 zeroext 1) #8, !dbg !10831
  %2555 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 114), align 16, !dbg !10833
  %2556 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 105), align 8, !dbg !10833
  tail call fastcc void @def_builtin_1(i32 457, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.879, i64 0, i64 0), i32 3, %union.tree_node* %2555, %union.tree_node* %2555, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2556, i8 zeroext 0) #8, !dbg !10833
  %2557 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 66), align 16, !dbg !10835
  %2558 = load i32, i32* @flag_isoc99, align 4, !dbg !10835
  %tobool3443 = icmp eq i32 %2558, 0, !dbg !10835
  %conv3446 = zext i1 %tobool3443 to i8, !dbg !10835
  %2559 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10835
  %2560 = load i32, i32* @linux_uclibc, align 4, !dbg !10835
  %2561 = trunc i32 %2560 to i8, !dbg !10835
  %2562 = and i8 %2561, 1, !dbg !10835
  %2563 = xor i8 %2562, 1, !dbg !10835
  tail call fastcc void @def_builtin_1(i32 458, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.880, i64 0, i64 0), i32 3, %union.tree_node* %2557, %union.tree_node* %2557, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3446, %union.tree_node* %2559, i8 zeroext %2563) #8, !dbg !10835
  %2564 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 102), align 16, !dbg !10837
  %2565 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10837
  %2566 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10837
  tail call fastcc void @def_builtin_1(i32 459, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.881, i64 0, i64 0), i32 3, %union.tree_node* %2564, %union.tree_node* %2565, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2566, i8 zeroext 1) #8, !dbg !10837
  %2567 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 91), align 8, !dbg !10839
  %2568 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10839
  tail call fastcc void @def_builtin_1(i32 460, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.882, i64 0, i64 0), i32 3, %union.tree_node* %2567, %union.tree_node* %2567, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2568, i8 zeroext 0) #8, !dbg !10839
  %2569 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 90), align 16, !dbg !10841
  %2570 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10841
  tail call fastcc void @def_builtin_1(i32 461, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.883, i64 0, i64 0), i32 3, %union.tree_node* %2569, %union.tree_node* %2569, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2570, i8 zeroext 0) #8, !dbg !10841
  %2571 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 92), align 16, !dbg !10843
  %2572 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10843
  tail call fastcc void @def_builtin_1(i32 462, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.884, i64 0, i64 0), i32 3, %union.tree_node* %2571, %union.tree_node* %2571, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2572, i8 zeroext 0) #8, !dbg !10843
  %2573 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 93), align 8, !dbg !10845
  %2574 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10845
  tail call fastcc void @def_builtin_1(i32 463, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.885, i64 0, i64 0), i32 3, %union.tree_node* %2573, %union.tree_node* %2573, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2574, i8 zeroext 0) #8, !dbg !10845
  %2575 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 94), align 16, !dbg !10847
  %2576 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10847
  tail call fastcc void @def_builtin_1(i32 464, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.886, i64 0, i64 0), i32 3, %union.tree_node* %2575, %union.tree_node* %2575, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2576, i8 zeroext 0) #8, !dbg !10847
  %2577 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 95), align 8, !dbg !10849
  %2578 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10849
  tail call fastcc void @def_builtin_1(i32 465, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.887, i64 0, i64 0), i32 3, %union.tree_node* %2577, %union.tree_node* %2577, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2578, i8 zeroext 0) #8, !dbg !10849
  %2579 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 248), align 16, !dbg !10851
  %2580 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10851
  %2581 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10851
  tail call fastcc void @def_builtin_1(i32 466, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.888, i64 0, i64 0), i32 3, %union.tree_node* %2579, %union.tree_node* %2580, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2581, i8 zeroext 1) #8, !dbg !10851
  %2582 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10853
  %2583 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10853
  %2584 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10853
  tail call fastcc void @def_builtin_1(i32 467, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.889, i64 0, i64 0), i32 3, %union.tree_node* %2582, %union.tree_node* %2583, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2584, i8 zeroext 1) #8, !dbg !10853
  %2585 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10855
  %2586 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10855
  %2587 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10855
  tail call fastcc void @def_builtin_1(i32 468, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.890, i64 0, i64 0), i32 3, %union.tree_node* %2585, %union.tree_node* %2586, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2587, i8 zeroext 1) #8, !dbg !10855
  %2588 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10857
  %2589 = load i32, i32* @flag_isoc99, align 4, !dbg !10857
  %tobool3451 = icmp eq i32 %2589, 0, !dbg !10857
  %conv3454 = zext i1 %tobool3451 to i8, !dbg !10857
  %2590 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10857
  %2591 = load i32, i32* @linux_uclibc, align 4, !dbg !10857
  %2592 = trunc i32 %2591 to i8, !dbg !10857
  %2593 = and i8 %2592, 1, !dbg !10857
  %2594 = xor i8 %2593, 1, !dbg !10857
  tail call fastcc void @def_builtin_1(i32 469, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.891, i64 0, i64 0), i32 3, %union.tree_node* %2588, %union.tree_node* %2588, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3454, %union.tree_node* %2590, i8 zeroext %2594) #8, !dbg !10857
  %2595 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 90), align 16, !dbg !10859
  %2596 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10859
  tail call fastcc void @def_builtin_1(i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.892, i64 0, i64 0), i32 3, %union.tree_node* %2595, %union.tree_node* %2595, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2596, i8 zeroext 0) #8, !dbg !10859
  %2597 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 92), align 16, !dbg !10861
  %2598 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10861
  tail call fastcc void @def_builtin_1(i32 471, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.893, i64 0, i64 0), i32 3, %union.tree_node* %2597, %union.tree_node* %2597, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2598, i8 zeroext 0) #8, !dbg !10861
  %2599 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 93), align 8, !dbg !10863
  %2600 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10863
  tail call fastcc void @def_builtin_1(i32 472, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.894, i64 0, i64 0), i32 3, %union.tree_node* %2599, %union.tree_node* %2599, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2600, i8 zeroext 0) #8, !dbg !10863
  %2601 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 94), align 16, !dbg !10865
  %2602 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10865
  tail call fastcc void @def_builtin_1(i32 473, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.895, i64 0, i64 0), i32 3, %union.tree_node* %2601, %union.tree_node* %2601, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2602, i8 zeroext 0) #8, !dbg !10865
  %2603 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 95), align 8, !dbg !10867
  %2604 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10867
  tail call fastcc void @def_builtin_1(i32 474, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.896, i64 0, i64 0), i32 3, %union.tree_node* %2603, %union.tree_node* %2603, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2604, i8 zeroext 0) #8, !dbg !10867
  %2605 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10869
  %2606 = load i32, i32* @flag_isoc99, align 4, !dbg !10869
  %tobool3459 = icmp eq i32 %2606, 0, !dbg !10869
  %conv3462 = zext i1 %tobool3459 to i8, !dbg !10869
  %2607 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10869
  %2608 = load i32, i32* @linux_uclibc, align 4, !dbg !10869
  %2609 = trunc i32 %2608 to i8, !dbg !10869
  %2610 = and i8 %2609, 1, !dbg !10869
  %2611 = xor i8 %2610, 1, !dbg !10869
  tail call fastcc void @def_builtin_1(i32 475, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.897, i64 0, i64 0), i32 3, %union.tree_node* %2605, %union.tree_node* %2605, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3462, %union.tree_node* %2607, i8 zeroext %2611) #8, !dbg !10869
  %2612 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 90), align 16, !dbg !10871
  %2613 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10871
  tail call fastcc void @def_builtin_1(i32 476, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.898, i64 0, i64 0), i32 3, %union.tree_node* %2612, %union.tree_node* %2612, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2613, i8 zeroext 0) #8, !dbg !10871
  %2614 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 92), align 16, !dbg !10873
  %2615 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10873
  tail call fastcc void @def_builtin_1(i32 477, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.899, i64 0, i64 0), i32 3, %union.tree_node* %2614, %union.tree_node* %2614, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2615, i8 zeroext 0) #8, !dbg !10873
  %2616 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 93), align 8, !dbg !10875
  %2617 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10875
  tail call fastcc void @def_builtin_1(i32 478, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.900, i64 0, i64 0), i32 3, %union.tree_node* %2616, %union.tree_node* %2616, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2617, i8 zeroext 0) #8, !dbg !10875
  %2618 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 94), align 16, !dbg !10877
  %2619 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10877
  tail call fastcc void @def_builtin_1(i32 479, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.901, i64 0, i64 0), i32 3, %union.tree_node* %2618, %union.tree_node* %2618, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2619, i8 zeroext 0) #8, !dbg !10877
  %2620 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 95), align 8, !dbg !10879
  %2621 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10879
  tail call fastcc void @def_builtin_1(i32 480, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.902, i64 0, i64 0), i32 3, %union.tree_node* %2620, %union.tree_node* %2620, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2621, i8 zeroext 0) #8, !dbg !10879
  %2622 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10881
  %2623 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10881
  %2624 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10881
  tail call fastcc void @def_builtin_1(i32 481, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.903, i64 0, i64 0), i32 3, %union.tree_node* %2622, %union.tree_node* %2623, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2624, i8 zeroext 1) #8, !dbg !10881
  %2625 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10883
  %2626 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10883
  %2627 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10883
  tail call fastcc void @def_builtin_1(i32 482, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.904, i64 0, i64 0), i32 3, %union.tree_node* %2625, %union.tree_node* %2626, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2627, i8 zeroext 1) #8, !dbg !10883
  %2628 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10885
  %2629 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10885
  %2630 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10885
  tail call fastcc void @def_builtin_1(i32 483, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.905, i64 0, i64 0), i32 3, %union.tree_node* %2628, %union.tree_node* %2629, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2630, i8 zeroext 1) #8, !dbg !10885
  %2631 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10887
  %2632 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10887
  %2633 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10887
  tail call fastcc void @def_builtin_1(i32 484, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.906, i64 0, i64 0), i32 3, %union.tree_node* %2631, %union.tree_node* %2632, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2633, i8 zeroext 1) #8, !dbg !10887
  %2634 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10889
  %2635 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10889
  %2636 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10889
  tail call fastcc void @def_builtin_1(i32 485, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.907, i64 0, i64 0), i32 3, %union.tree_node* %2634, %union.tree_node* %2635, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2636, i8 zeroext 1) #8, !dbg !10889
  %2637 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10891
  %2638 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10891
  %2639 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10891
  tail call fastcc void @def_builtin_1(i32 486, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.908, i64 0, i64 0), i32 3, %union.tree_node* %2637, %union.tree_node* %2638, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2639, i8 zeroext 1) #8, !dbg !10891
  %2640 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 234), align 16, !dbg !10893
  %2641 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10893
  %2642 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !10893
  tail call fastcc void @def_builtin_1(i32 487, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.909, i64 0, i64 0), i32 3, %union.tree_node* %2640, %union.tree_node* %2641, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2642, i8 zeroext 1) #8, !dbg !10893
  %2643 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 64), align 16, !dbg !10895
  %2644 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10895
  tail call fastcc void @def_builtin_1(i32 488, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.910, i64 0, i64 0), i32 3, %union.tree_node* %2643, %union.tree_node* %2643, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2644, i8 zeroext 1) #8, !dbg !10895
  %2645 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 65), align 8, !dbg !10897
  %2646 = load i32, i32* @flag_isoc99, align 4, !dbg !10897
  %tobool3467 = icmp eq i32 %2646, 0, !dbg !10897
  %conv3470 = zext i1 %tobool3467 to i8, !dbg !10897
  %2647 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10897
  %2648 = load i32, i32* @linux_uclibc, align 4, !dbg !10897
  %2649 = trunc i32 %2648 to i8, !dbg !10897
  %2650 = and i8 %2649, 1, !dbg !10897
  %2651 = xor i8 %2650, 1, !dbg !10897
  tail call fastcc void @def_builtin_1(i32 489, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.911, i64 0, i64 0), i32 3, %union.tree_node* %2645, %union.tree_node* %2645, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3470, %union.tree_node* %2647, i8 zeroext %2651) #8, !dbg !10897
  %2652 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 129), align 8, !dbg !10899
  %2653 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10899
  %2654 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10899
  tail call fastcc void @def_builtin_1(i32 490, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.912, i64 0, i64 0), i32 3, %union.tree_node* %2652, %union.tree_node* %2653, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2654, i8 zeroext 1) #8, !dbg !10899
  %2655 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 80), align 16, !dbg !10901
  %2656 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 50), align 16, !dbg !10901
  tail call fastcc void @def_builtin_1(i32 491, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.913, i64 0, i64 0), i32 3, %union.tree_node* %2655, %union.tree_node* %2655, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2656, i8 zeroext 1) #8, !dbg !10901
  %2657 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 235), align 8, !dbg !10903
  %2658 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10903
  %2659 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10903
  tail call fastcc void @def_builtin_1(i32 492, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.914, i64 0, i64 0), i32 3, %union.tree_node* %2657, %union.tree_node* %2658, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2659, i8 zeroext 1) #8, !dbg !10903
  %2660 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 82), align 16, !dbg !10905
  %2661 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10905
  %2662 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10905
  tail call fastcc void @def_builtin_1(i32 493, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.915, i64 0, i64 0), i32 3, %union.tree_node* %2660, %union.tree_node* %2661, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2662, i8 zeroext 1) #8, !dbg !10905
  %2663 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 88), align 16, !dbg !10907
  %2664 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10907
  %2665 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10907
  tail call fastcc void @def_builtin_1(i32 494, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.916, i64 0, i64 0), i32 3, %union.tree_node* %2663, %union.tree_node* %2664, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2665, i8 zeroext 1) #8, !dbg !10907
  %2666 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 84), align 16, !dbg !10909
  %2667 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10909
  %2668 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10909
  tail call fastcc void @def_builtin_1(i32 495, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.917, i64 0, i64 0), i32 3, %union.tree_node* %2666, %union.tree_node* %2667, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2668, i8 zeroext 1) #8, !dbg !10909
  %2669 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 86), align 16, !dbg !10911
  %2670 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10911
  %2671 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10911
  tail call fastcc void @def_builtin_1(i32 496, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.918, i64 0, i64 0), i32 3, %union.tree_node* %2669, %union.tree_node* %2670, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2671, i8 zeroext 1) #8, !dbg !10911
  %2672 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 82), align 16, !dbg !10913
  %2673 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10913
  %2674 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10913
  tail call fastcc void @def_builtin_1(i32 497, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.919, i64 0, i64 0), i32 3, %union.tree_node* %2672, %union.tree_node* %2673, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2674, i8 zeroext 1) #8, !dbg !10913
  %2675 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 88), align 16, !dbg !10915
  %2676 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10915
  %2677 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10915
  tail call fastcc void @def_builtin_1(i32 498, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.920, i64 0, i64 0), i32 3, %union.tree_node* %2675, %union.tree_node* %2676, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2677, i8 zeroext 1) #8, !dbg !10915
  %2678 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 84), align 16, !dbg !10917
  %2679 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10917
  %2680 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10917
  tail call fastcc void @def_builtin_1(i32 499, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.921, i64 0, i64 0), i32 3, %union.tree_node* %2678, %union.tree_node* %2679, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2680, i8 zeroext 1) #8, !dbg !10917
  %2681 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 86), align 16, !dbg !10919
  %2682 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10919
  %2683 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !10919
  tail call fastcc void @def_builtin_1(i32 500, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.922, i64 0, i64 0), i32 3, %union.tree_node* %2681, %union.tree_node* %2682, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2683, i8 zeroext 1) #8, !dbg !10919
  %2684 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 237), align 8, !dbg !10921
  %2685 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10921
  %2686 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 44), align 16, !dbg !10921
  tail call fastcc void @def_builtin_1(i32 501, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.923, i64 0, i64 0), i32 3, %union.tree_node* %2684, %union.tree_node* %2685, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2686, i8 zeroext 1) #8, !dbg !10921
  %2687 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 165), align 8, !dbg !10923
  %2688 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10923
  tail call fastcc void @def_builtin_1(i32 502, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.924, i64 0, i64 0), i32 3, %union.tree_node* %2687, %union.tree_node* %2687, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2688, i8 zeroext 1) #8, !dbg !10923
  %2689 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 102), align 16, !dbg !10925
  %2690 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10925
  %2691 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10925
  tail call fastcc void @def_builtin_1(i32 503, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.925, i64 0, i64 0), i32 3, %union.tree_node* %2689, %union.tree_node* %2690, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2691, i8 zeroext 1) #8, !dbg !10925
  %2692 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 79), align 8, !dbg !10927
  %2693 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10927
  %2694 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10927
  tail call fastcc void @def_builtin_1(i32 504, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0), i32 3, %union.tree_node* %2692, %union.tree_node* %2693, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2694, i8 zeroext 1) #8, !dbg !10927
  %2695 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 235), align 8, !dbg !10929
  %2696 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10929
  %2697 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10929
  tail call fastcc void @def_builtin_1(i32 505, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.927, i64 0, i64 0), i32 3, %union.tree_node* %2695, %union.tree_node* %2696, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2697, i8 zeroext 1) #8, !dbg !10929
  %2698 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 89), align 8, !dbg !10931
  %2699 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10931
  %2700 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10931
  tail call fastcc void @def_builtin_1(i32 506, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.928, i64 0, i64 0), i32 3, %union.tree_node* %2698, %union.tree_node* %2699, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2700, i8 zeroext 1) #8, !dbg !10931
  %2701 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 244), align 16, !dbg !10933
  %2702 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 104), align 16, !dbg !10933
  tail call fastcc void @def_builtin_1(i32 507, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.929, i64 0, i64 0), i32 3, %union.tree_node* %2701, %union.tree_node* %2701, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2702, i8 zeroext 0) #8, !dbg !10933
  %2703 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 217), align 8, !dbg !10935
  %2704 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 102), align 16, !dbg !10935
  tail call fastcc void @def_builtin_1(i32 508, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.930, i64 0, i64 0), i32 3, %union.tree_node* %2703, %union.tree_node* %2703, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, %union.tree_node* %2704, i8 zeroext 1) #8, !dbg !10935
  %2705 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !10937
  %2706 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10937
  %2707 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10937
  tail call fastcc void @def_builtin_1(i32 509, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.931, i64 0, i64 0), i32 3, %union.tree_node* %2705, %union.tree_node* %2706, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2707, i8 zeroext 1) #8, !dbg !10937
  %2708 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !10939
  %2709 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10939
  %2710 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10939
  tail call fastcc void @def_builtin_1(i32 510, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.932, i64 0, i64 0), i32 3, %union.tree_node* %2708, %union.tree_node* %2709, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2710, i8 zeroext 1) #8, !dbg !10939
  %2711 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !10941
  %2712 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10941
  %2713 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10941
  tail call fastcc void @def_builtin_1(i32 511, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.933, i64 0, i64 0), i32 3, %union.tree_node* %2711, %union.tree_node* %2712, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2713, i8 zeroext 1) #8, !dbg !10941
  %2714 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 129), align 8, !dbg !10943
  %2715 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10943
  %2716 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !10943
  tail call fastcc void @def_builtin_1(i32 512, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.934, i64 0, i64 0), i32 3, %union.tree_node* %2714, %union.tree_node* %2715, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2716, i8 zeroext 1) #8, !dbg !10943
  %2717 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 139), align 8, !dbg !10945
  %2718 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10945
  %2719 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10945
  tail call fastcc void @def_builtin_1(i32 513, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.935, i64 0, i64 0), i32 3, %union.tree_node* %2717, %union.tree_node* %2718, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2719, i8 zeroext 1) #8, !dbg !10945
  %2720 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 106), align 16, !dbg !10947
  %2721 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10947
  %2722 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10947
  tail call fastcc void @def_builtin_1(i32 514, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.936, i64 0, i64 0), i32 3, %union.tree_node* %2720, %union.tree_node* %2721, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2722, i8 zeroext 1) #8, !dbg !10947
  %2723 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 236), align 16, !dbg !10949
  %2724 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10949
  %2725 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10949
  tail call fastcc void @def_builtin_1(i32 515, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.937, i64 0, i64 0), i32 3, %union.tree_node* %2723, %union.tree_node* %2724, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2725, i8 zeroext 1) #8, !dbg !10949
  %2726 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 56), align 16, !dbg !10951
  %2727 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10951
  %2728 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10951
  tail call fastcc void @def_builtin_1(i32 516, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.938, i64 0, i64 0), i32 3, %union.tree_node* %2726, %union.tree_node* %2727, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2728, i8 zeroext 1) #8, !dbg !10951
  %2729 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 56), align 16, !dbg !10953
  %2730 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10953
  %2731 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10953
  tail call fastcc void @def_builtin_1(i32 517, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.939, i64 0, i64 0), i32 3, %union.tree_node* %2729, %union.tree_node* %2730, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2731, i8 zeroext 1) #8, !dbg !10953
  %2732 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 107), align 8, !dbg !10955
  %2733 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10955
  tail call fastcc void @def_builtin_1(i32 518, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.940, i64 0, i64 0), i32 3, %union.tree_node* %2732, %union.tree_node* %2732, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2733, i8 zeroext 0) #8, !dbg !10955
  %2734 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 107), align 8, !dbg !10957
  %2735 = load i32, i32* @flag_isoc99, align 4, !dbg !10957
  %tobool3475 = icmp eq i32 %2735, 0, !dbg !10957
  %conv3478 = zext i1 %tobool3475 to i8, !dbg !10957
  %2736 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !10957
  %2737 = load i32, i32* @linux_uclibc, align 4, !dbg !10957
  %2738 = trunc i32 %2737 to i8, !dbg !10957
  %2739 = and i8 %2738, 1, !dbg !10957
  %2740 = xor i8 %2739, 1, !dbg !10957
  tail call fastcc void @def_builtin_1(i32 519, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.941, i64 0, i64 0), i32 3, %union.tree_node* %2734, %union.tree_node* %2734, i8 zeroext 1, i8 zeroext 1, i8 zeroext %conv3478, %union.tree_node* %2736, i8 zeroext %2740) #8, !dbg !10957
  %2741 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 171), align 8, !dbg !10959
  %2742 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10959
  %2743 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !10959
  tail call fastcc void @def_builtin_1(i32 528, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.942, i64 0, i64 0), i32 3, %union.tree_node* %2741, %union.tree_node* %2742, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2743, i8 zeroext 1) #8, !dbg !10959
  %2744 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 218), align 16, !dbg !10961
  %2745 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10961
  tail call fastcc void @def_builtin_1(i32 529, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.943, i64 0, i64 0), i32 3, %union.tree_node* %2744, %union.tree_node* %2744, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2745, i8 zeroext 0) #8, !dbg !10961
  %2746 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 218), align 16, !dbg !10963
  %2747 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10963
  tail call fastcc void @def_builtin_1(i32 530, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.944, i64 0, i64 0), i32 3, %union.tree_node* %2746, %union.tree_node* %2746, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2747, i8 zeroext 0) #8, !dbg !10963
  %2748 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 218), align 16, !dbg !10965
  %2749 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10965
  tail call fastcc void @def_builtin_1(i32 531, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.945, i64 0, i64 0), i32 3, %union.tree_node* %2748, %union.tree_node* %2748, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2749, i8 zeroext 0) #8, !dbg !10965
  %2750 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 219), align 8, !dbg !10967
  %2751 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10967
  tail call fastcc void @def_builtin_1(i32 532, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.946, i64 0, i64 0), i32 3, %union.tree_node* %2750, %union.tree_node* %2750, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2751, i8 zeroext 0) #8, !dbg !10967
  %2752 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 180), align 16, !dbg !10969
  %2753 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10969
  tail call fastcc void @def_builtin_1(i32 533, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.947, i64 0, i64 0), i32 3, %union.tree_node* %2752, %union.tree_node* %2752, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2753, i8 zeroext 0) #8, !dbg !10969
  %2754 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 180), align 16, !dbg !10971
  %2755 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10971
  tail call fastcc void @def_builtin_1(i32 534, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.948, i64 0, i64 0), i32 3, %union.tree_node* %2754, %union.tree_node* %2754, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2755, i8 zeroext 0) #8, !dbg !10971
  %2756 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 180), align 16, !dbg !10973
  %2757 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10973
  tail call fastcc void @def_builtin_1(i32 535, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.949, i64 0, i64 0), i32 3, %union.tree_node* %2756, %union.tree_node* %2756, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2757, i8 zeroext 0) #8, !dbg !10973
  %2758 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 220), align 16, !dbg !10975
  %2759 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10975
  tail call fastcc void @def_builtin_1(i32 536, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.950, i64 0, i64 0), i32 3, %union.tree_node* %2758, %union.tree_node* %2758, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2759, i8 zeroext 0) #8, !dbg !10975
  %2760 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 220), align 16, !dbg !10977
  %2761 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !10977
  tail call fastcc void @def_builtin_1(i32 537, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.951, i64 0, i64 0), i32 3, %union.tree_node* %2760, %union.tree_node* %2760, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2761, i8 zeroext 0) #8, !dbg !10977
  %2762 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 247), align 8, !dbg !10979
  %2763 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 90), align 16, !dbg !10979
  tail call fastcc void @def_builtin_1(i32 538, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.952, i64 0, i64 0), i32 3, %union.tree_node* %2762, %union.tree_node* %2762, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2763, i8 zeroext 0) #8, !dbg !10979
  %2764 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 246), align 16, !dbg !10981
  %2765 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 86), align 16, !dbg !10981
  tail call fastcc void @def_builtin_1(i32 539, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.953, i64 0, i64 0), i32 3, %union.tree_node* %2764, %union.tree_node* %2764, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2765, i8 zeroext 0) #8, !dbg !10981
  %2766 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 226), align 16, !dbg !10983
  %2767 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 88), align 16, !dbg !10983
  tail call fastcc void @def_builtin_1(i32 540, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.954, i64 0, i64 0), i32 3, %union.tree_node* %2766, %union.tree_node* %2766, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2767, i8 zeroext 0) #8, !dbg !10983
  %2768 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 224), align 16, !dbg !10985
  %2769 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 84), align 16, !dbg !10985
  tail call fastcc void @def_builtin_1(i32 541, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.955, i64 0, i64 0), i32 3, %union.tree_node* %2768, %union.tree_node* %2768, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2769, i8 zeroext 0) #8, !dbg !10985
  %2770 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 245), align 8, !dbg !10987
  %2771 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 81), align 8, !dbg !10987
  tail call fastcc void @def_builtin_1(i32 542, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.956, i64 0, i64 0), i32 3, %union.tree_node* %2770, %union.tree_node* %2770, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2771, i8 zeroext 0) #8, !dbg !10987
  %2772 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 242), align 16, !dbg !10989
  %2773 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 75), align 8, !dbg !10989
  tail call fastcc void @def_builtin_1(i32 543, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.957, i64 0, i64 0), i32 3, %union.tree_node* %2772, %union.tree_node* %2772, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2773, i8 zeroext 0) #8, !dbg !10989
  %2774 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 221), align 8, !dbg !10991
  %2775 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 78), align 16, !dbg !10991
  tail call fastcc void @def_builtin_1(i32 544, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.958, i64 0, i64 0), i32 3, %union.tree_node* %2774, %union.tree_node* %2774, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2775, i8 zeroext 0) #8, !dbg !10991
  %2776 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 202), align 16, !dbg !10993
  %2777 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 72), align 16, !dbg !10993
  tail call fastcc void @def_builtin_1(i32 545, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.959, i64 0, i64 0), i32 3, %union.tree_node* %2776, %union.tree_node* %2776, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2777, i8 zeroext 0) #8, !dbg !10993
  %2778 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 0), align 8, !dbg !10995
  %tobool3483 = icmp eq i8* %2778, null, !dbg !10995
  %2779 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !10995
  %tobool3484 = icmp ne i8 %2779, 0, !dbg !10995
  %or.cond = or i1 %tobool3483, %tobool3484, !dbg !10995
  br i1 %or.cond, label %if.end, label %if.then, !dbg !10995

if.then:                                          ; preds = %cond.end2499
  %2780 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 105), align 8, !dbg !10995
  %2781 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !10995
  tail call fastcc void @def_builtin_1(i32 548, i8* %2778, i32 3, %union.tree_node* %2780, %union.tree_node* %2780, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2781, i8 zeroext 0) #8, !dbg !10995
  %.pre = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !10997
  br label %if.end, !dbg !10995

if.end:                                           ; preds = %cond.end2499, %if.then
  %2782 = phi i8 [ %2779, %cond.end2499 ], [ %.pre, %if.then ], !dbg !10997
  %2783 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 1), align 8, !dbg !10997
  %tobool3485 = icmp eq i8* %2783, null, !dbg !10997
  %tobool3487 = icmp ne i8 %2782, 0, !dbg !10997
  %or.cond1 = or i1 %tobool3485, %tobool3487, !dbg !10997
  br i1 %or.cond1, label %if.end3489, label %if.then3488, !dbg !10997

if.then3488:                                      ; preds = %if.end
  %2784 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 223), align 8, !dbg !10997
  %2785 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10997
  tail call fastcc void @def_builtin_1(i32 549, i8* %2783, i32 3, %union.tree_node* %2784, %union.tree_node* %2784, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %2785, i8 zeroext 0) #8, !dbg !10997
  br label %if.end3489, !dbg !10997

if.end3489:                                       ; preds = %if.end, %if.then3488
  %2786 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !10999
  %2787 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !10999
  %2788 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !10999
  tail call fastcc void @def_builtin_1(i32 555, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.960, i64 0, i64 0), i32 3, %union.tree_node* %2786, %union.tree_node* %2787, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2788, i8 zeroext 1) #8, !dbg !10999
  %2789 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11003
  %2790 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11003
  %2791 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11003
  tail call fastcc void @def_builtin_1(i32 556, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.961, i64 0, i64 0), i32 3, %union.tree_node* %2789, %union.tree_node* %2790, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2791, i8 zeroext 1) #8, !dbg !11003
  %2792 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11005
  %2793 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11005
  %2794 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11005
  tail call fastcc void @def_builtin_1(i32 557, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.962, i64 0, i64 0), i32 3, %union.tree_node* %2792, %union.tree_node* %2793, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2794, i8 zeroext 1) #8, !dbg !11005
  %2795 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11007
  %2796 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11007
  %2797 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11007
  tail call fastcc void @def_builtin_1(i32 558, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.963, i64 0, i64 0), i32 3, %union.tree_node* %2795, %union.tree_node* %2796, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2797, i8 zeroext 1) #8, !dbg !11007
  %2798 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11009
  %2799 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11009
  %2800 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11009
  tail call fastcc void @def_builtin_1(i32 559, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.964, i64 0, i64 0), i32 3, %union.tree_node* %2798, %union.tree_node* %2799, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2800, i8 zeroext 1) #8, !dbg !11009
  %2801 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11011
  %2802 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11011
  %2803 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11011
  tail call fastcc void @def_builtin_1(i32 560, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.965, i64 0, i64 0), i32 3, %union.tree_node* %2801, %union.tree_node* %2802, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2803, i8 zeroext 1) #8, !dbg !11011
  %2804 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11013
  %2805 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11013
  %2806 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11013
  tail call fastcc void @def_builtin_1(i32 561, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.966, i64 0, i64 0), i32 3, %union.tree_node* %2804, %union.tree_node* %2805, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2806, i8 zeroext 1) #8, !dbg !11013
  %2807 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11015
  %2808 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11015
  %2809 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11015
  tail call fastcc void @def_builtin_1(i32 562, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.967, i64 0, i64 0), i32 3, %union.tree_node* %2807, %union.tree_node* %2808, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2809, i8 zeroext 1) #8, !dbg !11015
  %2810 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11017
  %2811 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11017
  %2812 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11017
  tail call fastcc void @def_builtin_1(i32 563, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.968, i64 0, i64 0), i32 3, %union.tree_node* %2810, %union.tree_node* %2811, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2812, i8 zeroext 1) #8, !dbg !11017
  %2813 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11019
  %2814 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11019
  %2815 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11019
  tail call fastcc void @def_builtin_1(i32 564, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.969, i64 0, i64 0), i32 3, %union.tree_node* %2813, %union.tree_node* %2814, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2815, i8 zeroext 1) #8, !dbg !11019
  %2816 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11021
  %2817 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11021
  %2818 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11021
  tail call fastcc void @def_builtin_1(i32 565, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.970, i64 0, i64 0), i32 3, %union.tree_node* %2816, %union.tree_node* %2817, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2818, i8 zeroext 1) #8, !dbg !11021
  %2819 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11023
  %2820 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11023
  %2821 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11023
  tail call fastcc void @def_builtin_1(i32 566, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.971, i64 0, i64 0), i32 3, %union.tree_node* %2819, %union.tree_node* %2820, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2821, i8 zeroext 1) #8, !dbg !11023
  %2822 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11025
  %2823 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11025
  %2824 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11025
  tail call fastcc void @def_builtin_1(i32 567, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.972, i64 0, i64 0), i32 3, %union.tree_node* %2822, %union.tree_node* %2823, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2824, i8 zeroext 1) #8, !dbg !11025
  %2825 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11027
  %2826 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11027
  %2827 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11027
  tail call fastcc void @def_builtin_1(i32 568, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.973, i64 0, i64 0), i32 3, %union.tree_node* %2825, %union.tree_node* %2826, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2827, i8 zeroext 1) #8, !dbg !11027
  %2828 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11029
  %2829 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11029
  %2830 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11029
  tail call fastcc void @def_builtin_1(i32 569, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.974, i64 0, i64 0), i32 3, %union.tree_node* %2828, %union.tree_node* %2829, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2830, i8 zeroext 1) #8, !dbg !11029
  %2831 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11031
  %2832 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11031
  %2833 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11031
  tail call fastcc void @def_builtin_1(i32 570, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.975, i64 0, i64 0), i32 3, %union.tree_node* %2831, %union.tree_node* %2832, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2833, i8 zeroext 1) #8, !dbg !11031
  %2834 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11033
  %2835 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11033
  %2836 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11033
  tail call fastcc void @def_builtin_1(i32 571, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.976, i64 0, i64 0), i32 3, %union.tree_node* %2834, %union.tree_node* %2835, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2836, i8 zeroext 1) #8, !dbg !11033
  %2837 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11035
  %2838 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11035
  %2839 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11035
  tail call fastcc void @def_builtin_1(i32 572, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.977, i64 0, i64 0), i32 3, %union.tree_node* %2837, %union.tree_node* %2838, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2839, i8 zeroext 1) #8, !dbg !11035
  %2840 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11037
  %2841 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11037
  %2842 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11037
  tail call fastcc void @def_builtin_1(i32 573, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.978, i64 0, i64 0), i32 3, %union.tree_node* %2840, %union.tree_node* %2841, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2842, i8 zeroext 1) #8, !dbg !11037
  %2843 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11039
  %2844 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11039
  %2845 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11039
  tail call fastcc void @def_builtin_1(i32 574, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.979, i64 0, i64 0), i32 3, %union.tree_node* %2843, %union.tree_node* %2844, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2845, i8 zeroext 1) #8, !dbg !11039
  %2846 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11041
  %2847 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11041
  %2848 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11041
  tail call fastcc void @def_builtin_1(i32 575, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.980, i64 0, i64 0), i32 3, %union.tree_node* %2846, %union.tree_node* %2847, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2848, i8 zeroext 1) #8, !dbg !11041
  %2849 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11043
  %2850 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11043
  %2851 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11043
  tail call fastcc void @def_builtin_1(i32 576, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.981, i64 0, i64 0), i32 3, %union.tree_node* %2849, %union.tree_node* %2850, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2851, i8 zeroext 1) #8, !dbg !11043
  %2852 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11045
  %2853 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11045
  %2854 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11045
  tail call fastcc void @def_builtin_1(i32 577, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.982, i64 0, i64 0), i32 3, %union.tree_node* %2852, %union.tree_node* %2853, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2854, i8 zeroext 1) #8, !dbg !11045
  %2855 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11047
  %2856 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11047
  %2857 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11047
  tail call fastcc void @def_builtin_1(i32 578, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.983, i64 0, i64 0), i32 3, %union.tree_node* %2855, %union.tree_node* %2856, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2857, i8 zeroext 1) #8, !dbg !11047
  %2858 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11049
  %2859 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11049
  %2860 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11049
  tail call fastcc void @def_builtin_1(i32 579, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.984, i64 0, i64 0), i32 3, %union.tree_node* %2858, %union.tree_node* %2859, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2860, i8 zeroext 1) #8, !dbg !11049
  %2861 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11051
  %2862 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11051
  %2863 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11051
  tail call fastcc void @def_builtin_1(i32 580, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.985, i64 0, i64 0), i32 3, %union.tree_node* %2861, %union.tree_node* %2862, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2863, i8 zeroext 1) #8, !dbg !11051
  %2864 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11053
  %2865 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11053
  %2866 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11053
  tail call fastcc void @def_builtin_1(i32 581, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.986, i64 0, i64 0), i32 3, %union.tree_node* %2864, %union.tree_node* %2865, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2866, i8 zeroext 1) #8, !dbg !11053
  %2867 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11055
  %2868 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11055
  %2869 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11055
  tail call fastcc void @def_builtin_1(i32 582, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.987, i64 0, i64 0), i32 3, %union.tree_node* %2867, %union.tree_node* %2868, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2869, i8 zeroext 1) #8, !dbg !11055
  %2870 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11057
  %2871 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11057
  %2872 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11057
  tail call fastcc void @def_builtin_1(i32 583, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.988, i64 0, i64 0), i32 3, %union.tree_node* %2870, %union.tree_node* %2871, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2872, i8 zeroext 1) #8, !dbg !11057
  %2873 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11059
  %2874 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11059
  %2875 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11059
  tail call fastcc void @def_builtin_1(i32 584, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.989, i64 0, i64 0), i32 3, %union.tree_node* %2873, %union.tree_node* %2874, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2875, i8 zeroext 1) #8, !dbg !11059
  %2876 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11061
  %2877 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11061
  %2878 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11061
  tail call fastcc void @def_builtin_1(i32 585, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.990, i64 0, i64 0), i32 3, %union.tree_node* %2876, %union.tree_node* %2877, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2878, i8 zeroext 1) #8, !dbg !11061
  %2879 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11063
  %2880 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11063
  %2881 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11063
  tail call fastcc void @def_builtin_1(i32 586, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.991, i64 0, i64 0), i32 3, %union.tree_node* %2879, %union.tree_node* %2880, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2881, i8 zeroext 1) #8, !dbg !11063
  %2882 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11065
  %2883 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11065
  %2884 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11065
  tail call fastcc void @def_builtin_1(i32 587, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.992, i64 0, i64 0), i32 3, %union.tree_node* %2882, %union.tree_node* %2883, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2884, i8 zeroext 1) #8, !dbg !11065
  %2885 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11067
  %2886 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11067
  %2887 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11067
  tail call fastcc void @def_builtin_1(i32 588, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.993, i64 0, i64 0), i32 3, %union.tree_node* %2885, %union.tree_node* %2886, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2887, i8 zeroext 1) #8, !dbg !11067
  %2888 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11069
  %2889 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11069
  %2890 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11069
  tail call fastcc void @def_builtin_1(i32 589, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.994, i64 0, i64 0), i32 3, %union.tree_node* %2888, %union.tree_node* %2889, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2890, i8 zeroext 1) #8, !dbg !11069
  %2891 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11071
  %2892 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11071
  %2893 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11071
  tail call fastcc void @def_builtin_1(i32 590, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.995, i64 0, i64 0), i32 3, %union.tree_node* %2891, %union.tree_node* %2892, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2893, i8 zeroext 1) #8, !dbg !11071
  %2894 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11073
  %2895 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11073
  %2896 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11073
  tail call fastcc void @def_builtin_1(i32 591, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.996, i64 0, i64 0), i32 3, %union.tree_node* %2894, %union.tree_node* %2895, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2896, i8 zeroext 1) #8, !dbg !11073
  %2897 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11075
  %2898 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11075
  %2899 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11075
  tail call fastcc void @def_builtin_1(i32 592, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.997, i64 0, i64 0), i32 3, %union.tree_node* %2897, %union.tree_node* %2898, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2899, i8 zeroext 1) #8, !dbg !11075
  %2900 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11077
  %2901 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11077
  %2902 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11077
  tail call fastcc void @def_builtin_1(i32 593, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.998, i64 0, i64 0), i32 3, %union.tree_node* %2900, %union.tree_node* %2901, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2902, i8 zeroext 1) #8, !dbg !11077
  %2903 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11079
  %2904 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11079
  %2905 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11079
  tail call fastcc void @def_builtin_1(i32 594, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.999, i64 0, i64 0), i32 3, %union.tree_node* %2903, %union.tree_node* %2904, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2905, i8 zeroext 1) #8, !dbg !11079
  %2906 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11081
  %2907 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11081
  %2908 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11081
  tail call fastcc void @def_builtin_1(i32 595, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1000, i64 0, i64 0), i32 3, %union.tree_node* %2906, %union.tree_node* %2907, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2908, i8 zeroext 1) #8, !dbg !11081
  %2909 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11083
  %2910 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11083
  %2911 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11083
  tail call fastcc void @def_builtin_1(i32 596, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1001, i64 0, i64 0), i32 3, %union.tree_node* %2909, %union.tree_node* %2910, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2911, i8 zeroext 1) #8, !dbg !11083
  %2912 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11085
  %2913 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11085
  %2914 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11085
  tail call fastcc void @def_builtin_1(i32 597, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1002, i64 0, i64 0), i32 3, %union.tree_node* %2912, %union.tree_node* %2913, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2914, i8 zeroext 1) #8, !dbg !11085
  %2915 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11087
  %2916 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11087
  %2917 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11087
  tail call fastcc void @def_builtin_1(i32 598, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1003, i64 0, i64 0), i32 3, %union.tree_node* %2915, %union.tree_node* %2916, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2917, i8 zeroext 1) #8, !dbg !11087
  %2918 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11089
  %2919 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11089
  %2920 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11089
  tail call fastcc void @def_builtin_1(i32 599, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1004, i64 0, i64 0), i32 3, %union.tree_node* %2918, %union.tree_node* %2919, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2920, i8 zeroext 1) #8, !dbg !11089
  %2921 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11091
  %2922 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11091
  %2923 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11091
  tail call fastcc void @def_builtin_1(i32 600, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1005, i64 0, i64 0), i32 3, %union.tree_node* %2921, %union.tree_node* %2922, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2923, i8 zeroext 1) #8, !dbg !11091
  %2924 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11093
  %2925 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11093
  %2926 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11093
  tail call fastcc void @def_builtin_1(i32 601, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1006, i64 0, i64 0), i32 3, %union.tree_node* %2924, %union.tree_node* %2925, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2926, i8 zeroext 1) #8, !dbg !11093
  %2927 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11095
  %2928 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11095
  %2929 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11095
  tail call fastcc void @def_builtin_1(i32 602, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1007, i64 0, i64 0), i32 3, %union.tree_node* %2927, %union.tree_node* %2928, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2929, i8 zeroext 1) #8, !dbg !11095
  %2930 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11097
  %2931 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11097
  %2932 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11097
  tail call fastcc void @def_builtin_1(i32 603, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1008, i64 0, i64 0), i32 3, %union.tree_node* %2930, %union.tree_node* %2931, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2932, i8 zeroext 1) #8, !dbg !11097
  %2933 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11099
  %2934 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11099
  %2935 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11099
  tail call fastcc void @def_builtin_1(i32 604, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1009, i64 0, i64 0), i32 3, %union.tree_node* %2933, %union.tree_node* %2934, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2935, i8 zeroext 1) #8, !dbg !11099
  %2936 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11101
  %2937 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11101
  %2938 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11101
  tail call fastcc void @def_builtin_1(i32 605, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1010, i64 0, i64 0), i32 3, %union.tree_node* %2936, %union.tree_node* %2937, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2938, i8 zeroext 1) #8, !dbg !11101
  %2939 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11103
  %2940 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11103
  %2941 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11103
  tail call fastcc void @def_builtin_1(i32 606, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1011, i64 0, i64 0), i32 3, %union.tree_node* %2939, %union.tree_node* %2940, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2941, i8 zeroext 1) #8, !dbg !11103
  %2942 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11105
  %2943 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11105
  %2944 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11105
  tail call fastcc void @def_builtin_1(i32 607, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1012, i64 0, i64 0), i32 3, %union.tree_node* %2942, %union.tree_node* %2943, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2944, i8 zeroext 1) #8, !dbg !11105
  %2945 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11107
  %2946 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11107
  %2947 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11107
  tail call fastcc void @def_builtin_1(i32 608, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1013, i64 0, i64 0), i32 3, %union.tree_node* %2945, %union.tree_node* %2946, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2947, i8 zeroext 1) #8, !dbg !11107
  %2948 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11109
  %2949 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11109
  %2950 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11109
  tail call fastcc void @def_builtin_1(i32 609, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1014, i64 0, i64 0), i32 3, %union.tree_node* %2948, %union.tree_node* %2949, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2950, i8 zeroext 1) #8, !dbg !11109
  %2951 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11111
  %2952 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11111
  %2953 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11111
  tail call fastcc void @def_builtin_1(i32 610, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1015, i64 0, i64 0), i32 3, %union.tree_node* %2951, %union.tree_node* %2952, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2953, i8 zeroext 1) #8, !dbg !11111
  %2954 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11113
  %2955 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11113
  %2956 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11113
  tail call fastcc void @def_builtin_1(i32 611, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1016, i64 0, i64 0), i32 3, %union.tree_node* %2954, %union.tree_node* %2955, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2956, i8 zeroext 1) #8, !dbg !11113
  %2957 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11115
  %2958 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11115
  %2959 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11115
  tail call fastcc void @def_builtin_1(i32 612, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1017, i64 0, i64 0), i32 3, %union.tree_node* %2957, %union.tree_node* %2958, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2959, i8 zeroext 1) #8, !dbg !11115
  %2960 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11117
  %2961 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11117
  %2962 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11117
  tail call fastcc void @def_builtin_1(i32 613, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1018, i64 0, i64 0), i32 3, %union.tree_node* %2960, %union.tree_node* %2961, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2962, i8 zeroext 1) #8, !dbg !11117
  %2963 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11119
  %2964 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11119
  %2965 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11119
  tail call fastcc void @def_builtin_1(i32 614, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1019, i64 0, i64 0), i32 3, %union.tree_node* %2963, %union.tree_node* %2964, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2965, i8 zeroext 1) #8, !dbg !11119
  %2966 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11121
  %2967 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11121
  %2968 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11121
  tail call fastcc void @def_builtin_1(i32 615, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1020, i64 0, i64 0), i32 3, %union.tree_node* %2966, %union.tree_node* %2967, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2968, i8 zeroext 1) #8, !dbg !11121
  %2969 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11123
  %2970 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11123
  %2971 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11123
  tail call fastcc void @def_builtin_1(i32 616, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1021, i64 0, i64 0), i32 3, %union.tree_node* %2969, %union.tree_node* %2970, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2971, i8 zeroext 1) #8, !dbg !11123
  %2972 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11125
  %2973 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11125
  %2974 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11125
  tail call fastcc void @def_builtin_1(i32 617, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1022, i64 0, i64 0), i32 3, %union.tree_node* %2972, %union.tree_node* %2973, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2974, i8 zeroext 1) #8, !dbg !11125
  %2975 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11127
  %2976 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11127
  %2977 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11127
  tail call fastcc void @def_builtin_1(i32 618, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1023, i64 0, i64 0), i32 3, %union.tree_node* %2975, %union.tree_node* %2976, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2977, i8 zeroext 1) #8, !dbg !11127
  %2978 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11129
  %2979 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11129
  %2980 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11129
  tail call fastcc void @def_builtin_1(i32 619, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1024, i64 0, i64 0), i32 3, %union.tree_node* %2978, %union.tree_node* %2979, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2980, i8 zeroext 1) #8, !dbg !11129
  %2981 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11131
  %2982 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11131
  %2983 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11131
  tail call fastcc void @def_builtin_1(i32 620, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1025, i64 0, i64 0), i32 3, %union.tree_node* %2981, %union.tree_node* %2982, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2983, i8 zeroext 1) #8, !dbg !11131
  %2984 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11133
  %2985 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11133
  %2986 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11133
  tail call fastcc void @def_builtin_1(i32 621, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1026, i64 0, i64 0), i32 3, %union.tree_node* %2984, %union.tree_node* %2985, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2986, i8 zeroext 1) #8, !dbg !11133
  %2987 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11135
  %2988 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11135
  %2989 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11135
  tail call fastcc void @def_builtin_1(i32 622, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1027, i64 0, i64 0), i32 3, %union.tree_node* %2987, %union.tree_node* %2988, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2989, i8 zeroext 1) #8, !dbg !11135
  %2990 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11137
  %2991 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11137
  %2992 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11137
  tail call fastcc void @def_builtin_1(i32 623, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1028, i64 0, i64 0), i32 3, %union.tree_node* %2990, %union.tree_node* %2991, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2992, i8 zeroext 1) #8, !dbg !11137
  %2993 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11139
  %2994 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11139
  %2995 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11139
  tail call fastcc void @def_builtin_1(i32 624, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1029, i64 0, i64 0), i32 3, %union.tree_node* %2993, %union.tree_node* %2994, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2995, i8 zeroext 1) #8, !dbg !11139
  %2996 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11141
  %2997 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11141
  %2998 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11141
  tail call fastcc void @def_builtin_1(i32 625, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1030, i64 0, i64 0), i32 3, %union.tree_node* %2996, %union.tree_node* %2997, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %2998, i8 zeroext 1) #8, !dbg !11141
  %2999 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11143
  %3000 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11143
  %3001 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11143
  tail call fastcc void @def_builtin_1(i32 626, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1031, i64 0, i64 0), i32 3, %union.tree_node* %2999, %union.tree_node* %3000, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3001, i8 zeroext 1) #8, !dbg !11143
  %3002 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11145
  %3003 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11145
  %3004 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11145
  tail call fastcc void @def_builtin_1(i32 627, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1032, i64 0, i64 0), i32 3, %union.tree_node* %3002, %union.tree_node* %3003, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3004, i8 zeroext 1) #8, !dbg !11145
  %3005 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 203), align 8, !dbg !11147
  %3006 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11147
  %3007 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11147
  tail call fastcc void @def_builtin_1(i32 628, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1033, i64 0, i64 0), i32 3, %union.tree_node* %3005, %union.tree_node* %3006, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3007, i8 zeroext 1) #8, !dbg !11147
  %3008 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 204), align 16, !dbg !11149
  %3009 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11149
  %3010 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11149
  tail call fastcc void @def_builtin_1(i32 629, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1034, i64 0, i64 0), i32 3, %union.tree_node* %3008, %union.tree_node* %3009, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3010, i8 zeroext 1) #8, !dbg !11149
  %3011 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 205), align 8, !dbg !11151
  %3012 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11151
  %3013 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11151
  tail call fastcc void @def_builtin_1(i32 630, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1035, i64 0, i64 0), i32 3, %union.tree_node* %3011, %union.tree_node* %3012, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3013, i8 zeroext 1) #8, !dbg !11151
  %3014 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 206), align 16, !dbg !11153
  %3015 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11153
  %3016 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11153
  tail call fastcc void @def_builtin_1(i32 631, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1036, i64 0, i64 0), i32 3, %union.tree_node* %3014, %union.tree_node* %3015, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3016, i8 zeroext 1) #8, !dbg !11153
  %3017 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 207), align 8, !dbg !11155
  %3018 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11155
  %3019 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11155
  tail call fastcc void @def_builtin_1(i32 632, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1037, i64 0, i64 0), i32 3, %union.tree_node* %3017, %union.tree_node* %3018, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3019, i8 zeroext 1) #8, !dbg !11155
  %3020 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11157
  %3021 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11157
  %3022 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11157
  tail call fastcc void @def_builtin_1(i32 633, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1038, i64 0, i64 0), i32 3, %union.tree_node* %3020, %union.tree_node* %3021, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3022, i8 zeroext 1) #8, !dbg !11157
  %3023 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 208), align 16, !dbg !11159
  %3024 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11159
  %3025 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11159
  tail call fastcc void @def_builtin_1(i32 634, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1039, i64 0, i64 0), i32 3, %union.tree_node* %3023, %union.tree_node* %3024, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3025, i8 zeroext 1) #8, !dbg !11159
  %3026 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 209), align 8, !dbg !11161
  %3027 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11161
  %3028 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11161
  tail call fastcc void @def_builtin_1(i32 635, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1040, i64 0, i64 0), i32 3, %union.tree_node* %3026, %union.tree_node* %3027, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3028, i8 zeroext 1) #8, !dbg !11161
  %3029 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 210), align 16, !dbg !11163
  %3030 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11163
  %3031 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11163
  tail call fastcc void @def_builtin_1(i32 636, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1041, i64 0, i64 0), i32 3, %union.tree_node* %3029, %union.tree_node* %3030, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3031, i8 zeroext 1) #8, !dbg !11163
  %3032 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 211), align 8, !dbg !11165
  %3033 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11165
  %3034 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11165
  tail call fastcc void @def_builtin_1(i32 637, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1042, i64 0, i64 0), i32 3, %union.tree_node* %3032, %union.tree_node* %3033, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3034, i8 zeroext 1) #8, !dbg !11165
  %3035 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 212), align 16, !dbg !11167
  %3036 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11167
  %3037 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11167
  tail call fastcc void @def_builtin_1(i32 638, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1043, i64 0, i64 0), i32 3, %union.tree_node* %3035, %union.tree_node* %3036, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3037, i8 zeroext 1) #8, !dbg !11167
  %3038 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11169
  %3039 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11169
  %3040 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11169
  tail call fastcc void @def_builtin_1(i32 639, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1044, i64 0, i64 0), i32 3, %union.tree_node* %3038, %union.tree_node* %3039, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3040, i8 zeroext 1) #8, !dbg !11169
  %3041 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 172), align 16, !dbg !11171
  %3042 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11171
  %3043 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11171
  tail call fastcc void @def_builtin_1(i32 640, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1045, i64 0, i64 0), i32 3, %union.tree_node* %3041, %union.tree_node* %3042, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3043, i8 zeroext 1) #8, !dbg !11171
  %3044 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 173), align 8, !dbg !11173
  %3045 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11173
  %3046 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11173
  tail call fastcc void @def_builtin_1(i32 641, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1046, i64 0, i64 0), i32 3, %union.tree_node* %3044, %union.tree_node* %3045, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3046, i8 zeroext 1) #8, !dbg !11173
  %3047 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 174), align 16, !dbg !11175
  %3048 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11175
  %3049 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11175
  tail call fastcc void @def_builtin_1(i32 642, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1047, i64 0, i64 0), i32 3, %union.tree_node* %3047, %union.tree_node* %3048, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3049, i8 zeroext 1) #8, !dbg !11175
  %3050 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 175), align 8, !dbg !11177
  %3051 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11177
  %3052 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11177
  tail call fastcc void @def_builtin_1(i32 643, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1048, i64 0, i64 0), i32 3, %union.tree_node* %3050, %union.tree_node* %3051, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3052, i8 zeroext 1) #8, !dbg !11177
  %3053 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 176), align 16, !dbg !11179
  %3054 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11179
  %3055 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11179
  tail call fastcc void @def_builtin_1(i32 644, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1049, i64 0, i64 0), i32 3, %union.tree_node* %3053, %union.tree_node* %3054, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3055, i8 zeroext 1) #8, !dbg !11179
  %3056 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 233), align 8, !dbg !11181
  %3057 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11181
  %3058 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11181
  tail call fastcc void @def_builtin_1(i32 645, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1050, i64 0, i64 0), i32 3, %union.tree_node* %3056, %union.tree_node* %3057, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3058, i8 zeroext 1) #8, !dbg !11181
  %3059 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 121), align 8, !dbg !11183
  %3060 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11183
  %3061 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11183
  tail call fastcc void @def_builtin_1(i32 646, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1051, i64 0, i64 0), i32 3, %union.tree_node* %3059, %union.tree_node* %3060, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3061, i8 zeroext 1) #8, !dbg !11183
  %3062 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 121), align 8, !dbg !11185
  %3063 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11185
  %3064 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11185
  tail call fastcc void @def_builtin_1(i32 647, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1052, i64 0, i64 0), i32 3, %union.tree_node* %3062, %union.tree_node* %3063, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3064, i8 zeroext 1) #8, !dbg !11185
  %3065 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 121), align 8, !dbg !11187
  %3066 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11187
  %3067 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11187
  tail call fastcc void @def_builtin_1(i32 648, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1053, i64 0, i64 0), i32 3, %union.tree_node* %3065, %union.tree_node* %3066, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3067, i8 zeroext 1) #8, !dbg !11187
  %3068 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 121), align 8, !dbg !11189
  %3069 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11189
  %3070 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11189
  tail call fastcc void @def_builtin_1(i32 649, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1054, i64 0, i64 0), i32 3, %union.tree_node* %3068, %union.tree_node* %3069, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3070, i8 zeroext 1) #8, !dbg !11189
  %3071 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 121), align 8, !dbg !11191
  %3072 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11191
  %3073 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11191
  tail call fastcc void @def_builtin_1(i32 650, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1055, i64 0, i64 0), i32 3, %union.tree_node* %3071, %union.tree_node* %3072, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3073, i8 zeroext 1) #8, !dbg !11191
  %3074 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11193
  %3075 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 251), align 8, !dbg !11193
  %3076 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11193
  tail call fastcc void @def_builtin_1(i32 651, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1056, i64 0, i64 0), i32 3, %union.tree_node* %3074, %union.tree_node* %3075, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %union.tree_node* %3076, i8 zeroext 1) #8, !dbg !11193
  %3077 = load i32, i32* @flag_openmp, align 4, !dbg !11195
  %3078 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11195
  %3079 = or i32 %3077, %3078, !dbg !11195
  %3080 = icmp eq i32 %3079, 0, !dbg !11195
  br i1 %3080, label %land.lhs.true3495, label %if.then3493, !dbg !11195

if.then3493:                                      ; preds = %if.end3489
  %3081 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 56), align 16, !dbg !11195
  %3082 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !11195
  tail call fastcc void @def_builtin_1(i32 652, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1057, i64 0, i64 0), i32 3, %union.tree_node* %3081, %union.tree_node* %3081, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3082, i8 zeroext 0) #8, !dbg !11195
  %.pre63 = load i32, i32* @flag_openmp, align 4, !dbg !11199
  %.pre64 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11199
  %.pre183 = or i32 %.pre63, %.pre64, !dbg !11199
  br label %land.lhs.true3495, !dbg !11195

land.lhs.true3495:                                ; preds = %if.end3489, %if.then3493
  %.pre-phi = phi i32 [ %3079, %if.end3489 ], [ %.pre183, %if.then3493 ], !dbg !11199
  %3083 = icmp eq i32 %.pre-phi, 0, !dbg !11199
  br i1 %3083, label %land.lhs.true3501, label %if.then3499, !dbg !11199

if.then3499:                                      ; preds = %land.lhs.true3495
  %3084 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 56), align 16, !dbg !11199
  %3085 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !11199
  tail call fastcc void @def_builtin_1(i32 653, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1058, i64 0, i64 0), i32 3, %union.tree_node* %3084, %union.tree_node* %3084, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3085, i8 zeroext 0) #8, !dbg !11199
  %.pre65 = load i32, i32* @flag_openmp, align 4, !dbg !11201
  %.pre66 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11201
  %.pre184 = or i32 %.pre65, %.pre66, !dbg !11201
  br label %land.lhs.true3501, !dbg !11199

land.lhs.true3501:                                ; preds = %land.lhs.true3495, %if.then3499
  %.pre-phi185 = phi i32 [ %.pre-phi, %land.lhs.true3495 ], [ %.pre184, %if.then3499 ], !dbg !11201
  %3086 = icmp eq i32 %.pre-phi185, 0, !dbg !11201
  br i1 %3086, label %land.lhs.true3507, label %if.then3505, !dbg !11201

if.then3505:                                      ; preds = %land.lhs.true3501
  %3087 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11201
  %3088 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11201
  tail call fastcc void @def_builtin_1(i32 654, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1059, i64 0, i64 0), i32 3, %union.tree_node* %3087, %union.tree_node* %3087, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3088, i8 zeroext 0) #8, !dbg !11201
  %.pre67 = load i32, i32* @flag_openmp, align 4, !dbg !11203
  %.pre68 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11203
  %.pre186 = or i32 %.pre67, %.pre68, !dbg !11203
  br label %land.lhs.true3507, !dbg !11201

land.lhs.true3507:                                ; preds = %land.lhs.true3501, %if.then3505
  %.pre-phi187 = phi i32 [ %.pre-phi185, %land.lhs.true3501 ], [ %.pre186, %if.then3505 ], !dbg !11203
  %3089 = icmp eq i32 %.pre-phi187, 0, !dbg !11203
  br i1 %3089, label %land.lhs.true3513, label %if.then3511, !dbg !11203

if.then3511:                                      ; preds = %land.lhs.true3507
  %3090 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11203
  %3091 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11203
  tail call fastcc void @def_builtin_1(i32 655, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1060, i64 0, i64 0), i32 3, %union.tree_node* %3090, %union.tree_node* %3090, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3091, i8 zeroext 0) #8, !dbg !11203
  %.pre69 = load i32, i32* @flag_openmp, align 4, !dbg !11205
  %.pre70 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11205
  %.pre188 = or i32 %.pre69, %.pre70, !dbg !11205
  br label %land.lhs.true3513, !dbg !11203

land.lhs.true3513:                                ; preds = %land.lhs.true3507, %if.then3511
  %.pre-phi189 = phi i32 [ %.pre-phi187, %land.lhs.true3507 ], [ %.pre188, %if.then3511 ], !dbg !11205
  %3092 = icmp eq i32 %.pre-phi189, 0, !dbg !11205
  br i1 %3092, label %land.lhs.true3519, label %if.then3517, !dbg !11205

if.then3517:                                      ; preds = %land.lhs.true3513
  %3093 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11205
  %3094 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11205
  tail call fastcc void @def_builtin_1(i32 656, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1061, i64 0, i64 0), i32 3, %union.tree_node* %3093, %union.tree_node* %3093, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3094, i8 zeroext 0) #8, !dbg !11205
  %.pre71 = load i32, i32* @flag_openmp, align 4, !dbg !11207
  %.pre72 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11207
  %.pre190 = or i32 %.pre71, %.pre72, !dbg !11207
  br label %land.lhs.true3519, !dbg !11205

land.lhs.true3519:                                ; preds = %land.lhs.true3513, %if.then3517
  %.pre-phi191 = phi i32 [ %.pre-phi189, %land.lhs.true3513 ], [ %.pre190, %if.then3517 ], !dbg !11207
  %3095 = icmp eq i32 %.pre-phi191, 0, !dbg !11207
  br i1 %3095, label %land.lhs.true3525, label %if.then3523, !dbg !11207

if.then3523:                                      ; preds = %land.lhs.true3519
  %3096 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11207
  %3097 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11207
  tail call fastcc void @def_builtin_1(i32 657, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1062, i64 0, i64 0), i32 3, %union.tree_node* %3096, %union.tree_node* %3096, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3097, i8 zeroext 0) #8, !dbg !11207
  %.pre73 = load i32, i32* @flag_openmp, align 4, !dbg !11209
  %.pre74 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11209
  %.pre192 = or i32 %.pre73, %.pre74, !dbg !11209
  br label %land.lhs.true3525, !dbg !11207

land.lhs.true3525:                                ; preds = %land.lhs.true3519, %if.then3523
  %.pre-phi193 = phi i32 [ %.pre-phi191, %land.lhs.true3519 ], [ %.pre192, %if.then3523 ], !dbg !11209
  %3098 = icmp eq i32 %.pre-phi193, 0, !dbg !11209
  br i1 %3098, label %land.lhs.true3531, label %if.then3529, !dbg !11209

if.then3529:                                      ; preds = %land.lhs.true3525
  %3099 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11209
  %3100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11209
  tail call fastcc void @def_builtin_1(i32 658, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1063, i64 0, i64 0), i32 3, %union.tree_node* %3099, %union.tree_node* %3099, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3100, i8 zeroext 0) #8, !dbg !11209
  %.pre75 = load i32, i32* @flag_openmp, align 4, !dbg !11211
  %.pre76 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11211
  %.pre194 = or i32 %.pre75, %.pre76, !dbg !11211
  br label %land.lhs.true3531, !dbg !11209

land.lhs.true3531:                                ; preds = %land.lhs.true3525, %if.then3529
  %.pre-phi195 = phi i32 [ %.pre-phi193, %land.lhs.true3525 ], [ %.pre194, %if.then3529 ], !dbg !11211
  %3101 = icmp eq i32 %.pre-phi195, 0, !dbg !11211
  br i1 %3101, label %land.lhs.true3537, label %if.then3535, !dbg !11211

if.then3535:                                      ; preds = %land.lhs.true3531
  %3102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11211
  %3103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11211
  tail call fastcc void @def_builtin_1(i32 659, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1064, i64 0, i64 0), i32 3, %union.tree_node* %3102, %union.tree_node* %3102, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3103, i8 zeroext 0) #8, !dbg !11211
  %.pre77 = load i32, i32* @flag_openmp, align 4, !dbg !11213
  %.pre78 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11213
  %.pre196 = or i32 %.pre77, %.pre78, !dbg !11213
  br label %land.lhs.true3537, !dbg !11211

land.lhs.true3537:                                ; preds = %land.lhs.true3531, %if.then3535
  %.pre-phi197 = phi i32 [ %.pre-phi195, %land.lhs.true3531 ], [ %.pre196, %if.then3535 ], !dbg !11213
  %3104 = icmp eq i32 %.pre-phi197, 0, !dbg !11213
  br i1 %3104, label %land.lhs.true3543, label %if.then3541, !dbg !11213

if.then3541:                                      ; preds = %land.lhs.true3537
  %3105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 122), align 16, !dbg !11213
  %3106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11213
  tail call fastcc void @def_builtin_1(i32 660, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1065, i64 0, i64 0), i32 3, %union.tree_node* %3105, %union.tree_node* %3105, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3106, i8 zeroext 0) #8, !dbg !11213
  %.pre79 = load i32, i32* @flag_openmp, align 4, !dbg !11215
  %.pre80 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11215
  %.pre198 = or i32 %.pre79, %.pre80, !dbg !11215
  br label %land.lhs.true3543, !dbg !11213

land.lhs.true3543:                                ; preds = %land.lhs.true3537, %if.then3541
  %.pre-phi199 = phi i32 [ %.pre-phi197, %land.lhs.true3537 ], [ %.pre198, %if.then3541 ], !dbg !11215
  %3107 = icmp eq i32 %.pre-phi199, 0, !dbg !11215
  br i1 %3107, label %land.lhs.true3549, label %if.then3547, !dbg !11215

if.then3547:                                      ; preds = %land.lhs.true3543
  %3108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 122), align 16, !dbg !11215
  %3109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11215
  tail call fastcc void @def_builtin_1(i32 661, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1066, i64 0, i64 0), i32 3, %union.tree_node* %3108, %union.tree_node* %3108, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3109, i8 zeroext 0) #8, !dbg !11215
  %.pre81 = load i32, i32* @flag_openmp, align 4, !dbg !11217
  %.pre82 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11217
  %.pre200 = or i32 %.pre81, %.pre82, !dbg !11217
  br label %land.lhs.true3549, !dbg !11215

land.lhs.true3549:                                ; preds = %land.lhs.true3543, %if.then3547
  %.pre-phi201 = phi i32 [ %.pre-phi199, %land.lhs.true3543 ], [ %.pre200, %if.then3547 ], !dbg !11217
  %3110 = icmp eq i32 %.pre-phi201, 0, !dbg !11217
  br i1 %3110, label %land.lhs.true3555, label %if.then3553, !dbg !11217

if.then3553:                                      ; preds = %land.lhs.true3549
  %3111 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 227), align 8, !dbg !11217
  %3112 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11217
  tail call fastcc void @def_builtin_1(i32 662, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1067, i64 0, i64 0), i32 3, %union.tree_node* %3111, %union.tree_node* %3111, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3112, i8 zeroext 0) #8, !dbg !11217
  %.pre83 = load i32, i32* @flag_openmp, align 4, !dbg !11219
  %.pre84 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11219
  %.pre202 = or i32 %.pre83, %.pre84, !dbg !11219
  br label %land.lhs.true3555, !dbg !11217

land.lhs.true3555:                                ; preds = %land.lhs.true3549, %if.then3553
  %.pre-phi203 = phi i32 [ %.pre-phi201, %land.lhs.true3549 ], [ %.pre202, %if.then3553 ], !dbg !11219
  %3113 = icmp eq i32 %.pre-phi203, 0, !dbg !11219
  br i1 %3113, label %land.lhs.true3561, label %if.then3559, !dbg !11219

if.then3559:                                      ; preds = %land.lhs.true3555
  %3114 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 227), align 8, !dbg !11219
  %3115 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11219
  tail call fastcc void @def_builtin_1(i32 663, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1068, i64 0, i64 0), i32 3, %union.tree_node* %3114, %union.tree_node* %3114, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3115, i8 zeroext 0) #8, !dbg !11219
  %.pre85 = load i32, i32* @flag_openmp, align 4, !dbg !11221
  %.pre86 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11221
  %.pre204 = or i32 %.pre85, %.pre86, !dbg !11221
  br label %land.lhs.true3561, !dbg !11219

land.lhs.true3561:                                ; preds = %land.lhs.true3555, %if.then3559
  %.pre-phi205 = phi i32 [ %.pre-phi203, %land.lhs.true3555 ], [ %.pre204, %if.then3559 ], !dbg !11221
  %3116 = icmp eq i32 %.pre-phi205, 0, !dbg !11221
  br i1 %3116, label %land.lhs.true3567, label %if.then3565, !dbg !11221

if.then3565:                                      ; preds = %land.lhs.true3561
  %3117 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 227), align 8, !dbg !11221
  %3118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11221
  tail call fastcc void @def_builtin_1(i32 664, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1069, i64 0, i64 0), i32 3, %union.tree_node* %3117, %union.tree_node* %3117, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3118, i8 zeroext 0) #8, !dbg !11221
  %.pre87 = load i32, i32* @flag_openmp, align 4, !dbg !11223
  %.pre88 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11223
  %.pre206 = or i32 %.pre87, %.pre88, !dbg !11223
  br label %land.lhs.true3567, !dbg !11221

land.lhs.true3567:                                ; preds = %land.lhs.true3561, %if.then3565
  %.pre-phi207 = phi i32 [ %.pre-phi205, %land.lhs.true3561 ], [ %.pre206, %if.then3565 ], !dbg !11223
  %3119 = icmp eq i32 %.pre-phi207, 0, !dbg !11223
  br i1 %3119, label %land.lhs.true3573, label %if.then3571, !dbg !11223

if.then3571:                                      ; preds = %land.lhs.true3567
  %3120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 225), align 8, !dbg !11223
  %3121 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11223
  tail call fastcc void @def_builtin_1(i32 665, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1070, i64 0, i64 0), i32 3, %union.tree_node* %3120, %union.tree_node* %3120, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3121, i8 zeroext 0) #8, !dbg !11223
  %.pre89 = load i32, i32* @flag_openmp, align 4, !dbg !11225
  %.pre90 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11225
  %.pre208 = or i32 %.pre89, %.pre90, !dbg !11225
  br label %land.lhs.true3573, !dbg !11223

land.lhs.true3573:                                ; preds = %land.lhs.true3567, %if.then3571
  %.pre-phi209 = phi i32 [ %.pre-phi207, %land.lhs.true3567 ], [ %.pre208, %if.then3571 ], !dbg !11225
  %3122 = icmp eq i32 %.pre-phi209, 0, !dbg !11225
  br i1 %3122, label %land.lhs.true3579, label %if.then3577, !dbg !11225

if.then3577:                                      ; preds = %land.lhs.true3573
  %3123 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 227), align 8, !dbg !11225
  %3124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11225
  tail call fastcc void @def_builtin_1(i32 666, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1071, i64 0, i64 0), i32 3, %union.tree_node* %3123, %union.tree_node* %3123, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3124, i8 zeroext 0) #8, !dbg !11225
  %.pre91 = load i32, i32* @flag_openmp, align 4, !dbg !11227
  %.pre92 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11227
  %.pre210 = or i32 %.pre91, %.pre92, !dbg !11227
  br label %land.lhs.true3579, !dbg !11225

land.lhs.true3579:                                ; preds = %land.lhs.true3573, %if.then3577
  %.pre-phi211 = phi i32 [ %.pre-phi209, %land.lhs.true3573 ], [ %.pre210, %if.then3577 ], !dbg !11227
  %3125 = icmp eq i32 %.pre-phi211, 0, !dbg !11227
  br i1 %3125, label %land.lhs.true3585, label %if.then3583, !dbg !11227

if.then3583:                                      ; preds = %land.lhs.true3579
  %3126 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 227), align 8, !dbg !11227
  %3127 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11227
  tail call fastcc void @def_builtin_1(i32 667, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1072, i64 0, i64 0), i32 3, %union.tree_node* %3126, %union.tree_node* %3126, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3127, i8 zeroext 0) #8, !dbg !11227
  %.pre93 = load i32, i32* @flag_openmp, align 4, !dbg !11229
  %.pre94 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11229
  %.pre212 = or i32 %.pre93, %.pre94, !dbg !11229
  br label %land.lhs.true3585, !dbg !11227

land.lhs.true3585:                                ; preds = %land.lhs.true3579, %if.then3583
  %.pre-phi213 = phi i32 [ %.pre-phi211, %land.lhs.true3579 ], [ %.pre212, %if.then3583 ], !dbg !11229
  %3128 = icmp eq i32 %.pre-phi213, 0, !dbg !11229
  br i1 %3128, label %land.lhs.true3591, label %if.then3589, !dbg !11229

if.then3589:                                      ; preds = %land.lhs.true3585
  %3129 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 227), align 8, !dbg !11229
  %3130 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11229
  tail call fastcc void @def_builtin_1(i32 668, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1073, i64 0, i64 0), i32 3, %union.tree_node* %3129, %union.tree_node* %3129, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3130, i8 zeroext 0) #8, !dbg !11229
  %.pre95 = load i32, i32* @flag_openmp, align 4, !dbg !11231
  %.pre96 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11231
  %.pre214 = or i32 %.pre95, %.pre96, !dbg !11231
  br label %land.lhs.true3591, !dbg !11229

land.lhs.true3591:                                ; preds = %land.lhs.true3585, %if.then3589
  %.pre-phi215 = phi i32 [ %.pre-phi213, %land.lhs.true3585 ], [ %.pre214, %if.then3589 ], !dbg !11231
  %3131 = icmp eq i32 %.pre-phi215, 0, !dbg !11231
  br i1 %3131, label %land.lhs.true3597, label %if.then3595, !dbg !11231

if.then3595:                                      ; preds = %land.lhs.true3591
  %3132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 225), align 8, !dbg !11231
  %3133 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11231
  tail call fastcc void @def_builtin_1(i32 669, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1074, i64 0, i64 0), i32 3, %union.tree_node* %3132, %union.tree_node* %3132, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3133, i8 zeroext 0) #8, !dbg !11231
  %.pre97 = load i32, i32* @flag_openmp, align 4, !dbg !11233
  %.pre98 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11233
  %.pre216 = or i32 %.pre97, %.pre98, !dbg !11233
  br label %land.lhs.true3597, !dbg !11231

land.lhs.true3597:                                ; preds = %land.lhs.true3591, %if.then3595
  %.pre-phi217 = phi i32 [ %.pre-phi215, %land.lhs.true3591 ], [ %.pre216, %if.then3595 ], !dbg !11233
  %3134 = icmp eq i32 %.pre-phi217, 0, !dbg !11233
  br i1 %3134, label %land.lhs.true3603, label %if.then3601, !dbg !11233

if.then3601:                                      ; preds = %land.lhs.true3597
  %3135 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 177), align 8, !dbg !11233
  %3136 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11233
  tail call fastcc void @def_builtin_1(i32 670, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1075, i64 0, i64 0), i32 3, %union.tree_node* %3135, %union.tree_node* %3135, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3136, i8 zeroext 0) #8, !dbg !11233
  %.pre99 = load i32, i32* @flag_openmp, align 4, !dbg !11235
  %.pre100 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11235
  %.pre218 = or i32 %.pre99, %.pre100, !dbg !11235
  br label %land.lhs.true3603, !dbg !11233

land.lhs.true3603:                                ; preds = %land.lhs.true3597, %if.then3601
  %.pre-phi219 = phi i32 [ %.pre-phi217, %land.lhs.true3597 ], [ %.pre218, %if.then3601 ], !dbg !11235
  %3137 = icmp eq i32 %.pre-phi219, 0, !dbg !11235
  br i1 %3137, label %land.lhs.true3609, label %if.then3607, !dbg !11235

if.then3607:                                      ; preds = %land.lhs.true3603
  %3138 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 177), align 8, !dbg !11235
  %3139 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11235
  tail call fastcc void @def_builtin_1(i32 671, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1076, i64 0, i64 0), i32 3, %union.tree_node* %3138, %union.tree_node* %3138, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3139, i8 zeroext 0) #8, !dbg !11235
  %.pre101 = load i32, i32* @flag_openmp, align 4, !dbg !11237
  %.pre102 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11237
  %.pre220 = or i32 %.pre101, %.pre102, !dbg !11237
  br label %land.lhs.true3609, !dbg !11235

land.lhs.true3609:                                ; preds = %land.lhs.true3603, %if.then3607
  %.pre-phi221 = phi i32 [ %.pre-phi219, %land.lhs.true3603 ], [ %.pre220, %if.then3607 ], !dbg !11237
  %3140 = icmp eq i32 %.pre-phi221, 0, !dbg !11237
  br i1 %3140, label %land.lhs.true3615, label %if.then3613, !dbg !11237

if.then3613:                                      ; preds = %land.lhs.true3609
  %3141 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 177), align 8, !dbg !11237
  %3142 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11237
  tail call fastcc void @def_builtin_1(i32 672, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1077, i64 0, i64 0), i32 3, %union.tree_node* %3141, %union.tree_node* %3141, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3142, i8 zeroext 0) #8, !dbg !11237
  %.pre103 = load i32, i32* @flag_openmp, align 4, !dbg !11239
  %.pre104 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11239
  %.pre222 = or i32 %.pre103, %.pre104, !dbg !11239
  br label %land.lhs.true3615, !dbg !11237

land.lhs.true3615:                                ; preds = %land.lhs.true3609, %if.then3613
  %.pre-phi223 = phi i32 [ %.pre-phi221, %land.lhs.true3609 ], [ %.pre222, %if.then3613 ], !dbg !11239
  %3143 = icmp eq i32 %.pre-phi223, 0, !dbg !11239
  br i1 %3143, label %land.lhs.true3621, label %if.then3619, !dbg !11239

if.then3619:                                      ; preds = %land.lhs.true3615
  %3144 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 177), align 8, !dbg !11239
  %3145 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11239
  tail call fastcc void @def_builtin_1(i32 673, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1078, i64 0, i64 0), i32 3, %union.tree_node* %3144, %union.tree_node* %3144, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3145, i8 zeroext 0) #8, !dbg !11239
  %.pre105 = load i32, i32* @flag_openmp, align 4, !dbg !11241
  %.pre106 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11241
  %.pre224 = or i32 %.pre105, %.pre106, !dbg !11241
  br label %land.lhs.true3621, !dbg !11239

land.lhs.true3621:                                ; preds = %land.lhs.true3615, %if.then3619
  %.pre-phi225 = phi i32 [ %.pre-phi223, %land.lhs.true3615 ], [ %.pre224, %if.then3619 ], !dbg !11241
  %3146 = icmp eq i32 %.pre-phi225, 0, !dbg !11241
  br i1 %3146, label %land.lhs.true3627, label %if.then3625, !dbg !11241

if.then3625:                                      ; preds = %land.lhs.true3621
  %3147 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 177), align 8, !dbg !11241
  %3148 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11241
  tail call fastcc void @def_builtin_1(i32 674, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1079, i64 0, i64 0), i32 3, %union.tree_node* %3147, %union.tree_node* %3147, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3148, i8 zeroext 0) #8, !dbg !11241
  %.pre107 = load i32, i32* @flag_openmp, align 4, !dbg !11243
  %.pre108 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11243
  %.pre226 = or i32 %.pre107, %.pre108, !dbg !11243
  br label %land.lhs.true3627, !dbg !11241

land.lhs.true3627:                                ; preds = %land.lhs.true3621, %if.then3625
  %.pre-phi227 = phi i32 [ %.pre-phi225, %land.lhs.true3621 ], [ %.pre226, %if.then3625 ], !dbg !11243
  %3149 = icmp eq i32 %.pre-phi227, 0, !dbg !11243
  br i1 %3149, label %land.lhs.true3633, label %if.then3631, !dbg !11243

if.then3631:                                      ; preds = %land.lhs.true3627
  %3150 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 177), align 8, !dbg !11243
  %3151 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11243
  tail call fastcc void @def_builtin_1(i32 675, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1080, i64 0, i64 0), i32 3, %union.tree_node* %3150, %union.tree_node* %3150, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3151, i8 zeroext 0) #8, !dbg !11243
  %.pre109 = load i32, i32* @flag_openmp, align 4, !dbg !11245
  %.pre110 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11245
  %.pre228 = or i32 %.pre109, %.pre110, !dbg !11245
  br label %land.lhs.true3633, !dbg !11243

land.lhs.true3633:                                ; preds = %land.lhs.true3627, %if.then3631
  %.pre-phi229 = phi i32 [ %.pre-phi227, %land.lhs.true3627 ], [ %.pre228, %if.then3631 ], !dbg !11245
  %3152 = icmp eq i32 %.pre-phi229, 0, !dbg !11245
  br i1 %3152, label %land.lhs.true3639, label %if.then3637, !dbg !11245

if.then3637:                                      ; preds = %land.lhs.true3633
  %3153 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 177), align 8, !dbg !11245
  %3154 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11245
  tail call fastcc void @def_builtin_1(i32 676, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1081, i64 0, i64 0), i32 3, %union.tree_node* %3153, %union.tree_node* %3153, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3154, i8 zeroext 0) #8, !dbg !11245
  %.pre111 = load i32, i32* @flag_openmp, align 4, !dbg !11247
  %.pre112 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11247
  %.pre230 = or i32 %.pre111, %.pre112, !dbg !11247
  br label %land.lhs.true3639, !dbg !11245

land.lhs.true3639:                                ; preds = %land.lhs.true3633, %if.then3637
  %.pre-phi231 = phi i32 [ %.pre-phi229, %land.lhs.true3633 ], [ %.pre230, %if.then3637 ], !dbg !11247
  %3155 = icmp eq i32 %.pre-phi231, 0, !dbg !11247
  br i1 %3155, label %land.lhs.true3645, label %if.then3643, !dbg !11247

if.then3643:                                      ; preds = %land.lhs.true3639
  %3156 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 177), align 8, !dbg !11247
  %3157 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11247
  tail call fastcc void @def_builtin_1(i32 677, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1082, i64 0, i64 0), i32 3, %union.tree_node* %3156, %union.tree_node* %3156, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3157, i8 zeroext 0) #8, !dbg !11247
  %.pre113 = load i32, i32* @flag_openmp, align 4, !dbg !11249
  %.pre114 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11249
  %.pre232 = or i32 %.pre113, %.pre114, !dbg !11249
  br label %land.lhs.true3645, !dbg !11247

land.lhs.true3645:                                ; preds = %land.lhs.true3639, %if.then3643
  %.pre-phi233 = phi i32 [ %.pre-phi231, %land.lhs.true3639 ], [ %.pre232, %if.then3643 ], !dbg !11249
  %3158 = icmp eq i32 %.pre-phi233, 0, !dbg !11249
  br i1 %3158, label %land.lhs.true3651, label %if.then3649, !dbg !11249

if.then3649:                                      ; preds = %land.lhs.true3645
  %3159 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 232), align 16, !dbg !11249
  %3160 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11249
  tail call fastcc void @def_builtin_1(i32 678, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1083, i64 0, i64 0), i32 3, %union.tree_node* %3159, %union.tree_node* %3159, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3160, i8 zeroext 0) #8, !dbg !11249
  %.pre115 = load i32, i32* @flag_openmp, align 4, !dbg !11251
  %.pre116 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11251
  %.pre234 = or i32 %.pre115, %.pre116, !dbg !11251
  br label %land.lhs.true3651, !dbg !11249

land.lhs.true3651:                                ; preds = %land.lhs.true3645, %if.then3649
  %.pre-phi235 = phi i32 [ %.pre-phi233, %land.lhs.true3645 ], [ %.pre234, %if.then3649 ], !dbg !11251
  %3161 = icmp eq i32 %.pre-phi235, 0, !dbg !11251
  br i1 %3161, label %land.lhs.true3657, label %if.then3655, !dbg !11251

if.then3655:                                      ; preds = %land.lhs.true3651
  %3162 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 232), align 16, !dbg !11251
  %3163 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11251
  tail call fastcc void @def_builtin_1(i32 679, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1084, i64 0, i64 0), i32 3, %union.tree_node* %3162, %union.tree_node* %3162, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3163, i8 zeroext 0) #8, !dbg !11251
  %.pre117 = load i32, i32* @flag_openmp, align 4, !dbg !11253
  %.pre118 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11253
  %.pre236 = or i32 %.pre117, %.pre118, !dbg !11253
  br label %land.lhs.true3657, !dbg !11251

land.lhs.true3657:                                ; preds = %land.lhs.true3651, %if.then3655
  %.pre-phi237 = phi i32 [ %.pre-phi235, %land.lhs.true3651 ], [ %.pre236, %if.then3655 ], !dbg !11253
  %3164 = icmp eq i32 %.pre-phi237, 0, !dbg !11253
  br i1 %3164, label %land.lhs.true3663, label %if.then3661, !dbg !11253

if.then3661:                                      ; preds = %land.lhs.true3657
  %3165 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 232), align 16, !dbg !11253
  %3166 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11253
  tail call fastcc void @def_builtin_1(i32 680, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1085, i64 0, i64 0), i32 3, %union.tree_node* %3165, %union.tree_node* %3165, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3166, i8 zeroext 0) #8, !dbg !11253
  %.pre119 = load i32, i32* @flag_openmp, align 4, !dbg !11255
  %.pre120 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11255
  %.pre238 = or i32 %.pre119, %.pre120, !dbg !11255
  br label %land.lhs.true3663, !dbg !11253

land.lhs.true3663:                                ; preds = %land.lhs.true3657, %if.then3661
  %.pre-phi239 = phi i32 [ %.pre-phi237, %land.lhs.true3657 ], [ %.pre238, %if.then3661 ], !dbg !11255
  %3167 = icmp eq i32 %.pre-phi239, 0, !dbg !11255
  br i1 %3167, label %land.lhs.true3669, label %if.then3667, !dbg !11255

if.then3667:                                      ; preds = %land.lhs.true3663
  %3168 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 229), align 8, !dbg !11255
  %3169 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11255
  tail call fastcc void @def_builtin_1(i32 681, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1086, i64 0, i64 0), i32 3, %union.tree_node* %3168, %union.tree_node* %3168, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3169, i8 zeroext 0) #8, !dbg !11255
  %.pre121 = load i32, i32* @flag_openmp, align 4, !dbg !11257
  %.pre122 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11257
  %.pre240 = or i32 %.pre121, %.pre122, !dbg !11257
  br label %land.lhs.true3669, !dbg !11255

land.lhs.true3669:                                ; preds = %land.lhs.true3663, %if.then3667
  %.pre-phi241 = phi i32 [ %.pre-phi239, %land.lhs.true3663 ], [ %.pre240, %if.then3667 ], !dbg !11257
  %3170 = icmp eq i32 %.pre-phi241, 0, !dbg !11257
  br i1 %3170, label %land.lhs.true3675, label %if.then3673, !dbg !11257

if.then3673:                                      ; preds = %land.lhs.true3669
  %3171 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 232), align 16, !dbg !11257
  %3172 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11257
  tail call fastcc void @def_builtin_1(i32 682, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1087, i64 0, i64 0), i32 3, %union.tree_node* %3171, %union.tree_node* %3171, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3172, i8 zeroext 0) #8, !dbg !11257
  %.pre123 = load i32, i32* @flag_openmp, align 4, !dbg !11259
  %.pre124 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11259
  %.pre242 = or i32 %.pre123, %.pre124, !dbg !11259
  br label %land.lhs.true3675, !dbg !11257

land.lhs.true3675:                                ; preds = %land.lhs.true3669, %if.then3673
  %.pre-phi243 = phi i32 [ %.pre-phi241, %land.lhs.true3669 ], [ %.pre242, %if.then3673 ], !dbg !11259
  %3173 = icmp eq i32 %.pre-phi243, 0, !dbg !11259
  br i1 %3173, label %land.lhs.true3681, label %if.then3679, !dbg !11259

if.then3679:                                      ; preds = %land.lhs.true3675
  %3174 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 232), align 16, !dbg !11259
  %3175 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11259
  tail call fastcc void @def_builtin_1(i32 683, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1088, i64 0, i64 0), i32 3, %union.tree_node* %3174, %union.tree_node* %3174, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3175, i8 zeroext 0) #8, !dbg !11259
  %.pre125 = load i32, i32* @flag_openmp, align 4, !dbg !11261
  %.pre126 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11261
  %.pre244 = or i32 %.pre125, %.pre126, !dbg !11261
  br label %land.lhs.true3681, !dbg !11259

land.lhs.true3681:                                ; preds = %land.lhs.true3675, %if.then3679
  %.pre-phi245 = phi i32 [ %.pre-phi243, %land.lhs.true3675 ], [ %.pre244, %if.then3679 ], !dbg !11261
  %3176 = icmp eq i32 %.pre-phi245, 0, !dbg !11261
  br i1 %3176, label %land.lhs.true3687, label %if.then3685, !dbg !11261

if.then3685:                                      ; preds = %land.lhs.true3681
  %3177 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 232), align 16, !dbg !11261
  %3178 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11261
  tail call fastcc void @def_builtin_1(i32 684, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1089, i64 0, i64 0), i32 3, %union.tree_node* %3177, %union.tree_node* %3177, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3178, i8 zeroext 0) #8, !dbg !11261
  %.pre127 = load i32, i32* @flag_openmp, align 4, !dbg !11263
  %.pre128 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11263
  %.pre246 = or i32 %.pre127, %.pre128, !dbg !11263
  br label %land.lhs.true3687, !dbg !11261

land.lhs.true3687:                                ; preds = %land.lhs.true3681, %if.then3685
  %.pre-phi247 = phi i32 [ %.pre-phi245, %land.lhs.true3681 ], [ %.pre246, %if.then3685 ], !dbg !11263
  %3179 = icmp eq i32 %.pre-phi247, 0, !dbg !11263
  br i1 %3179, label %land.lhs.true3693, label %if.then3691, !dbg !11263

if.then3691:                                      ; preds = %land.lhs.true3687
  %3180 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 229), align 8, !dbg !11263
  %3181 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11263
  tail call fastcc void @def_builtin_1(i32 685, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1090, i64 0, i64 0), i32 3, %union.tree_node* %3180, %union.tree_node* %3180, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3181, i8 zeroext 0) #8, !dbg !11263
  %.pre129 = load i32, i32* @flag_openmp, align 4, !dbg !11265
  %.pre130 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11265
  %.pre248 = or i32 %.pre129, %.pre130, !dbg !11265
  br label %land.lhs.true3693, !dbg !11263

land.lhs.true3693:                                ; preds = %land.lhs.true3687, %if.then3691
  %.pre-phi249 = phi i32 [ %.pre-phi247, %land.lhs.true3687 ], [ %.pre248, %if.then3691 ], !dbg !11265
  %3182 = icmp eq i32 %.pre-phi249, 0, !dbg !11265
  br i1 %3182, label %land.lhs.true3699, label %if.then3697, !dbg !11265

if.then3697:                                      ; preds = %land.lhs.true3693
  %3183 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 178), align 16, !dbg !11265
  %3184 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11265
  tail call fastcc void @def_builtin_1(i32 686, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1091, i64 0, i64 0), i32 3, %union.tree_node* %3183, %union.tree_node* %3183, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3184, i8 zeroext 0) #8, !dbg !11265
  %.pre131 = load i32, i32* @flag_openmp, align 4, !dbg !11267
  %.pre132 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11267
  %.pre250 = or i32 %.pre131, %.pre132, !dbg !11267
  br label %land.lhs.true3699, !dbg !11265

land.lhs.true3699:                                ; preds = %land.lhs.true3693, %if.then3697
  %.pre-phi251 = phi i32 [ %.pre-phi249, %land.lhs.true3693 ], [ %.pre250, %if.then3697 ], !dbg !11267
  %3185 = icmp eq i32 %.pre-phi251, 0, !dbg !11267
  br i1 %3185, label %land.lhs.true3705, label %if.then3703, !dbg !11267

if.then3703:                                      ; preds = %land.lhs.true3699
  %3186 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 178), align 16, !dbg !11267
  %3187 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11267
  tail call fastcc void @def_builtin_1(i32 687, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1092, i64 0, i64 0), i32 3, %union.tree_node* %3186, %union.tree_node* %3186, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3187, i8 zeroext 0) #8, !dbg !11267
  %.pre133 = load i32, i32* @flag_openmp, align 4, !dbg !11269
  %.pre134 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11269
  %.pre252 = or i32 %.pre133, %.pre134, !dbg !11269
  br label %land.lhs.true3705, !dbg !11267

land.lhs.true3705:                                ; preds = %land.lhs.true3699, %if.then3703
  %.pre-phi253 = phi i32 [ %.pre-phi251, %land.lhs.true3699 ], [ %.pre252, %if.then3703 ], !dbg !11269
  %3188 = icmp eq i32 %.pre-phi253, 0, !dbg !11269
  br i1 %3188, label %land.lhs.true3711, label %if.then3709, !dbg !11269

if.then3709:                                      ; preds = %land.lhs.true3705
  %3189 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 178), align 16, !dbg !11269
  %3190 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11269
  tail call fastcc void @def_builtin_1(i32 688, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1093, i64 0, i64 0), i32 3, %union.tree_node* %3189, %union.tree_node* %3189, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3190, i8 zeroext 0) #8, !dbg !11269
  %.pre135 = load i32, i32* @flag_openmp, align 4, !dbg !11271
  %.pre136 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11271
  %.pre254 = or i32 %.pre135, %.pre136, !dbg !11271
  br label %land.lhs.true3711, !dbg !11269

land.lhs.true3711:                                ; preds = %land.lhs.true3705, %if.then3709
  %.pre-phi255 = phi i32 [ %.pre-phi253, %land.lhs.true3705 ], [ %.pre254, %if.then3709 ], !dbg !11271
  %3191 = icmp eq i32 %.pre-phi255, 0, !dbg !11271
  br i1 %3191, label %land.lhs.true3717, label %if.then3715, !dbg !11271

if.then3715:                                      ; preds = %land.lhs.true3711
  %3192 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 178), align 16, !dbg !11271
  %3193 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11271
  tail call fastcc void @def_builtin_1(i32 689, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1094, i64 0, i64 0), i32 3, %union.tree_node* %3192, %union.tree_node* %3192, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3193, i8 zeroext 0) #8, !dbg !11271
  %.pre137 = load i32, i32* @flag_openmp, align 4, !dbg !11273
  %.pre138 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11273
  %.pre256 = or i32 %.pre137, %.pre138, !dbg !11273
  br label %land.lhs.true3717, !dbg !11271

land.lhs.true3717:                                ; preds = %land.lhs.true3711, %if.then3715
  %.pre-phi257 = phi i32 [ %.pre-phi255, %land.lhs.true3711 ], [ %.pre256, %if.then3715 ], !dbg !11273
  %3194 = icmp eq i32 %.pre-phi257, 0, !dbg !11273
  br i1 %3194, label %land.lhs.true3723, label %if.then3721, !dbg !11273

if.then3721:                                      ; preds = %land.lhs.true3717
  %3195 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 178), align 16, !dbg !11273
  %3196 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11273
  tail call fastcc void @def_builtin_1(i32 690, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1095, i64 0, i64 0), i32 3, %union.tree_node* %3195, %union.tree_node* %3195, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3196, i8 zeroext 0) #8, !dbg !11273
  %.pre139 = load i32, i32* @flag_openmp, align 4, !dbg !11275
  %.pre140 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11275
  %.pre258 = or i32 %.pre139, %.pre140, !dbg !11275
  br label %land.lhs.true3723, !dbg !11273

land.lhs.true3723:                                ; preds = %land.lhs.true3717, %if.then3721
  %.pre-phi259 = phi i32 [ %.pre-phi257, %land.lhs.true3717 ], [ %.pre258, %if.then3721 ], !dbg !11275
  %3197 = icmp eq i32 %.pre-phi259, 0, !dbg !11275
  br i1 %3197, label %land.lhs.true3729, label %if.then3727, !dbg !11275

if.then3727:                                      ; preds = %land.lhs.true3723
  %3198 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 178), align 16, !dbg !11275
  %3199 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11275
  tail call fastcc void @def_builtin_1(i32 691, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1096, i64 0, i64 0), i32 3, %union.tree_node* %3198, %union.tree_node* %3198, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3199, i8 zeroext 0) #8, !dbg !11275
  %.pre141 = load i32, i32* @flag_openmp, align 4, !dbg !11277
  %.pre142 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11277
  %.pre260 = or i32 %.pre141, %.pre142, !dbg !11277
  br label %land.lhs.true3729, !dbg !11275

land.lhs.true3729:                                ; preds = %land.lhs.true3723, %if.then3727
  %.pre-phi261 = phi i32 [ %.pre-phi259, %land.lhs.true3723 ], [ %.pre260, %if.then3727 ], !dbg !11277
  %3200 = icmp eq i32 %.pre-phi261, 0, !dbg !11277
  br i1 %3200, label %land.lhs.true3735, label %if.then3733, !dbg !11277

if.then3733:                                      ; preds = %land.lhs.true3729
  %3201 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 178), align 16, !dbg !11277
  %3202 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11277
  tail call fastcc void @def_builtin_1(i32 692, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1097, i64 0, i64 0), i32 3, %union.tree_node* %3201, %union.tree_node* %3201, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3202, i8 zeroext 0) #8, !dbg !11277
  %.pre143 = load i32, i32* @flag_openmp, align 4, !dbg !11279
  %.pre144 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11279
  %.pre262 = or i32 %.pre143, %.pre144, !dbg !11279
  br label %land.lhs.true3735, !dbg !11277

land.lhs.true3735:                                ; preds = %land.lhs.true3729, %if.then3733
  %.pre-phi263 = phi i32 [ %.pre-phi261, %land.lhs.true3729 ], [ %.pre262, %if.then3733 ], !dbg !11279
  %3203 = icmp eq i32 %.pre-phi263, 0, !dbg !11279
  br i1 %3203, label %land.lhs.true3741, label %if.then3739, !dbg !11279

if.then3739:                                      ; preds = %land.lhs.true3735
  %3204 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 178), align 16, !dbg !11279
  %3205 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11279
  tail call fastcc void @def_builtin_1(i32 693, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1098, i64 0, i64 0), i32 3, %union.tree_node* %3204, %union.tree_node* %3204, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3205, i8 zeroext 0) #8, !dbg !11279
  %.pre145 = load i32, i32* @flag_openmp, align 4, !dbg !11281
  %.pre146 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11281
  %.pre264 = or i32 %.pre145, %.pre146, !dbg !11281
  br label %land.lhs.true3741, !dbg !11279

land.lhs.true3741:                                ; preds = %land.lhs.true3735, %if.then3739
  %.pre-phi265 = phi i32 [ %.pre-phi263, %land.lhs.true3735 ], [ %.pre264, %if.then3739 ], !dbg !11281
  %3206 = icmp eq i32 %.pre-phi265, 0, !dbg !11281
  br i1 %3206, label %land.lhs.true3747, label %if.then3745, !dbg !11281

if.then3745:                                      ; preds = %land.lhs.true3741
  %3207 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 230), align 16, !dbg !11281
  %3208 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11281
  tail call fastcc void @def_builtin_1(i32 694, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1099, i64 0, i64 0), i32 3, %union.tree_node* %3207, %union.tree_node* %3207, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3208, i8 zeroext 0) #8, !dbg !11281
  %.pre147 = load i32, i32* @flag_openmp, align 4, !dbg !11283
  %.pre148 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11283
  %.pre266 = or i32 %.pre147, %.pre148, !dbg !11283
  br label %land.lhs.true3747, !dbg !11281

land.lhs.true3747:                                ; preds = %land.lhs.true3741, %if.then3745
  %.pre-phi267 = phi i32 [ %.pre-phi265, %land.lhs.true3741 ], [ %.pre266, %if.then3745 ], !dbg !11283
  %3209 = icmp eq i32 %.pre-phi267, 0, !dbg !11283
  br i1 %3209, label %land.lhs.true3753, label %if.then3751, !dbg !11283

if.then3751:                                      ; preds = %land.lhs.true3747
  %3210 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 230), align 16, !dbg !11283
  %3211 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11283
  tail call fastcc void @def_builtin_1(i32 695, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1100, i64 0, i64 0), i32 3, %union.tree_node* %3210, %union.tree_node* %3210, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3211, i8 zeroext 0) #8, !dbg !11283
  %.pre149 = load i32, i32* @flag_openmp, align 4, !dbg !11285
  %.pre150 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11285
  %.pre268 = or i32 %.pre149, %.pre150, !dbg !11285
  br label %land.lhs.true3753, !dbg !11283

land.lhs.true3753:                                ; preds = %land.lhs.true3747, %if.then3751
  %.pre-phi269 = phi i32 [ %.pre-phi267, %land.lhs.true3747 ], [ %.pre268, %if.then3751 ], !dbg !11285
  %3212 = icmp eq i32 %.pre-phi269, 0, !dbg !11285
  br i1 %3212, label %land.lhs.true3759, label %if.then3757, !dbg !11285

if.then3757:                                      ; preds = %land.lhs.true3753
  %3213 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 230), align 16, !dbg !11285
  %3214 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11285
  tail call fastcc void @def_builtin_1(i32 696, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1101, i64 0, i64 0), i32 3, %union.tree_node* %3213, %union.tree_node* %3213, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3214, i8 zeroext 0) #8, !dbg !11285
  %.pre151 = load i32, i32* @flag_openmp, align 4, !dbg !11287
  %.pre152 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11287
  %.pre270 = or i32 %.pre151, %.pre152, !dbg !11287
  br label %land.lhs.true3759, !dbg !11285

land.lhs.true3759:                                ; preds = %land.lhs.true3753, %if.then3757
  %.pre-phi271 = phi i32 [ %.pre-phi269, %land.lhs.true3753 ], [ %.pre270, %if.then3757 ], !dbg !11287
  %3215 = icmp eq i32 %.pre-phi271, 0, !dbg !11287
  br i1 %3215, label %land.lhs.true3765, label %if.then3763, !dbg !11287

if.then3763:                                      ; preds = %land.lhs.true3759
  %3216 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 228), align 16, !dbg !11287
  %3217 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11287
  tail call fastcc void @def_builtin_1(i32 697, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1102, i64 0, i64 0), i32 3, %union.tree_node* %3216, %union.tree_node* %3216, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3217, i8 zeroext 0) #8, !dbg !11287
  %.pre153 = load i32, i32* @flag_openmp, align 4, !dbg !11289
  %.pre154 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11289
  %.pre272 = or i32 %.pre153, %.pre154, !dbg !11289
  br label %land.lhs.true3765, !dbg !11287

land.lhs.true3765:                                ; preds = %land.lhs.true3759, %if.then3763
  %.pre-phi273 = phi i32 [ %.pre-phi271, %land.lhs.true3759 ], [ %.pre272, %if.then3763 ], !dbg !11289
  %3218 = icmp eq i32 %.pre-phi273, 0, !dbg !11289
  br i1 %3218, label %land.lhs.true3771, label %if.then3769, !dbg !11289

if.then3769:                                      ; preds = %land.lhs.true3765
  %3219 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11289
  %3220 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11289
  tail call fastcc void @def_builtin_1(i32 698, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1103, i64 0, i64 0), i32 3, %union.tree_node* %3219, %union.tree_node* %3219, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3220, i8 zeroext 0) #8, !dbg !11289
  %.pre155 = load i32, i32* @flag_openmp, align 4, !dbg !11291
  %.pre156 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11291
  %.pre274 = or i32 %.pre155, %.pre156, !dbg !11291
  br label %land.lhs.true3771, !dbg !11289

land.lhs.true3771:                                ; preds = %land.lhs.true3765, %if.then3769
  %.pre-phi275 = phi i32 [ %.pre-phi273, %land.lhs.true3765 ], [ %.pre274, %if.then3769 ], !dbg !11291
  %3221 = icmp eq i32 %.pre-phi275, 0, !dbg !11291
  br i1 %3221, label %land.lhs.true3777, label %if.then3775, !dbg !11291

if.then3775:                                      ; preds = %land.lhs.true3771
  %3222 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11291
  %3223 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11291
  tail call fastcc void @def_builtin_1(i32 699, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1104, i64 0, i64 0), i32 3, %union.tree_node* %3222, %union.tree_node* %3222, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3223, i8 zeroext 0) #8, !dbg !11291
  %.pre157 = load i32, i32* @flag_openmp, align 4, !dbg !11293
  %.pre158 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11293
  %.pre276 = or i32 %.pre157, %.pre158, !dbg !11293
  br label %land.lhs.true3777, !dbg !11291

land.lhs.true3777:                                ; preds = %land.lhs.true3771, %if.then3775
  %.pre-phi277 = phi i32 [ %.pre-phi275, %land.lhs.true3771 ], [ %.pre276, %if.then3775 ], !dbg !11293
  %3224 = icmp eq i32 %.pre-phi277, 0, !dbg !11293
  br i1 %3224, label %land.lhs.true3783, label %if.then3781, !dbg !11293

if.then3781:                                      ; preds = %land.lhs.true3777
  %3225 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11293
  %3226 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11293
  tail call fastcc void @def_builtin_1(i32 700, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1105, i64 0, i64 0), i32 3, %union.tree_node* %3225, %union.tree_node* %3225, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3226, i8 zeroext 0) #8, !dbg !11293
  %.pre159 = load i32, i32* @flag_openmp, align 4, !dbg !11295
  %.pre160 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11295
  %.pre278 = or i32 %.pre159, %.pre160, !dbg !11295
  br label %land.lhs.true3783, !dbg !11293

land.lhs.true3783:                                ; preds = %land.lhs.true3777, %if.then3781
  %.pre-phi279 = phi i32 [ %.pre-phi277, %land.lhs.true3777 ], [ %.pre278, %if.then3781 ], !dbg !11295
  %3227 = icmp eq i32 %.pre-phi279, 0, !dbg !11295
  br i1 %3227, label %land.lhs.true3789, label %if.then3787, !dbg !11295

if.then3787:                                      ; preds = %land.lhs.true3783
  %3228 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11295
  %3229 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11295
  tail call fastcc void @def_builtin_1(i32 701, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1106, i64 0, i64 0), i32 3, %union.tree_node* %3228, %union.tree_node* %3228, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3229, i8 zeroext 0) #8, !dbg !11295
  %.pre161 = load i32, i32* @flag_openmp, align 4, !dbg !11297
  %.pre162 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11297
  %.pre280 = or i32 %.pre161, %.pre162, !dbg !11297
  br label %land.lhs.true3789, !dbg !11295

land.lhs.true3789:                                ; preds = %land.lhs.true3783, %if.then3787
  %.pre-phi281 = phi i32 [ %.pre-phi279, %land.lhs.true3783 ], [ %.pre280, %if.then3787 ], !dbg !11297
  %3230 = icmp eq i32 %.pre-phi281, 0, !dbg !11297
  br i1 %3230, label %land.lhs.true3795, label %if.then3793, !dbg !11297

if.then3793:                                      ; preds = %land.lhs.true3789
  %3231 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 213), align 8, !dbg !11297
  %3232 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11297
  tail call fastcc void @def_builtin_1(i32 702, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1107, i64 0, i64 0), i32 3, %union.tree_node* %3231, %union.tree_node* %3231, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3232, i8 zeroext 0) #8, !dbg !11297
  %.pre163 = load i32, i32* @flag_openmp, align 4, !dbg !11299
  %.pre164 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11299
  %.pre282 = or i32 %.pre163, %.pre164, !dbg !11299
  br label %land.lhs.true3795, !dbg !11297

land.lhs.true3795:                                ; preds = %land.lhs.true3789, %if.then3793
  %.pre-phi283 = phi i32 [ %.pre-phi281, %land.lhs.true3789 ], [ %.pre282, %if.then3793 ], !dbg !11299
  %3233 = icmp eq i32 %.pre-phi283, 0, !dbg !11299
  br i1 %3233, label %land.lhs.true3801, label %if.then3799, !dbg !11299

if.then3799:                                      ; preds = %land.lhs.true3795
  %3234 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11299
  %3235 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11299
  tail call fastcc void @def_builtin_1(i32 703, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1108, i64 0, i64 0), i32 3, %union.tree_node* %3234, %union.tree_node* %3234, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3235, i8 zeroext 0) #8, !dbg !11299
  %.pre165 = load i32, i32* @flag_openmp, align 4, !dbg !11301
  %.pre166 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11301
  %.pre284 = or i32 %.pre165, %.pre166, !dbg !11301
  br label %land.lhs.true3801, !dbg !11299

land.lhs.true3801:                                ; preds = %land.lhs.true3795, %if.then3799
  %.pre-phi285 = phi i32 [ %.pre-phi283, %land.lhs.true3795 ], [ %.pre284, %if.then3799 ], !dbg !11301
  %3236 = icmp eq i32 %.pre-phi285, 0, !dbg !11301
  br i1 %3236, label %land.lhs.true3807, label %if.then3805, !dbg !11301

if.then3805:                                      ; preds = %land.lhs.true3801
  %3237 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 231), align 8, !dbg !11301
  %3238 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11301
  tail call fastcc void @def_builtin_1(i32 704, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1109, i64 0, i64 0), i32 3, %union.tree_node* %3237, %union.tree_node* %3237, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3238, i8 zeroext 0) #8, !dbg !11301
  %.pre167 = load i32, i32* @flag_openmp, align 4, !dbg !11303
  %.pre168 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11303
  %.pre286 = or i32 %.pre167, %.pre168, !dbg !11303
  br label %land.lhs.true3807, !dbg !11301

land.lhs.true3807:                                ; preds = %land.lhs.true3801, %if.then3805
  %.pre-phi287 = phi i32 [ %.pre-phi285, %land.lhs.true3801 ], [ %.pre286, %if.then3805 ], !dbg !11303
  %3239 = icmp eq i32 %.pre-phi287, 0, !dbg !11303
  br i1 %3239, label %land.lhs.true3813, label %if.then3811, !dbg !11303

if.then3811:                                      ; preds = %land.lhs.true3807
  %3240 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 123), align 8, !dbg !11303
  %3241 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11303
  tail call fastcc void @def_builtin_1(i32 705, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1110, i64 0, i64 0), i32 3, %union.tree_node* %3240, %union.tree_node* %3240, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3241, i8 zeroext 0) #8, !dbg !11303
  %.pre169 = load i32, i32* @flag_openmp, align 4, !dbg !11305
  %.pre170 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11305
  %.pre288 = or i32 %.pre169, %.pre170, !dbg !11305
  br label %land.lhs.true3813, !dbg !11303

land.lhs.true3813:                                ; preds = %land.lhs.true3807, %if.then3811
  %.pre-phi289 = phi i32 [ %.pre-phi287, %land.lhs.true3807 ], [ %.pre288, %if.then3811 ], !dbg !11305
  %3242 = icmp eq i32 %.pre-phi289, 0, !dbg !11305
  br i1 %3242, label %land.lhs.true3819, label %if.then3817, !dbg !11305

if.then3817:                                      ; preds = %land.lhs.true3813
  %3243 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 57), align 8, !dbg !11305
  %3244 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11305
  tail call fastcc void @def_builtin_1(i32 706, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1111, i64 0, i64 0), i32 3, %union.tree_node* %3243, %union.tree_node* %3243, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3244, i8 zeroext 0) #8, !dbg !11305
  %.pre171 = load i32, i32* @flag_openmp, align 4, !dbg !11307
  %.pre172 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11307
  %.pre290 = or i32 %.pre171, %.pre172, !dbg !11307
  br label %land.lhs.true3819, !dbg !11305

land.lhs.true3819:                                ; preds = %land.lhs.true3813, %if.then3817
  %.pre-phi291 = phi i32 [ %.pre-phi289, %land.lhs.true3813 ], [ %.pre290, %if.then3817 ], !dbg !11307
  %3245 = icmp eq i32 %.pre-phi291, 0, !dbg !11307
  br i1 %3245, label %land.lhs.true3825, label %if.then3823, !dbg !11307

if.then3823:                                      ; preds = %land.lhs.true3819
  %3246 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 222), align 16, !dbg !11307
  %3247 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11307
  tail call fastcc void @def_builtin_1(i32 707, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1112, i64 0, i64 0), i32 3, %union.tree_node* %3246, %union.tree_node* %3246, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3247, i8 zeroext 0) #8, !dbg !11307
  %.pre173 = load i32, i32* @flag_openmp, align 4, !dbg !11309
  %.pre174 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11309
  %.pre292 = or i32 %.pre173, %.pre174, !dbg !11309
  br label %land.lhs.true3825, !dbg !11307

land.lhs.true3825:                                ; preds = %land.lhs.true3819, %if.then3823
  %.pre-phi293 = phi i32 [ %.pre-phi291, %land.lhs.true3819 ], [ %.pre292, %if.then3823 ], !dbg !11309
  %3248 = icmp eq i32 %.pre-phi293, 0, !dbg !11309
  br i1 %3248, label %land.lhs.true3831, label %if.then3829, !dbg !11309

if.then3829:                                      ; preds = %land.lhs.true3825
  %3249 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11309
  %3250 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11309
  tail call fastcc void @def_builtin_1(i32 708, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1113, i64 0, i64 0), i32 3, %union.tree_node* %3249, %union.tree_node* %3249, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3250, i8 zeroext 0) #8, !dbg !11309
  %.pre175 = load i32, i32* @flag_openmp, align 4, !dbg !11311
  %.pre176 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11311
  %.pre294 = or i32 %.pre175, %.pre176, !dbg !11311
  br label %land.lhs.true3831, !dbg !11309

land.lhs.true3831:                                ; preds = %land.lhs.true3825, %if.then3829
  %.pre-phi295 = phi i32 [ %.pre-phi293, %land.lhs.true3825 ], [ %.pre294, %if.then3829 ], !dbg !11311
  %3251 = icmp eq i32 %.pre-phi295, 0, !dbg !11311
  br i1 %3251, label %land.lhs.true3837, label %if.then3835, !dbg !11311

if.then3835:                                      ; preds = %land.lhs.true3831
  %3252 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 52), align 16, !dbg !11311
  %3253 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11311
  tail call fastcc void @def_builtin_1(i32 709, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1114, i64 0, i64 0), i32 3, %union.tree_node* %3252, %union.tree_node* %3252, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3253, i8 zeroext 0) #8, !dbg !11311
  %.pre177 = load i32, i32* @flag_openmp, align 4, !dbg !11313
  %.pre178 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11313
  %.pre296 = or i32 %.pre177, %.pre178, !dbg !11313
  br label %land.lhs.true3837, !dbg !11311

land.lhs.true3837:                                ; preds = %land.lhs.true3831, %if.then3835
  %.pre-phi297 = phi i32 [ %.pre-phi295, %land.lhs.true3831 ], [ %.pre296, %if.then3835 ], !dbg !11313
  %3254 = icmp eq i32 %.pre-phi297, 0, !dbg !11313
  br i1 %3254, label %land.lhs.true3843, label %if.then3841, !dbg !11313

if.then3841:                                      ; preds = %land.lhs.true3837
  %3255 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 53), align 8, !dbg !11313
  %3256 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11313
  tail call fastcc void @def_builtin_1(i32 710, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1115, i64 0, i64 0), i32 3, %union.tree_node* %3255, %union.tree_node* %3255, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3256, i8 zeroext 0) #8, !dbg !11313
  %.pre179 = load i32, i32* @flag_openmp, align 4, !dbg !11315
  %.pre180 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11315
  %.pre298 = or i32 %.pre179, %.pre180, !dbg !11315
  br label %land.lhs.true3843, !dbg !11313

land.lhs.true3843:                                ; preds = %land.lhs.true3837, %if.then3841
  %.pre-phi299 = phi i32 [ %.pre-phi297, %land.lhs.true3837 ], [ %.pre298, %if.then3841 ], !dbg !11315
  %3257 = icmp eq i32 %.pre-phi299, 0, !dbg !11315
  br i1 %3257, label %land.lhs.true3849, label %if.then3847, !dbg !11315

if.then3847:                                      ; preds = %land.lhs.true3843
  %3258 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 54), align 16, !dbg !11315
  %3259 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11315
  tail call fastcc void @def_builtin_1(i32 711, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1116, i64 0, i64 0), i32 3, %union.tree_node* %3258, %union.tree_node* %3258, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3259, i8 zeroext 0) #8, !dbg !11315
  %.pre181 = load i32, i32* @flag_openmp, align 4, !dbg !11317
  %.pre182 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !11317
  %.pre300 = or i32 %.pre181, %.pre182, !dbg !11317
  br label %land.lhs.true3849, !dbg !11315

land.lhs.true3849:                                ; preds = %land.lhs.true3843, %if.then3847
  %.pre-phi301 = phi i32 [ %.pre-phi299, %land.lhs.true3843 ], [ %.pre300, %if.then3847 ], !dbg !11317
  %3260 = icmp eq i32 %.pre-phi301, 0, !dbg !11317
  br i1 %3260, label %if.end3854, label %if.then3853, !dbg !11317

if.then3853:                                      ; preds = %land.lhs.true3849
  %3261 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 102), align 16, !dbg !11317
  %3262 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !11317
  tail call fastcc void @def_builtin_1(i32 712, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1117, i64 0, i64 0), i32 3, %union.tree_node* %3261, %union.tree_node* %3261, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1, %union.tree_node* %3262, i8 zeroext 0) #8, !dbg !11317
  br label %if.end3854, !dbg !11317

if.end3854:                                       ; preds = %land.lhs.true3849, %if.then3853
  %3263 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 23), align 8, !dbg !11319
  tail call void %3263() #7, !dbg !11320
  tail call void @build_common_builtin_nodes() #7, !dbg !11321
  %3264 = load i32, i32* @flag_mudflap, align 4, !dbg !11322
  %tobool3855 = icmp eq i32 %3264, 0, !dbg !11322
  br i1 %tobool3855, label %if.end3857, label %if.then3856, !dbg !11324

if.then3856:                                      ; preds = %if.end3854
  tail call void @mudflap_init() #7, !dbg !11325
  br label %if.end3857, !dbg !11325

if.end3857:                                       ; preds = %if.end3854, %if.then3856
  ret void, !dbg !11326
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_compound_literal_name(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !11327 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11329, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.314, i64 0, i64 0), metadata !11331, metadata !DIExpression()), !dbg !11336
  %call = tail call i64 @strlen(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.314, i64 0, i64 0)) #7, !dbg !11337
  %add = add i64 %call, 32, !dbg !11337
  %0 = alloca i8, i64 %add, align 16, !dbg !11337
  call void @llvm.dbg.value(metadata i8* %0, metadata !11330, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i8* %0, metadata !11333, metadata !DIExpression()), !dbg !11336
  %1 = load i32, i32* @compound_literal_number, align 4, !dbg !11337
  %conv = sext i32 %1 to i64, !dbg !11337
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.315, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.314, i64 0, i64 0), i64 %conv) #7, !dbg !11337
  %2 = load i32, i32* @compound_literal_number, align 4, !dbg !11338
  %inc = add nsw i32 %2, 1, !dbg !11338
  store i32 %inc, i32* @compound_literal_number, align 4, !dbg !11338
  %call2 = call %union.tree_node* @get_identifier(i8* nonnull %0) #7, !dbg !11339
  %name3 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11340
  store %union.tree_node* %call2, %union.tree_node** %name3, align 8, !dbg !11341
  ret void, !dbg !11342
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_va_arg(i32 %loc, %union.tree_node* %expr, %union.tree_node* %type) local_unnamed_addr #5 !dbg !11343 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11347, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !11348, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !11349, metadata !DIExpression()), !dbg !11350
  %call = tail call %union.tree_node* @build1_stat(i32 129, %union.tree_node* %type, %union.tree_node* %expr) #7, !dbg !11351
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11348, metadata !DIExpression()), !dbg !11350
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11352
  store i32 %loc, i32* %0, align 8, !dbg !11352
  ret %union.tree_node* %call, !dbg !11353
}

; Function Attrs: nounwind uwtable
define dso_local void @disable_builtin_function(i8* %name) local_unnamed_addr #5 !dbg !11354 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !11358, metadata !DIExpression()), !dbg !11362
  %call = tail call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0)) #7, !dbg !11363
  %call1 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0), i64 %call) #7, !dbg !11364
  %cmp = icmp eq i32 %call1, 0, !dbg !11365
  br i1 %cmp, label %if.then, label %if.else, !dbg !11366

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.317, i64 0, i64 0), i8* %name) #7, !dbg !11367
  br label %if.end, !dbg !11367

if.else:                                          ; preds = %entry
  %call2 = tail call i8* @xmalloc(i64 16) #7, !dbg !11368
  call void @llvm.dbg.value(metadata i8* %call2, metadata !11359, metadata !DIExpression()), !dbg !11369
  %name3 = bitcast i8* %call2 to i8**, !dbg !11370
  store i8* %name, i8** %name3, align 8, !dbg !11371
  %0 = load i64, i64* bitcast (%struct.disabled_builtin** @disabled_builtins to i64*), align 8, !dbg !11372
  %next = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !11373
  %1 = bitcast i8* %next to i64*, !dbg !11374
  store i64 %0, i64* %1, align 8, !dbg !11374
  store i8* %call2, i8** bitcast (%struct.disabled_builtin** @disabled_builtins to i8**), align 8, !dbg !11375
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11376
}

declare dso_local i32 @strncmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @c_promoting_integer_type_p(%union.tree_node* %t) local_unnamed_addr #5 !dbg !11377 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !11379, metadata !DIExpression()), !dbg !11380
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11381
  %bf.load = load i64, i64* %0, align 8, !dbg !11381
  %1 = trunc i64 %bf.load to i16, !dbg !11381
  switch i16 %1, label %sw.default [
    i16 8, label %sw.bb
    i16 6, label %sw.bb24
    i16 7, label %return
  ], !dbg !11382

sw.bb:                                            ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !11383
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !11383
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !11385
  %cmp = icmp eq %union.tree_node* %3, %4, !dbg !11386
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !11387

lor.lhs.false:                                    ; preds = %sw.bb
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !11388
  %cmp3 = icmp eq %union.tree_node* %3, %5, !dbg !11389
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !11390

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !11391
  %cmp7 = icmp eq %union.tree_node* %3, %6, !dbg !11392
  br i1 %cmp7, label %lor.end, label %lor.lhs.false8, !dbg !11393

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !dbg !11394
  %cmp11 = icmp eq %union.tree_node* %3, %7, !dbg !11395
  br i1 %cmp11, label %lor.end, label %lor.lhs.false12, !dbg !11396

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !11397
  %cmp15 = icmp eq %union.tree_node* %3, %8, !dbg !11398
  br i1 %cmp15, label %lor.end, label %lor.rhs, !dbg !11399

lor.rhs:                                          ; preds = %lor.lhs.false12
  %type16 = bitcast %union.tree_node* %t to %struct.tree_type*, !dbg !11400
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i64 0, i32 6, !dbg !11400
  %bf.load17 = load i32, i32* %precision, align 4, !dbg !11400
  %bf.clear18 = and i32 %bf.load17, 1023, !dbg !11400
  %9 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !11401
  %precision20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 6, !dbg !11401
  %bf.load21 = load i32, i32* %precision20, align 4, !dbg !11401
  %bf.clear22 = and i32 %bf.load21, 1023, !dbg !11401
  %cmp23 = icmp ult i32 %bf.clear18, %bf.clear22, !dbg !11402
  %phitmp = zext i1 %cmp23 to i8, !dbg !11399
  br label %lor.end, !dbg !11399

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false12, %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %sw.bb
  %10 = phi i8 [ 1, %lor.lhs.false12 ], [ 1, %lor.lhs.false8 ], [ 1, %lor.lhs.false4 ], [ 1, %lor.lhs.false ], [ 1, %sw.bb ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !11403

sw.bb24:                                          ; preds = %entry
  %type25 = bitcast %union.tree_node* %t to %struct.tree_type*, !dbg !11404
  %precision26 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type25, i64 0, i32 6, !dbg !11404
  %bf.load27 = load i32, i32* %precision26, align 4, !dbg !11404
  %bf.clear28 = and i32 %bf.load27, 1023, !dbg !11404
  %11 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !11405
  %precision30 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 6, !dbg !11405
  %bf.load31 = load i32, i32* %precision30, align 4, !dbg !11405
  %bf.clear32 = and i32 %bf.load31, 1023, !dbg !11405
  %cmp33 = icmp ult i32 %bf.clear28, %bf.clear32, !dbg !11406
  %conv35 = zext i1 %cmp33 to i8, !dbg !11404
  br label %return, !dbg !11407

sw.default:                                       ; preds = %entry
  br label %return, !dbg !11408

return:                                           ; preds = %entry, %sw.default, %sw.bb24, %lor.end
  %retval.0 = phi i8 [ 0, %sw.default ], [ %conv35, %sw.bb24 ], [ %10, %lor.end ], [ 1, %entry ], !dbg !11409
  ret i8 %retval.0, !dbg !11410
}

; Function Attrs: nounwind uwtable
define dso_local i32 @self_promoting_args_p(%union.tree_node* %parms) local_unnamed_addr #5 !dbg !11411 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %parms, metadata !11415, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.value(metadata %union.tree_node* %parms, metadata !11416, metadata !DIExpression()), !dbg !11421
  br label %for.cond, !dbg !11422

for.cond:                                         ; preds = %for.inc, %entry
  %t.0 = phi %union.tree_node* [ %parms, %entry ], [ %8, %for.inc ], !dbg !11423
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !11416, metadata !DIExpression()), !dbg !11421
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !11424
  br i1 %tobool, label %cleanup17, label %for.body, !dbg !11424

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11425
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !11425
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11417, metadata !DIExpression()), !dbg !11426
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11427
  %cmp = icmp eq %union.tree_node* %1, %2, !dbg !11429
  br i1 %cmp, label %cleanup, label %if.end, !dbg !11430

if.end:                                           ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11431
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !11431
  %cmp1 = icmp eq %union.tree_node* %3, null, !dbg !11433
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11434
  %cmp2 = icmp ne %union.tree_node* %1, %4, !dbg !11435
  %or.cond = and i1 %cmp1, %cmp2, !dbg !11436
  %cmp5 = icmp eq %union.tree_node* %1, null, !dbg !11437
  %or.cond1 = or i1 %or.cond, %cmp5, !dbg !11436
  br i1 %or.cond1, label %cleanup, label %if.end7, !dbg !11436

if.end7:                                          ; preds = %if.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !11439
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !11439
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !11441
  %cmp9 = icmp eq %union.tree_node* %6, %7, !dbg !11442
  br i1 %cmp9, label %cleanup, label %if.end11, !dbg !11443

if.end11:                                         ; preds = %if.end7
  %call = tail call zeroext i8 @c_promoting_integer_type_p(%union.tree_node* %1) #8, !dbg !11444
  %tobool12 = icmp ne i8 %call, 0, !dbg !11444
  %. = zext i1 %tobool12 to i32, !dbg !11446
  br label %cleanup, !dbg !11446

cleanup:                                          ; preds = %if.end11, %if.end7, %if.end, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %for.body ], [ 1, %if.end ], [ 1, %if.end7 ], [ %., %if.end11 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup17 [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %chain16 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11447
  %8 = load %union.tree_node*, %union.tree_node** %chain16, align 8, !dbg !11447
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !11416, metadata !DIExpression()), !dbg !11421
  br label %for.cond, !dbg !11448, !llvm.loop !11449

cleanup17:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi i32 [ 0, %cleanup ], [ 1, %for.cond ]
  ret i32 %retval.2, !dbg !11451
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @strip_pointer_operator(%union.tree_node* %t) local_unnamed_addr #5 !dbg !11452 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !11454, metadata !DIExpression()), !dbg !11455
  br label %while.cond, !dbg !11456

while.cond:                                       ; preds = %while.body, %entry
  %t.addr.0 = phi %union.tree_node* [ %t, %entry ], [ %1, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !11454, metadata !DIExpression()), !dbg !11455
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11457
  %bf.load = load i64, i64* %0, align 8, !dbg !11457
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11457
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !11457
  %cmp5 = icmp eq i64 %bf.cast1, 12, !dbg !11457
  %or.cond = or i1 %cmp, %cmp5, !dbg !11457
  br i1 %or.cond, label %while.body, label %while.end, !dbg !11457

while.body:                                       ; preds = %while.cond
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11458
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11458
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11454, metadata !DIExpression()), !dbg !11455
  br label %while.cond, !dbg !11456, !llvm.loop !11459

while.end:                                        ; preds = %while.cond
  %t.addr.0.lcssa = phi %union.tree_node* [ %t.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !11454, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !11454, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !11454, metadata !DIExpression()), !dbg !11455
  ret %union.tree_node* %t.addr.0.lcssa, !dbg !11460
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @strip_pointer_or_array_types(%union.tree_node* %t) local_unnamed_addr #5 !dbg !11461 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !11463, metadata !DIExpression()), !dbg !11464
  br label %while.cond, !dbg !11465

while.cond:                                       ; preds = %while.body, %entry
  %t.addr.0 = phi %union.tree_node* [ %t, %entry ], [ %1, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !11463, metadata !DIExpression()), !dbg !11464
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11466
  %bf.load = load i64, i64* %0, align 8, !dbg !11466
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !11467
  %cmp = icmp eq i64 %bf.cast2, 15, !dbg !11467
  br i1 %cmp, label %while.body, label %lor.rhs, !dbg !11468

lor.rhs:                                          ; preds = %while.cond
  %cmp5 = icmp eq i64 %bf.cast2, 10, !dbg !11469
  %cmp11 = icmp eq i64 %bf.cast2, 12, !dbg !11469
  %or.cond = or i1 %cmp5, %cmp11, !dbg !11469
  br i1 %or.cond, label %while.body, label %while.end, !dbg !11469

while.body:                                       ; preds = %lor.rhs, %while.cond
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11470
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11470
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11463, metadata !DIExpression()), !dbg !11464
  br label %while.cond, !dbg !11465, !llvm.loop !11471

while.end:                                        ; preds = %lor.rhs
  %t.addr.0.lcssa = phi %union.tree_node* [ %t.addr.0, %lor.rhs ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !11463, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !11463, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !11463, metadata !DIExpression()), !dbg !11464
  ret %union.tree_node* %t.addr.0.lcssa, !dbg !11472
}

; Function Attrs: nounwind uwtable
define dso_local i32 @case_compare(i64 %k1, i64 %k2) local_unnamed_addr #5 !dbg !11473 {
entry:
  call void @llvm.dbg.value(metadata i64 %k1, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i64 %k2, metadata !11478, metadata !DIExpression()), !dbg !11479
  %tobool = icmp eq i64 %k1, 0, !dbg !11480
  %tobool2 = icmp ne i64 %k2, 0, !dbg !11482
  br i1 %tobool, label %if.then, label %if.else, !dbg !11483

if.then:                                          ; preds = %entry
  %cond = sext i1 %tobool2 to i32, !dbg !11484
  br label %return, !dbg !11485

if.else:                                          ; preds = %entry
  br i1 %tobool2, label %if.end6, label %if.then3, !dbg !11486

if.then3:                                         ; preds = %if.else
  br label %return, !dbg !11487

if.end6:                                          ; preds = %if.else
  %0 = inttoptr i64 %k1 to %union.tree_node*, !dbg !11489
  %1 = inttoptr i64 %k2 to %union.tree_node*, !dbg !11490
  %call = tail call i32 @tree_int_cst_compare(%union.tree_node* %0, %union.tree_node* %1) #7, !dbg !11491
  br label %return, !dbg !11492

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %retval.0 = phi i32 [ %call, %if.end6 ], [ 1, %if.then3 ], [ %cond, %if.then ], !dbg !11479
  ret i32 %retval.0, !dbg !11493
}

declare dso_local i32 @tree_int_cst_compare(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_add_case_label(i32 %loc, %struct.splay_tree_s* %cases, %union.tree_node* %cond, %union.tree_node* %orig_type, %union.tree_node* %low_value, %union.tree_node* %high_value) local_unnamed_addr #5 !dbg !11494 {
entry:
  %low_value.addr = alloca %union.tree_node*, align 8
  %high_value.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11532, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %struct.splay_tree_s* %cases, metadata !11533, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !11534, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type, metadata !11535, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %low_value, metadata !11536, metadata !DIExpression()), !dbg !11553
  store %union.tree_node* %low_value, %union.tree_node** %low_value.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %high_value, metadata !11537, metadata !DIExpression()), !dbg !11553
  store %union.tree_node* %high_value, %union.tree_node** %high_value.addr, align 8
  %call = tail call %union.tree_node* @create_artificial_label(i32 %loc) #7, !dbg !11554
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11539, metadata !DIExpression()), !dbg !11553
  %tobool = icmp eq %union.tree_node* %cond, null, !dbg !11555
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11557
  %cmp = icmp eq %union.tree_node* %0, %cond, !dbg !11558
  %or.cond = or i1 %tobool, %cmp, !dbg !11559
  br i1 %or.cond, label %error_out, label %if.end, !dbg !11559

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %low_value, metadata !11536, metadata !DIExpression()), !dbg !11553
  %tobool1 = icmp eq %union.tree_node* %low_value, null, !dbg !11560
  br i1 %tobool1, label %lor.lhs.false16, label %land.lhs.true, !dbg !11562

land.lhs.true:                                    ; preds = %if.end
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %low_value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11563
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !11563
  %tobool3 = icmp eq %union.tree_node* %1, null, !dbg !11563
  br i1 %tobool3, label %lor.lhs.false16, label %land.lhs.true4, !dbg !11564

land.lhs.true4:                                   ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11564
  %bf.load = load i64, i64* %2, align 8, !dbg !11565
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !11565
  %cmp7 = icmp eq i64 %bf.cast6, 10, !dbg !11565
  br i1 %cmp7, label %if.then38, label %lor.lhs.false8, !dbg !11565

lor.lhs.false8:                                   ; preds = %land.lhs.true4
  %cmp15 = icmp eq i64 %bf.cast6, 12, !dbg !11565
  br i1 %cmp15, label %if.then38, label %lor.lhs.false16, !dbg !11566

lor.lhs.false16:                                  ; preds = %land.lhs.true, %if.end, %lor.lhs.false8
  call void @llvm.dbg.value(metadata %union.tree_node* %high_value, metadata !11537, metadata !DIExpression()), !dbg !11553
  %tobool17 = icmp eq %union.tree_node* %high_value, null, !dbg !11567
  br i1 %tobool17, label %if.end39, label %land.lhs.true18, !dbg !11568

land.lhs.true18:                                  ; preds = %lor.lhs.false16
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %high_value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11569
  %3 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !11569
  %tobool21 = icmp eq %union.tree_node* %3, null, !dbg !11569
  br i1 %tobool21, label %if.end39, label %land.lhs.true22, !dbg !11570

land.lhs.true22:                                  ; preds = %land.lhs.true18
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11570
  %bf.load26 = load i64, i64* %4, align 8, !dbg !11571
  %bf.cast284 = and i64 %bf.load26, 65535, !dbg !11571
  %cmp29 = icmp eq i64 %bf.cast284, 10, !dbg !11571
  br i1 %cmp29, label %if.then38, label %lor.lhs.false30, !dbg !11571

lor.lhs.false30:                                  ; preds = %land.lhs.true22
  %cmp37 = icmp eq i64 %bf.cast284, 12, !dbg !11571
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !11572

if.then38:                                        ; preds = %lor.lhs.false30, %land.lhs.true22, %lor.lhs.false8, %land.lhs.true4
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.318, i64 0, i64 0)) #7, !dbg !11573
  br label %error_out, !dbg !11575

if.end39:                                         ; preds = %land.lhs.true18, %lor.lhs.false16, %lor.lhs.false30
  call void @llvm.dbg.value(metadata %union.tree_node* %high_value, metadata !11537, metadata !DIExpression()), !dbg !11553
  br i1 %tobool17, label %if.end43, label %if.then41, !dbg !11576

if.then41:                                        ; preds = %if.end39
  %call42 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.319, i64 0, i64 0)) #7, !dbg !11577
  br label %if.end43, !dbg !11577

if.end43:                                         ; preds = %if.end39, %if.then41
  %type45 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11579
  %5 = load %union.tree_node*, %union.tree_node** %type45, align 8, !dbg !11579
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11538, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %low_value, metadata !11536, metadata !DIExpression()), !dbg !11553
  br i1 %tobool1, label %if.end53, label %if.then47, !dbg !11580

if.then47:                                        ; preds = %if.end43
  call void @llvm.dbg.value(metadata %union.tree_node* %low_value, metadata !11536, metadata !DIExpression()), !dbg !11553
  %call48 = tail call fastcc %union.tree_node* @check_case_value(%union.tree_node* nonnull %low_value) #8, !dbg !11581
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !11536, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !11536, metadata !DIExpression()), !dbg !11553
  %call49 = tail call %union.tree_node* @convert_and_check(%union.tree_node* %5, %union.tree_node* %call48) #8, !dbg !11584
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !11536, metadata !DIExpression()), !dbg !11553
  store %union.tree_node* %call49, %union.tree_node** %low_value.addr, align 8, !dbg !11585
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !11536, metadata !DIExpression()), !dbg !11553
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11586
  %cmp50 = icmp eq %union.tree_node* %call49, %6, !dbg !11588
  br i1 %cmp50, label %error_out, label %if.end53, !dbg !11589

if.end53:                                         ; preds = %if.end43, %if.then47
  %.in = phi %union.tree_node* [ %low_value, %if.end43 ], [ %call49, %if.then47 ]
  %7 = phi %union.tree_node* [ null, %if.end43 ], [ %call49, %if.then47 ]
  %8 = ptrtoint %union.tree_node* %.in to i64, !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %high_value, metadata !11537, metadata !DIExpression()), !dbg !11553
  br i1 %tobool17, label %if.end61, label %if.then55, !dbg !11590

if.then55:                                        ; preds = %if.end53
  call void @llvm.dbg.value(metadata %union.tree_node* %high_value, metadata !11537, metadata !DIExpression()), !dbg !11553
  %call56 = tail call fastcc %union.tree_node* @check_case_value(%union.tree_node* nonnull %high_value) #8, !dbg !11591
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !11537, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !11537, metadata !DIExpression()), !dbg !11553
  %call57 = tail call %union.tree_node* @convert_and_check(%union.tree_node* %5, %union.tree_node* %call56) #8, !dbg !11594
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !11537, metadata !DIExpression()), !dbg !11553
  store %union.tree_node* %call57, %union.tree_node** %high_value.addr, align 8, !dbg !11595
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !11537, metadata !DIExpression()), !dbg !11553
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11596
  %cmp58 = icmp eq %union.tree_node* %call57, %9, !dbg !11598
  br i1 %cmp58, label %error_out, label %if.end61, !dbg !11599

if.end61:                                         ; preds = %if.end53, %if.then55
  %10 = phi %union.tree_node* [ null, %if.end53 ], [ %call57, %if.then55 ], !dbg !11600
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11536, metadata !DIExpression()), !dbg !11553
  %tobool62 = icmp ne %union.tree_node* %7, null, !dbg !11602
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !11537, metadata !DIExpression()), !dbg !11553
  %tobool64 = icmp ne %union.tree_node* %10, null, !dbg !11600
  %or.cond1 = and i1 %tobool62, %tobool64, !dbg !11603
  br i1 %or.cond1, label %if.then65, label %if.end75, !dbg !11603

if.then65:                                        ; preds = %if.end61
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11536, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !11537, metadata !DIExpression()), !dbg !11553
  %call66 = tail call i32 @tree_int_cst_equal(%union.tree_node* nonnull %7, %union.tree_node* nonnull %10) #7, !dbg !11604
  %tobool67 = icmp eq i32 %call66, 0, !dbg !11604
  br i1 %tobool67, label %if.else, label %if.then68, !dbg !11607

if.then68:                                        ; preds = %if.then65
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11537, metadata !DIExpression()), !dbg !11553
  store %union.tree_node* null, %union.tree_node** %high_value.addr, align 8, !dbg !11608
  br label %if.end75, !dbg !11609

if.else:                                          ; preds = %if.then65
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11536, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !11537, metadata !DIExpression()), !dbg !11553
  %call69 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %7, %union.tree_node* nonnull %10) #7, !dbg !11610
  %tobool70 = icmp eq i32 %call69, 0, !dbg !11610
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !11612

if.then71:                                        ; preds = %if.else
  %call72 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.320, i64 0, i64 0)) #7, !dbg !11613
  br label %if.end75, !dbg !11613

if.end75:                                         ; preds = %if.else, %if.then68, %if.then71, %if.end61
  %11 = phi %union.tree_node* [ %10, %if.else ], [ null, %if.then68 ], [ %10, %if.then71 ], [ %10, %if.end61 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11536, metadata !DIExpression()), !dbg !11553
  %tobool76 = icmp eq %union.tree_node* %7, null, !dbg !11614
  br i1 %tobool76, label %if.end75.if.end83_crit_edge, label %land.lhs.true77, !dbg !11616

if.end75.if.end83_crit_edge:                      ; preds = %if.end75
  %.pre8 = bitcast %union.tree_node** %low_value.addr to i64*, !dbg !11617
  br label %if.end83, !dbg !11616

land.lhs.true77:                                  ; preds = %if.end75
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !11537, metadata !DIExpression()), !dbg !11553
  %tobool78 = icmp eq %union.tree_node* %11, null, !dbg !11618
  %high_value.addr. = select i1 %tobool78, %union.tree_node** null, %union.tree_node** %high_value.addr, !dbg !11618
  call void @llvm.dbg.value(metadata %union.tree_node** %low_value.addr, metadata !11536, metadata !DIExpression(DW_OP_deref)), !dbg !11553
  %call80 = call fastcc zeroext i8 @check_case_bounds(%union.tree_node* %5, %union.tree_node* %orig_type, %union.tree_node** nonnull %low_value.addr, %union.tree_node** %high_value.addr.) #8, !dbg !11619
  %tobool81 = icmp eq i8 %call80, 0, !dbg !11619
  br i1 %tobool81, label %cleanup, label %land.lhs.true77.if.end83_crit_edge, !dbg !11620

land.lhs.true77.if.end83_crit_edge:               ; preds = %land.lhs.true77
  %.phi.trans.insert = bitcast %union.tree_node** %low_value.addr to i64*, !dbg !11553
  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !11617
  br label %if.end83, !dbg !11620

if.end83:                                         ; preds = %if.end75.if.end83_crit_edge, %land.lhs.true77.if.end83_crit_edge
  %.pre-phi = phi i64* [ %.pre8, %if.end75.if.end83_crit_edge ], [ %.phi.trans.insert, %land.lhs.true77.if.end83_crit_edge ], !dbg !11617
  %12 = phi i64 [ %8, %if.end75.if.end83_crit_edge ], [ %.pre, %land.lhs.true77.if.end83_crit_edge ], !dbg !11617
  %call84 = call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %cases, i64 %12) #7, !dbg !11621
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call84, metadata !11541, metadata !DIExpression()), !dbg !11553
  %tobool85 = icmp eq %struct.splay_tree_node_s* %call84, null, !dbg !11622
  br i1 %tobool85, label %land.lhs.true86, label %if.end114, !dbg !11623

land.lhs.true86:                                  ; preds = %if.end83
  %13 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8, !dbg !11624
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !11536, metadata !DIExpression()), !dbg !11553
  %tobool87 = icmp ne %union.tree_node* %13, null, !dbg !11624
  %14 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8, !dbg !11625
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !11537, metadata !DIExpression()), !dbg !11553
  %tobool89 = icmp ne %union.tree_node* %14, null, !dbg !11625
  %or.cond2 = or i1 %tobool87, %tobool89, !dbg !11626
  br i1 %or.cond2, label %if.then90, label %if.end114, !dbg !11626

if.then90:                                        ; preds = %land.lhs.true86
  %15 = ptrtoint %union.tree_node* %13 to i64, !dbg !11626
  %call91 = call %struct.splay_tree_node_s* @splay_tree_predecessor(%struct.splay_tree_s* %cases, i64 %15) #7, !dbg !11627
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call91, metadata !11542, metadata !DIExpression()), !dbg !11628
  %16 = load i64, i64* %.pre-phi, align 8, !dbg !11629
  %call92 = call %struct.splay_tree_node_s* @splay_tree_successor(%struct.splay_tree_s* %cases, i64 %16) #7, !dbg !11630
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call92, metadata !11545, metadata !DIExpression()), !dbg !11628
  %tobool93 = icmp eq %struct.splay_tree_node_s* %call91, null, !dbg !11631
  br i1 %tobool93, label %if.else104, label %land.lhs.true94, !dbg !11633

land.lhs.true94:                                  ; preds = %if.then90
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call91, i64 0, i32 1, !dbg !11634
  %17 = bitcast i64* %value to %struct.tree_exp**, !dbg !11634
  %18 = load %struct.tree_exp*, %struct.tree_exp** %17, align 8, !dbg !11634
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %18, i64 0, i32 3, i64 1, !dbg !11634
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11634
  %tobool95 = icmp eq %union.tree_node* %19, null, !dbg !11634
  br i1 %tobool95, label %if.else104, label %land.lhs.true96, !dbg !11635

land.lhs.true96:                                  ; preds = %land.lhs.true94
  %20 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8, !dbg !11636
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !11536, metadata !DIExpression()), !dbg !11553
  %call101 = call i32 @tree_int_cst_compare(%union.tree_node* nonnull %19, %union.tree_node* %20) #7, !dbg !11637
  %cmp102 = icmp sgt i32 %call101, -1, !dbg !11638
  br i1 %cmp102, label %if.end114, label %if.else104, !dbg !11639

if.else104:                                       ; preds = %land.lhs.true94, %if.then90, %land.lhs.true96
  %tobool105 = icmp ne %struct.splay_tree_node_s* %call92, null, !dbg !11640
  %21 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8, !dbg !11642
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !11537, metadata !DIExpression()), !dbg !11553
  %tobool107 = icmp ne %union.tree_node* %21, null, !dbg !11642
  %or.cond3 = and i1 %tobool105, %tobool107, !dbg !11643
  br i1 %or.cond3, label %land.lhs.true108, label %if.end114, !dbg !11643

land.lhs.true108:                                 ; preds = %if.else104
  %22 = bitcast %struct.splay_tree_node_s* %call92 to %union.tree_node**, !dbg !11644
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !11644
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !11537, metadata !DIExpression()), !dbg !11553
  %call109 = call i32 @tree_int_cst_compare(%union.tree_node* %23, %union.tree_node* nonnull %21) #7, !dbg !11645
  %cmp110 = icmp slt i32 %call109, 1, !dbg !11646
  %spec.select = select i1 %cmp110, %struct.splay_tree_node_s* %call92, %struct.splay_tree_node_s* null, !dbg !11647
  br label %if.end114, !dbg !11647

if.end114:                                        ; preds = %if.end83, %land.lhs.true108, %land.lhs.true96, %if.else104, %land.lhs.true86
  %node.2 = phi %struct.splay_tree_node_s* [ %call84, %if.end83 ], [ null, %land.lhs.true86 ], [ %call91, %land.lhs.true96 ], [ null, %if.else104 ], [ %spec.select, %land.lhs.true108 ], !dbg !11553
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %node.2, metadata !11541, metadata !DIExpression()), !dbg !11553
  %tobool115 = icmp eq %struct.splay_tree_node_s* %node.2, null, !dbg !11648
  br i1 %tobool115, label %if.end133, label %if.then116, !dbg !11649

if.then116:                                       ; preds = %if.end114
  %value117 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %node.2, i64 0, i32 1, !dbg !11650
  %24 = bitcast i64* %value117 to %struct.tree_exp**, !dbg !11650
  %25 = load %struct.tree_exp*, %struct.tree_exp** %24, align 8, !dbg !11650
  %arrayidx120 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %25, i64 0, i32 3, i64 2, !dbg !11650
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx120, align 8, !dbg !11650
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !11546, metadata !DIExpression()), !dbg !11651
  %27 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8, !dbg !11652
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !11537, metadata !DIExpression()), !dbg !11553
  %tobool121 = icmp eq %union.tree_node* %27, null, !dbg !11652
  br i1 %tobool121, label %if.else123, label %if.then122, !dbg !11654

if.then122:                                       ; preds = %if.then116
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.321, i64 0, i64 0)) #7, !dbg !11655
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11657
  %28 = load i32, i32* %locus, align 8, !dbg !11657
  call void (i32, i8*, ...) @error_at(i32 %28, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.322, i64 0, i64 0)) #7, !dbg !11658
  br label %error_out, !dbg !11659

if.else123:                                       ; preds = %if.then116
  %29 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8, !dbg !11660
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !11536, metadata !DIExpression()), !dbg !11553
  %tobool124 = icmp eq %union.tree_node* %29, null, !dbg !11660
  br i1 %tobool124, label %if.else128, label %if.then125, !dbg !11662

if.then125:                                       ; preds = %if.else123
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.323, i64 0, i64 0)) #7, !dbg !11663
  %locus127 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11665
  %30 = load i32, i32* %locus127, align 8, !dbg !11665
  call void (i32, i8*, ...) @error_at(i32 %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.324, i64 0, i64 0)) #7, !dbg !11666
  br label %error_out, !dbg !11667

if.else128:                                       ; preds = %if.else123
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.325, i64 0, i64 0)) #7, !dbg !11668
  %locus130 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11670
  %31 = load i32, i32* %locus130, align 8, !dbg !11670
  call void (i32, i8*, ...) @error_at(i32 %31, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.326, i64 0, i64 0)) #7, !dbg !11671
  br label %error_out

if.end133:                                        ; preds = %if.end114
  %32 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8, !dbg !11672
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !11536, metadata !DIExpression()), !dbg !11553
  %33 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8, !dbg !11673
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !11537, metadata !DIExpression()), !dbg !11553
  %call134 = call %union.tree_node* @build_case_label(i32 %loc, %union.tree_node* %32, %union.tree_node* %33, %union.tree_node* %call) #7, !dbg !11674
  %call135 = call %union.tree_node* @add_stmt(%union.tree_node* %call134) #7, !dbg !11675
  call void @llvm.dbg.value(metadata %union.tree_node* %call135, metadata !11540, metadata !DIExpression()), !dbg !11553
  %34 = load i64, i64* %.pre-phi, align 8, !dbg !11676
  %35 = ptrtoint %union.tree_node* %call135 to i64, !dbg !11677
  %call136 = call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %cases, i64 %34, i64 %35) #7, !dbg !11678
  br label %cleanup, !dbg !11679

error_out:                                        ; preds = %if.then122, %if.else128, %if.then125, %if.then55, %if.then47, %entry, %if.then38
  call void @llvm.dbg.label(metadata !11552), !dbg !11680
  %root = getelementptr inbounds %struct.splay_tree_s, %struct.splay_tree_s* %cases, i64 0, i32 0, !dbg !11681
  %36 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %root, align 8, !dbg !11681
  %tobool137 = icmp eq %struct.splay_tree_node_s* %36, null, !dbg !11682
  br i1 %tobool137, label %if.then138, label %if.end142, !dbg !11683

if.then138:                                       ; preds = %error_out
  %call139 = call %union.tree_node* @create_artificial_label(i32 %loc) #7, !dbg !11684
  call void @llvm.dbg.value(metadata %union.tree_node* %call139, metadata !11549, metadata !DIExpression()), !dbg !11685
  %call140 = call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %loc, i32 133, %union.tree_node* %call139) #7, !dbg !11686
  %call141 = call %union.tree_node* @add_stmt(%union.tree_node* %call140) #7, !dbg !11687
  br label %if.end142, !dbg !11688

if.end142:                                        ; preds = %error_out, %if.then138
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11689
  br label %cleanup, !dbg !11690

cleanup:                                          ; preds = %land.lhs.true77, %if.end142, %if.end133
  %retval.0 = phi %union.tree_node* [ %37, %if.end142 ], [ %call135, %if.end133 ], [ null, %land.lhs.true77 ]
  ret %union.tree_node* %retval.0, !dbg !11691
}

declare dso_local %union.tree_node* @create_artificial_label(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @check_case_value(%union.tree_node* %value) unnamed_addr #5 !dbg !11692 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !11694, metadata !DIExpression()), !dbg !11695
  %cmp = icmp eq %union.tree_node* %value, null, !dbg !11696
  br i1 %cmp, label %return, label %while.cond.preheader, !dbg !11698

while.cond.preheader:                             ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11695
  br label %while.cond, !dbg !11699

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %value.addr.0 = phi %union.tree_node* [ %4, %while.body ], [ %value, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0, metadata !11694, metadata !DIExpression()), !dbg !11695
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11699
  %bf.load = load i64, i64* %1, align 8, !dbg !11699
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !11699
  %cmp1 = icmp eq i64 %bf.cast3, 116, !dbg !11699
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !11699

lor.lhs.false:                                    ; preds = %while.cond
  %2 = or i64 %bf.cast3, 4, !dbg !11699
  %3 = icmp eq i64 %2, 117, !dbg !11699
  br i1 %3, label %land.lhs.true, label %while.end, !dbg !11699

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11699
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !11699
  %cmp13 = icmp eq %union.tree_node* %4, %0, !dbg !11699
  br i1 %cmp13, label %while.end, label %land.rhs, !dbg !11699

land.rhs:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11699
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11699
  %type18 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11699
  %6 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !11699
  %cmp19 = icmp eq %union.tree_node* %5, %6, !dbg !11699
  br i1 %cmp19, label %while.body, label %while.end, !dbg !11699

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11694, metadata !DIExpression()), !dbg !11695
  br label %while.cond, !dbg !11699, !llvm.loop !11700

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true, %land.rhs
  %value.addr.0.lcssa = phi %union.tree_node* [ %value.addr.0, %lor.lhs.false ], [ %value.addr.0, %land.lhs.true ], [ %value.addr.0, %land.rhs ]
  %bf.load.lcssa = phi i64 [ %bf.load, %lor.lhs.false ], [ %bf.load, %land.lhs.true ], [ %bf.load, %land.rhs ], !dbg !11699
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  %7 = load i32, i32* @c_language, align 4, !dbg !11701
  %and = and i32 %7, 2, !dbg !11701
  %cmp23 = icmp eq i32 %and, 0, !dbg !11701
  br i1 %cmp23, label %if.end64, label %if.then24, !dbg !11703

if.then24:                                        ; preds = %while.end
  %call = tail call %union.tree_node* @decl_constant_value(%union.tree_node* %value.addr.0.lcssa) #7, !dbg !11704
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11694, metadata !DIExpression()), !dbg !11695
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11706
  br label %while.cond25, !dbg !11707

while.cond25:                                     ; preds = %while.body58, %if.then24
  %value.addr.1 = phi %union.tree_node* [ %call, %if.then24 ], [ %12, %while.body58 ], !dbg !11706
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1, metadata !11694, metadata !DIExpression()), !dbg !11695
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11707
  %bf.load27 = load i64, i64* %9, align 8, !dbg !11707
  %bf.cast297 = and i64 %bf.load27, 65535, !dbg !11707
  %cmp30 = icmp eq i64 %bf.cast297, 116, !dbg !11707
  br i1 %cmp30, label %land.lhs.true43, label %lor.lhs.false31, !dbg !11707

lor.lhs.false31:                                  ; preds = %while.cond25
  %10 = or i64 %bf.cast297, 4, !dbg !11707
  %11 = icmp eq i64 %10, 117, !dbg !11707
  br i1 %11, label %land.lhs.true43, label %while.end62, !dbg !11707

land.lhs.true43:                                  ; preds = %lor.lhs.false31, %while.cond25
  %operands45 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11707
  %12 = load %union.tree_node*, %union.tree_node** %operands45, align 8, !dbg !11707
  %cmp47 = icmp eq %union.tree_node* %12, %8, !dbg !11707
  br i1 %cmp47, label %while.end62, label %land.rhs48, !dbg !11707

land.rhs48:                                       ; preds = %land.lhs.true43
  %type50 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11707
  %13 = load %union.tree_node*, %union.tree_node** %type50, align 8, !dbg !11707
  %type55 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11707
  %14 = load %union.tree_node*, %union.tree_node** %type55, align 8, !dbg !11707
  %cmp56 = icmp eq %union.tree_node* %13, %14, !dbg !11707
  br i1 %cmp56, label %while.body58, label %while.end62, !dbg !11707

while.body58:                                     ; preds = %land.rhs48
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !11694, metadata !DIExpression()), !dbg !11695
  br label %while.cond25, !dbg !11707, !llvm.loop !11708

while.end62:                                      ; preds = %lor.lhs.false31, %land.lhs.true43, %land.rhs48
  %value.addr.1.lcssa = phi %union.tree_node* [ %value.addr.1, %lor.lhs.false31 ], [ %value.addr.1, %land.lhs.true43 ], [ %value.addr.1, %land.rhs48 ], !dbg !11706
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1.lcssa, metadata !11694, metadata !DIExpression()), !dbg !11695
  %call63 = tail call %union.tree_node* @fold(%union.tree_node* %value.addr.1.lcssa) #7, !dbg !11709
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !11694, metadata !DIExpression()), !dbg !11695
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11710
  %bf.load66.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !11712
  br label %if.end64, !dbg !11713

if.end64:                                         ; preds = %while.end, %while.end62
  %bf.load66 = phi i64 [ %bf.load66.pre, %while.end62 ], [ %bf.load.lcssa, %while.end ], !dbg !11712
  %value.addr.2 = phi %union.tree_node* [ %call63, %while.end62 ], [ %value.addr.0.lcssa, %while.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.2, metadata !11694, metadata !DIExpression()), !dbg !11695
  %bf.cast686 = and i64 %bf.load66, 65535, !dbg !11714
  %cmp69 = icmp eq i64 %bf.cast686, 23, !dbg !11714
  br i1 %cmp69, label %if.then70, label %if.else, !dbg !11715

if.then70:                                        ; preds = %if.end64
  %call71 = tail call %union.tree_node* @perform_integral_promotions(%union.tree_node* %value.addr.2) #7, !dbg !11716
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !11694, metadata !DIExpression()), !dbg !11695
  br label %if.end75, !dbg !11717

if.else:                                          ; preds = %if.end64
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11718
  %cmp72 = icmp eq %union.tree_node* %value.addr.2, %15, !dbg !11720
  br i1 %cmp72, label %if.end75, label %if.then73, !dbg !11721

if.then73:                                        ; preds = %if.else
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1126, i64 0, i64 0)) #7, !dbg !11722
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11724
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !11694, metadata !DIExpression()), !dbg !11695
  br label %if.end75, !dbg !11725

if.end75:                                         ; preds = %if.else, %if.then73, %if.then70
  %value.addr.4 = phi %union.tree_node* [ %call71, %if.then70 ], [ %16, %if.then73 ], [ %value.addr.2, %if.else ], !dbg !11710
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.4, metadata !11694, metadata !DIExpression()), !dbg !11695
  tail call void @constant_expression_warning(%union.tree_node* %value.addr.4) #8, !dbg !11726
  br label %return, !dbg !11727

return:                                           ; preds = %entry, %if.end75
  %retval.0 = phi %union.tree_node* [ %value.addr.4, %if.end75 ], [ null, %entry ], !dbg !11695
  ret %union.tree_node* %retval.0, !dbg !11728
}

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @check_case_bounds(%union.tree_node* %type, %union.tree_node* %orig_type, %union.tree_node** %case_low_p, %union.tree_node** %case_high_p) unnamed_addr #5 !dbg !11729 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !11733, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type, metadata !11734, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %union.tree_node** %case_low_p, metadata !11735, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %union.tree_node** %case_high_p, metadata !11736, metadata !DIExpression()), !dbg !11741
  %0 = load %union.tree_node*, %union.tree_node** %case_low_p, align 8, !dbg !11742
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11739, metadata !DIExpression()), !dbg !11741
  %tobool = icmp eq %union.tree_node** %case_high_p, null, !dbg !11743
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11743

cond.true:                                        ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %case_high_p, align 8, !dbg !11744
  br label %cond.end, !dbg !11743

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ %0, %entry ], !dbg !11743
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !11740, metadata !DIExpression()), !dbg !11741
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11745
  %cmp = icmp eq %union.tree_node* %2, %orig_type, !dbg !11747
  br i1 %cmp, label %cleanup, label %if.end, !dbg !11748

if.end:                                           ; preds = %cond.end
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !11749
  %3 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !11749
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !11749
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11737, metadata !DIExpression()), !dbg !11741
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11750
  %5 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !11750
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !11750
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !11738, metadata !DIExpression()), !dbg !11741
  %call = tail call i32 @tree_int_cst_compare(%union.tree_node* %0, %union.tree_node* %4) #7, !dbg !11751
  %cmp3 = icmp slt i32 %call, 0, !dbg !11753
  br i1 %cmp3, label %land.lhs.true, label %if.end8, !dbg !11754

land.lhs.true:                                    ; preds = %if.end
  %call4 = tail call i32 @tree_int_cst_compare(%union.tree_node* %cond, %union.tree_node* %4) #7, !dbg !11755
  %cmp5 = icmp slt i32 %call4, 0, !dbg !11756
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !11757

if.then6:                                         ; preds = %land.lhs.true
  %call7 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1127, i64 0, i64 0)) #7, !dbg !11758
  br label %cleanup, !dbg !11760

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %call9 = tail call i32 @tree_int_cst_compare(%union.tree_node* %0, %union.tree_node* %6) #7, !dbg !11761
  %cmp10 = icmp sgt i32 %call9, 0, !dbg !11763
  br i1 %cmp10, label %land.lhs.true11, label %if.end16, !dbg !11764

land.lhs.true11:                                  ; preds = %if.end8
  %call12 = tail call i32 @tree_int_cst_compare(%union.tree_node* %cond, %union.tree_node* %6) #7, !dbg !11765
  %cmp13 = icmp sgt i32 %call12, 0, !dbg !11766
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !11767

if.then14:                                        ; preds = %land.lhs.true11
  %call15 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1128, i64 0, i64 0)) #7, !dbg !11768
  br label %cleanup, !dbg !11770

if.end16:                                         ; preds = %land.lhs.true11, %if.end8
  %call17 = tail call i32 @tree_int_cst_compare(%union.tree_node* %cond, %union.tree_node* %4) #7, !dbg !11771
  %cmp18 = icmp sgt i32 %call17, -1, !dbg !11773
  br i1 %cmp18, label %land.lhs.true19, label %if.end24, !dbg !11774

land.lhs.true19:                                  ; preds = %if.end16
  %call20 = tail call i32 @tree_int_cst_compare(%union.tree_node* %0, %union.tree_node* %4) #7, !dbg !11775
  %cmp21 = icmp slt i32 %call20, 0, !dbg !11776
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !11777

if.then22:                                        ; preds = %land.lhs.true19
  %call23 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1129, i64 0, i64 0)) #7, !dbg !11778
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11739, metadata !DIExpression()), !dbg !11741
  br label %if.end24, !dbg !11780

if.end24:                                         ; preds = %if.then22, %land.lhs.true19, %if.end16
  %case_low.0 = phi %union.tree_node* [ %4, %if.then22 ], [ %0, %land.lhs.true19 ], [ %0, %if.end16 ], !dbg !11741
  call void @llvm.dbg.value(metadata %union.tree_node* %case_low.0, metadata !11739, metadata !DIExpression()), !dbg !11741
  %call25 = tail call i32 @tree_int_cst_compare(%union.tree_node* %case_low.0, %union.tree_node* %6) #7, !dbg !11781
  %cmp26 = icmp slt i32 %call25, 1, !dbg !11783
  br i1 %cmp26, label %land.lhs.true27, label %if.end32, !dbg !11784

land.lhs.true27:                                  ; preds = %if.end24
  %call28 = tail call i32 @tree_int_cst_compare(%union.tree_node* %cond, %union.tree_node* %6) #7, !dbg !11785
  %cmp29 = icmp sgt i32 %call28, 0, !dbg !11786
  br i1 %cmp29, label %if.then30, label %if.end32, !dbg !11787

if.then30:                                        ; preds = %land.lhs.true27
  %call31 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1130, i64 0, i64 0)) #7, !dbg !11788
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !11740, metadata !DIExpression()), !dbg !11741
  br label %if.end32, !dbg !11790

if.end32:                                         ; preds = %if.then30, %land.lhs.true27, %if.end24
  %case_high.0 = phi %union.tree_node* [ %6, %if.then30 ], [ %cond, %land.lhs.true27 ], [ %cond, %if.end24 ], !dbg !11741
  call void @llvm.dbg.value(metadata %union.tree_node* %case_high.0, metadata !11740, metadata !DIExpression()), !dbg !11741
  %7 = load %union.tree_node*, %union.tree_node** %case_low_p, align 8, !dbg !11791
  %cmp33 = icmp eq %union.tree_node* %7, %case_low.0, !dbg !11793
  br i1 %cmp33, label %if.end36, label %if.then34, !dbg !11794

if.then34:                                        ; preds = %if.end32
  %call35 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %case_low.0) #7, !dbg !11795
  store %union.tree_node* %call35, %union.tree_node** %case_low_p, align 8, !dbg !11796
  br label %if.end36, !dbg !11797

if.end36:                                         ; preds = %if.end32, %if.then34
  br i1 %tobool, label %cleanup, label %land.lhs.true38, !dbg !11798

land.lhs.true38:                                  ; preds = %if.end36
  %8 = load %union.tree_node*, %union.tree_node** %case_high_p, align 8, !dbg !11800
  %cmp39 = icmp eq %union.tree_node* %8, %case_high.0, !dbg !11801
  br i1 %cmp39, label %cleanup, label %if.then40, !dbg !11802

if.then40:                                        ; preds = %land.lhs.true38
  %call41 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %case_high.0) #7, !dbg !11803
  store %union.tree_node* %call41, %union.tree_node** %case_high_p, align 8, !dbg !11804
  br label %cleanup, !dbg !11805

cleanup:                                          ; preds = %land.lhs.true38, %if.end36, %if.then40, %cond.end, %if.then14, %if.then6
  %retval.0 = phi i8 [ 0, %if.then6 ], [ 0, %if.then14 ], [ 1, %cond.end ], [ 1, %if.then40 ], [ 1, %land.lhs.true38 ], [ 1, %if.end36 ], !dbg !11741
  ret i8 %retval.0, !dbg !11806
}

declare dso_local %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s*, i64) local_unnamed_addr #2

declare dso_local %struct.splay_tree_node_s* @splay_tree_predecessor(%struct.splay_tree_s*, i64) local_unnamed_addr #2

declare dso_local %struct.splay_tree_node_s* @splay_tree_successor(%struct.splay_tree_s*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @add_stmt(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_case_label(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s*, i64, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_stmt(i32, i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_do_switch_warnings(%struct.splay_tree_s* %cases, i32 %switch_location, %union.tree_node* %type, %union.tree_node* %cond) local_unnamed_addr #5 !dbg !11807 {
entry:
  call void @llvm.dbg.value(metadata %struct.splay_tree_s* %cases, metadata !11811, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata i32 %switch_location, metadata !11812, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !11813, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !11814, metadata !DIExpression()), !dbg !11829
  %0 = load i32, i32* @warn_switch, align 4, !dbg !11830
  %1 = load i32, i32* @warn_switch_enum, align 4, !dbg !11832
  %2 = or i32 %0, %1, !dbg !11833
  %3 = load i32, i32* @warn_switch_default, align 4, !dbg !11834
  %4 = or i32 %2, %3, !dbg !11833
  %5 = icmp eq i32 %4, 0, !dbg !11833
  br i1 %5, label %cleanup.cont86, label %if.end, !dbg !11833

if.end:                                           ; preds = %entry
  %call = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %cases, i64 0) #7, !dbg !11835
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call, metadata !11815, metadata !DIExpression()), !dbg !11829
  %tobool4 = icmp eq %struct.splay_tree_node_s* %call, null, !dbg !11836
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !11838

if.then5:                                         ; preds = %if.end
  %call6 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %switch_location, i32 194, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.327, i64 0, i64 0)) #7, !dbg !11839
  br label %if.end7, !dbg !11839

if.end7:                                          ; preds = %if.end, %if.then5
  %tobool8 = icmp eq %union.tree_node* %type, null, !dbg !11840
  br i1 %tobool8, label %cleanup.cont86, label %lor.lhs.false, !dbg !11842

lor.lhs.false:                                    ; preds = %if.end7
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11843
  %bf.load = load i64, i64* %6, align 8, !dbg !11843
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !11844
  %cmp = icmp eq i64 %bf.cast4, 6, !dbg !11844
  br i1 %cmp, label %if.end10, label %cleanup.cont86, !dbg !11845

if.end10:                                         ; preds = %lor.lhs.false
  %7 = load i32, i32* @warn_switch_enum, align 4, !dbg !11846
  %8 = load i32, i32* @warn_switch, align 4, !dbg !11848
  %9 = or i32 %7, %8, !dbg !11849
  %10 = icmp eq i32 %9, 0, !dbg !11849
  br i1 %10, label %cleanup.cont86, label %if.end15, !dbg !11849

if.end15:                                         ; preds = %if.end10
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11850
  %bf.load17 = load i64, i64* %11, align 8, !dbg !11850
  %bf.cast195 = and i64 %bf.load17, 65535, !dbg !11852
  %cmp20 = icmp ne i64 %bf.cast195, 23, !dbg !11852
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11853
  %12 = bitcast i32* %values to %union.tree_node**, !dbg !11853
  %tobool667 = icmp eq %union.tree_node* %cond, null, !dbg !11854
  %tobool66 = or i1 %tobool667, %cmp20, !dbg !11854
  br i1 %tobool66, label %if.end15.split.us, label %if.end15.if.end15.split_crit_edge, !dbg !11856

if.end15.if.end15.split_crit_edge:                ; preds = %if.end15
  br label %for.cond, !dbg !11856

if.end15.split.us:                                ; preds = %if.end15
  br label %for.cond.us, !dbg !11856

for.cond.us:                                      ; preds = %cleanup77.us, %if.end15.split.us
  %chain.0.in.us = phi %union.tree_node** [ %12, %if.end15.split.us ], [ %chain80.us, %cleanup77.us ]
  %chain.0.us = load %union.tree_node*, %union.tree_node** %chain.0.in.us, align 8, !dbg !11857
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.0.us, metadata !11817, metadata !DIExpression()), !dbg !11829
  %tobool24.us = icmp eq %union.tree_node* %chain.0.us, null, !dbg !11858
  br i1 %tobool24.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !11858

for.body.us:                                      ; preds = %for.cond.us
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11859
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !11859
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !11818, metadata !DIExpression()), !dbg !11860
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11861
  %bf.load27.us = load i64, i64* %15, align 8, !dbg !11861
  %bf.cast296.us = and i64 %bf.load27.us, 65535, !dbg !11863
  %cmp30.us = icmp eq i64 %bf.cast296.us, 33, !dbg !11863
  br i1 %cmp30.us, label %if.then31.us, label %if.end32.us, !dbg !11864

if.then31.us:                                     ; preds = %for.body.us
  %initial.us = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11865
  %16 = load %union.tree_node*, %union.tree_node** %initial.us, align 8, !dbg !11865
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !11818, metadata !DIExpression()), !dbg !11860
  br label %if.end32.us, !dbg !11866

if.end32.us:                                      ; preds = %if.then31.us, %for.body.us
  %value.0.us = phi %union.tree_node* [ %16, %if.then31.us ], [ %14, %for.body.us ], !dbg !11860
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.us, metadata !11818, metadata !DIExpression()), !dbg !11860
  %17 = ptrtoint %union.tree_node* %value.0.us to i64, !dbg !11867
  %call33.us = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %cases, i64 %17) #7, !dbg !11868
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call33.us, metadata !11816, metadata !DIExpression()), !dbg !11829
  %tobool34.us = icmp eq %struct.splay_tree_node_s* %call33.us, null, !dbg !11869
  br i1 %tobool34.us, label %if.end40.us, label %if.then35.us, !dbg !11870

if.then35.us:                                     ; preds = %if.end32.us
  %value36.us = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call33.us, i64 0, i32 1, !dbg !11871
  %18 = bitcast i64* %value36.us to i64**, !dbg !11871
  %19 = load i64*, i64** %18, align 8, !dbg !11871
  %bf.load38.us = load i64, i64* %19, align 8, !dbg !11872
  %bf.set.us = or i64 %bf.load38.us, 262144, !dbg !11872
  store i64 %bf.set.us, i64* %19, align 8, !dbg !11872
  br label %cleanup77.us

if.end40.us:                                      ; preds = %if.end32.us
  %call41.us = tail call %struct.splay_tree_node_s* @splay_tree_predecessor(%struct.splay_tree_s* %cases, i64 %17) #7, !dbg !11873
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call41.us, metadata !11816, metadata !DIExpression()), !dbg !11829
  %tobool42.us = icmp eq %struct.splay_tree_node_s* %call41.us, null, !dbg !11874
  br i1 %tobool42.us, label %if.end65.us, label %land.lhs.true43.us, !dbg !11875

land.lhs.true43.us:                               ; preds = %if.end40.us
  %value44.us = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call41.us, i64 0, i32 1, !dbg !11876
  %20 = bitcast i64* %value44.us to %struct.tree_exp**, !dbg !11876
  %21 = load %struct.tree_exp*, %struct.tree_exp** %20, align 8, !dbg !11876
  %arrayidx.us = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %21, i64 0, i32 3, i64 1, !dbg !11876
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx.us, align 8, !dbg !11876
  %tobool45.us = icmp eq %union.tree_node* %22, null, !dbg !11876
  br i1 %tobool45.us, label %if.end65.us, label %if.then46.us, !dbg !11877

if.then46.us:                                     ; preds = %land.lhs.true43.us
  call void @llvm.dbg.value(metadata %struct.tree_exp* %21, metadata !11825, metadata !DIExpression()), !dbg !11878
  %call53.us = tail call i32 @tree_int_cst_compare(%union.tree_node* nonnull %22, %union.tree_node* %value.0.us) #7, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %call53.us, metadata !11828, metadata !DIExpression()), !dbg !11878
  %cmp54.us = icmp sgt i32 %call53.us, -1, !dbg !11880
  br i1 %cmp54.us, label %if.then55.us, label %cleanup.us, !dbg !11882

if.then55.us:                                     ; preds = %if.then46.us
  %cmp56.us = icmp eq i32 %call53.us, 0, !dbg !11883
  br i1 %cmp56.us, label %if.then57.us, label %cleanup.us, !dbg !11886

if.then57.us:                                     ; preds = %if.then55.us
  %23 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %21, i64 0, i32 0, i32 0, i32 0, !dbg !11887
  %bf.load59.us = load i64, i64* %23, align 8, !dbg !11888
  %bf.set61.us = or i64 %bf.load59.us, 67108864, !dbg !11888
  store i64 %bf.set61.us, i64* %23, align 8, !dbg !11888
  br label %cleanup.us, !dbg !11887

cleanup.us:                                       ; preds = %if.then57.us, %if.then55.us, %if.then46.us
  %cleanup.dest.slot.0.us = phi i1 [ false, %if.then57.us ], [ false, %if.then55.us ], [ true, %if.then46.us ]
  br i1 %cleanup.dest.slot.0.us, label %if.end65.us, label %cleanup77.us

if.end65.us:                                      ; preds = %cleanup.us, %land.lhs.true43.us, %if.end40.us
  br i1 %tobool4, label %lor.rhs.us, label %lor.end.us, !dbg !11889

lor.rhs.us:                                       ; preds = %if.end65.us
  %24 = load i32, i32* @warn_switch, align 4, !dbg !11890
  %tobool73.us = icmp eq i32 %24, 0, !dbg !11891
  br label %lor.end.us, !dbg !11889

lor.end.us:                                       ; preds = %lor.rhs.us, %if.end65.us
  %25 = phi i1 [ true, %if.end65.us ], [ %tobool73.us, %lor.rhs.us ]
  %cond74.us = select i1 %25, i32 195, i32 193, !dbg !11892
  %purpose.us = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11893
  %26 = bitcast i32* %purpose.us to %union.tree_node**, !dbg !11893
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !11893
  %call76.us = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %switch_location, i32 %cond74.us, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.328, i64 0, i64 0), %union.tree_node* %27) #7, !dbg !11894
  br label %cleanup77.us, !dbg !11895

cleanup77.us:                                     ; preds = %lor.end.us, %cleanup.us, %if.then35.us
  %chain80.us = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11896
  br label %for.cond.us, !dbg !11897, !llvm.loop !11898

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !11900

for.cond:                                         ; preds = %cleanup77, %if.end15.if.end15.split_crit_edge
  %chain.0.in = phi %union.tree_node** [ %12, %if.end15.if.end15.split_crit_edge ], [ %chain80, %cleanup77 ]
  %chain.0 = load %union.tree_node*, %union.tree_node** %chain.0.in, align 8, !dbg !11857
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.0, metadata !11817, metadata !DIExpression()), !dbg !11829
  %tobool24 = icmp eq %union.tree_node* %chain.0, null, !dbg !11858
  br i1 %tobool24, label %for.end.us-lcssa, label %for.body, !dbg !11858

for.body:                                         ; preds = %for.cond
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11859
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !11859
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !11818, metadata !DIExpression()), !dbg !11860
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11861
  %bf.load27 = load i64, i64* %30, align 8, !dbg !11861
  %bf.cast296 = and i64 %bf.load27, 65535, !dbg !11863
  %cmp30 = icmp eq i64 %bf.cast296, 33, !dbg !11863
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !11864

if.then31:                                        ; preds = %for.body
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11865
  %31 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !11865
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !11818, metadata !DIExpression()), !dbg !11860
  br label %if.end32, !dbg !11866

if.end32:                                         ; preds = %if.then31, %for.body
  %value.0 = phi %union.tree_node* [ %31, %if.then31 ], [ %29, %for.body ], !dbg !11860
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !11818, metadata !DIExpression()), !dbg !11860
  %32 = ptrtoint %union.tree_node* %value.0 to i64, !dbg !11867
  %call33 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %cases, i64 %32) #7, !dbg !11868
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call33, metadata !11816, metadata !DIExpression()), !dbg !11829
  %tobool34 = icmp eq %struct.splay_tree_node_s* %call33, null, !dbg !11869
  br i1 %tobool34, label %if.end40, label %if.then35, !dbg !11870

if.then35:                                        ; preds = %if.end32
  %value36 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call33, i64 0, i32 1, !dbg !11871
  %33 = bitcast i64* %value36 to i64**, !dbg !11871
  %34 = load i64*, i64** %33, align 8, !dbg !11871
  %bf.load38 = load i64, i64* %34, align 8, !dbg !11872
  %bf.set = or i64 %bf.load38, 262144, !dbg !11872
  store i64 %bf.set, i64* %34, align 8, !dbg !11872
  br label %cleanup77

if.end40:                                         ; preds = %if.end32
  %call41 = tail call %struct.splay_tree_node_s* @splay_tree_predecessor(%struct.splay_tree_s* %cases, i64 %32) #7, !dbg !11873
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %call41, metadata !11816, metadata !DIExpression()), !dbg !11829
  %tobool42 = icmp eq %struct.splay_tree_node_s* %call41, null, !dbg !11874
  br i1 %tobool42, label %if.end65, label %land.lhs.true43, !dbg !11875

land.lhs.true43:                                  ; preds = %if.end40
  %value44 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %call41, i64 0, i32 1, !dbg !11876
  %35 = bitcast i64* %value44 to %struct.tree_exp**, !dbg !11876
  %36 = load %struct.tree_exp*, %struct.tree_exp** %35, align 8, !dbg !11876
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %36, i64 0, i32 3, i64 1, !dbg !11876
  %37 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11876
  %tobool45 = icmp eq %union.tree_node* %37, null, !dbg !11876
  br i1 %tobool45, label %if.end65, label %if.then46, !dbg !11877

if.then46:                                        ; preds = %land.lhs.true43
  call void @llvm.dbg.value(metadata %struct.tree_exp* %36, metadata !11825, metadata !DIExpression()), !dbg !11878
  %call53 = tail call i32 @tree_int_cst_compare(%union.tree_node* nonnull %37, %union.tree_node* %value.0) #7, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %call53, metadata !11828, metadata !DIExpression()), !dbg !11878
  %cmp54 = icmp sgt i32 %call53, -1, !dbg !11880
  br i1 %cmp54, label %if.then55, label %cleanup, !dbg !11882

if.then55:                                        ; preds = %if.then46
  %cmp56 = icmp eq i32 %call53, 0, !dbg !11883
  br i1 %cmp56, label %if.then57, label %cleanup, !dbg !11886

if.then57:                                        ; preds = %if.then55
  %38 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %36, i64 0, i32 0, i32 0, i32 0, !dbg !11887
  %bf.load59 = load i64, i64* %38, align 8, !dbg !11888
  %bf.set61 = or i64 %bf.load59, 67108864, !dbg !11888
  store i64 %bf.set61, i64* %38, align 8, !dbg !11888
  br label %cleanup, !dbg !11887

cleanup:                                          ; preds = %if.then46, %if.then55, %if.then57
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then57 ], [ false, %if.then55 ], [ true, %if.then46 ]
  br i1 %cleanup.dest.slot.0, label %if.end65, label %cleanup77

if.end65:                                         ; preds = %land.lhs.true43, %if.end40, %cleanup
  %call68 = tail call i32 @tree_int_cst_compare(%union.tree_node* nonnull %cond, %union.tree_node* %value.0) #7, !dbg !11901
  %tobool69 = icmp eq i32 %call68, 0, !dbg !11901
  br i1 %tobool69, label %if.end71, label %cleanup77, !dbg !11902

if.end71:                                         ; preds = %if.end65
  br i1 %tobool4, label %lor.rhs, label %lor.end, !dbg !11889

lor.rhs:                                          ; preds = %if.end71
  %39 = load i32, i32* @warn_switch, align 4, !dbg !11890
  %tobool73 = icmp eq i32 %39, 0, !dbg !11891
  br label %lor.end, !dbg !11889

lor.end:                                          ; preds = %if.end71, %lor.rhs
  %40 = phi i1 [ true, %if.end71 ], [ %tobool73, %lor.rhs ]
  %cond74 = select i1 %40, i32 195, i32 193, !dbg !11892
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11893
  %41 = bitcast i32* %purpose to %union.tree_node**, !dbg !11893
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !11893
  %call76 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %switch_location, i32 %cond74, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.328, i64 0, i64 0), %union.tree_node* %42) #7, !dbg !11894
  br label %cleanup77, !dbg !11895

cleanup77:                                        ; preds = %if.end65, %cleanup, %lor.end, %if.then35
  %chain80 = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11896
  br label %for.cond, !dbg !11897, !llvm.loop !11898

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !11900

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %43 = bitcast %union.tree_node* %type to i8*, !dbg !11900
  %call81 = tail call i32 @splay_tree_foreach(%struct.splay_tree_s* %cases, i32 (%struct.splay_tree_node_s*, i8*)* nonnull @match_case_to_enum, i8* nonnull %43) #7, !dbg !11903
  br label %cleanup.cont86, !dbg !11904

cleanup.cont86:                                   ; preds = %if.end10, %lor.lhs.false, %if.end7, %entry, %for.end
  ret void, !dbg !11904
}

declare dso_local i32 @splay_tree_foreach(%struct.splay_tree_s*, i32 (%struct.splay_tree_node_s*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @match_case_to_enum(%struct.splay_tree_node_s* %node, i8* %data) #5 !dbg !11905 {
entry:
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %node, metadata !11909, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i8* %data, metadata !11910, metadata !DIExpression()), !dbg !11913
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %node, i64 0, i32 1, !dbg !11914
  %0 = bitcast i64* %value to %union.tree_node**, !dbg !11914
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !11914
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11911, metadata !DIExpression()), !dbg !11913
  %2 = bitcast i8* %data to %union.tree_node*, !dbg !11915
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11912, metadata !DIExpression()), !dbg !11913
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11916
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !11916
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !11916
  br i1 %tobool, label %cleanup, label %if.end, !dbg !11918

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11919
  %bf.load = load i64, i64* %4, align 8, !dbg !11919
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !11919
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !11919
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !11921

if.then2:                                         ; preds = %if.end
  tail call fastcc void @match_case_to_enum_1(%union.tree_node* nonnull %3, %union.tree_node* %2, %union.tree_node* %1) #8, !dbg !11922
  br label %if.end9, !dbg !11922

if.else:                                          ; preds = %if.end
  %bf.clear8 = and i64 %bf.load, -262145, !dbg !11923
  store i64 %bf.clear8, i64* %4, align 8, !dbg !11923
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then2
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !11924
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !11924
  %tobool13 = icmp eq %union.tree_node* %5, null, !dbg !11924
  br i1 %tobool13, label %cleanup, label %if.then14, !dbg !11926

if.then14:                                        ; preds = %if.end9
  %bf.load16 = load i64, i64* %4, align 8, !dbg !11927
  %bf.cast192 = and i64 %bf.load16, 67108864, !dbg !11927
  %tobool20 = icmp eq i64 %bf.cast192, 0, !dbg !11927
  br i1 %tobool20, label %if.then21, label %if.else25, !dbg !11930

if.then21:                                        ; preds = %if.then14
  tail call fastcc void @match_case_to_enum_1(%union.tree_node* nonnull %5, %union.tree_node* %2, %union.tree_node* %1) #8, !dbg !11931
  br label %cleanup, !dbg !11931

if.else25:                                        ; preds = %if.then14
  %bf.clear28 = and i64 %bf.load16, -67108865, !dbg !11932
  store i64 %bf.clear28, i64* %4, align 8, !dbg !11932
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %entry, %if.else25, %if.then21
  ret i32 0, !dbg !11933
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @finish_label_address_expr(%union.tree_node* %label, i32 %loc) local_unnamed_addr #5 !dbg !11934 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !11938, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11939, metadata !DIExpression()), !dbg !11941
  %0 = load i32, i32* @input_location, align 4, !dbg !11942
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %0, i32 834, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.329, i64 0, i64 0)) #7, !dbg !11943
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11944
  %cmp = icmp eq %union.tree_node* %1, %label, !dbg !11946
  br i1 %cmp, label %if.then, label %if.end, !dbg !11947

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !11948

if.end:                                           ; preds = %entry
  %call1 = tail call %union.tree_node* @lookup_label(%union.tree_node* %label) #7, !dbg !11949
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !11938, metadata !DIExpression()), !dbg !11941
  %cmp2 = icmp eq %union.tree_node* %call1, null, !dbg !11950
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !11952

if.then3:                                         ; preds = %if.end
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !11953
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11940, metadata !DIExpression()), !dbg !11941
  br label %cleanup, !dbg !11954

if.else:                                          ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11955
  %bf.load = load i64, i64* %3, align 8, !dbg !11957
  %bf.set = or i64 %bf.load, 16777216, !dbg !11957
  store i64 %bf.set, i64* %3, align 8, !dbg !11957
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11958
  %call4 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %4, %union.tree_node* nonnull %call1) #7, !dbg !11958
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !11940, metadata !DIExpression()), !dbg !11941
  tail call void @protected_set_expr_location(%union.tree_node* %call4, i32 %loc) #7, !dbg !11959
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %if.else, %if.then
  %retval.0 = phi %union.tree_node* [ %label, %if.then ], [ %2, %if.then3 ], [ %call4, %if.else ], !dbg !11941
  ret %union.tree_node* %retval.0, !dbg !11960
}

declare dso_local %union.tree_node* @lookup_label(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @boolean_increment(i32 %code, %union.tree_node* %arg) local_unnamed_addr #5 !dbg !11961 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !11965, metadata !DIExpression()), !dbg !11969
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !11966, metadata !DIExpression()), !dbg !11969
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11970
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11970
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 1) #7, !dbg !11971
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11968, metadata !DIExpression()), !dbg !11969
  %call1 = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %arg) #7, !dbg !11972
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !11966, metadata !DIExpression()), !dbg !11969
  switch i32 %code, label %sw.default [
    i32 126, label %sw.bb
    i32 128, label %sw.bb5
    i32 125, label %sw.bb16
    i32 127, label %sw.bb21
  ], !dbg !11973

sw.bb:                                            ; preds = %entry
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11974
  %1 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !11974
  %call4 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %1, %union.tree_node* %call1, %union.tree_node* %call) #7, !dbg !11974
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !11967, metadata !DIExpression()), !dbg !11969
  br label %sw.epilog, !dbg !11976

sw.bb5:                                           ; preds = %entry
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11977
  %2 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !11977
  %call8 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %2, %union.tree_node* %call1, %union.tree_node* %call) #7, !dbg !11977
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !11967, metadata !DIExpression()), !dbg !11969
  %call9 = tail call %union.tree_node* @save_expr(%union.tree_node* %call1) #7, !dbg !11978
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !11966, metadata !DIExpression()), !dbg !11969
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11979
  %3 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !11979
  %call12 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %3, %union.tree_node* %call8, %union.tree_node* %call9) #7, !dbg !11979
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !11967, metadata !DIExpression()), !dbg !11969
  %4 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !11980
  %call15 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %4, %union.tree_node* %call9, %union.tree_node* %call12) #7, !dbg !11980
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !11967, metadata !DIExpression()), !dbg !11969
  br label %sw.epilog, !dbg !11981

sw.bb16:                                          ; preds = %entry
  %type18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11982
  %5 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !11982
  %6 = load i32, i32* @input_location, align 4, !dbg !11982
  %call19 = tail call %union.tree_node* @invert_truthvalue_loc(i32 %6, %union.tree_node* %call1) #7, !dbg !11982
  %call20 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %5, %union.tree_node* %call1, %union.tree_node* %call19) #7, !dbg !11982
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !11967, metadata !DIExpression()), !dbg !11969
  br label %sw.epilog, !dbg !11983

sw.bb21:                                          ; preds = %entry
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11984
  %7 = load %union.tree_node*, %union.tree_node** %type23, align 8, !dbg !11984
  %8 = load i32, i32* @input_location, align 4, !dbg !11984
  %call24 = tail call %union.tree_node* @invert_truthvalue_loc(i32 %8, %union.tree_node* %call1) #7, !dbg !11984
  %call25 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %7, %union.tree_node* %call1, %union.tree_node* %call24) #7, !dbg !11984
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !11967, metadata !DIExpression()), !dbg !11969
  %call26 = tail call %union.tree_node* @save_expr(%union.tree_node* %call1) #7, !dbg !11985
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !11966, metadata !DIExpression()), !dbg !11969
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11986
  %9 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !11986
  %call29 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %9, %union.tree_node* %call25, %union.tree_node* %call26) #7, !dbg !11986
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !11967, metadata !DIExpression()), !dbg !11969
  %10 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !11987
  %call32 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %10, %union.tree_node* %call26, %union.tree_node* %call29) #7, !dbg !11987
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !11967, metadata !DIExpression()), !dbg !11969
  br label %sw.epilog, !dbg !11988

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 5712, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !11989
  br label %sw.epilog, !dbg !11990

sw.epilog:                                        ; preds = %sw.default, %sw.bb21, %sw.bb16, %sw.bb5, %sw.bb
  %val.0 = phi %union.tree_node* [ undef, %sw.default ], [ %call32, %sw.bb21 ], [ %call20, %sw.bb16 ], [ %call15, %sw.bb5 ], [ %call4, %sw.bb ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !11967, metadata !DIExpression()), !dbg !11969
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %val.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11991
  %bf.load = load i64, i64* %11, align 8, !dbg !11992
  %bf.set = or i64 %bf.load, 65536, !dbg !11992
  store i64 %bf.set, i64* %11, align 8, !dbg !11992
  ret %union.tree_node* %val.0, !dbg !11993
}

declare dso_local %union.tree_node* @stabilize_reference(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @invert_truthvalue_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_stddef_cpp_builtins() local_unnamed_addr #5 !dbg !11994 {
entry:
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.330, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), i32 0) #7, !dbg !11995
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.331, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i32 0) #7, !dbg !11996
  %0 = load i32, i32* @flag_short_wchar, align 4, !dbg !11997
  %tobool = icmp eq i32 %0, 0, !dbg !11997
  %cond = select i1 %tobool, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.263, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0), !dbg !11997
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.332, i64 0, i64 0), i8* %cond, i32 0) #7, !dbg !11998
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.333, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), i32 0) #7, !dbg !11999
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.334, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0), i32 0) #7, !dbg !12000
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.335, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0), i32 0) #7, !dbg !12001
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.336, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0), i32 0) #7, !dbg !12002
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.337, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), i32 0) #7, !dbg !12003
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.338, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i32 0) #7, !dbg !12004
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.339, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0), i32 0) #7, !dbg !12006
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i64 0, i64 0), i32 0) #7, !dbg !12008
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.341, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i32 0) #7, !dbg !12010
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.342, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0), i32 0) #7, !dbg !12012
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.343, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0), i32 0) #7, !dbg !12014
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0), i32 0) #7, !dbg !12016
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.345, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), i32 0) #7, !dbg !12018
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.346, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0), i32 0) #7, !dbg !12020
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.347, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0), i32 0) #7, !dbg !12022
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.348, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i64 0, i64 0), i32 0) #7, !dbg !12024
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i32 0) #7, !dbg !12026
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.350, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0), i32 0) #7, !dbg !12028
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.351, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0), i32 0) #7, !dbg !12030
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.352, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0), i32 0) #7, !dbg !12032
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.353, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), i32 0) #7, !dbg !12034
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.354, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0), i32 0) #7, !dbg !12036
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.355, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0), i32 0) #7, !dbg !12038
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.356, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i32 0) #7, !dbg !12040
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.357, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i32 0) #7, !dbg !12042
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0), i32 0) #7, !dbg !12044
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.359, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0), i32 0) #7, !dbg !12046
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.360, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), i32 0) #7, !dbg !12048
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.361, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), i32 0) #7, !dbg !12050
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.362, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0), i32 0) #7, !dbg !12052
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.363, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i32 0) #7, !dbg !12054
  tail call void @builtin_define_with_value(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.364, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.264, i64 0, i64 0), i32 0) #7, !dbg !12056
  ret void, !dbg !12058
}

declare dso_local void @builtin_define_with_value(i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @c_determine_visibility(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !12059 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !12063, metadata !DIExpression()), !dbg !12064
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12065
  %bf.load = load i64, i64* %0, align 8, !dbg !12065
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12065
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !12065
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !12065

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 29, !dbg !12065
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !12065

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 6964, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !12065
  br label %cond.end, !dbg !12065

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12066
  %1 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !12066
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), %union.tree_node* %1) #7, !dbg !12068
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !12068
  br i1 %tobool, label %if.end, label %return, !dbg !12069

if.end:                                           ; preds = %cond.end
  %visibility_specified = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !12070
  %2 = bitcast i24* %visibility_specified to i32*, !dbg !12070
  %bf.load6 = load i32, i32* %2, align 8, !dbg !12070
  %bf.clear7 = and i32 %bf.load6, 4096, !dbg !12070
  %tobool8 = icmp eq i32 %bf.clear7, 0, !dbg !12070
  br i1 %tobool8, label %if.then9, label %return, !dbg !12072

if.then9:                                         ; preds = %if.end
  %bf.load10 = load i8, i8* getelementptr inbounds (%struct.visibility_flags, %struct.visibility_flags* @visibility_options, i64 0, i32 0), align 4, !dbg !12073
  %bf.clear11 = and i8 %bf.load10, 1, !dbg !12073
  %tobool13 = icmp eq i8 %bf.clear11, 0, !dbg !12076
  br i1 %tobool13, label %lor.lhs.false14, label %if.then9.if.then20_crit_edge, !dbg !12077

if.then9.if.then20_crit_edge:                     ; preds = %if.then9
  %.pre = load i32, i32* @default_visibility, align 4, !dbg !12078
  br label %if.then20, !dbg !12077

lor.lhs.false14:                                  ; preds = %if.then9
  %bf.lshr17 = lshr i32 %bf.load6, 10, !dbg !12080
  %bf.clear18 = and i32 %bf.lshr17, 3, !dbg !12080
  %3 = load i32, i32* @default_visibility, align 4, !dbg !12081
  %cmp19 = icmp eq i32 %bf.clear18, %3, !dbg !12082
  br i1 %cmp19, label %return, label %if.then20, !dbg !12083

if.then20:                                        ; preds = %if.then9.if.then20_crit_edge, %lor.lhs.false14
  %4 = phi i32 [ %.pre, %if.then9.if.then20_crit_edge ], [ %3, %lor.lhs.false14 ], !dbg !12078
  %bf.value = shl i32 %4, 10, !dbg !12084
  %bf.shl = and i32 %bf.value, 3072, !dbg !12084
  %bf.clear24 = and i32 %bf.load6, -7169, !dbg !12084
  %bf.set = or i32 %bf.clear24, %bf.shl, !dbg !12084
  %bf.value31 = zext i8 %bf.clear11 to i32, !dbg !12085
  %bf.shl32 = shl nuw nsw i32 %bf.value31, 12, !dbg !12085
  %bf.set34 = or i32 %bf.set, %bf.shl32, !dbg !12085
  store i32 %bf.set34, i32* %2, align 8, !dbg !12085
  %bf.load36 = load i64, i64* %0, align 8, !dbg !12086
  %bf.cast383 = and i64 %bf.load36, 65535, !dbg !12088
  %cmp39 = icmp eq i64 %bf.cast383, 32, !dbg !12088
  br i1 %cmp39, label %land.lhs.true, label %lor.lhs.false46, !dbg !12089

land.lhs.true:                                    ; preds = %if.then20
  %bf.cast445 = and i64 %bf.load36, 67108864, !dbg !12090
  %tobool45 = icmp eq i64 %bf.cast445, 0, !dbg !12090
  br i1 %tobool45, label %lor.lhs.false46, label %land.lhs.true52, !dbg !12091

lor.lhs.false46:                                  ; preds = %land.lhs.true, %if.then20
  %cmp51 = icmp eq i64 %bf.cast383, 29, !dbg !12092
  br i1 %cmp51, label %land.lhs.true52, label %return, !dbg !12093

land.lhs.true52:                                  ; preds = %land.lhs.true, %lor.lhs.false46
  %arrayidx57 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast383, i64 11, !dbg !12094
  %5 = load i8, i8* %arrayidx57, align 1, !dbg !12094
  %tobool58 = icmp eq i8 %5, 0, !dbg !12094
  br i1 %tobool58, label %return, label %land.lhs.true59, !dbg !12094

land.lhs.true59:                                  ; preds = %land.lhs.true52
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12094
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !12094
  %cmp60 = icmp eq %struct.rtx_def* %6, null, !dbg !12094
  br i1 %cmp60, label %return, label %if.then62, !dbg !12095

if.then62:                                        ; preds = %land.lhs.true59
  tail call void @make_decl_rtl(%union.tree_node* %decl) #7, !dbg !12096
  br label %return, !dbg !12096

return:                                           ; preds = %land.lhs.true59, %land.lhs.true52, %lor.lhs.false14, %if.end, %cond.end, %lor.lhs.false46, %if.then62
  %retval.0 = phi i8 [ 1, %cond.end ], [ 0, %lor.lhs.false14 ], [ 0, %if.then62 ], [ 0, %land.lhs.true59 ], [ 0, %land.lhs.true52 ], [ 0, %lor.lhs.false46 ], [ 0, %if.end ], !dbg !12064
  ret i8 %retval.0, !dbg !12097
}

declare dso_local %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @parse_optimize_options(%union.tree_node* %args, i8 zeroext %attr_p) local_unnamed_addr #5 !dbg !12098 {
entry:
  %buffer = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !12102, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8 %attr_p, metadata !12103, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8 1, metadata !12104, metadata !DIExpression()), !dbg !12128
  %0 = load %struct.VEC_const_char_p_gc*, %struct.VEC_const_char_p_gc** @optimize_args, align 8, !dbg !12129
  %base = getelementptr inbounds %struct.VEC_const_char_p_gc, %struct.VEC_const_char_p_gc* %0, i64 0, i32 0, !dbg !12129
  tail call fastcc void @VEC_const_char_p_base_truncate(%struct.VEC_const_char_p_base* %base, i32 0) #8, !dbg !12129
  %call = tail call fastcc i8** @VEC_const_char_p_gc_safe_push(%struct.VEC_const_char_p_gc** nonnull @optimize_args, i8* null) #8, !dbg !12130
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !12109, metadata !DIExpression()), !dbg !12128
  %tobool43 = icmp eq i8 %attr_p, 0, !dbg !12131
  %1 = getelementptr inbounds [20 x i8], [20 x i8]* %buffer, i64 0, i64 0, !dbg !12135
  br label %for.cond, !dbg !12136

for.cond:                                         ; preds = %for.inc, %entry
  %ap.0 = phi %union.tree_node* [ %args, %entry ], [ %18, %for.inc ], !dbg !12137
  %ret.0 = phi i8 [ 1, %entry ], [ %ret.4, %for.inc ], !dbg !12138
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !12104, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata %union.tree_node* %ap.0, metadata !12109, metadata !DIExpression()), !dbg !12128
  %cmp = icmp eq %union.tree_node* %ap.0, null, !dbg !12139
  br i1 %cmp, label %for.end, label %for.body, !dbg !12140

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %ap.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12141
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !12141
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !12110, metadata !DIExpression()), !dbg !12142
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12143
  %bf.load = load i64, i64* %4, align 8, !dbg !12143
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12144
  %cmp3 = icmp eq i64 %bf.cast1, 23, !dbg !12144
  br i1 %cmp3, label %if.then, label %if.else, !dbg !12145

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1) #6, !dbg !12146
  call void @llvm.dbg.declare(metadata [20 x i8]* %buffer, metadata !12114, metadata !DIExpression()), !dbg !12147
  %int_cst4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12148
  %low = bitcast i32* %int_cst4 to i64*, !dbg !12148
  %5 = load i64, i64* %low, align 8, !dbg !12148
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i64 0, i64 0), i64 %5) #7, !dbg !12149
  %call7 = call i8* @ggc_alloc_string(i8* nonnull %1, i32 -1) #7, !dbg !12150
  %call8 = call fastcc i8** @VEC_const_char_p_gc_safe_push(%struct.VEC_const_char_p_gc** nonnull @optimize_args, i8* %call7) #8, !dbg !12150
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1) #6, !dbg !12151
  br label %for.inc, !dbg !12152

if.else:                                          ; preds = %for.body
  %cmp13 = icmp eq i64 %bf.cast1, 28, !dbg !12153
  br i1 %cmp13, label %if.then14, label %for.inc, !dbg !12154

if.then14:                                        ; preds = %if.else
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12155
  %7 = load i32, i32* %6, align 8, !dbg !12155
  %conv = sext i32 %7 to i64, !dbg !12155
  call void @llvm.dbg.value(metadata i64 %conv, metadata !12117, metadata !DIExpression()), !dbg !12156
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12157
  store i32* %str, i32** bitcast (i8** @libiberty_optr to i32**), align 8, !dbg !12157
  %.cast = bitcast i32* %str to i8*, !dbg !12157
  %call17 = call i64 @strlen(i8* nonnull %.cast) #7, !dbg !12157
  %add = add i64 %call17, 1, !dbg !12157
  store i64 %add, i64* @libiberty_len, align 8, !dbg !12157
  %8 = alloca i8, i64 %add, align 16, !dbg !12157
  store i8* %8, i8** @libiberty_nptr, align 8, !dbg !12157
  %9 = load i8*, i8** @libiberty_optr, align 8, !dbg !12157
  %call18 = call i8* @memcpy(i8* nonnull %8, i8* %9, i64 %add) #7, !dbg !12157
  call void @llvm.dbg.value(metadata i8* %call18, metadata !12120, metadata !DIExpression()), !dbg !12156
  %add.ptr = getelementptr inbounds i8, i8* %call18, i64 %conv, !dbg !12158
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !12121, metadata !DIExpression()), !dbg !12156
  call void @llvm.dbg.value(metadata i8* %call18, metadata !12123, metadata !DIExpression()), !dbg !12156
  %sub.ptr.lhs.cast26 = ptrtoint i8* %add.ptr to i64, !dbg !12159
  br i1 %tobool43, label %if.then14.split.us, label %if.then14.if.then14.split_crit_edge, !dbg !12162

if.then14.if.then14.split_crit_edge:              ; preds = %if.then14
  br label %while.cond, !dbg !12162

if.then14.split.us:                               ; preds = %if.then14
  br label %while.cond.us, !dbg !12162

while.cond.us:                                    ; preds = %cleanup.us, %if.then14.split.us
  %next_p.0.us = phi i8* [ %call18, %if.then14.split.us ], [ %next_p.1.us, %cleanup.us ], !dbg !12156
  %ret.1.us = phi i8 [ %ret.0, %if.then14.split.us ], [ %ret.2.us, %cleanup.us ], !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.1.us, metadata !12104, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8* %next_p.0.us, metadata !12123, metadata !DIExpression()), !dbg !12156
  %cmp19.us = icmp eq i8* %next_p.0.us, null, !dbg !12163
  br i1 %cmp19.us, label %for.inc.loopexit.us-lcssa.us, label %while.body.us, !dbg !12162

while.body.us:                                    ; preds = %while.cond.us
  call void @llvm.dbg.value(metadata i8* %next_p.0.us, metadata !12120, metadata !DIExpression()), !dbg !12156
  %call21.us = call i8* @strchr(i8* nonnull %next_p.0.us, i32 44) #7, !dbg !12164
  call void @llvm.dbg.value(metadata i8* %call21.us, metadata !12122, metadata !DIExpression()), !dbg !12156
  %tobool22.us = icmp eq i8* %call21.us, null, !dbg !12165
  br i1 %tobool22.us, label %if.else25.us, label %if.then23.us, !dbg !12166

if.then23.us:                                     ; preds = %while.body.us
  %sub.ptr.lhs.cast.us = ptrtoint i8* %call21.us to i64, !dbg !12167
  %sub.ptr.rhs.cast.us = ptrtoint i8* %next_p.0.us to i64, !dbg !12167
  %sub.ptr.sub.us = sub i64 %sub.ptr.lhs.cast.us, %sub.ptr.rhs.cast.us, !dbg !12167
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub.us, metadata !12124, metadata !DIExpression()), !dbg !12169
  store i8 0, i8* %call21.us, align 1, !dbg !12170
  %add.ptr24.us = getelementptr inbounds i8, i8* %call21.us, i64 1, !dbg !12171
  call void @llvm.dbg.value(metadata i8* %add.ptr24.us, metadata !12123, metadata !DIExpression()), !dbg !12156
  br label %if.end.us, !dbg !12172

if.else25.us:                                     ; preds = %while.body.us
  %sub.ptr.rhs.cast27.us = ptrtoint i8* %next_p.0.us to i64, !dbg !12173
  %sub.ptr.sub28.us = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27.us, !dbg !12173
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub28.us, metadata !12124, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata i8* null, metadata !12123, metadata !DIExpression()), !dbg !12156
  br label %if.end.us

if.end.us:                                        ; preds = %if.else25.us, %if.then23.us
  %next_p.1.us = phi i8* [ %add.ptr24.us, %if.then23.us ], [ null, %if.else25.us ], !dbg !12174
  %len2.0.us = phi i64 [ %sub.ptr.sub.us, %if.then23.us ], [ %sub.ptr.sub28.us, %if.else25.us ], !dbg !12174
  call void @llvm.dbg.value(metadata i64 %len2.0.us, metadata !12124, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata i8* %next_p.1.us, metadata !12123, metadata !DIExpression()), !dbg !12156
  %add29.us = add i64 %len2.0.us, 3, !dbg !12175
  %call30.us = call i8* @ggc_alloc_stat(i64 %add29.us) #7, !dbg !12175
  call void @llvm.dbg.value(metadata i8* %call30.us, metadata !12126, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata i8* %call30.us, metadata !12127, metadata !DIExpression()), !dbg !12169
  %10 = load i8, i8* %next_p.0.us, align 1, !dbg !12176
  %cmp32.us = icmp eq i8 %10, 45, !dbg !12177
  br i1 %cmp32.us, label %land.lhs.true.us, label %if.end49.us, !dbg !12178

land.lhs.true.us:                                 ; preds = %if.end.us
  %arrayidx.us = getelementptr inbounds i8, i8* %next_p.0.us, i64 1, !dbg !12179
  %11 = load i8, i8* %arrayidx.us, align 1, !dbg !12179
  %cmp35.us = icmp eq i8 %11, 79, !dbg !12180
  br i1 %cmp35.us, label %if.end49.us, label %land.lhs.true37.us, !dbg !12181

land.lhs.true37.us:                               ; preds = %land.lhs.true.us
  %cmp40.us = icmp eq i8 %11, 102, !dbg !12182
  br i1 %cmp40.us, label %if.end49.us, label %if.then42.us, !dbg !12183

if.then42.us:                                     ; preds = %land.lhs.true37.us
  call void @llvm.dbg.value(metadata i8 0, metadata !12104, metadata !DIExpression()), !dbg !12128
  %call47.us = call zeroext i8 (i32, i8*, ...) @warning(i32 165, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.367, i64 0, i64 0), i8* nonnull %next_p.0.us) #7, !dbg !12184
  br label %cleanup.us, !llvm.loop !12185

if.end49.us:                                      ; preds = %land.lhs.true37.us, %land.lhs.true.us, %if.end.us
  br i1 %cmp32.us, label %if.end80.us, label %if.then53.us, !dbg !12187

if.then53.us:                                     ; preds = %if.end49.us
  %incdec.ptr.us = getelementptr inbounds i8, i8* %call30.us, i64 1, !dbg !12188
  call void @llvm.dbg.value(metadata i8* %incdec.ptr.us, metadata !12127, metadata !DIExpression()), !dbg !12169
  store i8 45, i8* %call30.us, align 1, !dbg !12191
  %12 = load i8, i8* %next_p.0.us, align 1, !dbg !12192
  %cmp55.us = icmp sgt i8 %12, 47, !dbg !12194
  br i1 %cmp55.us, label %land.lhs.true57.us, label %lor.lhs.false.us, !dbg !12195

land.lhs.true57.us:                               ; preds = %if.then53.us
  %cmp59.us = icmp slt i8 %12, 58, !dbg !12196
  br i1 %cmp59.us, label %if.then70.us, label %lor.lhs.false.us, !dbg !12197

lor.lhs.false.us:                                 ; preds = %land.lhs.true57.us, %if.then53.us
  %cmp63.us = icmp eq i8 %12, 115, !dbg !12198
  br i1 %cmp63.us, label %land.lhs.true65.us, label %if.else72.us, !dbg !12199

land.lhs.true65.us:                               ; preds = %lor.lhs.false.us
  %arrayidx66.us = getelementptr inbounds i8, i8* %next_p.0.us, i64 1, !dbg !12200
  %13 = load i8, i8* %arrayidx66.us, align 1, !dbg !12200
  %cmp68.us = icmp eq i8 %13, 0, !dbg !12201
  br i1 %cmp68.us, label %if.then70.us, label %if.else72.us, !dbg !12202

if.else72.us:                                     ; preds = %land.lhs.true65.us, %lor.lhs.false.us
  %cmp74.us = icmp eq i8 %12, 79, !dbg !12203
  br i1 %cmp74.us, label %if.end80.us, label %if.then76.us, !dbg !12205

if.then76.us:                                     ; preds = %if.else72.us
  %incdec.ptr77.us = getelementptr inbounds i8, i8* %call30.us, i64 2, !dbg !12206
  call void @llvm.dbg.value(metadata i8* %incdec.ptr77.us, metadata !12127, metadata !DIExpression()), !dbg !12169
  store i8 102, i8* %incdec.ptr.us, align 1, !dbg !12207
  br label %if.end80.us, !dbg !12208

if.then70.us:                                     ; preds = %land.lhs.true65.us, %land.lhs.true57.us
  %incdec.ptr71.us = getelementptr inbounds i8, i8* %call30.us, i64 2, !dbg !12209
  call void @llvm.dbg.value(metadata i8* %incdec.ptr71.us, metadata !12127, metadata !DIExpression()), !dbg !12169
  store i8 79, i8* %incdec.ptr.us, align 1, !dbg !12210
  br label %if.end80.us, !dbg !12211

if.end80.us:                                      ; preds = %if.then70.us, %if.then76.us, %if.else72.us, %if.end49.us
  %r.2.us = phi i8* [ %call30.us, %if.end49.us ], [ %incdec.ptr71.us, %if.then70.us ], [ %incdec.ptr77.us, %if.then76.us ], [ %incdec.ptr.us, %if.else72.us ], !dbg !12169
  call void @llvm.dbg.value(metadata i8* %r.2.us, metadata !12127, metadata !DIExpression()), !dbg !12169
  %call81.us = call i8* @memcpy(i8* %r.2.us, i8* nonnull %next_p.0.us, i64 %len2.0.us) #7, !dbg !12212
  %arrayidx82.us = getelementptr inbounds i8, i8* %r.2.us, i64 %len2.0.us, !dbg !12213
  store i8 0, i8* %arrayidx82.us, align 1, !dbg !12214
  %call83.us = call fastcc i8** @VEC_const_char_p_gc_safe_push(%struct.VEC_const_char_p_gc** nonnull @optimize_args, i8* %call30.us) #8, !dbg !12215
  br label %cleanup.us, !dbg !12186

cleanup.us:                                       ; preds = %if.end80.us, %if.then42.us
  %ret.2.us = phi i8 [ %ret.1.us, %if.end80.us ], [ 0, %if.then42.us ], !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.2.us, metadata !12104, metadata !DIExpression()), !dbg !12128
  br label %while.cond.us

for.inc.loopexit.us-lcssa.us:                     ; preds = %while.cond.us
  %ret.1.us.lcssa = phi i8 [ %ret.1.us, %while.cond.us ], !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.1.us.lcssa, metadata !12104, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.1.us.lcssa, metadata !12104, metadata !DIExpression()), !dbg !12128
  br label %for.inc.loopexit, !dbg !12216

while.cond:                                       ; preds = %cleanup, %if.then14.if.then14.split_crit_edge
  %next_p.0 = phi i8* [ %call18, %if.then14.if.then14.split_crit_edge ], [ %next_p.1, %cleanup ], !dbg !12156
  %ret.1 = phi i8 [ %ret.0, %if.then14.if.then14.split_crit_edge ], [ %ret.2, %cleanup ], !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.1, metadata !12104, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8* %next_p.0, metadata !12123, metadata !DIExpression()), !dbg !12156
  %cmp19 = icmp eq i8* %next_p.0, null, !dbg !12163
  br i1 %cmp19, label %for.inc.loopexit.us-lcssa, label %while.body, !dbg !12162

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8* %next_p.0, metadata !12120, metadata !DIExpression()), !dbg !12156
  %call21 = call i8* @strchr(i8* nonnull %next_p.0, i32 44) #7, !dbg !12164
  call void @llvm.dbg.value(metadata i8* %call21, metadata !12122, metadata !DIExpression()), !dbg !12156
  %tobool22 = icmp eq i8* %call21, null, !dbg !12165
  br i1 %tobool22, label %if.else25, label %if.then23, !dbg !12166

if.then23:                                        ; preds = %while.body
  %sub.ptr.lhs.cast = ptrtoint i8* %call21 to i64, !dbg !12167
  %sub.ptr.rhs.cast = ptrtoint i8* %next_p.0 to i64, !dbg !12167
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12167
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub, metadata !12124, metadata !DIExpression()), !dbg !12169
  store i8 0, i8* %call21, align 1, !dbg !12170
  %add.ptr24 = getelementptr inbounds i8, i8* %call21, i64 1, !dbg !12171
  call void @llvm.dbg.value(metadata i8* %add.ptr24, metadata !12123, metadata !DIExpression()), !dbg !12156
  br label %if.end, !dbg !12172

if.else25:                                        ; preds = %while.body
  %sub.ptr.rhs.cast27 = ptrtoint i8* %next_p.0 to i64, !dbg !12173
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27, !dbg !12173
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub28, metadata !12124, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata i8* null, metadata !12123, metadata !DIExpression()), !dbg !12156
  br label %if.end

if.end:                                           ; preds = %if.else25, %if.then23
  %next_p.1 = phi i8* [ %add.ptr24, %if.then23 ], [ null, %if.else25 ], !dbg !12174
  %len2.0 = phi i64 [ %sub.ptr.sub, %if.then23 ], [ %sub.ptr.sub28, %if.else25 ], !dbg !12174
  call void @llvm.dbg.value(metadata i64 %len2.0, metadata !12124, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata i8* %next_p.1, metadata !12123, metadata !DIExpression()), !dbg !12156
  %add29 = add i64 %len2.0, 3, !dbg !12175
  %call30 = call i8* @ggc_alloc_stat(i64 %add29) #7, !dbg !12175
  call void @llvm.dbg.value(metadata i8* %call30, metadata !12126, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata i8* %call30, metadata !12127, metadata !DIExpression()), !dbg !12169
  %14 = load i8, i8* %next_p.0, align 1, !dbg !12176
  %cmp32 = icmp eq i8 %14, 45, !dbg !12177
  br i1 %cmp32, label %land.lhs.true, label %if.end49, !dbg !12178

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds i8, i8* %next_p.0, i64 1, !dbg !12179
  %15 = load i8, i8* %arrayidx, align 1, !dbg !12179
  %cmp35 = icmp eq i8 %15, 79, !dbg !12180
  br i1 %cmp35, label %if.end49, label %land.lhs.true37, !dbg !12181

land.lhs.true37:                                  ; preds = %land.lhs.true
  %cmp40 = icmp eq i8 %15, 102, !dbg !12182
  br i1 %cmp40, label %if.end49, label %if.then42, !dbg !12183

if.then42:                                        ; preds = %land.lhs.true37
  call void @llvm.dbg.value(metadata i8 0, metadata !12104, metadata !DIExpression()), !dbg !12128
  %call45 = call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.366, i64 0, i64 0), i8* nonnull %next_p.0) #7, !dbg !12217
  br label %cleanup, !dbg !12217, !llvm.loop !12185

if.end49:                                         ; preds = %land.lhs.true37, %land.lhs.true, %if.end
  br i1 %cmp32, label %if.end80, label %if.then53, !dbg !12187

if.then53:                                        ; preds = %if.end49
  %incdec.ptr = getelementptr inbounds i8, i8* %call30, i64 1, !dbg !12188
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !12127, metadata !DIExpression()), !dbg !12169
  store i8 45, i8* %call30, align 1, !dbg !12191
  %16 = load i8, i8* %next_p.0, align 1, !dbg !12192
  %cmp55 = icmp sgt i8 %16, 47, !dbg !12194
  br i1 %cmp55, label %land.lhs.true57, label %lor.lhs.false, !dbg !12195

land.lhs.true57:                                  ; preds = %if.then53
  %cmp59 = icmp slt i8 %16, 58, !dbg !12196
  br i1 %cmp59, label %if.then70, label %lor.lhs.false, !dbg !12197

lor.lhs.false:                                    ; preds = %land.lhs.true57, %if.then53
  %cmp63 = icmp eq i8 %16, 115, !dbg !12198
  br i1 %cmp63, label %land.lhs.true65, label %if.else72, !dbg !12199

land.lhs.true65:                                  ; preds = %lor.lhs.false
  %arrayidx66 = getelementptr inbounds i8, i8* %next_p.0, i64 1, !dbg !12200
  %17 = load i8, i8* %arrayidx66, align 1, !dbg !12200
  %cmp68 = icmp eq i8 %17, 0, !dbg !12201
  br i1 %cmp68, label %if.then70, label %if.else72, !dbg !12202

if.then70:                                        ; preds = %land.lhs.true65, %land.lhs.true57
  %incdec.ptr71 = getelementptr inbounds i8, i8* %call30, i64 2, !dbg !12209
  call void @llvm.dbg.value(metadata i8* %incdec.ptr71, metadata !12127, metadata !DIExpression()), !dbg !12169
  store i8 79, i8* %incdec.ptr, align 1, !dbg !12210
  br label %if.end80, !dbg !12211

if.else72:                                        ; preds = %land.lhs.true65, %lor.lhs.false
  %cmp74 = icmp eq i8 %16, 79, !dbg !12203
  br i1 %cmp74, label %if.end80, label %if.then76, !dbg !12205

if.then76:                                        ; preds = %if.else72
  %incdec.ptr77 = getelementptr inbounds i8, i8* %call30, i64 2, !dbg !12206
  call void @llvm.dbg.value(metadata i8* %incdec.ptr77, metadata !12127, metadata !DIExpression()), !dbg !12169
  store i8 102, i8* %incdec.ptr, align 1, !dbg !12207
  br label %if.end80, !dbg !12208

if.end80:                                         ; preds = %if.else72, %if.end49, %if.then70, %if.then76
  %r.2 = phi i8* [ %call30, %if.end49 ], [ %incdec.ptr71, %if.then70 ], [ %incdec.ptr77, %if.then76 ], [ %incdec.ptr, %if.else72 ], !dbg !12169
  call void @llvm.dbg.value(metadata i8* %r.2, metadata !12127, metadata !DIExpression()), !dbg !12169
  %call81 = call i8* @memcpy(i8* %r.2, i8* nonnull %next_p.0, i64 %len2.0) #7, !dbg !12212
  %arrayidx82 = getelementptr inbounds i8, i8* %r.2, i64 %len2.0, !dbg !12213
  store i8 0, i8* %arrayidx82, align 1, !dbg !12214
  %call83 = call fastcc i8** @VEC_const_char_p_gc_safe_push(%struct.VEC_const_char_p_gc** nonnull @optimize_args, i8* %call30) #8, !dbg !12215
  br label %cleanup, !dbg !12186

cleanup:                                          ; preds = %if.then42, %if.end80
  %ret.2 = phi i8 [ %ret.1, %if.end80 ], [ 0, %if.then42 ], !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.2, metadata !12104, metadata !DIExpression()), !dbg !12128
  br label %while.cond

for.inc.loopexit.us-lcssa:                        ; preds = %while.cond
  %ret.1.lcssa4 = phi i8 [ %ret.1, %while.cond ], !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.1.lcssa4, metadata !12104, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.1.lcssa4, metadata !12104, metadata !DIExpression()), !dbg !12128
  br label %for.inc.loopexit, !dbg !12216

for.inc.loopexit:                                 ; preds = %for.inc.loopexit.us-lcssa.us, %for.inc.loopexit.us-lcssa
  %ret.1.lcssa = phi i8 [ %ret.1.lcssa4, %for.inc.loopexit.us-lcssa ], [ %ret.1.us.lcssa, %for.inc.loopexit.us-lcssa.us ], !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.1.lcssa, metadata !12104, metadata !DIExpression()), !dbg !12128
  br label %for.inc, !dbg !12216

for.inc:                                          ; preds = %for.inc.loopexit, %if.then, %if.else
  %ret.4 = phi i8 [ %ret.0, %if.then ], [ %ret.0, %if.else ], [ %ret.1.lcssa, %for.inc.loopexit ], !dbg !12138
  call void @llvm.dbg.value(metadata i8 %ret.4, metadata !12104, metadata !DIExpression()), !dbg !12128
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %ap.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12216
  %18 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !12216
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !12109, metadata !DIExpression()), !dbg !12128
  br label %for.cond, !dbg !12218, !llvm.loop !12219

for.end:                                          ; preds = %for.cond
  %ret.0.lcssa = phi i8 [ %ret.0, %for.cond ], !dbg !12138
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !12104, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !12104, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8 %ret.0.lcssa, metadata !12104, metadata !DIExpression()), !dbg !12128
  %19 = load %struct.VEC_const_char_p_gc*, %struct.VEC_const_char_p_gc** @optimize_args, align 8, !dbg !12221
  %base90 = getelementptr inbounds %struct.VEC_const_char_p_gc, %struct.VEC_const_char_p_gc* %19, i64 0, i32 0, !dbg !12221
  %call94 = call fastcc i32 @VEC_const_char_p_base_length(%struct.VEC_const_char_p_base* %base90) #8, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %call94, metadata !12105, metadata !DIExpression()), !dbg !12128
  %add95 = add i32 %call94, 1, !dbg !12222
  %conv96 = zext i32 %add95 to i64, !dbg !12222
  %20 = alloca i8*, i64 %conv96, align 16, !dbg !12222
  call void @llvm.dbg.value(metadata i8** %20, metadata !12108, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i32 1, metadata !12106, metadata !DIExpression()), !dbg !12128
  %21 = zext i32 %call94 to i64, !dbg !12223
  br label %for.cond97, !dbg !12223

for.cond97:                                       ; preds = %for.body100, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body100 ], [ 1, %for.end ], !dbg !12225
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12106, metadata !DIExpression()), !dbg !12128
  %cmp98 = icmp ult i64 %indvars.iv, %21, !dbg !12226
  br i1 %cmp98, label %for.body100, label %for.end110, !dbg !12228

for.body100:                                      ; preds = %for.cond97
  %22 = load %struct.VEC_const_char_p_gc*, %struct.VEC_const_char_p_gc** @optimize_args, align 8, !dbg !12229
  %base103 = getelementptr inbounds %struct.VEC_const_char_p_gc, %struct.VEC_const_char_p_gc* %22, i64 0, i32 0, !dbg !12229
  %23 = trunc i64 %indvars.iv to i32, !dbg !12229
  %call107 = call fastcc i8* @VEC_const_char_p_base_index(%struct.VEC_const_char_p_base* %base103, i32 %23) #8, !dbg !12229
  %arrayidx108 = getelementptr inbounds i8*, i8** %20, i64 %indvars.iv, !dbg !12230
  store i8* %call107, i8** %arrayidx108, align 8, !dbg !12231
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12232
  br label %for.cond97, !dbg !12233, !llvm.loop !12234

for.end110:                                       ; preds = %for.cond97
  %24 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !12236
  call void @llvm.dbg.value(metadata i32 %24, metadata !12107, metadata !DIExpression()), !dbg !12128
  call void @decode_options(i32 %call94, i8** nonnull %20) #7, !dbg !12237
  %25 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 4), align 8, !dbg !12238
  call void %25() #7, !dbg !12239
  store i32 %24, i32* @flag_strict_aliasing, align 4, !dbg !12240
  %26 = load %struct.VEC_const_char_p_gc*, %struct.VEC_const_char_p_gc** @optimize_args, align 8, !dbg !12241
  %base113 = getelementptr inbounds %struct.VEC_const_char_p_gc, %struct.VEC_const_char_p_gc* %26, i64 0, i32 0, !dbg !12241
  call fastcc void @VEC_const_char_p_base_truncate(%struct.VEC_const_char_p_base* %base113, i32 0) #8, !dbg !12241
  ret i8 %ret.0.lcssa, !dbg !12242
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_const_char_p_base_truncate(%struct.VEC_const_char_p_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !12243 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_const_char_p_base* %vec_, metadata !12248, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.value(metadata i32 0, metadata !12249, metadata !DIExpression()), !dbg !12250
  %tobool = icmp eq %struct.VEC_const_char_p_base* %vec_, null, !dbg !12251
  br label %cond.true, !dbg !12251

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !12251

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !12251

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !12251

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_const_char_p_base, %struct.VEC_const_char_p_base* %vec_, i64 0, i32 0, !dbg !12252
  store i32 0, i32* %num3, align 8, !dbg !12252
  br label %if.end, !dbg !12252

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !12251
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8** @VEC_const_char_p_gc_safe_push(%struct.VEC_const_char_p_gc** %vec_, i8* %obj_) unnamed_addr #0 !dbg !12254 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_const_char_p_gc** @optimize_args, metadata !12260, metadata !DIExpression()), !dbg !12262
  call void @llvm.dbg.value(metadata i8* %obj_, metadata !12261, metadata !DIExpression()), !dbg !12262
  %call = tail call fastcc i32 @VEC_const_char_p_gc_reserve(%struct.VEC_const_char_p_gc** nonnull @optimize_args, i32 1) #8, !dbg !12263
  %0 = load %struct.VEC_const_char_p_gc*, %struct.VEC_const_char_p_gc** @optimize_args, align 8, !dbg !12263
  %tobool = icmp eq %struct.VEC_const_char_p_gc* %0, null, !dbg !12263
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12263

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_const_char_p_gc, %struct.VEC_const_char_p_gc* %0, i64 0, i32 0, !dbg !12263
  br label %cond.end, !dbg !12263

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_const_char_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12263
  %call1 = tail call fastcc i8** @VEC_const_char_p_base_quick_push(%struct.VEC_const_char_p_base* %cond, i8* %obj_) #8, !dbg !12263
  ret i8** %call1, !dbg !12263
}

declare dso_local i8* @ggc_alloc_string(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_const_char_p_base_length(%struct.VEC_const_char_p_base* %vec_) unnamed_addr #0 !dbg !12264 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_const_char_p_base* %vec_, metadata !12270, metadata !DIExpression()), !dbg !12271
  %tobool = icmp eq %struct.VEC_const_char_p_base* %vec_, null, !dbg !12272
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12272

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_const_char_p_base, %struct.VEC_const_char_p_base* %vec_, i64 0, i32 0, !dbg !12272
  %0 = load i32, i32* %num, align 8, !dbg !12272
  br label %cond.end, !dbg !12272

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !12272
  ret i32 %cond, !dbg !12272
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @VEC_const_char_p_base_index(%struct.VEC_const_char_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !12273 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_const_char_p_base* %vec_, metadata !12277, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !12278, metadata !DIExpression()), !dbg !12279
  br label %land.end, !dbg !12280

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !12280
  %arrayidx = getelementptr inbounds %struct.VEC_const_char_p_base, %struct.VEC_const_char_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !12280
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !12280
  ret i8* %0, !dbg !12280
}

declare dso_local void @decode_options(i32, i8**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @check_function_arguments(%union.tree_node* %attrs, i32 %nargs, %union.tree_node** %argarray, %union.tree_node* %typelist) local_unnamed_addr #5 !dbg !12281 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !12285, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !12286, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata %union.tree_node** %argarray, metadata !12287, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata %union.tree_node* %typelist, metadata !12288, metadata !DIExpression()), !dbg !12289
  %0 = load i32, i32* @warn_nonnull, align 4, !dbg !12290
  %tobool = icmp eq i32 %0, 0, !dbg !12290
  br i1 %tobool, label %if.end, label %if.then, !dbg !12292

if.then:                                          ; preds = %entry
  tail call fastcc void @check_function_nonnull(%union.tree_node* %attrs, i32 %nargs, %union.tree_node** %argarray) #8, !dbg !12293
  br label %if.end, !dbg !12293

if.end:                                           ; preds = %entry, %if.then
  %1 = load i32, i32* @warn_format, align 4, !dbg !12294
  %2 = load i32, i32* @warn_missing_format_attribute, align 4, !dbg !12296
  %3 = or i32 %1, %2, !dbg !12297
  %4 = icmp eq i32 %3, 0, !dbg !12297
  br i1 %4, label %if.end4, label %if.then3, !dbg !12297

if.then3:                                         ; preds = %if.end
  tail call void @check_function_format(%union.tree_node* %attrs, i32 %nargs, %union.tree_node** %argarray) #7, !dbg !12298
  %.pre = load i32, i32* @warn_format, align 4, !dbg !12299
  br label %if.end4, !dbg !12298

if.end4:                                          ; preds = %if.end, %if.then3
  %5 = phi i32 [ %1, %if.end ], [ %.pre, %if.then3 ], !dbg !12299
  %tobool5 = icmp eq i32 %5, 0, !dbg !12299
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !12301

if.then6:                                         ; preds = %if.end4
  tail call fastcc void @check_function_sentinel(%union.tree_node* %attrs, i32 %nargs, %union.tree_node** %argarray, %union.tree_node* %typelist) #8, !dbg !12302
  br label %if.end7, !dbg !12302

if.end7:                                          ; preds = %if.end4, %if.then6
  ret void, !dbg !12303
}

; Function Attrs: nounwind uwtable
define internal fastcc void @check_function_nonnull(%union.tree_node* %attrs, i32 %nargs, %union.tree_node** %argarray) unnamed_addr #5 !dbg !12304 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !12308, metadata !DIExpression()), !dbg !12314
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !12309, metadata !DIExpression()), !dbg !12314
  call void @llvm.dbg.value(metadata %union.tree_node** %argarray, metadata !12310, metadata !DIExpression()), !dbg !12314
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !12311, metadata !DIExpression()), !dbg !12314
  %0 = sext i32 %nargs to i64, !dbg !12315
  %1 = sext i32 %nargs to i64, !dbg !12315
  br label %for.cond, !dbg !12315

for.cond:                                         ; preds = %for.inc13, %entry
  %a.0 = phi %union.tree_node* [ %attrs, %entry ], [ %8, %for.inc13 ], !dbg !12317
  call void @llvm.dbg.value(metadata %union.tree_node* %a.0, metadata !12311, metadata !DIExpression()), !dbg !12314
  %tobool = icmp eq %union.tree_node* %a.0, null, !dbg !12318
  br i1 %tobool, label %for.end14, label %for.body, !dbg !12318

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12319
  %2 = bitcast i32* %purpose to %union.tree_node**, !dbg !12319
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !12319
  %call = tail call i32 @is_attribute_p(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.183, i64 0, i64 0), %union.tree_node* %3) #7, !dbg !12323
  %tobool1 = icmp eq i32 %call, 0, !dbg !12323
  br i1 %tobool1, label %for.inc13, label %if.then, !dbg !12324

if.then:                                          ; preds = %for.body
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12325
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !12325
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !12312, metadata !DIExpression()), !dbg !12314
  call void @llvm.dbg.value(metadata i32 0, metadata !12313, metadata !DIExpression()), !dbg !12314
  %tobool5 = icmp eq %union.tree_node* %5, null, !dbg !12327
  br i1 %tobool5, label %if.then.split.us, label %if.then.if.then.split_crit_edge, !dbg !12332

if.then.if.then.split_crit_edge:                  ; preds = %if.then
  br label %for.cond3, !dbg !12332

if.then.split.us:                                 ; preds = %if.then
  br label %for.cond3.us, !dbg !12332

for.cond3.us:                                     ; preds = %for.body4.us, %if.then.split.us
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body4.us ], [ 0, %if.then.split.us ], !dbg !12333
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !12313, metadata !DIExpression()), !dbg !12314
  %cmp.us = icmp slt i64 %indvars.iv1, %1, !dbg !12334
  br i1 %cmp.us, label %for.body4.us, label %for.inc13.loopexit.us-lcssa.us, !dbg !12335

for.body4.us:                                     ; preds = %for.cond3.us
  %arrayidx.us = getelementptr inbounds %union.tree_node*, %union.tree_node** %argarray, i64 %indvars.iv1, !dbg !12336
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx.us, align 8, !dbg !12336
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !12337
  tail call void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)* nonnull @check_nonnull_arg, i8* null, %union.tree_node* %6, i64 %indvars.iv.next2) #8, !dbg !12338
  call void @llvm.dbg.value(metadata i32 undef, metadata !12313, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12314
  br label %for.cond3.us, !dbg !12339, !llvm.loop !12340

for.inc13.loopexit.us-lcssa.us:                   ; preds = %for.cond3.us
  br label %for.inc13.loopexit, !dbg !12342

for.cond3:                                        ; preds = %for.inc, %if.then.if.then.split_crit_edge
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then.if.then.split_crit_edge ], !dbg !12333
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12313, metadata !DIExpression()), !dbg !12314
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !12334
  br i1 %cmp, label %for.body4, label %for.inc13.loopexit.us-lcssa, !dbg !12335

for.body4:                                        ; preds = %for.cond3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12343
  %call6 = tail call fastcc zeroext i8 @nonnull_check_p(%union.tree_node* nonnull %5, i64 %indvars.iv.next) #8, !dbg !12344
  %tobool8 = icmp eq i8 %call6, 0, !dbg !12344
  br i1 %tobool8, label %for.inc, label %if.then9, !dbg !12345

if.then9:                                         ; preds = %for.body4
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %argarray, i64 %indvars.iv, !dbg !12336
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !12336
  tail call void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)* nonnull @check_nonnull_arg, i8* null, %union.tree_node* %7, i64 %indvars.iv.next) #8, !dbg !12338
  br label %for.inc, !dbg !12338

for.inc:                                          ; preds = %for.body4, %if.then9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12313, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12314
  br label %for.cond3, !dbg !12339, !llvm.loop !12340

for.inc13.loopexit.us-lcssa:                      ; preds = %for.cond3
  br label %for.inc13.loopexit, !dbg !12342

for.inc13.loopexit:                               ; preds = %for.inc13.loopexit.us-lcssa.us, %for.inc13.loopexit.us-lcssa
  br label %for.inc13, !dbg !12342

for.inc13:                                        ; preds = %for.inc13.loopexit, %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12342
  %8 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !12342
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !12311, metadata !DIExpression()), !dbg !12314
  br label %for.cond, !dbg !12346, !llvm.loop !12347

for.end14:                                        ; preds = %for.cond
  ret void, !dbg !12349
}

declare dso_local void @check_function_format(%union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @check_function_sentinel(%union.tree_node* %attrs, i32 %nargs, %union.tree_node** %argarray, %union.tree_node* %typelist) unnamed_addr #5 !dbg !12350 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !12352, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !12353, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata %union.tree_node** %argarray, metadata !12354, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata %union.tree_node* %typelist, metadata !12355, metadata !DIExpression()), !dbg !12365
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.188, i64 0, i64 0), %union.tree_node* %attrs) #7, !dbg !12366
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12356, metadata !DIExpression()), !dbg !12365
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !12367
  br i1 %tobool, label %cleanup.cont43, label %while.cond.preheader, !dbg !12368

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !12369

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %typelist.addr.0 = phi %union.tree_node* [ %0, %while.body ], [ %typelist, %while.cond.preheader ]
  %len.0 = phi i32 [ %inc, %while.body ], [ 0, %while.cond.preheader ], !dbg !12370
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !12357, metadata !DIExpression()), !dbg !12370
  call void @llvm.dbg.value(metadata %union.tree_node* %typelist.addr.0, metadata !12355, metadata !DIExpression()), !dbg !12365
  %tobool1 = icmp ne %union.tree_node* %typelist.addr.0, null, !dbg !12371
  %cmp = icmp slt i32 %len.0, %nargs, !dbg !12372
  %spec.select = and i1 %cmp, %tobool1, !dbg !12373
  br i1 %spec.select, label %while.body, label %while.end, !dbg !12369

while.body:                                       ; preds = %while.cond
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %typelist.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12374
  %0 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !12374
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12355, metadata !DIExpression()), !dbg !12365
  %inc = add nuw nsw i32 %len.0, 1, !dbg !12376
  call void @llvm.dbg.value(metadata i32 %inc, metadata !12357, metadata !DIExpression()), !dbg !12370
  br label %while.cond, !dbg !12369, !llvm.loop !12377

while.end:                                        ; preds = %while.cond
  %len.0.lcssa = phi i32 [ %len.0, %while.cond ], !dbg !12370
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !12357, metadata !DIExpression()), !dbg !12370
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !12357, metadata !DIExpression()), !dbg !12370
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !12357, metadata !DIExpression()), !dbg !12370
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12379
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !12379
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !12379
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !12380

if.then3:                                         ; preds = %while.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12381
  %4 = bitcast %union.tree_node** %3 to %struct.tree_int_cst**, !dbg !12381
  %5 = load %struct.tree_int_cst*, %struct.tree_int_cst** %4, align 8, !dbg !12381
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %5, i64 0, i32 1, i32 0, !dbg !12382
  %6 = load i64, i64* %low, align 8, !dbg !12382
  %conv = trunc i64 %6 to i32, !dbg !12382
  call void @llvm.dbg.value(metadata i32 %conv, metadata !12360, metadata !DIExpression()), !dbg !12370
  %phitmp = xor i32 %conv, -1, !dbg !12383
  br label %if.end, !dbg !12383

if.end:                                           ; preds = %while.end, %if.then3
  %pos.0 = phi i32 [ %phitmp, %if.then3 ], [ -1, %while.end ]
  %sub9 = add i32 %pos.0, %nargs, !dbg !12384
  %cmp10 = icmp slt i32 %sub9, %len.0.lcssa, !dbg !12386
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !12387

if.then12:                                        ; preds = %if.end
  %call13 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1208, i64 0, i64 0)) #7, !dbg !12388
  br label %cleanup, !dbg !12390

if.end14:                                         ; preds = %if.end
  %idxprom = sext i32 %sub9 to i64, !dbg !12391
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %argarray, i64 %idxprom, !dbg !12391
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !12391
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !12361, metadata !DIExpression()), !dbg !12370
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12392
  %8 = bitcast %union.tree_node** %type to i64**, !dbg !12392
  %9 = load i64*, i64** %8, align 8, !dbg !12392
  %bf.load = load i64, i64* %9, align 8, !dbg !12392
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12392
  %cmp18 = icmp eq i64 %bf.cast1, 10, !dbg !12392
  br i1 %cmp18, label %lor.lhs.false28, label %lor.lhs.false, !dbg !12392

lor.lhs.false:                                    ; preds = %if.end14
  %cmp26 = icmp eq i64 %bf.cast1, 12, !dbg !12392
  br i1 %cmp26, label %lor.lhs.false28, label %land.lhs.true, !dbg !12394

lor.lhs.false28:                                  ; preds = %lor.lhs.false, %if.end14
  %call29 = tail call i32 @integer_zerop(%union.tree_node* %7) #7, !dbg !12395
  %tobool30 = icmp eq i32 %call29, 0, !dbg !12395
  br i1 %tobool30, label %land.lhs.true, label %cleanup, !dbg !12396

land.lhs.true:                                    ; preds = %lor.lhs.false28, %lor.lhs.false
  %10 = load i32, i32* @warn_strict_null_sentinel, align 4, !dbg !12397
  %tobool31 = icmp ne i32 %10, 0, !dbg !12397
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 54), align 16, !dbg !12398
  %cmp33 = icmp ne %union.tree_node* %11, %7, !dbg !12399
  %or.cond = or i1 %tobool31, %cmp33, !dbg !12400
  br i1 %or.cond, label %if.then35, label %cleanup, !dbg !12400

if.then35:                                        ; preds = %land.lhs.true
  %call36 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 91, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1209, i64 0, i64 0)) #7, !dbg !12401
  br label %cleanup, !dbg !12401

cleanup:                                          ; preds = %lor.lhs.false28, %if.then35, %land.lhs.true, %if.then12
  ret void

cleanup.cont43:                                   ; preds = %entry
  ret void, !dbg !12402
}

; Function Attrs: nounwind uwtable
define dso_local void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)* %callback, i8* %ctx, %union.tree_node* %param, i64 %param_num) local_unnamed_addr #5 !dbg !12403 {
entry:
  %iter = alloca %struct.call_expr_arg_iterator_d, align 8
  call void @llvm.dbg.value(metadata void (i8*, %union.tree_node*, i64)* %callback, metadata !12410, metadata !DIExpression()), !dbg !12428
  call void @llvm.dbg.value(metadata i8* %ctx, metadata !12411, metadata !DIExpression()), !dbg !12428
  call void @llvm.dbg.value(metadata %union.tree_node* %param, metadata !12412, metadata !DIExpression()), !dbg !12428
  call void @llvm.dbg.value(metadata i64 %param_num, metadata !12413, metadata !DIExpression()), !dbg !12428
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %param, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12429
  %bf.load = load i64, i64* %0, align 8, !dbg !12429
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12429
  %cmp = icmp eq i64 %bf.cast1, 116, !dbg !12429
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !12429

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 113, !dbg !12429
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !12431

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %param, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12432
  %1 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !12432
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !12432
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 6, !dbg !12432
  %bf.load7 = load i32, i32* %precision, align 4, !dbg !12432
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %param, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12433
  %3 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !12433
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !12433
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !12433
  %5 = bitcast %union.tree_node** %type10 to %struct.tree_type**, !dbg !12433
  %6 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !12433
  %precision12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 6, !dbg !12433
  %bf.load13 = load i32, i32* %precision12, align 4, !dbg !12433
  %7 = xor i32 %bf.load7, %bf.load13, !dbg !12434
  %8 = and i32 %7, 1023, !dbg !12434
  %cmp15 = icmp eq i32 %8, 0, !dbg !12434
  br i1 %cmp15, label %if.then, label %if.end, !dbg !12435

if.then:                                          ; preds = %land.lhs.true
  %9 = bitcast %struct.tree_common* %4 to %union.tree_node*, !dbg !12435
  tail call void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)* %callback, i8* %ctx, %union.tree_node* %9, i64 %param_num) #8, !dbg !12436
  br label %return, !dbg !12438

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %cmp23 = icmp eq i64 %bf.cast1, 59, !dbg !12439
  br i1 %cmp23, label %if.then24, label %if.end68, !dbg !12440

if.then24:                                        ; preds = %if.end
  %operands27 = getelementptr inbounds %union.tree_node, %union.tree_node* %param, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12441
  %arrayidx28 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands27, i64 1, !dbg !12441
  %10 = bitcast %union.tree_node** %arrayidx28 to %struct.tree_common**, !dbg !12441
  %11 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !12441
  %type30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !12441
  %12 = bitcast %union.tree_node** %type30 to %struct.tree_common**, !dbg !12441
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !12441
  %type32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !12441
  %14 = bitcast %union.tree_node** %type32 to %struct.tree_type**, !dbg !12441
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !12441
  call void @llvm.dbg.value(metadata i8 0, metadata !12418, metadata !DIExpression()), !dbg !12442
  %attributes = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 4, !dbg !12443
  %16 = bitcast %struct.call_expr_arg_iterator_d* %iter to i8*, !dbg !12444
  br label %for.cond, !dbg !12445

for.cond:                                         ; preds = %for.inc60, %if.then24
  %attrs.0.in = phi %union.tree_node** [ %attributes, %if.then24 ], [ %chain, %for.inc60 ]
  %found_format_arg.0 = phi i8 [ 0, %if.then24 ], [ %found_format_arg.2, %for.inc60 ], !dbg !12442
  %attrs.0 = load %union.tree_node*, %union.tree_node** %attrs.0.in, align 8, !dbg !12446
  call void @llvm.dbg.value(metadata i8 %found_format_arg.0, metadata !12418, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0, metadata !12417, metadata !DIExpression()), !dbg !12442
  %tobool = icmp eq %union.tree_node* %attrs.0, null, !dbg !12447
  br i1 %tobool, label %for.end62, label %for.body, !dbg !12447

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %attrs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12448
  %17 = bitcast i32* %purpose to %union.tree_node**, !dbg !12448
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !12448
  %call = call i32 @is_attribute_p(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.198, i64 0, i64 0), %union.tree_node* %18) #7, !dbg !12449
  %tobool34 = icmp eq i32 %call, 0, !dbg !12449
  br i1 %tobool34, label %for.inc60, label %if.then35, !dbg !12450

if.then35:                                        ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #6, !dbg !12451
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %attrs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12452
  %20 = bitcast %union.tree_node** %19 to %struct.tree_list**, !dbg !12452
  %21 = load %struct.tree_list*, %struct.tree_list** %20, align 8, !dbg !12452
  %value38 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %21, i64 0, i32 2, !dbg !12452
  %22 = load %union.tree_node*, %union.tree_node** %value38, align 8, !dbg !12452
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !12424, metadata !DIExpression()), !dbg !12444
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12453
  %bf.load40 = load i64, i64* %23, align 8, !dbg !12453
  %bf.cast426 = and i64 %bf.load40, 65535, !dbg !12453
  %cmp43 = icmp eq i64 %bf.cast426, 23, !dbg !12453
  br i1 %cmp43, label %land.lhs.true44, label %cond.true, !dbg !12453

land.lhs.true44:                                  ; preds = %if.then35
  %int_cst45 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12453
  %high = getelementptr inbounds i32, i32* %int_cst45, i64 2, !dbg !12453
  %24 = bitcast i32* %high to i64*, !dbg !12453
  %25 = load i64, i64* %24, align 8, !dbg !12453
  %tobool46 = icmp eq i64 %25, 0, !dbg !12453
  br i1 %tobool46, label %cond.end, label %cond.true, !dbg !12453

cond.true:                                        ; preds = %land.lhs.true44, %if.then35
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 7950, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !12453
  br label %cond.end, !dbg !12453

cond.end:                                         ; preds = %land.lhs.true44, %cond.true
  %int_cst48 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12454
  %low = bitcast i32* %int_cst48 to i64*, !dbg !12454
  %26 = load i64, i64* %low, align 8, !dbg !12454
  %conv = trunc i64 %26 to i32, !dbg !12454
  call void @llvm.dbg.value(metadata i32 %conv, metadata !12425, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !12427, metadata !DIExpression(DW_OP_deref)), !dbg !12444
  %call49 = call fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %param, %struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !12455
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !12419, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.value(metadata i32 1, metadata !12426, metadata !DIExpression()), !dbg !12444
  br label %for.cond50, !dbg !12457

for.cond50:                                       ; preds = %for.inc, %cond.end
  %inner_arg.0 = phi %union.tree_node* [ %call49, %cond.end ], [ %call58, %for.inc ], !dbg !12458
  %i.0 = phi i32 [ 1, %cond.end ], [ %inc, %for.inc ], !dbg !12458
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !12426, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_arg.0, metadata !12419, metadata !DIExpression()), !dbg !12444
  %cmp51 = icmp eq %union.tree_node* %inner_arg.0, null, !dbg !12459
  br i1 %cmp51, label %for.end.loopexit, label %for.body53, !dbg !12461

for.body53:                                       ; preds = %for.cond50
  %cmp54 = icmp eq i32 %i.0, %conv, !dbg !12462
  br i1 %cmp54, label %if.then56, label %for.inc, !dbg !12464

if.then56:                                        ; preds = %for.body53
  %inner_arg.0.lcssa10 = phi %union.tree_node* [ %inner_arg.0, %for.body53 ], !dbg !12458
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_arg.0.lcssa10, metadata !12419, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_arg.0.lcssa10, metadata !12419, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_arg.0.lcssa10, metadata !12419, metadata !DIExpression()), !dbg !12444
  call void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)* %callback, i8* %ctx, %union.tree_node* nonnull %inner_arg.0.lcssa10, i64 %param_num) #8, !dbg !12465
  call void @llvm.dbg.value(metadata i8 1, metadata !12418, metadata !DIExpression()), !dbg !12442
  br label %for.end, !dbg !12467

for.inc:                                          ; preds = %for.body53
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !12427, metadata !DIExpression(DW_OP_deref)), !dbg !12444
  %call58 = call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !12468
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !12419, metadata !DIExpression()), !dbg !12444
  %inc = add nuw nsw i32 %i.0, 1, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %inc, metadata !12426, metadata !DIExpression()), !dbg !12444
  br label %for.cond50, !dbg !12470, !llvm.loop !12471

for.end.loopexit:                                 ; preds = %for.cond50
  br label %for.end, !dbg !12473

for.end:                                          ; preds = %for.end.loopexit, %if.then56
  %found_format_arg.1 = phi i8 [ 1, %if.then56 ], [ %found_format_arg.0, %for.end.loopexit ], !dbg !12442
  call void @llvm.dbg.value(metadata i8 %found_format_arg.1, metadata !12418, metadata !DIExpression()), !dbg !12442
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #6, !dbg !12473
  br label %for.inc60, !dbg !12474

for.inc60:                                        ; preds = %for.body, %for.end
  %found_format_arg.2 = phi i8 [ %found_format_arg.1, %for.end ], [ %found_format_arg.0, %for.body ], !dbg !12442
  call void @llvm.dbg.value(metadata i8 %found_format_arg.2, metadata !12418, metadata !DIExpression()), !dbg !12442
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %attrs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12475
  br label %for.cond, !dbg !12476, !llvm.loop !12477

for.end62:                                        ; preds = %for.cond
  %found_format_arg.0.lcssa = phi i8 [ %found_format_arg.0, %for.cond ], !dbg !12442
  call void @llvm.dbg.value(metadata i8 %found_format_arg.0.lcssa, metadata !12418, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.value(metadata i8 %found_format_arg.0.lcssa, metadata !12418, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.value(metadata i8 %found_format_arg.0.lcssa, metadata !12418, metadata !DIExpression()), !dbg !12442
  %tobool63 = icmp eq i8 %found_format_arg.0.lcssa, 0, !dbg !12479
  br i1 %tobool63, label %for.end62.if.end68_crit_edge, label %return

for.end62.if.end68_crit_edge:                     ; preds = %for.end62
  %bf.load70.pre = load i64, i64* %0, align 8, !dbg !12481
  br label %if.end68

if.end68:                                         ; preds = %for.end62.if.end68_crit_edge, %if.end
  %bf.load70 = phi i64 [ %bf.load70.pre, %for.end62.if.end68_crit_edge ], [ %bf.load, %if.end ], !dbg !12481
  %bf.cast725 = and i64 %bf.load70, 65535, !dbg !12483
  %cmp73 = icmp eq i64 %bf.cast725, 56, !dbg !12483
  br i1 %cmp73, label %if.then75, label %if.end82, !dbg !12484

if.then75:                                        ; preds = %if.end68
  %operands77 = getelementptr inbounds %union.tree_node, %union.tree_node* %param, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12485
  %arrayidx78 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands77, i64 1, !dbg !12485
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx78, align 8, !dbg !12485
  call void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)* %callback, i8* %ctx, %union.tree_node* %27, i64 %param_num) #8, !dbg !12487
  %arrayidx81 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands77, i64 2, !dbg !12488
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx81, align 8, !dbg !12488
  call void @check_function_arguments_recurse(void (i8*, %union.tree_node*, i64)* %callback, i8* %ctx, %union.tree_node* %28, i64 %param_num) #8, !dbg !12489
  br label %return, !dbg !12490

if.end82:                                         ; preds = %if.end68
  call void %callback(i8* %ctx, %union.tree_node* %param, i64 %param_num) #7, !dbg !12491
  br label %return, !dbg !12492

return:                                           ; preds = %for.end62, %if.end82, %if.then75, %if.then
  ret void, !dbg !12492
}

declare dso_local i32 @is_attribute_p(i8*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !12493 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !12498, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !12499, metadata !DIExpression()), !dbg !12500
  tail call fastcc void @init_call_expr_arg_iterator(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) #8, !dbg !12501
  %call = tail call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* %iter) #8, !dbg !12502
  ret %union.tree_node* %call, !dbg !12503
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !12504 {
entry:
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !12508, metadata !DIExpression()), !dbg !12510
  %i = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !12511
  %0 = load i32, i32* %i, align 4, !dbg !12511
  %n = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !12513
  %1 = load i32, i32* %n, align 8, !dbg !12513
  %cmp = icmp slt i32 %0, %1, !dbg !12514
  br i1 %cmp, label %if.end, label %cleanup, !dbg !12515

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.call_expr_arg_iterator_d* %iter to %struct.tree_exp**, !dbg !12516
  %3 = load %struct.tree_exp*, %struct.tree_exp** %2, align 8, !dbg !12516
  %add = add nsw i32 %0, 3, !dbg !12516
  %idxprom = sext i32 %add to i64, !dbg !12516
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %3, i64 0, i32 3, i64 %idxprom, !dbg !12516
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !12516
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !12509, metadata !DIExpression()), !dbg !12510
  %inc = add nsw i32 %0, 1, !dbg !12517
  store i32 %inc, i32* %i, align 4, !dbg !12517
  br label %cleanup, !dbg !12518

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %4, %if.end ], [ null, %entry ], !dbg !12510
  ret %union.tree_node* %retval.0, !dbg !12519
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @check_builtin_function_arguments(%union.tree_node* %fndecl, i32 %nargs, %union.tree_node** %args) local_unnamed_addr #5 !dbg !12520 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !12524, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !12525, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata %union.tree_node** %args, metadata !12526, metadata !DIExpression()), !dbg !12535
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !12536
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !12536
  %bf.clear = and i32 %bf.load, 6144, !dbg !12536
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !12536
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !12538

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i32 %bf.clear, 6144, !dbg !12539
  br i1 %cmp6, label %if.end, label %return, !dbg !12540

if.end:                                           ; preds = %lor.lhs.false
  %bf.clear9 = and i32 %bf.load, 2047, !dbg !12541
  switch i32 %bf.clear9, label %return [
    i32 428, label %sw.bb
    i32 467, label %sw.bb10
    i32 469, label %sw.bb10
    i32 468, label %sw.bb10
    i32 475, label %sw.bb10
    i32 481, label %sw.bb10
    i32 482, label %sw.bb19
    i32 483, label %sw.bb19
    i32 484, label %sw.bb19
    i32 485, label %sw.bb19
    i32 486, label %sw.bb19
    i32 487, label %sw.bb19
    i32 466, label %sw.bb51
  ], !dbg !12542

sw.bb:                                            ; preds = %if.end
  %call = tail call fastcc zeroext i8 @builtin_function_validate_nargs(%union.tree_node* %fndecl, i32 %nargs, i32 1) #8, !dbg !12543
  br label %return, !dbg !12544

sw.bb10:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end
  %call11 = tail call fastcc zeroext i8 @builtin_function_validate_nargs(%union.tree_node* %fndecl, i32 %nargs, i32 1) #8, !dbg !12545
  %tobool = icmp eq i8 %call11, 0, !dbg !12545
  br i1 %tobool, label %return, label %if.then12, !dbg !12547

if.then12:                                        ; preds = %sw.bb10
  %0 = bitcast %union.tree_node** %args to %struct.tree_common**, !dbg !12548
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !12548
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !12548
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !12548
  %3 = load i64*, i64** %2, align 8, !dbg !12548
  %bf.load13 = load i64, i64* %3, align 8, !dbg !12548
  %bf.cast5 = and i64 %bf.load13, 65535, !dbg !12551
  %cmp15 = icmp eq i64 %bf.cast5, 9, !dbg !12551
  br i1 %cmp15, label %return, label %if.then16, !dbg !12552

if.then16:                                        ; preds = %if.then12
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.368, i64 0, i64 0), %union.tree_node* %fndecl) #7, !dbg !12553
  br label %return, !dbg !12555

sw.bb19:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %call20 = tail call fastcc zeroext i8 @builtin_function_validate_nargs(%union.tree_node* %fndecl, i32 %nargs, i32 2) #8, !dbg !12556
  %tobool21 = icmp eq i8 %call20, 0, !dbg !12556
  br i1 %tobool21, label %return, label %if.then22, !dbg !12557

if.then22:                                        ; preds = %sw.bb19
  %4 = bitcast %union.tree_node** %args to %struct.tree_common**, !dbg !12558
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !12558
  %type25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !12558
  %6 = bitcast %union.tree_node** %type25 to i64**, !dbg !12558
  %7 = load i64*, i64** %6, align 8, !dbg !12558
  %bf.load27 = load i64, i64* %7, align 8, !dbg !12558
  %8 = trunc i64 %bf.load27 to i32, !dbg !12558
  %bf.cast29 = and i32 %8, 65535, !dbg !12558
  call void @llvm.dbg.value(metadata i32 %bf.cast29, metadata !12527, metadata !DIExpression()), !dbg !12559
  %arrayidx30 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 1, !dbg !12560
  %9 = bitcast %union.tree_node** %arrayidx30 to %struct.tree_common**, !dbg !12560
  %10 = load %struct.tree_common*, %struct.tree_common** %9, align 8, !dbg !12560
  %type32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !12560
  %11 = bitcast %union.tree_node** %type32 to i64**, !dbg !12560
  %12 = load i64*, i64** %11, align 8, !dbg !12560
  %bf.load34 = load i64, i64* %12, align 8, !dbg !12560
  %13 = trunc i64 %bf.load34 to i32, !dbg !12560
  %bf.cast36 = and i32 %13, 65535, !dbg !12560
  call void @llvm.dbg.value(metadata i32 %bf.cast36, metadata !12531, metadata !DIExpression()), !dbg !12559
  %cmp37 = icmp eq i32 %bf.cast29, 9, !dbg !12561
  %cmp38 = icmp eq i32 %bf.cast36, 9, !dbg !12563
  %or.cond = and i1 %cmp37, %cmp38, !dbg !12564
  br i1 %or.cond, label %return, label %lor.lhs.false39, !dbg !12564

lor.lhs.false39:                                  ; preds = %if.then22
  %cmp42 = icmp eq i32 %bf.cast36, 8, !dbg !12565
  %or.cond1 = and i1 %cmp37, %cmp42, !dbg !12566
  br i1 %or.cond1, label %return, label %lor.lhs.false43, !dbg !12566

lor.lhs.false43:                                  ; preds = %lor.lhs.false39
  %cmp44 = icmp eq i32 %bf.cast29, 8, !dbg !12567
  %or.cond2 = and i1 %cmp44, %cmp38, !dbg !12568
  br i1 %or.cond2, label %return, label %if.then47, !dbg !12568

if.then47:                                        ; preds = %lor.lhs.false43
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.369, i64 0, i64 0), %union.tree_node* %fndecl) #7, !dbg !12569
  br label %return, !dbg !12571

sw.bb51:                                          ; preds = %if.end
  %call52 = tail call fastcc zeroext i8 @builtin_function_validate_nargs(%union.tree_node* %fndecl, i32 %nargs, i32 6) #8, !dbg !12572
  %tobool53 = icmp eq i8 %call52, 0, !dbg !12572
  br i1 %tobool53, label %return, label %for.cond.preheader, !dbg !12573

for.cond.preheader:                               ; preds = %sw.bb51
  br label %for.cond, !dbg !12574

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !12576
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12532, metadata !DIExpression()), !dbg !12577
  %exitcond = icmp eq i64 %indvars.iv, 5, !dbg !12578
  br i1 %exitcond, label %for.end, label %for.body, !dbg !12574

for.body:                                         ; preds = %for.cond
  %arrayidx56 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 %indvars.iv, !dbg !12580
  %14 = bitcast %union.tree_node** %arrayidx56 to i64**, !dbg !12580
  %15 = load i64*, i64** %14, align 8, !dbg !12580
  %bf.load58 = load i64, i64* %15, align 8, !dbg !12580
  %bf.cast604 = and i64 %bf.load58, 65535, !dbg !12582
  %cmp61 = icmp eq i64 %bf.cast604, 23, !dbg !12582
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12583
  br i1 %cmp61, label %for.cond, label %if.then62, !dbg !12584, !llvm.loop !12585

if.then62:                                        ; preds = %for.body
  %add.lcssa.wide = phi i64 [ %indvars.iv.next, %for.body ]
  %16 = trunc i64 %add.lcssa.wide to i32, !dbg !12587
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.370, i64 0, i64 0), i32 %16, %union.tree_node* %fndecl) #7, !dbg !12587
  br label %return, !dbg !12589

for.end:                                          ; preds = %for.cond
  %arrayidx64 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 5, !dbg !12590
  %17 = bitcast %union.tree_node** %arrayidx64 to %struct.tree_common**, !dbg !12590
  %18 = load %struct.tree_common*, %struct.tree_common** %17, align 8, !dbg !12590
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !12590
  %19 = bitcast %union.tree_node** %type66 to i64**, !dbg !12590
  %20 = load i64*, i64** %19, align 8, !dbg !12590
  %bf.load68 = load i64, i64* %20, align 8, !dbg !12590
  %bf.cast703 = and i64 %bf.load68, 65535, !dbg !12592
  %cmp71 = icmp eq i64 %bf.cast703, 9, !dbg !12592
  br i1 %cmp71, label %return, label %if.then72, !dbg !12593

if.then72:                                        ; preds = %for.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.368, i64 0, i64 0), %union.tree_node* %fndecl) #7, !dbg !12594
  br label %return, !dbg !12596

return:                                           ; preds = %if.then12, %sw.bb10, %sw.bb19, %for.end, %sw.bb51, %lor.lhs.false, %entry, %if.end, %if.then62, %if.then72, %if.then47, %lor.lhs.false43, %lor.lhs.false39, %if.then22, %if.then16, %sw.bb
  %retval.2 = phi i8 [ 0, %if.then16 ], [ %call, %sw.bb ], [ 1, %lor.lhs.false ], [ 1, %entry ], [ 1, %if.then12 ], [ 0, %sw.bb10 ], [ 0, %if.then47 ], [ 1, %lor.lhs.false43 ], [ 1, %lor.lhs.false39 ], [ 1, %if.then22 ], [ 0, %sw.bb19 ], [ 0, %if.then62 ], [ 0, %if.then72 ], [ 1, %for.end ], [ 0, %sw.bb51 ], [ 1, %if.end ], !dbg !12535
  ret i8 %retval.2, !dbg !12597
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @builtin_function_validate_nargs(%union.tree_node* %fndecl, i32 %nargs, i32 %required) unnamed_addr #5 !dbg !12598 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !12602, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !12603, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata i32 %required, metadata !12604, metadata !DIExpression()), !dbg !12605
  %cmp = icmp slt i32 %nargs, %required, !dbg !12606
  br i1 %cmp, label %if.then, label %if.else, !dbg !12608

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @input_location, align 4, !dbg !12609
  tail call void (i32, i8*, ...) @error_at(i32 %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1210, i64 0, i64 0), %union.tree_node* %fndecl) #7, !dbg !12611
  br label %return, !dbg !12612

if.else:                                          ; preds = %entry
  %cmp1 = icmp sgt i32 %nargs, %required, !dbg !12613
  br i1 %cmp1, label %if.then2, label %return, !dbg !12615

if.then2:                                         ; preds = %if.else
  %1 = load i32, i32* @input_location, align 4, !dbg !12616
  tail call void (i32, i8*, ...) @error_at(i32 %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1211, i64 0, i64 0), %union.tree_node* %fndecl) #7, !dbg !12618
  br label %return, !dbg !12619

return:                                           ; preds = %if.else, %if.then2, %if.then
  %retval.0 = phi i8 [ 0, %if.then ], [ 0, %if.then2 ], [ 1, %if.else ], !dbg !12605
  ret i8 %retval.0, !dbg !12620
}

; Function Attrs: nounwind uwtable
define dso_local i32 @field_decl_cmp(i8* %x_p, i8* %y_p) local_unnamed_addr #5 !dbg !12621 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !12623, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i8* %y_p, metadata !12624, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !12625, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i8* %y_p, metadata !12627, metadata !DIExpression()), !dbg !12628
  %0 = bitcast i8* %x_p to %struct.tree_decl_minimal**, !dbg !12629
  %1 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %0, align 8, !dbg !12629
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 3, !dbg !12629
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !12629
  %3 = bitcast i8* %y_p to %struct.tree_decl_minimal**, !dbg !12631
  %4 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %3, align 8, !dbg !12631
  %name2 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %4, i64 0, i32 3, !dbg !12631
  %5 = load %union.tree_node*, %union.tree_node** %name2, align 8, !dbg !12631
  %cmp = icmp eq %union.tree_node* %2, %5, !dbg !12632
  br i1 %cmp, label %if.then, label %if.end, !dbg !12633

if.then:                                          ; preds = %entry
  %6 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 0, i32 0, i32 0, !dbg !12633
  %7 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %4, i64 0, i32 0, i32 0, i32 0, !dbg !12633
  call void @llvm.dbg.value(metadata i8* %y_p, metadata !12627, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !12625, metadata !DIExpression()), !dbg !12628
  %bf.load = load i64, i64* %7, align 8, !dbg !12634
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12635
  %cmp3 = icmp eq i64 %bf.cast1, 35, !dbg !12635
  %conv = zext i1 %cmp3 to i32, !dbg !12635
  %bf.load5 = load i64, i64* %6, align 8, !dbg !12636
  %bf.cast72 = and i64 %bf.load5, 65535, !dbg !12637
  %cmp8 = icmp eq i64 %bf.cast72, 35, !dbg !12637
  %conv9 = zext i1 %cmp8 to i32, !dbg !12637
  %sub = sub nsw i32 %conv, %conv9, !dbg !12638
  br label %cleanup, !dbg !12639

if.end:                                           ; preds = %entry
  %cmp12 = icmp eq %union.tree_node* %2, null, !dbg !12640
  br i1 %cmp12, label %cleanup, label %if.end15, !dbg !12642

if.end15:                                         ; preds = %if.end
  %cmp18 = icmp eq %union.tree_node* %5, null, !dbg !12643
  br i1 %cmp18, label %cleanup, label %if.end21, !dbg !12645

if.end21:                                         ; preds = %if.end15
  %cmp26 = icmp ult %union.tree_node* %2, %5, !dbg !12646
  %. = select i1 %cmp26, i32 -1, i32 1, !dbg !12628
  br label %cleanup, !dbg !12628

cleanup:                                          ; preds = %if.end21, %if.end15, %if.end, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ -1, %if.end ], [ 1, %if.end15 ], [ %., %if.end21 ], !dbg !12628
  ret i32 %retval.0, !dbg !12648
}

; Function Attrs: nounwind uwtable
define dso_local void @resort_sorted_fields(i8* %obj, i8* %orig_obj, void (i8*, i8*)* %new_value, i8* %cookie) local_unnamed_addr #5 !dbg !12649 {
entry:
  call void @llvm.dbg.value(metadata i8* %obj, metadata !12653, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.value(metadata i8* %orig_obj, metadata !12654, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %new_value, metadata !12655, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !12656, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.value(metadata i8* %obj, metadata !12657, metadata !DIExpression()), !dbg !12658
  store void (i8*, i8*)* %new_value, void (i8*, i8*)** @resort_data.0, align 8, !dbg !12659
  store i8* %cookie, i8** @resort_data.1, align 8, !dbg !12660
  %elts = getelementptr inbounds i8, i8* %obj, i64 8, !dbg !12661
  %len = bitcast i8* %obj to i32*, !dbg !12662
  %0 = load i32, i32* %len, align 8, !dbg !12662
  %conv = sext i32 %0 to i64, !dbg !12663
  tail call void @spec_qsort(i8* nonnull %elts, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @resort_field_decl_cmp) #7, !dbg !12664
  ret void, !dbg !12665
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @resort_field_decl_cmp(i8* %x_p, i8* %y_p) #5 !dbg !12666 {
entry:
  %d1 = alloca %union.tree_node*, align 8
  %d2 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !12668, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i8* %y_p, metadata !12669, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !12670, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i8* %y_p, metadata !12671, metadata !DIExpression()), !dbg !12675
  %0 = bitcast i8* %x_p to %struct.tree_decl_minimal**, !dbg !12676
  %1 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %0, align 8, !dbg !12676
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 3, !dbg !12676
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !12676
  %3 = bitcast i8* %y_p to %struct.tree_decl_minimal**, !dbg !12678
  %4 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %3, align 8, !dbg !12678
  %name2 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %4, i64 0, i32 3, !dbg !12678
  %5 = load %union.tree_node*, %union.tree_node** %name2, align 8, !dbg !12678
  %cmp = icmp eq %union.tree_node* %2, %5, !dbg !12679
  %6 = ptrtoint %union.tree_node* %2 to i64, !dbg !12680
  %7 = ptrtoint %union.tree_node* %5 to i64, !dbg !12680
  br i1 %cmp, label %if.then, label %if.end, !dbg !12680

if.then:                                          ; preds = %entry
  %8 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 0, i32 0, i32 0, !dbg !12680
  %9 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %4, i64 0, i32 0, i32 0, i32 0, !dbg !12680
  call void @llvm.dbg.value(metadata i8* %y_p, metadata !12671, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !12670, metadata !DIExpression()), !dbg !12675
  %bf.load = load i64, i64* %9, align 8, !dbg !12681
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12682
  %cmp3 = icmp eq i64 %bf.cast1, 35, !dbg !12682
  %conv = zext i1 %cmp3 to i32, !dbg !12682
  %bf.load5 = load i64, i64* %8, align 8, !dbg !12683
  %bf.cast72 = and i64 %bf.load5, 65535, !dbg !12684
  %cmp8 = icmp eq i64 %bf.cast72, 35, !dbg !12684
  %conv9 = zext i1 %cmp8 to i32, !dbg !12684
  %sub = sub nsw i32 %conv, %conv9, !dbg !12685
  br label %cleanup31, !dbg !12686

if.end:                                           ; preds = %entry
  %cmp12 = icmp eq %union.tree_node* %2, null, !dbg !12687
  br i1 %cmp12, label %cleanup31, label %if.end15, !dbg !12689

if.end15:                                         ; preds = %if.end
  %cmp18 = icmp eq %union.tree_node* %5, null, !dbg !12690
  br i1 %cmp18, label %cleanup31, label %if.end21, !dbg !12692

if.end21:                                         ; preds = %if.end15
  %10 = bitcast %union.tree_node** %d1 to i8*, !dbg !12693
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !12693
  %11 = bitcast %union.tree_node** %d1 to i64*, !dbg !12694
  store i64 %6, i64* %11, align 8, !dbg !12694
  %12 = bitcast %union.tree_node** %d2 to i8*, !dbg !12695
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6, !dbg !12695
  %13 = bitcast %union.tree_node** %d2 to i64*, !dbg !12696
  store i64 %7, i64* %13, align 8, !dbg !12696
  %14 = load void (i8*, i8*)*, void (i8*, i8*)** @resort_data.0, align 8, !dbg !12697
  %15 = load i8*, i8** @resort_data.1, align 8, !dbg !12698
  call void %14(i8* nonnull %10, i8* %15) #7, !dbg !12699
  %16 = load void (i8*, i8*)*, void (i8*, i8*)** @resort_data.0, align 8, !dbg !12700
  %17 = load i8*, i8** @resort_data.1, align 8, !dbg !12701
  call void %16(i8* nonnull %12, i8* %17) #7, !dbg !12702
  %18 = load %union.tree_node*, %union.tree_node** %d1, align 8, !dbg !12703
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !12672, metadata !DIExpression()), !dbg !12705
  %19 = load %union.tree_node*, %union.tree_node** %d2, align 8, !dbg !12706
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !12674, metadata !DIExpression()), !dbg !12705
  %cmp26 = icmp ult %union.tree_node* %18, %19, !dbg !12707
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6, !dbg !12708
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !12708
  %spec.select = select i1 %cmp26, i32 -1, i32 1
  ret i32 %spec.select

cleanup31:                                        ; preds = %if.end15, %if.end, %if.then
  %retval.1 = phi i32 [ %sub, %if.then ], [ -1, %if.end ], [ 1, %if.end15 ], !dbg !12675
  ret i32 %retval.1, !dbg !12709
}

; Function Attrs: nounwind uwtable
define dso_local void @c_parse_error(i8* %gmsgid, i32 %token_type, %union.tree_node* %value, i8 zeroext %token_flags) local_unnamed_addr #5 !dbg !12710 {
entry:
  call void @llvm.dbg.value(metadata i8* %gmsgid, metadata !12714, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i32 %token_type, metadata !12715, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !12716, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i8 %token_flags, metadata !12717, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i8* null, metadata !12718, metadata !DIExpression()), !dbg !12724
  switch i32 %token_type, label %if.else56 [
    i32 22, label %if.then
    i32 56, label %if.then7
    i32 57, label %if.then7
    i32 58, label %if.then7
    i32 59, label %if.then7
    i32 61, label %if.then34
    i32 62, label %if.then34
    i32 63, label %if.then34
    i32 64, label %if.then34
    i32 65, label %if.then34
    i32 55, label %if.then39
    i32 53, label %if.then44
    i32 70, label %if.then49
    i32 71, label %if.then54
  ], !dbg !12725

if.then:                                          ; preds = %entry
  %call = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.371, i64 0, i64 0), i32 17) #8, !dbg !12726
  call void @llvm.dbg.value(metadata i8* %call, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end70, !dbg !12727

if.then7:                                         ; preds = %entry, %entry, %entry, %entry
  %int_cst8 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12728
  %low = bitcast i32* %int_cst8 to i64*, !dbg !12728
  %0 = load i64, i64* %low, align 8, !dbg !12728
  %conv = trunc i64 %0 to i32, !dbg !12728
  call void @llvm.dbg.value(metadata i32 %conv, metadata !12719, metadata !DIExpression()), !dbg !12729
  switch i32 %token_type, label %sw.epilog [
    i32 57, label %sw.bb
    i32 58, label %sw.bb9
    i32 59, label %sw.bb10
  ], !dbg !12730

sw.bb:                                            ; preds = %if.then7
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.372, i64 0, i64 0), metadata !12723, metadata !DIExpression()), !dbg !12729
  br label %sw.epilog, !dbg !12731

sw.bb9:                                           ; preds = %if.then7
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.373, i64 0, i64 0), metadata !12723, metadata !DIExpression()), !dbg !12729
  br label %sw.epilog, !dbg !12733

sw.bb10:                                          ; preds = %if.then7
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.374, i64 0, i64 0), metadata !12723, metadata !DIExpression()), !dbg !12729
  br label %sw.epilog, !dbg !12734

sw.epilog:                                        ; preds = %if.then7, %sw.bb10, %sw.bb9, %sw.bb
  %prefix.0 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.374, i64 0, i64 0), %sw.bb10 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.373, i64 0, i64 0), %sw.bb9 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.372, i64 0, i64 0), %sw.bb ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.201, i64 0, i64 0), %if.then7 ], !dbg !12735
  call void @llvm.dbg.value(metadata i8* %prefix.0, metadata !12723, metadata !DIExpression()), !dbg !12729
  %cmp11 = icmp ult i32 %conv, 256, !dbg !12736
  br i1 %cmp11, label %land.lhs.true, label %if.else17, !dbg !12738

land.lhs.true:                                    ; preds = %sw.epilog
  %and = and i64 %0, 255, !dbg !12739
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %and, !dbg !12739
  %1 = load i16, i16* %arrayidx, align 2, !dbg !12739
  %2 = and i16 %1, 172, !dbg !12739
  %tobool = icmp eq i16 %2, 0, !dbg !12739
  br i1 %tobool, label %if.else17, label %if.then15, !dbg !12740

if.then15:                                        ; preds = %land.lhs.true
  %call16 = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.375, i64 0, i64 0), i32 15) #8, !dbg !12741
  call void @llvm.dbg.value(metadata i8* %call16, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end, !dbg !12742

if.else17:                                        ; preds = %land.lhs.true, %sw.epilog
  %call18 = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.376, i64 0, i64 0), i32 17) #8, !dbg !12743
  call void @llvm.dbg.value(metadata i8* %call18, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end

if.end:                                           ; preds = %if.else17, %if.then15
  %message.0 = phi i8* [ %call16, %if.then15 ], [ %call18, %if.else17 ], !dbg !12744
  call void @llvm.dbg.value(metadata i8* %message.0, metadata !12718, metadata !DIExpression()), !dbg !12724
  tail call void (i8*, ...) @error(i8* %message.0, i8* %prefix.0, i32 %conv) #7, !dbg !12745
  tail call void @free(i8* %message.0) #7, !dbg !12746
  call void @llvm.dbg.value(metadata i8* null, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end70, !dbg !12747

if.then34:                                        ; preds = %entry, %entry, %entry, %entry, %entry
  %call35 = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.377, i64 0, i64 0), i32 24) #8, !dbg !12748
  call void @llvm.dbg.value(metadata i8* %call35, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end70, !dbg !12750

if.then39:                                        ; preds = %entry
  %call40 = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.378, i64 0, i64 0), i32 25) #8, !dbg !12751
  call void @llvm.dbg.value(metadata i8* %call40, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end70, !dbg !12753

if.then44:                                        ; preds = %entry
  %call45 = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.379, i64 0, i64 0), i32 12) #8, !dbg !12754
  call void @llvm.dbg.value(metadata i8* %call45, metadata !12718, metadata !DIExpression()), !dbg !12724
  tail call void (i8*, ...) @error(i8* %call45, %union.tree_node* %value) #7, !dbg !12757
  tail call void @free(i8* %call45) #7, !dbg !12758
  call void @llvm.dbg.value(metadata i8* null, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end70, !dbg !12759

if.then49:                                        ; preds = %entry
  %call50 = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.380, i64 0, i64 0), i32 20) #8, !dbg !12760
  call void @llvm.dbg.value(metadata i8* %call50, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end70, !dbg !12762

if.then54:                                        ; preds = %entry
  %call55 = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.381, i64 0, i64 0), i32 20) #8, !dbg !12763
  call void @llvm.dbg.value(metadata i8* %call55, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end70, !dbg !12765

if.else56:                                        ; preds = %entry
  %cmp57 = icmp ult i32 %token_type, 73, !dbg !12766
  br i1 %cmp57, label %if.then59, label %if.else62, !dbg !12768

if.then59:                                        ; preds = %if.else56
  %call60 = tail call fastcc i8* @catenate_strings(i8* %gmsgid, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.382, i64 0, i64 0), i32 18) #8, !dbg !12769
  call void @llvm.dbg.value(metadata i8* %call60, metadata !12718, metadata !DIExpression()), !dbg !12724
  %call61 = tail call i8* @cpp_type2name(i32 %token_type, i8 zeroext %token_flags) #7, !dbg !12771
  tail call void (i8*, ...) @error(i8* %call60, i8* %call61) #7, !dbg !12772
  tail call void @free(i8* %call60) #7, !dbg !12773
  call void @llvm.dbg.value(metadata i8* null, metadata !12718, metadata !DIExpression()), !dbg !12724
  br label %if.end70, !dbg !12774

if.else62:                                        ; preds = %if.else56
  tail call void (i8*, ...) @error(i8* %gmsgid) #7, !dbg !12775
  br label %if.end70

if.end70:                                         ; preds = %if.end, %if.then39, %if.then49, %if.then59, %if.else62, %if.then54, %if.then44, %if.then34, %if.then
  %message.8 = phi i8* [ %call, %if.then ], [ null, %if.end ], [ %call35, %if.then34 ], [ %call40, %if.then39 ], [ null, %if.then44 ], [ %call50, %if.then49 ], [ %call55, %if.then54 ], [ null, %if.else62 ], [ null, %if.then59 ], !dbg !12776
  call void @llvm.dbg.value(metadata i8* %message.8, metadata !12718, metadata !DIExpression()), !dbg !12724
  %tobool71 = icmp eq i8* %message.8, null, !dbg !12777
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !12779

if.then72:                                        ; preds = %if.end70
  tail call void (i8*, ...) @error(i8* nonnull %message.8) #7, !dbg !12780
  tail call void @free(i8* nonnull %message.8) #7, !dbg !12782
  br label %if.end73, !dbg !12783

if.end73:                                         ; preds = %if.end70, %if.then72
  ret void, !dbg !12784
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @catenate_strings(i8* %lhs, i8* %rhs_start, i32 %rhs_size) unnamed_addr #5 !dbg !12785 {
entry:
  call void @llvm.dbg.value(metadata i8* %lhs, metadata !12789, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.value(metadata i8* %rhs_start, metadata !12790, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.value(metadata i32 %rhs_size, metadata !12791, metadata !DIExpression()), !dbg !12794
  %call = tail call i64 @strlen(i8* %lhs) #7, !dbg !12795
  %conv = trunc i64 %call to i32, !dbg !12795
  call void @llvm.dbg.value(metadata i32 %conv, metadata !12792, metadata !DIExpression()), !dbg !12794
  %add = add nsw i32 %conv, %rhs_size, !dbg !12796
  %conv1 = sext i32 %add to i64, !dbg !12796
  %call2 = tail call i8* @xmalloc(i64 %conv1) #7, !dbg !12796
  call void @llvm.dbg.value(metadata i8* %call2, metadata !12793, metadata !DIExpression()), !dbg !12794
  %sext = shl i64 %call, 32, !dbg !12797
  %conv3 = ashr exact i64 %sext, 32, !dbg !12797
  %call4 = tail call i8* @strncpy(i8* %call2, i8* %lhs, i64 %conv3) #7, !dbg !12798
  %add.ptr = getelementptr inbounds i8, i8* %call2, i64 %conv3, !dbg !12799
  %conv5 = sext i32 %rhs_size to i64, !dbg !12800
  %call6 = tail call i8* @strncpy(i8* %add.ptr, i8* %rhs_start, i64 %conv5) #7, !dbg !12801
  ret i8* %call2, !dbg !12802
}

declare dso_local i8* @cpp_type2name(i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @c_cpp_error(%struct.cpp_reader* %pfile, i32 %level, i32 %location, i32 %column_override, i8* %msg, [1 x %struct.__va_list_tag]* %ap) local_unnamed_addr #5 !dbg !12803 {
entry:
  %diagnostic = alloca %struct.diagnostic_info, align 8
  call void @llvm.dbg.value(metadata %struct.cpp_reader* %pfile, metadata !12814, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i32 %level, metadata !12815, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i32 %location, metadata !12816, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i32 %column_override, metadata !12817, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i8* %msg, metadata !12818, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata [1 x %struct.__va_list_tag]* %ap, metadata !12819, metadata !DIExpression()), !dbg !12844
  %0 = bitcast %struct.diagnostic_info* %diagnostic to i8*, !dbg !12845
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #6, !dbg !12845
  %1 = load i32, i32* @warn_system_headers, align 4, !dbg !12846
  call void @llvm.dbg.value(metadata i32 %1, metadata !12842, metadata !DIExpression()), !dbg !12844
  switch i32 %level, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %entry.sw.bb1_crit_edge
    i32 2, label %sw.bb5
    i32 3, label %sw.epilog
    i32 4, label %sw.bb11
    i32 5, label %sw.bb12
    i32 6, label %sw.bb13
  ], !dbg !12847

entry.sw.bb1_crit_edge:                           ; preds = %entry
  %.pre = load i8, i8* @flag_no_output, align 1, !dbg !12848
  %phitmp = icmp eq i8 %.pre, 0, !dbg !12847
  br label %sw.bb1, !dbg !12847

sw.bb:                                            ; preds = %entry
  %2 = load i8, i8* @flag_no_output, align 1, !dbg !12851
  %tobool = icmp eq i8 %2, 0, !dbg !12851
  br i1 %tobool, label %if.end, label %cleanup, !dbg !12853

if.end:                                           ; preds = %sw.bb
  store i32 1, i32* @warn_system_headers, align 4, !dbg !12854
  br label %sw.bb1, !dbg !12855

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %if.end
  %3 = phi i1 [ %phitmp, %entry.sw.bb1_crit_edge ], [ true, %if.end ]
  br i1 %3, label %sw.epilog, label %cleanup, !dbg !12856

sw.bb5:                                           ; preds = %entry
  %4 = load i8, i8* @flag_no_output, align 1, !dbg !12857
  %tobool6 = icmp eq i8 %4, 0, !dbg !12857
  %5 = load i32, i32* @flag_pedantic_errors, align 4, !dbg !12859
  %tobool7 = icmp ne i32 %5, 0, !dbg !12859
  %or.cond = or i1 %tobool6, %tobool7, !dbg !12860
  br i1 %or.cond, label %sw.epilog, label %cleanup, !dbg !12860

sw.bb11:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 3, metadata !12841, metadata !DIExpression()), !dbg !12844
  br label %sw.epilog, !dbg !12861

sw.bb12:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 8, metadata !12841, metadata !DIExpression()), !dbg !12844
  br label %sw.epilog, !dbg !12862

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 2, metadata !12841, metadata !DIExpression()), !dbg !12844
  br label %sw.epilog, !dbg !12863

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 8312, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !12864
  br label %sw.epilog, !dbg !12865

sw.epilog:                                        ; preds = %sw.bb1, %entry, %sw.bb5, %sw.default, %sw.bb13, %sw.bb12, %sw.bb11
  %dlevel.0 = phi i32 [ undef, %sw.default ], [ 2, %sw.bb13 ], [ 8, %sw.bb12 ], [ 3, %sw.bb11 ], [ 6, %sw.bb1 ], [ 10, %sw.bb5 ], [ 4, %entry ]
  call void @llvm.dbg.value(metadata i32 %dlevel.0, metadata !12841, metadata !DIExpression()), !dbg !12844
  %6 = load i8, i8* @done_lexing, align 1, !dbg !12866
  %tobool14 = icmp eq i8 %6, 0, !dbg !12866
  %7 = load i32, i32* @input_location, align 4, !dbg !12868
  %spec.select = select i1 %tobool14, i32 %location, i32 %7, !dbg !12869
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !12816, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata %struct.diagnostic_info* %diagnostic, metadata !12820, metadata !DIExpression(DW_OP_deref)), !dbg !12844
  call void @diagnostic_set_info_translated(%struct.diagnostic_info* nonnull %diagnostic, i8* %msg, [1 x %struct.__va_list_tag]* %ap, i32 %spec.select, i32 %dlevel.0) #7, !dbg !12870
  %tobool17 = icmp eq i32 %column_override, 0, !dbg !12871
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !12873

if.then18:                                        ; preds = %sw.epilog
  %override_column = getelementptr inbounds %struct.diagnostic_info, %struct.diagnostic_info* %diagnostic, i64 0, i32 2, !dbg !12874
  store i32 %column_override, i32* %override_column, align 4, !dbg !12874
  br label %if.end19, !dbg !12874

if.end19:                                         ; preds = %sw.epilog, %if.then18
  %8 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8, !dbg !12875
  call void @llvm.dbg.value(metadata %struct.diagnostic_info* %diagnostic, metadata !12820, metadata !DIExpression(DW_OP_deref)), !dbg !12844
  %call = call zeroext i8 @diagnostic_report_diagnostic(%struct.diagnostic_context* %8, %struct.diagnostic_info* nonnull %diagnostic) #7, !dbg !12875
  call void @llvm.dbg.value(metadata i8 %call, metadata !12843, metadata !DIExpression()), !dbg !12844
  %cmp = icmp eq i32 %level, 1, !dbg !12876
  br i1 %cmp, label %if.then21, label %cleanup, !dbg !12878

if.then21:                                        ; preds = %if.end19
  store i32 %1, i32* @warn_system_headers, align 4, !dbg !12879
  br label %cleanup, !dbg !12880

cleanup:                                          ; preds = %sw.bb, %sw.bb1, %if.end19, %if.then21, %sw.bb5
  %retval.0 = phi i8 [ 0, %sw.bb ], [ 0, %sw.bb1 ], [ 0, %sw.bb5 ], [ %call, %if.then21 ], [ %call, %if.end19 ], !dbg !12844
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #6, !dbg !12881
  ret i8 %retval.0, !dbg !12881
}

declare dso_local void @diagnostic_set_info_translated(%struct.diagnostic_info*, i8*, [1 x %struct.__va_list_tag]*, i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @diagnostic_report_diagnostic(%struct.diagnostic_context*, %struct.diagnostic_info*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i64 @c_common_to_target_charset(i64 %c) local_unnamed_addr #5 !dbg !12882 {
entry:
  call void @llvm.dbg.value(metadata i64 %c, metadata !12886, metadata !DIExpression()), !dbg !12888
  %conv = trunc i64 %c to i32, !dbg !12889
  %and = and i32 %conv, 255, !dbg !12890
  call void @llvm.dbg.value(metadata i32 %and, metadata !12887, metadata !DIExpression()), !dbg !12888
  %0 = load %struct.cpp_reader*, %struct.cpp_reader** @parse_in, align 8, !dbg !12891
  %call = tail call i32 @cpp_host_to_exec_charset(%struct.cpp_reader* %0, i32 %and) #7, !dbg !12892
  call void @llvm.dbg.value(metadata i32 %call, metadata !12887, metadata !DIExpression()), !dbg !12888
  %1 = load i32, i32* @flag_signed_char, align 4, !dbg !12893
  %tobool = icmp eq i32 %1, 0, !dbg !12893
  %conv1 = zext i32 %call to i64, !dbg !12895
  %shl = shl i64 %conv1, 56, !dbg !12896
  %shr = ashr exact i64 %shl, 56, !dbg !12896
  %retval.0 = select i1 %tobool, i64 %conv1, i64 %shr, !dbg !12896
  ret i64 %retval.0, !dbg !12897
}

declare dso_local i32 @cpp_host_to_exec_charset(%struct.cpp_reader*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_offsetof(%union.tree_node* %expr, %union.tree_node* %stop_ref) local_unnamed_addr #5 !dbg !12898 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !12900, metadata !DIExpression()), !dbg !12902
  call void @llvm.dbg.value(metadata %union.tree_node* %stop_ref, metadata !12901, metadata !DIExpression()), !dbg !12902
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !12903
  %call = tail call fastcc %union.tree_node* @fold_offsetof_1(%union.tree_node* %expr, %union.tree_node* %stop_ref) #8, !dbg !12904
  %call1 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call) #7, !dbg !12905
  ret %union.tree_node* %call1, !dbg !12906
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_offsetof_1(%union.tree_node* %expr, %union.tree_node* %stop_ref) unnamed_addr #5 !dbg !12907 {
entry:
  br label %tailrecurse, !dbg !12929

tailrecurse:                                      ; preds = %cond.end, %entry
  %expr.tr = phi %union.tree_node* [ %expr, %entry ], [ %45, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %stop_ref, metadata !12910, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata i32 63, metadata !12911, metadata !DIExpression()), !dbg !12930
  %cmp = icmp eq %union.tree_node* %expr.tr, %stop_ref, !dbg !12931
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12933

land.lhs.true:                                    ; preds = %tailrecurse
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %stop_ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12934
  %bf.load = load i64, i64* %0, align 8, !dbg !12934
  %bf.cast11 = and i64 %bf.load, 65535, !dbg !12935
  %cmp2 = icmp eq i64 %bf.cast11, 0, !dbg !12935
  br i1 %cmp2, label %if.end, label %if.then, !dbg !12936

if.then:                                          ; preds = %land.lhs.true
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !12937
  br label %cleanup166, !dbg !12938

if.end:                                           ; preds = %land.lhs.true, %tailrecurse
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12939
  %bf.load4 = load i64, i64* %2, align 8, !dbg !12939
  %3 = trunc i64 %bf.load4 to i16, !dbg !12939
  switch i16 %3, label %sw.default [
    i16 0, label %cleanup166.loopexit
    i16 32, label %sw.bb7
    i16 59, label %sw.bb8
    i16 55, label %sw.bb8
    i16 116, label %sw.bb9
    i16 47, label %sw.bb9
    i16 41, label %sw.bb12
    i16 45, label %sw.bb33
    i16 52, label %sw.bb155
  ], !dbg !12940

sw.bb7:                                           ; preds = %if.end
  %expr.tr.lcssa29 = phi %union.tree_node* [ %expr.tr, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa29, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa29, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa29, metadata !12909, metadata !DIExpression()), !dbg !12930
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1212, i64 0, i64 0), %union.tree_node* %expr.tr.lcssa29) #7, !dbg !12941
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12942
  br label %cleanup166, !dbg !12943

sw.bb8:                                           ; preds = %if.end, %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1213, i64 0, i64 0)) #7, !dbg !12944
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12945
  br label %cleanup166, !dbg !12946

sw.bb9:                                           ; preds = %if.end, %if.end
  %expr.tr.lcssa31 = phi %union.tree_node* [ %expr.tr, %if.end ], [ %expr.tr, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa31, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa31, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa31, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa31, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa31, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa31, metadata !12909, metadata !DIExpression()), !dbg !12930
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12947
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !12947
  %call = tail call i32 @integer_zerop(%union.tree_node* %6) #7, !dbg !12949
  %tobool = icmp eq i32 %call, 0, !dbg !12949
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !12950

if.then10:                                        ; preds = %sw.bb9
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1214, i64 0, i64 0)) #7, !dbg !12951
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12953
  br label %cleanup166, !dbg !12954

if.end11:                                         ; preds = %sw.bb9
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !12955
  br label %cleanup166, !dbg !12956

sw.bb12:                                          ; preds = %if.end
  %expr.tr.lcssa32 = phi %union.tree_node* [ %expr.tr, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa32, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa32, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa32, metadata !12909, metadata !DIExpression()), !dbg !12930
  %operands14 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12957
  %9 = load %union.tree_node*, %union.tree_node** %operands14, align 8, !dbg !12957
  %call16 = tail call fastcc %union.tree_node* @fold_offsetof_1(%union.tree_node* %9, %union.tree_node* %stop_ref) #8, !dbg !12958
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !12912, metadata !DIExpression()), !dbg !12930
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12959
  %cmp17 = icmp eq %union.tree_node* %call16, %10, !dbg !12961
  br i1 %cmp17, label %cleanup166, label %if.end19, !dbg !12962

if.end19:                                         ; preds = %sw.bb12
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands14, i64 1, !dbg !12963
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8, !dbg !12963
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !12914, metadata !DIExpression()), !dbg !12930
  %lang_flag_4 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12964
  %12 = bitcast i40* %lang_flag_4 to i64*, !dbg !12964
  %bf.load23 = load i64, i64* %12, align 8, !dbg !12964
  %bf.cast2510 = and i64 %bf.load23, 524288, !dbg !12964
  %cmp26 = icmp eq i64 %bf.cast2510, 0, !dbg !12964
  br i1 %cmp26, label %if.end28, label %if.then27, !dbg !12966

if.then27:                                        ; preds = %if.end19
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1215, i64 0, i64 0), %union.tree_node* %11) #7, !dbg !12967
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12969
  br label %cleanup166, !dbg !12970

if.end28:                                         ; preds = %if.end19
  %14 = load i32, i32* @input_location, align 4, !dbg !12971
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12972
  %15 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !12972
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !12972
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !12973
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !12973
  %call30 = tail call i64 @tree_low_cst(%union.tree_node* %18, i32 1) #7, !dbg !12973
  %div = sdiv i64 %call30, 8, !dbg !12973
  %call31 = tail call %union.tree_node* @size_int_kind(i64 %div, i32 0) #7, !dbg !12973
  %call32 = tail call %union.tree_node* @size_binop_loc(i32 %14, i32 63, %union.tree_node* %16, %union.tree_node* %call31) #7, !dbg !12974
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !12913, metadata !DIExpression()), !dbg !12930
  br label %sw.epilog, !dbg !12975

sw.bb33:                                          ; preds = %if.end
  %expr.tr.lcssa33 = phi %union.tree_node* [ %expr.tr, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa33, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa33, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa33, metadata !12909, metadata !DIExpression()), !dbg !12930
  %operands35 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12976
  %19 = load %union.tree_node*, %union.tree_node** %operands35, align 8, !dbg !12976
  %call37 = tail call fastcc %union.tree_node* @fold_offsetof_1(%union.tree_node* %19, %union.tree_node* %stop_ref) #8, !dbg !12977
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !12912, metadata !DIExpression()), !dbg !12930
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12978
  %cmp38 = icmp eq %union.tree_node* %call37, %20, !dbg !12980
  br i1 %cmp38, label %cleanup166, label %if.end40, !dbg !12981

if.end40:                                         ; preds = %sw.bb33
  %arrayidx43 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands35, i64 1, !dbg !12982
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx43, align 8, !dbg !12982
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !12914, metadata !DIExpression()), !dbg !12930
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12983
  %bf.load45 = load i64, i64* %22, align 8, !dbg !12983
  %bf.cast472 = and i64 %bf.load45, 65535, !dbg !12985
  %cmp48 = icmp eq i64 %bf.cast472, 23, !dbg !12985
  br i1 %cmp48, label %land.lhs.true49, label %if.end54, !dbg !12986

land.lhs.true49:                                  ; preds = %if.end40
  %call50 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %21) #7, !dbg !12987
  %cmp51 = icmp slt i32 %call50, 0, !dbg !12988
  br i1 %cmp51, label %if.then52, label %if.end54, !dbg !12989

if.then52:                                        ; preds = %land.lhs.true49
  call void @llvm.dbg.value(metadata i32 64, metadata !12911, metadata !DIExpression()), !dbg !12930
  %23 = load i32, i32* @input_location, align 4, !dbg !12990
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12990
  %24 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !12990
  %call53 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %23, i32 79, %union.tree_node* %24, %union.tree_node* %21) #7, !dbg !12990
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !12914, metadata !DIExpression()), !dbg !12930
  br label %if.end54, !dbg !12992

if.end54:                                         ; preds = %if.then52, %land.lhs.true49, %if.end40
  %t.0 = phi %union.tree_node* [ %call53, %if.then52 ], [ %21, %land.lhs.true49 ], [ %21, %if.end40 ], !dbg !12993
  %code.0 = phi i32 [ 64, %if.then52 ], [ 63, %land.lhs.true49 ], [ 63, %if.end40 ], !dbg !12930
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !12911, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !12914, metadata !DIExpression()), !dbg !12930
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !12994
  %call55 = tail call %union.tree_node* @convert(%union.tree_node* %25, %union.tree_node* %t.0) #7, !dbg !12995
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !12914, metadata !DIExpression()), !dbg !12930
  %type57 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12996
  %26 = bitcast %union.tree_node** %type57 to %struct.tree_type**, !dbg !12996
  %27 = load %struct.tree_type*, %struct.tree_type** %26, align 8, !dbg !12996
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 3, !dbg !12996
  %28 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !12996
  %call59 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %28, %union.tree_node* %call55) #7, !dbg !12996
  call void @llvm.dbg.value(metadata %union.tree_node* %call59, metadata !12913, metadata !DIExpression()), !dbg !12930
  %cmp60 = icmp eq i32 %code.0, 63, !dbg !12997
  br i1 %cmp60, label %land.lhs.true61, label %sw.epilog, !dbg !12998

land.lhs.true61:                                  ; preds = %if.end54
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12999
  %bf.load63 = load i64, i64* %29, align 8, !dbg !12999
  %bf.cast653 = and i64 %bf.load63, 65535, !dbg !13000
  %cmp66 = icmp eq i64 %bf.cast653, 23, !dbg !13000
  br i1 %cmp66, label %if.then67, label %sw.epilog, !dbg !13001

if.then67:                                        ; preds = %land.lhs.true61
  %call68 = tail call %union.tree_node* @array_ref_up_bound(%union.tree_node* %expr.tr.lcssa33) #7, !dbg !13002
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !12915, metadata !DIExpression()), !dbg !13003
  %cmp69 = icmp eq %union.tree_node* %call68, null, !dbg !13004
  br i1 %cmp69, label %sw.epilog, label %land.lhs.true70, !dbg !13005

land.lhs.true70:                                  ; preds = %if.then67
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13006
  %bf.load72 = load i64, i64* %30, align 8, !dbg !13006
  %bf.cast744 = and i64 %bf.load72, 65535, !dbg !13007
  %cmp75 = icmp eq i64 %bf.cast744, 23, !dbg !13007
  br i1 %cmp75, label %land.lhs.true76, label %sw.epilog, !dbg !13008

land.lhs.true76:                                  ; preds = %land.lhs.true70
  %type78 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13009
  %31 = bitcast %union.tree_node** %type78 to %struct.tree_type**, !dbg !13009
  %32 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !13009
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 14, !dbg !13009
  %33 = load %union.tree_node*, %union.tree_node** %maxval, align 8, !dbg !13009
  %call80 = tail call i32 @tree_int_cst_equal(%union.tree_node* nonnull %call68, %union.tree_node* %33) #7, !dbg !13010
  %tobool81 = icmp eq i32 %call80, 0, !dbg !13010
  br i1 %tobool81, label %if.then82, label %sw.epilog, !dbg !13011

if.then82:                                        ; preds = %land.lhs.true76
  %34 = load %union.tree_node*, %union.tree_node** %type78, align 8, !dbg !13012
  %call85 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %34, i64 1) #7, !dbg !13012
  %call86 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* nonnull %call68, %union.tree_node* %call85) #7, !dbg !13012
  call void @llvm.dbg.value(metadata %union.tree_node* %call86, metadata !12915, metadata !DIExpression()), !dbg !13003
  %call87 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call86, %union.tree_node* %call55) #7, !dbg !13013
  %tobool88 = icmp eq i32 %call87, 0, !dbg !13013
  br i1 %tobool88, label %sw.epilog, label %if.then89, !dbg !13014

if.then89:                                        ; preds = %if.then82
  %v.0.pre = load %union.tree_node*, %union.tree_node** %operands35, align 8, !dbg !13015
  br label %for.cond, !dbg !13016

for.cond:                                         ; preds = %for.inc129, %if.then89
  %v.0 = phi %union.tree_node* [ %v.0.pre, %if.then89 ], [ %40, %for.inc129 ], !dbg !13015
  call void @llvm.dbg.value(metadata %union.tree_node* %v.0, metadata !12919, metadata !DIExpression()), !dbg !13017
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %v.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13018
  %bf.load94 = load i64, i64* %35, align 8, !dbg !13018
  %bf.cast965 = and i64 %bf.load94, 65535, !dbg !13019
  %cmp97 = icmp eq i64 %bf.cast965, 41, !dbg !13019
  br i1 %cmp97, label %for.body, label %for.end133, !dbg !13020

for.body:                                         ; preds = %for.cond
  %operands99 = getelementptr inbounds %union.tree_node, %union.tree_node* %v.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13021
  %36 = bitcast %union.tree_node** %operands99 to %struct.tree_common**, !dbg !13021
  %37 = load %struct.tree_common*, %struct.tree_common** %36, align 8, !dbg !13021
  %type102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %37, i64 0, i32 2, !dbg !13021
  %38 = bitcast %union.tree_node** %type102 to i64**, !dbg !13021
  %39 = load i64*, i64** %38, align 8, !dbg !13021
  %bf.load104 = load i64, i64* %39, align 8, !dbg !13021
  %bf.cast1068 = and i64 %bf.load104, 65535, !dbg !13022
  %cmp107 = icmp eq i64 %bf.cast1068, 16, !dbg !13022
  %40 = bitcast %struct.tree_common* %37 to %union.tree_node*, !dbg !13023
  br i1 %cmp107, label %if.then108, label %for.inc129, !dbg !13023

if.then108:                                       ; preds = %for.body
  %arrayidx111 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands99, i64 1, !dbg !13024
  %41 = bitcast %union.tree_node** %arrayidx111 to %struct.tree_common**, !dbg !13024
  %42 = load %struct.tree_common*, %struct.tree_common** %41, align 8, !dbg !13024
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %42, i64 0, i32 1, !dbg !13024
  br label %for.cond113, !dbg !13025

for.cond113:                                      ; preds = %for.inc, %if.then108
  %fld_chain.0.in = phi %union.tree_node** [ %chain, %if.then108 ], [ %chain124, %for.inc ]
  %fld_chain.0 = load %union.tree_node*, %union.tree_node** %fld_chain.0.in, align 8, !dbg !13026
  call void @llvm.dbg.value(metadata %union.tree_node* %fld_chain.0, metadata !12924, metadata !DIExpression()), !dbg !13026
  %cond = icmp eq %union.tree_node* %fld_chain.0, null, !dbg !13027
  br i1 %cond, label %if.end127.loopexit, label %for.body115, !dbg !13027

for.body115:                                      ; preds = %for.cond113
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld_chain.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13029
  %bf.load117 = load i64, i64* %43, align 8, !dbg !13029
  %bf.cast1199 = and i64 %bf.load117, 65535, !dbg !13032
  %cmp120 = icmp eq i64 %bf.cast1199, 31, !dbg !13032
  br i1 %cmp120, label %for.end, label %for.inc, !dbg !13033

for.inc:                                          ; preds = %for.body115
  %chain124 = getelementptr inbounds %union.tree_node, %union.tree_node* %fld_chain.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13034
  br label %for.cond113, !dbg !13035, !llvm.loop !13036

for.end:                                          ; preds = %for.body115
  br label %cleanup, !dbg !13038

if.end127.loopexit:                               ; preds = %for.cond113
  br label %cleanup, !dbg !13039

cleanup:                                          ; preds = %for.end, %if.end127.loopexit
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end127.loopexit ], [ false, %for.end ]
  br i1 %cleanup.dest.slot.0, label %for.inc129, label %for.end133

for.inc129:                                       ; preds = %for.body, %cleanup
  br label %for.cond, !dbg !13040, !llvm.loop !13041

for.end133:                                       ; preds = %cleanup, %for.cond
  %bf.cast965.lcssa = phi i64 [ %bf.cast965, %cleanup ], [ %bf.cast965, %for.cond ], !dbg !13019
  %cmp97.lcssa = phi i1 [ %cmp97, %cleanup ], [ %cmp97, %for.cond ], !dbg !13019
  %cmp138 = icmp eq i64 %bf.cast965.lcssa, 45, !dbg !13043
  br i1 %cmp138, label %if.then144, label %lor.lhs.false, !dbg !13045

lor.lhs.false:                                    ; preds = %for.end133
  br i1 %cmp97.lcssa, label %if.then144, label %sw.epilog, !dbg !13046

if.then144:                                       ; preds = %lor.lhs.false, %for.end133
  %type149 = getelementptr inbounds %union.tree_node, %union.tree_node* %v.0.pre, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13047
  %44 = load %union.tree_node*, %union.tree_node** %type149, align 8, !dbg !13047
  %call150 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 41, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1216, i64 0, i64 0), %union.tree_node* %call55, %union.tree_node* %44) #7, !dbg !13048
  br label %sw.epilog, !dbg !13048

sw.bb155:                                         ; preds = %if.end
  %operands157 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13049
  %arrayidx158 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands157, i64 1, !dbg !13049
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx158, align 8, !dbg !13049
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !12914, metadata !DIExpression()), !dbg !12930
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13050
  %bf.load160 = load i64, i64* %46, align 8, !dbg !13050
  %bf.cast1621 = and i64 %bf.load160, 65535, !dbg !13050
  %cmp163 = icmp eq i64 %bf.cast1621, 32, !dbg !13050
  br i1 %cmp163, label %cond.end, label %cond.true, !dbg !13050

cond.true:                                        ; preds = %sw.bb155
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 8462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !13050
  br label %cond.end, !dbg !13050

cond.end:                                         ; preds = %sw.bb155, %cond.true
  br label %tailrecurse, !dbg !12929

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 8466, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !13051
  br label %sw.epilog, !dbg !13052

sw.epilog:                                        ; preds = %if.then82, %land.lhs.true76, %if.then67, %if.end54, %land.lhs.true61, %if.then144, %lor.lhs.false, %land.lhs.true70, %sw.default, %if.end28
  %off.0 = phi %union.tree_node* [ undef, %sw.default ], [ %call32, %if.end28 ], [ %call59, %if.then67 ], [ %call59, %land.lhs.true70 ], [ %call59, %land.lhs.true76 ], [ %call59, %lor.lhs.false ], [ %call59, %if.then144 ], [ %call59, %if.then82 ], [ %call59, %land.lhs.true61 ], [ %call59, %if.end54 ]
  %base.0 = phi %union.tree_node* [ undef, %sw.default ], [ %call16, %if.end28 ], [ %call37, %if.then67 ], [ %call37, %land.lhs.true70 ], [ %call37, %land.lhs.true76 ], [ %call37, %lor.lhs.false ], [ %call37, %if.then144 ], [ %call37, %if.then82 ], [ %call37, %land.lhs.true61 ], [ %call37, %if.end54 ]
  %code.1 = phi i32 [ 63, %sw.default ], [ 63, %if.end28 ], [ 63, %if.then67 ], [ 63, %land.lhs.true70 ], [ 63, %land.lhs.true76 ], [ 63, %lor.lhs.false ], [ 63, %if.then144 ], [ 63, %if.then82 ], [ 63, %land.lhs.true61 ], [ %code.0, %if.end54 ], !dbg !12930
  call void @llvm.dbg.value(metadata i32 %code.1, metadata !12911, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %base.0, metadata !12912, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %off.0, metadata !12913, metadata !DIExpression()), !dbg !12930
  %call165 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 %code.1, %union.tree_node* %base.0, %union.tree_node* %off.0) #7, !dbg !13053
  br label %cleanup166, !dbg !13054

cleanup166.loopexit:                              ; preds = %if.end
  %expr.tr.lcssa28 = phi %union.tree_node* [ %expr.tr, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa28, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa28, metadata !12909, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa28, metadata !12909, metadata !DIExpression()), !dbg !12930
  br label %cleanup166, !dbg !13055

cleanup166:                                       ; preds = %cleanup166.loopexit, %sw.bb33, %sw.bb12, %sw.epilog, %if.then27, %if.end11, %if.then10, %sw.bb8, %sw.bb7, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ %call165, %sw.epilog ], [ %13, %if.then27 ], [ %8, %if.end11 ], [ %7, %if.then10 ], [ %5, %sw.bb8 ], [ %4, %sw.bb7 ], [ %call16, %sw.bb12 ], [ %call37, %sw.bb33 ], [ %expr.tr.lcssa28, %cleanup166.loopexit ], !dbg !12930
  ret %union.tree_node* %retval.0, !dbg !13055
}

; Function Attrs: nounwind uwtable
define dso_local void @lvalue_error(i32 %use) local_unnamed_addr #5 !dbg !13056 {
entry:
  call void @llvm.dbg.value(metadata i32 %use, metadata !13060, metadata !DIExpression()), !dbg !13061
  switch i32 %use, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
  ], !dbg !13062

sw.bb:                                            ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.383, i64 0, i64 0)) #7, !dbg !13063
  br label %sw.epilog, !dbg !13065

sw.bb1:                                           ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.384, i64 0, i64 0)) #7, !dbg !13066
  br label %sw.epilog, !dbg !13067

sw.bb2:                                           ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.385, i64 0, i64 0)) #7, !dbg !13068
  br label %sw.epilog, !dbg !13069

sw.bb3:                                           ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.386, i64 0, i64 0)) #7, !dbg !13070
  br label %sw.epilog, !dbg !13071

sw.bb4:                                           ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.387, i64 0, i64 0)) #7, !dbg !13072
  br label %sw.epilog, !dbg !13073

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 8503, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !13074
  br label %sw.epilog, !dbg !13075

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !13076
}

; Function Attrs: nounwind uwtable
define dso_local i32 @complete_array_type(%union.tree_node** %ptype, %union.tree_node* %initial_value, i8 zeroext %do_default) local_unnamed_addr #5 !dbg !13077 {
entry:
  %ce = alloca %struct.constructor_elt_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %ptype, metadata !13081, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata %union.tree_node* %initial_value, metadata !13082, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i8 %do_default, metadata !13083, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i32 0, metadata !13089, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i32 0, metadata !13091, metadata !DIExpression()), !dbg !13111
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !13112
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13084, metadata !DIExpression()), !dbg !13111
  %tobool = icmp eq %union.tree_node* %initial_value, null, !dbg !13113
  br i1 %tobool, label %if.else78, label %if.then, !dbg !13114

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %initial_value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13115
  %bf.load = load i64, i64* %1, align 8, !dbg !13115
  %bf.cast11 = and i64 %bf.load, 65535, !dbg !13116
  %cmp = icmp eq i64 %bf.cast11, 28, !dbg !13116
  br i1 %cmp, label %if.then1, label %if.else, !dbg !13117

if.then1:                                         ; preds = %if.then
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %initial_value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13118
  %2 = bitcast %union.tree_node** %type2 to %struct.tree_common**, !dbg !13118
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !13118
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !13118
  %4 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !13118
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %4) #7, !dbg !13119
  %conv = trunc i64 %call to i32, !dbg !13119
  call void @llvm.dbg.value(metadata i32 %conv, metadata !13092, metadata !DIExpression()), !dbg !13120
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %initial_value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13121
  %6 = load i32, i32* %5, align 8, !dbg !13121
  %div = sdiv i32 %6, %conv, !dbg !13121
  %sub = add nsw i32 %div, -1, !dbg !13121
  %conv5 = sext i32 %sub to i64, !dbg !13121
  %call6 = tail call %union.tree_node* @size_int_kind(i64 %conv5, i32 0) #7, !dbg !13121
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !13084, metadata !DIExpression()), !dbg !13111
  br label %if.end82, !dbg !13122

if.else:                                          ; preds = %if.then
  %cmp11 = icmp eq i64 %bf.cast11, 51, !dbg !13123
  br i1 %cmp11, label %if.then13, label %if.else71, !dbg !13124

if.then13:                                        ; preds = %if.else
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %initial_value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13125
  %7 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !13125
  %8 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %7, align 8, !dbg !13125
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %8, metadata !13097, metadata !DIExpression()), !dbg !13126
  %base15 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %8, i64 0, i32 0, !dbg !13127
  %call16 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base15) #8, !dbg !13127
  %cmp17 = icmp eq i32 %call16, 0, !dbg !13127
  br i1 %cmp17, label %if.then19, label %if.else22, !dbg !13128

if.then19:                                        ; preds = %if.then13
  %9 = load i32, i32* @pedantic, align 4, !dbg !13129
  %tobool20 = icmp eq i32 %9, 0, !dbg !13129
  %spec.select = select i1 %tobool20, i32 0, i32 3, !dbg !13132
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !13089, metadata !DIExpression()), !dbg !13111
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !13133
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !13084, metadata !DIExpression()), !dbg !13111
  br label %if.end82, !dbg !13134

if.else22:                                        ; preds = %if.then13
  %11 = bitcast %struct.constructor_elt_d** %ce to i8*, !dbg !13135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !13135
  call void @llvm.dbg.value(metadata i8 0, metadata !13106, metadata !DIExpression()), !dbg !13136
  %call29 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base15, i32 0) #8, !dbg !13137
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call29, i64 0, i32 0, !dbg !13139
  %12 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !13139
  %tobool30 = icmp eq %union.tree_node* %12, null, !dbg !13137
  br i1 %tobool30, label %if.end41, label %if.then31, !dbg !13140

if.then31:                                        ; preds = %if.else22
  %13 = load i32, i32* @input_location, align 4, !dbg !13141
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !13142
  %call38 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base15, i32 0) #8, !dbg !13143
  %index39 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call38, i64 0, i32 0, !dbg !13144
  %15 = load %union.tree_node*, %union.tree_node** %index39, align 8, !dbg !13144
  %call40 = tail call %union.tree_node* @fold_convert_loc(i32 %13, %union.tree_node* %14, %union.tree_node* %15) #7, !dbg !13145
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !13084, metadata !DIExpression()), !dbg !13111
  br label %if.end41, !dbg !13146

if.end41:                                         ; preds = %if.else22, %if.then31
  %maxindex.0 = phi %union.tree_node* [ %call40, %if.then31 ], [ %0, %if.else22 ], !dbg !13111
  call void @llvm.dbg.value(metadata %union.tree_node* %maxindex.0, metadata !13084, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata %union.tree_node* %maxindex.0, metadata !13100, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i64 1, metadata !13103, metadata !DIExpression()), !dbg !13136
  br label %for.cond, !dbg !13147

for.cond:                                         ; preds = %if.end61, %if.end41
  %curindex.0 = phi %union.tree_node* [ %maxindex.0, %if.end41 ], [ %curindex.2, %if.end61 ], !dbg !13136
  %cnt.0 = phi i64 [ 1, %if.end41 ], [ %inc, %if.end61 ], !dbg !13148
  %maxindex.1 = phi %union.tree_node* [ %maxindex.0, %if.end41 ], [ %spec.select1, %if.end61 ], !dbg !13136
  %fold_p.0 = phi i8 [ 0, %if.end41 ], [ %spec.select2, %if.end61 ], !dbg !13136
  call void @llvm.dbg.value(metadata i8 %fold_p.0, metadata !13106, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %maxindex.1, metadata !13084, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i64 %cnt.0, metadata !13103, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %curindex.0, metadata !13100, metadata !DIExpression()), !dbg !13136
  %conv48 = trunc i64 %cnt.0 to i32, !dbg !13149
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !13104, metadata !DIExpression(DW_OP_deref)), !dbg !13136
  %call49 = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %base15, i32 %conv48, %struct.constructor_elt_d** nonnull %ce) #8, !dbg !13149
  %tobool50 = icmp eq i32 %call49, 0, !dbg !13150
  br i1 %tobool50, label %for.end, label %for.body, !dbg !13150

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !13107, metadata !DIExpression()), !dbg !13151
  %16 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !13152
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %16, metadata !13104, metadata !DIExpression()), !dbg !13136
  %index51 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %16, i64 0, i32 0, !dbg !13154
  %17 = load %union.tree_node*, %union.tree_node** %index51, align 8, !dbg !13154
  %tobool52 = icmp eq %union.tree_node* %17, null, !dbg !13152
  br i1 %tobool52, label %if.else55, label %if.then53, !dbg !13155

if.then53:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %16, metadata !13104, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !13100, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i8 1, metadata !13107, metadata !DIExpression()), !dbg !13151
  br label %if.end61, !dbg !13156

if.else55:                                        ; preds = %for.body
  %tobool56 = icmp eq i8 %fold_p.0, 0, !dbg !13157
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !13160

if.then57:                                        ; preds = %if.else55
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !13161
  %call58 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %18, %union.tree_node* %curindex.0) #7, !dbg !13161
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !13100, metadata !DIExpression()), !dbg !13136
  br label %if.end59, !dbg !13162

if.end59:                                         ; preds = %if.else55, %if.then57
  %curindex.1 = phi %union.tree_node* [ %call58, %if.then57 ], [ %curindex.0, %if.else55 ], !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %curindex.1, metadata !13100, metadata !DIExpression()), !dbg !13136
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !13163
  %call60 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %curindex.1, %union.tree_node* %19) #7, !dbg !13163
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !13100, metadata !DIExpression()), !dbg !13136
  br label %if.end61

if.end61:                                         ; preds = %if.end59, %if.then53
  %curindex.2 = phi %union.tree_node* [ %17, %if.then53 ], [ %call60, %if.end59 ], !dbg !13164
  %curfold_p.0 = phi i8 [ 1, %if.then53 ], [ 0, %if.end59 ], !dbg !13151
  call void @llvm.dbg.value(metadata i8 %curfold_p.0, metadata !13107, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata %union.tree_node* %curindex.2, metadata !13100, metadata !DIExpression()), !dbg !13136
  %call62 = call i32 @tree_int_cst_lt(%union.tree_node* %maxindex.1, %union.tree_node* %curindex.2) #7, !dbg !13165
  %tobool63 = icmp ne i32 %call62, 0, !dbg !13165
  %spec.select1 = select i1 %tobool63, %union.tree_node* %curindex.2, %union.tree_node* %maxindex.1, !dbg !13167
  %spec.select2 = select i1 %tobool63, i8 %curfold_p.0, i8 %fold_p.0, !dbg !13167
  call void @llvm.dbg.value(metadata i8 %spec.select2, metadata !13106, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select1, metadata !13084, metadata !DIExpression()), !dbg !13111
  %inc = add i64 %cnt.0, 1, !dbg !13168
  call void @llvm.dbg.value(metadata i64 %inc, metadata !13103, metadata !DIExpression()), !dbg !13136
  br label %for.cond, !dbg !13169, !llvm.loop !13170

for.end:                                          ; preds = %for.cond
  %maxindex.1.lcssa = phi %union.tree_node* [ %maxindex.1, %for.cond ], !dbg !13136
  %fold_p.0.lcssa = phi i8 [ %fold_p.0, %for.cond ], !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %maxindex.1.lcssa, metadata !13084, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i8 %fold_p.0.lcssa, metadata !13106, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %maxindex.1.lcssa, metadata !13084, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i8 %fold_p.0.lcssa, metadata !13106, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %maxindex.1.lcssa, metadata !13084, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i8 %fold_p.0.lcssa, metadata !13106, metadata !DIExpression()), !dbg !13136
  %tobool66 = icmp eq i8 %fold_p.0.lcssa, 0, !dbg !13172
  br i1 %tobool66, label %if.end69, label %if.then67, !dbg !13174

if.then67:                                        ; preds = %for.end
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !13175
  %call68 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %20, %union.tree_node* %maxindex.1.lcssa) #7, !dbg !13175
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !13084, metadata !DIExpression()), !dbg !13111
  br label %if.end69, !dbg !13176

if.end69:                                         ; preds = %for.end, %if.then67
  %maxindex.3 = phi %union.tree_node* [ %call68, %if.then67 ], [ %maxindex.1.lcssa, %for.end ], !dbg !13136
  call void @llvm.dbg.value(metadata %union.tree_node* %maxindex.3, metadata !13084, metadata !DIExpression()), !dbg !13111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !13177
  br label %if.end82

if.else71:                                        ; preds = %if.else
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13178
  %cmp72 = icmp ne %union.tree_node* %21, %initial_value, !dbg !13181
  %spec.select3 = zext i1 %cmp72 to i32, !dbg !13182
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !13089, metadata !DIExpression()), !dbg !13111
  br label %if.end82

if.else78:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata i32 2, metadata !13089, metadata !DIExpression()), !dbg !13111
  %tobool79 = icmp eq i8 %do_default, 0, !dbg !13183
  br i1 %tobool79, label %cleanup, label %if.end82, !dbg !13186

if.end82:                                         ; preds = %if.else78, %if.then1, %if.then19, %if.end69, %if.else71
  %failure.5 = phi i32 [ 0, %if.then1 ], [ %spec.select3, %if.else71 ], [ %spec.select, %if.then19 ], [ 0, %if.end69 ], [ 2, %if.else78 ], !dbg !13111
  %maxindex.7 = phi %union.tree_node* [ %call6, %if.then1 ], [ %0, %if.else71 ], [ %10, %if.then19 ], [ %maxindex.3, %if.end69 ], [ %0, %if.else78 ], !dbg !13111
  call void @llvm.dbg.value(metadata %union.tree_node* %maxindex.7, metadata !13084, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i32 %failure.5, metadata !13089, metadata !DIExpression()), !dbg !13111
  %22 = load %union.tree_node*, %union.tree_node** %ptype, align 8, !dbg !13187
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !13085, metadata !DIExpression()), !dbg !13111
  %type84 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13188
  %23 = load %union.tree_node*, %union.tree_node** %type84, align 8, !dbg !13188
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !13087, metadata !DIExpression()), !dbg !13111
  %call85 = call %union.tree_node* @strip_array_types(%union.tree_node* %23) #7, !dbg !13189
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13189
  %bf.load87 = load i64, i64* %24, align 8, !dbg !13189
  %bf.lshr = lshr i64 %bf.load87, 20, !dbg !13189
  %25 = trunc i64 %bf.lshr to i32, !dbg !13189
  %bf.cast89 = and i32 %25, 1, !dbg !13189
  %call90 = call %union.tree_node* @strip_array_types(%union.tree_node* %23) #7, !dbg !13189
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13189
  %bf.load92 = load i64, i64* %26, align 8, !dbg !13189
  %27 = lshr i64 %bf.load92, 18, !dbg !13189
  %28 = trunc i64 %27 to i32, !dbg !13189
  %mul96 = and i32 %28, 2, !dbg !13189
  %or = or i32 %bf.cast89, %mul96, !dbg !13189
  %call97 = call %union.tree_node* @strip_array_types(%union.tree_node* %23) #7, !dbg !13189
  %type98 = bitcast %union.tree_node* %call97 to %struct.tree_type*, !dbg !13189
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type98, i64 0, i32 6, !dbg !13189
  %bf.load99 = load i32, i32* %restrict_flag, align 4, !dbg !13189
  %29 = lshr i32 %bf.load99, 11, !dbg !13189
  %mul102 = and i32 %29, 4, !dbg !13189
  %or103 = or i32 %or, %mul102, !dbg !13189
  %call104 = call %union.tree_node* @strip_array_types(%union.tree_node* %23) #7, !dbg !13189
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %call104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13189
  %bf.load106 = load i64, i64* %30, align 8, !dbg !13189
  %31 = lshr i64 %bf.load106, 48, !dbg !13189
  %32 = trunc i64 %31 to i32, !dbg !13189
  %shl = and i32 %32, 65280, !dbg !13189
  %or109 = or i32 %or103, %shl, !dbg !13189
  call void @llvm.dbg.value(metadata i32 %or109, metadata !13090, metadata !DIExpression()), !dbg !13111
  %cmp110 = icmp eq i32 %or109, 0, !dbg !13190
  br i1 %cmp110, label %if.end116, label %if.else113, !dbg !13192

if.else113:                                       ; preds = %if.end82
  %call115 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %23, i32 %shl) #7, !dbg !13193
  call void @llvm.dbg.value(metadata %union.tree_node* %call115, metadata !13088, metadata !DIExpression()), !dbg !13111
  br label %if.end116

if.end116:                                        ; preds = %if.end82, %if.else113
  %unqual_elt.0 = phi %union.tree_node* [ %call115, %if.else113 ], [ %23, %if.end82 ], !dbg !13194
  call void @llvm.dbg.value(metadata %union.tree_node* %unqual_elt.0, metadata !13088, metadata !DIExpression()), !dbg !13111
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !13195
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !13195
  %call118 = call %union.tree_node* @build_distinct_type_copy(%union.tree_node* %34) #7, !dbg !13196
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !13086, metadata !DIExpression()), !dbg !13111
  %type120 = getelementptr inbounds %union.tree_node, %union.tree_node* %call118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13197
  store %union.tree_node* %unqual_elt.0, %union.tree_node** %type120, align 8, !dbg !13198
  %call121 = call %union.tree_node* @build_index_type(%union.tree_node* %maxindex.7) #7, !dbg !13199
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %call118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13200
  %35 = bitcast i32* %values to %union.tree_node**, !dbg !13200
  store %union.tree_node* %call121, %union.tree_node** %35, align 8, !dbg !13201
  call void @layout_type(%union.tree_node* %call118) #7, !dbg !13202
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %unqual_elt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13203
  %36 = bitcast i40* %uid to i8*, !dbg !13203
  %call124 = call i32 @iterative_hash(i8* nonnull %36, i64 4, i32 0) #7, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %call124, metadata !13091, metadata !DIExpression()), !dbg !13111
  %37 = bitcast i32* %values to %struct.tree_type**, !dbg !13204
  %38 = load %struct.tree_type*, %struct.tree_type** %37, align 8, !dbg !13204
  %uid128 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %38, i64 0, i32 5, !dbg !13204
  %39 = bitcast i32* %uid128 to i8*, !dbg !13204
  %call129 = call i32 @iterative_hash(i8* nonnull %39, i64 4, i32 %call124) #7, !dbg !13204
  call void @llvm.dbg.value(metadata i32 %call129, metadata !13091, metadata !DIExpression()), !dbg !13111
  %call130 = call %union.tree_node* @type_hash_canon(i32 %call129, %union.tree_node* %call118) #7, !dbg !13205
  call void @llvm.dbg.value(metadata %union.tree_node* %call130, metadata !13086, metadata !DIExpression()), !dbg !13111
  %type132 = getelementptr inbounds %union.tree_node, %union.tree_node* %call130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13206
  %40 = bitcast %union.tree_node** %type132 to %struct.tree_type**, !dbg !13206
  %41 = load %struct.tree_type*, %struct.tree_type** %40, align 8, !dbg !13206
  %canonical = getelementptr inbounds %struct.tree_type, %struct.tree_type* %41, i64 0, i32 19, !dbg !13206
  %42 = load %union.tree_node*, %union.tree_node** %canonical, align 8, !dbg !13206
  %cmp134 = icmp eq %union.tree_node* %42, null, !dbg !13206
  br i1 %cmp134, label %if.then142, label %lor.lhs.false, !dbg !13208

lor.lhs.false:                                    ; preds = %if.end116
  %values137 = getelementptr inbounds %union.tree_node, %union.tree_node* %call130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13209
  %43 = bitcast i32* %values137 to %struct.tree_type**, !dbg !13209
  %44 = load %struct.tree_type*, %struct.tree_type** %43, align 8, !dbg !13209
  %canonical139 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %44, i64 0, i32 19, !dbg !13209
  %45 = load %union.tree_node*, %union.tree_node** %canonical139, align 8, !dbg !13209
  %cmp140 = icmp eq %union.tree_node* %45, null, !dbg !13209
  br i1 %cmp140, label %if.then142, label %if.else145, !dbg !13210

if.then142:                                       ; preds = %lor.lhs.false, %if.end116
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %call130, i64 0, i32 0, i32 0, i32 1, !dbg !13211
  store %union.tree_node* null, %union.tree_node** %46, align 8, !dbg !13211
  br label %if.end179, !dbg !13211

if.else145:                                       ; preds = %lor.lhs.false
  %.cast = bitcast %struct.tree_type* %41 to %union.tree_node*, !dbg !13212
  %cmp152 = icmp eq %union.tree_node* %42, %.cast, !dbg !13214
  br i1 %cmp152, label %lor.lhs.false154, label %if.then163, !dbg !13215

lor.lhs.false154:                                 ; preds = %if.else145
  %.cast7 = bitcast %struct.tree_type* %44 to %union.tree_node*, !dbg !13216
  %cmp161 = icmp eq %union.tree_node* %45, %.cast7, !dbg !13217
  br i1 %cmp161, label %if.else175, label %if.then163, !dbg !13218

if.then163:                                       ; preds = %lor.lhs.false154, %if.else145
  %call172 = call %union.tree_node* @build_array_type(%union.tree_node* nonnull %42, %union.tree_node* nonnull %45) #7, !dbg !13219
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %call130, i64 0, i32 0, i32 0, i32 1, !dbg !13220
  store %union.tree_node* %call172, %union.tree_node** %47, align 8, !dbg !13221
  br label %if.end179, !dbg !13220

if.else175:                                       ; preds = %lor.lhs.false154
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %call130, i64 0, i32 0, i32 0, i32 1, !dbg !13222
  store %union.tree_node* %call130, %union.tree_node** %48, align 8, !dbg !13223
  br label %if.end179

if.end179:                                        ; preds = %if.then163, %if.else175, %if.then142
  br i1 %cmp110, label %if.end185, label %if.else183, !dbg !13224

if.else183:                                       ; preds = %if.end179
  %call184 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call130, i32 %or109) #7, !dbg !13225
  call void @llvm.dbg.value(metadata %union.tree_node* %call184, metadata !13085, metadata !DIExpression()), !dbg !13111
  br label %if.end185

if.end185:                                        ; preds = %if.end179, %if.else183
  %type.0 = phi %union.tree_node* [ %call184, %if.else183 ], [ %call130, %if.end179 ], !dbg !13227
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !13085, metadata !DIExpression()), !dbg !13111
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13228
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8, !dbg !13228
  %cmp187 = icmp eq %union.tree_node* %50, null, !dbg !13228
  br i1 %cmp187, label %if.end206, label %land.lhs.true, !dbg !13230

land.lhs.true:                                    ; preds = %if.end185
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13231
  %52 = bitcast %union.tree_node** %51 to i64**, !dbg !13231
  %53 = load i64*, i64** %52, align 8, !dbg !13231
  %bf.load191 = load i64, i64* %53, align 8, !dbg !13231
  %bf.cast1938 = and i64 %bf.load191, 65535, !dbg !13232
  %cmp194 = icmp eq i64 %bf.cast1938, 23, !dbg !13232
  br i1 %cmp194, label %land.lhs.true196, label %if.end206, !dbg !13233

land.lhs.true196:                                 ; preds = %land.lhs.true
  %bf.cast2039 = and i64 %bf.load191, 134217728, !dbg !13234
  %tobool204 = icmp eq i64 %bf.cast2039, 0, !dbg !13234
  br i1 %tobool204, label %if.end206, label %if.then205, !dbg !13235

if.then205:                                       ; preds = %land.lhs.true196
  call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.388, i64 0, i64 0)) #7, !dbg !13236
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13238
  call void @llvm.dbg.value(metadata %union.tree_node* %54, metadata !13085, metadata !DIExpression()), !dbg !13111
  br label %if.end206, !dbg !13239

if.end206:                                        ; preds = %land.lhs.true196, %if.end185, %if.then205, %land.lhs.true
  %type.1 = phi %union.tree_node* [ %54, %if.then205 ], [ %type.0, %land.lhs.true196 ], [ %type.0, %land.lhs.true ], [ %type.0, %if.end185 ], !dbg !13111
  call void @llvm.dbg.value(metadata %union.tree_node* %type.1, metadata !13085, metadata !DIExpression()), !dbg !13111
  store %union.tree_node* %type.1, %union.tree_node** %ptype, align 8, !dbg !13240
  br label %cleanup, !dbg !13241

cleanup:                                          ; preds = %if.else78, %if.end206
  %retval.0 = phi i32 [ %failure.5, %if.end206 ], [ 2, %if.else78 ], !dbg !13111
  ret i32 %retval.0, !dbg !13242
}

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !13243 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !13249, metadata !DIExpression()), !dbg !13250
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !13251
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !13251

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !13251
  %0 = load i32, i32* %num, align 8, !dbg !13251
  br label %cond.end, !dbg !13251

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !13251
  ret i32 %cond, !dbg !13251
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !13252 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !13257, metadata !DIExpression()), !dbg !13259
  call void @llvm.dbg.value(metadata i32 0, metadata !13258, metadata !DIExpression()), !dbg !13259
  br label %land.end, !dbg !13260

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 0, !dbg !13260
  ret %struct.constructor_elt_d* %arrayidx, !dbg !13260
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_, %struct.constructor_elt_d** %ptr) unnamed_addr #0 !dbg !13261 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !13266, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !13267, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ptr, metadata !13268, metadata !DIExpression()), !dbg !13269
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !13270
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !13270

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !13270
  %0 = load i32, i32* %num, align 8, !dbg !13270
  %cmp = icmp ugt i32 %0, %ix_, !dbg !13270
  br i1 %cmp, label %if.then, label %if.else, !dbg !13272

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !13273
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !13273
  br label %return, !dbg !13273

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !13275

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.constructor_elt_d* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !13277
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !13277
  store %struct.constructor_elt_d* %storemerge, %struct.constructor_elt_d** %ptr, align 8, !dbg !13277
  ret i32 %retval.0, !dbg !13272
}

declare dso_local %union.tree_node* @strip_array_types(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_distinct_type_copy(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @layout_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @iterative_hash(i8*, i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @type_hash_canon(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @builtin_type_for_size(i32 %size, i8 zeroext %unsignedp) local_unnamed_addr #5 !dbg !13278 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !13282, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.value(metadata i8 %unsignedp, metadata !13283, metadata !DIExpression()), !dbg !13285
  %0 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !13286
  %conv = zext i8 %unsignedp to i32, !dbg !13287
  %call = tail call %union.tree_node* %0(i32 %size, i32 %conv) #7, !dbg !13288
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13284, metadata !DIExpression()), !dbg !13285
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !13289
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13289
  %cond = select i1 %tobool, %union.tree_node* %1, %union.tree_node* %call, !dbg !13289
  ret %union.tree_node* %cond, !dbg !13290
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @resolve_overloaded_builtin(i32 %loc, %union.tree_node* %function, %struct.VEC_tree_gc* %params) local_unnamed_addr #5 !dbg !13291 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !13295, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata %union.tree_node* %function, metadata !13296, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %params, metadata !13297, metadata !DIExpression()), !dbg !13305
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %function, i64 0, i32 0, i32 5, !dbg !13306
  %bf.load = load i32, i32* %function_code, align 8, !dbg !13306
  %bf.clear = and i32 %bf.load, 2047, !dbg !13306
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !13298, metadata !DIExpression()), !dbg !13305
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !13307
  %bf.clear3 = and i32 %bf.lshr, 3, !dbg !13307
  switch i32 %bf.clear3, label %cleanup27 [
    i32 3, label %sw.epilog
    i32 2, label %sw.bb
  ], !dbg !13308

sw.bb:                                            ; preds = %entry
  %0 = load %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (i32, %union.tree_node*, i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 26), align 8, !dbg !13309
  %tobool = icmp eq %union.tree_node* (i32, %union.tree_node*, i8*)* %0, null, !dbg !13312
  br i1 %tobool, label %cleanup27, label %if.then, !dbg !13313

if.then:                                          ; preds = %sw.bb
  %1 = bitcast %struct.VEC_tree_gc* %params to i8*, !dbg !13314
  %call = tail call %union.tree_node* %0(i32 %loc, %union.tree_node* %function, i8* %1) #7, !dbg !13315
  br label %cleanup27, !dbg !13316

sw.epilog:                                        ; preds = %entry
  switch i32 %bf.clear, label %cleanup27 [
    i32 555, label %sw.bb4
    i32 561, label %sw.bb4
    i32 567, label %sw.bb4
    i32 573, label %sw.bb4
    i32 579, label %sw.bb4
    i32 585, label %sw.bb4
    i32 591, label %sw.bb4
    i32 597, label %sw.bb4
    i32 603, label %sw.bb4
    i32 609, label %sw.bb4
    i32 615, label %sw.bb4
    i32 621, label %sw.bb4
    i32 627, label %sw.bb4
    i32 633, label %sw.bb4
    i32 639, label %sw.bb4
    i32 645, label %sw.bb4
  ], !dbg !13317

sw.bb4:                                           ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %call5 = tail call fastcc i32 @sync_resolve_size(%union.tree_node* %function, %struct.VEC_tree_gc* %params) #8, !dbg !13318
  call void @llvm.dbg.value(metadata i32 %call5, metadata !13299, metadata !DIExpression()), !dbg !13319
  %cmp = icmp eq i32 %call5, 0, !dbg !13320
  br i1 %cmp, label %if.then6, label %if.end, !dbg !13322

if.then6:                                         ; preds = %sw.bb4
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13323
  br label %cleanup27, !dbg !13324

if.end:                                           ; preds = %sw.bb4
  %conv = sext i32 %call5 to i64, !dbg !13325
  %call7 = tail call i32 @exact_log2(i64 %conv) #7, !dbg !13326
  %add = add i32 %bf.clear, %call7, !dbg !13327
  %add8 = add i32 %add, 1, !dbg !13328
  %idxprom = zext i32 %add8 to i64, !dbg !13329
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %idxprom, !dbg !13329
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !13329
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13302, metadata !DIExpression()), !dbg !13319
  %call9 = tail call fastcc zeroext i8 @sync_resolve_params(%union.tree_node* %function, %union.tree_node* %3, %struct.VEC_tree_gc* %params) #8, !dbg !13330
  %tobool10 = icmp eq i8 %call9, 0, !dbg !13330
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !13332

if.then11:                                        ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13333
  br label %cleanup27, !dbg !13334

if.end12:                                         ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %params, i64 0, i32 0, !dbg !13335
  %call14 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 0) #8, !dbg !13335
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !13303, metadata !DIExpression()), !dbg !13319
  %call15 = tail call %union.tree_node* @build_function_call_vec(i32 %loc, %union.tree_node* %3, %struct.VEC_tree_gc* %params, %struct.VEC_tree_gc* null) #7, !dbg !13336
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !13304, metadata !DIExpression()), !dbg !13319
  switch i32 %bf.clear, label %if.then20 [
    i32 627, label %cleanup27
    i32 645, label %cleanup27
  ], !dbg !13337

if.then20:                                        ; preds = %if.end12
  %call21 = tail call fastcc %union.tree_node* @sync_resolve_return(%union.tree_node* %call14, %union.tree_node* %call15) #8, !dbg !13339
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !13304, metadata !DIExpression()), !dbg !13319
  br label %cleanup27, !dbg !13340

cleanup27:                                        ; preds = %sw.bb, %sw.epilog, %if.then6, %if.then11, %if.end12, %if.end12, %if.then20, %entry, %if.then
  %retval.1 = phi %union.tree_node* [ %call, %if.then ], [ null, %sw.bb ], [ null, %entry ], [ %2, %if.then6 ], [ %4, %if.then11 ], [ %call21, %if.then20 ], [ %call15, %if.end12 ], [ %call15, %if.end12 ], [ null, %sw.epilog ], !dbg !13305
  ret %union.tree_node* %retval.1, !dbg !13341
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @sync_resolve_size(%union.tree_node* %function, %struct.VEC_tree_gc* %params) unnamed_addr #5 !dbg !13342 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %function, metadata !13346, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %params, metadata !13347, metadata !DIExpression()), !dbg !13351
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %params, i64 0, i32 0, !dbg !13352
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !13352
  %cmp = icmp eq i32 %call, 0, !dbg !13352
  br i1 %cmp, label %if.then, label %if.end, !dbg !13354

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1217, i64 0, i64 0), %union.tree_node* %function) #7, !dbg !13355
  br label %cleanup, !dbg !13357

if.end:                                           ; preds = %entry
  %call7 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 0) #8, !dbg !13358
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13358
  %0 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !13358
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13348, metadata !DIExpression()), !dbg !13351
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13359
  %bf.load = load i64, i64* %1, align 8, !dbg !13359
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13361
  %cmp10 = icmp eq i64 %bf.cast1, 10, !dbg !13361
  br i1 %cmp10, label %if.end12, label %incompatible, !dbg !13362

if.end12:                                         ; preds = %if.end
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13363
  %2 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !13363
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !13348, metadata !DIExpression()), !dbg !13351
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13364
  %bf.load16 = load i64, i64* %3, align 8, !dbg !13364
  %bf.cast182 = and i64 %bf.load16, 65535, !dbg !13364
  %cmp19 = icmp eq i64 %bf.cast182, 6, !dbg !13364
  br i1 %cmp19, label %if.end43, label %lor.lhs.false, !dbg !13364

lor.lhs.false:                                    ; preds = %if.end12
  %cmp24 = icmp eq i64 %bf.cast182, 7, !dbg !13364
  br i1 %cmp24, label %if.end43, label %lor.lhs.false25, !dbg !13364

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %cmp30 = icmp eq i64 %bf.cast182, 8, !dbg !13364
  br i1 %cmp30, label %if.end43, label %land.lhs.true, !dbg !13366

land.lhs.true:                                    ; preds = %lor.lhs.false25
  %cmp35 = icmp eq i64 %bf.cast182, 10, !dbg !13367
  br i1 %cmp35, label %if.end43, label %lor.lhs.false36, !dbg !13367

lor.lhs.false36:                                  ; preds = %land.lhs.true
  %cmp41 = icmp eq i64 %bf.cast182, 12, !dbg !13367
  br i1 %cmp41, label %if.end43, label %incompatible, !dbg !13368

if.end43:                                         ; preds = %lor.lhs.false36, %land.lhs.true, %lor.lhs.false25, %lor.lhs.false, %if.end12
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13369
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !13369
  %call45 = tail call i64 @tree_low_cst(%union.tree_node* %5, i32 1) #7, !dbg !13370
  %conv = trunc i64 %call45 to i32, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %conv, metadata !13349, metadata !DIExpression()), !dbg !13351
  switch i32 %conv, label %incompatible [
    i32 1, label %cleanup
    i32 2, label %cleanup
    i32 4, label %cleanup
    i32 8, label %cleanup
    i32 16, label %cleanup
  ], !dbg !13371

incompatible:                                     ; preds = %if.end, %if.end43, %lor.lhs.false36
  call void @llvm.dbg.label(metadata !13350), !dbg !13373
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1218, i64 0, i64 0), i32 1, %union.tree_node* %function) #7, !dbg !13374
  br label %cleanup, !dbg !13375

cleanup:                                          ; preds = %if.end43, %if.end43, %if.end43, %if.end43, %if.end43, %incompatible, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %incompatible ], [ %conv, %if.end43 ], [ %conv, %if.end43 ], [ %conv, %if.end43 ], [ %conv, %if.end43 ], [ %conv, %if.end43 ], !dbg !13351
  ret i32 %retval.0, !dbg !13376
}

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @sync_resolve_params(%union.tree_node* %orig_function, %union.tree_node* %function, %struct.VEC_tree_gc* %params) unnamed_addr #5 !dbg !13377 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_function, metadata !13381, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata %union.tree_node* %function, metadata !13382, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %params, metadata !13383, metadata !DIExpression()), !dbg !13390
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %function, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13391
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !13391
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !13391
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !13391
  %2 = bitcast %union.tree_node** %values to %struct.tree_common**, !dbg !13391
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !13391
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 1, !dbg !13392
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !13392
  %5 = bitcast %union.tree_node* %4 to %struct.tree_list*, !dbg !13390
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !13384, metadata !DIExpression()), !dbg !13390
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %params, i64 0, i32 0, !dbg !13393
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 0) #8, !dbg !13393
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13393
  %6 = bitcast %union.tree_node** %type4 to %struct.tree_common**, !dbg !13393
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !13393
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !13393
  %8 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !13393
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !13385, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 2, metadata !13386, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 0, metadata !13387, metadata !DIExpression()), !dbg !13390
  br label %while.cond, !dbg !13394

while.cond:                                       ; preds = %cleanup, %entry
  %9 = phi %struct.tree_list* [ %5, %entry ], [ %14, %cleanup ], !dbg !13395
  %arg_types.0 = phi %union.tree_node* [ %4, %entry ], [ %arg_types.1, %cleanup ], !dbg !13395
  %parmnum.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !13390
  call void @llvm.dbg.value(metadata i32 %parmnum.0, metadata !13387, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0, metadata !13384, metadata !DIExpression()), !dbg !13390
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !13396
  %cmp = icmp eq %union.tree_node* %arg_types.0, %10, !dbg !13397
  br i1 %cmp, label %while.end, label %while.body, !dbg !13394

while.body:                                       ; preds = %while.cond
  %inc = add i32 %parmnum.0, 1, !dbg !13398
  call void @llvm.dbg.value(metadata i32 %inc, metadata !13387, metadata !DIExpression()), !dbg !13390
  %call13 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !13399
  %cmp14 = icmp ugt i32 %call13, %inc, !dbg !13401
  br i1 %cmp14, label %if.end, label %if.then, !dbg !13402

if.then:                                          ; preds = %while.body
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1217, i64 0, i64 0), %union.tree_node* %orig_function) #7, !dbg !13403
  br label %cleanup, !dbg !13405

if.end:                                           ; preds = %while.body
  %call21 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 %inc) #8, !dbg !13406
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !13388, metadata !DIExpression()), !dbg !13407
  %call22 = tail call %union.tree_node* @convert(%union.tree_node* %8, %union.tree_node* %call21) #7, !dbg !13408
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !13388, metadata !DIExpression()), !dbg !13407
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %9, i64 0, i32 2, !dbg !13409
  %11 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !13409
  %call23 = tail call %union.tree_node* @convert(%union.tree_node* %11, %union.tree_node* %call22) #7, !dbg !13410
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !13388, metadata !DIExpression()), !dbg !13407
  %call30 = tail call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base, i32 %inc, %union.tree_node* %call23) #8, !dbg !13411
  %chain32 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_types.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13412
  %12 = load %union.tree_node*, %union.tree_node** %chain32, align 8, !dbg !13412
  %13 = bitcast %union.tree_node* %12 to %struct.tree_list*, !dbg !13390
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !13384, metadata !DIExpression()), !dbg !13390
  br label %cleanup, !dbg !13413

cleanup:                                          ; preds = %if.end, %if.then
  %14 = phi %struct.tree_list* [ %9, %if.then ], [ %13, %if.end ], !dbg !13390
  %arg_types.1 = phi %union.tree_node* [ %arg_types.0, %if.then ], [ %12, %if.end ], !dbg !13390
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.1, metadata !13384, metadata !DIExpression()), !dbg !13390
  br i1 %cleanup.dest.slot.0, label %while.cond, label %cleanup40.loopexit, !llvm.loop !13414

while.end:                                        ; preds = %while.cond
  %parmnum.0.lcssa = phi i32 [ %parmnum.0, %while.cond ], !dbg !13390
  call void @llvm.dbg.value(metadata i32 %parmnum.0.lcssa, metadata !13387, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 %parmnum.0.lcssa, metadata !13387, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 %parmnum.0.lcssa, metadata !13387, metadata !DIExpression()), !dbg !13390
  %add = add i32 %parmnum.0.lcssa, 1, !dbg !13415
  tail call fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %base, i32 %add) #8, !dbg !13415
  br label %cleanup40, !dbg !13416

cleanup40.loopexit:                               ; preds = %cleanup
  br label %cleanup40, !dbg !13417

cleanup40:                                        ; preds = %cleanup40.loopexit, %while.end
  %retval.2 = phi i8 [ 1, %while.end ], [ 0, %cleanup40.loopexit ], !dbg !13390
  ret i8 %retval.2, !dbg !13417
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !13418 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !13424, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !13425, metadata !DIExpression()), !dbg !13426
  br label %land.end, !dbg !13427

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !13427
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !13427
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !13427
  ret %union.tree_node* %0, !dbg !13427
}

declare dso_local %union.tree_node* @build_function_call_vec(i32, %union.tree_node*, %struct.VEC_tree_gc*, %struct.VEC_tree_gc*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @sync_resolve_return(%union.tree_node* %first_param, %union.tree_node* %result) unnamed_addr #5 !dbg !13428 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %first_param, metadata !13430, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !13431, metadata !DIExpression()), !dbg !13433
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %first_param, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13434
  %0 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !13434
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !13434
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !13434
  %2 = bitcast %union.tree_node** %type2 to %struct.tree_type**, !dbg !13434
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !13434
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 16, !dbg !13435
  %4 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !13435
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !13432, metadata !DIExpression()), !dbg !13433
  %call = tail call %union.tree_node* @convert(%union.tree_node* %4, %union.tree_node* %result) #7, !dbg !13436
  ret %union.tree_node* %call, !dbg !13437
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @same_scalar_type_ignoring_signedness(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !13438 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !13442, metadata !DIExpression()), !dbg !13446
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !13443, metadata !DIExpression()), !dbg !13446
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13447
  %bf.load = load i64, i64* %0, align 8, !dbg !13447
  %1 = trunc i64 %bf.load to i16, !dbg !13447
  call void @llvm.dbg.value(metadata i32 undef, metadata !13445, metadata !DIExpression()), !dbg !13446
  switch i16 %1, label %cond.true [
    i16 8, label %land.lhs.true
    i16 9, label %land.lhs.true
    i16 11, label %land.lhs.true
  ], !dbg !13448

land.lhs.true:                                    ; preds = %entry, %entry, %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13449
  %bf.load2 = load i64, i64* %2, align 8, !dbg !13449
  %3 = trunc i64 %bf.load2 to i16, !dbg !13449
  switch i16 %3, label %cond.true [
    i16 8, label %cond.end
    i16 9, label %cond.end
    i16 11, label %cond.end
  ], !dbg !13448

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 8834, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !13448
  br label %cond.end, !dbg !13448

cond.end:                                         ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true, %cond.true
  %call = tail call %union.tree_node* @c_common_signed_type(%union.tree_node* %t1) #8, !dbg !13450
  %call13 = tail call %union.tree_node* @c_common_signed_type(%union.tree_node* %t2) #8, !dbg !13451
  %cmp14 = icmp eq %union.tree_node* %call, %call13, !dbg !13452
  %conv15 = zext i1 %cmp14 to i8, !dbg !13450
  ret i8 %conv15, !dbg !13453
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @check_missing_format_attribute(%union.tree_node* %ltype, %union.tree_node* %rtype) local_unnamed_addr #5 !dbg !13454 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ltype, metadata !13456, metadata !DIExpression()), !dbg !13464
  call void @llvm.dbg.value(metadata %union.tree_node* %rtype, metadata !13457, metadata !DIExpression()), !dbg !13464
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %rtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13465
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !13465
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !13465
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %ltype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13466
  %2 = bitcast %union.tree_node** %type2 to %struct.tree_type**, !dbg !13466
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !13466
  %attributes = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 4, !dbg !13467
  br label %for.cond, !dbg !13469

for.cond:                                         ; preds = %for.inc, %entry
  %ra.0.in = phi %union.tree_node** [ %attributes, %entry ], [ %chain, %for.inc ]
  %ra.0 = load %union.tree_node*, %union.tree_node** %ra.0.in, align 8, !dbg !13470
  call void @llvm.dbg.value(metadata %union.tree_node* %ra.0, metadata !13460, metadata !DIExpression()), !dbg !13464
  %cond = icmp eq %union.tree_node* %ra.0, null, !dbg !13471
  br i1 %cond, label %cleanup.loopexit, label %for.body, !dbg !13471

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %ra.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13472
  %4 = bitcast i32* %purpose to %union.tree_node**, !dbg !13472
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !13472
  %call = tail call i32 @is_attribute_p(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i64 0, i64 0), %union.tree_node* %5) #7, !dbg !13475
  %tobool4 = icmp eq i32 %call, 0, !dbg !13475
  br i1 %tobool4, label %for.inc, label %for.end, !dbg !13476

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %ra.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13477
  br label %for.cond, !dbg !13478, !llvm.loop !13479

for.end:                                          ; preds = %for.body
  %attributes9 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 4, !dbg !13481
  br label %for.cond10, !dbg !13483

for.cond10:                                       ; preds = %for.inc19, %for.end
  %la.0.in = phi %union.tree_node** [ %attributes9, %for.end ], [ %chain21, %for.inc19 ]
  %la.0 = load %union.tree_node*, %union.tree_node** %la.0.in, align 8, !dbg !13484
  call void @llvm.dbg.value(metadata %union.tree_node* %la.0, metadata !13461, metadata !DIExpression()), !dbg !13485
  %tobool11 = icmp eq %union.tree_node* %la.0, null, !dbg !13486
  br i1 %tobool11, label %for.end22, label %for.body12, !dbg !13486

for.body12:                                       ; preds = %for.cond10
  %purpose14 = getelementptr inbounds %union.tree_node, %union.tree_node* %la.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13487
  %6 = bitcast i32* %purpose14 to %union.tree_node**, !dbg !13487
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !13487
  %call15 = tail call i32 @is_attribute_p(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i64 0, i64 0), %union.tree_node* %7) #7, !dbg !13490
  %tobool16 = icmp eq i32 %call15, 0, !dbg !13490
  br i1 %tobool16, label %for.inc19, label %for.end22, !dbg !13491

for.inc19:                                        ; preds = %for.body12
  %chain21 = getelementptr inbounds %union.tree_node, %union.tree_node* %la.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13492
  br label %for.cond10, !dbg !13493, !llvm.loop !13494

for.end22:                                        ; preds = %for.body12, %for.cond10
  %tobool11.lcssa = phi i1 [ %tobool11, %for.body12 ], [ %tobool11, %for.cond10 ], !dbg !13486
  %conv = zext i1 %tobool11.lcssa to i8, !dbg !13496
  br label %cleanup

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !13497

cleanup:                                          ; preds = %cleanup.loopexit, %for.end22
  %retval.0 = phi i8 [ %conv, %for.end22 ], [ 0, %cleanup.loopexit ], !dbg !13498
  ret i8 %retval.0, !dbg !13497
}

; Function Attrs: nounwind uwtable
define dso_local void @warn_array_subscript_with_type_char(%union.tree_node* %index) local_unnamed_addr #5 !dbg !13499 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %index, metadata !13501, metadata !DIExpression()), !dbg !13502
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13503
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !13503
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !13503
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 16, !dbg !13503
  %2 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !13503
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !13505
  %cmp = icmp eq %union.tree_node* %2, %3, !dbg !13506
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13507

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13508
  %bf.load = load i64, i64* %4, align 8, !dbg !13508
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13509
  %cmp2 = icmp eq i64 %bf.cast1, 23, !dbg !13509
  br i1 %cmp2, label %if.end, label %if.then, !dbg !13510

if.then:                                          ; preds = %land.lhs.true
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 54, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.389, i64 0, i64 0)) #7, !dbg !13511
  br label %if.end, !dbg !13511

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  ret void, !dbg !13512
}

; Function Attrs: nounwind uwtable
define dso_local void @warn_about_parentheses(i32 %code, i32 %code_left, %union.tree_node* %arg_left, i32 %code_right, %union.tree_node* %arg_right) local_unnamed_addr #5 !dbg !13513 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !13517, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata i32 %code_left, metadata !13518, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_left, metadata !13519, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata i32 %code_right, metadata !13520, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_right, metadata !13521, metadata !DIExpression()), !dbg !13522
  %0 = load i32, i32* @warn_parentheses, align 4, !dbg !13523
  %tobool = icmp eq i32 %0, 0, !dbg !13523
  br i1 %tobool, label %return, label %if.end, !dbg !13525

if.end:                                           ; preds = %entry
  switch i32 %code, label %sw.default [
    i32 83, label %sw.bb
    i32 84, label %sw.bb10
    i32 92, label %sw.bb24
    i32 87, label %sw.bb31
    i32 88, label %sw.bb82
    i32 89, label %sw.bb116
    i32 101, label %sw.bb179
    i32 102, label %sw.bb192
  ], !dbg !13526

sw.bb:                                            ; preds = %if.end
  %cmp = icmp eq i32 %code_left, 63, !dbg !13527
  %cmp1 = icmp eq i32 %code_right, 63, !dbg !13530
  %or.cond = or i1 %cmp, %cmp1, !dbg !13531
  br i1 %or.cond, label %if.then2, label %if.else, !dbg !13531

if.then2:                                         ; preds = %sw.bb
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.390, i64 0, i64 0)) #7, !dbg !13532
  br label %return, !dbg !13532

if.else:                                          ; preds = %sw.bb
  %cmp3 = icmp eq i32 %code_left, 64, !dbg !13533
  %cmp5 = icmp eq i32 %code_right, 64, !dbg !13535
  %or.cond1 = or i1 %cmp3, %cmp5, !dbg !13536
  br i1 %or.cond1, label %if.then6, label %return, !dbg !13536

if.then6:                                         ; preds = %if.else
  %call7 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.391, i64 0, i64 0)) #7, !dbg !13537
  br label %return, !dbg !13537

sw.bb10:                                          ; preds = %if.end
  %cmp11 = icmp eq i32 %code_left, 63, !dbg !13538
  %cmp13 = icmp eq i32 %code_right, 63, !dbg !13540
  %or.cond2 = or i1 %cmp11, %cmp13, !dbg !13541
  br i1 %or.cond2, label %if.then14, label %if.else16, !dbg !13541

if.then14:                                        ; preds = %sw.bb10
  %call15 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.392, i64 0, i64 0)) #7, !dbg !13542
  br label %return, !dbg !13542

if.else16:                                        ; preds = %sw.bb10
  %cmp17 = icmp eq i32 %code_left, 64, !dbg !13543
  %cmp19 = icmp eq i32 %code_right, 64, !dbg !13545
  %or.cond3 = or i1 %cmp17, %cmp19, !dbg !13546
  br i1 %or.cond3, label %if.then20, label %return, !dbg !13546

if.then20:                                        ; preds = %if.else16
  %call21 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.393, i64 0, i64 0)) #7, !dbg !13547
  br label %return, !dbg !13547

sw.bb24:                                          ; preds = %if.end
  %cmp25 = icmp eq i32 %code_left, 91, !dbg !13548
  %cmp27 = icmp eq i32 %code_right, 91, !dbg !13550
  %or.cond4 = or i1 %cmp25, %cmp27, !dbg !13551
  br i1 %or.cond4, label %if.then28, label %return, !dbg !13551

if.then28:                                        ; preds = %sw.bb24
  %call29 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.394, i64 0, i64 0)) #7, !dbg !13552
  br label %return, !dbg !13552

sw.bb31:                                          ; preds = %if.end
  switch i32 %code_left, label %lor.lhs.false39 [
    i32 89, label %if.then47
    i32 88, label %if.then47
    i32 63, label %if.then47
    i32 64, label %if.then47
  ], !dbg !13553

lor.lhs.false39:                                  ; preds = %sw.bb31
  switch i32 %code_right, label %if.else49 [
    i32 89, label %if.then47
    i32 88, label %if.then47
    i32 63, label %if.then47
    i32 64, label %if.then47
  ], !dbg !13555

if.then47:                                        ; preds = %lor.lhs.false39, %lor.lhs.false39, %lor.lhs.false39, %lor.lhs.false39, %sw.bb31, %sw.bb31, %sw.bb31, %sw.bb31
  %call48 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.395, i64 0, i64 0)) #7, !dbg !13556
  br label %return, !dbg !13556

if.else49:                                        ; preds = %lor.lhs.false39
  %idxprom = sext i32 %code_left to i64, !dbg !13557
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !13557
  %1 = load i32, i32* %arrayidx, align 4, !dbg !13557
  %cmp50 = icmp eq i32 %1, 5, !dbg !13559
  br i1 %cmp50, label %if.then55, label %lor.lhs.false51, !dbg !13560

lor.lhs.false51:                                  ; preds = %if.else49
  %idxprom52 = sext i32 %code_right to i64, !dbg !13561
  %arrayidx53 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom52, !dbg !13561
  %2 = load i32, i32* %arrayidx53, align 4, !dbg !13561
  %cmp54 = icmp eq i32 %2, 5, !dbg !13562
  br i1 %cmp54, label %if.then55, label %if.else57, !dbg !13563

if.then55:                                        ; preds = %lor.lhs.false51, %if.else49
  %call56 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.396, i64 0, i64 0)) #7, !dbg !13564
  br label %return, !dbg !13564

if.else57:                                        ; preds = %lor.lhs.false51
  %cmp58 = icmp eq i32 %code_left, 96, !dbg !13565
  br i1 %cmp58, label %land.lhs.true, label %return, !dbg !13567

land.lhs.true:                                    ; preds = %if.else57
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13568
  %bf.load = load i64, i64* %3, align 8, !dbg !13568
  %4 = trunc i64 %bf.load to i32, !dbg !13568
  %bf.cast = and i32 %4, 65535, !dbg !13568
  %call59 = tail call fastcc zeroext i8 @truth_value_p(i32 %bf.cast) #8, !dbg !13568
  %tobool60 = icmp eq i8 %call59, 0, !dbg !13568
  br i1 %tobool60, label %lor.lhs.false61, label %return, !dbg !13568

lor.lhs.false61:                                  ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13568
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !13568
  %6 = load i64*, i64** %5, align 8, !dbg !13568
  %bf.load63 = load i64, i64* %6, align 8, !dbg !13568
  %bf.cast6516 = and i64 %bf.load63, 65535, !dbg !13568
  %cmp66 = icmp eq i64 %bf.cast6516, 7, !dbg !13568
  br i1 %cmp66, label %return, label %lor.lhs.false68, !dbg !13568

lor.lhs.false68:                                  ; preds = %lor.lhs.false61
  %cmp69 = icmp eq i32 %code_right, 23, !dbg !13568
  br i1 %cmp69, label %if.then77, label %land.lhs.true71, !dbg !13568

land.lhs.true71:                                  ; preds = %lor.lhs.false68
  %call72 = tail call i32 @integer_onep(%union.tree_node* %arg_right) #7, !dbg !13568
  %tobool73 = icmp eq i32 %call72, 0, !dbg !13568
  br i1 %tobool73, label %lor.lhs.false74, label %return, !dbg !13568

lor.lhs.false74:                                  ; preds = %land.lhs.true71
  %call75 = tail call i32 @integer_zerop(%union.tree_node* %arg_right) #7, !dbg !13568
  %tobool76 = icmp eq i32 %call75, 0, !dbg !13568
  br i1 %tobool76, label %if.then77, label %return, !dbg !13569

if.then77:                                        ; preds = %lor.lhs.false74, %lor.lhs.false68
  %call78 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.397, i64 0, i64 0)) #7, !dbg !13570
  br label %return, !dbg !13570

sw.bb82:                                          ; preds = %if.end
  switch i32 %code_left, label %lor.lhs.false91 [
    i32 89, label %if.then100
    i32 63, label %if.then100
    i32 64, label %if.then100
  ], !dbg !13571

lor.lhs.false91:                                  ; preds = %sw.bb82
  switch i32 %code_right, label %if.else102 [
    i32 89, label %if.then100
    i32 63, label %if.then100
    i32 64, label %if.then100
  ], !dbg !13573

if.then100:                                       ; preds = %lor.lhs.false91, %lor.lhs.false91, %lor.lhs.false91, %sw.bb82, %sw.bb82, %sw.bb82
  %call101 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.398, i64 0, i64 0)) #7, !dbg !13574
  br label %return, !dbg !13574

if.else102:                                       ; preds = %lor.lhs.false91
  %idxprom103 = sext i32 %code_left to i64, !dbg !13575
  %arrayidx104 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom103, !dbg !13575
  %7 = load i32, i32* %arrayidx104, align 4, !dbg !13575
  %cmp105 = icmp eq i32 %7, 5, !dbg !13577
  br i1 %cmp105, label %if.then112, label %lor.lhs.false107, !dbg !13578

lor.lhs.false107:                                 ; preds = %if.else102
  %idxprom108 = sext i32 %code_right to i64, !dbg !13579
  %arrayidx109 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom108, !dbg !13579
  %8 = load i32, i32* %arrayidx109, align 4, !dbg !13579
  %cmp110 = icmp eq i32 %8, 5, !dbg !13580
  br i1 %cmp110, label %if.then112, label %return, !dbg !13581

if.then112:                                       ; preds = %lor.lhs.false107, %if.else102
  %call113 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.399, i64 0, i64 0)) #7, !dbg !13582
  br label %return, !dbg !13582

sw.bb116:                                         ; preds = %if.end
  %cmp117 = icmp eq i32 %code_left, 63, !dbg !13583
  %cmp120 = icmp eq i32 %code_right, 63, !dbg !13585
  %or.cond5 = or i1 %cmp117, %cmp120, !dbg !13586
  br i1 %or.cond5, label %if.then122, label %if.else124, !dbg !13586

if.then122:                                       ; preds = %sw.bb116
  %call123 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.400, i64 0, i64 0)) #7, !dbg !13587
  br label %return, !dbg !13587

if.else124:                                       ; preds = %sw.bb116
  %cmp125 = icmp eq i32 %code_left, 64, !dbg !13588
  %cmp128 = icmp eq i32 %code_right, 64, !dbg !13590
  %or.cond6 = or i1 %cmp125, %cmp128, !dbg !13591
  br i1 %or.cond6, label %if.then130, label %if.else132, !dbg !13591

if.then130:                                       ; preds = %if.else124
  %call131 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.401, i64 0, i64 0)) #7, !dbg !13592
  br label %return, !dbg !13592

if.else132:                                       ; preds = %if.else124
  %idxprom133 = sext i32 %code_left to i64, !dbg !13593
  %arrayidx134 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom133, !dbg !13593
  %9 = load i32, i32* %arrayidx134, align 4, !dbg !13593
  %cmp135 = icmp eq i32 %9, 5, !dbg !13595
  br i1 %cmp135, label %if.then142, label %lor.lhs.false137, !dbg !13596

lor.lhs.false137:                                 ; preds = %if.else132
  %idxprom138 = sext i32 %code_right to i64, !dbg !13597
  %arrayidx139 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom138, !dbg !13597
  %10 = load i32, i32* %arrayidx139, align 4, !dbg !13597
  %cmp140 = icmp eq i32 %10, 5, !dbg !13598
  br i1 %cmp140, label %if.then142, label %if.else144, !dbg !13599

if.then142:                                       ; preds = %lor.lhs.false137, %if.else132
  %call143 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.402, i64 0, i64 0)) #7, !dbg !13600
  br label %return, !dbg !13600

if.else144:                                       ; preds = %lor.lhs.false137
  %cmp145 = icmp eq i32 %code_left, 96, !dbg !13601
  br i1 %cmp145, label %land.lhs.true147, label %return, !dbg !13603

land.lhs.true147:                                 ; preds = %if.else144
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13604
  %bf.load149 = load i64, i64* %11, align 8, !dbg !13604
  %12 = trunc i64 %bf.load149 to i32, !dbg !13604
  %bf.cast151 = and i32 %12, 65535, !dbg !13604
  %call152 = tail call fastcc zeroext i8 @truth_value_p(i32 %bf.cast151) #8, !dbg !13604
  %tobool154 = icmp eq i8 %call152, 0, !dbg !13604
  br i1 %tobool154, label %lor.lhs.false155, label %return, !dbg !13604

lor.lhs.false155:                                 ; preds = %land.lhs.true147
  %type157 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13604
  %13 = bitcast %union.tree_node** %type157 to i64**, !dbg !13604
  %14 = load i64*, i64** %13, align 8, !dbg !13604
  %bf.load159 = load i64, i64* %14, align 8, !dbg !13604
  %bf.cast16115 = and i64 %bf.load159, 65535, !dbg !13604
  %cmp162 = icmp eq i64 %bf.cast16115, 7, !dbg !13604
  br i1 %cmp162, label %return, label %lor.lhs.false164, !dbg !13604

lor.lhs.false164:                                 ; preds = %lor.lhs.false155
  %cmp165 = icmp eq i32 %code_right, 23, !dbg !13604
  br i1 %cmp165, label %if.then173, label %land.lhs.true167, !dbg !13604

land.lhs.true167:                                 ; preds = %lor.lhs.false164
  %call168 = tail call i32 @integer_onep(%union.tree_node* %arg_right) #7, !dbg !13604
  %tobool169 = icmp eq i32 %call168, 0, !dbg !13604
  br i1 %tobool169, label %lor.lhs.false170, label %return, !dbg !13604

lor.lhs.false170:                                 ; preds = %land.lhs.true167
  %call171 = tail call i32 @integer_zerop(%union.tree_node* %arg_right) #7, !dbg !13604
  %tobool172 = icmp eq i32 %call171, 0, !dbg !13604
  br i1 %tobool172, label %if.then173, label %return, !dbg !13605

if.then173:                                       ; preds = %lor.lhs.false170, %lor.lhs.false164
  %call174 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.403, i64 0, i64 0)) #7, !dbg !13606
  br label %return, !dbg !13606

sw.bb179:                                         ; preds = %if.end
  %idxprom180 = sext i32 %code_left to i64, !dbg !13607
  %arrayidx181 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom180, !dbg !13607
  %15 = load i32, i32* %arrayidx181, align 4, !dbg !13607
  %cmp182 = icmp eq i32 %15, 5, !dbg !13609
  br i1 %cmp182, label %if.then189, label %lor.lhs.false184, !dbg !13610

lor.lhs.false184:                                 ; preds = %sw.bb179
  %idxprom185 = sext i32 %code_right to i64, !dbg !13611
  %arrayidx186 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom185, !dbg !13611
  %16 = load i32, i32* %arrayidx186, align 4, !dbg !13611
  %cmp187 = icmp eq i32 %16, 5, !dbg !13612
  br i1 %cmp187, label %if.then189, label %return, !dbg !13613

if.then189:                                       ; preds = %lor.lhs.false184, %sw.bb179
  %call190 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.404, i64 0, i64 0)) #7, !dbg !13614
  br label %return, !dbg !13614

sw.bb192:                                         ; preds = %if.end
  %idxprom193 = sext i32 %code_left to i64, !dbg !13615
  %arrayidx194 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom193, !dbg !13615
  %17 = load i32, i32* %arrayidx194, align 4, !dbg !13615
  %cmp195 = icmp eq i32 %17, 5, !dbg !13617
  br i1 %cmp195, label %if.then202, label %lor.lhs.false197, !dbg !13618

lor.lhs.false197:                                 ; preds = %sw.bb192
  %idxprom198 = sext i32 %code_right to i64, !dbg !13619
  %arrayidx199 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom198, !dbg !13619
  %18 = load i32, i32* %arrayidx199, align 4, !dbg !13619
  %cmp200 = icmp eq i32 %18, 5, !dbg !13620
  br i1 %cmp200, label %if.then202, label %return, !dbg !13621

if.then202:                                       ; preds = %lor.lhs.false197, %sw.bb192
  %call203 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.405, i64 0, i64 0)) #7, !dbg !13622
  br label %return, !dbg !13622

sw.default:                                       ; preds = %if.end
  %idxprom205 = sext i32 %code to i64, !dbg !13623
  %arrayidx206 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom205, !dbg !13623
  %19 = load i32, i32* %arrayidx206, align 4, !dbg !13623
  %cmp207 = icmp eq i32 %19, 5, !dbg !13625
  br i1 %cmp207, label %land.lhs.true209, label %return, !dbg !13626

land.lhs.true209:                                 ; preds = %sw.default
  %idxprom210 = sext i32 %code_left to i64, !dbg !13627
  %arrayidx211 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom210, !dbg !13627
  %20 = load i32, i32* %arrayidx211, align 4, !dbg !13627
  %cmp212 = icmp ne i32 %20, 5, !dbg !13628
  %code_left.off = add i32 %code_left, -101, !dbg !13629
  %switch = icmp ult i32 %code_left.off, 2, !dbg !13629
  %or.cond12 = or i1 %cmp212, %switch, !dbg !13629
  br i1 %or.cond12, label %lor.lhs.false247, label %land.lhs.true220, !dbg !13629

land.lhs.true220:                                 ; preds = %land.lhs.true209
  %type222 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_left, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13630
  %21 = bitcast %union.tree_node** %type222 to i64**, !dbg !13630
  %22 = load i64*, i64** %21, align 8, !dbg !13630
  %bf.load224 = load i64, i64* %22, align 8, !dbg !13630
  %bf.cast22617 = and i64 %bf.load224, 65535, !dbg !13630
  %cmp227 = icmp eq i64 %bf.cast22617, 6, !dbg !13630
  br i1 %cmp227, label %if.then285, label %lor.lhs.false229, !dbg !13630

lor.lhs.false229:                                 ; preds = %land.lhs.true220
  %cmp236 = icmp eq i64 %bf.cast22617, 7, !dbg !13630
  br i1 %cmp236, label %if.then285, label %lor.lhs.false238, !dbg !13630

lor.lhs.false238:                                 ; preds = %lor.lhs.false229
  %cmp245 = icmp eq i64 %bf.cast22617, 8, !dbg !13630
  br i1 %cmp245, label %if.then285, label %lor.lhs.false247, !dbg !13631

lor.lhs.false247:                                 ; preds = %land.lhs.true209, %lor.lhs.false238
  %idxprom248 = sext i32 %code_right to i64, !dbg !13632
  %arrayidx249 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom248, !dbg !13632
  %23 = load i32, i32* %arrayidx249, align 4, !dbg !13632
  %cmp250 = icmp ne i32 %23, 5, !dbg !13633
  %code_right.off = add i32 %code_right, -101, !dbg !13634
  %switch13 = icmp ult i32 %code_right.off, 2, !dbg !13634
  %or.cond14 = or i1 %cmp250, %switch13, !dbg !13634
  br i1 %or.cond14, label %return, label %land.lhs.true258, !dbg !13634

land.lhs.true258:                                 ; preds = %lor.lhs.false247
  %type260 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13635
  %24 = bitcast %union.tree_node** %type260 to i64**, !dbg !13635
  %25 = load i64*, i64** %24, align 8, !dbg !13635
  %bf.load262 = load i64, i64* %25, align 8, !dbg !13635
  %bf.cast26420 = and i64 %bf.load262, 65535, !dbg !13635
  %cmp265 = icmp eq i64 %bf.cast26420, 6, !dbg !13635
  br i1 %cmp265, label %if.then285, label %lor.lhs.false267, !dbg !13635

lor.lhs.false267:                                 ; preds = %land.lhs.true258
  %cmp274 = icmp eq i64 %bf.cast26420, 7, !dbg !13635
  br i1 %cmp274, label %if.then285, label %lor.lhs.false276, !dbg !13635

lor.lhs.false276:                                 ; preds = %lor.lhs.false267
  %cmp283 = icmp eq i64 %bf.cast26420, 8, !dbg !13635
  br i1 %cmp283, label %if.then285, label %return, !dbg !13636

if.then285:                                       ; preds = %lor.lhs.false276, %lor.lhs.false267, %land.lhs.true258, %lor.lhs.false238, %lor.lhs.false229, %land.lhs.true220
  %call286 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 159, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.406, i64 0, i64 0)) #7, !dbg !13637
  br label %return, !dbg !13637

return:                                           ; preds = %lor.lhs.false74, %land.lhs.true71, %land.lhs.true, %lor.lhs.false170, %land.lhs.true167, %land.lhs.true147, %entry, %lor.lhs.false247, %sw.default, %lor.lhs.false276, %if.then285, %lor.lhs.false197, %if.then202, %lor.lhs.false184, %if.then189, %if.then122, %if.then142, %if.then173, %lor.lhs.false155, %if.else144, %if.then130, %if.then100, %if.then112, %lor.lhs.false107, %if.then47, %if.else57, %lor.lhs.false61, %if.then77, %if.then55, %if.then28, %sw.bb24, %if.then14, %if.else16, %if.then20, %if.then2, %if.else, %if.then6
  ret void, !dbg !13638
}

; Function Attrs: nounwind uwtable
define dso_local void @warn_for_unused_label(%union.tree_node* %label) local_unnamed_addr #5 !dbg !13639 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !13641, metadata !DIExpression()), !dbg !13642
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13643
  %bf.load = load i64, i64* %0, align 8, !dbg !13643
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !13643
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !13643
  br i1 %tobool, label %if.then, label %if.end4, !dbg !13645

if.then:                                          ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13646
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !13646
  %tobool1 = icmp eq %union.tree_node* %1, null, !dbg !13646
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !13649

if.then2:                                         ; preds = %if.then
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 222, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.407, i64 0, i64 0), %union.tree_node* %label) #7, !dbg !13650
  br label %if.end4, !dbg !13650

if.else:                                          ; preds = %if.then
  %call3 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 222, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.408, i64 0, i64 0), %union.tree_node* %label) #7, !dbg !13651
  br label %if.end4

if.end4:                                          ; preds = %entry, %if.then2, %if.else
  ret void, !dbg !13652
}

declare dso_local zeroext i8 @default_handle_c_option(i64, i8*, i32) #2

; Function Attrs: nounwind uwtable
define dso_local void @warn_for_div_by_zero(i32 %loc, %union.tree_node* %divisor) local_unnamed_addr #5 !dbg !13653 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !13655, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.value(metadata %union.tree_node* %divisor, metadata !13656, metadata !DIExpression()), !dbg !13657
  %0 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !13658
  %cmp = icmp eq i32 %0, 0, !dbg !13660
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13661

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @integer_zerop(%union.tree_node* %divisor) #7, !dbg !13662
  %tobool = icmp eq i32 %call, 0, !dbg !13662
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13663

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call1 = tail call i32 @fixed_zerop(%union.tree_node* %divisor) #7, !dbg !13664
  %tobool2 = icmp eq i32 %call1, 0, !dbg !13664
  br i1 %tobool2, label %if.end, label %if.then, !dbg !13665

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %call3 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 71, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.409, i64 0, i64 0)) #7, !dbg !13666
  br label %if.end, !dbg !13666

if.end:                                           ; preds = %lor.lhs.false, %if.then, %entry
  ret void, !dbg !13667
}

; Function Attrs: nounwind uwtable
define dso_local void @warn_for_sign_compare(i32 %location, %union.tree_node* %orig_op0, %union.tree_node* %orig_op1, %union.tree_node* %op0, %union.tree_node* %op1, %union.tree_node* %result_type, i32 %resultcode) local_unnamed_addr #5 !dbg !13668 {
entry:
  %unsignedp0 = alloca i32, align 4
  %unsignedp1 = alloca i32, align 4
  %ovf = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %location, metadata !13672, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op0, metadata !13673, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op1, metadata !13674, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !13675, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !13676, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type, metadata !13677, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata i32 %resultcode, metadata !13678, metadata !DIExpression()), !dbg !13699
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13700
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !13700
  %1 = load i64*, i64** %0, align 8, !dbg !13700
  %bf.load = load i64, i64* %1, align 8, !dbg !13700
  %bf.cast8 = lshr i64 %bf.load, 21, !dbg !13701
  %2 = trunc i64 %bf.cast8 to i32, !dbg !13701
  %3 = and i32 %2, 1, !dbg !13701
  call void @llvm.dbg.value(metadata i32 %3, metadata !13679, metadata !DIExpression(DW_OP_constu, 1, DW_OP_xor, DW_OP_stack_value)), !dbg !13699
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13702
  %4 = bitcast %union.tree_node** %type2 to i64**, !dbg !13702
  %5 = load i64*, i64** %4, align 8, !dbg !13702
  %bf.load4 = load i64, i64* %5, align 8, !dbg !13702
  %bf.cast79 = lshr i64 %bf.load4, 21, !dbg !13703
  %6 = trunc i64 %bf.cast79 to i32, !dbg !13703
  %7 = and i32 %6, 1, !dbg !13703
  call void @llvm.dbg.value(metadata i32 %7, metadata !13680, metadata !DIExpression(DW_OP_constu, 1, DW_OP_xor, DW_OP_stack_value)), !dbg !13699
  %8 = bitcast i32* %unsignedp0 to i8*, !dbg !13704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6, !dbg !13704
  %9 = bitcast i32* %unsignedp1 to i8*, !dbg !13704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #6, !dbg !13704
  %10 = load i32, i32* @c_language, align 4, !dbg !13705
  %and = and i32 %10, 2, !dbg !13705
  %cmp = icmp eq i32 %and, 0, !dbg !13705
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !13707

land.lhs.true:                                    ; preds = %entry
  %bf.cast1626 = and i64 %bf.load, 65535, !dbg !13708
  %cmp17 = icmp eq i64 %bf.cast1626, 6, !dbg !13708
  br i1 %cmp17, label %land.lhs.true18, label %if.end, !dbg !13709

land.lhs.true18:                                  ; preds = %land.lhs.true
  %bf.cast2427 = and i64 %bf.load4, 65535, !dbg !13710
  %cmp25 = icmp eq i64 %bf.cast2427, 6, !dbg !13710
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !13711

land.lhs.true26:                                  ; preds = %land.lhs.true18
  %main_variant = getelementptr inbounds i64, i64* %1, i64 16, !dbg !13712
  %11 = bitcast i64* %main_variant to %union.tree_node**, !dbg !13712
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !13712
  %main_variant33 = getelementptr inbounds i64, i64* %5, i64 16, !dbg !13713
  %13 = bitcast i64* %main_variant33 to %union.tree_node**, !dbg !13713
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !13713
  %cmp34 = icmp eq %union.tree_node* %12, %14, !dbg !13714
  br i1 %cmp34, label %if.end, label %if.then, !dbg !13715

if.then:                                          ; preds = %land.lhs.true26
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 177, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.410, i64 0, i64 0), i64* %1, i64* %5) #7, !dbg !13716
  br label %if.end, !dbg !13718

if.end:                                           ; preds = %land.lhs.true26, %entry, %if.then, %land.lhs.true18, %land.lhs.true
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %result_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13719
  %bf.load40 = load i64, i64* %15, align 8, !dbg !13719
  %bf.cast4310 = and i64 %bf.load40, 2097152, !dbg !13719
  %tobool44 = icmp eq i64 %bf.cast4310, 0, !dbg !13719
  %cmp46 = icmp eq i32 %3, %7, !dbg !13720
  %or.cond5 = or i1 %tobool44, %cmp46, !dbg !13721
  br i1 %or.cond5, label %if.end176, label %if.else48, !dbg !13721

if.else48:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %ovf, metadata !13689, metadata !DIExpression(DW_OP_deref)), !dbg !13722
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %ovf) #6, !dbg !13723
  %tobool49 = icmp eq i32 %3, 0, !dbg !13724
  %orig_op0.orig_op1 = select i1 %tobool49, %union.tree_node* %orig_op0, %union.tree_node* %orig_op1
  %orig_op1.orig_op0 = select i1 %tobool49, %union.tree_node* %orig_op1, %union.tree_node* %orig_op0
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op1.orig_op0, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op0.orig_op1, metadata !13683, metadata !DIExpression()), !dbg !13722
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13722
  br label %while.cond, !dbg !13726

while.cond:                                       ; preds = %while.body, %if.else48
  %sop.1 = phi %union.tree_node* [ %orig_op0.orig_op1, %if.else48 ], [ %20, %while.body ], !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1, metadata !13683, metadata !DIExpression()), !dbg !13722
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %sop.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13726
  %bf.load54 = load i64, i64* %17, align 8, !dbg !13726
  %bf.cast5611 = and i64 %bf.load54, 65535, !dbg !13726
  %cmp57 = icmp eq i64 %bf.cast5611, 116, !dbg !13726
  br i1 %cmp57, label %land.lhs.true69, label %lor.lhs.false, !dbg !13726

lor.lhs.false:                                    ; preds = %while.cond
  %18 = or i64 %bf.cast5611, 4, !dbg !13726
  %19 = icmp eq i64 %18, 117, !dbg !13726
  br i1 %19, label %land.lhs.true69, label %while.end, !dbg !13726

land.lhs.true69:                                  ; preds = %lor.lhs.false, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %sop.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13726
  %20 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !13726
  %cmp70 = icmp eq %union.tree_node* %20, %16, !dbg !13726
  br i1 %cmp70, label %while.end, label %land.rhs, !dbg !13726

land.rhs:                                         ; preds = %land.lhs.true69
  %type72 = getelementptr inbounds %union.tree_node, %union.tree_node* %sop.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13726
  %21 = load %union.tree_node*, %union.tree_node** %type72, align 8, !dbg !13726
  %type77 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13726
  %22 = load %union.tree_node*, %union.tree_node** %type77, align 8, !dbg !13726
  %cmp78 = icmp eq %union.tree_node* %21, %22, !dbg !13726
  br i1 %cmp78, label %while.body, label %while.end, !dbg !13726

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !13683, metadata !DIExpression()), !dbg !13722
  br label %while.cond, !dbg !13726, !llvm.loop !13727

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true69, %land.rhs
  %sop.1.lcssa = phi %union.tree_node* [ %sop.1, %lor.lhs.false ], [ %sop.1, %land.lhs.true69 ], [ %sop.1, %land.rhs ], !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %sop.1.lcssa, metadata !13683, metadata !DIExpression()), !dbg !13722
  br label %while.cond82, !dbg !13728

while.cond82:                                     ; preds = %while.body115, %while.end
  %uop.1 = phi %union.tree_node* [ %orig_op1.orig_op0, %while.end ], [ %26, %while.body115 ], !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1, metadata !13687, metadata !DIExpression()), !dbg !13722
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %uop.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13728
  %bf.load84 = load i64, i64* %23, align 8, !dbg !13728
  %bf.cast8614 = and i64 %bf.load84, 65535, !dbg !13728
  %cmp87 = icmp eq i64 %bf.cast8614, 116, !dbg !13728
  br i1 %cmp87, label %land.lhs.true100, label %lor.lhs.false88, !dbg !13728

lor.lhs.false88:                                  ; preds = %while.cond82
  %24 = or i64 %bf.cast8614, 4, !dbg !13728
  %25 = icmp eq i64 %24, 117, !dbg !13728
  br i1 %25, label %land.lhs.true100, label %while.end119, !dbg !13728

land.lhs.true100:                                 ; preds = %lor.lhs.false88, %while.cond82
  %operands102 = getelementptr inbounds %union.tree_node, %union.tree_node* %uop.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13728
  %26 = load %union.tree_node*, %union.tree_node** %operands102, align 8, !dbg !13728
  %cmp104 = icmp eq %union.tree_node* %26, %16, !dbg !13728
  br i1 %cmp104, label %while.end119, label %land.rhs105, !dbg !13728

land.rhs105:                                      ; preds = %land.lhs.true100
  %type107 = getelementptr inbounds %union.tree_node, %union.tree_node* %uop.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13728
  %27 = load %union.tree_node*, %union.tree_node** %type107, align 8, !dbg !13728
  %type112 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13728
  %28 = load %union.tree_node*, %union.tree_node** %type112, align 8, !dbg !13728
  %cmp113 = icmp eq %union.tree_node* %27, %28, !dbg !13728
  br i1 %cmp113, label %while.body115, label %while.end119, !dbg !13728

while.body115:                                    ; preds = %land.rhs105
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !13687, metadata !DIExpression()), !dbg !13722
  br label %while.cond82, !dbg !13728, !llvm.loop !13729

while.end119:                                     ; preds = %lor.lhs.false88, %land.lhs.true100, %land.rhs105
  %uop.1.lcssa = phi %union.tree_node* [ %uop.1, %lor.lhs.false88 ], [ %uop.1, %land.lhs.true100 ], [ %uop.1, %land.rhs105 ], !dbg !13722
  %.lcssa = phi i64* [ %23, %lor.lhs.false88 ], [ %23, %land.lhs.true100 ], [ %23, %land.rhs105 ], !dbg !13728
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %union.tree_node* %uop.1.lcssa, metadata !13687, metadata !DIExpression()), !dbg !13722
  %bf.cast12317 = and i64 %bf.load40, 65535, !dbg !13730
  %cmp124 = icmp eq i64 %bf.cast12317, 13, !dbg !13730
  br i1 %cmp124, label %cond.true, label %cond.end, !dbg !13731

cond.true:                                        ; preds = %while.end119
  %type126 = getelementptr inbounds %union.tree_node, %union.tree_node* %result_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13732
  %29 = load %union.tree_node*, %union.tree_node** %type126, align 8, !dbg !13732
  br label %cond.end, !dbg !13731

cond.end:                                         ; preds = %while.end119, %cond.true
  %cond = phi %union.tree_node* [ %29, %cond.true ], [ %result_type, %while.end119 ], !dbg !13731
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !13688, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata i8* %ovf, metadata !13689, metadata !DIExpression(DW_OP_deref)), !dbg !13722
  %call127 = call zeroext i8 @tree_expr_nonnegative_warnv_p(%union.tree_node* %sop.1.lcssa, i8* nonnull %ovf) #7, !dbg !13733
  %tobool128 = icmp eq i8 %call127, 0, !dbg !13733
  br i1 %tobool128, label %if.else130, label %if.end174, !dbg !13735

if.else130:                                       ; preds = %cond.end
  %bf.load132 = load i64, i64* %.lcssa, align 8, !dbg !13736
  %bf.cast13418 = and i64 %bf.load132, 65535, !dbg !13738
  %cmp135 = icmp eq i64 %bf.cast13418, 23, !dbg !13738
  %resultcode.off = add i32 %resultcode, -101, !dbg !13739
  %switch = icmp ult i32 %resultcode.off, 2, !dbg !13739
  %or.cond6 = and i1 %cmp135, %switch, !dbg !13740
  br i1 %or.cond6, label %land.lhs.true140, label %if.else145, !dbg !13740

land.lhs.true140:                                 ; preds = %if.else130
  %call141 = call %union.tree_node* @c_common_signed_type(%union.tree_node* %cond) #8, !dbg !13741
  %call142 = call i32 @int_fits_type_p(%union.tree_node* %uop.1.lcssa, %union.tree_node* %call141) #7, !dbg !13742
  %tobool143 = icmp eq i32 %call142, 0, !dbg !13742
  br i1 %tobool143, label %if.else145, label %if.end174, !dbg !13743

if.else145:                                       ; preds = %land.lhs.true140, %if.else130
  %30 = load i32, i32* @c_language, align 4, !dbg !13744
  %and146 = and i32 %30, 2, !dbg !13744
  %cmp147 = icmp eq i32 %and146, 0, !dbg !13744
  br i1 %cmp147, label %land.lhs.true148, label %if.else170, !dbg !13746

land.lhs.true148:                                 ; preds = %if.else145
  %bf.load150 = load i64, i64* %.lcssa, align 8, !dbg !13747
  %bf.cast15219 = and i64 %bf.load150, 65535, !dbg !13748
  %cmp153 = icmp eq i64 %bf.cast15219, 23, !dbg !13748
  br i1 %cmp153, label %land.lhs.true154, label %if.else170, !dbg !13749

land.lhs.true154:                                 ; preds = %land.lhs.true148
  %type156 = getelementptr inbounds %union.tree_node, %union.tree_node* %uop.1.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13750
  %31 = bitcast %union.tree_node** %type156 to i64**, !dbg !13750
  %32 = load i64*, i64** %31, align 8, !dbg !13750
  %bf.load158 = load i64, i64* %32, align 8, !dbg !13750
  %bf.cast16025 = and i64 %bf.load158, 65535, !dbg !13751
  %cmp161 = icmp eq i64 %bf.cast16025, 6, !dbg !13751
  br i1 %cmp161, label %land.lhs.true162, label %if.else170, !dbg !13752

land.lhs.true162:                                 ; preds = %land.lhs.true154
  %maxval = getelementptr inbounds i64, i64* %32, i64 14, !dbg !13753
  %33 = bitcast i64* %maxval to %union.tree_node**, !dbg !13753
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !13753
  %call166 = call %union.tree_node* @c_common_signed_type(%union.tree_node* %cond) #8, !dbg !13754
  %call167 = call i32 @int_fits_type_p(%union.tree_node* %34, %union.tree_node* %call166) #7, !dbg !13755
  %tobool168 = icmp eq i32 %call167, 0, !dbg !13755
  br i1 %tobool168, label %if.else170, label %if.end174, !dbg !13756

if.else170:                                       ; preds = %land.lhs.true162, %if.else145, %land.lhs.true154, %land.lhs.true148
  %call171 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 177, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.411, i64 0, i64 0)) #7, !dbg !13757
  br label %if.end174

if.end174:                                        ; preds = %land.lhs.true140, %land.lhs.true162, %cond.end, %if.else170
  call void @llvm.dbg.value(metadata i8* %ovf, metadata !13689, metadata !DIExpression(DW_OP_deref)), !dbg !13722
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %ovf) #6, !dbg !13758
  br label %if.end176

if.end176:                                        ; preds = %if.end, %if.end174
  call void @llvm.dbg.value(metadata i32* %unsignedp0, metadata !13681, metadata !DIExpression(DW_OP_deref)), !dbg !13699
  %call177 = call %union.tree_node* @get_narrower(%union.tree_node* %op0, i32* nonnull %unsignedp0) #7, !dbg !13759
  call void @llvm.dbg.value(metadata %union.tree_node* %call177, metadata !13675, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata i32* %unsignedp1, metadata !13682, metadata !DIExpression(DW_OP_deref)), !dbg !13699
  %call178 = call %union.tree_node* @get_narrower(%union.tree_node* %op1, i32* nonnull %unsignedp1) #7, !dbg !13760
  call void @llvm.dbg.value(metadata %union.tree_node* %call178, metadata !13676, metadata !DIExpression()), !dbg !13699
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13761
  %bf.load180 = load i64, i64* %35, align 8, !dbg !13761
  %bf.cast18220 = and i64 %bf.load180, 65535, !dbg !13762
  %cmp183 = icmp eq i64 %bf.cast18220, 90, !dbg !13762
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %call178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13763
  %bf.load185 = load i64, i64* %36, align 8, !dbg !13763
  %bf.cast18721 = and i64 %bf.load185, 65535, !dbg !13764
  %cmp188 = icmp eq i64 %bf.cast18721, 90, !dbg !13764
  %xor22 = xor i1 %cmp183, %cmp188, !dbg !13765
  br i1 %xor22, label %if.then191, label %if.end293, !dbg !13766

if.then191:                                       ; preds = %if.end176
  br i1 %cmp183, label %if.then198, label %if.end203, !dbg !13767

if.then198:                                       ; preds = %if.then191
  %operands200 = getelementptr inbounds %union.tree_node, %union.tree_node* %call177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13768
  %37 = load %union.tree_node*, %union.tree_node** %operands200, align 8, !dbg !13768
  call void @llvm.dbg.value(metadata i32* %unsignedp0, metadata !13681, metadata !DIExpression(DW_OP_deref)), !dbg !13699
  %call202 = call %union.tree_node* @get_narrower(%union.tree_node* %37, i32* nonnull %unsignedp0) #7, !dbg !13770
  call void @llvm.dbg.value(metadata %union.tree_node* %call202, metadata !13675, metadata !DIExpression()), !dbg !13699
  %bf.load205.pre = load i64, i64* %36, align 8, !dbg !13771
  br label %if.end203, !dbg !13773

if.end203:                                        ; preds = %if.then198, %if.then191
  %bf.load205 = phi i64 [ %bf.load205.pre, %if.then198 ], [ %bf.load185, %if.then191 ], !dbg !13771
  %op0.addr.0 = phi %union.tree_node* [ %call202, %if.then198 ], [ %call177, %if.then191 ], !dbg !13699
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.addr.0, metadata !13675, metadata !DIExpression()), !dbg !13699
  %bf.cast20724 = and i64 %bf.load205, 65535, !dbg !13774
  %cmp208 = icmp eq i64 %bf.cast20724, 90, !dbg !13774
  br i1 %cmp208, label %if.then210, label %if.end215, !dbg !13775

if.then210:                                       ; preds = %if.end203
  %operands212 = getelementptr inbounds %union.tree_node, %union.tree_node* %call178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13776
  %38 = load %union.tree_node*, %union.tree_node** %operands212, align 8, !dbg !13776
  call void @llvm.dbg.value(metadata i32* %unsignedp1, metadata !13682, metadata !DIExpression(DW_OP_deref)), !dbg !13699
  %call214 = call %union.tree_node* @get_narrower(%union.tree_node* %38, i32* nonnull %unsignedp1) #7, !dbg !13777
  call void @llvm.dbg.value(metadata %union.tree_node* %call214, metadata !13676, metadata !DIExpression()), !dbg !13699
  br label %if.end215, !dbg !13778

if.end215:                                        ; preds = %if.then210, %if.end203
  %op1.addr.0 = phi %union.tree_node* [ %call214, %if.then210 ], [ %call178, %if.end203 ], !dbg !13699
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.0, metadata !13676, metadata !DIExpression()), !dbg !13699
  %call216 = call i32 @host_integerp(%union.tree_node* %op0.addr.0, i32 0) #7, !dbg !13779
  %tobool217 = icmp eq i32 %call216, 0, !dbg !13779
  br i1 %tobool217, label %lor.lhs.false218, label %if.then221, !dbg !13780

lor.lhs.false218:                                 ; preds = %if.end215
  %call219 = call i32 @host_integerp(%union.tree_node* %op1.addr.0, i32 0) #7, !dbg !13781
  %tobool220 = icmp eq i32 %call219, 0, !dbg !13781
  br i1 %tobool220, label %if.else259, label %if.then221, !dbg !13782

if.then221:                                       ; preds = %lor.lhs.false218, %if.end215
  %call222 = call i32 @host_integerp(%union.tree_node* %op0.addr.0, i32 0) #7, !dbg !13783
  %tobool223 = icmp eq i32 %call222, 0, !dbg !13783
  br i1 %tobool223, label %if.else226, label %if.then224, !dbg !13785

if.then224:                                       ; preds = %if.then221
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.0, metadata !13690, metadata !DIExpression()), !dbg !13786
  %39 = load i32, i32* %unsignedp1, align 4, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %39, metadata !13682, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata i32 %39, metadata !13697, metadata !DIExpression()), !dbg !13786
  %call225 = call i64 @tree_low_cst(%union.tree_node* %op0.addr.0, i32 0) #7, !dbg !13789
  call void @llvm.dbg.value(metadata i64 %call225, metadata !13695, metadata !DIExpression()), !dbg !13786
  br label %if.end228, !dbg !13790

if.else226:                                       ; preds = %if.then221
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.addr.0, metadata !13690, metadata !DIExpression()), !dbg !13786
  %40 = load i32, i32* %unsignedp0, align 4, !dbg !13791
  call void @llvm.dbg.value(metadata i32 %40, metadata !13681, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata i32 %40, metadata !13697, metadata !DIExpression()), !dbg !13786
  %call227 = call i64 @tree_low_cst(%union.tree_node* %op1.addr.0, i32 0) #7, !dbg !13793
  call void @llvm.dbg.value(metadata i64 %call227, metadata !13695, metadata !DIExpression()), !dbg !13786
  br label %if.end228

if.end228:                                        ; preds = %if.else226, %if.then224
  %primop.0 = phi %union.tree_node* [ %op1.addr.0, %if.then224 ], [ %op0.addr.0, %if.else226 ], !dbg !13794
  %constant.0 = phi i64 [ %call225, %if.then224 ], [ %call227, %if.else226 ], !dbg !13794
  %unsignedp.0 = phi i32 [ %39, %if.then224 ], [ %40, %if.else226 ], !dbg !13794
  call void @llvm.dbg.value(metadata i32 %unsignedp.0, metadata !13697, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.value(metadata i64 %constant.0, metadata !13695, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.value(metadata %union.tree_node* %primop.0, metadata !13690, metadata !DIExpression()), !dbg !13786
  %type230 = getelementptr inbounds %union.tree_node, %union.tree_node* %primop.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13795
  %41 = bitcast %union.tree_node** %type230 to %struct.tree_type**, !dbg !13795
  %42 = load %struct.tree_type*, %struct.tree_type** %41, align 8, !dbg !13795
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %42, i64 0, i32 6, !dbg !13795
  %bf.load232 = load i32, i32* %precision, align 4, !dbg !13795
  %bf.clear233 = and i32 %bf.load232, 1023, !dbg !13795
  call void @llvm.dbg.value(metadata i32 %bf.clear233, metadata !13698, metadata !DIExpression()), !dbg !13786
  %type234 = bitcast %union.tree_node* %result_type to %struct.tree_type*, !dbg !13796
  %precision235 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type234, i64 0, i32 6, !dbg !13796
  %bf.load236 = load i32, i32* %precision235, align 4, !dbg !13796
  %bf.clear237 = and i32 %bf.load236, 1023, !dbg !13796
  %cmp238 = icmp ult i32 %bf.clear233, %bf.clear237, !dbg !13798
  %cmp241 = icmp ult i32 %bf.clear233, 64, !dbg !13799
  %or.cond = and i1 %cmp238, %cmp241, !dbg !13800
  %tobool244 = icmp ne i32 %unsignedp.0, 0, !dbg !13801
  %or.cond3 = and i1 %or.cond, %tobool244, !dbg !13800
  br i1 %or.cond3, label %if.then245, label %if.end293, !dbg !13800

if.then245:                                       ; preds = %if.end228
  %sh_prom = zext i32 %bf.clear233 to i64, !dbg !13802
  %shl = shl i64 -1, %sh_prom, !dbg !13802
  call void @llvm.dbg.value(metadata i64 %shl, metadata !13696, metadata !DIExpression()), !dbg !13786
  %and246 = and i64 %shl, %constant.0, !dbg !13804
  %cmp247 = icmp eq i64 %and246, %shl, !dbg !13806
  br i1 %cmp247, label %if.end293, label %if.then249, !dbg !13807

if.then249:                                       ; preds = %if.then245
  %cmp250 = icmp eq i64 %constant.0, 0, !dbg !13808
  br i1 %cmp250, label %if.then252, label %if.else254, !dbg !13811

if.then252:                                       ; preds = %if.then249
  %call253 = call zeroext i8 (i32, i8*, ...) @warning(i32 177, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.412, i64 0, i64 0)) #7, !dbg !13812
  br label %if.end293, !dbg !13812

if.else254:                                       ; preds = %if.then249
  %call255 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 177, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.413, i64 0, i64 0)) #7, !dbg !13813
  br label %if.end293

if.else259:                                       ; preds = %lor.lhs.false218
  %43 = load i32, i32* %unsignedp0, align 4, !dbg !13814
  call void @llvm.dbg.value(metadata i32 %43, metadata !13681, metadata !DIExpression()), !dbg !13699
  %tobool260 = icmp ne i32 %43, 0, !dbg !13814
  %44 = load i32, i32* %unsignedp1, align 4, !dbg !13816
  call void @llvm.dbg.value(metadata i32 %44, metadata !13682, metadata !DIExpression()), !dbg !13699
  %tobool262 = icmp ne i32 %44, 0, !dbg !13816
  %or.cond4 = and i1 %tobool260, %tobool262, !dbg !13817
  br i1 %or.cond4, label %land.lhs.true263, label %if.end293, !dbg !13817

land.lhs.true263:                                 ; preds = %if.else259
  %type265 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13818
  %45 = bitcast %union.tree_node** %type265 to %struct.tree_type**, !dbg !13818
  %46 = load %struct.tree_type*, %struct.tree_type** %45, align 8, !dbg !13818
  %precision267 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %46, i64 0, i32 6, !dbg !13818
  %bf.load268 = load i32, i32* %precision267, align 4, !dbg !13818
  %bf.clear269 = and i32 %bf.load268, 1023, !dbg !13818
  %type270 = bitcast %union.tree_node* %result_type to %struct.tree_type*, !dbg !13819
  %precision271 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type270, i64 0, i32 6, !dbg !13819
  %bf.load272 = load i32, i32* %precision271, align 4, !dbg !13819
  %bf.clear273 = and i32 %bf.load272, 1023, !dbg !13819
  %cmp274 = icmp ult i32 %bf.clear269, %bf.clear273, !dbg !13820
  br i1 %cmp274, label %land.lhs.true276, label %if.end293, !dbg !13821

land.lhs.true276:                                 ; preds = %land.lhs.true263
  %type278 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13822
  %47 = bitcast %union.tree_node** %type278 to %struct.tree_type**, !dbg !13822
  %48 = load %struct.tree_type*, %struct.tree_type** %47, align 8, !dbg !13822
  %precision280 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %48, i64 0, i32 6, !dbg !13822
  %bf.load281 = load i32, i32* %precision280, align 4, !dbg !13822
  %bf.clear282 = and i32 %bf.load281, 1023, !dbg !13822
  %cmp287 = icmp ult i32 %bf.clear282, %bf.clear273, !dbg !13823
  br i1 %cmp287, label %if.then289, label %if.end293, !dbg !13824

if.then289:                                       ; preds = %land.lhs.true276
  %call290 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 177, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.414, i64 0, i64 0)) #7, !dbg !13825
  br label %if.end293, !dbg !13825

if.end293:                                        ; preds = %if.then245, %if.else254, %if.then252, %if.end228, %if.then289, %land.lhs.true276, %land.lhs.true263, %if.else259, %if.end176
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #6, !dbg !13826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6, !dbg !13826
  ret void, !dbg !13826
}

declare dso_local zeroext i8 @tree_expr_nonnegative_warnv_p(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_underlying_type(%union.tree_node* %x) local_unnamed_addr #5 !dbg !13827 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !13829, metadata !DIExpression()), !dbg !13834
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13835
  %cmp = icmp eq %union.tree_node* %0, %x, !dbg !13837
  br i1 %cmp, label %if.end33, label %if.end, !dbg !13838

if.end:                                           ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13839
  %1 = load i32, i32* %locus, align 8, !dbg !13839
  %cmp1 = icmp ult i32 %1, 2, !dbg !13839
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13840
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !13840
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !13841

if.then2:                                         ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13842
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !13842
  %cmp4 = icmp eq %union.tree_node* %4, null, !dbg !13845
  br i1 %cmp4, label %if.then5, label %if.end33, !dbg !13846

if.then5:                                         ; preds = %if.then2
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13847
  store %union.tree_node* %x, %union.tree_node** %5, align 8, !dbg !13848
  br label %if.end33, !dbg !13847

if.else:                                          ; preds = %if.end
  %cmp13 = icmp eq %union.tree_node* %2, %0, !dbg !13849
  br i1 %cmp13, label %if.end33, label %land.lhs.true, !dbg !13850

land.lhs.true:                                    ; preds = %if.else
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 3, !dbg !13851
  %6 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !13851
  %cmp14 = icmp eq %union.tree_node* %6, null, !dbg !13852
  br i1 %cmp14, label %if.then15, label %if.end33, !dbg !13853

if.then15:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !13830, metadata !DIExpression()), !dbg !13854
  store %union.tree_node* %2, %union.tree_node** %result, align 8, !dbg !13855
  %call = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %2) #7, !dbg !13856
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13830, metadata !DIExpression()), !dbg !13854
  %7 = bitcast %union.tree_node** %result to %struct.tree_common**, !dbg !13857
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !13857
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 1, !dbg !13857
  %9 = bitcast %union.tree_node** %chain to i64*, !dbg !13857
  %10 = load i64, i64* %9, align 8, !dbg !13857
  %chain24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13858
  %11 = bitcast %union.tree_node** %chain24 to i64*, !dbg !13859
  store i64 %10, i64* %11, align 8, !dbg !13859
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13860
  store %union.tree_node* %x, %union.tree_node** %12, align 8, !dbg !13861
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13862
  %bf.load = load i64, i64* %13, align 8, !dbg !13862
  %bf.cast = and i64 %bf.load, 16777216, !dbg !13862
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13863
  %bf.load28 = load i64, i64* %14, align 8, !dbg !13864
  %bf.clear29 = and i64 %bf.load28, -16777217, !dbg !13864
  %bf.set = or i64 %bf.clear29, %bf.cast, !dbg !13864
  store i64 %bf.set, i64* %14, align 8, !dbg !13864
  store %union.tree_node* %call, %union.tree_node** %type, align 8, !dbg !13865
  br label %if.end33, !dbg !13866

if.end33:                                         ; preds = %if.else, %land.lhs.true, %if.then15, %if.then2, %if.then5, %entry
  ret void, !dbg !13867
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @is_typedef_decl(%union.tree_node* %x) local_unnamed_addr #5 !dbg !13868 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !13870, metadata !DIExpression()), !dbg !13871
  %tobool = icmp eq %union.tree_node* %x, null, !dbg !13872
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !13873

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13874
  %bf.load = load i64, i64* %0, align 8, !dbg !13874
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13875
  %cmp = icmp eq i64 %bf.cast1, 35, !dbg !13875
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13876

land.rhs:                                         ; preds = %land.lhs.true
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 3, !dbg !13877
  %1 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !13877
  %cmp1 = icmp ne %union.tree_node* %1, null, !dbg !13878
  %phitmp = zext i1 %cmp1 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs, %land.lhs.true
  %2 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !13879
}

; Function Attrs: nounwind uwtable
define dso_local void @record_types_used_by_current_var_decl(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !13880 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !13882, metadata !DIExpression()), !dbg !13890
  %tobool = icmp eq %union.tree_node* %decl, null, !dbg !13891
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !13891

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13891
  %bf.load = load i64, i64* %0, align 8, !dbg !13891
  %bf.cast = and i64 %bf.load, 65535, !dbg !13891
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !13891
  %1 = load i32, i32* %arrayidx, align 4, !dbg !13891
  %cmp = icmp eq i32 %1, 3, !dbg !13891
  br i1 %cmp, label %land.lhs.true1, label %cond.true, !dbg !13891

land.lhs.true1:                                   ; preds = %land.lhs.true
  %bf.cast51 = and i64 %bf.load, 67108864, !dbg !13891
  %tobool6 = icmp eq i64 %bf.cast51, 0, !dbg !13891
  br i1 %tobool6, label %cond.true, label %cond.end, !dbg !13891

cond.true:                                        ; preds = %land.lhs.true1, %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 9278, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !13891
  br label %cond.end, !dbg !13891

cond.end:                                         ; preds = %land.lhs.true1, %cond.true
  %2 = load %union.tree_node*, %union.tree_node** @types_used_by_cur_var_decl, align 8, !dbg !13892
  %tobool7 = icmp eq %union.tree_node* %2, null, !dbg !13892
  br i1 %tobool7, label %if.end, label %if.then, !dbg !13893

if.then:                                          ; preds = %cond.end
  br label %for.cond, !dbg !13894

for.cond:                                         ; preds = %for.body, %if.then
  %node.0 = phi %union.tree_node* [ %2, %if.then ], [ %node.0.pre, %for.body ], !dbg !13895
  call void @llvm.dbg.value(metadata %union.tree_node* %node.0, metadata !13883, metadata !DIExpression()), !dbg !13896
  %tobool8 = icmp eq %union.tree_node* %node.0, null, !dbg !13897
  br i1 %tobool8, label %for.end, label %for.body, !dbg !13897

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13898
  %3 = bitcast i32* %purpose to %union.tree_node**, !dbg !13898
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !13898
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !13886, metadata !DIExpression()), !dbg !13899
  tail call void @types_used_by_var_decl_insert(%union.tree_node* %4, %union.tree_node* %decl) #7, !dbg !13900
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13901
  %node.0.pre = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !13895
  br label %for.cond, !dbg !13902, !llvm.loop !13903

for.end:                                          ; preds = %for.cond
  store %union.tree_node* null, %union.tree_node** @types_used_by_cur_var_decl, align 8, !dbg !13905
  br label %if.end, !dbg !13906

if.end:                                           ; preds = %cond.end, %for.end
  ret void, !dbg !13907
}

declare dso_local void @types_used_by_var_decl_insert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.VEC_tree_gc* @make_tree_vector() local_unnamed_addr #5 !dbg !13908 {
entry:
  %0 = load %struct.VEC_tree_gc_vec_gc*, %struct.VEC_tree_gc_vec_gc** @tree_vector_cache, align 8, !dbg !13911
  %base = getelementptr inbounds %struct.VEC_tree_gc_vec_gc, %struct.VEC_tree_gc_vec_gc* %0, i64 0, i32 0, !dbg !13911
  %call = tail call fastcc i32 @VEC_tree_gc_vec_base_length(%struct.VEC_tree_gc_vec_base* %base) #8, !dbg !13911
  %cmp = icmp eq i32 %call, 0, !dbg !13911
  br i1 %cmp, label %if.else, label %if.then, !dbg !13913

if.then:                                          ; preds = %entry
  %1 = load %struct.VEC_tree_gc_vec_gc*, %struct.VEC_tree_gc_vec_gc** @tree_vector_cache, align 8, !dbg !13914
  %base3 = getelementptr inbounds %struct.VEC_tree_gc_vec_gc, %struct.VEC_tree_gc_vec_gc* %1, i64 0, i32 0, !dbg !13914
  %call7 = tail call fastcc %struct.VEC_tree_gc* @VEC_tree_gc_vec_base_pop(%struct.VEC_tree_gc_vec_base* %base3) #8, !dbg !13914
  br label %return, !dbg !13915

if.else:                                          ; preds = %entry
  %call8 = tail call fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 4) #8, !dbg !13916
  br label %return, !dbg !13918

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.VEC_tree_gc* [ %call8, %if.else ], [ %call7, %if.then ], !dbg !13919
  ret %struct.VEC_tree_gc* %retval.0, !dbg !13920
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_vec_base_length(%struct.VEC_tree_gc_vec_base* %vec_) unnamed_addr #0 !dbg !13921 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc_vec_base* %vec_, metadata !13927, metadata !DIExpression()), !dbg !13928
  %tobool = icmp eq %struct.VEC_tree_gc_vec_base* %vec_, null, !dbg !13929
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !13929

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_gc_vec_base, %struct.VEC_tree_gc_vec_base* %vec_, i64 0, i32 0, !dbg !13929
  %0 = load i32, i32* %num, align 8, !dbg !13929
  br label %cond.end, !dbg !13929

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !13929
  ret i32 %cond, !dbg !13929
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc* @VEC_tree_gc_vec_base_pop(%struct.VEC_tree_gc_vec_base* %vec_) unnamed_addr #0 !dbg !13930 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc_vec_base* %vec_, metadata !13935, metadata !DIExpression()), !dbg !13937
  %num1 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, %struct.VEC_tree_gc_vec_base* %vec_, i64 0, i32 0, !dbg !13938
  %0 = load i32, i32* %num1, align 8, !dbg !13938
  %dec = add i32 %0, -1, !dbg !13938
  store i32 %dec, i32* %num1, align 8, !dbg !13938
  %idxprom = zext i32 %dec to i64, !dbg !13938
  %arrayidx = getelementptr inbounds %struct.VEC_tree_gc_vec_base, %struct.VEC_tree_gc_vec_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !13938
  %1 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arrayidx, align 8, !dbg !13938
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %1, metadata !13936, metadata !DIExpression()), !dbg !13937
  ret %struct.VEC_tree_gc* %1, !dbg !13938
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !13939 {
entry:
  call void @llvm.dbg.value(metadata i32 4, metadata !13943, metadata !DIExpression()), !dbg !13944
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 4) #7, !dbg !13945
  %0 = bitcast i8* %call to %struct.VEC_tree_gc*, !dbg !13945
  ret %struct.VEC_tree_gc* %0, !dbg !13945
}

; Function Attrs: nounwind uwtable
define dso_local void @release_tree_vector(%struct.VEC_tree_gc* %vec) local_unnamed_addr #5 !dbg !13946 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %vec, metadata !13950, metadata !DIExpression()), !dbg !13951
  %cmp = icmp eq %struct.VEC_tree_gc* %vec, null, !dbg !13952
  br i1 %cmp, label %if.end, label %cond.true, !dbg !13954

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %vec, i64 0, i32 0, !dbg !13955
  tail call fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* nonnull %base, i32 0) #8, !dbg !13955
  %call = tail call fastcc %struct.VEC_tree_gc** @VEC_tree_gc_vec_gc_safe_push(%struct.VEC_tree_gc_vec_gc** nonnull @tree_vector_cache, %struct.VEC_tree_gc* nonnull %vec) #8, !dbg !13957
  br label %if.end, !dbg !13958

if.end:                                           ; preds = %entry, %cond.true
  ret void, !dbg !13959
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !13960 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !13965, metadata !DIExpression()), !dbg !13967
  call void @llvm.dbg.value(metadata i32 %size_, metadata !13966, metadata !DIExpression()), !dbg !13967
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !13968
  br label %cond.true, !dbg !13968

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13968

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !13968

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !13968

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !13969
  store i32 %size_, i32* %num3, align 8, !dbg !13969
  br label %if.end, !dbg !13969

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !13968
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc** @VEC_tree_gc_vec_gc_safe_push(%struct.VEC_tree_gc_vec_gc** %vec_, %struct.VEC_tree_gc* %obj_) unnamed_addr #0 !dbg !13971 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc_vec_gc** @tree_vector_cache, metadata !13977, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %obj_, metadata !13978, metadata !DIExpression()), !dbg !13979
  %call = tail call fastcc i32 @VEC_tree_gc_vec_gc_reserve(%struct.VEC_tree_gc_vec_gc** nonnull @tree_vector_cache, i32 1) #8, !dbg !13980
  %0 = load %struct.VEC_tree_gc_vec_gc*, %struct.VEC_tree_gc_vec_gc** @tree_vector_cache, align 8, !dbg !13980
  %tobool = icmp eq %struct.VEC_tree_gc_vec_gc* %0, null, !dbg !13980
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !13980

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc_vec_gc, %struct.VEC_tree_gc_vec_gc* %0, i64 0, i32 0, !dbg !13980
  br label %cond.end, !dbg !13980

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_gc_vec_base* [ %base, %cond.true ], [ null, %entry ], !dbg !13980
  %call1 = tail call fastcc %struct.VEC_tree_gc** @VEC_tree_gc_vec_base_quick_push(%struct.VEC_tree_gc_vec_base* %cond, %struct.VEC_tree_gc* %obj_) #8, !dbg !13980
  ret %struct.VEC_tree_gc** %call1, !dbg !13980
}

; Function Attrs: nounwind uwtable
define dso_local %struct.VEC_tree_gc* @make_tree_vector_single(%union.tree_node* %t) local_unnamed_addr #5 !dbg !13981 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !13985, metadata !DIExpression()), !dbg !13987
  %call = tail call %struct.VEC_tree_gc* @make_tree_vector() #8, !dbg !13988
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call, metadata !13986, metadata !DIExpression()), !dbg !13987
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %call, i64 0, i32 0, !dbg !13989
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %t) #8, !dbg !13989
  ret %struct.VEC_tree_gc* %call, !dbg !13990
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !13991 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !13995, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !13996, metadata !DIExpression()), !dbg !13998
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !13999
  %0 = load i32, i32* %num1, align 8, !dbg !13999
  %inc = add i32 %0, 1, !dbg !13999
  store i32 %inc, i32* %num1, align 8, !dbg !13999
  %idxprom = zext i32 %0 to i64, !dbg !13999
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !13999
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !13997, metadata !DIExpression()), !dbg !13998
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !13999
  ret %union.tree_node** %arrayidx, !dbg !13999
}

; Function Attrs: nounwind uwtable
define dso_local %struct.VEC_tree_gc* @make_tree_vector_copy(%struct.VEC_tree_gc* %orig) local_unnamed_addr #5 !dbg !14000 {
entry:
  %ret = alloca %struct.VEC_tree_gc*, align 8
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %orig, metadata !14006, metadata !DIExpression()), !dbg !14010
  %0 = bitcast %struct.VEC_tree_gc** %ret to i8*, !dbg !14011
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !14011
  %1 = bitcast %union.tree_node** %t to i8*, !dbg !14012
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !14012
  %call = tail call %struct.VEC_tree_gc* @make_tree_vector() #8, !dbg !14013
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call, metadata !14007, metadata !DIExpression()), !dbg !14010
  store %struct.VEC_tree_gc* %call, %struct.VEC_tree_gc** %ret, align 8, !dbg !14014
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %orig, i64 0, i32 0, !dbg !14015
  %call1 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !14015
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %ret, metadata !14007, metadata !DIExpression(DW_OP_deref)), !dbg !14010
  %call2 = call fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** nonnull %ret, i32 %call1) #8, !dbg !14015
  call void @llvm.dbg.value(metadata i32 0, metadata !14008, metadata !DIExpression()), !dbg !14010
  br label %for.cond, !dbg !14016

for.cond:                                         ; preds = %for.body, %entry
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !14018
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !14008, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !14009, metadata !DIExpression(DW_OP_deref)), !dbg !14010
  %call9 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %ix.0, %union.tree_node** nonnull %t) #8, !dbg !14019
  %tobool10 = icmp eq i32 %call9, 0, !dbg !14021
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ret, align 8, !dbg !14010
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %2, metadata !14007, metadata !DIExpression()), !dbg !14010
  br i1 %tobool10, label %for.end, label %for.body, !dbg !14021

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %2, metadata !14007, metadata !DIExpression()), !dbg !14010
  %base13 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !14022
  %3 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !14022
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !14009, metadata !DIExpression()), !dbg !14010
  %call17 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base13, %union.tree_node* %3) #8, !dbg !14022
  %inc = add i32 %ix.0, 1, !dbg !14023
  call void @llvm.dbg.value(metadata i32 %inc, metadata !14008, metadata !DIExpression()), !dbg !14010
  br label %for.cond, !dbg !14024, !llvm.loop !14025

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.VEC_tree_gc* [ %2, %for.cond ], !dbg !14010
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !14027
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !14027
  ret %struct.VEC_tree_gc* %.lcssa, !dbg !14028
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !14029 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !14034, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !14035, metadata !DIExpression()), !dbg !14037
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !14038
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !14038
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !14038

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !14038
  br label %cond.end, !dbg !14038

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !14038
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 %alloc_) #8, !dbg !14038
  %tobool1 = icmp eq i32 %call, 0, !dbg !14038
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !14038
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !14036, metadata !DIExpression()), !dbg !14037
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14038

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_gc** %vec_ to i8**, !dbg !14039
  %2 = load i8*, i8** %1, align 8, !dbg !14039
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 %alloc_) #7, !dbg !14039
  store i8* %call3, i8** %1, align 8, !dbg !14039
  br label %if.end, !dbg !14039

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !14038
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !14041 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !14045, metadata !DIExpression()), !dbg !14046
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !14047
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !14047

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !14047
  %0 = load i32, i32* %num, align 8, !dbg !14047
  br label %cond.end, !dbg !14047

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !14047
  ret i32 %cond, !dbg !14047
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !14048 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !14052, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !14053, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !14054, metadata !DIExpression()), !dbg !14055
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !14056
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !14056

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !14056
  %0 = load i32, i32* %num, align 8, !dbg !14056
  %cmp = icmp ugt i32 %0, %ix_, !dbg !14056
  br i1 %cmp, label %if.then, label %if.else, !dbg !14058

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !14059
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !14059
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14059
  br label %return, !dbg !14059

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !14061

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !14063
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !14063
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !14063
  ret i32 %retval.0, !dbg !14058
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_VEC_tree_gc_vec_gc(i8* %x_p) local_unnamed_addr #5 !dbg !14064 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14066, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14067, metadata !DIExpression()), !dbg !14074
  %cmp = icmp ne i8* %x_p, null, !dbg !14075
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !14075
  %or.cond = and i1 %cmp, %cmp1, !dbg !14075
  br i1 %or.cond, label %land.lhs.true2, label %if.end12, !dbg !14075

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #7, !dbg !14075
  %tobool = icmp eq i32 %call, 0, !dbg !14075
  br i1 %tobool, label %if.then, label %if.end12, !dbg !14076

if.then:                                          ; preds = %land.lhs.true2
  %num = bitcast i8* %x_p to i32*, !dbg !14077
  %0 = load i32, i32* %num, align 8, !dbg !14077
  %conv = zext i32 %0 to i64, !dbg !14078
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14073, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !14079
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14080
  %1 = bitcast i8* %vec to [1 x %struct.VEC_tree_gc*]*, !dbg !14080
  br label %for.cond, !dbg !14086

for.cond:                                         ; preds = %for.inc, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !14087
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !14069, metadata !DIExpression()), !dbg !14079
  %cmp3 = icmp eq i64 %i0.0, %conv, !dbg !14088
  br i1 %cmp3, label %if.end12.loopexit, label %do.body, !dbg !14089

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x %struct.VEC_tree_gc*], [1 x %struct.VEC_tree_gc*]* %1, i64 0, i64 %i0.0, !dbg !14090
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arrayidx, align 8, !dbg !14090
  %cmp6 = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !14090
  br i1 %cmp6, label %for.inc, label %if.then8, !dbg !14091

if.then8:                                         ; preds = %do.body
  %3 = bitcast %struct.VEC_tree_gc* %2 to i8*, !dbg !14091
  tail call void @gt_ggc_mx_VEC_tree_gc(i8* nonnull %3) #7, !dbg !14090
  br label %for.inc, !dbg !14090

for.inc:                                          ; preds = %do.body, %if.then8
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !14092
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14069, metadata !DIExpression()), !dbg !14079
  br label %for.cond, !dbg !14093, !llvm.loop !14094

if.end12.loopexit:                                ; preds = %for.cond
  br label %if.end12, !dbg !14096

if.end12:                                         ; preds = %if.end12.loopexit, %land.lhs.true2, %entry
  ret void, !dbg !14096
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_VEC_tree_gc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_VEC_const_char_p_gc(i8* %x_p) #5 !dbg !14097 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14099, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14100, metadata !DIExpression()), !dbg !14107
  %cmp = icmp ne i8* %x_p, null, !dbg !14108
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !14108
  %or.cond = and i1 %cmp, %cmp1, !dbg !14108
  br i1 %or.cond, label %land.lhs.true2, label %if.end, !dbg !14108

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #7, !dbg !14108
  %tobool = icmp eq i32 %call, 0, !dbg !14108
  br i1 %tobool, label %if.then, label %if.end, !dbg !14109

if.then:                                          ; preds = %land.lhs.true2
  %num = bitcast i8* %x_p to i32*, !dbg !14110
  %0 = load i32, i32* %num, align 8, !dbg !14110
  %conv = zext i32 %0 to i64, !dbg !14111
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14106, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i64 0, metadata !14102, metadata !DIExpression()), !dbg !14112
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14113
  %1 = bitcast i8* %vec to [1 x i8*]*, !dbg !14113
  br label %for.cond, !dbg !14117

for.cond:                                         ; preds = %for.body, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.body ], !dbg !14118
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !14102, metadata !DIExpression()), !dbg !14112
  %cmp3 = icmp eq i64 %i0.0, %conv, !dbg !14119
  br i1 %cmp3, label %if.end.loopexit, label %for.body, !dbg !14120

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x i8*], [1 x i8*]* %1, i64 0, i64 %i0.0, !dbg !14121
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !14121
  tail call void @gt_ggc_m_S(i8* %2) #7, !dbg !14122
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !14123
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14102, metadata !DIExpression()), !dbg !14112
  br label %for.cond, !dbg !14124, !llvm.loop !14125

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !14127

if.end:                                           ; preds = %if.end.loopexit, %land.lhs.true2, %entry
  ret void, !dbg !14127
}

declare dso_local void @gt_ggc_m_S(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_sorted_fields_type(i8* %x_p) local_unnamed_addr #5 !dbg !14128 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14130, metadata !DIExpression()), !dbg !14138
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14131, metadata !DIExpression()), !dbg !14138
  %cmp = icmp ne i8* %x_p, null, !dbg !14139
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !14139
  %or.cond = and i1 %cmp, %cmp1, !dbg !14139
  br i1 %or.cond, label %land.lhs.true2, label %if.end10, !dbg !14139

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #7, !dbg !14139
  %tobool = icmp eq i32 %call, 0, !dbg !14139
  br i1 %tobool, label %if.then, label %if.end10, !dbg !14140

if.then:                                          ; preds = %land.lhs.true2
  %len = bitcast i8* %x_p to i32*, !dbg !14141
  %0 = load i32, i32* %len, align 8, !dbg !14141
  %conv = sext i32 %0 to i64, !dbg !14142
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14137, metadata !DIExpression()), !dbg !14143
  call void @llvm.dbg.value(metadata i64 0, metadata !14133, metadata !DIExpression()), !dbg !14143
  %elts = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14144
  %1 = bitcast i8* %elts to [1 x %union.tree_node*]*, !dbg !14144
  br label %for.cond, !dbg !14150

for.cond:                                         ; preds = %for.inc, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !14151
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !14133, metadata !DIExpression()), !dbg !14143
  %cmp3 = icmp eq i64 %i0.0, %conv, !dbg !14152
  br i1 %cmp3, label %if.end10.loopexit, label %do.body, !dbg !14153

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %1, i64 0, i64 %i0.0, !dbg !14154
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14154
  %cmp5 = icmp eq %union.tree_node* %2, null, !dbg !14154
  br i1 %cmp5, label %for.inc, label %if.then7, !dbg !14155

if.then7:                                         ; preds = %do.body
  %3 = bitcast %union.tree_node* %2 to i8*, !dbg !14155
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %3) #7, !dbg !14154
  br label %for.inc, !dbg !14154

for.inc:                                          ; preds = %do.body, %if.then7
  %inc = add i64 %i0.0, 1, !dbg !14156
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14133, metadata !DIExpression()), !dbg !14143
  br label %for.cond, !dbg !14157, !llvm.loop !14158

if.end10.loopexit:                                ; preds = %for.cond
  br label %if.end10, !dbg !14160

if.end10:                                         ; preds = %if.end10.loopexit, %land.lhs.true2, %entry
  ret void, !dbg !14160
}

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_VEC_tree_gc_vec_gc(i8* %x_p) local_unnamed_addr #5 !dbg !14161 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14163, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14164, metadata !DIExpression()), !dbg !14170
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_18VEC_tree_gc_vec_gc, i32 21) #7, !dbg !14171
  %tobool = icmp eq i32 %call, 0, !dbg !14171
  br i1 %tobool, label %if.end9, label %if.then, !dbg !14172

if.then:                                          ; preds = %entry
  %num = bitcast i8* %x_p to i32*, !dbg !14173
  %0 = load i32, i32* %num, align 8, !dbg !14173
  %conv = zext i32 %0 to i64, !dbg !14174
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14169, metadata !DIExpression()), !dbg !14175
  call void @llvm.dbg.value(metadata i64 0, metadata !14165, metadata !DIExpression()), !dbg !14175
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14176
  %1 = bitcast i8* %vec to [1 x %struct.VEC_tree_gc*]*, !dbg !14176
  br label %for.cond, !dbg !14182

for.cond:                                         ; preds = %for.inc, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !14183
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !14165, metadata !DIExpression()), !dbg !14175
  %cmp = icmp eq i64 %i0.0, %conv, !dbg !14184
  br i1 %cmp, label %if.end9.loopexit, label %do.body, !dbg !14185

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x %struct.VEC_tree_gc*], [1 x %struct.VEC_tree_gc*]* %1, i64 0, i64 %i0.0, !dbg !14186
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arrayidx, align 8, !dbg !14186
  %cmp3 = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !14186
  br i1 %cmp3, label %for.inc, label %if.then5, !dbg !14187

if.then5:                                         ; preds = %do.body
  %3 = bitcast %struct.VEC_tree_gc* %2 to i8*, !dbg !14187
  tail call void @gt_pch_nx_VEC_tree_gc(i8* nonnull %3) #7, !dbg !14186
  br label %for.inc, !dbg !14186

for.inc:                                          ; preds = %do.body, %if.then5
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !14188
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14165, metadata !DIExpression()), !dbg !14175
  br label %for.cond, !dbg !14189, !llvm.loop !14190

if.end9.loopexit:                                 ; preds = %for.cond
  br label %if.end9, !dbg !14192

if.end9:                                          ; preds = %if.end9.loopexit, %entry
  ret void, !dbg !14192
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_18VEC_tree_gc_vec_gc(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14193 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14195, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14196, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14197, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14198, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14199, metadata !DIExpression()), !dbg !14203
  %num = bitcast i8* %x_p to i32*, !dbg !14204
  %0 = load i32, i32* %num, align 8, !dbg !14204
  %conv = zext i32 %0 to i64, !dbg !14205
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14202, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.value(metadata i64 0, metadata !14200, metadata !DIExpression()), !dbg !14206
  %cmp2 = icmp eq i8* %x_p, %this_obj, !dbg !14207
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14207
  %1 = bitcast i8* %vec to [1 x %struct.VEC_tree_gc*]*, !dbg !14207
  br i1 %cmp2, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !14212

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.end.us-lcssa, !dbg !14212

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !14212

for.cond.us:                                      ; preds = %for.body.us, %entry.split.us
  %i0.0.us = phi i64 [ 0, %entry.split.us ], [ %inc.us, %for.body.us ], !dbg !14213
  call void @llvm.dbg.value(metadata i64 %i0.0.us, metadata !14200, metadata !DIExpression()), !dbg !14206
  %cmp.us = icmp eq i64 %i0.0.us, %conv, !dbg !14214
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !14215

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds [1 x %struct.VEC_tree_gc*], [1 x %struct.VEC_tree_gc*]* %1, i64 0, i64 %i0.0.us, !dbg !14216
  %2 = bitcast %struct.VEC_tree_gc** %arrayidx.us to i8*, !dbg !14217
  tail call void %op(i8* nonnull %2, i8* %cookie) #7, !dbg !14218
  %inc.us = add nuw nsw i64 %i0.0.us, 1, !dbg !14219
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !14200, metadata !DIExpression()), !dbg !14206
  br label %for.cond.us, !dbg !14220, !llvm.loop !14221

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !14223

for.end.us-lcssa:                                 ; preds = %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !14200, metadata !DIExpression()), !dbg !14206
  br label %for.end, !dbg !14223

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !14223
}

declare dso_local void @gt_pch_nx_VEC_tree_gc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_VEC_const_char_p_gc(i8* %x_p) #5 !dbg !14224 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14226, metadata !DIExpression()), !dbg !14233
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14227, metadata !DIExpression()), !dbg !14233
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_19VEC_const_char_p_gc, i32 22) #7, !dbg !14234
  %tobool = icmp eq i32 %call, 0, !dbg !14234
  br i1 %tobool, label %if.end, label %if.then, !dbg !14235

if.then:                                          ; preds = %entry
  %num = bitcast i8* %x_p to i32*, !dbg !14236
  %0 = load i32, i32* %num, align 8, !dbg !14236
  %conv = zext i32 %0 to i64, !dbg !14237
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14232, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.value(metadata i64 0, metadata !14228, metadata !DIExpression()), !dbg !14238
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14239
  %1 = bitcast i8* %vec to [1 x i8*]*, !dbg !14239
  br label %for.cond, !dbg !14243

for.cond:                                         ; preds = %for.body, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.body ], !dbg !14244
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !14228, metadata !DIExpression()), !dbg !14238
  %cmp = icmp eq i64 %i0.0, %conv, !dbg !14245
  br i1 %cmp, label %if.end.loopexit, label %for.body, !dbg !14246

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x i8*], [1 x i8*]* %1, i64 0, i64 %i0.0, !dbg !14247
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !14247
  tail call void @gt_pch_n_S(i8* %2) #7, !dbg !14248
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !14249
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14228, metadata !DIExpression()), !dbg !14238
  br label %for.cond, !dbg !14250, !llvm.loop !14251

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !14253

if.end:                                           ; preds = %if.end.loopexit, %entry
  ret void, !dbg !14253
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_19VEC_const_char_p_gc(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14254 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14256, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14257, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14258, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14259, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14260, metadata !DIExpression()), !dbg !14264
  %num = bitcast i8* %x_p to i32*, !dbg !14265
  %0 = load i32, i32* %num, align 8, !dbg !14265
  %conv = zext i32 %0 to i64, !dbg !14266
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14263, metadata !DIExpression()), !dbg !14267
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !14267
  %cmp2 = icmp eq i8* %x_p, %this_obj, !dbg !14268
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14268
  %1 = bitcast i8* %vec to [1 x i8*]*, !dbg !14268
  br i1 %cmp2, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !14273

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.end.us-lcssa, !dbg !14273

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !14273

for.cond.us:                                      ; preds = %for.body.us, %entry.split.us
  %i0.0.us = phi i64 [ 0, %entry.split.us ], [ %inc.us, %for.body.us ], !dbg !14274
  call void @llvm.dbg.value(metadata i64 %i0.0.us, metadata !14261, metadata !DIExpression()), !dbg !14267
  %cmp.us = icmp eq i64 %i0.0.us, %conv, !dbg !14275
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !14276

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds [1 x i8*], [1 x i8*]* %1, i64 0, i64 %i0.0.us, !dbg !14277
  %2 = bitcast i8** %arrayidx.us to i8*, !dbg !14278
  tail call void %op(i8* nonnull %2, i8* %cookie) #7, !dbg !14279
  %inc.us = add nuw nsw i64 %i0.0.us, 1, !dbg !14280
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !14261, metadata !DIExpression()), !dbg !14267
  br label %for.cond.us, !dbg !14281, !llvm.loop !14282

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !14284

for.end.us-lcssa:                                 ; preds = %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !14261, metadata !DIExpression()), !dbg !14267
  br label %for.end, !dbg !14284

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !14284
}

declare dso_local void @gt_pch_n_S(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_sorted_fields_type(i8* %x_p) local_unnamed_addr #5 !dbg !14285 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14287, metadata !DIExpression()), !dbg !14294
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14288, metadata !DIExpression()), !dbg !14294
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_18sorted_fields_type, i32 34) #7, !dbg !14295
  %tobool = icmp eq i32 %call, 0, !dbg !14295
  br i1 %tobool, label %if.end7, label %if.then, !dbg !14296

if.then:                                          ; preds = %entry
  %len = bitcast i8* %x_p to i32*, !dbg !14297
  %0 = load i32, i32* %len, align 8, !dbg !14297
  %conv = sext i32 %0 to i64, !dbg !14298
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14293, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.value(metadata i64 0, metadata !14289, metadata !DIExpression()), !dbg !14299
  %elts = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14300
  %1 = bitcast i8* %elts to [1 x %union.tree_node*]*, !dbg !14300
  br label %for.cond, !dbg !14306

for.cond:                                         ; preds = %for.inc, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !14307
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !14289, metadata !DIExpression()), !dbg !14299
  %cmp = icmp eq i64 %i0.0, %conv, !dbg !14308
  br i1 %cmp, label %if.end7.loopexit, label %do.body, !dbg !14309

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %1, i64 0, i64 %i0.0, !dbg !14310
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14310
  %cmp2 = icmp eq %union.tree_node* %2, null, !dbg !14310
  br i1 %cmp2, label %for.inc, label %if.then4, !dbg !14311

if.then4:                                         ; preds = %do.body
  %3 = bitcast %union.tree_node* %2 to i8*, !dbg !14311
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %3) #7, !dbg !14310
  br label %for.inc, !dbg !14310

for.inc:                                          ; preds = %do.body, %if.then4
  %inc = add i64 %i0.0, 1, !dbg !14312
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14289, metadata !DIExpression()), !dbg !14299
  br label %for.cond, !dbg !14313, !llvm.loop !14314

if.end7.loopexit:                                 ; preds = %for.cond
  br label %if.end7, !dbg !14316

if.end7:                                          ; preds = %if.end7.loopexit, %entry
  ret void, !dbg !14316
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_18sorted_fields_type(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14317 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14319, metadata !DIExpression()), !dbg !14327
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14320, metadata !DIExpression()), !dbg !14327
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14321, metadata !DIExpression()), !dbg !14327
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14322, metadata !DIExpression()), !dbg !14327
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14323, metadata !DIExpression()), !dbg !14327
  %len = bitcast i8* %x_p to i32*, !dbg !14328
  %0 = load i32, i32* %len, align 8, !dbg !14328
  %conv = sext i32 %0 to i64, !dbg !14329
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14326, metadata !DIExpression()), !dbg !14330
  call void @llvm.dbg.value(metadata i64 0, metadata !14324, metadata !DIExpression()), !dbg !14330
  %cmp2 = icmp eq i8* %x_p, %this_obj, !dbg !14331
  %elts = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14331
  %1 = bitcast i8* %elts to [1 x %union.tree_node*]*, !dbg !14331
  br i1 %cmp2, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !14336

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.end.us-lcssa, !dbg !14336

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !14336

for.cond.us:                                      ; preds = %for.body.us, %entry.split.us
  %i0.0.us = phi i64 [ 0, %entry.split.us ], [ %inc.us, %for.body.us ], !dbg !14337
  call void @llvm.dbg.value(metadata i64 %i0.0.us, metadata !14324, metadata !DIExpression()), !dbg !14330
  %cmp.us = icmp eq i64 %i0.0.us, %conv, !dbg !14338
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !14339

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %1, i64 0, i64 %i0.0.us, !dbg !14340
  %2 = bitcast %union.tree_node** %arrayidx.us to i8*, !dbg !14341
  tail call void %op(i8* nonnull %2, i8* %cookie) #7, !dbg !14342
  %inc.us = add i64 %i0.0.us, 1, !dbg !14343
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !14324, metadata !DIExpression()), !dbg !14330
  br label %for.cond.us, !dbg !14344, !llvm.loop !14345

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !14347

for.end.us-lcssa:                                 ; preds = %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !14324, metadata !DIExpression()), !dbg !14330
  br label %for.end, !dbg !14347

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !14347
}

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) #2

; Function Attrs: nounwind uwtable
define internal void @gt_ggc_ma_ridpointers(i8* %x_p) #5 !dbg !14348 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14350, metadata !DIExpression()), !dbg !14357
  %0 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !14358
  %cmp = icmp eq %union.tree_node** %0, null, !dbg !14359
  br i1 %cmp, label %if.end12, label %for.cond.preheader, !dbg !14360

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !14361

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi %union.tree_node** [ %.pre, %for.inc ], [ %0, %for.cond.preheader ]
  %1 = phi %union.tree_node** [ %.pre, %for.inc ], [ %0, %for.cond.preheader ], !dbg !14363
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !14364
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !14351, metadata !DIExpression()), !dbg !14363
  %cmp1 = icmp eq i64 %i0.0, 152, !dbg !14365
  br i1 %cmp1, label %do.body5, label %do.body, !dbg !14361

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %1, i64 %i0.0, !dbg !14367
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14367
  %cmp2 = icmp eq %union.tree_node* %2, null, !dbg !14367
  br i1 %cmp2, label %for.inc, label %if.then3, !dbg !14371

if.then3:                                         ; preds = %do.body
  %3 = bitcast %union.tree_node* %2 to i8*, !dbg !14371
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %3) #7, !dbg !14367
  %.pre.pre = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !14363
  br label %for.inc, !dbg !14367

for.inc:                                          ; preds = %do.body, %if.then3
  %.pre = phi %union.tree_node** [ %.pre1, %do.body ], [ %.pre.pre, %if.then3 ], !dbg !14363
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !14372
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14351, metadata !DIExpression()), !dbg !14363
  br label %for.cond, !dbg !14373, !llvm.loop !14374

do.body5:                                         ; preds = %for.cond
  %.lcssa = phi %union.tree_node** [ %1, %for.cond ], !dbg !14363
  call void @llvm.dbg.value(metadata %union.tree_node** %.lcssa, metadata !14354, metadata !DIExpression()), !dbg !14376
  %switch = icmp ult %union.tree_node** %.lcssa, inttoptr (i64 2 to %union.tree_node**), !dbg !14377
  br i1 %switch, label %if.end12, label %if.then8, !dbg !14377

if.then8:                                         ; preds = %do.body5
  %4 = bitcast %union.tree_node** %.lcssa to i8*, !dbg !14379
  call void @llvm.dbg.value(metadata i8* %4, metadata !14354, metadata !DIExpression()), !dbg !14376
  %call = tail call i32 @ggc_set_mark(i8* %4) #7, !dbg !14377
  br label %if.end12, !dbg !14377

if.end12:                                         ; preds = %entry, %do.body5, %if.then8
  ret void, !dbg !14380
}

; Function Attrs: nounwind uwtable
define internal void @gt_pch_na_ridpointers(i8* %x_p) #5 !dbg !14381 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14383, metadata !DIExpression()), !dbg !14387
  %0 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !14388
  %cmp = icmp eq %union.tree_node** %0, null, !dbg !14389
  br i1 %cmp, label %if.end5, label %for.cond.preheader, !dbg !14390

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !14391

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi %union.tree_node** [ %.pre, %for.inc ], [ %0, %for.cond.preheader ]
  %1 = phi %union.tree_node** [ %.pre, %for.inc ], [ %0, %for.cond.preheader ], !dbg !14393
  %i1.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !14394
  call void @llvm.dbg.value(metadata i64 %i1.0, metadata !14384, metadata !DIExpression()), !dbg !14393
  %cmp1 = icmp eq i64 %i1.0, 152, !dbg !14395
  br i1 %cmp1, label %for.end, label %do.body, !dbg !14391

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %1, i64 %i1.0, !dbg !14397
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14397
  %cmp2 = icmp eq %union.tree_node* %2, null, !dbg !14397
  br i1 %cmp2, label %for.inc, label %if.then3, !dbg !14401

if.then3:                                         ; preds = %do.body
  %3 = bitcast %union.tree_node* %2 to i8*, !dbg !14401
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %3) #7, !dbg !14397
  %.pre.pre = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !14393
  br label %for.inc, !dbg !14397

for.inc:                                          ; preds = %do.body, %if.then3
  %.pre = phi %union.tree_node** [ %.pre1, %do.body ], [ %.pre.pre, %if.then3 ], !dbg !14393
  %inc = add nuw nsw i64 %i1.0, 1, !dbg !14402
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14384, metadata !DIExpression()), !dbg !14393
  br label %for.cond, !dbg !14403, !llvm.loop !14404

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %union.tree_node** [ %1, %for.cond ], !dbg !14393
  %4 = bitcast %union.tree_node** %.lcssa to i8*, !dbg !14406
  %call = tail call i32 @gt_pch_note_object(i8* %4, i8* bitcast (%union.tree_node*** @ridpointers to i8*), void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_pa_ridpointers, i32 217) #7, !dbg !14407
  br label %if.end5, !dbg !14408

if.end5:                                          ; preds = %entry, %for.end
  ret void, !dbg !14409
}

declare dso_local void @gt_ggc_m_P9tree_node4htab(i8*) #2

declare dso_local void @gt_pch_n_P9tree_node4htab(i8*) #2

declare dso_local %union.tree_node* @fold(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_initializer_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_initializer_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !14410 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !14412, metadata !DIExpression()), !dbg !14413
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14414
  %bf.load = load i64, i64* %0, align 8, !dbg !14414
  %bf.cast = and i64 %bf.load, 65535, !dbg !14414
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !14414
  %1 = load i32, i32* %arrayidx, align 4, !dbg !14414
  %cmp = icmp eq i32 %1, 9, !dbg !14414
  br i1 %cmp, label %if.then, label %if.else, !dbg !14416

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14417
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !14417
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !14417
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !14417
  %4 = load i64, i64* %low, align 8, !dbg !14417
  %conv = trunc i64 %4 to i32, !dbg !14417
  br label %return, !dbg !14418

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !14419
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !14419
  %conv9 = zext i8 %5 to i32, !dbg !14419
  br label %return, !dbg !14420

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !14421
  ret i32 %retval.0, !dbg !14422
}

declare dso_local zeroext i8 @real_isinteger(%struct.real_value*, i32) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_sgn(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @real_value_from_int_cst(%struct.real_value* sret, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @exact_real_truncate(i32, %struct.real_value*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local %union.tree_node* @get_unwidened(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @warning_candidate_p(%union.tree_node* %x) unnamed_addr #5 !dbg !14423 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !14427, metadata !DIExpression()), !dbg !14428
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14429
  %bf.load = load i64, i64* %0, align 8, !dbg !14429
  %bf.cast = and i64 %bf.load, 65535, !dbg !14429
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !14429
  %1 = load i32, i32* %arrayidx, align 4, !dbg !14429
  %cmp = icmp eq i32 %1, 3, !dbg !14429
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true4, !dbg !14430

land.lhs.true:                                    ; preds = %entry
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14431
  %2 = bitcast i40* %artificial_flag to i64*, !dbg !14431
  %bf.load1 = load i64, i64* %2, align 8, !dbg !14431
  %bf.cast32 = and i64 %bf.load1, 4096, !dbg !14431
  %tobool = icmp eq i64 %bf.cast32, 0, !dbg !14431
  br i1 %tobool, label %land.lhs.true4, label %land.end, !dbg !14432

land.lhs.true4:                                   ; preds = %land.lhs.true, %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14433
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !14433
  %tobool5 = icmp eq %union.tree_node* %3, null, !dbg !14433
  br i1 %tobool5, label %land.end, label %land.lhs.true6, !dbg !14434

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14434
  %bf.load10 = load i64, i64* %4, align 8, !dbg !14435
  %bf.cast121 = and i64 %bf.load10, 65535, !dbg !14435
  %cmp13 = icmp eq i64 %bf.cast121, 19, !dbg !14435
  br i1 %cmp13, label %land.end, label %land.rhs, !dbg !14436

land.rhs:                                         ; preds = %land.lhs.true6
  %call = tail call zeroext i8 @lvalue_p(%union.tree_node* %x) #7, !dbg !14437
  %tobool14 = icmp ne i8 %call, 0, !dbg !14436
  %phitmp = zext i1 %tobool14 to i32
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %land.lhs.true4, %land.rhs, %land.lhs.true6
  %5 = phi i32 [ 0, %land.lhs.true6 ], [ 0, %land.lhs.true4 ], [ 0, %land.lhs.true ], [ %phitmp, %land.rhs ]
  ret i32 %5, !dbg !14438
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.tlist* @new_tlist(%struct.tlist* %next, %union.tree_node* %t, %union.tree_node* %writer) unnamed_addr #5 !dbg !14439 {
entry:
  call void @llvm.dbg.value(metadata %struct.tlist* %next, metadata !14443, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !14444, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %union.tree_node* %writer, metadata !14445, metadata !DIExpression()), !dbg !14447
  store i64 24, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !14448
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 4) to i64*), align 8, !dbg !14448
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3) to i64*), align 8, !dbg !14448
  %sub.ptr.sub = sub i64 %0, %1, !dbg !14448
  %cmp = icmp slt i64 %sub.ptr.sub, 24, !dbg !14448
  %2 = inttoptr i64 %1 to i8*, !dbg !14448
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !14448

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @tlist_obstack, i32 24) #7, !dbg !14448
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !14448
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !14448
  br label %cond.end, !dbg !14448

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !14448
  %4 = phi i64 [ 24, %entry ], [ %.pre, %cond.true ], !dbg !14448
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !14448
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !14448
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 2), align 8, !dbg !14448
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !14448
  %6 = ptrtoint i8* %5 to i64, !dbg !14448
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !14448
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !14448

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 10), align 8, !dbg !14448
  %bf.set = or i8 %bf.load, 2, !dbg !14448
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 10), align 8, !dbg !14448
  br label %cond.end5, !dbg !14448

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 5), align 8, !dbg !14448
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 6), align 8, !dbg !14448
  %conv11 = sext i32 %8 to i64, !dbg !14448
  %add = add nsw i64 %7, %conv11, !dbg !14448
  %neg = xor i32 %8, -1, !dbg !14448
  %conv12 = sext i32 %neg to i64, !dbg !14448
  %and = and i64 %add, %conv12, !dbg !14448
  %9 = inttoptr i64 %and to i8*, !dbg !14448
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !dbg !14448
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 1) to i64*), align 8, !dbg !14448
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !14448
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 4) to i64*), align 8, !dbg !14448
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !14448
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !14448
  %12 = bitcast i8* %5 to %struct.tlist*, !dbg !14448
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !14448

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 3) to i64*), align 8, !dbg !14448
  br label %cond.end23, !dbg !14448

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !14448
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @tlist_obstack, i64 0, i32 2) to i64*), align 8, !dbg !14448
  call void @llvm.dbg.value(metadata %struct.tlist* %12, metadata !14446, metadata !DIExpression()), !dbg !14447
  %next25 = bitcast i8* %5 to %struct.tlist**, !dbg !14449
  store %struct.tlist* %next, %struct.tlist** %next25, align 8, !dbg !14450
  %expr = getelementptr inbounds i8, i8* %5, i64 8, !dbg !14451
  %14 = bitcast i8* %expr to %union.tree_node**, !dbg !14451
  store %union.tree_node* %t, %union.tree_node** %14, align 8, !dbg !14452
  %writer26 = getelementptr inbounds i8, i8* %5, i64 16, !dbg !14453
  %15 = bitcast i8* %writer26 to %union.tree_node**, !dbg !14453
  store %union.tree_node* %writer, %union.tree_node** %15, align 8, !dbg !14454
  ret %struct.tlist* %12, !dbg !14455
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_tlist(%struct.tlist** %to, %struct.tlist* %add, i32 %copy) unnamed_addr #5 !dbg !14456 {
entry:
  call void @llvm.dbg.value(metadata %struct.tlist** %to, metadata !14460, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist* %add, metadata !14461, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i32 %copy, metadata !14462, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %to, metadata !14463, metadata !DIExpression()), !dbg !14468
  br label %while.cond, !dbg !14469

while.cond:                                       ; preds = %while.body, %entry
  %end.0 = phi %struct.tlist** [ %to, %entry ], [ %next, %while.body ], !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %end.0, metadata !14463, metadata !DIExpression()), !dbg !14468
  %0 = load %struct.tlist*, %struct.tlist** %end.0, align 8, !dbg !14470
  %tobool = icmp eq %struct.tlist* %0, null, !dbg !14469
  br i1 %tobool, label %while.cond1.preheader, label %while.body, !dbg !14469

while.cond1.preheader:                            ; preds = %while.cond
  %end.0.lcssa = phi %struct.tlist** [ %end.0, %while.cond ], !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %end.0.lcssa, metadata !14463, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %end.0.lcssa, metadata !14463, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %end.0.lcssa, metadata !14463, metadata !DIExpression()), !dbg !14468
  %tobool17 = icmp eq i32 %copy, 0, !dbg !14471
  br i1 %tobool17, label %while.cond1.preheader.split.us, label %while.cond1.preheader.while.cond1.preheader.split_crit_edge, !dbg !14474

while.cond1.preheader.while.cond1.preheader.split_crit_edge: ; preds = %while.cond1.preheader
  br label %while.cond1, !dbg !14474

while.cond1.preheader.split.us:                   ; preds = %while.cond1.preheader
  br label %while.cond1.us, !dbg !14474

while.cond1.us:                                   ; preds = %if.end22.us, %while.cond1.preheader.split.us
  %end.1.us = phi %struct.tlist** [ %end.2.us, %if.end22.us ], [ %end.0.lcssa, %while.cond1.preheader.split.us ], !dbg !14475
  %add.addr.0.us = phi %struct.tlist* [ %1, %if.end22.us ], [ %add, %while.cond1.preheader.split.us ]
  call void @llvm.dbg.value(metadata %struct.tlist* %add.addr.0.us, metadata !14461, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %end.1.us, metadata !14463, metadata !DIExpression()), !dbg !14468
  %tobool2.us = icmp eq %struct.tlist* %add.addr.0.us, null, !dbg !14474
  br i1 %tobool2.us, label %while.end23.us-lcssa.us, label %while.body3.us, !dbg !14474

while.body3.us:                                   ; preds = %while.cond1.us
  call void @llvm.dbg.value(metadata i32 0, metadata !14464, metadata !DIExpression()), !dbg !14476
  %next5.us = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0.us, i64 0, i32 0, !dbg !14477
  %1 = load %struct.tlist*, %struct.tlist** %next5.us, align 8, !dbg !14477
  call void @llvm.dbg.value(metadata %struct.tlist* %1, metadata !14467, metadata !DIExpression()), !dbg !14476
  %expr7.us = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0.us, i64 0, i32 1, !dbg !14478
  %writer11.us = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0.us, i64 0, i32 2, !dbg !14482
  %2 = bitcast %union.tree_node** %writer11.us to i64*, !dbg !14482
  br label %for.cond.us, !dbg !14485

for.cond.us:                                      ; preds = %for.inc.us, %while.body3.us
  %found.0.us = phi i32 [ 0, %while.body3.us ], [ %found.1.us, %for.inc.us ], !dbg !14476
  %tmp2.0.in.us = phi %struct.tlist** [ %to, %while.body3.us ], [ %next14.us, %for.inc.us ]
  %tmp2.0.us = load %struct.tlist*, %struct.tlist** %tmp2.0.in.us, align 8, !dbg !14486
  call void @llvm.dbg.value(metadata %struct.tlist* %tmp2.0.us, metadata !14466, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.0.us, metadata !14464, metadata !DIExpression()), !dbg !14476
  %tobool6.us = icmp eq %struct.tlist* %tmp2.0.us, null, !dbg !14487
  br i1 %tobool6.us, label %for.end.us, label %for.body.us, !dbg !14487

for.body.us:                                      ; preds = %for.cond.us
  %expr.us = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp2.0.us, i64 0, i32 1, !dbg !14488
  %3 = load %union.tree_node*, %union.tree_node** %expr.us, align 8, !dbg !14488
  %4 = load %union.tree_node*, %union.tree_node** %expr7.us, align 8, !dbg !14489
  %call.us = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %3, %union.tree_node* %4) #8, !dbg !14490
  %tobool8.us = icmp eq i8 %call.us, 0, !dbg !14490
  br i1 %tobool8.us, label %for.inc.us, label %if.then.us, !dbg !14491

if.then.us:                                       ; preds = %for.body.us
  call void @llvm.dbg.value(metadata i32 1, metadata !14464, metadata !DIExpression()), !dbg !14476
  %writer.us = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp2.0.us, i64 0, i32 2, !dbg !14492
  %5 = load %union.tree_node*, %union.tree_node** %writer.us, align 8, !dbg !14492
  %tobool9.us = icmp eq %union.tree_node* %5, null, !dbg !14493
  br i1 %tobool9.us, label %if.then10.us, label %for.inc.us, !dbg !14494

if.then10.us:                                     ; preds = %if.then.us
  %6 = load i64, i64* %2, align 8, !dbg !14495
  %7 = bitcast %union.tree_node** %writer.us to i64*, !dbg !14496
  store i64 %6, i64* %7, align 8, !dbg !14496
  br label %for.inc.us, !dbg !14497

for.inc.us:                                       ; preds = %if.then10.us, %if.then.us, %for.body.us
  %found.1.us = phi i32 [ %found.0.us, %for.body.us ], [ 1, %if.then10.us ], [ 1, %if.then.us ], !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.1.us, metadata !14464, metadata !DIExpression()), !dbg !14476
  %next14.us = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp2.0.us, i64 0, i32 0, !dbg !14498
  br label %for.cond.us, !dbg !14499, !llvm.loop !14500

for.end.us:                                       ; preds = %for.cond.us
  %found.0.us.lcssa = phi i32 [ %found.0.us, %for.cond.us ], !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.0.us.lcssa, metadata !14464, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.0.us.lcssa, metadata !14464, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.0.us.lcssa, metadata !14464, metadata !DIExpression()), !dbg !14476
  %tobool15.us = icmp eq i32 %found.0.us.lcssa, 0, !dbg !14502
  br i1 %tobool15.us, label %if.then16.us, label %if.end22.us, !dbg !14503

if.then16.us:                                     ; preds = %for.end.us
  %8 = load %union.tree_node*, %union.tree_node** %expr7.us, align 8, !dbg !14504
  %9 = load %union.tree_node*, %union.tree_node** %writer11.us, align 8, !dbg !14505
  %call20.us = tail call fastcc %struct.tlist* @new_tlist(%struct.tlist* null, %union.tree_node* %8, %union.tree_node* %9) #8, !dbg !14506
  store %struct.tlist* %call20.us, %struct.tlist** %end.1.us, align 8, !dbg !14507
  %next21.us = getelementptr inbounds %struct.tlist, %struct.tlist* %call20.us, i64 0, i32 0, !dbg !14508
  call void @llvm.dbg.value(metadata %struct.tlist** %next21.us, metadata !14463, metadata !DIExpression()), !dbg !14468
  store %struct.tlist* null, %struct.tlist** %next21.us, align 8, !dbg !14509
  br label %if.end22.us, !dbg !14510

if.end22.us:                                      ; preds = %if.then16.us, %for.end.us
  %end.2.us = phi %struct.tlist** [ %end.1.us, %for.end.us ], [ %next21.us, %if.then16.us ], !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %end.2.us, metadata !14463, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist* %1, metadata !14461, metadata !DIExpression()), !dbg !14468
  br label %while.cond1.us, !dbg !14474, !llvm.loop !14511

while.end23.us-lcssa.us:                          ; preds = %while.cond1.us
  br label %while.end23, !dbg !14513

while.body:                                       ; preds = %while.cond
  %next = getelementptr inbounds %struct.tlist, %struct.tlist* %0, i64 0, i32 0, !dbg !14514
  call void @llvm.dbg.value(metadata %struct.tlist** %next, metadata !14463, metadata !DIExpression()), !dbg !14468
  br label %while.cond, !dbg !14469, !llvm.loop !14515

while.cond1:                                      ; preds = %while.cond1.preheader.while.cond1.preheader.split_crit_edge, %if.end22
  %end.1 = phi %struct.tlist** [ %end.2, %if.end22 ], [ %end.0.lcssa, %while.cond1.preheader.while.cond1.preheader.split_crit_edge ], !dbg !14475
  %add.addr.0 = phi %struct.tlist* [ %10, %if.end22 ], [ %add, %while.cond1.preheader.while.cond1.preheader.split_crit_edge ]
  call void @llvm.dbg.value(metadata %struct.tlist* %add.addr.0, metadata !14461, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %end.1, metadata !14463, metadata !DIExpression()), !dbg !14468
  %tobool2 = icmp eq %struct.tlist* %add.addr.0, null, !dbg !14474
  br i1 %tobool2, label %while.end23.us-lcssa, label %while.body3, !dbg !14474

while.body3:                                      ; preds = %while.cond1
  call void @llvm.dbg.value(metadata i32 0, metadata !14464, metadata !DIExpression()), !dbg !14476
  %next5 = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0, i64 0, i32 0, !dbg !14477
  %10 = load %struct.tlist*, %struct.tlist** %next5, align 8, !dbg !14477
  call void @llvm.dbg.value(metadata %struct.tlist* %10, metadata !14467, metadata !DIExpression()), !dbg !14476
  %expr7 = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0, i64 0, i32 1, !dbg !14478
  %writer11 = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0, i64 0, i32 2, !dbg !14482
  %11 = bitcast %union.tree_node** %writer11 to i64*, !dbg !14482
  br label %for.cond, !dbg !14485

for.cond:                                         ; preds = %for.inc, %while.body3
  %found.0 = phi i32 [ 0, %while.body3 ], [ %found.1, %for.inc ], !dbg !14476
  %tmp2.0.in = phi %struct.tlist** [ %to, %while.body3 ], [ %next14, %for.inc ]
  %tmp2.0 = load %struct.tlist*, %struct.tlist** %tmp2.0.in, align 8, !dbg !14486
  call void @llvm.dbg.value(metadata %struct.tlist* %tmp2.0, metadata !14466, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.0, metadata !14464, metadata !DIExpression()), !dbg !14476
  %tobool6 = icmp eq %struct.tlist* %tmp2.0, null, !dbg !14487
  br i1 %tobool6, label %for.end, label %for.body, !dbg !14487

for.body:                                         ; preds = %for.cond
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp2.0, i64 0, i32 1, !dbg !14488
  %12 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !14488
  %13 = load %union.tree_node*, %union.tree_node** %expr7, align 8, !dbg !14489
  %call = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %12, %union.tree_node* %13) #8, !dbg !14490
  %tobool8 = icmp eq i8 %call, 0, !dbg !14490
  br i1 %tobool8, label %for.inc, label %if.then, !dbg !14491

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 1, metadata !14464, metadata !DIExpression()), !dbg !14476
  %writer = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp2.0, i64 0, i32 2, !dbg !14492
  %14 = load %union.tree_node*, %union.tree_node** %writer, align 8, !dbg !14492
  %tobool9 = icmp eq %union.tree_node* %14, null, !dbg !14493
  br i1 %tobool9, label %if.then10, label %for.inc, !dbg !14494

if.then10:                                        ; preds = %if.then
  %15 = load i64, i64* %11, align 8, !dbg !14495
  %16 = bitcast %union.tree_node** %writer to i64*, !dbg !14496
  store i64 %15, i64* %16, align 8, !dbg !14496
  br label %for.inc, !dbg !14497

for.inc:                                          ; preds = %if.then, %for.body, %if.then10
  %found.1 = phi i32 [ %found.0, %for.body ], [ 1, %if.then10 ], [ 1, %if.then ], !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.1, metadata !14464, metadata !DIExpression()), !dbg !14476
  %next14 = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp2.0, i64 0, i32 0, !dbg !14498
  br label %for.cond, !dbg !14499, !llvm.loop !14500

for.end:                                          ; preds = %for.cond
  %found.0.lcssa = phi i32 [ %found.0, %for.cond ], !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.0.lcssa, metadata !14464, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.0.lcssa, metadata !14464, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 %found.0.lcssa, metadata !14464, metadata !DIExpression()), !dbg !14476
  %tobool15 = icmp eq i32 %found.0.lcssa, 0, !dbg !14502
  br i1 %tobool15, label %if.then16, label %if.end22, !dbg !14503

if.then16:                                        ; preds = %for.end
  store %struct.tlist* %add.addr.0, %struct.tlist** %end.1, align 8, !dbg !14507
  call void @llvm.dbg.value(metadata %struct.tlist** %next5, metadata !14463, metadata !DIExpression()), !dbg !14468
  store %struct.tlist* null, %struct.tlist** %next5, align 8, !dbg !14509
  br label %if.end22, !dbg !14510

if.end22:                                         ; preds = %for.end, %if.then16
  %end.2 = phi %struct.tlist** [ %end.1, %for.end ], [ %next5, %if.then16 ], !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist** %end.2, metadata !14463, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata %struct.tlist* %10, metadata !14461, metadata !DIExpression()), !dbg !14468
  br label %while.cond1, !dbg !14474, !llvm.loop !14511

while.end23.us-lcssa:                             ; preds = %while.cond1
  br label %while.end23, !dbg !14513

while.end23:                                      ; preds = %while.end23.us-lcssa.us, %while.end23.us-lcssa
  ret void, !dbg !14513
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_tlist(%struct.tlist** %to, %struct.tlist* %add, %union.tree_node* %exclude_writer, i32 %copy) unnamed_addr #5 !dbg !14516 {
entry:
  call void @llvm.dbg.value(metadata %struct.tlist** %to, metadata !14520, metadata !DIExpression()), !dbg !14526
  call void @llvm.dbg.value(metadata %struct.tlist* %add, metadata !14521, metadata !DIExpression()), !dbg !14526
  call void @llvm.dbg.value(metadata %union.tree_node* %exclude_writer, metadata !14522, metadata !DIExpression()), !dbg !14526
  call void @llvm.dbg.value(metadata i32 %copy, metadata !14523, metadata !DIExpression()), !dbg !14526
  %tobool2 = icmp eq i32 %copy, 0, !dbg !14527
  %0 = bitcast %struct.tlist** %to to i64*, !dbg !14527
  %tobool4 = icmp eq %union.tree_node* %exclude_writer, null, !dbg !14529
  br i1 %tobool2, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !14531

entry.entry.split_crit_edge:                      ; preds = %entry
  br i1 %tobool4, label %entry.split.split.us, label %entry.split.entry.split.split_crit_edge, !dbg !14531

entry.split.us:                                   ; preds = %entry
  br label %while.cond.us, !dbg !14531

while.cond.us:                                    ; preds = %if.end10.us, %entry.split.us
  %add.addr.0.us = phi %struct.tlist* [ %add, %entry.split.us ], [ %1, %if.end10.us ]
  call void @llvm.dbg.value(metadata %struct.tlist* %add.addr.0.us, metadata !14521, metadata !DIExpression()), !dbg !14526
  %tobool.us = icmp eq %struct.tlist* %add.addr.0.us, null, !dbg !14531
  br i1 %tobool.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !14531

while.body.us:                                    ; preds = %while.cond.us
  %next1.us = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0.us, i64 0, i32 0, !dbg !14532
  %1 = load %struct.tlist*, %struct.tlist** %next1.us, align 8, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.tlist* %1, metadata !14524, metadata !DIExpression()), !dbg !14533
  %2 = load i64, i64* %0, align 8, !dbg !14534
  %3 = bitcast %struct.tlist* %add.addr.0.us to i64*, !dbg !14535
  store i64 %2, i64* %3, align 8, !dbg !14535
  br i1 %tobool4, label %if.then6.us, label %lor.lhs.false.us, !dbg !14536

lor.lhs.false.us:                                 ; preds = %while.body.us
  %writer.us = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0.us, i64 0, i32 2, !dbg !14537
  %4 = load %union.tree_node*, %union.tree_node** %writer.us, align 8, !dbg !14537
  %call.us = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %4, %union.tree_node* nonnull %exclude_writer) #8, !dbg !14538
  %tobool5.us = icmp eq i8 %call.us, 0, !dbg !14538
  br i1 %tobool5.us, label %if.then6.us, label %if.end10.us, !dbg !14539

if.then6.us:                                      ; preds = %lor.lhs.false.us, %while.body.us
  br i1 true, label %cond.end.us, label %cond.true.us, !dbg !14540

cond.true.us:                                     ; preds = %if.then6.us
  br label %cond.end.us, !dbg !14540

cond.end.us:                                      ; preds = %cond.true.us, %if.then6.us
  store %struct.tlist* %add.addr.0.us, %struct.tlist** %to, align 8, !dbg !14541
  br label %if.end10.us, !dbg !14542

if.end10.us:                                      ; preds = %cond.end.us, %lor.lhs.false.us
  call void @llvm.dbg.value(metadata %struct.tlist* %1, metadata !14521, metadata !DIExpression()), !dbg !14526
  br label %while.cond.us, !dbg !14531, !llvm.loop !14543

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !14545

entry.split.entry.split.split_crit_edge:          ; preds = %entry.entry.split_crit_edge
  br label %while.cond, !dbg !14531

entry.split.split.us:                             ; preds = %entry.entry.split_crit_edge
  br label %while.cond.us1, !dbg !14531

while.cond.us1:                                   ; preds = %cond.end.us17, %entry.split.split.us
  %add.addr.0.us2 = phi %struct.tlist* [ %add, %entry.split.split.us ], [ %5, %cond.end.us17 ]
  call void @llvm.dbg.value(metadata %struct.tlist* %add.addr.0.us2, metadata !14521, metadata !DIExpression()), !dbg !14526
  %tobool.us3 = icmp eq %struct.tlist* %add.addr.0.us2, null, !dbg !14531
  br i1 %tobool.us3, label %while.end.us-lcssa.us-lcssa.us, label %while.body.us4, !dbg !14531

while.body.us4:                                   ; preds = %while.cond.us1
  %next1.us5 = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0.us2, i64 0, i32 0, !dbg !14532
  %5 = load %struct.tlist*, %struct.tlist** %next1.us5, align 8, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.tlist* %5, metadata !14524, metadata !DIExpression()), !dbg !14533
  br i1 false, label %while.body.us4.cond.end.us17_crit_edge, label %cond.true.us13, !dbg !14540

while.body.us4.cond.end.us17_crit_edge:           ; preds = %while.body.us4
  br label %cond.end.us17, !dbg !14540

cond.true.us13:                                   ; preds = %while.body.us4
  %6 = load %struct.tlist*, %struct.tlist** %to, align 8, !dbg !14546
  %expr.us14 = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0.us2, i64 0, i32 1, !dbg !14547
  %7 = load %union.tree_node*, %union.tree_node** %expr.us14, align 8, !dbg !14547
  %writer8.us15 = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0.us2, i64 0, i32 2, !dbg !14548
  %8 = load %union.tree_node*, %union.tree_node** %writer8.us15, align 8, !dbg !14548
  %call9.us16 = tail call fastcc %struct.tlist* @new_tlist(%struct.tlist* %6, %union.tree_node* %7, %union.tree_node* %8) #8, !dbg !14549
  br label %cond.end.us17, !dbg !14540

cond.end.us17:                                    ; preds = %while.body.us4.cond.end.us17_crit_edge, %cond.true.us13
  %cond.us18 = phi %struct.tlist* [ %call9.us16, %cond.true.us13 ], [ undef, %while.body.us4.cond.end.us17_crit_edge ], !dbg !14540
  store %struct.tlist* %cond.us18, %struct.tlist** %to, align 8, !dbg !14541
  call void @llvm.dbg.value(metadata %struct.tlist* %5, metadata !14521, metadata !DIExpression()), !dbg !14526
  br label %while.cond.us1, !dbg !14531, !llvm.loop !14543

while.end.us-lcssa.us-lcssa.us:                   ; preds = %while.cond.us1
  br label %while.end.us-lcssa, !dbg !14545

while.cond:                                       ; preds = %if.end10, %entry.split.entry.split.split_crit_edge
  %add.addr.0 = phi %struct.tlist* [ %add, %entry.split.entry.split.split_crit_edge ], [ %9, %if.end10 ]
  call void @llvm.dbg.value(metadata %struct.tlist* %add.addr.0, metadata !14521, metadata !DIExpression()), !dbg !14526
  %tobool = icmp eq %struct.tlist* %add.addr.0, null, !dbg !14531
  br i1 %tobool, label %while.end.us-lcssa.us-lcssa, label %while.body, !dbg !14531

while.body:                                       ; preds = %while.cond
  %next1 = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0, i64 0, i32 0, !dbg !14532
  %9 = load %struct.tlist*, %struct.tlist** %next1, align 8, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.tlist* %9, metadata !14524, metadata !DIExpression()), !dbg !14533
  %writer = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0, i64 0, i32 2, !dbg !14537
  %10 = load %union.tree_node*, %union.tree_node** %writer, align 8, !dbg !14537
  %call = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %10, %union.tree_node* nonnull %exclude_writer) #8, !dbg !14538
  %tobool5 = icmp eq i8 %call, 0, !dbg !14538
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !14539

if.then6:                                         ; preds = %while.body
  br i1 false, label %if.then6.cond.end_crit_edge, label %cond.true, !dbg !14540

if.then6.cond.end_crit_edge:                      ; preds = %if.then6
  br label %cond.end, !dbg !14540

cond.true:                                        ; preds = %if.then6
  %11 = load %struct.tlist*, %struct.tlist** %to, align 8, !dbg !14546
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %add.addr.0, i64 0, i32 1, !dbg !14547
  %12 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !14547
  %13 = load %union.tree_node*, %union.tree_node** %writer, align 8, !dbg !14548
  %call9 = tail call fastcc %struct.tlist* @new_tlist(%struct.tlist* %11, %union.tree_node* %12, %union.tree_node* %13) #8, !dbg !14549
  br label %cond.end, !dbg !14540

cond.end:                                         ; preds = %if.then6.cond.end_crit_edge, %cond.true
  %cond = phi %struct.tlist* [ %call9, %cond.true ], [ undef, %if.then6.cond.end_crit_edge ], !dbg !14540
  store %struct.tlist* %cond, %struct.tlist** %to, align 8, !dbg !14541
  br label %if.end10, !dbg !14542

if.end10:                                         ; preds = %while.body, %cond.end
  call void @llvm.dbg.value(metadata %struct.tlist* %9, metadata !14521, metadata !DIExpression()), !dbg !14526
  br label %while.cond, !dbg !14531, !llvm.loop !14543

while.end.us-lcssa.us-lcssa:                      ; preds = %while.cond
  br label %while.end.us-lcssa, !dbg !14545

while.end.us-lcssa:                               ; preds = %while.end.us-lcssa.us-lcssa.us, %while.end.us-lcssa.us-lcssa
  br label %while.end, !dbg !14545

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  ret void, !dbg !14545
}

; Function Attrs: nounwind uwtable
define internal fastcc void @warn_for_collisions_1(%union.tree_node* %written, %union.tree_node* %writer, %struct.tlist* %list, i32 %only_writes) unnamed_addr #5 !dbg !14550 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %written, metadata !14554, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata %union.tree_node* %writer, metadata !14555, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata %struct.tlist* %list, metadata !14556, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata i32 %only_writes, metadata !14557, metadata !DIExpression()), !dbg !14559
  br label %for.cond, !dbg !14560

for.cond:                                         ; preds = %for.inc, %entry
  %tmp.0.in = phi %struct.tlist** [ @warned_ids, %entry ], [ %next, %for.inc ]
  %tmp.0 = load %struct.tlist*, %struct.tlist** %tmp.0.in, align 8, !dbg !14562
  call void @llvm.dbg.value(metadata %struct.tlist* %tmp.0, metadata !14558, metadata !DIExpression()), !dbg !14559
  %tobool = icmp eq %struct.tlist* %tmp.0, null, !dbg !14563
  br i1 %tobool, label %while.cond.preheader, label %for.body, !dbg !14563

while.cond.preheader:                             ; preds = %for.cond
  %tobool10 = icmp eq i32 %only_writes, 0, !dbg !14564
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %writer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14567
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %writer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14567
  br i1 %tobool10, label %while.cond.preheader.split.us, label %while.cond.preheader.while.cond.preheader.split_crit_edge, !dbg !14569

while.cond.preheader.while.cond.preheader.split_crit_edge: ; preds = %while.cond.preheader
  br label %while.cond, !dbg !14569

while.cond.preheader.split.us:                    ; preds = %while.cond.preheader
  br label %while.cond.us, !dbg !14569

while.cond.us:                                    ; preds = %if.end56.us, %while.cond.preheader.split.us
  %list.addr.0.us = phi %struct.tlist* [ %10, %if.end56.us ], [ %list, %while.cond.preheader.split.us ]
  call void @llvm.dbg.value(metadata %struct.tlist* %list.addr.0.us, metadata !14556, metadata !DIExpression()), !dbg !14559
  %tobool2.us = icmp eq %struct.tlist* %list.addr.0.us, null, !dbg !14569
  br i1 %tobool2.us, label %cleanup.cont.loopexit.us-lcssa.us, label %while.body.us, !dbg !14569

while.body.us:                                    ; preds = %while.cond.us
  %expr3.us = getelementptr inbounds %struct.tlist, %struct.tlist* %list.addr.0.us, i64 0, i32 1, !dbg !14570
  %2 = load %union.tree_node*, %union.tree_node** %expr3.us, align 8, !dbg !14570
  %call4.us = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %2, %union.tree_node* %written) #8, !dbg !14571
  %tobool5.us = icmp eq i8 %call4.us, 0, !dbg !14571
  br i1 %tobool5.us, label %if.end56.us, label %land.lhs.true.us, !dbg !14572

land.lhs.true.us:                                 ; preds = %while.body.us
  %writer6.us = getelementptr inbounds %struct.tlist, %struct.tlist* %list.addr.0.us, i64 0, i32 2, !dbg !14573
  %3 = load %union.tree_node*, %union.tree_node** %writer6.us, align 8, !dbg !14573
  %call7.us = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %3, %union.tree_node* %writer) #8, !dbg !14574
  %tobool8.us = icmp eq i8 %call7.us, 0, !dbg !14574
  br i1 %tobool8.us, label %land.lhs.true9.us, label %if.end56.us, !dbg !14575

land.lhs.true9.us:                                ; preds = %land.lhs.true.us
  %4 = load %struct.tlist*, %struct.tlist** @warned_ids, align 8, !dbg !14576
  %call14.us = tail call fastcc %struct.tlist* @new_tlist(%struct.tlist* %4, %union.tree_node* %written, %union.tree_node* null) #8, !dbg !14577
  store %struct.tlist* %call14.us, %struct.tlist** @warned_ids, align 8, !dbg !14578
  %bf.load.us = load i64, i64* %0, align 8, !dbg !14579
  %bf.cast.us = and i64 %bf.load.us, 65535, !dbg !14579
  %arrayidx.us = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast.us, !dbg !14579
  %5 = load i32, i32* %arrayidx.us, align 4, !dbg !14579
  %cmp.us = icmp ugt i32 %5, 3, !dbg !14579
  br i1 %cmp.us, label %land.lhs.true16.us, label %cond.end.us, !dbg !14579

land.lhs.true16.us:                               ; preds = %land.lhs.true9.us
  %cmp23.us = icmp ult i32 %5, 11, !dbg !14579
  br i1 %cmp23.us, label %cond.true.us, label %cond.end.us, !dbg !14579

cond.true.us:                                     ; preds = %land.lhs.true16.us
  %6 = load i32, i32* %1, align 8, !dbg !14579
  br label %cond.end.us, !dbg !14579

cond.end.us:                                      ; preds = %cond.true.us, %land.lhs.true16.us, %land.lhs.true9.us
  %cond.us = phi i32 [ %6, %cond.true.us ], [ 0, %land.lhs.true16.us ], [ 0, %land.lhs.true9.us ], !dbg !14579
  %cmp25.us = icmp eq i32 %cond.us, 0, !dbg !14579
  br i1 %cmp25.us, label %cond.false51.us, label %cond.true27.us, !dbg !14579

cond.true27.us:                                   ; preds = %cond.end.us
  br i1 %cmp.us, label %land.lhs.true36.us, label %cond.end52.us, !dbg !14580

land.lhs.true36.us:                               ; preds = %cond.true27.us
  %cmp43.us = icmp ult i32 %5, 11, !dbg !14580
  br i1 %cmp43.us, label %cond.true45.us, label %cond.end52.us, !dbg !14580

cond.true45.us:                                   ; preds = %land.lhs.true36.us
  %7 = load i32, i32* %1, align 8, !dbg !14580
  br label %cond.end52.us, !dbg !14580

cond.false51.us:                                  ; preds = %cond.end.us
  %8 = load i32, i32* @input_location, align 4, !dbg !14581
  br label %cond.end52.us, !dbg !14579

cond.end52.us:                                    ; preds = %cond.false51.us, %cond.true45.us, %land.lhs.true36.us, %cond.true27.us
  %cond53.us = phi i32 [ %8, %cond.false51.us ], [ %7, %cond.true45.us ], [ 0, %land.lhs.true36.us ], [ 0, %cond.true27.us ], !dbg !14579
  %9 = load %union.tree_node*, %union.tree_node** %expr3.us, align 8, !dbg !14582
  %call55.us = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %cond53.us, i32 174, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.421, i64 0, i64 0), %union.tree_node* %9) #7, !dbg !14583
  br label %if.end56.us, !dbg !14584

if.end56.us:                                      ; preds = %cond.end52.us, %land.lhs.true.us, %while.body.us
  %next57.us = getelementptr inbounds %struct.tlist, %struct.tlist* %list.addr.0.us, i64 0, i32 0, !dbg !14585
  %10 = load %struct.tlist*, %struct.tlist** %next57.us, align 8, !dbg !14585
  call void @llvm.dbg.value(metadata %struct.tlist* %10, metadata !14556, metadata !DIExpression()), !dbg !14559
  br label %while.cond.us, !dbg !14569, !llvm.loop !14586

cleanup.cont.loopexit.us-lcssa.us:                ; preds = %while.cond.us
  br label %cleanup.cont.loopexit, !dbg !14588

for.body:                                         ; preds = %for.cond
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp.0, i64 0, i32 1, !dbg !14589
  %11 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !14589
  %call = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %11, %union.tree_node* %written) #8, !dbg !14592
  %tobool1 = icmp eq i8 %call, 0, !dbg !14592
  br i1 %tobool1, label %for.inc, label %cleanup.cont.loopexit1, !dbg !14593

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.tlist, %struct.tlist* %tmp.0, i64 0, i32 0, !dbg !14594
  br label %for.cond, !dbg !14595, !llvm.loop !14596

while.cond:                                       ; preds = %while.cond.preheader.while.cond.preheader.split_crit_edge, %if.end56
  %list.addr.0 = phi %struct.tlist* [ %21, %if.end56 ], [ %list, %while.cond.preheader.while.cond.preheader.split_crit_edge ]
  call void @llvm.dbg.value(metadata %struct.tlist* %list.addr.0, metadata !14556, metadata !DIExpression()), !dbg !14559
  %tobool2 = icmp eq %struct.tlist* %list.addr.0, null, !dbg !14569
  br i1 %tobool2, label %cleanup.cont.loopexit.us-lcssa, label %while.body, !dbg !14569

while.body:                                       ; preds = %while.cond
  %expr3 = getelementptr inbounds %struct.tlist, %struct.tlist* %list.addr.0, i64 0, i32 1, !dbg !14570
  %12 = load %union.tree_node*, %union.tree_node** %expr3, align 8, !dbg !14570
  %call4 = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %12, %union.tree_node* %written) #8, !dbg !14571
  %tobool5 = icmp eq i8 %call4, 0, !dbg !14571
  br i1 %tobool5, label %if.end56, label %land.lhs.true, !dbg !14572

land.lhs.true:                                    ; preds = %while.body
  %writer6 = getelementptr inbounds %struct.tlist, %struct.tlist* %list.addr.0, i64 0, i32 2, !dbg !14573
  %13 = load %union.tree_node*, %union.tree_node** %writer6, align 8, !dbg !14573
  %call7 = tail call fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %13, %union.tree_node* %writer) #8, !dbg !14574
  %tobool8 = icmp eq i8 %call7, 0, !dbg !14574
  br i1 %tobool8, label %land.lhs.true9, label %if.end56, !dbg !14575

land.lhs.true9:                                   ; preds = %land.lhs.true
  %14 = load %union.tree_node*, %union.tree_node** %writer6, align 8, !dbg !14598
  %tobool12 = icmp eq %union.tree_node* %14, null, !dbg !14599
  br i1 %tobool12, label %if.end56, label %if.then13, !dbg !14600

if.then13:                                        ; preds = %land.lhs.true9
  %15 = load %struct.tlist*, %struct.tlist** @warned_ids, align 8, !dbg !14576
  %call14 = tail call fastcc %struct.tlist* @new_tlist(%struct.tlist* %15, %union.tree_node* %written, %union.tree_node* null) #8, !dbg !14577
  store %struct.tlist* %call14, %struct.tlist** @warned_ids, align 8, !dbg !14578
  %bf.load = load i64, i64* %0, align 8, !dbg !14579
  %bf.cast = and i64 %bf.load, 65535, !dbg !14579
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !14579
  %16 = load i32, i32* %arrayidx, align 4, !dbg !14579
  %cmp = icmp ugt i32 %16, 3, !dbg !14579
  br i1 %cmp, label %land.lhs.true16, label %cond.end, !dbg !14579

land.lhs.true16:                                  ; preds = %if.then13
  %cmp23 = icmp ult i32 %16, 11, !dbg !14579
  br i1 %cmp23, label %cond.true, label %cond.end, !dbg !14579

cond.true:                                        ; preds = %land.lhs.true16
  %17 = load i32, i32* %1, align 8, !dbg !14579
  br label %cond.end, !dbg !14579

cond.end:                                         ; preds = %if.then13, %land.lhs.true16, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ 0, %land.lhs.true16 ], [ 0, %if.then13 ], !dbg !14579
  %cmp25 = icmp eq i32 %cond, 0, !dbg !14579
  br i1 %cmp25, label %cond.false51, label %cond.true27, !dbg !14579

cond.true27:                                      ; preds = %cond.end
  br i1 %cmp, label %land.lhs.true36, label %cond.end52, !dbg !14580

land.lhs.true36:                                  ; preds = %cond.true27
  %cmp43 = icmp ult i32 %16, 11, !dbg !14580
  br i1 %cmp43, label %cond.true45, label %cond.end52, !dbg !14580

cond.true45:                                      ; preds = %land.lhs.true36
  %18 = load i32, i32* %1, align 8, !dbg !14580
  br label %cond.end52, !dbg !14580

cond.false51:                                     ; preds = %cond.end
  %19 = load i32, i32* @input_location, align 4, !dbg !14581
  br label %cond.end52, !dbg !14579

cond.end52:                                       ; preds = %cond.true45, %land.lhs.true36, %cond.true27, %cond.false51
  %cond53 = phi i32 [ %19, %cond.false51 ], [ %18, %cond.true45 ], [ 0, %land.lhs.true36 ], [ 0, %cond.true27 ], !dbg !14579
  %20 = load %union.tree_node*, %union.tree_node** %expr3, align 8, !dbg !14582
  %call55 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %cond53, i32 174, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.421, i64 0, i64 0), %union.tree_node* %20) #7, !dbg !14583
  br label %if.end56, !dbg !14584

if.end56:                                         ; preds = %land.lhs.true9, %land.lhs.true, %while.body, %cond.end52
  %next57 = getelementptr inbounds %struct.tlist, %struct.tlist* %list.addr.0, i64 0, i32 0, !dbg !14585
  %21 = load %struct.tlist*, %struct.tlist** %next57, align 8, !dbg !14585
  call void @llvm.dbg.value(metadata %struct.tlist* %21, metadata !14556, metadata !DIExpression()), !dbg !14559
  br label %while.cond, !dbg !14569, !llvm.loop !14586

cleanup.cont.loopexit.us-lcssa:                   ; preds = %while.cond
  br label %cleanup.cont.loopexit, !dbg !14588

cleanup.cont.loopexit:                            ; preds = %cleanup.cont.loopexit.us-lcssa.us, %cleanup.cont.loopexit.us-lcssa
  br label %cleanup.cont, !dbg !14588

cleanup.cont.loopexit1:                           ; preds = %for.body
  br label %cleanup.cont, !dbg !14588

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit1, %cleanup.cont.loopexit
  ret void, !dbg !14588
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @candidate_equal_p(%union.tree_node* %x, %union.tree_node* %y) unnamed_addr #5 !dbg !14601 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !14603, metadata !DIExpression()), !dbg !14605
  call void @llvm.dbg.value(metadata %union.tree_node* %y, metadata !14604, metadata !DIExpression()), !dbg !14605
  %cmp = icmp eq %union.tree_node* %x, %y, !dbg !14606
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14607

lor.rhs:                                          ; preds = %entry
  %tobool = icmp ne %union.tree_node* %x, null, !dbg !14608
  %tobool1 = icmp ne %union.tree_node* %y, null, !dbg !14609
  %or.cond = and i1 %tobool, %tobool1, !dbg !14610
  br i1 %or.cond, label %land.rhs, label %lor.end, !dbg !14610

land.rhs:                                         ; preds = %lor.rhs
  %call = tail call i32 @operand_equal_p(%union.tree_node* nonnull %x, %union.tree_node* nonnull %y, i32 0) #7, !dbg !14611
  %tobool2 = icmp ne i32 %call, 0, !dbg !14612
  %phitmp = zext i1 %tobool2 to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %entry
  %0 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !14613
}

declare dso_local zeroext i8 @lvalue_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @def_fn_type(i32 %def, i32 %ret, i8 zeroext %var, i32 %n, ...) unnamed_addr #5 !dbg !14614 {
entry:
  %list = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i32 %def, metadata !14618, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i32 %ret, metadata !14619, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i8 %var, metadata !14620, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i32 %n, metadata !14621, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !14622, metadata !DIExpression()), !dbg !14631
  %0 = bitcast [1 x %struct.__va_list_tag]* %list to i8*, !dbg !14632
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !14632
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %list, metadata !14624, metadata !DIExpression()), !dbg !14633
  call void @llvm.va_start(i8* %0), !dbg !14634
  call void @llvm.dbg.value(metadata i32 0, metadata !14625, metadata !DIExpression()), !dbg !14631
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %list, i64 0, i64 0, i32 0, !dbg !14635
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %list, i64 0, i64 0, i32 2, !dbg !14635
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %list, i64 0, i64 0, i32 3, !dbg !14635
  br label %for.cond, !dbg !14636

for.cond:                                         ; preds = %for.inc, %entry
  %args.0 = phi %union.tree_node* [ null, %entry ], [ %args.1, %for.inc ], !dbg !14637
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !14638
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !14625, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0, metadata !14622, metadata !DIExpression()), !dbg !14631
  %cmp = icmp slt i32 %i.0, %n, !dbg !14639
  br i1 %cmp, label %for.body, label %for.end, !dbg !14640

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !14641
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !14641
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !14641

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !14641
  %2 = sext i32 %gp_offset to i64, !dbg !14641
  %3 = getelementptr i8, i8* %reg_save_area, i64 %2, !dbg !14641
  %4 = add i32 %gp_offset, 8, !dbg !14641
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !14641
  br label %vaarg.end, !dbg !14641

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !14641
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !14641
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !14641
  br label %vaarg.end, !dbg !14641

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %3, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to i32*, !dbg !14641
  %5 = load i32, i32* %vaarg.addr, align 4, !dbg !14641
  call void @llvm.dbg.value(metadata i32 %5, metadata !14626, metadata !DIExpression()), !dbg !14635
  %idxprom = zext i32 %5 to i64, !dbg !14642
  %arrayidx = getelementptr inbounds [252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 %idxprom, !dbg !14642
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14642
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !14623, metadata !DIExpression()), !dbg !14631
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !14643
  %cmp3 = icmp eq %union.tree_node* %6, %7, !dbg !14645
  br i1 %cmp3, label %cleanup, label %if.end, !dbg !14646

if.end:                                           ; preds = %vaarg.end
  %call = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %6, %union.tree_node* %args.0) #7, !dbg !14647
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !14622, metadata !DIExpression()), !dbg !14631
  br label %cleanup, !dbg !14648

cleanup:                                          ; preds = %vaarg.end, %if.end
  %args.1 = phi %union.tree_node* [ %call, %if.end ], [ %args.0, %vaarg.end ], !dbg !14631
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %vaarg.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %args.1, metadata !14622, metadata !DIExpression()), !dbg !14631
  br i1 %cleanup.dest.slot.0, label %for.inc, label %egress.loopexit

for.inc:                                          ; preds = %cleanup
  %inc = add nuw nsw i32 %i.0, 1, !dbg !14649
  call void @llvm.dbg.value(metadata i32 %inc, metadata !14625, metadata !DIExpression()), !dbg !14631
  br label %for.cond, !dbg !14650, !llvm.loop !14651

for.end:                                          ; preds = %for.cond
  %args.0.lcssa = phi %union.tree_node* [ %args.0, %for.cond ], !dbg !14637
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0.lcssa, metadata !14622, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0.lcssa, metadata !14622, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0.lcssa, metadata !14622, metadata !DIExpression()), !dbg !14631
  call void @llvm.va_end(i8* nonnull %0), !dbg !14653
  %call6 = call %union.tree_node* @nreverse(%union.tree_node* %args.0.lcssa) #7, !dbg !14654
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !14622, metadata !DIExpression()), !dbg !14631
  %tobool = icmp eq i8 %var, 0, !dbg !14655
  br i1 %tobool, label %if.then7, label %if.end9, !dbg !14657

if.then7:                                         ; preds = %for.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !14658
  %call8 = call %union.tree_node* @chainon(%union.tree_node* %call6, %union.tree_node* %8) #7, !dbg !14659
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !14622, metadata !DIExpression()), !dbg !14631
  br label %if.end9, !dbg !14660

if.end9:                                          ; preds = %for.end, %if.then7
  %args.2 = phi %union.tree_node* [ %call6, %for.end ], [ %call8, %if.then7 ], !dbg !14631
  call void @llvm.dbg.value(metadata %union.tree_node* %args.2, metadata !14622, metadata !DIExpression()), !dbg !14631
  %idxprom10 = zext i32 %ret to i64, !dbg !14661
  %arrayidx11 = getelementptr inbounds [252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 %idxprom10, !dbg !14661
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8, !dbg !14661
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !14623, metadata !DIExpression()), !dbg !14631
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !14662
  %cmp12 = icmp eq %union.tree_node* %9, %10, !dbg !14664
  br i1 %cmp12, label %egress, label %if.end14, !dbg !14665

if.end14:                                         ; preds = %if.end9
  %call15 = call %union.tree_node* @build_function_type(%union.tree_node* %9, %union.tree_node* %args.2) #7, !dbg !14666
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !14623, metadata !DIExpression()), !dbg !14631
  br label %egress, !dbg !14667

egress.loopexit:                                  ; preds = %cleanup
  %.lcssa = phi %union.tree_node* [ %6, %cleanup ], !dbg !14642
  br label %egress, !dbg !14668

egress:                                           ; preds = %egress.loopexit, %if.end9, %if.end14
  %t.0 = phi %union.tree_node* [ %call15, %if.end14 ], [ %9, %if.end9 ], [ %.lcssa, %egress.loopexit ], !dbg !14631
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !14623, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.label(metadata !14630), !dbg !14669
  %idxprom16 = zext i32 %def to i64, !dbg !14668
  %arrayidx17 = getelementptr inbounds [252 x %union.tree_node*], [252 x %union.tree_node*]* @builtin_types, i64 0, i64 %idxprom16, !dbg !14668
  store %union.tree_node* %t.0, %union.tree_node** %arrayidx17, align 8, !dbg !14670
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !14671
  ret void, !dbg !14671
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_init_attributes() unnamed_addr #5 !dbg !14672 {
entry:
  store %union.tree_node* null, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14673
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 0) #7, !dbg !14676
  store %union.tree_node* %call, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 1), align 8, !dbg !14676
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14676
  %call1 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %0, %union.tree_node* %call, %union.tree_node* %0) #7, !dbg !14676
  store %union.tree_node* %call1, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 2), align 16, !dbg !14676
  %call2 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 1) #7, !dbg !14677
  store %union.tree_node* %call2, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 3), align 8, !dbg !14677
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14677
  %call3 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %1, %union.tree_node* %call2, %union.tree_node* %1) #7, !dbg !14677
  store %union.tree_node* %call3, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 4), align 16, !dbg !14677
  %call4 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 2) #7, !dbg !14678
  store %union.tree_node* %call4, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 5), align 8, !dbg !14678
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14678
  %call5 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %2, %union.tree_node* %call4, %union.tree_node* %2) #7, !dbg !14678
  store %union.tree_node* %call5, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 6), align 16, !dbg !14678
  %call6 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 3) #7, !dbg !14679
  store %union.tree_node* %call6, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 7), align 8, !dbg !14679
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14679
  %call7 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %3, %union.tree_node* %call6, %union.tree_node* %3) #7, !dbg !14679
  store %union.tree_node* %call7, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 8), align 16, !dbg !14679
  %call8 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 4) #7, !dbg !14680
  store %union.tree_node* %call8, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 9), align 8, !dbg !14680
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14680
  %call9 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %4, %union.tree_node* %call8, %union.tree_node* %4) #7, !dbg !14680
  store %union.tree_node* %call9, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 10), align 16, !dbg !14680
  %call10 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 5) #7, !dbg !14681
  store %union.tree_node* %call10, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 11), align 8, !dbg !14681
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14681
  %call11 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %5, %union.tree_node* %call10, %union.tree_node* %5) #7, !dbg !14681
  store %union.tree_node* %call11, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 12), align 16, !dbg !14681
  %call12 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 6) #7, !dbg !14682
  store %union.tree_node* %call12, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 13), align 8, !dbg !14682
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14682
  %call13 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %6, %union.tree_node* %call12, %union.tree_node* %6) #7, !dbg !14682
  store %union.tree_node* %call13, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 14), align 16, !dbg !14682
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14683
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 3), align 8, !dbg !14683
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 2), align 16, !dbg !14683
  %call14 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %7, %union.tree_node* %8, %union.tree_node* %9) #7, !dbg !14683
  store %union.tree_node* %call14, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 15), align 8, !dbg !14683
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14684
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 3), align 8, !dbg !14684
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 6), align 16, !dbg !14684
  %call15 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %10, %union.tree_node* %11, %union.tree_node* %12) #7, !dbg !14684
  store %union.tree_node* %call15, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 16), align 16, !dbg !14684
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14685
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 5), align 8, !dbg !14685
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 2), align 16, !dbg !14685
  %call16 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %13, %union.tree_node* %14, %union.tree_node* %15) #7, !dbg !14685
  store %union.tree_node* %call16, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 17), align 8, !dbg !14685
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14686
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 5), align 8, !dbg !14686
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 8), align 16, !dbg !14686
  %call17 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %16, %union.tree_node* %17, %union.tree_node* %18) #7, !dbg !14686
  store %union.tree_node* %call17, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 18), align 16, !dbg !14686
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14687
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 7), align 8, !dbg !14687
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 2), align 16, !dbg !14687
  %call18 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %19, %union.tree_node* %20, %union.tree_node* %21) #7, !dbg !14687
  store %union.tree_node* %call18, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 19), align 8, !dbg !14687
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14688
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 7), align 8, !dbg !14688
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 10), align 16, !dbg !14688
  %call19 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %22, %union.tree_node* %23, %union.tree_node* %24) #7, !dbg !14688
  store %union.tree_node* %call19, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 20), align 16, !dbg !14688
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14689
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 9), align 8, !dbg !14689
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 2), align 16, !dbg !14689
  %call20 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %25, %union.tree_node* %26, %union.tree_node* %27) #7, !dbg !14689
  store %union.tree_node* %call20, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 21), align 8, !dbg !14689
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14690
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 9), align 8, !dbg !14690
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 12), align 16, !dbg !14690
  %call21 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %28, %union.tree_node* %29, %union.tree_node* %30) #7, !dbg !14690
  store %union.tree_node* %call21, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 22), align 16, !dbg !14690
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14691
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 11), align 8, !dbg !14691
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 2), align 16, !dbg !14691
  %call22 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %31, %union.tree_node* %32, %union.tree_node* %33) #7, !dbg !14691
  store %union.tree_node* %call22, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 23), align 8, !dbg !14691
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14692
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 11), align 8, !dbg !14692
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 14), align 16, !dbg !14692
  %call23 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %34, %union.tree_node* %35, %union.tree_node* %36) #7, !dbg !14692
  store %union.tree_node* %call23, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 24), align 16, !dbg !14692
  %call24 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0)) #7, !dbg !14693
  store %union.tree_node* %call24, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 25), align 8, !dbg !14693
  %call25 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i64 0, i64 0)) #7, !dbg !14694
  store %union.tree_node* %call25, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14694
  %call26 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.198, i64 0, i64 0)) #7, !dbg !14695
  store %union.tree_node* %call26, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 27), align 8, !dbg !14695
  %call27 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0)) #7, !dbg !14696
  store %union.tree_node* %call27, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 28), align 16, !dbg !14696
  %call28 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.183, i64 0, i64 0)) #7, !dbg !14697
  store %union.tree_node* %call28, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14697
  %call29 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i64 0, i64 0)) #7, !dbg !14698
  store %union.tree_node* %call29, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 30), align 16, !dbg !14698
  %call30 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.184, i64 0, i64 0)) #7, !dbg !14699
  store %union.tree_node* %call30, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 31), align 8, !dbg !14699
  %call31 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1118, i64 0, i64 0)) #7, !dbg !14700
  store %union.tree_node* %call31, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14700
  %call32 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1119, i64 0, i64 0)) #7, !dbg !14701
  store %union.tree_node* %call32, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 33), align 8, !dbg !14701
  %call33 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1120, i64 0, i64 0)) #7, !dbg !14702
  store %union.tree_node* %call33, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 34), align 16, !dbg !14702
  %call34 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1121, i64 0, i64 0)) #7, !dbg !14703
  store %union.tree_node* %call34, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 35), align 8, !dbg !14703
  %call35 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1122, i64 0, i64 0)) #7, !dbg !14704
  store %union.tree_node* %call35, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 36), align 16, !dbg !14704
  %call36 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i64 0, i64 0)) #7, !dbg !14705
  store %union.tree_node* %call36, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 37), align 8, !dbg !14705
  %call37 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i64 0, i64 0)) #7, !dbg !14706
  store %union.tree_node* %call37, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 38), align 16, !dbg !14706
  %call38 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1123, i64 0, i64 0)) #7, !dbg !14707
  store %union.tree_node* %call38, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 39), align 8, !dbg !14707
  %call39 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.188, i64 0, i64 0)) #7, !dbg !14708
  store %union.tree_node* %call39, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 40), align 16, !dbg !14708
  %call40 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1124, i64 0, i64 0)) #7, !dbg !14709
  store %union.tree_node* %call40, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 41), align 8, !dbg !14709
  %call41 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1125, i64 0, i64 0)) #7, !dbg !14710
  store %union.tree_node* %call41, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 42), align 16, !dbg !14710
  %call42 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.189, i64 0, i64 0)) #7, !dbg !14711
  store %union.tree_node* %call42, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 43), align 8, !dbg !14711
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 38), align 16, !dbg !14712
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14712
  %call43 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %37, %union.tree_node* %38, %union.tree_node* %38) #7, !dbg !14712
  store %union.tree_node* %call43, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 44), align 16, !dbg !14712
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 31), align 8, !dbg !14713
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14713
  %call44 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %39, %union.tree_node* %40, %union.tree_node* %40) #7, !dbg !14713
  store %union.tree_node* %call44, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14713
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 25), align 8, !dbg !14714
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14714
  %call45 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %41, %union.tree_node* %42, %union.tree_node* %call44) #7, !dbg !14714
  store %union.tree_node* %call45, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !14714
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 37), align 8, !dbg !14715
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14715
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14715
  %call46 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %43, %union.tree_node* %44, %union.tree_node* %45) #7, !dbg !14715
  store %union.tree_node* %call46, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 47), align 8, !dbg !14715
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 38), align 16, !dbg !14716
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14716
  %call47 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %46, %union.tree_node* %47, %union.tree_node* %call46) #7, !dbg !14716
  store %union.tree_node* %call47, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 48), align 16, !dbg !14716
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 30), align 16, !dbg !14717
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14717
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14717
  %call48 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %48, %union.tree_node* %49, %union.tree_node* %50) #7, !dbg !14717
  store %union.tree_node* %call48, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 49), align 8, !dbg !14717
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 28), align 16, !dbg !14718
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14718
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14718
  %call49 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %51, %union.tree_node* %52, %union.tree_node* %53) #7, !dbg !14718
  store %union.tree_node* %call49, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 50), align 16, !dbg !14718
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 40), align 16, !dbg !14719
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14719
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14719
  %call50 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %54, %union.tree_node* %55, %union.tree_node* %56) #7, !dbg !14719
  store %union.tree_node* %call50, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 51), align 8, !dbg !14719
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14720
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14720
  %call51 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %57, %union.tree_node* %58, %union.tree_node* %58) #7, !dbg !14720
  store %union.tree_node* %call51, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 52), align 16, !dbg !14720
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14721
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 4), align 16, !dbg !14721
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14721
  %call52 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %59, %union.tree_node* %60, %union.tree_node* %61) #7, !dbg !14721
  store %union.tree_node* %call52, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 53), align 8, !dbg !14721
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14722
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 6), align 16, !dbg !14722
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14722
  %call53 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %62, %union.tree_node* %63, %union.tree_node* %64) #7, !dbg !14722
  store %union.tree_node* %call53, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 54), align 16, !dbg !14722
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14723
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 8), align 16, !dbg !14723
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14723
  %call54 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %65, %union.tree_node* %66, %union.tree_node* %67) #7, !dbg !14723
  store %union.tree_node* %call54, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 55), align 8, !dbg !14723
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 40), align 16, !dbg !14724
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 4), align 16, !dbg !14724
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14724
  %call55 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %68, %union.tree_node* %69, %union.tree_node* %70) #7, !dbg !14724
  store %union.tree_node* %call55, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 56), align 16, !dbg !14724
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14725
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14725
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14725
  %call56 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %71, %union.tree_node* %72, %union.tree_node* %73) #7, !dbg !14725
  store %union.tree_node* %call56, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !14725
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14726
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 4), align 16, !dbg !14726
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14726
  %call57 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %74, %union.tree_node* %75, %union.tree_node* %76) #7, !dbg !14726
  store %union.tree_node* %call57, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 58), align 16, !dbg !14726
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14727
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 6), align 16, !dbg !14727
  %79 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14727
  %call58 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %77, %union.tree_node* %78, %union.tree_node* %79) #7, !dbg !14727
  store %union.tree_node* %call58, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 59), align 8, !dbg !14727
  %80 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14728
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 8), align 16, !dbg !14728
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14728
  %call59 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %80, %union.tree_node* %81, %union.tree_node* %82) #7, !dbg !14728
  store %union.tree_node* %call59, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 60), align 16, !dbg !14728
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14729
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 10), align 16, !dbg !14729
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14729
  %call60 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %83, %union.tree_node* %84, %union.tree_node* %85) #7, !dbg !14729
  store %union.tree_node* %call60, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 61), align 8, !dbg !14729
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 29), align 8, !dbg !14730
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 12), align 16, !dbg !14730
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 45), align 8, !dbg !14730
  %call61 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %86, %union.tree_node* %87, %union.tree_node* %88) #7, !dbg !14730
  store %union.tree_node* %call61, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 62), align 16, !dbg !14730
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 25), align 8, !dbg !14731
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14731
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !14731
  %call62 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %89, %union.tree_node* %90, %union.tree_node* %91) #7, !dbg !14731
  store %union.tree_node* %call62, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 63), align 8, !dbg !14731
  %92 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 43), align 8, !dbg !14732
  %93 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14732
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 46), align 16, !dbg !14732
  %call63 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %92, %union.tree_node* %93, %union.tree_node* %94) #7, !dbg !14732
  store %union.tree_node* %call63, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 64), align 16, !dbg !14732
  %95 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 37), align 8, !dbg !14733
  %96 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14733
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !14733
  %call64 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %95, %union.tree_node* %96, %union.tree_node* %97) #7, !dbg !14733
  store %union.tree_node* %call64, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 65), align 8, !dbg !14733
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 28), align 16, !dbg !14734
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14734
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 57), align 8, !dbg !14734
  %call65 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %98, %union.tree_node* %99, %union.tree_node* %100) #7, !dbg !14734
  store %union.tree_node* %call65, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 66), align 16, !dbg !14734
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14735
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14735
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 15), align 8, !dbg !14735
  %call66 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %101, %union.tree_node* %102, %union.tree_node* %103) #7, !dbg !14735
  store %union.tree_node* %call66, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 67), align 8, !dbg !14735
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14735
  %105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 53), align 8, !dbg !14735
  %call67 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %104, %union.tree_node* %call66, %union.tree_node* %105) #7, !dbg !14735
  store %union.tree_node* %call67, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 68), align 16, !dbg !14735
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14736
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14736
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 16), align 16, !dbg !14736
  %call68 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %106, %union.tree_node* %107, %union.tree_node* %108) #7, !dbg !14736
  store %union.tree_node* %call68, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 69), align 8, !dbg !14736
  %109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14736
  %110 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 53), align 8, !dbg !14736
  %call69 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %109, %union.tree_node* %call68, %union.tree_node* %110) #7, !dbg !14736
  store %union.tree_node* %call69, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 70), align 16, !dbg !14736
  %111 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14737
  %112 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14737
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 17), align 8, !dbg !14737
  %call70 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %111, %union.tree_node* %112, %union.tree_node* %113) #7, !dbg !14737
  store %union.tree_node* %call70, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 71), align 8, !dbg !14737
  %114 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14737
  %115 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 54), align 16, !dbg !14737
  %call71 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %114, %union.tree_node* %call70, %union.tree_node* %115) #7, !dbg !14737
  store %union.tree_node* %call71, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 72), align 16, !dbg !14737
  %116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14737
  %117 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 71), align 8, !dbg !14737
  %118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 59), align 8, !dbg !14737
  %call72 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %116, %union.tree_node* %117, %union.tree_node* %118) #7, !dbg !14737
  store %union.tree_node* %call72, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 73), align 8, !dbg !14737
  %119 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14738
  %120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14738
  %121 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 18), align 16, !dbg !14738
  %call73 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %119, %union.tree_node* %120, %union.tree_node* %121) #7, !dbg !14738
  store %union.tree_node* %call73, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 74), align 16, !dbg !14738
  %122 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14738
  %123 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 54), align 16, !dbg !14738
  %call74 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %122, %union.tree_node* %call73, %union.tree_node* %123) #7, !dbg !14738
  store %union.tree_node* %call74, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 75), align 8, !dbg !14738
  %124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14738
  %125 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 74), align 16, !dbg !14738
  %126 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 59), align 8, !dbg !14738
  %call75 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %124, %union.tree_node* %125, %union.tree_node* %126) #7, !dbg !14738
  store %union.tree_node* %call75, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 76), align 16, !dbg !14738
  %127 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14739
  %128 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14739
  %129 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 19), align 8, !dbg !14739
  %call76 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %127, %union.tree_node* %128, %union.tree_node* %129) #7, !dbg !14739
  store %union.tree_node* %call76, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 77), align 8, !dbg !14739
  %130 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14739
  %131 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 55), align 8, !dbg !14739
  %call77 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %130, %union.tree_node* %call76, %union.tree_node* %131) #7, !dbg !14739
  store %union.tree_node* %call77, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 78), align 16, !dbg !14739
  %132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14739
  %133 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 77), align 8, !dbg !14739
  %134 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 60), align 16, !dbg !14739
  %call78 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %132, %union.tree_node* %133, %union.tree_node* %134) #7, !dbg !14739
  store %union.tree_node* %call78, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 79), align 8, !dbg !14739
  %135 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14740
  %136 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14740
  %137 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 20), align 16, !dbg !14740
  %call79 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %135, %union.tree_node* %136, %union.tree_node* %137) #7, !dbg !14740
  store %union.tree_node* %call79, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 80), align 16, !dbg !14740
  %138 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14740
  %139 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 55), align 8, !dbg !14740
  %call80 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %138, %union.tree_node* %call79, %union.tree_node* %139) #7, !dbg !14740
  store %union.tree_node* %call80, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 81), align 8, !dbg !14740
  %140 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14740
  %141 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 80), align 16, !dbg !14740
  %142 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 60), align 16, !dbg !14740
  %call81 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %140, %union.tree_node* %141, %union.tree_node* %142) #7, !dbg !14740
  store %union.tree_node* %call81, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 82), align 16, !dbg !14740
  %143 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14741
  %144 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14741
  %145 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 21), align 8, !dbg !14741
  %call82 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %143, %union.tree_node* %144, %union.tree_node* %145) #7, !dbg !14741
  store %union.tree_node* %call82, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 83), align 8, !dbg !14741
  %146 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14741
  %147 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 61), align 8, !dbg !14741
  %call83 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %146, %union.tree_node* %call82, %union.tree_node* %147) #7, !dbg !14741
  store %union.tree_node* %call83, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 84), align 16, !dbg !14741
  %148 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14742
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14742
  %150 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 22), align 16, !dbg !14742
  %call84 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %148, %union.tree_node* %149, %union.tree_node* %150) #7, !dbg !14742
  store %union.tree_node* %call84, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 85), align 8, !dbg !14742
  %151 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14742
  %152 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 61), align 8, !dbg !14742
  %call85 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %151, %union.tree_node* %call84, %union.tree_node* %152) #7, !dbg !14742
  store %union.tree_node* %call85, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 86), align 16, !dbg !14742
  %153 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14743
  %154 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14743
  %155 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 23), align 8, !dbg !14743
  %call86 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %153, %union.tree_node* %154, %union.tree_node* %155) #7, !dbg !14743
  store %union.tree_node* %call86, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 87), align 8, !dbg !14743
  %156 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14743
  %157 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 62), align 16, !dbg !14743
  %call87 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %156, %union.tree_node* %call86, %union.tree_node* %157) #7, !dbg !14743
  store %union.tree_node* %call87, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 88), align 16, !dbg !14743
  %158 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14744
  %159 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 32), align 16, !dbg !14744
  %160 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 24), align 16, !dbg !14744
  %call88 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %158, %union.tree_node* %159, %union.tree_node* %160) #7, !dbg !14744
  store %union.tree_node* %call88, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 89), align 8, !dbg !14744
  %161 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14744
  %162 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 62), align 16, !dbg !14744
  %call89 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %161, %union.tree_node* %call88, %union.tree_node* %162) #7, !dbg !14744
  store %union.tree_node* %call89, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 90), align 16, !dbg !14744
  %163 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14745
  %164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 39), align 8, !dbg !14745
  %165 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 15), align 8, !dbg !14745
  %call90 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %163, %union.tree_node* %164, %union.tree_node* %165) #7, !dbg !14745
  store %union.tree_node* %call90, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 91), align 8, !dbg !14745
  %166 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14745
  %167 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 53), align 8, !dbg !14745
  %call91 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %166, %union.tree_node* %call90, %union.tree_node* %167) #7, !dbg !14745
  store %union.tree_node* %call91, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 92), align 16, !dbg !14745
  %168 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14746
  %169 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 39), align 8, !dbg !14746
  %170 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 16), align 16, !dbg !14746
  %call92 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %168, %union.tree_node* %169, %union.tree_node* %170) #7, !dbg !14746
  store %union.tree_node* %call92, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 93), align 8, !dbg !14746
  %171 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14746
  %172 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 53), align 8, !dbg !14746
  %call93 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %171, %union.tree_node* %call92, %union.tree_node* %172) #7, !dbg !14746
  store %union.tree_node* %call93, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 94), align 16, !dbg !14746
  %173 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14747
  %174 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 39), align 8, !dbg !14747
  %175 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 17), align 8, !dbg !14747
  %call94 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %173, %union.tree_node* %174, %union.tree_node* %175) #7, !dbg !14747
  store %union.tree_node* %call94, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 95), align 8, !dbg !14747
  %176 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14747
  %177 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 54), align 16, !dbg !14747
  %call95 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %176, %union.tree_node* %call94, %union.tree_node* %177) #7, !dbg !14747
  store %union.tree_node* %call95, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 96), align 16, !dbg !14747
  %178 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14747
  %179 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 95), align 8, !dbg !14747
  %180 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 59), align 8, !dbg !14747
  %call96 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %178, %union.tree_node* %179, %union.tree_node* %180) #7, !dbg !14747
  store %union.tree_node* %call96, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 97), align 8, !dbg !14747
  %181 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14748
  %182 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 39), align 8, !dbg !14748
  %183 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 18), align 16, !dbg !14748
  %call97 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %181, %union.tree_node* %182, %union.tree_node* %183) #7, !dbg !14748
  store %union.tree_node* %call97, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 98), align 16, !dbg !14748
  %184 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14748
  %185 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 54), align 16, !dbg !14748
  %call98 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %184, %union.tree_node* %call97, %union.tree_node* %185) #7, !dbg !14748
  store %union.tree_node* %call98, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 99), align 8, !dbg !14748
  %186 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14748
  %187 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 98), align 16, !dbg !14748
  %188 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 59), align 8, !dbg !14748
  %call99 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %186, %union.tree_node* %187, %union.tree_node* %188) #7, !dbg !14748
  store %union.tree_node* %call99, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 100), align 16, !dbg !14748
  %189 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14749
  %190 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 42), align 16, !dbg !14749
  %191 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 19), align 8, !dbg !14749
  %call100 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %189, %union.tree_node* %190, %union.tree_node* %191) #7, !dbg !14749
  store %union.tree_node* %call100, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 101), align 8, !dbg !14749
  %192 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14749
  %193 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 60), align 16, !dbg !14749
  %call101 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %192, %union.tree_node* %call100, %union.tree_node* %193) #7, !dbg !14749
  store %union.tree_node* %call101, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 102), align 16, !dbg !14749
  %194 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 0), align 16, !dbg !14750
  %195 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 41), align 8, !dbg !14750
  %196 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 20), align 16, !dbg !14750
  %call102 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %194, %union.tree_node* %195, %union.tree_node* %196) #7, !dbg !14750
  store %union.tree_node* %call102, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 103), align 8, !dbg !14750
  %197 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 26), align 16, !dbg !14750
  %198 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 60), align 16, !dbg !14750
  %call103 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %197, %union.tree_node* %call102, %union.tree_node* %198) #7, !dbg !14750
  store %union.tree_node* %call103, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 104), align 16, !dbg !14750
  %199 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 27), align 8, !dbg !14751
  %200 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 4), align 16, !dbg !14751
  %201 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 58), align 16, !dbg !14751
  %call104 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %199, %union.tree_node* %200, %union.tree_node* %201) #7, !dbg !14751
  store %union.tree_node* %call104, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 105), align 8, !dbg !14751
  %202 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 27), align 8, !dbg !14752
  %203 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 6), align 16, !dbg !14752
  %204 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 59), align 8, !dbg !14752
  %call105 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %202, %union.tree_node* %203, %union.tree_node* %204) #7, !dbg !14752
  store %union.tree_node* %call105, %union.tree_node** getelementptr inbounds ([107 x %union.tree_node*], [107 x %union.tree_node*]* @built_in_attributes, i64 0, i64 106), align 16, !dbg !14752
  ret void, !dbg !14753
}

; Function Attrs: nounwind uwtable
define internal fastcc void @def_builtin_1(i32 %fncode, i8* %name, i32 %fnclass, %union.tree_node* %fntype, %union.tree_node* %libtype, i8 zeroext %both_p, i8 zeroext %fallback_p, i8 zeroext %nonansi_p, %union.tree_node* %fnattrs, i8 zeroext %implicit_p) unnamed_addr #5 !dbg !14755 {
entry:
  call void @llvm.dbg.value(metadata i32 %fncode, metadata !14759, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i8* %name, metadata !14760, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 3, metadata !14761, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype, metadata !14762, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata %union.tree_node* %libtype, metadata !14763, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i8 %both_p, metadata !14764, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i8 %fallback_p, metadata !14765, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i8 %nonansi_p, metadata !14766, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata %union.tree_node* %fnattrs, metadata !14767, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i8 %implicit_p, metadata !14768, metadata !DIExpression()), !dbg !14771
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !14772
  %cmp = icmp eq %union.tree_node* %0, %fntype, !dbg !14774
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !14775

if.end:                                           ; preds = %entry
  %1 = or i8 %both_p, %fallback_p, !dbg !14776
  %2 = icmp eq i8 %1, 0, !dbg !14776
  br i1 %2, label %cond.end, label %lor.lhs.false, !dbg !14776

lor.lhs.false:                                    ; preds = %if.end
  %call = tail call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0)) #7, !dbg !14776
  %call2 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0), i64 %call) #7, !dbg !14776
  %tobool3 = icmp eq i32 %call2, 0, !dbg !14776
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !14776

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 5193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !14776
  br label %cond.end, !dbg !14776

cond.end:                                         ; preds = %lor.lhs.false, %if.end, %cond.true
  %call4 = tail call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0)) #7, !dbg !14777
  %add.ptr = getelementptr inbounds i8, i8* %name, i64 %call4, !dbg !14778
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !14770, metadata !DIExpression()), !dbg !14771
  %tobool5 = icmp eq i8 %fallback_p, 0, !dbg !14779
  %add.ptr. = select i1 %tobool5, i8* null, i8* %add.ptr, !dbg !14779
  %call10 = tail call %union.tree_node* @add_builtin_function(i8* %name, %union.tree_node* %fntype, i32 %fncode, i32 3, i8* %add.ptr., %union.tree_node* %fnattrs) #7, !dbg !14780
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !14769, metadata !DIExpression()), !dbg !14771
  %tobool12 = icmp eq i8 %both_p, 0, !dbg !14781
  %3 = load i32, i32* @flag_no_builtin, align 4, !dbg !14783
  %tobool14 = icmp ne i32 %3, 0, !dbg !14783
  %or.cond1 = or i1 %tobool12, %tobool14, !dbg !14784
  br i1 %or.cond1, label %if.end25, label %land.lhs.true15, !dbg !14784

land.lhs.true15:                                  ; preds = %cond.end
  %call16 = tail call fastcc zeroext i8 @builtin_function_disabled_p(i8* %add.ptr) #8, !dbg !14785
  %tobool17 = icmp eq i8 %call16, 0, !dbg !14785
  br i1 %tobool17, label %land.lhs.true18, label %if.end25, !dbg !14786

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %tobool20 = icmp ne i8 %nonansi_p, 0, !dbg !14787
  %4 = load i32, i32* @flag_no_nonansi_builtin, align 4, !dbg !14788
  %tobool22 = icmp ne i32 %4, 0, !dbg !14788
  %or.cond2 = and i1 %tobool20, %tobool22, !dbg !14789
  br i1 %or.cond2, label %if.end25, label %if.then23, !dbg !14789

if.then23:                                        ; preds = %land.lhs.true18
  %call24 = tail call %union.tree_node* @add_builtin_function(i8* %add.ptr, %union.tree_node* %libtype, i32 %fncode, i32 3, i8* null, %union.tree_node* %fnattrs) #7, !dbg !14790
  br label %if.end25, !dbg !14790

if.end25:                                         ; preds = %land.lhs.true15, %land.lhs.true18, %cond.end, %if.then23
  %idxprom = sext i32 %fncode to i64, !dbg !14791
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %idxprom, !dbg !14791
  store %union.tree_node* %call10, %union.tree_node** %arrayidx, align 8, !dbg !14792
  %tobool26 = icmp eq i8 %implicit_p, 0, !dbg !14793
  br i1 %tobool26, label %cleanup.cont, label %if.then27, !dbg !14795

if.then27:                                        ; preds = %if.end25
  %arrayidx29 = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 %idxprom, !dbg !14796
  store %union.tree_node* %call10, %union.tree_node** %arrayidx29, align 8, !dbg !14797
  br label %cleanup.cont, !dbg !14796

cleanup.cont:                                     ; preds = %if.end25, %entry, %if.then27
  ret void, !dbg !14798
}

declare dso_local void @build_common_builtin_nodes() local_unnamed_addr #2

declare dso_local void @mudflap_init() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

declare dso_local %union.tree_node* @nreverse(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @add_builtin_function(i8*, %union.tree_node*, i32, i32, i8*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @builtin_function_disabled_p(i8* %name) unnamed_addr #5 !dbg !14799 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !14803, metadata !DIExpression()), !dbg !14805
  br label %for.cond, !dbg !14806

for.cond:                                         ; preds = %for.inc, %entry
  %p.0.in = phi %struct.disabled_builtin** [ @disabled_builtins, %entry ], [ %next, %for.inc ]
  %p.0 = load %struct.disabled_builtin*, %struct.disabled_builtin** %p.0.in, align 8, !dbg !14808
  call void @llvm.dbg.value(metadata %struct.disabled_builtin* %p.0, metadata !14804, metadata !DIExpression()), !dbg !14805
  %cmp = icmp eq %struct.disabled_builtin* %p.0, null, !dbg !14809
  br i1 %cmp, label %cleanup, label %for.body, !dbg !14811

for.body:                                         ; preds = %for.cond
  %name1 = getelementptr inbounds %struct.disabled_builtin, %struct.disabled_builtin* %p.0, i64 0, i32 0, !dbg !14812
  %0 = load i8*, i8** %name1, align 8, !dbg !14812
  %call = tail call i32 @strcmp(i8* %name, i8* %0) #7, !dbg !14815
  %cmp2 = icmp eq i32 %call, 0, !dbg !14816
  br i1 %cmp2, label %cleanup, label %for.inc, !dbg !14817

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.disabled_builtin, %struct.disabled_builtin* %p.0, i64 0, i32 1, !dbg !14818
  br label %for.cond, !dbg !14819, !llvm.loop !14820

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !14805
  ret i8 %retval.0, !dbg !14822
}

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @perform_integral_promotions(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @match_case_to_enum_1(%union.tree_node* %key, %union.tree_node* %type, %union.tree_node* %label) unnamed_addr #5 !dbg !14823 {
entry:
  %buf = alloca [35 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %key, metadata !14825, metadata !DIExpression()), !dbg !14832
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !14826, metadata !DIExpression()), !dbg !14832
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !14827, metadata !DIExpression()), !dbg !14832
  %0 = getelementptr inbounds [35 x i8], [35 x i8]* %buf, i64 0, i64 0, !dbg !14833
  call void @llvm.lifetime.start.p0i8(i64 35, i8* nonnull %0) #6, !dbg !14833
  call void @llvm.dbg.declare(metadata [35 x i8]* %buf, metadata !14828, metadata !DIExpression()), !dbg !14834
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %key, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14835
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !14835
  %1 = bitcast i32* %high to i64*, !dbg !14835
  %2 = load i64, i64* %1, align 8, !dbg !14835
  %cmp = icmp eq i64 %2, 0, !dbg !14837
  br i1 %cmp, label %if.then, label %if.else, !dbg !14838

if.then:                                          ; preds = %entry
  %low = bitcast i32* %int_cst1 to i64*, !dbg !14839
  %3 = load i64, i64* %low, align 8, !dbg !14839
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %0, i64 35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1131, i64 0, i64 0), i64 %3) #7, !dbg !14840
  br label %if.end28, !dbg !14840

if.else:                                          ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14841
  %bf.load = load i64, i64* %4, align 8, !dbg !14841
  %bf.cast1 = and i64 %bf.load, 2097152, !dbg !14841
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !14841
  br i1 %tobool, label %land.lhs.true, label %if.else19, !dbg !14843

land.lhs.true:                                    ; preds = %if.else
  %cmp7 = icmp eq i64 %2, -1, !dbg !14844
  br i1 %cmp7, label %land.lhs.true8, label %if.else19, !dbg !14845

land.lhs.true8:                                   ; preds = %land.lhs.true
  %low11 = bitcast i32* %int_cst1 to i64*, !dbg !14846
  %5 = load i64, i64* %low11, align 8, !dbg !14846
  %cmp12 = icmp eq i64 %5, 0, !dbg !14847
  br i1 %cmp12, label %if.else19, label %if.then13, !dbg !14848

if.then13:                                        ; preds = %land.lhs.true8
  %sub = sub i64 0, %5, !dbg !14849
  %call18 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %0, i64 35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1132, i64 0, i64 0), i64 %sub) #7, !dbg !14850
  br label %if.end28, !dbg !14850

if.else19:                                        ; preds = %land.lhs.true8, %if.else, %land.lhs.true
  %low26 = bitcast i32* %int_cst1 to i64*, !dbg !14851
  %6 = load i64, i64* %low26, align 8, !dbg !14851
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %0, i64 35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1133, i64 0, i64 0), i64 %2, i64 %6) #7, !dbg !14852
  br label %if.end28

if.end28:                                         ; preds = %if.then13, %if.else19, %if.then
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !14853
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !14853
  %cmp30 = icmp eq %union.tree_node* %8, null, !dbg !14855
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14856
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !14856
  %9 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_minimal**, !dbg !14856
  %10 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %9, align 8, !dbg !14856
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %10, i64 0, i32 1, !dbg !14856
  %11 = load i32, i32* %locus, align 8, !dbg !14856
  %12 = load i32, i32* @warn_switch, align 4, !dbg !14856
  %tobool32 = icmp eq i32 %12, 0, !dbg !14856
  %cond = select i1 %tobool32, i32 195, i32 193, !dbg !14856
  br i1 %cmp30, label %if.then31, label %if.else35, !dbg !14857

if.then31:                                        ; preds = %if.end28
  %call34 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %11, i32 %cond, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1134, i64 0, i64 0), i8* nonnull %0) #7, !dbg !14858
  br label %if.end45, !dbg !14858

if.else35:                                        ; preds = %if.end28
  %call44 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %11, i32 %cond, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1135, i64 0, i64 0), i8* nonnull %0, %union.tree_node* %type) #7, !dbg !14859
  br label %if.end45

if.end45:                                         ; preds = %if.else35, %if.then31
  call void @llvm.lifetime.end.p0i8(i64 35, i8* nonnull %0) #6, !dbg !14860
  ret void, !dbg !14860
}

declare dso_local %union.tree_node* @build_duplicate_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i16 @get_priority(%union.tree_node* %args, i8 zeroext %is_destructor) unnamed_addr #5 !dbg !14861 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !14865, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.value(metadata i8 %is_destructor, metadata !14866, metadata !DIExpression()), !dbg !14870
  %tobool = icmp eq %union.tree_node* %args, null, !dbg !14871
  br i1 %tobool, label %cleanup, label %if.end, !dbg !14873

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14874
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !14874
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !14868, metadata !DIExpression()), !dbg !14870
  %call = tail call i32 @host_integerp(%union.tree_node* %1, i32 0) #7, !dbg !14875
  %tobool1 = icmp eq i32 %call, 0, !dbg !14875
  br i1 %tobool1, label %invalid, label %lor.lhs.false, !dbg !14877

lor.lhs.false:                                    ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14878
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !14878
  %3 = load i64*, i64** %2, align 8, !dbg !14878
  %bf.load = load i64, i64* %3, align 8, !dbg !14878
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14878
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !14878
  br i1 %cmp, label %if.end19, label %lor.lhs.false2, !dbg !14878

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i64 %bf.cast1, 7, !dbg !14878
  br i1 %cmp9, label %if.end19, label %lor.lhs.false10, !dbg !14878

lor.lhs.false10:                                  ; preds = %lor.lhs.false2
  %cmp17 = icmp eq i64 %bf.cast1, 8, !dbg !14878
  br i1 %cmp17, label %if.end19, label %invalid, !dbg !14879

if.end19:                                         ; preds = %lor.lhs.false10, %lor.lhs.false2, %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !14880
  %call22 = tail call i64 @tree_low_cst(%union.tree_node* %4, i32 0) #7, !dbg !14881
  call void @llvm.dbg.value(metadata i64 %call22, metadata !14867, metadata !DIExpression()), !dbg !14870
  %5 = icmp ugt i64 %call22, 65535, !dbg !14882
  br i1 %5, label %invalid, label %if.end27, !dbg !14882

if.end27:                                         ; preds = %if.end19
  %cmp28 = icmp slt i64 %call22, 101, !dbg !14884
  br i1 %cmp28, label %if.then29, label %if.end35, !dbg !14886

if.then29:                                        ; preds = %if.end27
  %tobool30 = icmp eq i8 %is_destructor, 0, !dbg !14887
  br i1 %tobool30, label %if.else, label %if.then31, !dbg !14890

if.then31:                                        ; preds = %if.then29
  %call32 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1140, i64 0, i64 0), i32 100) #7, !dbg !14891
  br label %if.end35, !dbg !14891

if.else:                                          ; preds = %if.then29
  %call33 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1141, i64 0, i64 0), i32 100) #7, !dbg !14892
  br label %if.end35

if.end35:                                         ; preds = %if.then31, %if.else, %if.end27
  %conv = trunc i64 %call22 to i16, !dbg !14893
  br label %cleanup, !dbg !14894

invalid:                                          ; preds = %if.end, %if.end19, %lor.lhs.false10
  call void @llvm.dbg.label(metadata !14869), !dbg !14895
  %tobool36 = icmp eq i8 %is_destructor, 0, !dbg !14896
  br i1 %tobool36, label %if.else38, label %if.then37, !dbg !14898

if.then37:                                        ; preds = %invalid
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1142, i64 0, i64 0), i32 65535) #7, !dbg !14899
  br label %cleanup, !dbg !14899

if.else38:                                        ; preds = %invalid
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1143, i64 0, i64 0), i32 65535) #7, !dbg !14900
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.then37, %if.else38, %if.end35
  %retval.0 = phi i16 [ %conv, %if.end35 ], [ -1, %entry ], [ -1, %if.else38 ], [ -1, %if.then37 ], !dbg !14870
  ret i16 %retval.0, !dbg !14901
}

declare dso_local void @decl_init_priority_insert(%union.tree_node*, i16 zeroext) local_unnamed_addr #2

declare dso_local void @decl_fini_priority_insert(%union.tree_node*, i16 zeroext) local_unnamed_addr #2

declare dso_local i8* @strcpy(i8*, i8*) local_unnamed_addr #2

declare dso_local i32 @vector_mode_valid_p(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type_for_mode(%union.tree_node*, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_reference_type_for_mode(%union.tree_node*, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @tree_log2(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @declare_weak(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_attributes(%union.tree_node**, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @type_num_arguments(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector_type(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @get_nonnull_operand(%union.tree_node* %arg_num_expr, i64* %valp) unnamed_addr #5 !dbg !14902 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_num_expr, metadata !14907, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.value(metadata i64* %valp, metadata !14908, metadata !DIExpression()), !dbg !14909
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_num_expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14910
  %bf.load = load i64, i64* %0, align 8, !dbg !14910
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14912
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !14912
  br i1 %cmp, label %lor.lhs.false, label %return, !dbg !14913

lor.lhs.false:                                    ; preds = %entry
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg_num_expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14914
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !14914
  %1 = bitcast i32* %high to i64*, !dbg !14914
  %2 = load i64, i64* %1, align 8, !dbg !14914
  %cmp2 = icmp eq i64 %2, 0, !dbg !14915
  br i1 %cmp2, label %if.end, label %return, !dbg !14916

if.end:                                           ; preds = %lor.lhs.false
  %low = bitcast i32* %int_cst1 to i64*, !dbg !14917
  %3 = load i64, i64* %low, align 8, !dbg !14917
  store i64 %3, i64* %valp, align 8, !dbg !14918
  br label %return, !dbg !14919

return:                                           ; preds = %lor.lhs.false, %entry, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !14909
  ret i8 %retval.0, !dbg !14920
}

declare dso_local %union.tree_node* @lookup_name(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_const_char_p_gc_reserve(%struct.VEC_const_char_p_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !14921 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_const_char_p_gc** @optimize_args, metadata !14925, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata i32 1, metadata !14926, metadata !DIExpression()), !dbg !14928
  %0 = load %struct.VEC_const_char_p_gc*, %struct.VEC_const_char_p_gc** @optimize_args, align 8, !dbg !14929
  %tobool = icmp eq %struct.VEC_const_char_p_gc* %0, null, !dbg !14929
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !14929

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_const_char_p_gc, %struct.VEC_const_char_p_gc* %0, i64 0, i32 0, !dbg !14929
  br label %cond.end, !dbg !14929

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_const_char_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !14929
  %call = tail call fastcc i32 @VEC_const_char_p_base_space(%struct.VEC_const_char_p_base* %cond, i32 1) #8, !dbg !14929
  %tobool1 = icmp eq i32 %call, 0, !dbg !14929
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !14929
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !14927, metadata !DIExpression()), !dbg !14928
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14929

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_const_char_p_gc** @optimize_args to i8**), align 8, !dbg !14930
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %1, i32 1) #7, !dbg !14930
  store i8* %call3, i8** bitcast (%struct.VEC_const_char_p_gc** @optimize_args to i8**), align 8, !dbg !14930
  br label %if.end, !dbg !14930

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !14929
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8** @VEC_const_char_p_base_quick_push(%struct.VEC_const_char_p_base* %vec_, i8* %obj_) unnamed_addr #0 !dbg !14932 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_const_char_p_base* %vec_, metadata !14936, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata i8* %obj_, metadata !14937, metadata !DIExpression()), !dbg !14939
  %num1 = getelementptr inbounds %struct.VEC_const_char_p_base, %struct.VEC_const_char_p_base* %vec_, i64 0, i32 0, !dbg !14940
  %0 = load i32, i32* %num1, align 8, !dbg !14940
  %inc = add i32 %0, 1, !dbg !14940
  store i32 %inc, i32* %num1, align 8, !dbg !14940
  %idxprom = zext i32 %0 to i64, !dbg !14940
  %arrayidx = getelementptr inbounds %struct.VEC_const_char_p_base, %struct.VEC_const_char_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !14940
  call void @llvm.dbg.value(metadata i8** %arrayidx, metadata !14938, metadata !DIExpression()), !dbg !14939
  store i8* %obj_, i8** %arrayidx, align 8, !dbg !14940
  ret i8** %arrayidx, !dbg !14940
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_const_char_p_base_space(%struct.VEC_const_char_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !14941 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_const_char_p_base* %vec_, metadata !14945, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata i32 1, metadata !14946, metadata !DIExpression()), !dbg !14947
  %tobool = icmp eq %struct.VEC_const_char_p_base* %vec_, null, !dbg !14948
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !14948

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_const_char_p_base, %struct.VEC_const_char_p_base* %vec_, i64 0, i32 1, !dbg !14948
  %0 = load i32, i32* %alloc, align 4, !dbg !14948
  %num = getelementptr inbounds %struct.VEC_const_char_p_base, %struct.VEC_const_char_p_base* %vec_, i64 0, i32 0, !dbg !14948
  %1 = load i32, i32* %num, align 8, !dbg !14948
  %cmp1 = icmp ne i32 %0, %1, !dbg !14948
  %phitmp = zext i1 %cmp1 to i32, !dbg !14948
  br label %cond.end, !dbg !14948

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14948

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !14948
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local void @cl_optimization_save(%struct.cl_optimization*) local_unnamed_addr #2

declare dso_local void @cl_optimization_restore(%struct.cl_optimization*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_optimization_node() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @nonnull_check_p(%union.tree_node* %args, i64 %param_num) unnamed_addr #5 !dbg !14949 {
entry:
  %arg_num = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !14953, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata i64 %param_num, metadata !14954, metadata !DIExpression()), !dbg !14960
  %0 = bitcast i64* %arg_num to i8*, !dbg !14961
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !14961
  call void @llvm.dbg.value(metadata i64 0, metadata !14955, metadata !DIExpression()), !dbg !14960
  store i64 0, i64* %arg_num, align 8, !dbg !14962
  br label %for.cond, !dbg !14963

for.cond:                                         ; preds = %for.inc, %entry
  %args.addr.0 = phi %union.tree_node* [ %args, %entry ], [ %4, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %args.addr.0, metadata !14953, metadata !DIExpression()), !dbg !14960
  %tobool = icmp eq %union.tree_node* %args.addr.0, null, !dbg !14964
  br i1 %tobool, label %cleanup2, label %for.body, !dbg !14964

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14965
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !14965
  call void @llvm.dbg.value(metadata i64* %arg_num, metadata !14955, metadata !DIExpression(DW_OP_deref)), !dbg !14960
  %call = call fastcc zeroext i8 @get_nonnull_operand(%union.tree_node* %2, i64* nonnull %arg_num) #8, !dbg !14966
  call void @llvm.dbg.value(metadata i8 %call, metadata !14956, metadata !DIExpression()), !dbg !14967
  %tobool1 = icmp eq i8 %call, 0, !dbg !14968
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !14968

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0), i32 7507, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #7, !dbg !14968
  br label %cond.end, !dbg !14968

cond.end:                                         ; preds = %for.body, %cond.true
  %3 = load i64, i64* %arg_num, align 8, !dbg !14969
  call void @llvm.dbg.value(metadata i64 %3, metadata !14955, metadata !DIExpression()), !dbg !14960
  %cmp = icmp eq i64 %3, %param_num, !dbg !14971
  br i1 %cmp, label %cleanup2, label %for.inc

for.inc:                                          ; preds = %cond.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14972
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !14972
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !14953, metadata !DIExpression()), !dbg !14960
  br label %for.cond, !dbg !14973, !llvm.loop !14974

cleanup2:                                         ; preds = %cond.end, %for.cond
  %retval.2 = phi i8 [ 1, %cond.end ], [ 0, %for.cond ], !dbg !14960
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !14976
  ret i8 %retval.2, !dbg !14976
}

; Function Attrs: nounwind uwtable
define internal void @check_nonnull_arg(i8* %ctx, %union.tree_node* %param, i64 %param_num) #5 !dbg !14977 {
entry:
  call void @llvm.dbg.value(metadata i8* %ctx, metadata !14979, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata %union.tree_node* %param, metadata !14980, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i64 %param_num, metadata !14981, metadata !DIExpression()), !dbg !14982
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %param, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14983
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !14983
  %1 = load i64*, i64** %0, align 8, !dbg !14983
  %bf.load = load i64, i64* %1, align 8, !dbg !14983
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14985
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !14985
  br i1 %cmp, label %if.end, label %if.end3, !dbg !14986

if.end:                                           ; preds = %entry
  %call = tail call i32 @integer_zerop(%union.tree_node* %param) #7, !dbg !14987
  %tobool = icmp eq i32 %call, 0, !dbg !14987
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !14989

if.then1:                                         ; preds = %if.end
  %call2 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 143, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1207, i64 0, i64 0), i64 %param_num) #7, !dbg !14990
  br label %if.end3, !dbg !14990

if.end3:                                          ; preds = %if.end, %entry, %if.then1
  ret void, !dbg !14991
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @init_call_expr_arg_iterator(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !14992 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !14996, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !14997, metadata !DIExpression()), !dbg !14998
  %t = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 0, !dbg !14999
  store %union.tree_node* %exp, %union.tree_node** %t, align 8, !dbg !15000
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !15001
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !15001
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !15001
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !15001
  %2 = load i64, i64* %low, align 8, !dbg !15001
  %conv = trunc i64 %2 to i32, !dbg !15001
  %sub = add nsw i32 %conv, -3, !dbg !15001
  %n = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !15002
  store i32 %sub, i32* %n, align 8, !dbg !15003
  %i = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !15004
  store i32 0, i32* %i, align 4, !dbg !15005
  ret void, !dbg !15006
}

declare dso_local i8* @strncpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @array_ref_up_bound(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !15007 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !15011, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !15012, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !15013, metadata !DIExpression()), !dbg !15015
  %idxprom = zext i32 %ix_ to i64, !dbg !15016
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !15016
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !15016
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !15014, metadata !DIExpression()), !dbg !15015
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !15016
  ret %union.tree_node* %0, !dbg !15016
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_vec_gc_reserve(%struct.VEC_tree_gc_vec_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !15017 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc_vec_gc** @tree_vector_cache, metadata !15021, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.value(metadata i32 1, metadata !15022, metadata !DIExpression()), !dbg !15024
  %0 = load %struct.VEC_tree_gc_vec_gc*, %struct.VEC_tree_gc_vec_gc** @tree_vector_cache, align 8, !dbg !15025
  %tobool = icmp eq %struct.VEC_tree_gc_vec_gc* %0, null, !dbg !15025
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !15025

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc_vec_gc, %struct.VEC_tree_gc_vec_gc* %0, i64 0, i32 0, !dbg !15025
  br label %cond.end, !dbg !15025

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_gc_vec_base* [ %base, %cond.true ], [ null, %entry ], !dbg !15025
  %call = tail call fastcc i32 @VEC_tree_gc_vec_base_space(%struct.VEC_tree_gc_vec_base* %cond, i32 1) #8, !dbg !15025
  %tobool1 = icmp eq i32 %call, 0, !dbg !15025
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !15025
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !15023, metadata !DIExpression()), !dbg !15024
  br i1 %tobool1, label %if.then, label %if.end, !dbg !15025

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_tree_gc_vec_gc** @tree_vector_cache to i8**), align 8, !dbg !15026
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %1, i32 1) #7, !dbg !15026
  store i8* %call3, i8** bitcast (%struct.VEC_tree_gc_vec_gc** @tree_vector_cache to i8**), align 8, !dbg !15026
  br label %if.end, !dbg !15026

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !15025
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc** @VEC_tree_gc_vec_base_quick_push(%struct.VEC_tree_gc_vec_base* %vec_, %struct.VEC_tree_gc* %obj_) unnamed_addr #0 !dbg !15028 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc_vec_base* %vec_, metadata !15032, metadata !DIExpression()), !dbg !15035
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %obj_, metadata !15033, metadata !DIExpression()), !dbg !15035
  %num1 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, %struct.VEC_tree_gc_vec_base* %vec_, i64 0, i32 0, !dbg !15036
  %0 = load i32, i32* %num1, align 8, !dbg !15036
  %inc = add i32 %0, 1, !dbg !15036
  store i32 %inc, i32* %num1, align 8, !dbg !15036
  %idxprom = zext i32 %0 to i64, !dbg !15036
  %arrayidx = getelementptr inbounds %struct.VEC_tree_gc_vec_base, %struct.VEC_tree_gc_vec_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !15036
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %arrayidx, metadata !15034, metadata !DIExpression()), !dbg !15035
  store %struct.VEC_tree_gc* %obj_, %struct.VEC_tree_gc** %arrayidx, align 8, !dbg !15036
  ret %struct.VEC_tree_gc** %arrayidx, !dbg !15036
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_vec_base_space(%struct.VEC_tree_gc_vec_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !15037 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc_vec_base* %vec_, metadata !15041, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata i32 1, metadata !15042, metadata !DIExpression()), !dbg !15043
  %tobool = icmp eq %struct.VEC_tree_gc_vec_base* %vec_, null, !dbg !15044
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !15044

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_gc_vec_base, %struct.VEC_tree_gc_vec_base* %vec_, i64 0, i32 1, !dbg !15044
  %0 = load i32, i32* %alloc, align 4, !dbg !15044
  %num = getelementptr inbounds %struct.VEC_tree_gc_vec_base, %struct.VEC_tree_gc_vec_base* %vec_, i64 0, i32 0, !dbg !15044
  %1 = load i32, i32* %num, align 8, !dbg !15044
  %cmp1 = icmp ne i32 %0, %1, !dbg !15044
  %phitmp = zext i1 %cmp1 to i32, !dbg !15044
  br label %cond.end, !dbg !15044

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15044

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !15044
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !15045 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !15049, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !15050, metadata !DIExpression()), !dbg !15051
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !15052
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !15052

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !15052
  %0 = load i32, i32* %alloc, align 4, !dbg !15052
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !15052
  %1 = load i32, i32* %num, align 8, !dbg !15052
  %sub = sub i32 %0, %1, !dbg !15052
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !15052
  br label %cond.end, !dbg !15052

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !15052
  br label %cond.end, !dbg !15052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !15052
  ret i32 %cond, !dbg !15052
}

; Function Attrs: nounwind uwtable
define internal void @gt_pch_pa_ridpointers(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !15053 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !15055, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !15056, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !15057, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !15058, metadata !DIExpression()), !dbg !15062
  %0 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !15063
  %cmp = icmp eq %union.tree_node** %0, null, !dbg !15064
  br i1 %cmp, label %if.end7, label %for.cond.preheader, !dbg !15065

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !15066

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !15068
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !15059, metadata !DIExpression()), !dbg !15069
  %cmp1 = icmp eq i64 %i0.0, 152, !dbg !15070
  br i1 %cmp1, label %for.end, label %for.body, !dbg !15066

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** bitcast (%union.tree_node*** @ridpointers to i8**), align 8, !dbg !15072
  %cmp2 = icmp eq i8* %1, %this_obj, !dbg !15075
  br i1 %cmp2, label %if.then3, label %for.inc, !dbg !15076

if.then3:                                         ; preds = %for.body
  %2 = bitcast i8* %1 to %union.tree_node**, !dbg !15076
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %i0.0, !dbg !15077
  %3 = bitcast %union.tree_node** %arrayidx to i8*, !dbg !15078
  tail call void %op(i8* %3, i8* %cookie) #7, !dbg !15079
  br label %for.inc, !dbg !15079

for.inc:                                          ; preds = %for.body, %if.then3
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !15080
  call void @llvm.dbg.value(metadata i64 %inc, metadata !15059, metadata !DIExpression()), !dbg !15069
  br label %for.cond, !dbg !15081, !llvm.loop !15082

for.end:                                          ; preds = %for.cond
  %cmp4 = icmp eq i8* %this_obj, bitcast (%union.tree_node*** @ridpointers to i8*), !dbg !15084
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !15086

if.then5:                                         ; preds = %for.end
  tail call void %op(i8* bitcast (%union.tree_node*** @ridpointers to i8*), i8* %cookie) #7, !dbg !15087
  br label %if.end7, !dbg !15087

if.end7:                                          ; preds = %entry, %for.end, %if.then5
  ret void, !dbg !15088
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3116, !3117, !3118}
!llvm.ident = !{!3119}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "flag_signed_bitfields", scope: !2, file: !3, line: 239, type: !1520, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1517, globals: !2861, nameTableKind: None)
!3 = !DIFile(filename: "c-common.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !11, !139, !334, !340, !345, !350, !368, !375, !382, !404, !485, !501, !508, !1228, !1241, !1495, !1501, !1507}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cxx_dialect", file: !6, line: 689, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./c-common.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "cxx98", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "cxx0x", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !12, line: 7, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138}
!14 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!20 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!21 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!22 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!23 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!24 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!25 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!26 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!27 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!28 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!29 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!30 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!31 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!32 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!33 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!34 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!35 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!36 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!37 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!38 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!39 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!40 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!41 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!42 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!43 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!44 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!45 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!46 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!47 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!48 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!49 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!50 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!51 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!52 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!53 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!54 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!55 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!56 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!57 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!58 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!59 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!60 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!61 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!62 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!63 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!64 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!65 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!66 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!67 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!68 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!69 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!70 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!71 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!72 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!73 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!74 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!75 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!76 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!77 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!78 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!79 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!80 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!81 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!82 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!83 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!84 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!85 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!86 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!87 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!88 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!89 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!90 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!91 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!92 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!93 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!94 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!95 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!96 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!97 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!98 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!99 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!100 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!101 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!102 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!104 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!105 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!106 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!107 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!108 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!109 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!110 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!111 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!112 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!113 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!114 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!115 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!116 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!117 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!118 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!119 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!120 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!121 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!122 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!123 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!124 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!125 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!126 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!127 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!128 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!137 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!138 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !140, line: 39, baseType: !7, size: 32, elements: !141)
!140 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!141 = !{!142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333}
!142 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!146 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!147 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!148 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!149 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!150 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!151 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!152 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!153 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!154 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!155 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!156 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!157 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!158 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!159 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!160 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!161 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!162 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!163 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!164 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!165 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!166 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!167 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!168 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!169 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!170 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!171 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!172 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!173 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!174 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!175 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!176 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!177 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!178 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!179 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!180 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!181 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!182 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!183 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!184 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!185 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!186 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!187 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!188 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!189 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!190 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!191 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!192 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!193 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!194 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!195 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!196 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!197 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!198 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!199 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!200 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!201 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!202 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!203 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!204 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!205 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!206 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!207 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!209 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!210 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!211 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!212 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!213 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!214 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!216 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!217 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!218 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!219 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!220 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!221 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!222 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!223 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!224 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!225 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!226 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!227 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!228 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!229 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!230 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!231 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!232 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!234 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!235 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!236 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!237 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!238 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!239 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!240 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!241 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!242 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!243 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!244 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!245 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!246 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!247 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!248 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!249 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!250 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!251 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!252 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!253 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!254 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!255 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!256 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!257 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!258 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!259 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!260 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!261 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!262 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!263 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!264 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!265 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!266 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!267 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!268 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!269 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!270 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!271 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!272 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!273 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!274 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!275 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!276 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!277 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!278 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!279 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!280 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!281 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!282 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!283 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!284 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!285 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!286 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!287 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!288 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!289 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!290 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!291 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!292 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!293 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!294 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!306 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!307 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!308 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!309 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!310 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!311 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!327 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!328 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!329 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!330 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!331 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!332 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!333 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !335, line: 363, baseType: !7, size: 32, elements: !336)
!335 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!336 = !{!337, !338, !339}
!337 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!338 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!339 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !335, line: 355, baseType: !7, size: 32, elements: !341)
!341 = !{!342, !343, !344}
!342 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!343 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!344 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !346, line: 474, baseType: !7, size: 32, elements: !347)
!346 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!347 = !{!348, !349}
!348 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!349 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !140, line: 280, baseType: !7, size: 32, elements: !351)
!351 = !{!352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!352 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !140, line: 1817, baseType: !7, size: 32, elements: !369)
!369 = !{!370, !371, !372, !373, !374}
!370 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!375 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !140, line: 1805, baseType: !7, size: 32, elements: !376)
!376 = !{!377, !378, !379, !380, !381}
!377 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !383, line: 36, baseType: !7, size: 32, elements: !384)
!383 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!384 = !{!385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403}
!385 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!388 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!389 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!390 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!391 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!392 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!393 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!394 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!395 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!396 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!397 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!398 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!399 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!400 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!401 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!402 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!403 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!404 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cpp_ttype", file: !405, line: 143, baseType: !7, size: 32, elements: !406)
!405 = !DIFile(filename: "./cpplib.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!406 = !{!407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!407 = !DIEnumerator(name: "CPP_EQ", value: 0, isUnsigned: true)
!408 = !DIEnumerator(name: "CPP_NOT", value: 1, isUnsigned: true)
!409 = !DIEnumerator(name: "CPP_GREATER", value: 2, isUnsigned: true)
!410 = !DIEnumerator(name: "CPP_LESS", value: 3, isUnsigned: true)
!411 = !DIEnumerator(name: "CPP_PLUS", value: 4, isUnsigned: true)
!412 = !DIEnumerator(name: "CPP_MINUS", value: 5, isUnsigned: true)
!413 = !DIEnumerator(name: "CPP_MULT", value: 6, isUnsigned: true)
!414 = !DIEnumerator(name: "CPP_DIV", value: 7, isUnsigned: true)
!415 = !DIEnumerator(name: "CPP_MOD", value: 8, isUnsigned: true)
!416 = !DIEnumerator(name: "CPP_AND", value: 9, isUnsigned: true)
!417 = !DIEnumerator(name: "CPP_OR", value: 10, isUnsigned: true)
!418 = !DIEnumerator(name: "CPP_XOR", value: 11, isUnsigned: true)
!419 = !DIEnumerator(name: "CPP_RSHIFT", value: 12, isUnsigned: true)
!420 = !DIEnumerator(name: "CPP_LSHIFT", value: 13, isUnsigned: true)
!421 = !DIEnumerator(name: "CPP_COMPL", value: 14, isUnsigned: true)
!422 = !DIEnumerator(name: "CPP_AND_AND", value: 15, isUnsigned: true)
!423 = !DIEnumerator(name: "CPP_OR_OR", value: 16, isUnsigned: true)
!424 = !DIEnumerator(name: "CPP_QUERY", value: 17, isUnsigned: true)
!425 = !DIEnumerator(name: "CPP_COLON", value: 18, isUnsigned: true)
!426 = !DIEnumerator(name: "CPP_COMMA", value: 19, isUnsigned: true)
!427 = !DIEnumerator(name: "CPP_OPEN_PAREN", value: 20, isUnsigned: true)
!428 = !DIEnumerator(name: "CPP_CLOSE_PAREN", value: 21, isUnsigned: true)
!429 = !DIEnumerator(name: "CPP_EOF", value: 22, isUnsigned: true)
!430 = !DIEnumerator(name: "CPP_EQ_EQ", value: 23, isUnsigned: true)
!431 = !DIEnumerator(name: "CPP_NOT_EQ", value: 24, isUnsigned: true)
!432 = !DIEnumerator(name: "CPP_GREATER_EQ", value: 25, isUnsigned: true)
!433 = !DIEnumerator(name: "CPP_LESS_EQ", value: 26, isUnsigned: true)
!434 = !DIEnumerator(name: "CPP_PLUS_EQ", value: 27, isUnsigned: true)
!435 = !DIEnumerator(name: "CPP_MINUS_EQ", value: 28, isUnsigned: true)
!436 = !DIEnumerator(name: "CPP_MULT_EQ", value: 29, isUnsigned: true)
!437 = !DIEnumerator(name: "CPP_DIV_EQ", value: 30, isUnsigned: true)
!438 = !DIEnumerator(name: "CPP_MOD_EQ", value: 31, isUnsigned: true)
!439 = !DIEnumerator(name: "CPP_AND_EQ", value: 32, isUnsigned: true)
!440 = !DIEnumerator(name: "CPP_OR_EQ", value: 33, isUnsigned: true)
!441 = !DIEnumerator(name: "CPP_XOR_EQ", value: 34, isUnsigned: true)
!442 = !DIEnumerator(name: "CPP_RSHIFT_EQ", value: 35, isUnsigned: true)
!443 = !DIEnumerator(name: "CPP_LSHIFT_EQ", value: 36, isUnsigned: true)
!444 = !DIEnumerator(name: "CPP_HASH", value: 37, isUnsigned: true)
!445 = !DIEnumerator(name: "CPP_PASTE", value: 38, isUnsigned: true)
!446 = !DIEnumerator(name: "CPP_OPEN_SQUARE", value: 39, isUnsigned: true)
!447 = !DIEnumerator(name: "CPP_CLOSE_SQUARE", value: 40, isUnsigned: true)
!448 = !DIEnumerator(name: "CPP_OPEN_BRACE", value: 41, isUnsigned: true)
!449 = !DIEnumerator(name: "CPP_CLOSE_BRACE", value: 42, isUnsigned: true)
!450 = !DIEnumerator(name: "CPP_SEMICOLON", value: 43, isUnsigned: true)
!451 = !DIEnumerator(name: "CPP_ELLIPSIS", value: 44, isUnsigned: true)
!452 = !DIEnumerator(name: "CPP_PLUS_PLUS", value: 45, isUnsigned: true)
!453 = !DIEnumerator(name: "CPP_MINUS_MINUS", value: 46, isUnsigned: true)
!454 = !DIEnumerator(name: "CPP_DEREF", value: 47, isUnsigned: true)
!455 = !DIEnumerator(name: "CPP_DOT", value: 48, isUnsigned: true)
!456 = !DIEnumerator(name: "CPP_SCOPE", value: 49, isUnsigned: true)
!457 = !DIEnumerator(name: "CPP_DEREF_STAR", value: 50, isUnsigned: true)
!458 = !DIEnumerator(name: "CPP_DOT_STAR", value: 51, isUnsigned: true)
!459 = !DIEnumerator(name: "CPP_ATSIGN", value: 52, isUnsigned: true)
!460 = !DIEnumerator(name: "CPP_NAME", value: 53, isUnsigned: true)
!461 = !DIEnumerator(name: "CPP_AT_NAME", value: 54, isUnsigned: true)
!462 = !DIEnumerator(name: "CPP_NUMBER", value: 55, isUnsigned: true)
!463 = !DIEnumerator(name: "CPP_CHAR", value: 56, isUnsigned: true)
!464 = !DIEnumerator(name: "CPP_WCHAR", value: 57, isUnsigned: true)
!465 = !DIEnumerator(name: "CPP_CHAR16", value: 58, isUnsigned: true)
!466 = !DIEnumerator(name: "CPP_CHAR32", value: 59, isUnsigned: true)
!467 = !DIEnumerator(name: "CPP_OTHER", value: 60, isUnsigned: true)
!468 = !DIEnumerator(name: "CPP_STRING", value: 61, isUnsigned: true)
!469 = !DIEnumerator(name: "CPP_WSTRING", value: 62, isUnsigned: true)
!470 = !DIEnumerator(name: "CPP_STRING16", value: 63, isUnsigned: true)
!471 = !DIEnumerator(name: "CPP_STRING32", value: 64, isUnsigned: true)
!472 = !DIEnumerator(name: "CPP_UTF8STRING", value: 65, isUnsigned: true)
!473 = !DIEnumerator(name: "CPP_OBJC_STRING", value: 66, isUnsigned: true)
!474 = !DIEnumerator(name: "CPP_HEADER_NAME", value: 67, isUnsigned: true)
!475 = !DIEnumerator(name: "CPP_COMMENT", value: 68, isUnsigned: true)
!476 = !DIEnumerator(name: "CPP_MACRO_ARG", value: 69, isUnsigned: true)
!477 = !DIEnumerator(name: "CPP_PRAGMA", value: 70, isUnsigned: true)
!478 = !DIEnumerator(name: "CPP_PRAGMA_EOL", value: 71, isUnsigned: true)
!479 = !DIEnumerator(name: "CPP_PADDING", value: 72, isUnsigned: true)
!480 = !DIEnumerator(name: "N_TTYPES", value: 73, isUnsigned: true)
!481 = !DIEnumerator(name: "CPP_LAST_EQ", value: 13, isUnsigned: true)
!482 = !DIEnumerator(name: "CPP_FIRST_DIGRAPH", value: 37, isUnsigned: true)
!483 = !DIEnumerator(name: "CPP_LAST_PUNCTUATOR", value: 52, isUnsigned: true)
!484 = !DIEnumerator(name: "CPP_LAST_CPP_OP", value: 26, isUnsigned: true)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !486, line: 29, baseType: !7, size: 32, elements: !487)
!486 = !DIFile(filename: "./diagnostic.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500}
!488 = !DIEnumerator(name: "DK_UNSPECIFIED", value: 0, isUnsigned: true)
!489 = !DIEnumerator(name: "DK_IGNORED", value: 1, isUnsigned: true)
!490 = !DIEnumerator(name: "DK_FATAL", value: 2, isUnsigned: true)
!491 = !DIEnumerator(name: "DK_ICE", value: 3, isUnsigned: true)
!492 = !DIEnumerator(name: "DK_ERROR", value: 4, isUnsigned: true)
!493 = !DIEnumerator(name: "DK_SORRY", value: 5, isUnsigned: true)
!494 = !DIEnumerator(name: "DK_WARNING", value: 6, isUnsigned: true)
!495 = !DIEnumerator(name: "DK_ANACHRONISM", value: 7, isUnsigned: true)
!496 = !DIEnumerator(name: "DK_NOTE", value: 8, isUnsigned: true)
!497 = !DIEnumerator(name: "DK_DEBUG", value: 9, isUnsigned: true)
!498 = !DIEnumerator(name: "DK_PEDWARN", value: 10, isUnsigned: true)
!499 = !DIEnumerator(name: "DK_PERMERROR", value: 11, isUnsigned: true)
!500 = !DIEnumerator(name: "DK_LAST_DIAGNOSTIC_KIND", value: 12, isUnsigned: true)
!501 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lvalue_use", file: !6, line: 1034, baseType: !7, size: 32, elements: !502)
!502 = !{!503, !504, !505, !506, !507}
!503 = !DIEnumerator(name: "lv_assign", value: 0, isUnsigned: true)
!504 = !DIEnumerator(name: "lv_increment", value: 1, isUnsigned: true)
!505 = !DIEnumerator(name: "lv_decrement", value: 2, isUnsigned: true)
!506 = !DIEnumerator(name: "lv_addressof", value: 3, isUnsigned: true)
!507 = !DIEnumerator(name: "lv_asm", value: 4, isUnsigned: true)
!508 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "built_in_function", file: !140, line: 220, baseType: !7, size: 32, elements: !509)
!509 = !{!510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227}
!510 = !DIEnumerator(name: "BUILT_IN_ACOS", value: 0, isUnsigned: true)
!511 = !DIEnumerator(name: "BUILT_IN_ACOSF", value: 1, isUnsigned: true)
!512 = !DIEnumerator(name: "BUILT_IN_ACOSH", value: 2, isUnsigned: true)
!513 = !DIEnumerator(name: "BUILT_IN_ACOSHF", value: 3, isUnsigned: true)
!514 = !DIEnumerator(name: "BUILT_IN_ACOSHL", value: 4, isUnsigned: true)
!515 = !DIEnumerator(name: "BUILT_IN_ACOSL", value: 5, isUnsigned: true)
!516 = !DIEnumerator(name: "BUILT_IN_ASIN", value: 6, isUnsigned: true)
!517 = !DIEnumerator(name: "BUILT_IN_ASINF", value: 7, isUnsigned: true)
!518 = !DIEnumerator(name: "BUILT_IN_ASINH", value: 8, isUnsigned: true)
!519 = !DIEnumerator(name: "BUILT_IN_ASINHF", value: 9, isUnsigned: true)
!520 = !DIEnumerator(name: "BUILT_IN_ASINHL", value: 10, isUnsigned: true)
!521 = !DIEnumerator(name: "BUILT_IN_ASINL", value: 11, isUnsigned: true)
!522 = !DIEnumerator(name: "BUILT_IN_ATAN", value: 12, isUnsigned: true)
!523 = !DIEnumerator(name: "BUILT_IN_ATAN2", value: 13, isUnsigned: true)
!524 = !DIEnumerator(name: "BUILT_IN_ATAN2F", value: 14, isUnsigned: true)
!525 = !DIEnumerator(name: "BUILT_IN_ATAN2L", value: 15, isUnsigned: true)
!526 = !DIEnumerator(name: "BUILT_IN_ATANF", value: 16, isUnsigned: true)
!527 = !DIEnumerator(name: "BUILT_IN_ATANH", value: 17, isUnsigned: true)
!528 = !DIEnumerator(name: "BUILT_IN_ATANHF", value: 18, isUnsigned: true)
!529 = !DIEnumerator(name: "BUILT_IN_ATANHL", value: 19, isUnsigned: true)
!530 = !DIEnumerator(name: "BUILT_IN_ATANL", value: 20, isUnsigned: true)
!531 = !DIEnumerator(name: "BUILT_IN_CBRT", value: 21, isUnsigned: true)
!532 = !DIEnumerator(name: "BUILT_IN_CBRTF", value: 22, isUnsigned: true)
!533 = !DIEnumerator(name: "BUILT_IN_CBRTL", value: 23, isUnsigned: true)
!534 = !DIEnumerator(name: "BUILT_IN_CEIL", value: 24, isUnsigned: true)
!535 = !DIEnumerator(name: "BUILT_IN_CEILF", value: 25, isUnsigned: true)
!536 = !DIEnumerator(name: "BUILT_IN_CEILL", value: 26, isUnsigned: true)
!537 = !DIEnumerator(name: "BUILT_IN_COPYSIGN", value: 27, isUnsigned: true)
!538 = !DIEnumerator(name: "BUILT_IN_COPYSIGNF", value: 28, isUnsigned: true)
!539 = !DIEnumerator(name: "BUILT_IN_COPYSIGNL", value: 29, isUnsigned: true)
!540 = !DIEnumerator(name: "BUILT_IN_COS", value: 30, isUnsigned: true)
!541 = !DIEnumerator(name: "BUILT_IN_COSF", value: 31, isUnsigned: true)
!542 = !DIEnumerator(name: "BUILT_IN_COSH", value: 32, isUnsigned: true)
!543 = !DIEnumerator(name: "BUILT_IN_COSHF", value: 33, isUnsigned: true)
!544 = !DIEnumerator(name: "BUILT_IN_COSHL", value: 34, isUnsigned: true)
!545 = !DIEnumerator(name: "BUILT_IN_COSL", value: 35, isUnsigned: true)
!546 = !DIEnumerator(name: "BUILT_IN_DREM", value: 36, isUnsigned: true)
!547 = !DIEnumerator(name: "BUILT_IN_DREMF", value: 37, isUnsigned: true)
!548 = !DIEnumerator(name: "BUILT_IN_DREML", value: 38, isUnsigned: true)
!549 = !DIEnumerator(name: "BUILT_IN_ERF", value: 39, isUnsigned: true)
!550 = !DIEnumerator(name: "BUILT_IN_ERFC", value: 40, isUnsigned: true)
!551 = !DIEnumerator(name: "BUILT_IN_ERFCF", value: 41, isUnsigned: true)
!552 = !DIEnumerator(name: "BUILT_IN_ERFCL", value: 42, isUnsigned: true)
!553 = !DIEnumerator(name: "BUILT_IN_ERFF", value: 43, isUnsigned: true)
!554 = !DIEnumerator(name: "BUILT_IN_ERFL", value: 44, isUnsigned: true)
!555 = !DIEnumerator(name: "BUILT_IN_EXP", value: 45, isUnsigned: true)
!556 = !DIEnumerator(name: "BUILT_IN_EXP10", value: 46, isUnsigned: true)
!557 = !DIEnumerator(name: "BUILT_IN_EXP10F", value: 47, isUnsigned: true)
!558 = !DIEnumerator(name: "BUILT_IN_EXP10L", value: 48, isUnsigned: true)
!559 = !DIEnumerator(name: "BUILT_IN_EXP2", value: 49, isUnsigned: true)
!560 = !DIEnumerator(name: "BUILT_IN_EXP2F", value: 50, isUnsigned: true)
!561 = !DIEnumerator(name: "BUILT_IN_EXP2L", value: 51, isUnsigned: true)
!562 = !DIEnumerator(name: "BUILT_IN_EXPF", value: 52, isUnsigned: true)
!563 = !DIEnumerator(name: "BUILT_IN_EXPL", value: 53, isUnsigned: true)
!564 = !DIEnumerator(name: "BUILT_IN_EXPM1", value: 54, isUnsigned: true)
!565 = !DIEnumerator(name: "BUILT_IN_EXPM1F", value: 55, isUnsigned: true)
!566 = !DIEnumerator(name: "BUILT_IN_EXPM1L", value: 56, isUnsigned: true)
!567 = !DIEnumerator(name: "BUILT_IN_FABS", value: 57, isUnsigned: true)
!568 = !DIEnumerator(name: "BUILT_IN_FABSF", value: 58, isUnsigned: true)
!569 = !DIEnumerator(name: "BUILT_IN_FABSL", value: 59, isUnsigned: true)
!570 = !DIEnumerator(name: "BUILT_IN_FDIM", value: 60, isUnsigned: true)
!571 = !DIEnumerator(name: "BUILT_IN_FDIMF", value: 61, isUnsigned: true)
!572 = !DIEnumerator(name: "BUILT_IN_FDIML", value: 62, isUnsigned: true)
!573 = !DIEnumerator(name: "BUILT_IN_FLOOR", value: 63, isUnsigned: true)
!574 = !DIEnumerator(name: "BUILT_IN_FLOORF", value: 64, isUnsigned: true)
!575 = !DIEnumerator(name: "BUILT_IN_FLOORL", value: 65, isUnsigned: true)
!576 = !DIEnumerator(name: "BUILT_IN_FMA", value: 66, isUnsigned: true)
!577 = !DIEnumerator(name: "BUILT_IN_FMAF", value: 67, isUnsigned: true)
!578 = !DIEnumerator(name: "BUILT_IN_FMAL", value: 68, isUnsigned: true)
!579 = !DIEnumerator(name: "BUILT_IN_FMAX", value: 69, isUnsigned: true)
!580 = !DIEnumerator(name: "BUILT_IN_FMAXF", value: 70, isUnsigned: true)
!581 = !DIEnumerator(name: "BUILT_IN_FMAXL", value: 71, isUnsigned: true)
!582 = !DIEnumerator(name: "BUILT_IN_FMIN", value: 72, isUnsigned: true)
!583 = !DIEnumerator(name: "BUILT_IN_FMINF", value: 73, isUnsigned: true)
!584 = !DIEnumerator(name: "BUILT_IN_FMINL", value: 74, isUnsigned: true)
!585 = !DIEnumerator(name: "BUILT_IN_FMOD", value: 75, isUnsigned: true)
!586 = !DIEnumerator(name: "BUILT_IN_FMODF", value: 76, isUnsigned: true)
!587 = !DIEnumerator(name: "BUILT_IN_FMODL", value: 77, isUnsigned: true)
!588 = !DIEnumerator(name: "BUILT_IN_FREXP", value: 78, isUnsigned: true)
!589 = !DIEnumerator(name: "BUILT_IN_FREXPF", value: 79, isUnsigned: true)
!590 = !DIEnumerator(name: "BUILT_IN_FREXPL", value: 80, isUnsigned: true)
!591 = !DIEnumerator(name: "BUILT_IN_GAMMA", value: 81, isUnsigned: true)
!592 = !DIEnumerator(name: "BUILT_IN_GAMMAF", value: 82, isUnsigned: true)
!593 = !DIEnumerator(name: "BUILT_IN_GAMMAL", value: 83, isUnsigned: true)
!594 = !DIEnumerator(name: "BUILT_IN_GAMMA_R", value: 84, isUnsigned: true)
!595 = !DIEnumerator(name: "BUILT_IN_GAMMAF_R", value: 85, isUnsigned: true)
!596 = !DIEnumerator(name: "BUILT_IN_GAMMAL_R", value: 86, isUnsigned: true)
!597 = !DIEnumerator(name: "BUILT_IN_HUGE_VAL", value: 87, isUnsigned: true)
!598 = !DIEnumerator(name: "BUILT_IN_HUGE_VALF", value: 88, isUnsigned: true)
!599 = !DIEnumerator(name: "BUILT_IN_HUGE_VALL", value: 89, isUnsigned: true)
!600 = !DIEnumerator(name: "BUILT_IN_HYPOT", value: 90, isUnsigned: true)
!601 = !DIEnumerator(name: "BUILT_IN_HYPOTF", value: 91, isUnsigned: true)
!602 = !DIEnumerator(name: "BUILT_IN_HYPOTL", value: 92, isUnsigned: true)
!603 = !DIEnumerator(name: "BUILT_IN_ILOGB", value: 93, isUnsigned: true)
!604 = !DIEnumerator(name: "BUILT_IN_ILOGBF", value: 94, isUnsigned: true)
!605 = !DIEnumerator(name: "BUILT_IN_ILOGBL", value: 95, isUnsigned: true)
!606 = !DIEnumerator(name: "BUILT_IN_INF", value: 96, isUnsigned: true)
!607 = !DIEnumerator(name: "BUILT_IN_INFF", value: 97, isUnsigned: true)
!608 = !DIEnumerator(name: "BUILT_IN_INFL", value: 98, isUnsigned: true)
!609 = !DIEnumerator(name: "BUILT_IN_INFD32", value: 99, isUnsigned: true)
!610 = !DIEnumerator(name: "BUILT_IN_INFD64", value: 100, isUnsigned: true)
!611 = !DIEnumerator(name: "BUILT_IN_INFD128", value: 101, isUnsigned: true)
!612 = !DIEnumerator(name: "BUILT_IN_J0", value: 102, isUnsigned: true)
!613 = !DIEnumerator(name: "BUILT_IN_J0F", value: 103, isUnsigned: true)
!614 = !DIEnumerator(name: "BUILT_IN_J0L", value: 104, isUnsigned: true)
!615 = !DIEnumerator(name: "BUILT_IN_J1", value: 105, isUnsigned: true)
!616 = !DIEnumerator(name: "BUILT_IN_J1F", value: 106, isUnsigned: true)
!617 = !DIEnumerator(name: "BUILT_IN_J1L", value: 107, isUnsigned: true)
!618 = !DIEnumerator(name: "BUILT_IN_JN", value: 108, isUnsigned: true)
!619 = !DIEnumerator(name: "BUILT_IN_JNF", value: 109, isUnsigned: true)
!620 = !DIEnumerator(name: "BUILT_IN_JNL", value: 110, isUnsigned: true)
!621 = !DIEnumerator(name: "BUILT_IN_LCEIL", value: 111, isUnsigned: true)
!622 = !DIEnumerator(name: "BUILT_IN_LCEILF", value: 112, isUnsigned: true)
!623 = !DIEnumerator(name: "BUILT_IN_LCEILL", value: 113, isUnsigned: true)
!624 = !DIEnumerator(name: "BUILT_IN_LDEXP", value: 114, isUnsigned: true)
!625 = !DIEnumerator(name: "BUILT_IN_LDEXPF", value: 115, isUnsigned: true)
!626 = !DIEnumerator(name: "BUILT_IN_LDEXPL", value: 116, isUnsigned: true)
!627 = !DIEnumerator(name: "BUILT_IN_LFLOOR", value: 117, isUnsigned: true)
!628 = !DIEnumerator(name: "BUILT_IN_LFLOORF", value: 118, isUnsigned: true)
!629 = !DIEnumerator(name: "BUILT_IN_LFLOORL", value: 119, isUnsigned: true)
!630 = !DIEnumerator(name: "BUILT_IN_LGAMMA", value: 120, isUnsigned: true)
!631 = !DIEnumerator(name: "BUILT_IN_LGAMMAF", value: 121, isUnsigned: true)
!632 = !DIEnumerator(name: "BUILT_IN_LGAMMAL", value: 122, isUnsigned: true)
!633 = !DIEnumerator(name: "BUILT_IN_LGAMMA_R", value: 123, isUnsigned: true)
!634 = !DIEnumerator(name: "BUILT_IN_LGAMMAF_R", value: 124, isUnsigned: true)
!635 = !DIEnumerator(name: "BUILT_IN_LGAMMAL_R", value: 125, isUnsigned: true)
!636 = !DIEnumerator(name: "BUILT_IN_LLCEIL", value: 126, isUnsigned: true)
!637 = !DIEnumerator(name: "BUILT_IN_LLCEILF", value: 127, isUnsigned: true)
!638 = !DIEnumerator(name: "BUILT_IN_LLCEILL", value: 128, isUnsigned: true)
!639 = !DIEnumerator(name: "BUILT_IN_LLFLOOR", value: 129, isUnsigned: true)
!640 = !DIEnumerator(name: "BUILT_IN_LLFLOORF", value: 130, isUnsigned: true)
!641 = !DIEnumerator(name: "BUILT_IN_LLFLOORL", value: 131, isUnsigned: true)
!642 = !DIEnumerator(name: "BUILT_IN_LLRINT", value: 132, isUnsigned: true)
!643 = !DIEnumerator(name: "BUILT_IN_LLRINTF", value: 133, isUnsigned: true)
!644 = !DIEnumerator(name: "BUILT_IN_LLRINTL", value: 134, isUnsigned: true)
!645 = !DIEnumerator(name: "BUILT_IN_LLROUND", value: 135, isUnsigned: true)
!646 = !DIEnumerator(name: "BUILT_IN_LLROUNDF", value: 136, isUnsigned: true)
!647 = !DIEnumerator(name: "BUILT_IN_LLROUNDL", value: 137, isUnsigned: true)
!648 = !DIEnumerator(name: "BUILT_IN_LOG", value: 138, isUnsigned: true)
!649 = !DIEnumerator(name: "BUILT_IN_LOG10", value: 139, isUnsigned: true)
!650 = !DIEnumerator(name: "BUILT_IN_LOG10F", value: 140, isUnsigned: true)
!651 = !DIEnumerator(name: "BUILT_IN_LOG10L", value: 141, isUnsigned: true)
!652 = !DIEnumerator(name: "BUILT_IN_LOG1P", value: 142, isUnsigned: true)
!653 = !DIEnumerator(name: "BUILT_IN_LOG1PF", value: 143, isUnsigned: true)
!654 = !DIEnumerator(name: "BUILT_IN_LOG1PL", value: 144, isUnsigned: true)
!655 = !DIEnumerator(name: "BUILT_IN_LOG2", value: 145, isUnsigned: true)
!656 = !DIEnumerator(name: "BUILT_IN_LOG2F", value: 146, isUnsigned: true)
!657 = !DIEnumerator(name: "BUILT_IN_LOG2L", value: 147, isUnsigned: true)
!658 = !DIEnumerator(name: "BUILT_IN_LOGB", value: 148, isUnsigned: true)
!659 = !DIEnumerator(name: "BUILT_IN_LOGBF", value: 149, isUnsigned: true)
!660 = !DIEnumerator(name: "BUILT_IN_LOGBL", value: 150, isUnsigned: true)
!661 = !DIEnumerator(name: "BUILT_IN_LOGF", value: 151, isUnsigned: true)
!662 = !DIEnumerator(name: "BUILT_IN_LOGL", value: 152, isUnsigned: true)
!663 = !DIEnumerator(name: "BUILT_IN_LRINT", value: 153, isUnsigned: true)
!664 = !DIEnumerator(name: "BUILT_IN_LRINTF", value: 154, isUnsigned: true)
!665 = !DIEnumerator(name: "BUILT_IN_LRINTL", value: 155, isUnsigned: true)
!666 = !DIEnumerator(name: "BUILT_IN_LROUND", value: 156, isUnsigned: true)
!667 = !DIEnumerator(name: "BUILT_IN_LROUNDF", value: 157, isUnsigned: true)
!668 = !DIEnumerator(name: "BUILT_IN_LROUNDL", value: 158, isUnsigned: true)
!669 = !DIEnumerator(name: "BUILT_IN_MODF", value: 159, isUnsigned: true)
!670 = !DIEnumerator(name: "BUILT_IN_MODFF", value: 160, isUnsigned: true)
!671 = !DIEnumerator(name: "BUILT_IN_MODFL", value: 161, isUnsigned: true)
!672 = !DIEnumerator(name: "BUILT_IN_NAN", value: 162, isUnsigned: true)
!673 = !DIEnumerator(name: "BUILT_IN_NANF", value: 163, isUnsigned: true)
!674 = !DIEnumerator(name: "BUILT_IN_NANL", value: 164, isUnsigned: true)
!675 = !DIEnumerator(name: "BUILT_IN_NAND32", value: 165, isUnsigned: true)
!676 = !DIEnumerator(name: "BUILT_IN_NAND64", value: 166, isUnsigned: true)
!677 = !DIEnumerator(name: "BUILT_IN_NAND128", value: 167, isUnsigned: true)
!678 = !DIEnumerator(name: "BUILT_IN_NANS", value: 168, isUnsigned: true)
!679 = !DIEnumerator(name: "BUILT_IN_NANSF", value: 169, isUnsigned: true)
!680 = !DIEnumerator(name: "BUILT_IN_NANSL", value: 170, isUnsigned: true)
!681 = !DIEnumerator(name: "BUILT_IN_NEARBYINT", value: 171, isUnsigned: true)
!682 = !DIEnumerator(name: "BUILT_IN_NEARBYINTF", value: 172, isUnsigned: true)
!683 = !DIEnumerator(name: "BUILT_IN_NEARBYINTL", value: 173, isUnsigned: true)
!684 = !DIEnumerator(name: "BUILT_IN_NEXTAFTER", value: 174, isUnsigned: true)
!685 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERF", value: 175, isUnsigned: true)
!686 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERL", value: 176, isUnsigned: true)
!687 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARD", value: 177, isUnsigned: true)
!688 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDF", value: 178, isUnsigned: true)
!689 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDL", value: 179, isUnsigned: true)
!690 = !DIEnumerator(name: "BUILT_IN_POW", value: 180, isUnsigned: true)
!691 = !DIEnumerator(name: "BUILT_IN_POW10", value: 181, isUnsigned: true)
!692 = !DIEnumerator(name: "BUILT_IN_POW10F", value: 182, isUnsigned: true)
!693 = !DIEnumerator(name: "BUILT_IN_POW10L", value: 183, isUnsigned: true)
!694 = !DIEnumerator(name: "BUILT_IN_POWF", value: 184, isUnsigned: true)
!695 = !DIEnumerator(name: "BUILT_IN_POWI", value: 185, isUnsigned: true)
!696 = !DIEnumerator(name: "BUILT_IN_POWIF", value: 186, isUnsigned: true)
!697 = !DIEnumerator(name: "BUILT_IN_POWIL", value: 187, isUnsigned: true)
!698 = !DIEnumerator(name: "BUILT_IN_POWL", value: 188, isUnsigned: true)
!699 = !DIEnumerator(name: "BUILT_IN_REMAINDER", value: 189, isUnsigned: true)
!700 = !DIEnumerator(name: "BUILT_IN_REMAINDERF", value: 190, isUnsigned: true)
!701 = !DIEnumerator(name: "BUILT_IN_REMAINDERL", value: 191, isUnsigned: true)
!702 = !DIEnumerator(name: "BUILT_IN_REMQUO", value: 192, isUnsigned: true)
!703 = !DIEnumerator(name: "BUILT_IN_REMQUOF", value: 193, isUnsigned: true)
!704 = !DIEnumerator(name: "BUILT_IN_REMQUOL", value: 194, isUnsigned: true)
!705 = !DIEnumerator(name: "BUILT_IN_RINT", value: 195, isUnsigned: true)
!706 = !DIEnumerator(name: "BUILT_IN_RINTF", value: 196, isUnsigned: true)
!707 = !DIEnumerator(name: "BUILT_IN_RINTL", value: 197, isUnsigned: true)
!708 = !DIEnumerator(name: "BUILT_IN_ROUND", value: 198, isUnsigned: true)
!709 = !DIEnumerator(name: "BUILT_IN_ROUNDF", value: 199, isUnsigned: true)
!710 = !DIEnumerator(name: "BUILT_IN_ROUNDL", value: 200, isUnsigned: true)
!711 = !DIEnumerator(name: "BUILT_IN_SCALB", value: 201, isUnsigned: true)
!712 = !DIEnumerator(name: "BUILT_IN_SCALBF", value: 202, isUnsigned: true)
!713 = !DIEnumerator(name: "BUILT_IN_SCALBL", value: 203, isUnsigned: true)
!714 = !DIEnumerator(name: "BUILT_IN_SCALBLN", value: 204, isUnsigned: true)
!715 = !DIEnumerator(name: "BUILT_IN_SCALBLNF", value: 205, isUnsigned: true)
!716 = !DIEnumerator(name: "BUILT_IN_SCALBLNL", value: 206, isUnsigned: true)
!717 = !DIEnumerator(name: "BUILT_IN_SCALBN", value: 207, isUnsigned: true)
!718 = !DIEnumerator(name: "BUILT_IN_SCALBNF", value: 208, isUnsigned: true)
!719 = !DIEnumerator(name: "BUILT_IN_SCALBNL", value: 209, isUnsigned: true)
!720 = !DIEnumerator(name: "BUILT_IN_SIGNBIT", value: 210, isUnsigned: true)
!721 = !DIEnumerator(name: "BUILT_IN_SIGNBITF", value: 211, isUnsigned: true)
!722 = !DIEnumerator(name: "BUILT_IN_SIGNBITL", value: 212, isUnsigned: true)
!723 = !DIEnumerator(name: "BUILT_IN_SIGNBITD32", value: 213, isUnsigned: true)
!724 = !DIEnumerator(name: "BUILT_IN_SIGNBITD64", value: 214, isUnsigned: true)
!725 = !DIEnumerator(name: "BUILT_IN_SIGNBITD128", value: 215, isUnsigned: true)
!726 = !DIEnumerator(name: "BUILT_IN_SIGNIFICAND", value: 216, isUnsigned: true)
!727 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDF", value: 217, isUnsigned: true)
!728 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDL", value: 218, isUnsigned: true)
!729 = !DIEnumerator(name: "BUILT_IN_SIN", value: 219, isUnsigned: true)
!730 = !DIEnumerator(name: "BUILT_IN_SINCOS", value: 220, isUnsigned: true)
!731 = !DIEnumerator(name: "BUILT_IN_SINCOSF", value: 221, isUnsigned: true)
!732 = !DIEnumerator(name: "BUILT_IN_SINCOSL", value: 222, isUnsigned: true)
!733 = !DIEnumerator(name: "BUILT_IN_SINF", value: 223, isUnsigned: true)
!734 = !DIEnumerator(name: "BUILT_IN_SINH", value: 224, isUnsigned: true)
!735 = !DIEnumerator(name: "BUILT_IN_SINHF", value: 225, isUnsigned: true)
!736 = !DIEnumerator(name: "BUILT_IN_SINHL", value: 226, isUnsigned: true)
!737 = !DIEnumerator(name: "BUILT_IN_SINL", value: 227, isUnsigned: true)
!738 = !DIEnumerator(name: "BUILT_IN_SQRT", value: 228, isUnsigned: true)
!739 = !DIEnumerator(name: "BUILT_IN_SQRTF", value: 229, isUnsigned: true)
!740 = !DIEnumerator(name: "BUILT_IN_SQRTL", value: 230, isUnsigned: true)
!741 = !DIEnumerator(name: "BUILT_IN_TAN", value: 231, isUnsigned: true)
!742 = !DIEnumerator(name: "BUILT_IN_TANF", value: 232, isUnsigned: true)
!743 = !DIEnumerator(name: "BUILT_IN_TANH", value: 233, isUnsigned: true)
!744 = !DIEnumerator(name: "BUILT_IN_TANHF", value: 234, isUnsigned: true)
!745 = !DIEnumerator(name: "BUILT_IN_TANHL", value: 235, isUnsigned: true)
!746 = !DIEnumerator(name: "BUILT_IN_TANL", value: 236, isUnsigned: true)
!747 = !DIEnumerator(name: "BUILT_IN_TGAMMA", value: 237, isUnsigned: true)
!748 = !DIEnumerator(name: "BUILT_IN_TGAMMAF", value: 238, isUnsigned: true)
!749 = !DIEnumerator(name: "BUILT_IN_TGAMMAL", value: 239, isUnsigned: true)
!750 = !DIEnumerator(name: "BUILT_IN_TRUNC", value: 240, isUnsigned: true)
!751 = !DIEnumerator(name: "BUILT_IN_TRUNCF", value: 241, isUnsigned: true)
!752 = !DIEnumerator(name: "BUILT_IN_TRUNCL", value: 242, isUnsigned: true)
!753 = !DIEnumerator(name: "BUILT_IN_Y0", value: 243, isUnsigned: true)
!754 = !DIEnumerator(name: "BUILT_IN_Y0F", value: 244, isUnsigned: true)
!755 = !DIEnumerator(name: "BUILT_IN_Y0L", value: 245, isUnsigned: true)
!756 = !DIEnumerator(name: "BUILT_IN_Y1", value: 246, isUnsigned: true)
!757 = !DIEnumerator(name: "BUILT_IN_Y1F", value: 247, isUnsigned: true)
!758 = !DIEnumerator(name: "BUILT_IN_Y1L", value: 248, isUnsigned: true)
!759 = !DIEnumerator(name: "BUILT_IN_YN", value: 249, isUnsigned: true)
!760 = !DIEnumerator(name: "BUILT_IN_YNF", value: 250, isUnsigned: true)
!761 = !DIEnumerator(name: "BUILT_IN_YNL", value: 251, isUnsigned: true)
!762 = !DIEnumerator(name: "BUILT_IN_CABS", value: 252, isUnsigned: true)
!763 = !DIEnumerator(name: "BUILT_IN_CABSF", value: 253, isUnsigned: true)
!764 = !DIEnumerator(name: "BUILT_IN_CABSL", value: 254, isUnsigned: true)
!765 = !DIEnumerator(name: "BUILT_IN_CACOS", value: 255, isUnsigned: true)
!766 = !DIEnumerator(name: "BUILT_IN_CACOSF", value: 256, isUnsigned: true)
!767 = !DIEnumerator(name: "BUILT_IN_CACOSH", value: 257, isUnsigned: true)
!768 = !DIEnumerator(name: "BUILT_IN_CACOSHF", value: 258, isUnsigned: true)
!769 = !DIEnumerator(name: "BUILT_IN_CACOSHL", value: 259, isUnsigned: true)
!770 = !DIEnumerator(name: "BUILT_IN_CACOSL", value: 260, isUnsigned: true)
!771 = !DIEnumerator(name: "BUILT_IN_CARG", value: 261, isUnsigned: true)
!772 = !DIEnumerator(name: "BUILT_IN_CARGF", value: 262, isUnsigned: true)
!773 = !DIEnumerator(name: "BUILT_IN_CARGL", value: 263, isUnsigned: true)
!774 = !DIEnumerator(name: "BUILT_IN_CASIN", value: 264, isUnsigned: true)
!775 = !DIEnumerator(name: "BUILT_IN_CASINF", value: 265, isUnsigned: true)
!776 = !DIEnumerator(name: "BUILT_IN_CASINH", value: 266, isUnsigned: true)
!777 = !DIEnumerator(name: "BUILT_IN_CASINHF", value: 267, isUnsigned: true)
!778 = !DIEnumerator(name: "BUILT_IN_CASINHL", value: 268, isUnsigned: true)
!779 = !DIEnumerator(name: "BUILT_IN_CASINL", value: 269, isUnsigned: true)
!780 = !DIEnumerator(name: "BUILT_IN_CATAN", value: 270, isUnsigned: true)
!781 = !DIEnumerator(name: "BUILT_IN_CATANF", value: 271, isUnsigned: true)
!782 = !DIEnumerator(name: "BUILT_IN_CATANH", value: 272, isUnsigned: true)
!783 = !DIEnumerator(name: "BUILT_IN_CATANHF", value: 273, isUnsigned: true)
!784 = !DIEnumerator(name: "BUILT_IN_CATANHL", value: 274, isUnsigned: true)
!785 = !DIEnumerator(name: "BUILT_IN_CATANL", value: 275, isUnsigned: true)
!786 = !DIEnumerator(name: "BUILT_IN_CCOS", value: 276, isUnsigned: true)
!787 = !DIEnumerator(name: "BUILT_IN_CCOSF", value: 277, isUnsigned: true)
!788 = !DIEnumerator(name: "BUILT_IN_CCOSH", value: 278, isUnsigned: true)
!789 = !DIEnumerator(name: "BUILT_IN_CCOSHF", value: 279, isUnsigned: true)
!790 = !DIEnumerator(name: "BUILT_IN_CCOSHL", value: 280, isUnsigned: true)
!791 = !DIEnumerator(name: "BUILT_IN_CCOSL", value: 281, isUnsigned: true)
!792 = !DIEnumerator(name: "BUILT_IN_CEXP", value: 282, isUnsigned: true)
!793 = !DIEnumerator(name: "BUILT_IN_CEXPF", value: 283, isUnsigned: true)
!794 = !DIEnumerator(name: "BUILT_IN_CEXPL", value: 284, isUnsigned: true)
!795 = !DIEnumerator(name: "BUILT_IN_CEXPI", value: 285, isUnsigned: true)
!796 = !DIEnumerator(name: "BUILT_IN_CEXPIF", value: 286, isUnsigned: true)
!797 = !DIEnumerator(name: "BUILT_IN_CEXPIL", value: 287, isUnsigned: true)
!798 = !DIEnumerator(name: "BUILT_IN_CIMAG", value: 288, isUnsigned: true)
!799 = !DIEnumerator(name: "BUILT_IN_CIMAGF", value: 289, isUnsigned: true)
!800 = !DIEnumerator(name: "BUILT_IN_CIMAGL", value: 290, isUnsigned: true)
!801 = !DIEnumerator(name: "BUILT_IN_CLOG", value: 291, isUnsigned: true)
!802 = !DIEnumerator(name: "BUILT_IN_CLOGF", value: 292, isUnsigned: true)
!803 = !DIEnumerator(name: "BUILT_IN_CLOGL", value: 293, isUnsigned: true)
!804 = !DIEnumerator(name: "BUILT_IN_CLOG10", value: 294, isUnsigned: true)
!805 = !DIEnumerator(name: "BUILT_IN_CLOG10F", value: 295, isUnsigned: true)
!806 = !DIEnumerator(name: "BUILT_IN_CLOG10L", value: 296, isUnsigned: true)
!807 = !DIEnumerator(name: "BUILT_IN_CONJ", value: 297, isUnsigned: true)
!808 = !DIEnumerator(name: "BUILT_IN_CONJF", value: 298, isUnsigned: true)
!809 = !DIEnumerator(name: "BUILT_IN_CONJL", value: 299, isUnsigned: true)
!810 = !DIEnumerator(name: "BUILT_IN_CPOW", value: 300, isUnsigned: true)
!811 = !DIEnumerator(name: "BUILT_IN_CPOWF", value: 301, isUnsigned: true)
!812 = !DIEnumerator(name: "BUILT_IN_CPOWL", value: 302, isUnsigned: true)
!813 = !DIEnumerator(name: "BUILT_IN_CPROJ", value: 303, isUnsigned: true)
!814 = !DIEnumerator(name: "BUILT_IN_CPROJF", value: 304, isUnsigned: true)
!815 = !DIEnumerator(name: "BUILT_IN_CPROJL", value: 305, isUnsigned: true)
!816 = !DIEnumerator(name: "BUILT_IN_CREAL", value: 306, isUnsigned: true)
!817 = !DIEnumerator(name: "BUILT_IN_CREALF", value: 307, isUnsigned: true)
!818 = !DIEnumerator(name: "BUILT_IN_CREALL", value: 308, isUnsigned: true)
!819 = !DIEnumerator(name: "BUILT_IN_CSIN", value: 309, isUnsigned: true)
!820 = !DIEnumerator(name: "BUILT_IN_CSINF", value: 310, isUnsigned: true)
!821 = !DIEnumerator(name: "BUILT_IN_CSINH", value: 311, isUnsigned: true)
!822 = !DIEnumerator(name: "BUILT_IN_CSINHF", value: 312, isUnsigned: true)
!823 = !DIEnumerator(name: "BUILT_IN_CSINHL", value: 313, isUnsigned: true)
!824 = !DIEnumerator(name: "BUILT_IN_CSINL", value: 314, isUnsigned: true)
!825 = !DIEnumerator(name: "BUILT_IN_CSQRT", value: 315, isUnsigned: true)
!826 = !DIEnumerator(name: "BUILT_IN_CSQRTF", value: 316, isUnsigned: true)
!827 = !DIEnumerator(name: "BUILT_IN_CSQRTL", value: 317, isUnsigned: true)
!828 = !DIEnumerator(name: "BUILT_IN_CTAN", value: 318, isUnsigned: true)
!829 = !DIEnumerator(name: "BUILT_IN_CTANF", value: 319, isUnsigned: true)
!830 = !DIEnumerator(name: "BUILT_IN_CTANH", value: 320, isUnsigned: true)
!831 = !DIEnumerator(name: "BUILT_IN_CTANHF", value: 321, isUnsigned: true)
!832 = !DIEnumerator(name: "BUILT_IN_CTANHL", value: 322, isUnsigned: true)
!833 = !DIEnumerator(name: "BUILT_IN_CTANL", value: 323, isUnsigned: true)
!834 = !DIEnumerator(name: "BUILT_IN_BCMP", value: 324, isUnsigned: true)
!835 = !DIEnumerator(name: "BUILT_IN_BCOPY", value: 325, isUnsigned: true)
!836 = !DIEnumerator(name: "BUILT_IN_BZERO", value: 326, isUnsigned: true)
!837 = !DIEnumerator(name: "BUILT_IN_INDEX", value: 327, isUnsigned: true)
!838 = !DIEnumerator(name: "BUILT_IN_MEMCHR", value: 328, isUnsigned: true)
!839 = !DIEnumerator(name: "BUILT_IN_MEMCMP", value: 329, isUnsigned: true)
!840 = !DIEnumerator(name: "BUILT_IN_MEMCPY", value: 330, isUnsigned: true)
!841 = !DIEnumerator(name: "BUILT_IN_MEMMOVE", value: 331, isUnsigned: true)
!842 = !DIEnumerator(name: "BUILT_IN_MEMPCPY", value: 332, isUnsigned: true)
!843 = !DIEnumerator(name: "BUILT_IN_MEMSET", value: 333, isUnsigned: true)
!844 = !DIEnumerator(name: "BUILT_IN_RINDEX", value: 334, isUnsigned: true)
!845 = !DIEnumerator(name: "BUILT_IN_STPCPY", value: 335, isUnsigned: true)
!846 = !DIEnumerator(name: "BUILT_IN_STPNCPY", value: 336, isUnsigned: true)
!847 = !DIEnumerator(name: "BUILT_IN_STRCASECMP", value: 337, isUnsigned: true)
!848 = !DIEnumerator(name: "BUILT_IN_STRCAT", value: 338, isUnsigned: true)
!849 = !DIEnumerator(name: "BUILT_IN_STRCHR", value: 339, isUnsigned: true)
!850 = !DIEnumerator(name: "BUILT_IN_STRCMP", value: 340, isUnsigned: true)
!851 = !DIEnumerator(name: "BUILT_IN_STRCPY", value: 341, isUnsigned: true)
!852 = !DIEnumerator(name: "BUILT_IN_STRCSPN", value: 342, isUnsigned: true)
!853 = !DIEnumerator(name: "BUILT_IN_STRDUP", value: 343, isUnsigned: true)
!854 = !DIEnumerator(name: "BUILT_IN_STRNDUP", value: 344, isUnsigned: true)
!855 = !DIEnumerator(name: "BUILT_IN_STRLEN", value: 345, isUnsigned: true)
!856 = !DIEnumerator(name: "BUILT_IN_STRNCASECMP", value: 346, isUnsigned: true)
!857 = !DIEnumerator(name: "BUILT_IN_STRNCAT", value: 347, isUnsigned: true)
!858 = !DIEnumerator(name: "BUILT_IN_STRNCMP", value: 348, isUnsigned: true)
!859 = !DIEnumerator(name: "BUILT_IN_STRNCPY", value: 349, isUnsigned: true)
!860 = !DIEnumerator(name: "BUILT_IN_STRPBRK", value: 350, isUnsigned: true)
!861 = !DIEnumerator(name: "BUILT_IN_STRRCHR", value: 351, isUnsigned: true)
!862 = !DIEnumerator(name: "BUILT_IN_STRSPN", value: 352, isUnsigned: true)
!863 = !DIEnumerator(name: "BUILT_IN_STRSTR", value: 353, isUnsigned: true)
!864 = !DIEnumerator(name: "BUILT_IN_FPRINTF", value: 354, isUnsigned: true)
!865 = !DIEnumerator(name: "BUILT_IN_FPRINTF_UNLOCKED", value: 355, isUnsigned: true)
!866 = !DIEnumerator(name: "BUILT_IN_PUTC", value: 356, isUnsigned: true)
!867 = !DIEnumerator(name: "BUILT_IN_PUTC_UNLOCKED", value: 357, isUnsigned: true)
!868 = !DIEnumerator(name: "BUILT_IN_FPUTC", value: 358, isUnsigned: true)
!869 = !DIEnumerator(name: "BUILT_IN_FPUTC_UNLOCKED", value: 359, isUnsigned: true)
!870 = !DIEnumerator(name: "BUILT_IN_FPUTS", value: 360, isUnsigned: true)
!871 = !DIEnumerator(name: "BUILT_IN_FPUTS_UNLOCKED", value: 361, isUnsigned: true)
!872 = !DIEnumerator(name: "BUILT_IN_FSCANF", value: 362, isUnsigned: true)
!873 = !DIEnumerator(name: "BUILT_IN_FWRITE", value: 363, isUnsigned: true)
!874 = !DIEnumerator(name: "BUILT_IN_FWRITE_UNLOCKED", value: 364, isUnsigned: true)
!875 = !DIEnumerator(name: "BUILT_IN_PRINTF", value: 365, isUnsigned: true)
!876 = !DIEnumerator(name: "BUILT_IN_PRINTF_UNLOCKED", value: 366, isUnsigned: true)
!877 = !DIEnumerator(name: "BUILT_IN_PUTCHAR", value: 367, isUnsigned: true)
!878 = !DIEnumerator(name: "BUILT_IN_PUTCHAR_UNLOCKED", value: 368, isUnsigned: true)
!879 = !DIEnumerator(name: "BUILT_IN_PUTS", value: 369, isUnsigned: true)
!880 = !DIEnumerator(name: "BUILT_IN_PUTS_UNLOCKED", value: 370, isUnsigned: true)
!881 = !DIEnumerator(name: "BUILT_IN_SCANF", value: 371, isUnsigned: true)
!882 = !DIEnumerator(name: "BUILT_IN_SNPRINTF", value: 372, isUnsigned: true)
!883 = !DIEnumerator(name: "BUILT_IN_SPRINTF", value: 373, isUnsigned: true)
!884 = !DIEnumerator(name: "BUILT_IN_SSCANF", value: 374, isUnsigned: true)
!885 = !DIEnumerator(name: "BUILT_IN_VFPRINTF", value: 375, isUnsigned: true)
!886 = !DIEnumerator(name: "BUILT_IN_VFSCANF", value: 376, isUnsigned: true)
!887 = !DIEnumerator(name: "BUILT_IN_VPRINTF", value: 377, isUnsigned: true)
!888 = !DIEnumerator(name: "BUILT_IN_VSCANF", value: 378, isUnsigned: true)
!889 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF", value: 379, isUnsigned: true)
!890 = !DIEnumerator(name: "BUILT_IN_VSPRINTF", value: 380, isUnsigned: true)
!891 = !DIEnumerator(name: "BUILT_IN_VSSCANF", value: 381, isUnsigned: true)
!892 = !DIEnumerator(name: "BUILT_IN_ISALNUM", value: 382, isUnsigned: true)
!893 = !DIEnumerator(name: "BUILT_IN_ISALPHA", value: 383, isUnsigned: true)
!894 = !DIEnumerator(name: "BUILT_IN_ISASCII", value: 384, isUnsigned: true)
!895 = !DIEnumerator(name: "BUILT_IN_ISBLANK", value: 385, isUnsigned: true)
!896 = !DIEnumerator(name: "BUILT_IN_ISCNTRL", value: 386, isUnsigned: true)
!897 = !DIEnumerator(name: "BUILT_IN_ISDIGIT", value: 387, isUnsigned: true)
!898 = !DIEnumerator(name: "BUILT_IN_ISGRAPH", value: 388, isUnsigned: true)
!899 = !DIEnumerator(name: "BUILT_IN_ISLOWER", value: 389, isUnsigned: true)
!900 = !DIEnumerator(name: "BUILT_IN_ISPRINT", value: 390, isUnsigned: true)
!901 = !DIEnumerator(name: "BUILT_IN_ISPUNCT", value: 391, isUnsigned: true)
!902 = !DIEnumerator(name: "BUILT_IN_ISSPACE", value: 392, isUnsigned: true)
!903 = !DIEnumerator(name: "BUILT_IN_ISUPPER", value: 393, isUnsigned: true)
!904 = !DIEnumerator(name: "BUILT_IN_ISXDIGIT", value: 394, isUnsigned: true)
!905 = !DIEnumerator(name: "BUILT_IN_TOASCII", value: 395, isUnsigned: true)
!906 = !DIEnumerator(name: "BUILT_IN_TOLOWER", value: 396, isUnsigned: true)
!907 = !DIEnumerator(name: "BUILT_IN_TOUPPER", value: 397, isUnsigned: true)
!908 = !DIEnumerator(name: "BUILT_IN_ISWALNUM", value: 398, isUnsigned: true)
!909 = !DIEnumerator(name: "BUILT_IN_ISWALPHA", value: 399, isUnsigned: true)
!910 = !DIEnumerator(name: "BUILT_IN_ISWBLANK", value: 400, isUnsigned: true)
!911 = !DIEnumerator(name: "BUILT_IN_ISWCNTRL", value: 401, isUnsigned: true)
!912 = !DIEnumerator(name: "BUILT_IN_ISWDIGIT", value: 402, isUnsigned: true)
!913 = !DIEnumerator(name: "BUILT_IN_ISWGRAPH", value: 403, isUnsigned: true)
!914 = !DIEnumerator(name: "BUILT_IN_ISWLOWER", value: 404, isUnsigned: true)
!915 = !DIEnumerator(name: "BUILT_IN_ISWPRINT", value: 405, isUnsigned: true)
!916 = !DIEnumerator(name: "BUILT_IN_ISWPUNCT", value: 406, isUnsigned: true)
!917 = !DIEnumerator(name: "BUILT_IN_ISWSPACE", value: 407, isUnsigned: true)
!918 = !DIEnumerator(name: "BUILT_IN_ISWUPPER", value: 408, isUnsigned: true)
!919 = !DIEnumerator(name: "BUILT_IN_ISWXDIGIT", value: 409, isUnsigned: true)
!920 = !DIEnumerator(name: "BUILT_IN_TOWLOWER", value: 410, isUnsigned: true)
!921 = !DIEnumerator(name: "BUILT_IN_TOWUPPER", value: 411, isUnsigned: true)
!922 = !DIEnumerator(name: "BUILT_IN_ABORT", value: 412, isUnsigned: true)
!923 = !DIEnumerator(name: "BUILT_IN_ABS", value: 413, isUnsigned: true)
!924 = !DIEnumerator(name: "BUILT_IN_AGGREGATE_INCOMING_ADDRESS", value: 414, isUnsigned: true)
!925 = !DIEnumerator(name: "BUILT_IN_ALLOCA", value: 415, isUnsigned: true)
!926 = !DIEnumerator(name: "BUILT_IN_APPLY", value: 416, isUnsigned: true)
!927 = !DIEnumerator(name: "BUILT_IN_APPLY_ARGS", value: 417, isUnsigned: true)
!928 = !DIEnumerator(name: "BUILT_IN_ARGS_INFO", value: 418, isUnsigned: true)
!929 = !DIEnumerator(name: "BUILT_IN_BSWAP32", value: 419, isUnsigned: true)
!930 = !DIEnumerator(name: "BUILT_IN_BSWAP64", value: 420, isUnsigned: true)
!931 = !DIEnumerator(name: "BUILT_IN_CLEAR_CACHE", value: 421, isUnsigned: true)
!932 = !DIEnumerator(name: "BUILT_IN_CALLOC", value: 422, isUnsigned: true)
!933 = !DIEnumerator(name: "BUILT_IN_CLASSIFY_TYPE", value: 423, isUnsigned: true)
!934 = !DIEnumerator(name: "BUILT_IN_CLZ", value: 424, isUnsigned: true)
!935 = !DIEnumerator(name: "BUILT_IN_CLZIMAX", value: 425, isUnsigned: true)
!936 = !DIEnumerator(name: "BUILT_IN_CLZL", value: 426, isUnsigned: true)
!937 = !DIEnumerator(name: "BUILT_IN_CLZLL", value: 427, isUnsigned: true)
!938 = !DIEnumerator(name: "BUILT_IN_CONSTANT_P", value: 428, isUnsigned: true)
!939 = !DIEnumerator(name: "BUILT_IN_CTZ", value: 429, isUnsigned: true)
!940 = !DIEnumerator(name: "BUILT_IN_CTZIMAX", value: 430, isUnsigned: true)
!941 = !DIEnumerator(name: "BUILT_IN_CTZL", value: 431, isUnsigned: true)
!942 = !DIEnumerator(name: "BUILT_IN_CTZLL", value: 432, isUnsigned: true)
!943 = !DIEnumerator(name: "BUILT_IN_DCGETTEXT", value: 433, isUnsigned: true)
!944 = !DIEnumerator(name: "BUILT_IN_DGETTEXT", value: 434, isUnsigned: true)
!945 = !DIEnumerator(name: "BUILT_IN_DWARF_CFA", value: 435, isUnsigned: true)
!946 = !DIEnumerator(name: "BUILT_IN_DWARF_SP_COLUMN", value: 436, isUnsigned: true)
!947 = !DIEnumerator(name: "BUILT_IN_EH_RETURN", value: 437, isUnsigned: true)
!948 = !DIEnumerator(name: "BUILT_IN_EH_RETURN_DATA_REGNO", value: 438, isUnsigned: true)
!949 = !DIEnumerator(name: "BUILT_IN_EXECL", value: 439, isUnsigned: true)
!950 = !DIEnumerator(name: "BUILT_IN_EXECLP", value: 440, isUnsigned: true)
!951 = !DIEnumerator(name: "BUILT_IN_EXECLE", value: 441, isUnsigned: true)
!952 = !DIEnumerator(name: "BUILT_IN_EXECV", value: 442, isUnsigned: true)
!953 = !DIEnumerator(name: "BUILT_IN_EXECVP", value: 443, isUnsigned: true)
!954 = !DIEnumerator(name: "BUILT_IN_EXECVE", value: 444, isUnsigned: true)
!955 = !DIEnumerator(name: "BUILT_IN_EXIT", value: 445, isUnsigned: true)
!956 = !DIEnumerator(name: "BUILT_IN_EXPECT", value: 446, isUnsigned: true)
!957 = !DIEnumerator(name: "BUILT_IN_EXTEND_POINTER", value: 447, isUnsigned: true)
!958 = !DIEnumerator(name: "BUILT_IN_EXTRACT_RETURN_ADDR", value: 448, isUnsigned: true)
!959 = !DIEnumerator(name: "BUILT_IN_FFS", value: 449, isUnsigned: true)
!960 = !DIEnumerator(name: "BUILT_IN_FFSIMAX", value: 450, isUnsigned: true)
!961 = !DIEnumerator(name: "BUILT_IN_FFSL", value: 451, isUnsigned: true)
!962 = !DIEnumerator(name: "BUILT_IN_FFSLL", value: 452, isUnsigned: true)
!963 = !DIEnumerator(name: "BUILT_IN_FORK", value: 453, isUnsigned: true)
!964 = !DIEnumerator(name: "BUILT_IN_FRAME_ADDRESS", value: 454, isUnsigned: true)
!965 = !DIEnumerator(name: "BUILT_IN_FREE", value: 455, isUnsigned: true)
!966 = !DIEnumerator(name: "BUILT_IN_FROB_RETURN_ADDR", value: 456, isUnsigned: true)
!967 = !DIEnumerator(name: "BUILT_IN_GETTEXT", value: 457, isUnsigned: true)
!968 = !DIEnumerator(name: "BUILT_IN_IMAXABS", value: 458, isUnsigned: true)
!969 = !DIEnumerator(name: "BUILT_IN_INIT_DWARF_REG_SIZES", value: 459, isUnsigned: true)
!970 = !DIEnumerator(name: "BUILT_IN_FINITE", value: 460, isUnsigned: true)
!971 = !DIEnumerator(name: "BUILT_IN_FINITEF", value: 461, isUnsigned: true)
!972 = !DIEnumerator(name: "BUILT_IN_FINITEL", value: 462, isUnsigned: true)
!973 = !DIEnumerator(name: "BUILT_IN_FINITED32", value: 463, isUnsigned: true)
!974 = !DIEnumerator(name: "BUILT_IN_FINITED64", value: 464, isUnsigned: true)
!975 = !DIEnumerator(name: "BUILT_IN_FINITED128", value: 465, isUnsigned: true)
!976 = !DIEnumerator(name: "BUILT_IN_FPCLASSIFY", value: 466, isUnsigned: true)
!977 = !DIEnumerator(name: "BUILT_IN_ISFINITE", value: 467, isUnsigned: true)
!978 = !DIEnumerator(name: "BUILT_IN_ISINF_SIGN", value: 468, isUnsigned: true)
!979 = !DIEnumerator(name: "BUILT_IN_ISINF", value: 469, isUnsigned: true)
!980 = !DIEnumerator(name: "BUILT_IN_ISINFF", value: 470, isUnsigned: true)
!981 = !DIEnumerator(name: "BUILT_IN_ISINFL", value: 471, isUnsigned: true)
!982 = !DIEnumerator(name: "BUILT_IN_ISINFD32", value: 472, isUnsigned: true)
!983 = !DIEnumerator(name: "BUILT_IN_ISINFD64", value: 473, isUnsigned: true)
!984 = !DIEnumerator(name: "BUILT_IN_ISINFD128", value: 474, isUnsigned: true)
!985 = !DIEnumerator(name: "BUILT_IN_ISNAN", value: 475, isUnsigned: true)
!986 = !DIEnumerator(name: "BUILT_IN_ISNANF", value: 476, isUnsigned: true)
!987 = !DIEnumerator(name: "BUILT_IN_ISNANL", value: 477, isUnsigned: true)
!988 = !DIEnumerator(name: "BUILT_IN_ISNAND32", value: 478, isUnsigned: true)
!989 = !DIEnumerator(name: "BUILT_IN_ISNAND64", value: 479, isUnsigned: true)
!990 = !DIEnumerator(name: "BUILT_IN_ISNAND128", value: 480, isUnsigned: true)
!991 = !DIEnumerator(name: "BUILT_IN_ISNORMAL", value: 481, isUnsigned: true)
!992 = !DIEnumerator(name: "BUILT_IN_ISGREATER", value: 482, isUnsigned: true)
!993 = !DIEnumerator(name: "BUILT_IN_ISGREATEREQUAL", value: 483, isUnsigned: true)
!994 = !DIEnumerator(name: "BUILT_IN_ISLESS", value: 484, isUnsigned: true)
!995 = !DIEnumerator(name: "BUILT_IN_ISLESSEQUAL", value: 485, isUnsigned: true)
!996 = !DIEnumerator(name: "BUILT_IN_ISLESSGREATER", value: 486, isUnsigned: true)
!997 = !DIEnumerator(name: "BUILT_IN_ISUNORDERED", value: 487, isUnsigned: true)
!998 = !DIEnumerator(name: "BUILT_IN_LABS", value: 488, isUnsigned: true)
!999 = !DIEnumerator(name: "BUILT_IN_LLABS", value: 489, isUnsigned: true)
!1000 = !DIEnumerator(name: "BUILT_IN_LONGJMP", value: 490, isUnsigned: true)
!1001 = !DIEnumerator(name: "BUILT_IN_MALLOC", value: 491, isUnsigned: true)
!1002 = !DIEnumerator(name: "BUILT_IN_NEXT_ARG", value: 492, isUnsigned: true)
!1003 = !DIEnumerator(name: "BUILT_IN_PARITY", value: 493, isUnsigned: true)
!1004 = !DIEnumerator(name: "BUILT_IN_PARITYIMAX", value: 494, isUnsigned: true)
!1005 = !DIEnumerator(name: "BUILT_IN_PARITYL", value: 495, isUnsigned: true)
!1006 = !DIEnumerator(name: "BUILT_IN_PARITYLL", value: 496, isUnsigned: true)
!1007 = !DIEnumerator(name: "BUILT_IN_POPCOUNT", value: 497, isUnsigned: true)
!1008 = !DIEnumerator(name: "BUILT_IN_POPCOUNTIMAX", value: 498, isUnsigned: true)
!1009 = !DIEnumerator(name: "BUILT_IN_POPCOUNTL", value: 499, isUnsigned: true)
!1010 = !DIEnumerator(name: "BUILT_IN_POPCOUNTLL", value: 500, isUnsigned: true)
!1011 = !DIEnumerator(name: "BUILT_IN_PREFETCH", value: 501, isUnsigned: true)
!1012 = !DIEnumerator(name: "BUILT_IN_REALLOC", value: 502, isUnsigned: true)
!1013 = !DIEnumerator(name: "BUILT_IN_RETURN", value: 503, isUnsigned: true)
!1014 = !DIEnumerator(name: "BUILT_IN_RETURN_ADDRESS", value: 504, isUnsigned: true)
!1015 = !DIEnumerator(name: "BUILT_IN_SAVEREGS", value: 505, isUnsigned: true)
!1016 = !DIEnumerator(name: "BUILT_IN_SETJMP", value: 506, isUnsigned: true)
!1017 = !DIEnumerator(name: "BUILT_IN_STRFMON", value: 507, isUnsigned: true)
!1018 = !DIEnumerator(name: "BUILT_IN_STRFTIME", value: 508, isUnsigned: true)
!1019 = !DIEnumerator(name: "BUILT_IN_TRAP", value: 509, isUnsigned: true)
!1020 = !DIEnumerator(name: "BUILT_IN_UNREACHABLE", value: 510, isUnsigned: true)
!1021 = !DIEnumerator(name: "BUILT_IN_UNWIND_INIT", value: 511, isUnsigned: true)
!1022 = !DIEnumerator(name: "BUILT_IN_UPDATE_SETJMP_BUF", value: 512, isUnsigned: true)
!1023 = !DIEnumerator(name: "BUILT_IN_VA_COPY", value: 513, isUnsigned: true)
!1024 = !DIEnumerator(name: "BUILT_IN_VA_END", value: 514, isUnsigned: true)
!1025 = !DIEnumerator(name: "BUILT_IN_VA_START", value: 515, isUnsigned: true)
!1026 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK", value: 516, isUnsigned: true)
!1027 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK_LEN", value: 517, isUnsigned: true)
!1028 = !DIEnumerator(name: "BUILT_IN__EXIT", value: 518, isUnsigned: true)
!1029 = !DIEnumerator(name: "BUILT_IN__EXIT2", value: 519, isUnsigned: true)
!1030 = !DIEnumerator(name: "BUILT_IN_INIT_TRAMPOLINE", value: 520, isUnsigned: true)
!1031 = !DIEnumerator(name: "BUILT_IN_ADJUST_TRAMPOLINE", value: 521, isUnsigned: true)
!1032 = !DIEnumerator(name: "BUILT_IN_NONLOCAL_GOTO", value: 522, isUnsigned: true)
!1033 = !DIEnumerator(name: "BUILT_IN_SETJMP_SETUP", value: 523, isUnsigned: true)
!1034 = !DIEnumerator(name: "BUILT_IN_SETJMP_DISPATCHER", value: 524, isUnsigned: true)
!1035 = !DIEnumerator(name: "BUILT_IN_SETJMP_RECEIVER", value: 525, isUnsigned: true)
!1036 = !DIEnumerator(name: "BUILT_IN_STACK_SAVE", value: 526, isUnsigned: true)
!1037 = !DIEnumerator(name: "BUILT_IN_STACK_RESTORE", value: 527, isUnsigned: true)
!1038 = !DIEnumerator(name: "BUILT_IN_OBJECT_SIZE", value: 528, isUnsigned: true)
!1039 = !DIEnumerator(name: "BUILT_IN_MEMCPY_CHK", value: 529, isUnsigned: true)
!1040 = !DIEnumerator(name: "BUILT_IN_MEMMOVE_CHK", value: 530, isUnsigned: true)
!1041 = !DIEnumerator(name: "BUILT_IN_MEMPCPY_CHK", value: 531, isUnsigned: true)
!1042 = !DIEnumerator(name: "BUILT_IN_MEMSET_CHK", value: 532, isUnsigned: true)
!1043 = !DIEnumerator(name: "BUILT_IN_STPCPY_CHK", value: 533, isUnsigned: true)
!1044 = !DIEnumerator(name: "BUILT_IN_STRCAT_CHK", value: 534, isUnsigned: true)
!1045 = !DIEnumerator(name: "BUILT_IN_STRCPY_CHK", value: 535, isUnsigned: true)
!1046 = !DIEnumerator(name: "BUILT_IN_STRNCAT_CHK", value: 536, isUnsigned: true)
!1047 = !DIEnumerator(name: "BUILT_IN_STRNCPY_CHK", value: 537, isUnsigned: true)
!1048 = !DIEnumerator(name: "BUILT_IN_SNPRINTF_CHK", value: 538, isUnsigned: true)
!1049 = !DIEnumerator(name: "BUILT_IN_SPRINTF_CHK", value: 539, isUnsigned: true)
!1050 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF_CHK", value: 540, isUnsigned: true)
!1051 = !DIEnumerator(name: "BUILT_IN_VSPRINTF_CHK", value: 541, isUnsigned: true)
!1052 = !DIEnumerator(name: "BUILT_IN_FPRINTF_CHK", value: 542, isUnsigned: true)
!1053 = !DIEnumerator(name: "BUILT_IN_PRINTF_CHK", value: 543, isUnsigned: true)
!1054 = !DIEnumerator(name: "BUILT_IN_VFPRINTF_CHK", value: 544, isUnsigned: true)
!1055 = !DIEnumerator(name: "BUILT_IN_VPRINTF_CHK", value: 545, isUnsigned: true)
!1056 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_ENTER", value: 546, isUnsigned: true)
!1057 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_EXIT", value: 547, isUnsigned: true)
!1058 = !DIEnumerator(name: "BUILT_IN_EMUTLS_GET_ADDRESS", value: 548, isUnsigned: true)
!1059 = !DIEnumerator(name: "BUILT_IN_EMUTLS_REGISTER_COMMON", value: 549, isUnsigned: true)
!1060 = !DIEnumerator(name: "BUILT_IN_UNWIND_RESUME", value: 550, isUnsigned: true)
!1061 = !DIEnumerator(name: "BUILT_IN_CXA_END_CLEANUP", value: 551, isUnsigned: true)
!1062 = !DIEnumerator(name: "BUILT_IN_EH_POINTER", value: 552, isUnsigned: true)
!1063 = !DIEnumerator(name: "BUILT_IN_EH_FILTER", value: 553, isUnsigned: true)
!1064 = !DIEnumerator(name: "BUILT_IN_EH_COPY_VALUES", value: 554, isUnsigned: true)
!1065 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_N", value: 555, isUnsigned: true)
!1066 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_1", value: 556, isUnsigned: true)
!1067 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_2", value: 557, isUnsigned: true)
!1068 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_4", value: 558, isUnsigned: true)
!1069 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_8", value: 559, isUnsigned: true)
!1070 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_16", value: 560, isUnsigned: true)
!1071 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_N", value: 561, isUnsigned: true)
!1072 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_1", value: 562, isUnsigned: true)
!1073 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_2", value: 563, isUnsigned: true)
!1074 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_4", value: 564, isUnsigned: true)
!1075 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_8", value: 565, isUnsigned: true)
!1076 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_16", value: 566, isUnsigned: true)
!1077 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_N", value: 567, isUnsigned: true)
!1078 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_1", value: 568, isUnsigned: true)
!1079 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_2", value: 569, isUnsigned: true)
!1080 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_4", value: 570, isUnsigned: true)
!1081 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_8", value: 571, isUnsigned: true)
!1082 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_16", value: 572, isUnsigned: true)
!1083 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_N", value: 573, isUnsigned: true)
!1084 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_1", value: 574, isUnsigned: true)
!1085 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_2", value: 575, isUnsigned: true)
!1086 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_4", value: 576, isUnsigned: true)
!1087 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_8", value: 577, isUnsigned: true)
!1088 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_16", value: 578, isUnsigned: true)
!1089 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_N", value: 579, isUnsigned: true)
!1090 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_1", value: 580, isUnsigned: true)
!1091 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_2", value: 581, isUnsigned: true)
!1092 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_4", value: 582, isUnsigned: true)
!1093 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_8", value: 583, isUnsigned: true)
!1094 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_16", value: 584, isUnsigned: true)
!1095 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_N", value: 585, isUnsigned: true)
!1096 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_1", value: 586, isUnsigned: true)
!1097 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_2", value: 587, isUnsigned: true)
!1098 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_4", value: 588, isUnsigned: true)
!1099 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_8", value: 589, isUnsigned: true)
!1100 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_16", value: 590, isUnsigned: true)
!1101 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_N", value: 591, isUnsigned: true)
!1102 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_1", value: 592, isUnsigned: true)
!1103 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_2", value: 593, isUnsigned: true)
!1104 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_4", value: 594, isUnsigned: true)
!1105 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_8", value: 595, isUnsigned: true)
!1106 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_16", value: 596, isUnsigned: true)
!1107 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_N", value: 597, isUnsigned: true)
!1108 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_1", value: 598, isUnsigned: true)
!1109 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_2", value: 599, isUnsigned: true)
!1110 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_4", value: 600, isUnsigned: true)
!1111 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_8", value: 601, isUnsigned: true)
!1112 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_16", value: 602, isUnsigned: true)
!1113 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_N", value: 603, isUnsigned: true)
!1114 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_1", value: 604, isUnsigned: true)
!1115 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_2", value: 605, isUnsigned: true)
!1116 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_4", value: 606, isUnsigned: true)
!1117 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_8", value: 607, isUnsigned: true)
!1118 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_16", value: 608, isUnsigned: true)
!1119 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_N", value: 609, isUnsigned: true)
!1120 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_1", value: 610, isUnsigned: true)
!1121 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_2", value: 611, isUnsigned: true)
!1122 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_4", value: 612, isUnsigned: true)
!1123 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_8", value: 613, isUnsigned: true)
!1124 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_16", value: 614, isUnsigned: true)
!1125 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_N", value: 615, isUnsigned: true)
!1126 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_1", value: 616, isUnsigned: true)
!1127 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_2", value: 617, isUnsigned: true)
!1128 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_4", value: 618, isUnsigned: true)
!1129 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_8", value: 619, isUnsigned: true)
!1130 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_16", value: 620, isUnsigned: true)
!1131 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_N", value: 621, isUnsigned: true)
!1132 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_1", value: 622, isUnsigned: true)
!1133 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_2", value: 623, isUnsigned: true)
!1134 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_4", value: 624, isUnsigned: true)
!1135 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_8", value: 625, isUnsigned: true)
!1136 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_16", value: 626, isUnsigned: true)
!1137 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_N", value: 627, isUnsigned: true)
!1138 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_1", value: 628, isUnsigned: true)
!1139 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_2", value: 629, isUnsigned: true)
!1140 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_4", value: 630, isUnsigned: true)
!1141 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_8", value: 631, isUnsigned: true)
!1142 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_16", value: 632, isUnsigned: true)
!1143 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_N", value: 633, isUnsigned: true)
!1144 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_1", value: 634, isUnsigned: true)
!1145 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_2", value: 635, isUnsigned: true)
!1146 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_4", value: 636, isUnsigned: true)
!1147 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_8", value: 637, isUnsigned: true)
!1148 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_16", value: 638, isUnsigned: true)
!1149 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_N", value: 639, isUnsigned: true)
!1150 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_1", value: 640, isUnsigned: true)
!1151 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_2", value: 641, isUnsigned: true)
!1152 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_4", value: 642, isUnsigned: true)
!1153 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_8", value: 643, isUnsigned: true)
!1154 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_16", value: 644, isUnsigned: true)
!1155 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_N", value: 645, isUnsigned: true)
!1156 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_1", value: 646, isUnsigned: true)
!1157 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_2", value: 647, isUnsigned: true)
!1158 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_4", value: 648, isUnsigned: true)
!1159 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_8", value: 649, isUnsigned: true)
!1160 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_16", value: 650, isUnsigned: true)
!1161 = !DIEnumerator(name: "BUILT_IN_SYNCHRONIZE", value: 651, isUnsigned: true)
!1162 = !DIEnumerator(name: "BUILT_IN_OMP_GET_THREAD_NUM", value: 652, isUnsigned: true)
!1163 = !DIEnumerator(name: "BUILT_IN_OMP_GET_NUM_THREADS", value: 653, isUnsigned: true)
!1164 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_START", value: 654, isUnsigned: true)
!1165 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_END", value: 655, isUnsigned: true)
!1166 = !DIEnumerator(name: "BUILT_IN_GOMP_BARRIER", value: 656, isUnsigned: true)
!1167 = !DIEnumerator(name: "BUILT_IN_GOMP_TASKWAIT", value: 657, isUnsigned: true)
!1168 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_START", value: 658, isUnsigned: true)
!1169 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_END", value: 659, isUnsigned: true)
!1170 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_START", value: 660, isUnsigned: true)
!1171 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_END", value: 661, isUnsigned: true)
!1172 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_START", value: 662, isUnsigned: true)
!1173 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_START", value: 663, isUnsigned: true)
!1174 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_START", value: 664, isUnsigned: true)
!1175 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_START", value: 665, isUnsigned: true)
!1176 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START", value: 666, isUnsigned: true)
!1177 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START", value: 667, isUnsigned: true)
!1178 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START", value: 668, isUnsigned: true)
!1179 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START", value: 669, isUnsigned: true)
!1180 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_NEXT", value: 670, isUnsigned: true)
!1181 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT", value: 671, isUnsigned: true)
!1182 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_NEXT", value: 672, isUnsigned: true)
!1183 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_NEXT", value: 673, isUnsigned: true)
!1184 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT", value: 674, isUnsigned: true)
!1185 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT", value: 675, isUnsigned: true)
!1186 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT", value: 676, isUnsigned: true)
!1187 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT", value: 677, isUnsigned: true)
!1188 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_START", value: 678, isUnsigned: true)
!1189 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START", value: 679, isUnsigned: true)
!1190 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_START", value: 680, isUnsigned: true)
!1191 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START", value: 681, isUnsigned: true)
!1192 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START", value: 682, isUnsigned: true)
!1193 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START", value: 683, isUnsigned: true)
!1194 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START", value: 684, isUnsigned: true)
!1195 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START", value: 685, isUnsigned: true)
!1196 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT", value: 686, isUnsigned: true)
!1197 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT", value: 687, isUnsigned: true)
!1198 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT", value: 688, isUnsigned: true)
!1199 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT", value: 689, isUnsigned: true)
!1200 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT", value: 690, isUnsigned: true)
!1201 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT", value: 691, isUnsigned: true)
!1202 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT", value: 692, isUnsigned: true)
!1203 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT", value: 693, isUnsigned: true)
!1204 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_STATIC_START", value: 694, isUnsigned: true)
!1205 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC_START", value: 695, isUnsigned: true)
!1206 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED_START", value: 696, isUnsigned: true)
!1207 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME_START", value: 697, isUnsigned: true)
!1208 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END", value: 698, isUnsigned: true)
!1209 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END_NOWAIT", value: 699, isUnsigned: true)
!1210 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_START", value: 700, isUnsigned: true)
!1211 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_END", value: 701, isUnsigned: true)
!1212 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_START", value: 702, isUnsigned: true)
!1213 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_END", value: 703, isUnsigned: true)
!1214 = !DIEnumerator(name: "BUILT_IN_GOMP_TASK", value: 704, isUnsigned: true)
!1215 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_START", value: 705, isUnsigned: true)
!1216 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_NEXT", value: 706, isUnsigned: true)
!1217 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_SECTIONS_START", value: 707, isUnsigned: true)
!1218 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END", value: 708, isUnsigned: true)
!1219 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END_NOWAIT", value: 709, isUnsigned: true)
!1220 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_START", value: 710, isUnsigned: true)
!1221 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_START", value: 711, isUnsigned: true)
!1222 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_END", value: 712, isUnsigned: true)
!1223 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MIN", value: 713, isUnsigned: true)
!1224 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MAX", value: 716, isUnsigned: true)
!1225 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MIN", value: 717, isUnsigned: true)
!1226 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MAX", value: 720, isUnsigned: true)
!1227 = !DIEnumerator(name: "END_BUILTINS", value: 721, isUnsigned: true)
!1228 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code_class", file: !140, line: 58, baseType: !7, size: 32, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240}
!1230 = !DIEnumerator(name: "tcc_exceptional", value: 0, isUnsigned: true)
!1231 = !DIEnumerator(name: "tcc_constant", value: 1, isUnsigned: true)
!1232 = !DIEnumerator(name: "tcc_type", value: 2, isUnsigned: true)
!1233 = !DIEnumerator(name: "tcc_declaration", value: 3, isUnsigned: true)
!1234 = !DIEnumerator(name: "tcc_reference", value: 4, isUnsigned: true)
!1235 = !DIEnumerator(name: "tcc_comparison", value: 5, isUnsigned: true)
!1236 = !DIEnumerator(name: "tcc_unary", value: 6, isUnsigned: true)
!1237 = !DIEnumerator(name: "tcc_binary", value: 7, isUnsigned: true)
!1238 = !DIEnumerator(name: "tcc_statement", value: 8, isUnsigned: true)
!1239 = !DIEnumerator(name: "tcc_vl_exp", value: 9, isUnsigned: true)
!1240 = !DIEnumerator(name: "tcc_expression", value: 10, isUnsigned: true)
!1241 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_builtin_type", file: !3, line: 4487, baseType: !7, size: 32, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494}
!1243 = !DIEnumerator(name: "BT_VOID", value: 0, isUnsigned: true)
!1244 = !DIEnumerator(name: "BT_BOOL", value: 1, isUnsigned: true)
!1245 = !DIEnumerator(name: "BT_INT", value: 2, isUnsigned: true)
!1246 = !DIEnumerator(name: "BT_UINT", value: 3, isUnsigned: true)
!1247 = !DIEnumerator(name: "BT_LONG", value: 4, isUnsigned: true)
!1248 = !DIEnumerator(name: "BT_ULONG", value: 5, isUnsigned: true)
!1249 = !DIEnumerator(name: "BT_LONGLONG", value: 6, isUnsigned: true)
!1250 = !DIEnumerator(name: "BT_ULONGLONG", value: 7, isUnsigned: true)
!1251 = !DIEnumerator(name: "BT_INTMAX", value: 8, isUnsigned: true)
!1252 = !DIEnumerator(name: "BT_UINTMAX", value: 9, isUnsigned: true)
!1253 = !DIEnumerator(name: "BT_UINT32", value: 10, isUnsigned: true)
!1254 = !DIEnumerator(name: "BT_UINT64", value: 11, isUnsigned: true)
!1255 = !DIEnumerator(name: "BT_WORD", value: 12, isUnsigned: true)
!1256 = !DIEnumerator(name: "BT_UNWINDWORD", value: 13, isUnsigned: true)
!1257 = !DIEnumerator(name: "BT_FLOAT", value: 14, isUnsigned: true)
!1258 = !DIEnumerator(name: "BT_DOUBLE", value: 15, isUnsigned: true)
!1259 = !DIEnumerator(name: "BT_LONGDOUBLE", value: 16, isUnsigned: true)
!1260 = !DIEnumerator(name: "BT_COMPLEX_FLOAT", value: 17, isUnsigned: true)
!1261 = !DIEnumerator(name: "BT_COMPLEX_DOUBLE", value: 18, isUnsigned: true)
!1262 = !DIEnumerator(name: "BT_COMPLEX_LONGDOUBLE", value: 19, isUnsigned: true)
!1263 = !DIEnumerator(name: "BT_PTR", value: 20, isUnsigned: true)
!1264 = !DIEnumerator(name: "BT_FILEPTR", value: 21, isUnsigned: true)
!1265 = !DIEnumerator(name: "BT_CONST_PTR", value: 22, isUnsigned: true)
!1266 = !DIEnumerator(name: "BT_VOLATILE_PTR", value: 23, isUnsigned: true)
!1267 = !DIEnumerator(name: "BT_PTRMODE", value: 24, isUnsigned: true)
!1268 = !DIEnumerator(name: "BT_INT_PTR", value: 25, isUnsigned: true)
!1269 = !DIEnumerator(name: "BT_FLOAT_PTR", value: 26, isUnsigned: true)
!1270 = !DIEnumerator(name: "BT_DOUBLE_PTR", value: 27, isUnsigned: true)
!1271 = !DIEnumerator(name: "BT_LONGDOUBLE_PTR", value: 28, isUnsigned: true)
!1272 = !DIEnumerator(name: "BT_PID", value: 29, isUnsigned: true)
!1273 = !DIEnumerator(name: "BT_SIZE", value: 30, isUnsigned: true)
!1274 = !DIEnumerator(name: "BT_SSIZE", value: 31, isUnsigned: true)
!1275 = !DIEnumerator(name: "BT_WINT", value: 32, isUnsigned: true)
!1276 = !DIEnumerator(name: "BT_STRING", value: 33, isUnsigned: true)
!1277 = !DIEnumerator(name: "BT_CONST_STRING", value: 34, isUnsigned: true)
!1278 = !DIEnumerator(name: "BT_DFLOAT32", value: 35, isUnsigned: true)
!1279 = !DIEnumerator(name: "BT_DFLOAT64", value: 36, isUnsigned: true)
!1280 = !DIEnumerator(name: "BT_DFLOAT128", value: 37, isUnsigned: true)
!1281 = !DIEnumerator(name: "BT_DFLOAT32_PTR", value: 38, isUnsigned: true)
!1282 = !DIEnumerator(name: "BT_DFLOAT64_PTR", value: 39, isUnsigned: true)
!1283 = !DIEnumerator(name: "BT_DFLOAT128_PTR", value: 40, isUnsigned: true)
!1284 = !DIEnumerator(name: "BT_VALIST_REF", value: 41, isUnsigned: true)
!1285 = !DIEnumerator(name: "BT_VALIST_ARG", value: 42, isUnsigned: true)
!1286 = !DIEnumerator(name: "BT_I1", value: 43, isUnsigned: true)
!1287 = !DIEnumerator(name: "BT_I2", value: 44, isUnsigned: true)
!1288 = !DIEnumerator(name: "BT_I4", value: 45, isUnsigned: true)
!1289 = !DIEnumerator(name: "BT_I8", value: 46, isUnsigned: true)
!1290 = !DIEnumerator(name: "BT_I16", value: 47, isUnsigned: true)
!1291 = !DIEnumerator(name: "BT_PTR_CONST_STRING", value: 48, isUnsigned: true)
!1292 = !DIEnumerator(name: "BT_PTR_LONG", value: 49, isUnsigned: true)
!1293 = !DIEnumerator(name: "BT_PTR_ULONGLONG", value: 50, isUnsigned: true)
!1294 = !DIEnumerator(name: "BT_PTR_PTR", value: 51, isUnsigned: true)
!1295 = !DIEnumerator(name: "BT_FN_VOID", value: 52, isUnsigned: true)
!1296 = !DIEnumerator(name: "BT_FN_BOOL", value: 53, isUnsigned: true)
!1297 = !DIEnumerator(name: "BT_FN_PTR", value: 54, isUnsigned: true)
!1298 = !DIEnumerator(name: "BT_FN_PID", value: 55, isUnsigned: true)
!1299 = !DIEnumerator(name: "BT_FN_INT", value: 56, isUnsigned: true)
!1300 = !DIEnumerator(name: "BT_FN_UINT", value: 57, isUnsigned: true)
!1301 = !DIEnumerator(name: "BT_FN_FLOAT", value: 58, isUnsigned: true)
!1302 = !DIEnumerator(name: "BT_FN_DOUBLE", value: 59, isUnsigned: true)
!1303 = !DIEnumerator(name: "BT_FN_LONGDOUBLE", value: 60, isUnsigned: true)
!1304 = !DIEnumerator(name: "BT_FN_DFLOAT32", value: 61, isUnsigned: true)
!1305 = !DIEnumerator(name: "BT_FN_DFLOAT64", value: 62, isUnsigned: true)
!1306 = !DIEnumerator(name: "BT_FN_DFLOAT128", value: 63, isUnsigned: true)
!1307 = !DIEnumerator(name: "BT_FN_LONG_LONG", value: 64, isUnsigned: true)
!1308 = !DIEnumerator(name: "BT_FN_LONGLONG_LONGLONG", value: 65, isUnsigned: true)
!1309 = !DIEnumerator(name: "BT_FN_INTMAX_INTMAX", value: 66, isUnsigned: true)
!1310 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT", value: 67, isUnsigned: true)
!1311 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE", value: 68, isUnsigned: true)
!1312 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_LONGDOUBLE", value: 69, isUnsigned: true)
!1313 = !DIEnumerator(name: "BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT", value: 70, isUnsigned: true)
!1314 = !DIEnumerator(name: "BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE", value: 71, isUnsigned: true)
!1315 = !DIEnumerator(name: "BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE", value: 72, isUnsigned: true)
!1316 = !DIEnumerator(name: "BT_FN_FLOAT_COMPLEX_FLOAT", value: 73, isUnsigned: true)
!1317 = !DIEnumerator(name: "BT_FN_DOUBLE_COMPLEX_DOUBLE", value: 74, isUnsigned: true)
!1318 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE", value: 75, isUnsigned: true)
!1319 = !DIEnumerator(name: "BT_FN_COMPLEX_FLOAT_FLOAT", value: 76, isUnsigned: true)
!1320 = !DIEnumerator(name: "BT_FN_COMPLEX_DOUBLE_DOUBLE", value: 77, isUnsigned: true)
!1321 = !DIEnumerator(name: "BT_FN_COMPLEX_LONGDOUBLE_LONGDOUBLE", value: 78, isUnsigned: true)
!1322 = !DIEnumerator(name: "BT_FN_PTR_UINT", value: 79, isUnsigned: true)
!1323 = !DIEnumerator(name: "BT_FN_PTR_SIZE", value: 80, isUnsigned: true)
!1324 = !DIEnumerator(name: "BT_FN_INT_INT", value: 81, isUnsigned: true)
!1325 = !DIEnumerator(name: "BT_FN_INT_UINT", value: 82, isUnsigned: true)
!1326 = !DIEnumerator(name: "BT_FN_INT_LONG", value: 83, isUnsigned: true)
!1327 = !DIEnumerator(name: "BT_FN_INT_ULONG", value: 84, isUnsigned: true)
!1328 = !DIEnumerator(name: "BT_FN_INT_LONGLONG", value: 85, isUnsigned: true)
!1329 = !DIEnumerator(name: "BT_FN_INT_ULONGLONG", value: 86, isUnsigned: true)
!1330 = !DIEnumerator(name: "BT_FN_INT_INTMAX", value: 87, isUnsigned: true)
!1331 = !DIEnumerator(name: "BT_FN_INT_UINTMAX", value: 88, isUnsigned: true)
!1332 = !DIEnumerator(name: "BT_FN_INT_PTR", value: 89, isUnsigned: true)
!1333 = !DIEnumerator(name: "BT_FN_INT_FLOAT", value: 90, isUnsigned: true)
!1334 = !DIEnumerator(name: "BT_FN_INT_DOUBLE", value: 91, isUnsigned: true)
!1335 = !DIEnumerator(name: "BT_FN_INT_LONGDOUBLE", value: 92, isUnsigned: true)
!1336 = !DIEnumerator(name: "BT_FN_INT_DFLOAT32", value: 93, isUnsigned: true)
!1337 = !DIEnumerator(name: "BT_FN_INT_DFLOAT64", value: 94, isUnsigned: true)
!1338 = !DIEnumerator(name: "BT_FN_INT_DFLOAT128", value: 95, isUnsigned: true)
!1339 = !DIEnumerator(name: "BT_FN_LONG_FLOAT", value: 96, isUnsigned: true)
!1340 = !DIEnumerator(name: "BT_FN_LONG_DOUBLE", value: 97, isUnsigned: true)
!1341 = !DIEnumerator(name: "BT_FN_LONG_LONGDOUBLE", value: 98, isUnsigned: true)
!1342 = !DIEnumerator(name: "BT_FN_LONGLONG_FLOAT", value: 99, isUnsigned: true)
!1343 = !DIEnumerator(name: "BT_FN_LONGLONG_DOUBLE", value: 100, isUnsigned: true)
!1344 = !DIEnumerator(name: "BT_FN_LONGLONG_LONGDOUBLE", value: 101, isUnsigned: true)
!1345 = !DIEnumerator(name: "BT_FN_VOID_PTR", value: 102, isUnsigned: true)
!1346 = !DIEnumerator(name: "BT_FN_SIZE_CONST_STRING", value: 103, isUnsigned: true)
!1347 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING", value: 104, isUnsigned: true)
!1348 = !DIEnumerator(name: "BT_FN_PTR_PTR", value: 105, isUnsigned: true)
!1349 = !DIEnumerator(name: "BT_FN_VOID_VALIST_REF", value: 106, isUnsigned: true)
!1350 = !DIEnumerator(name: "BT_FN_VOID_INT", value: 107, isUnsigned: true)
!1351 = !DIEnumerator(name: "BT_FN_FLOAT_CONST_STRING", value: 108, isUnsigned: true)
!1352 = !DIEnumerator(name: "BT_FN_DOUBLE_CONST_STRING", value: 109, isUnsigned: true)
!1353 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_CONST_STRING", value: 110, isUnsigned: true)
!1354 = !DIEnumerator(name: "BT_FN_DFLOAT32_CONST_STRING", value: 111, isUnsigned: true)
!1355 = !DIEnumerator(name: "BT_FN_DFLOAT64_CONST_STRING", value: 112, isUnsigned: true)
!1356 = !DIEnumerator(name: "BT_FN_DFLOAT128_CONST_STRING", value: 113, isUnsigned: true)
!1357 = !DIEnumerator(name: "BT_FN_STRING_CONST_STRING", value: 114, isUnsigned: true)
!1358 = !DIEnumerator(name: "BT_FN_UNWINDWORD_PTR", value: 115, isUnsigned: true)
!1359 = !DIEnumerator(name: "BT_FN_INT_WINT", value: 116, isUnsigned: true)
!1360 = !DIEnumerator(name: "BT_FN_WINT_WINT", value: 117, isUnsigned: true)
!1361 = !DIEnumerator(name: "BT_FN_DFLOAT32_DFLOAT32", value: 118, isUnsigned: true)
!1362 = !DIEnumerator(name: "BT_FN_DFLOAT64_DFLOAT64", value: 119, isUnsigned: true)
!1363 = !DIEnumerator(name: "BT_FN_DFLOAT128_DFLOAT128", value: 120, isUnsigned: true)
!1364 = !DIEnumerator(name: "BT_FN_VOID_VPTR", value: 121, isUnsigned: true)
!1365 = !DIEnumerator(name: "BT_FN_VOID_PTRPTR", value: 122, isUnsigned: true)
!1366 = !DIEnumerator(name: "BT_FN_UINT_UINT", value: 123, isUnsigned: true)
!1367 = !DIEnumerator(name: "BT_FN_ULONG_ULONG", value: 124, isUnsigned: true)
!1368 = !DIEnumerator(name: "BT_FN_ULONGLONG_ULONGLONG", value: 125, isUnsigned: true)
!1369 = !DIEnumerator(name: "BT_FN_UINT32_UINT32", value: 126, isUnsigned: true)
!1370 = !DIEnumerator(name: "BT_FN_UINT64_UINT64", value: 127, isUnsigned: true)
!1371 = !DIEnumerator(name: "BT_PTR_FN_VOID_PTR", value: 128, isUnsigned: true)
!1372 = !DIEnumerator(name: "BT_FN_VOID_PTR_INT", value: 129, isUnsigned: true)
!1373 = !DIEnumerator(name: "BT_FN_STRING_STRING_CONST_STRING", value: 130, isUnsigned: true)
!1374 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_CONST_STRING", value: 131, isUnsigned: true)
!1375 = !DIEnumerator(name: "BT_FN_STRING_CONST_STRING_CONST_STRING", value: 132, isUnsigned: true)
!1376 = !DIEnumerator(name: "BT_FN_SIZE_CONST_STRING_CONST_STRING", value: 133, isUnsigned: true)
!1377 = !DIEnumerator(name: "BT_FN_STRING_CONST_STRING_INT", value: 134, isUnsigned: true)
!1378 = !DIEnumerator(name: "BT_FN_STRING_CONST_STRING_SIZE", value: 135, isUnsigned: true)
!1379 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_FILEPTR", value: 136, isUnsigned: true)
!1380 = !DIEnumerator(name: "BT_FN_INT_INT_FILEPTR", value: 137, isUnsigned: true)
!1381 = !DIEnumerator(name: "BT_FN_VOID_PTRMODE_PTR", value: 138, isUnsigned: true)
!1382 = !DIEnumerator(name: "BT_FN_VOID_VALIST_REF_VALIST_ARG", value: 139, isUnsigned: true)
!1383 = !DIEnumerator(name: "BT_FN_LONG_LONG_LONG", value: 140, isUnsigned: true)
!1384 = !DIEnumerator(name: "BT_FN_INT_PTR_CONST_STRING", value: 141, isUnsigned: true)
!1385 = !DIEnumerator(name: "BT_FN_VOID_PTR_SIZE", value: 142, isUnsigned: true)
!1386 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT_FLOAT", value: 143, isUnsigned: true)
!1387 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE_DOUBLE", value: 144, isUnsigned: true)
!1388 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_LONGDOUBLE_LONGDOUBLE", value: 145, isUnsigned: true)
!1389 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT_FLOATPTR", value: 146, isUnsigned: true)
!1390 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE_DOUBLEPTR", value: 147, isUnsigned: true)
!1391 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_LONGDOUBLE_LONGDOUBLEPTR", value: 148, isUnsigned: true)
!1392 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT_LONGDOUBLE", value: 149, isUnsigned: true)
!1393 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE_LONGDOUBLE", value: 150, isUnsigned: true)
!1394 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT_INT", value: 151, isUnsigned: true)
!1395 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE_INT", value: 152, isUnsigned: true)
!1396 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_LONGDOUBLE_INT", value: 153, isUnsigned: true)
!1397 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT_INTPTR", value: 154, isUnsigned: true)
!1398 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE_INTPTR", value: 155, isUnsigned: true)
!1399 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_LONGDOUBLE_INTPTR", value: 156, isUnsigned: true)
!1400 = !DIEnumerator(name: "BT_FN_FLOAT_INT_FLOAT", value: 157, isUnsigned: true)
!1401 = !DIEnumerator(name: "BT_FN_DOUBLE_INT_DOUBLE", value: 158, isUnsigned: true)
!1402 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_INT_LONGDOUBLE", value: 159, isUnsigned: true)
!1403 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT_LONG", value: 160, isUnsigned: true)
!1404 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE_LONG", value: 161, isUnsigned: true)
!1405 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_LONGDOUBLE_LONG", value: 162, isUnsigned: true)
!1406 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_VALIST_ARG", value: 163, isUnsigned: true)
!1407 = !DIEnumerator(name: "BT_FN_PTR_SIZE_SIZE", value: 164, isUnsigned: true)
!1408 = !DIEnumerator(name: "BT_FN_PTR_PTR_SIZE", value: 165, isUnsigned: true)
!1409 = !DIEnumerator(name: "BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT_COMPLEX_FLOAT", value: 166, isUnsigned: true)
!1410 = !DIEnumerator(name: "BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE_COMPLEX_DOUBLE", value: 167, isUnsigned: true)
!1411 = !DIEnumerator(name: "BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE", value: 168, isUnsigned: true)
!1412 = !DIEnumerator(name: "BT_FN_VOID_PTR_PTR", value: 169, isUnsigned: true)
!1413 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_PTR_CONST_STRING", value: 170, isUnsigned: true)
!1414 = !DIEnumerator(name: "BT_FN_SIZE_CONST_PTR_INT", value: 171, isUnsigned: true)
!1415 = !DIEnumerator(name: "BT_FN_I1_VPTR_I1", value: 172, isUnsigned: true)
!1416 = !DIEnumerator(name: "BT_FN_I2_VPTR_I2", value: 173, isUnsigned: true)
!1417 = !DIEnumerator(name: "BT_FN_I4_VPTR_I4", value: 174, isUnsigned: true)
!1418 = !DIEnumerator(name: "BT_FN_I8_VPTR_I8", value: 175, isUnsigned: true)
!1419 = !DIEnumerator(name: "BT_FN_I16_VPTR_I16", value: 176, isUnsigned: true)
!1420 = !DIEnumerator(name: "BT_FN_BOOL_LONGPTR_LONGPTR", value: 177, isUnsigned: true)
!1421 = !DIEnumerator(name: "BT_FN_BOOL_ULONGLONGPTR_ULONGLONGPTR", value: 178, isUnsigned: true)
!1422 = !DIEnumerator(name: "BT_PTR_FN_VOID_PTR_PTR", value: 179, isUnsigned: true)
!1423 = !DIEnumerator(name: "BT_FN_STRING_STRING_CONST_STRING_SIZE", value: 180, isUnsigned: true)
!1424 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_CONST_STRING_SIZE", value: 181, isUnsigned: true)
!1425 = !DIEnumerator(name: "BT_FN_PTR_PTR_CONST_PTR_SIZE", value: 182, isUnsigned: true)
!1426 = !DIEnumerator(name: "BT_FN_INT_CONST_PTR_CONST_PTR_SIZE", value: 183, isUnsigned: true)
!1427 = !DIEnumerator(name: "BT_FN_PTR_PTR_INT_SIZE", value: 184, isUnsigned: true)
!1428 = !DIEnumerator(name: "BT_FN_VOID_PTR_INT_INT", value: 185, isUnsigned: true)
!1429 = !DIEnumerator(name: "BT_FN_VOID_CONST_PTR_PTR_SIZE", value: 186, isUnsigned: true)
!1430 = !DIEnumerator(name: "BT_FN_INT_STRING_CONST_STRING_VALIST_ARG", value: 187, isUnsigned: true)
!1431 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_CONST_STRING_VALIST_ARG", value: 188, isUnsigned: true)
!1432 = !DIEnumerator(name: "BT_FN_INT_FILEPTR_CONST_STRING_VALIST_ARG", value: 189, isUnsigned: true)
!1433 = !DIEnumerator(name: "BT_FN_STRING_CONST_STRING_CONST_STRING_INT", value: 190, isUnsigned: true)
!1434 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT_FLOAT_FLOAT", value: 191, isUnsigned: true)
!1435 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE_DOUBLE_DOUBLE", value: 192, isUnsigned: true)
!1436 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_LONGDOUBLE_LONGDOUBLE_LONGDOUBLE", value: 193, isUnsigned: true)
!1437 = !DIEnumerator(name: "BT_FN_FLOAT_FLOAT_FLOAT_INTPTR", value: 194, isUnsigned: true)
!1438 = !DIEnumerator(name: "BT_FN_DOUBLE_DOUBLE_DOUBLE_INTPTR", value: 195, isUnsigned: true)
!1439 = !DIEnumerator(name: "BT_FN_LONGDOUBLE_LONGDOUBLE_LONGDOUBLE_INTPTR", value: 196, isUnsigned: true)
!1440 = !DIEnumerator(name: "BT_FN_VOID_FLOAT_FLOATPTR_FLOATPTR", value: 197, isUnsigned: true)
!1441 = !DIEnumerator(name: "BT_FN_VOID_DOUBLE_DOUBLEPTR_DOUBLEPTR", value: 198, isUnsigned: true)
!1442 = !DIEnumerator(name: "BT_FN_VOID_LONGDOUBLE_LONGDOUBLEPTR_LONGDOUBLEPTR", value: 199, isUnsigned: true)
!1443 = !DIEnumerator(name: "BT_FN_VOID_PTR_PTR_PTR", value: 200, isUnsigned: true)
!1444 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_PTR_CONST_STRING_PTR_CONST_STRING", value: 201, isUnsigned: true)
!1445 = !DIEnumerator(name: "BT_FN_INT_INT_CONST_STRING_VALIST_ARG", value: 202, isUnsigned: true)
!1446 = !DIEnumerator(name: "BT_FN_BOOL_VPTR_I1_I1", value: 203, isUnsigned: true)
!1447 = !DIEnumerator(name: "BT_FN_BOOL_VPTR_I2_I2", value: 204, isUnsigned: true)
!1448 = !DIEnumerator(name: "BT_FN_BOOL_VPTR_I4_I4", value: 205, isUnsigned: true)
!1449 = !DIEnumerator(name: "BT_FN_BOOL_VPTR_I8_I8", value: 206, isUnsigned: true)
!1450 = !DIEnumerator(name: "BT_FN_BOOL_VPTR_I16_I16", value: 207, isUnsigned: true)
!1451 = !DIEnumerator(name: "BT_FN_I1_VPTR_I1_I1", value: 208, isUnsigned: true)
!1452 = !DIEnumerator(name: "BT_FN_I2_VPTR_I2_I2", value: 209, isUnsigned: true)
!1453 = !DIEnumerator(name: "BT_FN_I4_VPTR_I4_I4", value: 210, isUnsigned: true)
!1454 = !DIEnumerator(name: "BT_FN_I8_VPTR_I8_I8", value: 211, isUnsigned: true)
!1455 = !DIEnumerator(name: "BT_FN_I16_VPTR_I16_I16", value: 212, isUnsigned: true)
!1456 = !DIEnumerator(name: "BT_FN_VOID_OMPFN_PTR_UINT", value: 213, isUnsigned: true)
!1457 = !DIEnumerator(name: "BT_FN_PTR_CONST_PTR_INT_SIZE", value: 214, isUnsigned: true)
!1458 = !DIEnumerator(name: "BT_FN_SIZE_CONST_PTR_SIZE_SIZE_FILEPTR", value: 215, isUnsigned: true)
!1459 = !DIEnumerator(name: "BT_FN_INT_STRING_SIZE_CONST_STRING_VALIST_ARG", value: 216, isUnsigned: true)
!1460 = !DIEnumerator(name: "BT_FN_SIZE_STRING_SIZE_CONST_STRING_CONST_PTR", value: 217, isUnsigned: true)
!1461 = !DIEnumerator(name: "BT_FN_PTR_PTR_CONST_PTR_SIZE_SIZE", value: 218, isUnsigned: true)
!1462 = !DIEnumerator(name: "BT_FN_PTR_PTR_INT_SIZE_SIZE", value: 219, isUnsigned: true)
!1463 = !DIEnumerator(name: "BT_FN_STRING_STRING_CONST_STRING_SIZE_SIZE", value: 220, isUnsigned: true)
!1464 = !DIEnumerator(name: "BT_FN_INT_FILEPTR_INT_CONST_STRING_VALIST_ARG", value: 221, isUnsigned: true)
!1465 = !DIEnumerator(name: "BT_FN_VOID_OMPFN_PTR_UINT_UINT", value: 222, isUnsigned: true)
!1466 = !DIEnumerator(name: "BT_FN_VOID_PTR_WORD_WORD_PTR", value: 223, isUnsigned: true)
!1467 = !DIEnumerator(name: "BT_FN_INT_STRING_INT_SIZE_CONST_STRING_VALIST_ARG", value: 224, isUnsigned: true)
!1468 = !DIEnumerator(name: "BT_FN_BOOL_LONG_LONG_LONG_LONGPTR_LONGPTR", value: 225, isUnsigned: true)
!1469 = !DIEnumerator(name: "BT_FN_INT_STRING_SIZE_INT_SIZE_CONST_STRING_VALIST_ARG", value: 226, isUnsigned: true)
!1470 = !DIEnumerator(name: "BT_FN_BOOL_LONG_LONG_LONG_LONG_LONGPTR_LONGPTR", value: 227, isUnsigned: true)
!1471 = !DIEnumerator(name: "BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG", value: 228, isUnsigned: true)
!1472 = !DIEnumerator(name: "BT_FN_BOOL_BOOL_ULL_ULL_ULL_ULLPTR_ULLPTR", value: 229, isUnsigned: true)
!1473 = !DIEnumerator(name: "BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG_LONG", value: 230, isUnsigned: true)
!1474 = !DIEnumerator(name: "BT_FN_VOID_OMPFN_PTR_OMPCPYFN_LONG_LONG_BOOL_UINT", value: 231, isUnsigned: true)
!1475 = !DIEnumerator(name: "BT_FN_BOOL_BOOL_ULL_ULL_ULL_ULL_ULLPTR_ULLPTR", value: 232, isUnsigned: true)
!1476 = !DIEnumerator(name: "BT_FN_VOID_VAR", value: 233, isUnsigned: true)
!1477 = !DIEnumerator(name: "BT_FN_INT_VAR", value: 234, isUnsigned: true)
!1478 = !DIEnumerator(name: "BT_FN_PTR_VAR", value: 235, isUnsigned: true)
!1479 = !DIEnumerator(name: "BT_FN_VOID_VALIST_REF_VAR", value: 236, isUnsigned: true)
!1480 = !DIEnumerator(name: "BT_FN_VOID_CONST_PTR_VAR", value: 237, isUnsigned: true)
!1481 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_VAR", value: 238, isUnsigned: true)
!1482 = !DIEnumerator(name: "BT_FN_INT_FILEPTR_CONST_STRING_VAR", value: 239, isUnsigned: true)
!1483 = !DIEnumerator(name: "BT_FN_INT_STRING_CONST_STRING_VAR", value: 240, isUnsigned: true)
!1484 = !DIEnumerator(name: "BT_FN_INT_CONST_STRING_CONST_STRING_VAR", value: 241, isUnsigned: true)
!1485 = !DIEnumerator(name: "BT_FN_INT_INT_CONST_STRING_VAR", value: 242, isUnsigned: true)
!1486 = !DIEnumerator(name: "BT_FN_INT_STRING_SIZE_CONST_STRING_VAR", value: 243, isUnsigned: true)
!1487 = !DIEnumerator(name: "BT_FN_SSIZE_STRING_SIZE_CONST_STRING_VAR", value: 244, isUnsigned: true)
!1488 = !DIEnumerator(name: "BT_FN_INT_FILEPTR_INT_CONST_STRING_VAR", value: 245, isUnsigned: true)
!1489 = !DIEnumerator(name: "BT_FN_INT_STRING_INT_SIZE_CONST_STRING_VAR", value: 246, isUnsigned: true)
!1490 = !DIEnumerator(name: "BT_FN_INT_STRING_SIZE_INT_SIZE_CONST_STRING_VAR", value: 247, isUnsigned: true)
!1491 = !DIEnumerator(name: "BT_FN_INT_INT_INT_INT_INT_INT_VAR", value: 248, isUnsigned: true)
!1492 = !DIEnumerator(name: "BT_PTR_FN_VOID_VAR", value: 249, isUnsigned: true)
!1493 = !DIEnumerator(name: "BT_FN_PTR_PTR_FN_VOID_VAR_PTR_SIZE", value: 250, isUnsigned: true)
!1494 = !DIEnumerator(name: "BT_LAST", value: 251, isUnsigned: true)
!1495 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "built_in_class", file: !140, line: 205, baseType: !7, size: 32, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500}
!1497 = !DIEnumerator(name: "NOT_BUILT_IN", value: 0, isUnsigned: true)
!1498 = !DIEnumerator(name: "BUILT_IN_FRONTEND", value: 1, isUnsigned: true)
!1499 = !DIEnumerator(name: "BUILT_IN_MD", value: 2, isUnsigned: true)
!1500 = !DIEnumerator(name: "BUILT_IN_NORMAL", value: 3, isUnsigned: true)
!1501 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "symbol_visibility", file: !140, line: 2465, baseType: !7, size: 32, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506}
!1503 = !DIEnumerator(name: "VISIBILITY_DEFAULT", value: 0, isUnsigned: true)
!1504 = !DIEnumerator(name: "VISIBILITY_PROTECTED", value: 1, isUnsigned: true)
!1505 = !DIEnumerator(name: "VISIBILITY_HIDDEN", value: 2, isUnsigned: true)
!1506 = !DIEnumerator(name: "VISIBILITY_INTERNAL", value: 3, isUnsigned: true)
!1507 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tls_model", file: !1508, line: 97, baseType: !7, size: 32, elements: !1509)
!1508 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1509 = !{!1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1510 = !DIEnumerator(name: "TLS_MODEL_NONE", value: 0, isUnsigned: true)
!1511 = !DIEnumerator(name: "TLS_MODEL_EMULATED", value: 1, isUnsigned: true)
!1512 = !DIEnumerator(name: "TLS_MODEL_REAL", value: 2, isUnsigned: true)
!1513 = !DIEnumerator(name: "TLS_MODEL_GLOBAL_DYNAMIC", value: 2, isUnsigned: true)
!1514 = !DIEnumerator(name: "TLS_MODEL_LOCAL_DYNAMIC", value: 3, isUnsigned: true)
!1515 = !DIEnumerator(name: "TLS_MODEL_INITIAL_EXEC", value: 4, isUnsigned: true)
!1516 = !DIEnumerator(name: "TLS_MODEL_LOCAL_EXEC", value: 5, isUnsigned: true)
!1517 = !{!1518, !1519, !1520, !1521, !1524, !1525, !1527, !139, !1522, !1653, !1528, !2791, !1580, !2793, !2328, !2796, !11, !382, !2322, !2797, !2804, !2807, !1582, !2808, !2809, !2811, !2816, !2817, !2818, !1997, !2830, !2842, !2847, !2855, !2856, !2857, !7, !2519, !2859}
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1520 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !1508, line: 56, baseType: !1528)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !140, line: 3371, size: 1792, elements: !1530)
!1530 = !{!1531, !1564, !1570, !1583, !1602, !1613, !1618, !1627, !1633, !1646, !1658, !1696, !2189, !2217, !2225, !2226, !2231, !2240, !2246, !2251, !2255, !2259, !2433, !2480, !2486, !2492, !2499, !2510, !2535, !2552, !2564, !2586, !2601, !2773}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1529, file: !140, line: 3372, baseType: !1532, size: 64)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !140, line: 360, size: 64, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1532, file: !140, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1532, file: !140, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1532, file: !140, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1532, file: !140, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1532, file: !140, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1532, file: !140, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1532, file: !140, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1532, file: !140, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1532, file: !140, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1532, file: !140, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1532, file: !140, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1532, file: !140, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1532, file: !140, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1532, file: !140, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1532, file: !140, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1532, file: !140, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1532, file: !140, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1532, file: !140, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1532, file: !140, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1532, file: !140, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1532, file: !140, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1532, file: !140, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1532, file: !140, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1532, file: !140, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1532, file: !140, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1532, file: !140, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1532, file: !140, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1532, file: !140, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1532, file: !140, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1532, file: !140, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1529, file: !140, line: 3373, baseType: !1565, size: 192)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !140, line: 402, size: 192, elements: !1566)
!1566 = !{!1567, !1568, !1569}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1565, file: !140, line: 403, baseType: !1532, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1565, file: !140, line: 404, baseType: !1527, size: 64, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1565, file: !140, line: 405, baseType: !1527, size: 64, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1529, file: !140, line: 3374, baseType: !1571, size: 320)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !140, line: 1384, size: 320, elements: !1572)
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1571, file: !140, line: 1385, baseType: !1565, size: 192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1571, file: !140, line: 1386, baseType: !1575, size: 128, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1576, line: 58, baseType: !1577)
!1576 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1576, line: 54, size: 128, elements: !1578)
!1578 = !{!1579, !1581}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1577, file: !1576, line: 56, baseType: !1580, size: 64)
!1580 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1577, file: !1576, line: 57, baseType: !1582, size: 64, offset: 64)
!1582 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1529, file: !140, line: 3375, baseType: !1584, size: 256)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !140, line: 1397, size: 256, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1584, file: !140, line: 1398, baseType: !1565, size: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1584, file: !140, line: 1399, baseType: !1588, size: 64, offset: 192)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1590, line: 52, size: 256, elements: !1591)
!1590 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1591 = !{!1592, !1593, !1594, !1595, !1596, !1597, !1598}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1589, file: !1590, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1589, file: !1590, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1589, file: !1590, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1589, file: !1590, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1589, file: !1590, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1589, file: !1590, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1589, file: !1590, line: 62, baseType: !1599, size: 192, offset: 64)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1580, size: 192, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 3)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1529, file: !140, line: 3376, baseType: !1603, size: 256)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !140, line: 1408, size: 256, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1603, file: !140, line: 1409, baseType: !1565, size: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1603, file: !140, line: 1410, baseType: !1607, size: 64, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1609, line: 27, size: 192, elements: !1610)
!1609 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1610 = !{!1611, !1612}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1608, file: !1609, line: 29, baseType: !1575, size: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1608, file: !1609, line: 30, baseType: !11, size: 32, offset: 128)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1529, file: !140, line: 3377, baseType: !1614, size: 256)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !140, line: 1437, size: 256, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1614, file: !140, line: 1438, baseType: !1565, size: 192)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1614, file: !140, line: 1439, baseType: !1527, size: 64, offset: 192)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1529, file: !140, line: 3378, baseType: !1619, size: 256)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !140, line: 1418, size: 256, elements: !1620)
!1620 = !{!1621, !1622, !1623}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1619, file: !140, line: 1419, baseType: !1565, size: 192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1619, file: !140, line: 1420, baseType: !1520, size: 32, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1619, file: !140, line: 1421, baseType: !1624, size: 8, offset: 224)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 8, elements: !1625)
!1625 = !{!1626}
!1626 = !DISubrange(count: 1)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1529, file: !140, line: 3379, baseType: !1628, size: 320)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !140, line: 1428, size: 320, elements: !1629)
!1629 = !{!1630, !1631, !1632}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1628, file: !140, line: 1429, baseType: !1565, size: 192)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1628, file: !140, line: 1430, baseType: !1527, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1628, file: !140, line: 1431, baseType: !1527, size: 64, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1529, file: !140, line: 3380, baseType: !1634, size: 320)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !140, line: 1460, size: 320, elements: !1635)
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1634, file: !140, line: 1461, baseType: !1565, size: 192)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1634, file: !140, line: 1462, baseType: !1638, size: 128, offset: 192)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1639, line: 31, size: 128, elements: !1640)
!1639 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1640 = !{!1641, !1644, !1645}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1638, file: !1639, line: 32, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1638, file: !1639, line: 33, baseType: !7, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1638, file: !1639, line: 34, baseType: !7, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1529, file: !140, line: 3381, baseType: !1647, size: 384)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !140, line: 2507, size: 384, elements: !1648)
!1648 = !{!1649, !1650, !1655, !1656, !1657}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1647, file: !140, line: 2508, baseType: !1565, size: 192)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1647, file: !140, line: 2509, baseType: !1651, size: 32, offset: 192)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1652, line: 58, baseType: !1653)
!1652 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1654, line: 44, baseType: !7)
!1654 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1647, file: !140, line: 2510, baseType: !7, size: 32, offset: 224)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1647, file: !140, line: 2511, baseType: !1527, size: 64, offset: 256)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1647, file: !140, line: 2512, baseType: !1527, size: 64, offset: 320)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1529, file: !140, line: 3382, baseType: !1659, size: 896)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !140, line: 2652, size: 896, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1659, file: !140, line: 2653, baseType: !1647, size: 384)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1659, file: !140, line: 2654, baseType: !1527, size: 64, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1659, file: !140, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1659, file: !140, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1659, file: !140, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1659, file: !140, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1659, file: !140, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1659, file: !140, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1659, file: !140, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1659, file: !140, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1659, file: !140, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1659, file: !140, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1659, file: !140, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1659, file: !140, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1659, file: !140, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1659, file: !140, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1659, file: !140, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1659, file: !140, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1659, file: !140, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1659, file: !140, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1659, file: !140, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1659, file: !140, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1659, file: !140, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1659, file: !140, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1659, file: !140, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1659, file: !140, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1659, file: !140, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1659, file: !140, line: 2703, baseType: !7, size: 32, offset: 512)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1659, file: !140, line: 2705, baseType: !1527, size: 64, offset: 576)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1659, file: !140, line: 2706, baseType: !1527, size: 64, offset: 640)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1659, file: !140, line: 2707, baseType: !1527, size: 64, offset: 704)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1659, file: !140, line: 2708, baseType: !1527, size: 64, offset: 768)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1659, file: !140, line: 2711, baseType: !1694, size: 64, offset: 832)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !140, line: 2711, flags: DIFlagFwdDecl)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1529, file: !140, line: 3383, baseType: !1697, size: 960)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !140, line: 2756, size: 960, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1697, file: !140, line: 2757, baseType: !1659, size: 896)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1697, file: !140, line: 2758, baseType: !1701, size: 64, offset: 896)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !1508, line: 50, baseType: !1702)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !1704, line: 240, size: 384, elements: !1705)
!1704 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1703, file: !1704, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1703, file: !1704, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !1703, file: !1704, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1703, file: !1704, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !1703, file: !1704, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !1703, file: !1704, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !1703, file: !1704, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1703, file: !1704, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !1703, file: !1704, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !1703, file: !1704, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1703, file: !1704, line: 321, baseType: !1717, size: 320, offset: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !1704, line: 315, size: 320, elements: !1718)
!1718 = !{!1719, !2122, !2124, !2187, !2188}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1717, file: !1704, line: 316, baseType: !1720, size: 64)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1721, size: 64, elements: !1625)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !1704, line: 183, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !1704, line: 166, size: 64, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1728, !1736, !1737, !1749, !1752, !1812, !1813, !2099, !2112, !2119}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !1722, file: !1704, line: 168, baseType: !1520, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !1722, file: !1704, line: 169, baseType: !7, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !1722, file: !1704, line: 170, baseType: !1525, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !1722, file: !1704, line: 171, baseType: !1701, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !1722, file: !1704, line: 172, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !1508, line: 53, baseType: !1730)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !1704, line: 359, size: 128, elements: !1732)
!1732 = !{!1733, !1734}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !1731, file: !1704, line: 360, baseType: !1520, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1731, file: !1704, line: 361, baseType: !1735, size: 64, offset: 64)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 64, elements: !1625)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !1722, file: !1704, line: 173, baseType: !11, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !1722, file: !1704, line: 174, baseType: !1738, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !1704, line: 133, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1704, line: 115, size: 32, elements: !1740)
!1740 = !{!1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !1739, file: !1704, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !1739, file: !1704, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !1739, file: !1704, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !1739, file: !1704, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !1739, file: !1704, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !1739, file: !1704, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !1739, file: !1704, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1739, file: !1704, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !1722, file: !1704, line: 175, baseType: !1750, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !1704, line: 175, flags: DIFlagFwdDecl)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !1722, file: !1704, line: 176, baseType: !1753, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1755, line: 75, size: 256, elements: !1756)
!1755 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1756 = !{!1757, !1771, !1772, !1773}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1754, file: !1755, line: 76, baseType: !1758, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1755, line: 68, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1755, line: 63, size: 320, elements: !1761)
!1761 = !{!1762, !1764, !1765, !1766}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1760, file: !1755, line: 64, baseType: !1763, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1760, file: !1755, line: 65, baseType: !1763, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1760, file: !1755, line: 66, baseType: !7, size: 32, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1760, file: !1755, line: 67, baseType: !1767, size: 128, offset: 192)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1768, size: 128, elements: !1769)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1755, line: 29, baseType: !1580)
!1769 = !{!1770}
!1770 = !DISubrange(count: 2)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1754, file: !1755, line: 77, baseType: !1758, size: 64, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1754, file: !1755, line: 78, baseType: !7, size: 32, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1754, file: !1755, line: 79, baseType: !1774, size: 64, offset: 192)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1755, line: 49, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1755, line: 45, size: 832, elements: !1777)
!1777 = !{!1778, !1779, !1780}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1776, file: !1755, line: 46, baseType: !1763, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1776, file: !1755, line: 47, baseType: !1753, size: 64, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1776, file: !1755, line: 48, baseType: !1781, size: 704, offset: 128)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1782, line: 164, size: 704, elements: !1783)
!1782 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1783 = !{!1784, !1785, !1795, !1796, !1797, !1798, !1799, !1800, !1804, !1808, !1809, !1810, !1811}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1781, file: !1782, line: 166, baseType: !1582, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1781, file: !1782, line: 167, baseType: !1786, size: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1782, line: 157, size: 192, elements: !1788)
!1788 = !{!1789, !1790, !1791}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1787, file: !1782, line: 159, baseType: !1522, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1787, file: !1782, line: 160, baseType: !1786, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1787, file: !1782, line: 161, baseType: !1792, size: 32, offset: 128)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 32, elements: !1793)
!1793 = !{!1794}
!1794 = !DISubrange(count: 4)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1781, file: !1782, line: 168, baseType: !1522, size: 64, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1781, file: !1782, line: 169, baseType: !1522, size: 64, offset: 192)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1781, file: !1782, line: 170, baseType: !1522, size: 64, offset: 256)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1781, file: !1782, line: 171, baseType: !1582, size: 64, offset: 320)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1781, file: !1782, line: 172, baseType: !1520, size: 32, offset: 384)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1781, file: !1782, line: 176, baseType: !1801, size: 64, offset: 448)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!1786, !1524, !1582}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1781, file: !1782, line: 177, baseType: !1805, size: 64, offset: 512)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{null, !1524, !1786}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1781, file: !1782, line: 178, baseType: !1524, size: 64, offset: 576)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1781, file: !1782, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1781, file: !1782, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1781, file: !1782, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !1722, file: !1704, line: 177, baseType: !1527, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !1722, file: !1704, line: 178, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !335, line: 217, size: 832, elements: !1816)
!1816 = !{!1817, !2064, !2065, !2066, !2069, !2073, !2074, !2075, !2093, !2094, !2095, !2096, !2097, !2098}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1815, file: !335, line: 219, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !335, line: 151, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !335, line: 151, size: 128, elements: !1821)
!1821 = !{!1822}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1820, file: !335, line: 151, baseType: !1823, size: 128)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !335, line: 150, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !335, line: 150, size: 128, elements: !1825)
!1825 = !{!1826, !1827, !1828}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1824, file: !335, line: 150, baseType: !7, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1824, file: !335, line: 150, baseType: !7, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1824, file: !335, line: 150, baseType: !1829, size: 64, offset: 64)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1830, size: 64, elements: !1625)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !1508, line: 108, baseType: !1831)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !335, line: 122, size: 512, elements: !1833)
!1833 = !{!1834, !1835, !1836, !2056, !2057, !2058, !2059, !2060, !2061, !2062}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1832, file: !335, line: 124, baseType: !1814, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1832, file: !335, line: 125, baseType: !1814, size: 64, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1832, file: !335, line: 131, baseType: !1837, size: 64, offset: 128)
!1837 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !335, line: 128, size: 64, elements: !1838)
!1838 = !{!1839, !2055}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1837, file: !335, line: 129, baseType: !1840, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !1508, line: 66, baseType: !1841)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !1843, line: 143, size: 192, elements: !1844)
!1843 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1844 = !{!1845, !2053, !2054}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1842, file: !1843, line: 145, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !1508, line: 69, baseType: !1847)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !1843, line: 136, size: 192, elements: !1849)
!1849 = !{!1850, !2051, !2052}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1848, file: !1843, line: 137, baseType: !1851, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !1508, line: 58, baseType: !1852)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !1843, line: 737, size: 768, elements: !1854)
!1854 = !{!1855, !1872, !1906, !1912, !1917, !1922, !1929, !1935, !1941, !1946, !1960, !1965, !1971, !1976, !1986, !1991, !2009, !2016, !2023, !2029, !2034, !2040, !2046}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1853, file: !1843, line: 738, baseType: !1856, size: 256)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !1843, line: 271, size: 256, elements: !1857)
!1857 = !{!1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1856, file: !1843, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1856, file: !1843, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1856, file: !1843, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1856, file: !1843, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1856, file: !1843, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1856, file: !1843, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1856, file: !1843, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1856, file: !1843, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1856, file: !1843, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1856, file: !1843, line: 312, baseType: !7, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1856, file: !1843, line: 316, baseType: !1651, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1856, file: !1843, line: 319, baseType: !7, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1856, file: !1843, line: 323, baseType: !1814, size: 64, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1856, file: !1843, line: 327, baseType: !1527, size: 64, offset: 192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1853, file: !1843, line: 739, baseType: !1873, size: 448)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !1843, line: 350, size: 448, elements: !1874)
!1874 = !{!1875, !1904}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1873, file: !1843, line: 353, baseType: !1876, size: 384)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !1843, line: 333, size: 384, elements: !1877)
!1877 = !{!1878, !1879, !1887}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1876, file: !1843, line: 336, baseType: !1856, size: 256)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1876, file: !1843, line: 343, baseType: !1880, size: 64, offset: 256)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1882, line: 37, size: 128, elements: !1883)
!1882 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1883 = !{!1884, !1885}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1881, file: !1882, line: 39, baseType: !1880, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1881, file: !1882, line: 40, baseType: !1886, size: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1876, file: !1843, line: 344, baseType: !1888, size: 64, offset: 320)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1882, line: 45, size: 320, elements: !1890)
!1890 = !{!1891, !1892}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1889, file: !1882, line: 47, baseType: !1888, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1889, file: !1882, line: 48, baseType: !1893, size: 256, offset: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !140, line: 1883, size: 256, elements: !1894)
!1894 = !{!1895, !1897, !1898, !1903}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1893, file: !140, line: 1884, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1893, file: !140, line: 1885, baseType: !1896, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1893, file: !140, line: 1891, baseType: !1899, size: 64, offset: 128)
!1899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1893, file: !140, line: 1891, size: 64, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1899, file: !140, line: 1891, baseType: !1851, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1899, file: !140, line: 1891, baseType: !1527, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1893, file: !140, line: 1892, baseType: !1886, size: 64, offset: 192)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1873, file: !1843, line: 359, baseType: !1905, size: 64, offset: 384)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 64, elements: !1625)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1853, file: !1843, line: 740, baseType: !1907, size: 512)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !1843, line: 365, size: 512, elements: !1908)
!1908 = !{!1909, !1910, !1911}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1907, file: !1843, line: 368, baseType: !1876, size: 384)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1907, file: !1843, line: 373, baseType: !1527, size: 64, offset: 384)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1907, file: !1843, line: 374, baseType: !1527, size: 64, offset: 448)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1853, file: !1843, line: 741, baseType: !1913, size: 576)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !1843, line: 380, size: 576, elements: !1914)
!1914 = !{!1915, !1916}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1913, file: !1843, line: 383, baseType: !1907, size: 512)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1913, file: !1843, line: 389, baseType: !1905, size: 64, offset: 512)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1853, file: !1843, line: 742, baseType: !1918, size: 320)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !1843, line: 395, size: 320, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1918, file: !1843, line: 397, baseType: !1856, size: 256)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1918, file: !1843, line: 400, baseType: !1840, size: 64, offset: 256)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1853, file: !1843, line: 743, baseType: !1923, size: 448)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !1843, line: 406, size: 448, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1923, file: !1843, line: 408, baseType: !1856, size: 256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1923, file: !1843, line: 412, baseType: !1527, size: 64, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1923, file: !1843, line: 420, baseType: !1527, size: 64, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1923, file: !1843, line: 423, baseType: !1840, size: 64, offset: 384)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1853, file: !1843, line: 744, baseType: !1930, size: 384)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !1843, line: 429, size: 384, elements: !1931)
!1931 = !{!1932, !1933, !1934}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1930, file: !1843, line: 431, baseType: !1856, size: 256)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1930, file: !1843, line: 434, baseType: !1527, size: 64, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1930, file: !1843, line: 437, baseType: !1840, size: 64, offset: 320)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1853, file: !1843, line: 745, baseType: !1936, size: 384)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !1843, line: 443, size: 384, elements: !1937)
!1937 = !{!1938, !1939, !1940}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1936, file: !1843, line: 445, baseType: !1856, size: 256)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1936, file: !1843, line: 449, baseType: !1527, size: 64, offset: 256)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1936, file: !1843, line: 453, baseType: !1840, size: 64, offset: 320)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1853, file: !1843, line: 746, baseType: !1942, size: 320)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !1843, line: 459, size: 320, elements: !1943)
!1943 = !{!1944, !1945}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1942, file: !1843, line: 461, baseType: !1856, size: 256)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1942, file: !1843, line: 464, baseType: !1527, size: 64, offset: 256)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1853, file: !1843, line: 747, baseType: !1947, size: 768)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !1843, line: 469, size: 768, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952, !1953}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1947, file: !1843, line: 471, baseType: !1856, size: 256)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1947, file: !1843, line: 474, baseType: !7, size: 32, offset: 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1947, file: !1843, line: 475, baseType: !7, size: 32, offset: 288)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1947, file: !1843, line: 478, baseType: !1527, size: 64, offset: 320)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1947, file: !1843, line: 481, baseType: !1954, size: 384, offset: 384)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 384, elements: !1625)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !140, line: 1917, size: 384, elements: !1956)
!1956 = !{!1957, !1958, !1959}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1955, file: !140, line: 1920, baseType: !1893, size: 256)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1955, file: !140, line: 1921, baseType: !1527, size: 64, offset: 256)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1955, file: !140, line: 1922, baseType: !1651, size: 32, offset: 320)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1853, file: !1843, line: 748, baseType: !1961, size: 320)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !1843, line: 487, size: 320, elements: !1962)
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1961, file: !1843, line: 490, baseType: !1856, size: 256)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1961, file: !1843, line: 494, baseType: !1520, size: 32, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1853, file: !1843, line: 749, baseType: !1966, size: 384)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !1843, line: 500, size: 384, elements: !1967)
!1967 = !{!1968, !1969, !1970}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1966, file: !1843, line: 502, baseType: !1856, size: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1966, file: !1843, line: 506, baseType: !1840, size: 64, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1966, file: !1843, line: 510, baseType: !1840, size: 64, offset: 320)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1853, file: !1843, line: 750, baseType: !1972, size: 320)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !1843, line: 529, size: 320, elements: !1973)
!1973 = !{!1974, !1975}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1972, file: !1843, line: 531, baseType: !1856, size: 256)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1972, file: !1843, line: 540, baseType: !1840, size: 64, offset: 256)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1853, file: !1843, line: 751, baseType: !1977, size: 704)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !1843, line: 546, size: 704, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1977, file: !1843, line: 549, baseType: !1907, size: 512)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1977, file: !1843, line: 553, baseType: !1525, size: 64, offset: 512)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1977, file: !1843, line: 557, baseType: !1519, size: 8, offset: 576)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1977, file: !1843, line: 558, baseType: !1519, size: 8, offset: 584)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1977, file: !1843, line: 559, baseType: !1519, size: 8, offset: 592)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1977, file: !1843, line: 560, baseType: !1519, size: 8, offset: 600)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1977, file: !1843, line: 566, baseType: !1905, size: 64, offset: 640)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1853, file: !1843, line: 752, baseType: !1987, size: 384)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !1843, line: 571, size: 384, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1987, file: !1843, line: 573, baseType: !1918, size: 320)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1987, file: !1843, line: 577, baseType: !1527, size: 64, offset: 320)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1853, file: !1843, line: 753, baseType: !1992, size: 576)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !1843, line: 600, size: 576, elements: !1993)
!1993 = !{!1994, !1995, !1996, !1999, !2008}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1992, file: !1843, line: 602, baseType: !1918, size: 320)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1992, file: !1843, line: 605, baseType: !1527, size: 64, offset: 320)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1992, file: !1843, line: 609, baseType: !1997, size: 64, offset: 384)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1998, line: 46, baseType: !1580)
!1998 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1992, file: !1843, line: 612, baseType: !2000, size: 64, offset: 448)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !1843, line: 581, size: 320, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2007}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2001, file: !1843, line: 583, baseType: !139, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2001, file: !1843, line: 586, baseType: !1527, size: 64, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2001, file: !1843, line: 589, baseType: !1527, size: 64, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !2001, file: !1843, line: 592, baseType: !1527, size: 64, offset: 192)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2001, file: !1843, line: 595, baseType: !1527, size: 64, offset: 256)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1992, file: !1843, line: 616, baseType: !1840, size: 64, offset: 512)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1853, file: !1843, line: 754, baseType: !2010, size: 512)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !1843, line: 622, size: 512, elements: !2011)
!2011 = !{!2012, !2013, !2014, !2015}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2010, file: !1843, line: 624, baseType: !1918, size: 320)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2010, file: !1843, line: 628, baseType: !1527, size: 64, offset: 320)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !2010, file: !1843, line: 632, baseType: !1527, size: 64, offset: 384)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !2010, file: !1843, line: 636, baseType: !1527, size: 64, offset: 448)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1853, file: !1843, line: 755, baseType: !2017, size: 704)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !1843, line: 642, size: 704, elements: !2018)
!2018 = !{!2019, !2020, !2021, !2022}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2017, file: !1843, line: 644, baseType: !2010, size: 512)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !2017, file: !1843, line: 648, baseType: !1527, size: 64, offset: 512)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !2017, file: !1843, line: 652, baseType: !1527, size: 64, offset: 576)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !2017, file: !1843, line: 653, baseType: !1527, size: 64, offset: 640)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1853, file: !1843, line: 756, baseType: !2024, size: 448)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !1843, line: 663, size: 448, elements: !2025)
!2025 = !{!2026, !2027, !2028}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2024, file: !1843, line: 665, baseType: !1918, size: 320)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2024, file: !1843, line: 668, baseType: !1527, size: 64, offset: 320)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2024, file: !1843, line: 673, baseType: !1527, size: 64, offset: 384)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1853, file: !1843, line: 757, baseType: !2030, size: 384)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !1843, line: 694, size: 384, elements: !2031)
!2031 = !{!2032, !2033}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2030, file: !1843, line: 696, baseType: !1918, size: 320)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2030, file: !1843, line: 699, baseType: !1527, size: 64, offset: 320)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1853, file: !1843, line: 758, baseType: !2035, size: 384)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !1843, line: 681, size: 384, elements: !2036)
!2036 = !{!2037, !2038, !2039}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2035, file: !1843, line: 683, baseType: !1856, size: 256)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !2035, file: !1843, line: 686, baseType: !1527, size: 64, offset: 256)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !2035, file: !1843, line: 689, baseType: !1527, size: 64, offset: 320)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1853, file: !1843, line: 759, baseType: !2041, size: 384)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !1843, line: 707, size: 384, elements: !2042)
!2042 = !{!2043, !2044, !2045}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2041, file: !1843, line: 709, baseType: !1856, size: 256)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2041, file: !1843, line: 712, baseType: !1527, size: 64, offset: 256)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !2041, file: !1843, line: 712, baseType: !1527, size: 64, offset: 320)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1853, file: !1843, line: 760, baseType: !2047, size: 320)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !1843, line: 718, size: 320, elements: !2048)
!2048 = !{!2049, !2050}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2047, file: !1843, line: 720, baseType: !1856, size: 256)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2047, file: !1843, line: 723, baseType: !1527, size: 64, offset: 256)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1848, file: !1843, line: 138, baseType: !1847, size: 64, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1848, file: !1843, line: 139, baseType: !1847, size: 64, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1842, file: !1843, line: 146, baseType: !1846, size: 64, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1842, file: !1843, line: 152, baseType: !1840, size: 64, offset: 128)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1837, file: !335, line: 130, baseType: !1701, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1832, file: !335, line: 134, baseType: !1524, size: 64, offset: 192)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1832, file: !335, line: 137, baseType: !1527, size: 64, offset: 256)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1832, file: !335, line: 138, baseType: !1651, size: 32, offset: 320)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1832, file: !335, line: 142, baseType: !7, size: 32, offset: 352)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1832, file: !335, line: 144, baseType: !1520, size: 32, offset: 384)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1832, file: !335, line: 145, baseType: !1520, size: 32, offset: 416)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1832, file: !335, line: 146, baseType: !2063, size: 64, offset: 448)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !335, line: 119, baseType: !1582)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1815, file: !335, line: 220, baseType: !1818, size: 64, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1815, file: !335, line: 223, baseType: !1524, size: 64, offset: 128)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1815, file: !335, line: 226, baseType: !2067, size: 64, offset: 192)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !335, line: 185, flags: DIFlagFwdDecl)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1815, file: !335, line: 229, baseType: !2070, size: 128, offset: 256)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2071, size: 128, elements: !1769)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !335, line: 229, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1815, file: !335, line: 232, baseType: !1814, size: 64, offset: 384)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1815, file: !335, line: 233, baseType: !1814, size: 64, offset: 448)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1815, file: !335, line: 238, baseType: !2076, size: 64, offset: 512)
!2076 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !335, line: 235, size: 64, elements: !2077)
!2077 = !{!2078, !2084}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2076, file: !335, line: 236, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !335, line: 273, size: 128, elements: !2081)
!2081 = !{!2082, !2083}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2080, file: !335, line: 275, baseType: !1840, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2080, file: !335, line: 278, baseType: !1840, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2076, file: !335, line: 237, baseType: !2085, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !335, line: 259, size: 320, elements: !2087)
!2087 = !{!2088, !2089, !2090, !2091, !2092}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2086, file: !335, line: 261, baseType: !1701, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2086, file: !335, line: 262, baseType: !1701, size: 64, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2086, file: !335, line: 266, baseType: !1701, size: 64, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2086, file: !335, line: 267, baseType: !1701, size: 64, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2086, file: !335, line: 270, baseType: !1520, size: 32, offset: 256)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1815, file: !335, line: 241, baseType: !2063, size: 64, offset: 576)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1815, file: !335, line: 244, baseType: !1520, size: 32, offset: 640)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1815, file: !335, line: 247, baseType: !1520, size: 32, offset: 672)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1815, file: !335, line: 250, baseType: !1520, size: 32, offset: 704)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1815, file: !335, line: 253, baseType: !1520, size: 32, offset: 736)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1815, file: !335, line: 256, baseType: !1520, size: 32, offset: 768)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !1722, file: !1704, line: 179, baseType: !2100, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !1704, line: 150, baseType: !2102)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !1704, line: 142, size: 320, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2110, !2111}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2102, file: !1704, line: 144, baseType: !1527, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2102, file: !1704, line: 145, baseType: !1701, size: 64, offset: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2102, file: !1704, line: 146, baseType: !1701, size: 64, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2102, file: !1704, line: 147, baseType: !2108, size: 32, offset: 192)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !2109, line: 31, baseType: !1520)
!2109 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2102, file: !1704, line: 148, baseType: !7, size: 32, offset: 224)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !2102, file: !1704, line: 149, baseType: !1519, size: 8, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !1722, file: !1704, line: 180, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !1704, line: 162, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !1704, line: 159, size: 128, elements: !2116)
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2115, file: !1704, line: 160, baseType: !1527, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2115, file: !1704, line: 161, baseType: !1582, size: 64, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !1722, file: !1704, line: 181, baseType: !2120, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !1704, line: 181, flags: DIFlagFwdDecl)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !1717, file: !1704, line: 317, baseType: !2123, size: 64)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1582, size: 64, elements: !1625)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !1717, file: !1704, line: 318, baseType: !2125, size: 320)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !1704, line: 188, size: 320, elements: !2126)
!2126 = !{!2127, !2129, !2186}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2125, file: !1704, line: 190, baseType: !2128, size: 192)
!2128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1721, size: 192, elements: !1600)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2125, file: !1704, line: 193, baseType: !2130, size: 64, offset: 192)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !1704, line: 206, size: 320, elements: !2132)
!2132 = !{!2133, !2171, !2172, !2173, !2185}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !2131, file: !1704, line: 208, baseType: !2134, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !1508, line: 62, baseType: !2136)
!2136 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2137, line: 538, size: 256, elements: !2138)
!2137 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2138 = !{!2139, !2143, !2149, !2162}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2136, file: !2137, line: 539, baseType: !2140, size: 32)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2137, line: 482, size: 32, elements: !2141)
!2141 = !{!2142}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2140, file: !2137, line: 484, baseType: !7, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2136, file: !2137, line: 540, baseType: !2144, size: 192)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2137, line: 488, size: 192, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2144, file: !2137, line: 489, baseType: !2140, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2144, file: !2137, line: 492, baseType: !1525, size: 64, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2144, file: !2137, line: 496, baseType: !1527, size: 64, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2136, file: !2137, line: 541, baseType: !2150, size: 256)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2137, line: 504, size: 256, elements: !2151)
!2151 = !{!2152, !2153, !2160, !2161}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2150, file: !2137, line: 505, baseType: !2140, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2150, file: !2137, line: 509, baseType: !2154, size: 64, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2137, line: 501, baseType: !2155)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{null, !2158}
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2150, file: !2137, line: 510, baseType: !2158, size: 64, offset: 128)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2150, file: !2137, line: 513, baseType: !2134, size: 64, offset: 192)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2136, file: !2137, line: 542, baseType: !2163, size: 128)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2137, line: 530, size: 128, elements: !2164)
!2164 = !{!2165, !2166}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2163, file: !2137, line: 531, baseType: !2140, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2163, file: !2137, line: 534, baseType: !2167, size: 64, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2137, line: 525, baseType: !2168)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!1519, !1527, !1525, !1580, !1580}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2131, file: !1704, line: 211, baseType: !7, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2131, file: !1704, line: 214, baseType: !1582, size: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2131, file: !1704, line: 224, baseType: !2174, size: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !1704, line: 202, baseType: !2176)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !1704, line: 202, size: 128, elements: !2177)
!2177 = !{!2178}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2176, file: !1704, line: 202, baseType: !2179, size: 128)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !1704, line: 200, baseType: !2180)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !1704, line: 200, size: 128, elements: !2181)
!2181 = !{!2182, !2183, !2184}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2180, file: !1704, line: 200, baseType: !7, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2180, file: !1704, line: 200, baseType: !7, size: 32, offset: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2180, file: !1704, line: 200, baseType: !1735, size: 64, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !2131, file: !1704, line: 234, baseType: !2174, size: 64, offset: 256)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2125, file: !1704, line: 197, baseType: !1582, size: 64, offset: 256)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !1717, file: !1704, line: 319, baseType: !1589, size: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1717, file: !1704, line: 320, baseType: !1608, size: 192)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1529, file: !140, line: 3384, baseType: !2190, size: 1472)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !140, line: 3114, size: 1472, elements: !2191)
!2191 = !{!2192, !2213, !2214, !2215, !2216}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2190, file: !140, line: 3115, baseType: !2193, size: 1216)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !140, line: 2984, size: 1216, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2193, file: !140, line: 2985, baseType: !1697, size: 960)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !2193, file: !140, line: 2986, baseType: !1527, size: 64, offset: 960)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !2193, file: !140, line: 2987, baseType: !1527, size: 64, offset: 1024)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !2193, file: !140, line: 2988, baseType: !1527, size: 64, offset: 1088)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !2193, file: !140, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !2193, file: !140, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !2193, file: !140, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !2193, file: !140, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !2193, file: !140, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !2193, file: !140, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !2193, file: !140, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !2193, file: !140, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !2193, file: !140, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !2193, file: !140, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !2193, file: !140, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !2193, file: !140, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !2193, file: !140, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !2193, file: !140, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !2190, file: !140, line: 3117, baseType: !1527, size: 64, offset: 1216)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !2190, file: !140, line: 3119, baseType: !1527, size: 64, offset: 1280)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2190, file: !140, line: 3121, baseType: !1527, size: 64, offset: 1344)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !2190, file: !140, line: 3123, baseType: !1527, size: 64, offset: 1408)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1529, file: !140, line: 3385, baseType: !2218, size: 1088)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !140, line: 2874, size: 1088, elements: !2219)
!2219 = !{!2220, !2221, !2222}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2218, file: !140, line: 2875, baseType: !1697, size: 960)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !2218, file: !140, line: 2876, baseType: !1701, size: 64, offset: 960)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2218, file: !140, line: 2877, baseType: !2223, size: 64, offset: 1024)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !140, line: 2856, flags: DIFlagFwdDecl)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1529, file: !140, line: 3386, baseType: !2193, size: 1216)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1529, file: !140, line: 3387, baseType: !2227, size: 1280)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !140, line: 3093, size: 1280, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2227, file: !140, line: 3094, baseType: !2193, size: 1216)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2227, file: !140, line: 3095, baseType: !2223, size: 64, offset: 1216)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1529, file: !140, line: 3388, baseType: !2232, size: 1216)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !140, line: 2824, size: 1216, elements: !2233)
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2232, file: !140, line: 2825, baseType: !1659, size: 896)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2232, file: !140, line: 2827, baseType: !1527, size: 64, offset: 896)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !2232, file: !140, line: 2828, baseType: !1527, size: 64, offset: 960)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !2232, file: !140, line: 2829, baseType: !1527, size: 64, offset: 1024)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !2232, file: !140, line: 2830, baseType: !1527, size: 64, offset: 1088)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !2232, file: !140, line: 2831, baseType: !1527, size: 64, offset: 1152)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1529, file: !140, line: 3389, baseType: !2241, size: 1024)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !140, line: 2850, size: 1024, elements: !2242)
!2242 = !{!2243, !2244, !2245}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2241, file: !140, line: 2851, baseType: !1697, size: 960)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !2241, file: !140, line: 2852, baseType: !1520, size: 32, offset: 960)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !2241, file: !140, line: 2853, baseType: !1520, size: 32, offset: 992)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1529, file: !140, line: 3390, baseType: !2247, size: 1024)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !140, line: 2857, size: 1024, elements: !2248)
!2248 = !{!2249, !2250}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2247, file: !140, line: 2858, baseType: !1697, size: 960)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2247, file: !140, line: 2859, baseType: !2223, size: 64, offset: 960)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1529, file: !140, line: 3391, baseType: !2252, size: 960)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !140, line: 2862, size: 960, elements: !2253)
!2253 = !{!2254}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2252, file: !140, line: 2863, baseType: !1697, size: 960)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1529, file: !140, line: 3392, baseType: !2256, size: 1472)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !140, line: 3304, size: 1472, elements: !2257)
!2257 = !{!2258}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2256, file: !140, line: 3305, baseType: !2190, size: 1472)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1529, file: !140, line: 3393, baseType: !2260, size: 1792)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !140, line: 3248, size: 1792, elements: !2261)
!2261 = !{!2262, !2263, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2260, file: !140, line: 3249, baseType: !2190, size: 1472)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2260, file: !140, line: 3251, baseType: !2264, size: 64, offset: 1472)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !2266, line: 463, size: 1152, elements: !2267)
!2266 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2267 = !{!2268, !2271, !2302, !2303, !2306, !2309, !2357, !2358, !2359, !2360, !2361, !2385, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !2265, file: !2266, line: 464, baseType: !2269, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !2266, line: 464, flags: DIFlagFwdDecl)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !2265, file: !2266, line: 467, baseType: !2272, size: 64, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !335, line: 374, size: 640, elements: !2274)
!2274 = !{!2275, !2277, !2278, !2291, !2292, !2293, !2294, !2295, !2296, !2298, !2300, !2301}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !2273, file: !335, line: 377, baseType: !2276, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !1508, line: 111, baseType: !1814)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !2273, file: !335, line: 378, baseType: !2276, size: 64, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !2273, file: !335, line: 381, baseType: !2279, size: 64, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !335, line: 282, baseType: !2281)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !335, line: 282, size: 128, elements: !2282)
!2282 = !{!2283}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2281, file: !335, line: 282, baseType: !2284, size: 128)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !335, line: 281, baseType: !2285)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !335, line: 281, size: 128, elements: !2286)
!2286 = !{!2287, !2288, !2289}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2285, file: !335, line: 281, baseType: !7, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2285, file: !335, line: 281, baseType: !7, size: 32, offset: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2285, file: !335, line: 281, baseType: !2290, size: 64, offset: 64)
!2290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2276, size: 64, elements: !1625)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !2273, file: !335, line: 384, baseType: !1520, size: 32, offset: 192)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !2273, file: !335, line: 387, baseType: !1520, size: 32, offset: 224)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !2273, file: !335, line: 390, baseType: !1520, size: 32, offset: 256)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !2273, file: !335, line: 394, baseType: !2279, size: 64, offset: 320)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !2273, file: !335, line: 396, baseType: !334, size: 32, offset: 384)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !2273, file: !335, line: 399, baseType: !2297, size: 64, offset: 416)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 64, elements: !1769)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !2273, file: !335, line: 402, baseType: !2299, size: 64, offset: 480)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1769)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !2273, file: !335, line: 406, baseType: !1520, size: 32, offset: 544)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !2273, file: !335, line: 409, baseType: !1520, size: 32, offset: 576)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !2265, file: !2266, line: 470, baseType: !1841, size: 64, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !2265, file: !2266, line: 473, baseType: !2304, size: 64, offset: 192)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !2266, line: 166, flags: DIFlagFwdDecl)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !2265, file: !2266, line: 476, baseType: !2307, size: 64, offset: 256)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !2266, line: 476, flags: DIFlagFwdDecl)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !2265, file: !2266, line: 479, baseType: !2310, size: 64, offset: 320)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !2311, line: 144, baseType: !2312)
!2311 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !2311, line: 100, size: 896, elements: !2314)
!2314 = !{!2315, !2321, !2326, !2331, !2333, !2334, !2335, !2336, !2337, !2338, !2343, !2345, !2346, !2351, !2356}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !2313, file: !2311, line: 102, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !2311, line: 52, baseType: !2317)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DISubroutineType(types: !2319)
!2319 = !{!2320, !2158}
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !2311, line: 47, baseType: !7)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !2313, file: !2311, line: 105, baseType: !2322, size: 64, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !2311, line: 59, baseType: !2323)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!1520, !2158, !2158}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !2313, file: !2311, line: 108, baseType: !2327, size: 64, offset: 128)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !2311, line: 63, baseType: !2328)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{null, !1524}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2313, file: !2311, line: 111, baseType: !2332, size: 64, offset: 192)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2313, file: !2311, line: 114, baseType: !1997, size: 64, offset: 256)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !2313, file: !2311, line: 117, baseType: !1997, size: 64, offset: 320)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !2313, file: !2311, line: 120, baseType: !1997, size: 64, offset: 384)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !2313, file: !2311, line: 124, baseType: !7, size: 32, offset: 448)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2313, file: !2311, line: 128, baseType: !7, size: 32, offset: 480)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !2313, file: !2311, line: 131, baseType: !2339, size: 64, offset: 512)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !2311, line: 75, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{!1524, !1997, !1997}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !2313, file: !2311, line: 132, baseType: !2344, size: 64, offset: 576)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !2311, line: 78, baseType: !2328)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !2313, file: !2311, line: 135, baseType: !1524, size: 64, offset: 640)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !2313, file: !2311, line: 136, baseType: !2347, size: 64, offset: 704)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !2311, line: 82, baseType: !2348)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!1524, !1524, !1997, !1997}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !2313, file: !2311, line: 137, baseType: !2352, size: 64, offset: 768)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !2311, line: 83, baseType: !2353)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{null, !1524, !1524}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !2313, file: !2311, line: 141, baseType: !7, size: 32, offset: 832)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2265, file: !2266, line: 484, baseType: !1527, size: 64, offset: 384)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !2265, file: !2266, line: 488, baseType: !1527, size: 64, offset: 448)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !2265, file: !2266, line: 493, baseType: !1527, size: 64, offset: 512)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !2265, file: !2266, line: 496, baseType: !1527, size: 64, offset: 576)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2265, file: !2266, line: 501, baseType: !2362, size: 64, offset: 640)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !346, line: 2355, size: 576, elements: !2364)
!2364 = !{!2365, !2368, !2369, !2370, !2371, !2373, !2374, !2379, !2380, !2381, !2382, !2383, !2384}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !2363, file: !346, line: 2356, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !346, line: 2356, flags: DIFlagFwdDecl)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !2363, file: !346, line: 2357, baseType: !1525, size: 64, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !2363, file: !346, line: 2358, baseType: !1520, size: 32, offset: 128)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !2363, file: !346, line: 2359, baseType: !1520, size: 32, offset: 160)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !2363, file: !346, line: 2360, baseType: !2372, size: 128, offset: 192)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1520, size: 128, elements: !1793)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !2363, file: !346, line: 2364, baseType: !1520, size: 32, offset: 320)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !2363, file: !346, line: 2367, baseType: !2375, size: 128, offset: 384)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !346, line: 2349, size: 128, elements: !2376)
!2376 = !{!2377, !2378}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2375, file: !346, line: 2351, baseType: !1701, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2375, file: !346, line: 2352, baseType: !1582, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2363, file: !346, line: 2371, baseType: !345, size: 32, offset: 512)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !2363, file: !346, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !2363, file: !346, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !2363, file: !346, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !2363, file: !346, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !2363, file: !346, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2265, file: !2266, line: 504, baseType: !2386, size: 64, offset: 704)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !2266, line: 504, flags: DIFlagFwdDecl)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !2265, file: !2266, line: 507, baseType: !2310, size: 64, offset: 768)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !2265, file: !2266, line: 510, baseType: !1520, size: 32, offset: 832)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !2265, file: !2266, line: 513, baseType: !1520, size: 32, offset: 864)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !2265, file: !2266, line: 516, baseType: !1651, size: 32, offset: 896)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !2265, file: !2266, line: 519, baseType: !1651, size: 32, offset: 928)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !2265, file: !2266, line: 522, baseType: !7, size: 32, offset: 960)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !2265, file: !2266, line: 523, baseType: !7, size: 32, offset: 992)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !2265, file: !2266, line: 528, baseType: !1525, size: 64, offset: 1024)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !2265, file: !2266, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !2265, file: !2266, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !2265, file: !2266, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !2265, file: !2266, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !2265, file: !2266, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !2265, file: !2266, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !2265, file: !2266, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !2265, file: !2266, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !2265, file: !2266, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !2265, file: !2266, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !2265, file: !2266, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !2265, file: !2266, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !2265, file: !2266, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !2265, file: !2266, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !2265, file: !2266, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !2265, file: !2266, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2260, file: !140, line: 3254, baseType: !1527, size: 64, offset: 1536)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !2260, file: !140, line: 3257, baseType: !1527, size: 64, offset: 1600)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !2260, file: !140, line: 3258, baseType: !1527, size: 64, offset: 1664)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !2260, file: !140, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !2260, file: !140, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !2260, file: !140, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !2260, file: !140, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !2260, file: !140, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !2260, file: !140, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !2260, file: !140, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !2260, file: !140, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !2260, file: !140, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !2260, file: !140, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !2260, file: !140, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !2260, file: !140, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !2260, file: !140, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !2260, file: !140, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !2260, file: !140, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2260, file: !140, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !2260, file: !140, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !2260, file: !140, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1529, file: !140, line: 3394, baseType: !2434, size: 1344)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !140, line: 2279, size: 1344, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2434, file: !140, line: 2280, baseType: !1565, size: 192)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2434, file: !140, line: 2281, baseType: !1527, size: 64, offset: 192)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2434, file: !140, line: 2282, baseType: !1527, size: 64, offset: 256)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2434, file: !140, line: 2283, baseType: !1527, size: 64, offset: 320)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2434, file: !140, line: 2284, baseType: !1527, size: 64, offset: 384)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2434, file: !140, line: 2285, baseType: !7, size: 32, offset: 448)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2434, file: !140, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2434, file: !140, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2434, file: !140, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2434, file: !140, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2434, file: !140, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2434, file: !140, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2434, file: !140, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2434, file: !140, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2434, file: !140, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2434, file: !140, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2434, file: !140, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2434, file: !140, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2434, file: !140, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2434, file: !140, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2434, file: !140, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2434, file: !140, line: 2305, baseType: !7, size: 32, offset: 512)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2434, file: !140, line: 2306, baseType: !2108, size: 32, offset: 544)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2434, file: !140, line: 2307, baseType: !1527, size: 64, offset: 576)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2434, file: !140, line: 2308, baseType: !1527, size: 64, offset: 640)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2434, file: !140, line: 2314, baseType: !2462, size: 64, offset: 704)
!2462 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !140, line: 2309, size: 64, elements: !2463)
!2463 = !{!2464, !2465, !2466}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2462, file: !140, line: 2310, baseType: !1520, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2462, file: !140, line: 2311, baseType: !1525, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2462, file: !140, line: 2312, baseType: !2467, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !140, line: 2277, flags: DIFlagFwdDecl)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2434, file: !140, line: 2315, baseType: !1527, size: 64, offset: 768)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2434, file: !140, line: 2316, baseType: !1527, size: 64, offset: 832)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2434, file: !140, line: 2317, baseType: !1527, size: 64, offset: 896)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2434, file: !140, line: 2318, baseType: !1527, size: 64, offset: 960)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2434, file: !140, line: 2319, baseType: !1527, size: 64, offset: 1024)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2434, file: !140, line: 2320, baseType: !1527, size: 64, offset: 1088)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2434, file: !140, line: 2321, baseType: !1527, size: 64, offset: 1152)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2434, file: !140, line: 2322, baseType: !1527, size: 64, offset: 1216)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2434, file: !140, line: 2324, baseType: !2478, size: 64, offset: 1280)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !140, line: 2324, flags: DIFlagFwdDecl)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1529, file: !140, line: 3395, baseType: !2481, size: 320)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !140, line: 1469, size: 320, elements: !2482)
!2482 = !{!2483, !2484, !2485}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2481, file: !140, line: 1470, baseType: !1565, size: 192)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2481, file: !140, line: 1471, baseType: !1527, size: 64, offset: 192)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2481, file: !140, line: 1472, baseType: !1527, size: 64, offset: 256)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1529, file: !140, line: 3396, baseType: !2487, size: 320)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !140, line: 1482, size: 320, elements: !2488)
!2488 = !{!2489, !2490, !2491}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2487, file: !140, line: 1483, baseType: !1565, size: 192)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2487, file: !140, line: 1484, baseType: !1520, size: 32, offset: 192)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2487, file: !140, line: 1485, baseType: !1905, size: 64, offset: 256)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1529, file: !140, line: 3397, baseType: !2493, size: 384)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !140, line: 1829, size: 384, elements: !2494)
!2494 = !{!2495, !2496, !2497, !2498}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2493, file: !140, line: 1830, baseType: !1565, size: 192)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2493, file: !140, line: 1831, baseType: !1651, size: 32, offset: 192)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2493, file: !140, line: 1832, baseType: !1527, size: 64, offset: 256)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2493, file: !140, line: 1835, baseType: !1905, size: 64, offset: 320)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1529, file: !140, line: 3398, baseType: !2500, size: 704)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !140, line: 1898, size: 704, elements: !2501)
!2501 = !{!2502, !2503, !2504, !2505, !2506, !2509}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2500, file: !140, line: 1899, baseType: !1565, size: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2500, file: !140, line: 1902, baseType: !1527, size: 64, offset: 192)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2500, file: !140, line: 1905, baseType: !1851, size: 64, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2500, file: !140, line: 1908, baseType: !7, size: 32, offset: 320)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2500, file: !140, line: 1911, baseType: !2507, size: 64, offset: 384)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !140, line: 1876, flags: DIFlagFwdDecl)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2500, file: !140, line: 1914, baseType: !1893, size: 256, offset: 448)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1529, file: !140, line: 3399, baseType: !2511, size: 704)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !140, line: 2008, size: 704, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2516, !2517, !2518, !2530, !2531, !2532, !2533, !2534}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2511, file: !140, line: 2009, baseType: !1565, size: 192)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2511, file: !140, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !2511, file: !140, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2511, file: !140, line: 2014, baseType: !1651, size: 32, offset: 224)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2511, file: !140, line: 2016, baseType: !1527, size: 64, offset: 256)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !2511, file: !140, line: 2017, baseType: !2519, size: 64, offset: 320)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !140, line: 183, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !140, line: 183, size: 128, elements: !2522)
!2522 = !{!2523}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2521, file: !140, line: 183, baseType: !2524, size: 128)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !140, line: 182, baseType: !2525)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !140, line: 182, size: 128, elements: !2526)
!2526 = !{!2527, !2528, !2529}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2525, file: !140, line: 182, baseType: !7, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2525, file: !140, line: 182, baseType: !7, size: 32, offset: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2525, file: !140, line: 182, baseType: !1905, size: 64, offset: 64)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !2511, file: !140, line: 2019, baseType: !1527, size: 64, offset: 384)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !2511, file: !140, line: 2020, baseType: !1527, size: 64, offset: 448)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2511, file: !140, line: 2021, baseType: !1527, size: 64, offset: 512)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !2511, file: !140, line: 2022, baseType: !1527, size: 64, offset: 576)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !2511, file: !140, line: 2023, baseType: !1527, size: 64, offset: 640)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1529, file: !140, line: 3400, baseType: !2536, size: 832)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !140, line: 2430, size: 832, elements: !2537)
!2537 = !{!2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2536, file: !140, line: 2431, baseType: !1565, size: 192)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2536, file: !140, line: 2433, baseType: !1527, size: 64, offset: 192)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2536, file: !140, line: 2434, baseType: !1527, size: 64, offset: 256)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !2536, file: !140, line: 2435, baseType: !1527, size: 64, offset: 320)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !2536, file: !140, line: 2436, baseType: !1527, size: 64, offset: 384)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !2536, file: !140, line: 2437, baseType: !2519, size: 64, offset: 448)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !2536, file: !140, line: 2438, baseType: !1527, size: 64, offset: 512)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !2536, file: !140, line: 2440, baseType: !1527, size: 64, offset: 576)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !2536, file: !140, line: 2441, baseType: !1527, size: 64, offset: 640)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !2536, file: !140, line: 2443, baseType: !2548, size: 128, offset: 704)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !140, line: 182, baseType: !2549)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !140, line: 182, size: 128, elements: !2550)
!2550 = !{!2551}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2549, file: !140, line: 182, baseType: !2524, size: 128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1529, file: !140, line: 3401, baseType: !2553, size: 320)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !140, line: 3327, size: 320, elements: !2554)
!2554 = !{!2555, !2556, !2563}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2553, file: !140, line: 3329, baseType: !1565, size: 192)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2553, file: !140, line: 3330, baseType: !2557, size: 64, offset: 192)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !140, line: 3320, size: 192, elements: !2559)
!2559 = !{!2560, !2561, !2562}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2558, file: !140, line: 3322, baseType: !2557, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2558, file: !140, line: 3323, baseType: !2557, size: 64, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2558, file: !140, line: 3324, baseType: !1527, size: 64, offset: 128)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2553, file: !140, line: 3331, baseType: !2557, size: 64, offset: 256)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1529, file: !140, line: 3402, baseType: !2565, size: 256)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !140, line: 1540, size: 256, elements: !2566)
!2566 = !{!2567, !2568}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2565, file: !140, line: 1541, baseType: !1565, size: 192)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2565, file: !140, line: 1542, baseType: !2569, size: 64, offset: 192)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !140, line: 1538, baseType: !2571)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !140, line: 1538, size: 192, elements: !2572)
!2572 = !{!2573}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2571, file: !140, line: 1538, baseType: !2574, size: 192)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !140, line: 1537, baseType: !2575)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !140, line: 1537, size: 192, elements: !2576)
!2576 = !{!2577, !2578, !2579}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2575, file: !140, line: 1537, baseType: !7, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2575, file: !140, line: 1537, baseType: !7, size: 32, offset: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2575, file: !140, line: 1537, baseType: !2580, size: 128, offset: 64)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2581, size: 128, elements: !1625)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !140, line: 1535, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !140, line: 1532, size: 128, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2582, file: !140, line: 1533, baseType: !1527, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2582, file: !140, line: 1534, baseType: !1527, size: 64, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1529, file: !140, line: 3403, baseType: !2587, size: 512)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !140, line: 1938, size: 512, elements: !2588)
!2588 = !{!2589, !2590, !2591, !2592, !2598, !2599, !2600}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2587, file: !140, line: 1939, baseType: !1565, size: 192)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2587, file: !140, line: 1940, baseType: !1651, size: 32, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2587, file: !140, line: 1941, baseType: !350, size: 32, offset: 224)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2587, file: !140, line: 1946, baseType: !2593, size: 32, offset: 256)
!2593 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !140, line: 1942, size: 32, elements: !2594)
!2594 = !{!2595, !2596, !2597}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2593, file: !140, line: 1943, baseType: !368, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !2593, file: !140, line: 1944, baseType: !375, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !2593, file: !140, line: 1945, baseType: !139, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !2587, file: !140, line: 1950, baseType: !1840, size: 64, offset: 320)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !2587, file: !140, line: 1951, baseType: !1840, size: 64, offset: 384)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2587, file: !140, line: 1953, baseType: !1905, size: 64, offset: 448)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1529, file: !140, line: 3404, baseType: !2602, size: 1664)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !140, line: 3337, size: 1664, elements: !2603)
!2603 = !{!2604, !2605}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2602, file: !140, line: 3338, baseType: !1565, size: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2602, file: !140, line: 3341, baseType: !2606, size: 1472, offset: 192)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !2607, line: 410, size: 1472, elements: !2608)
!2607 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2608 = !{!2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2606, file: !2607, line: 412, baseType: !1520, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2606, file: !2607, line: 413, baseType: !1520, size: 32, offset: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2606, file: !2607, line: 414, baseType: !1520, size: 32, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2606, file: !2607, line: 415, baseType: !1520, size: 32, offset: 96)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2606, file: !2607, line: 416, baseType: !1520, size: 32, offset: 128)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2606, file: !2607, line: 417, baseType: !1520, size: 32, offset: 160)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2606, file: !2607, line: 418, baseType: !1519, size: 8, offset: 192)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2606, file: !2607, line: 419, baseType: !1519, size: 8, offset: 200)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2606, file: !2607, line: 420, baseType: !2618, size: 8, offset: 208)
!2618 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2606, file: !2607, line: 421, baseType: !2618, size: 8, offset: 216)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2606, file: !2607, line: 422, baseType: !2618, size: 8, offset: 224)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2606, file: !2607, line: 423, baseType: !2618, size: 8, offset: 232)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2606, file: !2607, line: 424, baseType: !2618, size: 8, offset: 240)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2606, file: !2607, line: 425, baseType: !2618, size: 8, offset: 248)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2606, file: !2607, line: 426, baseType: !2618, size: 8, offset: 256)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2606, file: !2607, line: 427, baseType: !2618, size: 8, offset: 264)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2606, file: !2607, line: 428, baseType: !2618, size: 8, offset: 272)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2606, file: !2607, line: 429, baseType: !2618, size: 8, offset: 280)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2606, file: !2607, line: 430, baseType: !2618, size: 8, offset: 288)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2606, file: !2607, line: 431, baseType: !2618, size: 8, offset: 296)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2606, file: !2607, line: 432, baseType: !2618, size: 8, offset: 304)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2606, file: !2607, line: 433, baseType: !2618, size: 8, offset: 312)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2606, file: !2607, line: 434, baseType: !2618, size: 8, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2606, file: !2607, line: 435, baseType: !2618, size: 8, offset: 328)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2606, file: !2607, line: 436, baseType: !2618, size: 8, offset: 336)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2606, file: !2607, line: 437, baseType: !2618, size: 8, offset: 344)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2606, file: !2607, line: 438, baseType: !2618, size: 8, offset: 352)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2606, file: !2607, line: 439, baseType: !2618, size: 8, offset: 360)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2606, file: !2607, line: 440, baseType: !2618, size: 8, offset: 368)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2606, file: !2607, line: 441, baseType: !2618, size: 8, offset: 376)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2606, file: !2607, line: 442, baseType: !2618, size: 8, offset: 384)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2606, file: !2607, line: 443, baseType: !2618, size: 8, offset: 392)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2606, file: !2607, line: 444, baseType: !2618, size: 8, offset: 400)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2606, file: !2607, line: 445, baseType: !2618, size: 8, offset: 408)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2606, file: !2607, line: 446, baseType: !2618, size: 8, offset: 416)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2606, file: !2607, line: 447, baseType: !2618, size: 8, offset: 424)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2606, file: !2607, line: 448, baseType: !2618, size: 8, offset: 432)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2606, file: !2607, line: 449, baseType: !2618, size: 8, offset: 440)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2606, file: !2607, line: 450, baseType: !2618, size: 8, offset: 448)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2606, file: !2607, line: 451, baseType: !2618, size: 8, offset: 456)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2606, file: !2607, line: 452, baseType: !2618, size: 8, offset: 464)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2606, file: !2607, line: 453, baseType: !2618, size: 8, offset: 472)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2606, file: !2607, line: 454, baseType: !2618, size: 8, offset: 480)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2606, file: !2607, line: 455, baseType: !2618, size: 8, offset: 488)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2606, file: !2607, line: 456, baseType: !2618, size: 8, offset: 496)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2606, file: !2607, line: 457, baseType: !2618, size: 8, offset: 504)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2606, file: !2607, line: 458, baseType: !2618, size: 8, offset: 512)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2606, file: !2607, line: 459, baseType: !2618, size: 8, offset: 520)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2606, file: !2607, line: 460, baseType: !2618, size: 8, offset: 528)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2606, file: !2607, line: 461, baseType: !2618, size: 8, offset: 536)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2606, file: !2607, line: 462, baseType: !2618, size: 8, offset: 544)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2606, file: !2607, line: 463, baseType: !2618, size: 8, offset: 552)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2606, file: !2607, line: 464, baseType: !2618, size: 8, offset: 560)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2606, file: !2607, line: 465, baseType: !2618, size: 8, offset: 568)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2606, file: !2607, line: 466, baseType: !2618, size: 8, offset: 576)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2606, file: !2607, line: 467, baseType: !2618, size: 8, offset: 584)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2606, file: !2607, line: 468, baseType: !2618, size: 8, offset: 592)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2606, file: !2607, line: 469, baseType: !2618, size: 8, offset: 600)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2606, file: !2607, line: 470, baseType: !2618, size: 8, offset: 608)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2606, file: !2607, line: 471, baseType: !2618, size: 8, offset: 616)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2606, file: !2607, line: 472, baseType: !2618, size: 8, offset: 624)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2606, file: !2607, line: 473, baseType: !2618, size: 8, offset: 632)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2606, file: !2607, line: 474, baseType: !2618, size: 8, offset: 640)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2606, file: !2607, line: 475, baseType: !2618, size: 8, offset: 648)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2606, file: !2607, line: 476, baseType: !2618, size: 8, offset: 656)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2606, file: !2607, line: 477, baseType: !2618, size: 8, offset: 664)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2606, file: !2607, line: 478, baseType: !2618, size: 8, offset: 672)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2606, file: !2607, line: 479, baseType: !2618, size: 8, offset: 680)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2606, file: !2607, line: 480, baseType: !2618, size: 8, offset: 688)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2606, file: !2607, line: 481, baseType: !2618, size: 8, offset: 696)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2606, file: !2607, line: 482, baseType: !2618, size: 8, offset: 704)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2606, file: !2607, line: 483, baseType: !2618, size: 8, offset: 712)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2606, file: !2607, line: 484, baseType: !2618, size: 8, offset: 720)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2606, file: !2607, line: 485, baseType: !2618, size: 8, offset: 728)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2606, file: !2607, line: 486, baseType: !2618, size: 8, offset: 736)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2606, file: !2607, line: 487, baseType: !2618, size: 8, offset: 744)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2606, file: !2607, line: 488, baseType: !2618, size: 8, offset: 752)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2606, file: !2607, line: 489, baseType: !2618, size: 8, offset: 760)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2606, file: !2607, line: 490, baseType: !2618, size: 8, offset: 768)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2606, file: !2607, line: 491, baseType: !2618, size: 8, offset: 776)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2606, file: !2607, line: 492, baseType: !2618, size: 8, offset: 784)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2606, file: !2607, line: 493, baseType: !2618, size: 8, offset: 792)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2606, file: !2607, line: 494, baseType: !2618, size: 8, offset: 800)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2606, file: !2607, line: 495, baseType: !2618, size: 8, offset: 808)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2606, file: !2607, line: 496, baseType: !2618, size: 8, offset: 816)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2606, file: !2607, line: 497, baseType: !2618, size: 8, offset: 824)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2606, file: !2607, line: 498, baseType: !2618, size: 8, offset: 832)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2606, file: !2607, line: 499, baseType: !2618, size: 8, offset: 840)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2606, file: !2607, line: 500, baseType: !2618, size: 8, offset: 848)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2606, file: !2607, line: 501, baseType: !2618, size: 8, offset: 856)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2606, file: !2607, line: 502, baseType: !2618, size: 8, offset: 864)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2606, file: !2607, line: 503, baseType: !2618, size: 8, offset: 872)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2606, file: !2607, line: 504, baseType: !2618, size: 8, offset: 880)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2606, file: !2607, line: 505, baseType: !2618, size: 8, offset: 888)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2606, file: !2607, line: 506, baseType: !2618, size: 8, offset: 896)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2606, file: !2607, line: 507, baseType: !2618, size: 8, offset: 904)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2606, file: !2607, line: 508, baseType: !2618, size: 8, offset: 912)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2606, file: !2607, line: 509, baseType: !2618, size: 8, offset: 920)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2606, file: !2607, line: 510, baseType: !2618, size: 8, offset: 928)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2606, file: !2607, line: 511, baseType: !2618, size: 8, offset: 936)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2606, file: !2607, line: 512, baseType: !2618, size: 8, offset: 944)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2606, file: !2607, line: 513, baseType: !2618, size: 8, offset: 952)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2606, file: !2607, line: 514, baseType: !2618, size: 8, offset: 960)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2606, file: !2607, line: 515, baseType: !2618, size: 8, offset: 968)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2606, file: !2607, line: 516, baseType: !2618, size: 8, offset: 976)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2606, file: !2607, line: 517, baseType: !2618, size: 8, offset: 984)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2606, file: !2607, line: 518, baseType: !2618, size: 8, offset: 992)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2606, file: !2607, line: 519, baseType: !2618, size: 8, offset: 1000)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2606, file: !2607, line: 520, baseType: !2618, size: 8, offset: 1008)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2606, file: !2607, line: 521, baseType: !2618, size: 8, offset: 1016)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2606, file: !2607, line: 522, baseType: !2618, size: 8, offset: 1024)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2606, file: !2607, line: 523, baseType: !2618, size: 8, offset: 1032)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2606, file: !2607, line: 524, baseType: !2618, size: 8, offset: 1040)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2606, file: !2607, line: 525, baseType: !2618, size: 8, offset: 1048)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2606, file: !2607, line: 526, baseType: !2618, size: 8, offset: 1056)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2606, file: !2607, line: 527, baseType: !2618, size: 8, offset: 1064)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2606, file: !2607, line: 528, baseType: !2618, size: 8, offset: 1072)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2606, file: !2607, line: 529, baseType: !2618, size: 8, offset: 1080)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2606, file: !2607, line: 530, baseType: !2618, size: 8, offset: 1088)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2606, file: !2607, line: 531, baseType: !2618, size: 8, offset: 1096)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2606, file: !2607, line: 532, baseType: !2618, size: 8, offset: 1104)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2606, file: !2607, line: 533, baseType: !2618, size: 8, offset: 1112)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2606, file: !2607, line: 534, baseType: !2618, size: 8, offset: 1120)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2606, file: !2607, line: 535, baseType: !2618, size: 8, offset: 1128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2606, file: !2607, line: 536, baseType: !2618, size: 8, offset: 1136)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2606, file: !2607, line: 537, baseType: !2618, size: 8, offset: 1144)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2606, file: !2607, line: 538, baseType: !2618, size: 8, offset: 1152)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2606, file: !2607, line: 539, baseType: !2618, size: 8, offset: 1160)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2606, file: !2607, line: 540, baseType: !2618, size: 8, offset: 1168)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2606, file: !2607, line: 541, baseType: !2618, size: 8, offset: 1176)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2606, file: !2607, line: 542, baseType: !2618, size: 8, offset: 1184)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2606, file: !2607, line: 543, baseType: !2618, size: 8, offset: 1192)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2606, file: !2607, line: 544, baseType: !2618, size: 8, offset: 1200)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2606, file: !2607, line: 545, baseType: !2618, size: 8, offset: 1208)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2606, file: !2607, line: 546, baseType: !2618, size: 8, offset: 1216)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2606, file: !2607, line: 547, baseType: !2618, size: 8, offset: 1224)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2606, file: !2607, line: 548, baseType: !2618, size: 8, offset: 1232)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2606, file: !2607, line: 549, baseType: !2618, size: 8, offset: 1240)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2606, file: !2607, line: 550, baseType: !2618, size: 8, offset: 1248)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2606, file: !2607, line: 551, baseType: !2618, size: 8, offset: 1256)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2606, file: !2607, line: 552, baseType: !2618, size: 8, offset: 1264)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2606, file: !2607, line: 553, baseType: !2618, size: 8, offset: 1272)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2606, file: !2607, line: 554, baseType: !2618, size: 8, offset: 1280)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2606, file: !2607, line: 555, baseType: !2618, size: 8, offset: 1288)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2606, file: !2607, line: 556, baseType: !2618, size: 8, offset: 1296)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2606, file: !2607, line: 557, baseType: !2618, size: 8, offset: 1304)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2606, file: !2607, line: 558, baseType: !2618, size: 8, offset: 1312)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2606, file: !2607, line: 559, baseType: !2618, size: 8, offset: 1320)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2606, file: !2607, line: 560, baseType: !2618, size: 8, offset: 1328)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2606, file: !2607, line: 561, baseType: !2618, size: 8, offset: 1336)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2606, file: !2607, line: 562, baseType: !2618, size: 8, offset: 1344)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2606, file: !2607, line: 563, baseType: !2618, size: 8, offset: 1352)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2606, file: !2607, line: 564, baseType: !2618, size: 8, offset: 1360)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2606, file: !2607, line: 565, baseType: !2618, size: 8, offset: 1368)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2606, file: !2607, line: 566, baseType: !2618, size: 8, offset: 1376)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2606, file: !2607, line: 567, baseType: !2618, size: 8, offset: 1384)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2606, file: !2607, line: 568, baseType: !2618, size: 8, offset: 1392)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2606, file: !2607, line: 569, baseType: !2618, size: 8, offset: 1400)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2606, file: !2607, line: 570, baseType: !2618, size: 8, offset: 1408)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2606, file: !2607, line: 571, baseType: !2618, size: 8, offset: 1416)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2606, file: !2607, line: 572, baseType: !2618, size: 8, offset: 1424)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2606, file: !2607, line: 573, baseType: !2618, size: 8, offset: 1432)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2606, file: !2607, line: 574, baseType: !2618, size: 8, offset: 1440)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1529, file: !140, line: 3405, baseType: !2774, size: 384)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !140, line: 3352, size: 384, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2774, file: !140, line: 3353, baseType: !1565, size: 192)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2774, file: !140, line: 3356, baseType: !2778, size: 192, offset: 192)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !2607, line: 578, size: 192, elements: !2779)
!2779 = !{!2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2778, file: !2607, line: 580, baseType: !1520, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2778, file: !2607, line: 581, baseType: !1520, size: 32, offset: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2778, file: !2607, line: 582, baseType: !1520, size: 32, offset: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2778, file: !2607, line: 583, baseType: !1520, size: 32, offset: 96)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2778, file: !2607, line: 584, baseType: !1519, size: 8, offset: 128)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2778, file: !2607, line: 585, baseType: !1519, size: 8, offset: 136)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2778, file: !2607, line: 586, baseType: !1519, size: 8, offset: 144)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2778, file: !2607, line: 587, baseType: !1519, size: 8, offset: 152)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2778, file: !2607, line: 588, baseType: !1519, size: 8, offset: 160)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2778, file: !2607, line: 589, baseType: !1519, size: 8, offset: 168)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2778, file: !2607, line: 590, baseType: !1519, size: 8, offset: 176)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 64)
!2792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!1524, !1582}
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1998, line: 35, baseType: !1582)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_typedef, name: "disabled_builtin", file: !3, line: 5133, baseType: !2799)
!2799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disabled_builtin", file: !3, line: 5129, size: 128, elements: !2800)
!2800 = !{!2801, !2802}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2799, file: !3, line: 5131, baseType: !1525, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2799, file: !3, line: 5132, baseType: !2803, size: 64, offset: 64)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_key", file: !2805, line: 62, baseType: !2806)
!2805 = !DIFile(filename: "./include/splay-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "libi_uhostptr_t", file: !2805, line: 41, baseType: !1580)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_value", file: !2805, line: 63, baseType: !2806)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sorted_fields_type", file: !6, line: 369, size: 128, elements: !2813)
!2813 = !{!2814, !2815}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2812, file: !6, line: 370, baseType: !1520, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2812, file: !6, line: 371, baseType: !1905, size: 64, offset: 64)
!2816 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "cppchar_t", file: !405, line: 258, baseType: !7)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc_vec_gc", file: !3, line: 9300, size: 128, elements: !2820)
!2820 = !{!2821}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2819, file: !3, line: 9300, baseType: !2822, size: 128)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc_vec_base", file: !3, line: 9299, baseType: !2823)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc_vec_base", file: !3, line: 9299, size: 128, elements: !2824)
!2824 = !{!2825, !2826, !2827}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2823, file: !3, line: 9299, baseType: !7, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2823, file: !3, line: 9299, baseType: !7, size: 32, offset: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2823, file: !3, line: 9299, baseType: !2828, size: 64, offset: 64)
!2828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2829, size: 64, elements: !1625)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree_gc_vec", file: !3, line: 9298, baseType: !2519)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_const_char_p_gc", file: !3, line: 7726, size: 128, elements: !2832)
!2832 = !{!2833}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2831, file: !3, line: 7726, baseType: !2834, size: 128)
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_const_char_p_base", file: !3, line: 7725, baseType: !2835)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_const_char_p_base", file: !3, line: 7725, size: 128, elements: !2836)
!2836 = !{!2837, !2838, !2839}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2835, file: !3, line: 7725, baseType: !7, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2835, file: !3, line: 7725, baseType: !7, size: 32, offset: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2835, file: !3, line: 7725, baseType: !2840, size: 64, offset: 64)
!2840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2841, size: 64, elements: !1625)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_char_p", file: !3, line: 7724, baseType: !1525)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlist_cache", file: !3, line: 2327, size: 256, elements: !2844)
!2844 = !{!2845, !2846, !2853, !2854}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2843, file: !3, line: 2329, baseType: !2842, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "cache_before_sp", scope: !2843, file: !3, line: 2330, baseType: !2847, size: 64, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlist", file: !3, line: 2319, size: 192, elements: !2849)
!2849 = !{!2850, !2851, !2852}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2848, file: !3, line: 2321, baseType: !2847, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2848, file: !3, line: 2322, baseType: !1527, size: 64, offset: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2848, file: !3, line: 2322, baseType: !1527, size: 64, offset: 128)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "cache_after_sp", scope: !2843, file: !3, line: 2331, baseType: !2847, size: 64, offset: 128)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2843, file: !3, line: 2332, baseType: !1527, size: 64, offset: 192)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !1508, line: 59, baseType: !2791)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "builtin_type", file: !3, line: 4526, baseType: !1241)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_const_char_p_gc", file: !3, line: 7726, baseType: !2831)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc_vec_gc", file: !3, line: 9300, baseType: !2819)
!2861 = !{!0, !2862, !2864, !2866, !2868, !2870, !2872, !2874, !2876, !2878, !2880, !2882, !2884, !2886, !2888, !2890, !2892, !2894, !2896, !2898, !2900, !2902, !2904, !2906, !2908, !2910, !2922, !2934, !2936, !2955, !2958, !2968, !2977, !2993, !2996, !2999, !3004, !3009, !3011, !3013, !3015, !3017, !3019, !3021, !3023, !3025, !3027, !3029, !3031, !3033, !3035, !3037, !3039, !3041, !3043, !3045, !3047, !3049, !3051, !3053, !3055, !3057, !3059, !3061, !3063, !3065, !3067, !3069, !3074, !3076, !3078, !3080, !3082, !3084, !3086, !3091, !3096, !3098, !3100, !3107, !3109, !3111}
!2862 = !DIGlobalVariableExpression(var: !2863, expr: !DIExpression())
!2863 = distinct !DIGlobalVariable(name: "flag_nil_receivers", scope: !2, file: !3, line: 259, type: !1520, isLocal: false, isDefinition: true)
!2864 = !DIGlobalVariableExpression(var: !2865, expr: !DIExpression())
!2865 = distinct !DIGlobalVariable(name: "flag_zero_link", scope: !2, file: !3, line: 264, type: !1520, isLocal: false, isDefinition: true)
!2866 = !DIGlobalVariableExpression(var: !2867, expr: !DIExpression())
!2867 = distinct !DIGlobalVariable(name: "flag_replace_objc_classes", scope: !2, file: !3, line: 269, type: !1520, isLocal: false, isDefinition: true)
!2868 = !DIGlobalVariableExpression(var: !2869, expr: !DIExpression())
!2869 = distinct !DIGlobalVariable(name: "flag_hosted", scope: !2, file: !3, line: 289, type: !1520, isLocal: false, isDefinition: true)
!2870 = !DIGlobalVariableExpression(var: !2871, expr: !DIExpression())
!2871 = distinct !DIGlobalVariable(name: "flag_implement_inlines", scope: !2, file: !3, line: 321, type: !1520, isLocal: false, isDefinition: true)
!2872 = !DIGlobalVariableExpression(var: !2873, expr: !DIExpression())
!2873 = distinct !DIGlobalVariable(name: "flag_implicit_templates", scope: !2, file: !3, line: 325, type: !1520, isLocal: false, isDefinition: true)
!2874 = !DIGlobalVariableExpression(var: !2875, expr: !DIExpression())
!2875 = distinct !DIGlobalVariable(name: "flag_implicit_inline_templates", scope: !2, file: !3, line: 331, type: !1520, isLocal: false, isDefinition: true)
!2876 = !DIGlobalVariableExpression(var: !2877, expr: !DIExpression())
!2877 = distinct !DIGlobalVariable(name: "flag_optional_diags", scope: !2, file: !3, line: 341, type: !1520, isLocal: false, isDefinition: true)
!2878 = !DIGlobalVariableExpression(var: !2879, expr: !DIExpression())
!2879 = distinct !DIGlobalVariable(name: "flag_elide_constructors", scope: !2, file: !3, line: 345, type: !1520, isLocal: false, isDefinition: true)
!2880 = !DIGlobalVariableExpression(var: !2881, expr: !DIExpression())
!2881 = distinct !DIGlobalVariable(name: "flag_default_inline", scope: !2, file: !3, line: 350, type: !1520, isLocal: false, isDefinition: true)
!2882 = !DIGlobalVariableExpression(var: !2883, expr: !DIExpression())
!2883 = distinct !DIGlobalVariable(name: "flag_rtti", scope: !2, file: !3, line: 355, type: !1520, isLocal: false, isDefinition: true)
!2884 = !DIGlobalVariableExpression(var: !2885, expr: !DIExpression())
!2885 = distinct !DIGlobalVariable(name: "flag_access_control", scope: !2, file: !3, line: 366, type: !1520, isLocal: false, isDefinition: true)
!2886 = !DIGlobalVariableExpression(var: !2887, expr: !DIExpression())
!2887 = distinct !DIGlobalVariable(name: "cxx_dialect", scope: !2, file: !3, line: 375, type: !5, isLocal: false, isDefinition: true)
!2888 = !DIGlobalVariableExpression(var: !2889, expr: !DIExpression())
!2889 = distinct !DIGlobalVariable(name: "flag_new_for_scope", scope: !2, file: !3, line: 384, type: !1520, isLocal: false, isDefinition: true)
!2890 = !DIGlobalVariableExpression(var: !2891, expr: !DIExpression())
!2891 = distinct !DIGlobalVariable(name: "flag_weak", scope: !2, file: !3, line: 390, type: !1520, isLocal: false, isDefinition: true)
!2892 = !DIGlobalVariableExpression(var: !2893, expr: !DIExpression())
!2893 = distinct !DIGlobalVariable(name: "flag_working_directory", scope: !2, file: !3, line: 397, type: !1520, isLocal: false, isDefinition: true)
!2894 = !DIGlobalVariableExpression(var: !2895, expr: !DIExpression())
!2895 = distinct !DIGlobalVariable(name: "flag_use_cxa_atexit", scope: !2, file: !3, line: 403, type: !1520, isLocal: false, isDefinition: true)
!2896 = !DIGlobalVariableExpression(var: !2897, expr: !DIExpression())
!2897 = distinct !DIGlobalVariable(name: "flag_use_cxa_get_exception_ptr", scope: !2, file: !3, line: 408, type: !1520, isLocal: false, isDefinition: true)
!2898 = !DIGlobalVariableExpression(var: !2899, expr: !DIExpression())
!2899 = distinct !DIGlobalVariable(name: "flag_enforce_eh_specs", scope: !2, file: !3, line: 415, type: !1520, isLocal: false, isDefinition: true)
!2900 = !DIGlobalVariableExpression(var: !2901, expr: !DIExpression())
!2901 = distinct !DIGlobalVariable(name: "flag_threadsafe_statics", scope: !2, file: !3, line: 420, type: !1520, isLocal: false, isDefinition: true)
!2902 = !DIGlobalVariableExpression(var: !2903, expr: !DIExpression())
!2903 = distinct !DIGlobalVariable(name: "flag_pretty_templates", scope: !2, file: !3, line: 425, type: !1520, isLocal: false, isDefinition: true)
!2904 = !DIGlobalVariableExpression(var: !2905, expr: !DIExpression())
!2905 = distinct !DIGlobalVariable(name: "warn_implicit", scope: !2, file: !3, line: 429, type: !1520, isLocal: false, isDefinition: true)
!2906 = !DIGlobalVariableExpression(var: !2907, expr: !DIExpression())
!2907 = distinct !DIGlobalVariable(name: "max_tinst_depth", scope: !2, file: !3, line: 435, type: !1520, isLocal: false, isDefinition: true)
!2908 = !DIGlobalVariableExpression(var: !2909, expr: !DIExpression())
!2909 = distinct !DIGlobalVariable(name: "done_lexing", scope: !2, file: !3, line: 451, type: !1519, isLocal: false, isDefinition: true)
!2910 = !DIGlobalVariableExpression(var: !2911, expr: !DIExpression())
!2911 = distinct !DIGlobalVariable(name: "fname_vars", scope: !2, file: !3, line: 463, type: !2912, isLocal: false, isDefinition: true)
!2912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2913, size: 512, elements: !1793)
!2913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2914)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fname_var_t", file: !3, line: 454, size: 128, elements: !2915)
!2915 = !{!2916, !2918, !2920}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2914, file: !3, line: 456, baseType: !2917, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "rid", scope: !2914, file: !3, line: 457, baseType: !2919, size: 32, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "pretty", scope: !2914, file: !3, line: 458, baseType: !2921, size: 32, offset: 96)
!2921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!2922 = !DIGlobalVariableExpression(var: !2923, expr: !DIExpression())
!2923 = distinct !DIGlobalVariable(name: "c_common_reswords", scope: !2, file: !3, line: 556, type: !2924, isLocal: false, isDefinition: true)
!2924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2925, size: 19328, elements: !2932)
!2925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2926)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_common_resword", file: !6, line: 268, size: 128, elements: !2927)
!2927 = !{!2928, !2930, !2931}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2926, file: !6, line: 270, baseType: !2929, size: 64)
!2929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "rid", scope: !2926, file: !6, line: 271, baseType: !2919, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !2926, file: !6, line: 272, baseType: !2919, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!2932 = !{!2933}
!2933 = !DISubrange(count: 151)
!2934 = !DIGlobalVariableExpression(var: !2935, expr: !DIExpression())
!2935 = distinct !DIGlobalVariable(name: "num_c_common_reswords", scope: !2, file: !3, line: 720, type: !2919, isLocal: false, isDefinition: true)
!2936 = !DIGlobalVariableExpression(var: !2937, expr: !DIExpression())
!2937 = distinct !DIGlobalVariable(name: "c_common_attribute_table", scope: !2, file: !3, line: 724, type: !2938, isLocal: false, isDefinition: true)
!2938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2939, size: 12544, elements: !2953)
!2939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2940)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_spec", file: !140, line: 4046, size: 256, elements: !2941)
!2941 = !{!2942, !2943, !2944, !2945, !2946, !2947, !2948}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2940, file: !140, line: 4050, baseType: !2929, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !2940, file: !140, line: 4052, baseType: !2921, size: 32, offset: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "max_length", scope: !2940, file: !140, line: 4055, baseType: !2921, size: 32, offset: 96)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "decl_required", scope: !2940, file: !140, line: 4063, baseType: !1643, size: 8, offset: 128)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "type_required", scope: !2940, file: !140, line: 4066, baseType: !1643, size: 8, offset: 136)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "function_type_required", scope: !2940, file: !140, line: 4071, baseType: !1643, size: 8, offset: 144)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2940, file: !140, line: 4086, baseType: !2949, size: 64, offset: 192)
!2949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2950)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!1527, !1886, !1527, !1527, !1520, !1518}
!2953 = !{!2954}
!2954 = !DISubrange(count: 49)
!2955 = !DIGlobalVariableExpression(var: !2956, expr: !DIExpression())
!2956 = distinct !DIGlobalVariable(name: "c_common_format_attribute_table", scope: !2, file: !3, line: 838, type: !2957, isLocal: false, isDefinition: true)
!2957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2939, size: 768, elements: !1600)
!2958 = !DIGlobalVariableExpression(var: !2959, expr: !DIExpression())
!2959 = distinct !DIGlobalVariable(name: "emitted_lax_note", scope: !2960, file: !3, line: 1865, type: !1519, isLocal: true, isDefinition: true)
!2960 = distinct !DISubprogram(name: "vector_types_convertible_p", scope: !3, file: !3, line: 1863, type: !2961, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2963)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!1519, !2855, !2855, !1519}
!2963 = !{!2964, !2965, !2966, !2967}
!2964 = !DILocalVariable(name: "t1", arg: 1, scope: !2960, file: !3, line: 1863, type: !2855)
!2965 = !DILocalVariable(name: "t2", arg: 2, scope: !2960, file: !3, line: 1863, type: !2855)
!2966 = !DILocalVariable(name: "emit_lax_note", arg: 3, scope: !2960, file: !3, line: 1863, type: !1519)
!2967 = !DILocalVariable(name: "convertible_lax", scope: !2960, file: !3, line: 1866, type: !1519)
!2968 = !DIGlobalVariableExpression(var: !2969, expr: !DIExpression())
!2969 = distinct !DIGlobalVariable(name: "targetcm", scope: !2, file: !3, line: 9031, type: !2970, isLocal: false, isDefinition: true)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcc_targetcm", file: !2971, line: 1224, size: 64, elements: !2972)
!2971 = !DIFile(filename: "./target.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2972 = !{!2973}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "handle_c_option", scope: !2970, file: !2971, line: 1230, baseType: !2974, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!1519, !1997, !1525, !1520}
!2977 = !DIGlobalVariableExpression(var: !2978, expr: !DIExpression())
!2978 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_c_common_h", scope: !2, file: !2979, line: 215, type: !2980, isLocal: false, isDefinition: true)
!2979 = !DIFile(filename: "./gt-c-common.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2981, size: 2240, elements: !2991)
!2981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2982)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2983, line: 69, size: 320, elements: !2984)
!2983 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2984 = !{!2985, !2986, !2987, !2988, !2990}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2982, file: !2983, line: 70, baseType: !1524, size: 64)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2982, file: !2983, line: 71, baseType: !1997, size: 64, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2982, file: !2983, line: 72, baseType: !1997, size: 64, offset: 128)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2982, file: !2983, line: 73, baseType: !2989, size: 64, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2983, line: 65, baseType: !2328)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2982, file: !2983, line: 74, baseType: !2989, size: 64, offset: 256)
!2991 = !{!2992}
!2992 = !DISubrange(count: 7)
!2993 = !DIGlobalVariableExpression(var: !2994, expr: !DIExpression())
!2994 = distinct !DIGlobalVariable(name: "gt_ggc_rd_gt_c_common_h", scope: !2, file: !2979, line: 261, type: !2995, isLocal: false, isDefinition: true)
!2995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2981, size: 640, elements: !1769)
!2996 = !DIGlobalVariableExpression(var: !2997, expr: !DIExpression())
!2997 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_c_common_h", scope: !2, file: !2979, line: 266, type: !2998, isLocal: false, isDefinition: true)
!2998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2981, size: 960, elements: !1600)
!2999 = !DIGlobalVariableExpression(var: !3000, expr: !DIExpression())
!3000 = distinct !DIGlobalVariable(name: "parse_in", scope: !2, file: !3, line: 56, type: !3001, isLocal: false, isDefinition: true)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpp_reader", file: !405, line: 31, baseType: !3003)
!3003 = !DICompositeType(tag: DW_TAG_structure_type, name: "cpp_reader", file: !1508, line: 91, flags: DIFlagFwdDecl)
!3004 = !DIGlobalVariableExpression(var: !3005, expr: !DIExpression())
!3005 = distinct !DIGlobalVariable(name: "c_global_trees", scope: !2, file: !3, line: 167, type: !3006, isLocal: false, isDefinition: true)
!3006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 3520, elements: !3007)
!3007 = !{!3008}
!3008 = !DISubrange(count: 55)
!3009 = !DIGlobalVariableExpression(var: !3010, expr: !DIExpression())
!3010 = distinct !DIGlobalVariable(name: "flag_preprocess_only", scope: !2, file: !3, line: 173, type: !1520, isLocal: false, isDefinition: true)
!3011 = !DIGlobalVariableExpression(var: !3012, expr: !DIExpression())
!3012 = distinct !DIGlobalVariable(name: "flag_no_line_commands", scope: !2, file: !3, line: 177, type: !1523, isLocal: false, isDefinition: true)
!3013 = !DIGlobalVariableExpression(var: !3014, expr: !DIExpression())
!3014 = distinct !DIGlobalVariable(name: "flag_no_output", scope: !2, file: !3, line: 182, type: !1523, isLocal: false, isDefinition: true)
!3015 = !DIGlobalVariableExpression(var: !3016, expr: !DIExpression())
!3016 = distinct !DIGlobalVariable(name: "flag_dump_macros", scope: !2, file: !3, line: 186, type: !1523, isLocal: false, isDefinition: true)
!3017 = !DIGlobalVariableExpression(var: !3018, expr: !DIExpression())
!3018 = distinct !DIGlobalVariable(name: "flag_dump_includes", scope: !2, file: !3, line: 190, type: !1523, isLocal: false, isDefinition: true)
!3019 = !DIGlobalVariableExpression(var: !3020, expr: !DIExpression())
!3020 = distinct !DIGlobalVariable(name: "flag_pch_preprocess", scope: !2, file: !3, line: 194, type: !1519, isLocal: false, isDefinition: true)
!3021 = !DIGlobalVariableExpression(var: !3022, expr: !DIExpression())
!3022 = distinct !DIGlobalVariable(name: "pch_file", scope: !2, file: !3, line: 199, type: !1525, isLocal: false, isDefinition: true)
!3023 = !DIGlobalVariableExpression(var: !3024, expr: !DIExpression())
!3024 = distinct !DIGlobalVariable(name: "flag_iso", scope: !2, file: !3, line: 203, type: !1520, isLocal: false, isDefinition: true)
!3025 = !DIGlobalVariableExpression(var: !3026, expr: !DIExpression())
!3026 = distinct !DIGlobalVariable(name: "flag_undef", scope: !2, file: !3, line: 207, type: !1520, isLocal: false, isDefinition: true)
!3027 = !DIGlobalVariableExpression(var: !3028, expr: !DIExpression())
!3028 = distinct !DIGlobalVariable(name: "flag_no_builtin", scope: !2, file: !3, line: 211, type: !1520, isLocal: false, isDefinition: true)
!3029 = !DIGlobalVariableExpression(var: !3030, expr: !DIExpression())
!3030 = distinct !DIGlobalVariable(name: "flag_no_nonansi_builtin", scope: !2, file: !3, line: 216, type: !1520, isLocal: false, isDefinition: true)
!3031 = !DIGlobalVariableExpression(var: !3032, expr: !DIExpression())
!3032 = distinct !DIGlobalVariable(name: "flag_short_double", scope: !2, file: !3, line: 220, type: !1520, isLocal: false, isDefinition: true)
!3033 = !DIGlobalVariableExpression(var: !3034, expr: !DIExpression())
!3034 = distinct !DIGlobalVariable(name: "flag_short_wchar", scope: !2, file: !3, line: 224, type: !1520, isLocal: false, isDefinition: true)
!3035 = !DIGlobalVariableExpression(var: !3036, expr: !DIExpression())
!3036 = distinct !DIGlobalVariable(name: "flag_lax_vector_conversions", scope: !2, file: !3, line: 228, type: !1520, isLocal: false, isDefinition: true)
!3037 = !DIGlobalVariableExpression(var: !3038, expr: !DIExpression())
!3038 = distinct !DIGlobalVariable(name: "flag_ms_extensions", scope: !2, file: !3, line: 231, type: !1520, isLocal: false, isDefinition: true)
!3039 = !DIGlobalVariableExpression(var: !3040, expr: !DIExpression())
!3040 = distinct !DIGlobalVariable(name: "flag_no_asm", scope: !2, file: !3, line: 235, type: !1520, isLocal: false, isDefinition: true)
!3041 = !DIGlobalVariableExpression(var: !3042, expr: !DIExpression())
!3042 = distinct !DIGlobalVariable(name: "warn_unknown_pragmas", scope: !2, file: !3, line: 243, type: !1520, isLocal: false, isDefinition: true)
!3043 = !DIGlobalVariableExpression(var: !3044, expr: !DIExpression())
!3044 = distinct !DIGlobalVariable(name: "warn_format", scope: !2, file: !3, line: 248, type: !1520, isLocal: false, isDefinition: true)
!3045 = !DIGlobalVariableExpression(var: !3046, expr: !DIExpression())
!3046 = distinct !DIGlobalVariable(name: "warn_strict_null_sentinel", scope: !2, file: !3, line: 254, type: !1520, isLocal: false, isDefinition: true)
!3047 = !DIGlobalVariableExpression(var: !3048, expr: !DIExpression())
!3048 = distinct !DIGlobalVariable(name: "flag_cond_mismatch", scope: !2, file: !3, line: 277, type: !1520, isLocal: false, isDefinition: true)
!3049 = !DIGlobalVariableExpression(var: !3050, expr: !DIExpression())
!3050 = distinct !DIGlobalVariable(name: "flag_isoc94", scope: !2, file: !3, line: 281, type: !1520, isLocal: false, isDefinition: true)
!3051 = !DIGlobalVariableExpression(var: !3052, expr: !DIExpression())
!3052 = distinct !DIGlobalVariable(name: "flag_isoc99", scope: !2, file: !3, line: 285, type: !1520, isLocal: false, isDefinition: true)
!3053 = !DIGlobalVariableExpression(var: !3054, expr: !DIExpression())
!3054 = distinct !DIGlobalVariable(name: "flag_gen_declaration", scope: !2, file: !3, line: 298, type: !1520, isLocal: false, isDefinition: true)
!3055 = !DIGlobalVariableExpression(var: !3056, expr: !DIExpression())
!3056 = distinct !DIGlobalVariable(name: "print_struct_values", scope: !2, file: !3, line: 304, type: !1520, isLocal: false, isDefinition: true)
!3057 = !DIGlobalVariableExpression(var: !3058, expr: !DIExpression())
!3058 = distinct !DIGlobalVariable(name: "constant_string_class_name", scope: !2, file: !3, line: 308, type: !1525, isLocal: false, isDefinition: true)
!3059 = !DIGlobalVariableExpression(var: !3060, expr: !DIExpression())
!3060 = distinct !DIGlobalVariable(name: "flag_no_gnu_keywords", scope: !2, file: !3, line: 316, type: !1520, isLocal: false, isDefinition: true)
!3061 = !DIGlobalVariableExpression(var: !3062, expr: !DIExpression())
!3062 = distinct !DIGlobalVariable(name: "flag_use_repository", scope: !2, file: !3, line: 336, type: !1520, isLocal: false, isDefinition: true)
!3063 = !DIGlobalVariableExpression(var: !3064, expr: !DIExpression())
!3064 = distinct !DIGlobalVariable(name: "flag_conserve_space", scope: !2, file: !3, line: 362, type: !1520, isLocal: false, isDefinition: true)
!3065 = !DIGlobalVariableExpression(var: !3066, expr: !DIExpression())
!3066 = distinct !DIGlobalVariable(name: "flag_check_new", scope: !2, file: !3, line: 371, type: !1520, isLocal: false, isDefinition: true)
!3067 = !DIGlobalVariableExpression(var: !3068, expr: !DIExpression())
!3068 = distinct !DIGlobalVariable(name: "ridpointers", scope: !2, file: !3, line: 441, type: !1886, isLocal: false, isDefinition: true)
!3069 = !DIGlobalVariableExpression(var: !3070, expr: !DIExpression())
!3070 = distinct !DIGlobalVariable(name: "make_fname_decl", scope: !2, file: !3, line: 443, type: !3071, isLocal: false, isDefinition: true)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3072 = !DISubroutineType(types: !3073)
!3073 = !{!1527, !1651, !1527, !1520}
!3074 = !DIGlobalVariableExpression(var: !3075, expr: !DIExpression())
!3075 = distinct !DIGlobalVariable(name: "c_inhibit_evaluation_warnings", scope: !2, file: !3, line: 447, type: !1520, isLocal: false, isDefinition: true)
!3076 = !DIGlobalVariableExpression(var: !3077, expr: !DIExpression())
!3077 = distinct !DIGlobalVariable(name: "tlist_obstack", scope: !2, file: !3, line: 2337, type: !1781, isLocal: true, isDefinition: true)
!3078 = !DIGlobalVariableExpression(var: !3079, expr: !DIExpression())
!3079 = distinct !DIGlobalVariable(name: "warned_ids", scope: !2, file: !3, line: 2342, type: !2847, isLocal: true, isDefinition: true)
!3080 = !DIGlobalVariableExpression(var: !3081, expr: !DIExpression())
!3081 = distinct !DIGlobalVariable(name: "save_expr_cache", scope: !2, file: !3, line: 2345, type: !2842, isLocal: true, isDefinition: true)
!3082 = !DIGlobalVariableExpression(var: !3083, expr: !DIExpression())
!3083 = distinct !DIGlobalVariable(name: "registered_builtin_types", scope: !2, file: !3, line: 2904, type: !1527, isLocal: true, isDefinition: true)
!3084 = !DIGlobalVariableExpression(var: !3085, expr: !DIExpression())
!3085 = distinct !DIGlobalVariable(name: "type_hash_table", scope: !2, file: !3, line: 4201, type: !2310, isLocal: true, isDefinition: true)
!3086 = !DIGlobalVariableExpression(var: !3087, expr: !DIExpression())
!3087 = distinct !DIGlobalVariable(name: "built_in_attributes", scope: !2, file: !3, line: 4483, type: !3088, isLocal: true, isDefinition: true)
!3088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 6848, elements: !3089)
!3089 = !{!3090}
!3090 = !DISubrange(count: 107)
!3091 = !DIGlobalVariableExpression(var: !3092, expr: !DIExpression())
!3092 = distinct !DIGlobalVariable(name: "builtin_types", scope: !2, file: !3, line: 4530, type: !3093, isLocal: true, isDefinition: true)
!3093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 16128, elements: !3094)
!3094 = !{!3095}
!3095 = !DISubrange(count: 252)
!3096 = !DIGlobalVariableExpression(var: !3097, expr: !DIExpression())
!3097 = distinct !DIGlobalVariable(name: "compound_literal_number", scope: !2, file: !3, line: 5104, type: !1520, isLocal: true, isDefinition: true)
!3098 = !DIGlobalVariableExpression(var: !3099, expr: !DIExpression())
!3099 = distinct !DIGlobalVariable(name: "optimize_args", scope: !2, file: !3, line: 7727, type: !2857, isLocal: true, isDefinition: true)
!3100 = !DIGlobalVariableExpression(var: !3101, expr: !DIExpression())
!3101 = distinct !DIGlobalVariable(name: "resort_data", scope: !2, file: !3, line: 8115, type: !3102, isLocal: true, isDefinition: true)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 8112, size: 128, elements: !3103)
!3103 = !{!3104, !3106}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "new_value", scope: !3102, file: !3, line: 8113, baseType: !3105, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !2983, line: 38, baseType: !2353)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !3102, file: !3, line: 8114, baseType: !1524, size: 64, offset: 64)
!3107 = !DIGlobalVariableExpression(var: !3108, expr: !DIExpression())
!3108 = distinct !DIGlobalVariable(name: "tree_vector_cache", scope: !2, file: !3, line: 9301, type: !2859, isLocal: true, isDefinition: true)
!3109 = !DIGlobalVariableExpression(var: !3110, expr: !DIExpression())
!3110 = distinct !DIGlobalVariable(name: "tlist_firstobj", scope: !2, file: !3, line: 2338, type: !1522, isLocal: true, isDefinition: true)
!3111 = !DIGlobalVariableExpression(var: !3112, expr: !DIExpression())
!3112 = distinct !DIGlobalVariable(name: "disabled_builtins", scope: !2, file: !3, line: 5134, type: !2797, isLocal: true, isDefinition: true)
!3113 = !DIGlobalVariableExpression(var: !2959, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!3114 = !DIGlobalVariableExpression(var: !3101, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 64))
!3115 = !DIGlobalVariableExpression(var: !3101, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 64))
!3116 = !{i32 2, !"Dwarf Version", i32 4}
!3117 = !{i32 2, !"Debug Info Version", i32 3}
!3118 = !{i32 1, !"wchar_size", i32 4}
!3119 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!3120 = distinct !DISubprogram(name: "vprintf", scope: !3121, file: !3121, line: 39, type: !3122, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3132)
!3121 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!1520, !3124, !3125}
!3124 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1525)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !3127)
!3127 = !{!3128, !3129, !3130, !3131}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3126, file: !3, baseType: !7, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3126, file: !3, baseType: !7, size: 32, offset: 32)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3126, file: !3, baseType: !1524, size: 64, offset: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3126, file: !3, baseType: !1524, size: 64, offset: 128)
!3132 = !{!3133, !3134}
!3133 = !DILocalVariable(name: "__fmt", arg: 1, scope: !3120, file: !3121, line: 39, type: !3124)
!3134 = !DILocalVariable(name: "__arg", arg: 2, scope: !3120, file: !3121, line: 39, type: !3125)
!3135 = !DILocation(line: 0, scope: !3120)
!3136 = !DILocation(line: 41, column: 20, scope: !3120)
!3137 = !DILocation(line: 41, column: 10, scope: !3120)
!3138 = !DILocation(line: 41, column: 3, scope: !3120)
!3139 = distinct !DISubprogram(name: "getchar", scope: !3121, file: !3121, line: 47, type: !3140, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3142)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!1520}
!3142 = !{}
!3143 = !DILocation(line: 49, column: 16, scope: !3139)
!3144 = !DILocation(line: 49, column: 10, scope: !3139)
!3145 = !DILocation(line: 49, column: 3, scope: !3139)
!3146 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !3121, file: !3121, line: 56, type: !3147, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3199)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{!1520, !3149}
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3151, line: 7, baseType: !3152)
!3151 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3153, line: 49, size: 1728, elements: !3154)
!3153 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3154 = !{!3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3170, !3172, !3173, !3174, !3177, !3178, !3179, !3180, !3183, !3185, !3188, !3191, !3192, !3193, !3194, !3195}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3152, file: !3153, line: 51, baseType: !1520, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3152, file: !3153, line: 54, baseType: !1522, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3152, file: !3153, line: 55, baseType: !1522, size: 64, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3152, file: !3153, line: 56, baseType: !1522, size: 64, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3152, file: !3153, line: 57, baseType: !1522, size: 64, offset: 256)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3152, file: !3153, line: 58, baseType: !1522, size: 64, offset: 320)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3152, file: !3153, line: 59, baseType: !1522, size: 64, offset: 384)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3152, file: !3153, line: 60, baseType: !1522, size: 64, offset: 448)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3152, file: !3153, line: 61, baseType: !1522, size: 64, offset: 512)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3152, file: !3153, line: 64, baseType: !1522, size: 64, offset: 576)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3152, file: !3153, line: 65, baseType: !1522, size: 64, offset: 640)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3152, file: !3153, line: 66, baseType: !1522, size: 64, offset: 704)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3152, file: !3153, line: 68, baseType: !3168, size: 64, offset: 768)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!3169 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3153, line: 36, flags: DIFlagFwdDecl)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3152, file: !3153, line: 70, baseType: !3171, size: 64, offset: 832)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3152, file: !3153, line: 72, baseType: !1520, size: 32, offset: 896)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3152, file: !3153, line: 73, baseType: !1520, size: 32, offset: 928)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3152, file: !3153, line: 74, baseType: !3175, size: 64, offset: 960)
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3176, line: 152, baseType: !1582)
!3176 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3152, file: !3153, line: 77, baseType: !2816, size: 16, offset: 1024)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3152, file: !3153, line: 78, baseType: !2618, size: 8, offset: 1040)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3152, file: !3153, line: 79, baseType: !1624, size: 8, offset: 1048)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3152, file: !3153, line: 81, baseType: !3181, size: 64, offset: 1088)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3153, line: 43, baseType: null)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3152, file: !3153, line: 89, baseType: !3184, size: 64, offset: 1152)
!3184 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !3176, line: 153, baseType: !1582)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3152, file: !3153, line: 91, baseType: !3186, size: 64, offset: 1216)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3153, line: 37, flags: DIFlagFwdDecl)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3152, file: !3153, line: 92, baseType: !3189, size: 64, offset: 1280)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3153, line: 38, flags: DIFlagFwdDecl)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3152, file: !3153, line: 93, baseType: !3171, size: 64, offset: 1344)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3152, file: !3153, line: 94, baseType: !1524, size: 64, offset: 1408)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3152, file: !3153, line: 95, baseType: !1997, size: 64, offset: 1472)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3152, file: !3153, line: 96, baseType: !1520, size: 32, offset: 1536)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3152, file: !3153, line: 98, baseType: !3196, size: 160, offset: 1568)
!3196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 160, elements: !3197)
!3197 = !{!3198}
!3198 = !DISubrange(count: 20)
!3199 = !{!3200}
!3200 = !DILocalVariable(name: "__fp", arg: 1, scope: !3146, file: !3121, line: 56, type: !3149)
!3201 = !DILocation(line: 0, scope: !3146)
!3202 = !DILocation(line: 58, column: 10, scope: !3146)
!3203 = !DILocation(line: 58, column: 3, scope: !3146)
!3204 = distinct !DISubprogram(name: "getc_unlocked", scope: !3121, file: !3121, line: 66, type: !3147, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3205)
!3205 = !{!3206}
!3206 = !DILocalVariable(name: "__fp", arg: 1, scope: !3204, file: !3121, line: 66, type: !3149)
!3207 = !DILocation(line: 0, scope: !3204)
!3208 = !DILocation(line: 68, column: 10, scope: !3204)
!3209 = !DILocation(line: 68, column: 3, scope: !3204)
!3210 = distinct !DISubprogram(name: "getchar_unlocked", scope: !3121, file: !3121, line: 73, type: !3140, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3142)
!3211 = !DILocation(line: 75, column: 10, scope: !3210)
!3212 = !DILocation(line: 75, column: 3, scope: !3210)
!3213 = distinct !DISubprogram(name: "putchar", scope: !3121, file: !3121, line: 82, type: !3214, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3216)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{!1520, !1520}
!3216 = !{!3217}
!3217 = !DILocalVariable(name: "__c", arg: 1, scope: !3213, file: !3121, line: 82, type: !1520)
!3218 = !DILocation(line: 0, scope: !3213)
!3219 = !DILocation(line: 84, column: 21, scope: !3213)
!3220 = !DILocation(line: 84, column: 10, scope: !3213)
!3221 = !DILocation(line: 84, column: 3, scope: !3213)
!3222 = distinct !DISubprogram(name: "fputc_unlocked", scope: !3121, file: !3121, line: 91, type: !3223, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3225)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!1520, !1520, !3149}
!3225 = !{!3226, !3227}
!3226 = !DILocalVariable(name: "__c", arg: 1, scope: !3222, file: !3121, line: 91, type: !1520)
!3227 = !DILocalVariable(name: "__stream", arg: 2, scope: !3222, file: !3121, line: 91, type: !3149)
!3228 = !DILocation(line: 0, scope: !3222)
!3229 = !DILocation(line: 93, column: 10, scope: !3222)
!3230 = !DILocation(line: 93, column: 3, scope: !3222)
!3231 = distinct !DISubprogram(name: "putc_unlocked", scope: !3121, file: !3121, line: 101, type: !3223, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3232)
!3232 = !{!3233, !3234}
!3233 = !DILocalVariable(name: "__c", arg: 1, scope: !3231, file: !3121, line: 101, type: !1520)
!3234 = !DILocalVariable(name: "__stream", arg: 2, scope: !3231, file: !3121, line: 101, type: !3149)
!3235 = !DILocation(line: 0, scope: !3231)
!3236 = !DILocation(line: 103, column: 10, scope: !3231)
!3237 = !DILocation(line: 103, column: 3, scope: !3231)
!3238 = distinct !DISubprogram(name: "putchar_unlocked", scope: !3121, file: !3121, line: 108, type: !3214, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3239)
!3239 = !{!3240}
!3240 = !DILocalVariable(name: "__c", arg: 1, scope: !3238, file: !3121, line: 108, type: !1520)
!3241 = !DILocation(line: 0, scope: !3238)
!3242 = !DILocation(line: 110, column: 10, scope: !3238)
!3243 = !DILocation(line: 110, column: 3, scope: !3238)
!3244 = distinct !DISubprogram(name: "getline", scope: !3121, file: !3121, line: 118, type: !3245, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3249)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{!3247, !1521, !3248, !3149}
!3247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !3176, line: 193, baseType: !1582)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!3249 = !{!3250, !3251, !3252}
!3250 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !3244, file: !3121, line: 118, type: !1521)
!3251 = !DILocalVariable(name: "__n", arg: 2, scope: !3244, file: !3121, line: 118, type: !3248)
!3252 = !DILocalVariable(name: "__stream", arg: 3, scope: !3244, file: !3121, line: 118, type: !3149)
!3253 = !DILocation(line: 0, scope: !3244)
!3254 = !DILocation(line: 120, column: 10, scope: !3244)
!3255 = !DILocation(line: 120, column: 3, scope: !3244)
!3256 = distinct !DISubprogram(name: "feof_unlocked", scope: !3121, file: !3121, line: 128, type: !3147, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3257)
!3257 = !{!3258}
!3258 = !DILocalVariable(name: "__stream", arg: 1, scope: !3256, file: !3121, line: 128, type: !3149)
!3259 = !DILocation(line: 0, scope: !3256)
!3260 = !DILocation(line: 130, column: 10, scope: !3256)
!3261 = !DILocation(line: 130, column: 3, scope: !3256)
!3262 = distinct !DISubprogram(name: "ferror_unlocked", scope: !3121, file: !3121, line: 135, type: !3147, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3263)
!3263 = !{!3264}
!3264 = !DILocalVariable(name: "__stream", arg: 1, scope: !3262, file: !3121, line: 135, type: !3149)
!3265 = !DILocation(line: 0, scope: !3262)
!3266 = !DILocation(line: 137, column: 10, scope: !3262)
!3267 = !DILocation(line: 137, column: 3, scope: !3262)
!3268 = distinct !DISubprogram(name: "tolower", scope: !3269, file: !3269, line: 207, type: !3214, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3270)
!3269 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!3270 = !{!3271}
!3271 = !DILocalVariable(name: "__c", arg: 1, scope: !3268, file: !3269, line: 207, type: !1520)
!3272 = !DILocation(line: 0, scope: !3268)
!3273 = !DILocation(line: 209, column: 22, scope: !3268)
!3274 = !DILocation(line: 209, column: 39, scope: !3268)
!3275 = !DILocation(line: 209, column: 38, scope: !3268)
!3276 = !DILocation(line: 209, column: 37, scope: !3268)
!3277 = !DILocation(line: 209, column: 10, scope: !3268)
!3278 = !DILocation(line: 209, column: 3, scope: !3268)
!3279 = distinct !DISubprogram(name: "toupper", scope: !3269, file: !3269, line: 213, type: !3214, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3280)
!3280 = !{!3281}
!3281 = !DILocalVariable(name: "__c", arg: 1, scope: !3279, file: !3269, line: 213, type: !1520)
!3282 = !DILocation(line: 0, scope: !3279)
!3283 = !DILocation(line: 215, column: 22, scope: !3279)
!3284 = !DILocation(line: 215, column: 39, scope: !3279)
!3285 = !DILocation(line: 215, column: 38, scope: !3279)
!3286 = !DILocation(line: 215, column: 37, scope: !3279)
!3287 = !DILocation(line: 215, column: 10, scope: !3279)
!3288 = !DILocation(line: 215, column: 3, scope: !3279)
!3289 = distinct !DISubprogram(name: "atoi", scope: !3290, file: !3290, line: 361, type: !3291, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3293)
!3290 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!3291 = !DISubroutineType(types: !3292)
!3292 = !{!1520, !1525}
!3293 = !{!3294}
!3294 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3289, file: !3290, line: 361, type: !1525)
!3295 = !DILocation(line: 0, scope: !3289)
!3296 = !DILocation(line: 363, column: 16, scope: !3289)
!3297 = !DILocation(line: 363, column: 10, scope: !3289)
!3298 = !DILocation(line: 363, column: 3, scope: !3289)
!3299 = distinct !DISubprogram(name: "atol", scope: !3290, file: !3290, line: 366, type: !3300, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3302)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!1582, !1525}
!3302 = !{!3303}
!3303 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3299, file: !3290, line: 366, type: !1525)
!3304 = !DILocation(line: 0, scope: !3299)
!3305 = !DILocation(line: 368, column: 10, scope: !3299)
!3306 = !DILocation(line: 368, column: 3, scope: !3299)
!3307 = distinct !DISubprogram(name: "atoll", scope: !3290, file: !3290, line: 373, type: !3308, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3311)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!3310, !1525}
!3310 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!3311 = !{!3312}
!3312 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3307, file: !3290, line: 373, type: !1525)
!3313 = !DILocation(line: 0, scope: !3307)
!3314 = !DILocation(line: 375, column: 10, scope: !3307)
!3315 = !DILocation(line: 375, column: 3, scope: !3307)
!3316 = distinct !DISubprogram(name: "bsearch", scope: !3317, file: !3317, line: 20, type: !3318, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3321)
!3317 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!3318 = !DISubroutineType(types: !3319)
!3319 = !{!1524, !2158, !2158, !1997, !1997, !3320}
!3320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !3290, line: 808, baseType: !2323)
!3321 = !{!3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331}
!3322 = !DILocalVariable(name: "__key", arg: 1, scope: !3316, file: !3317, line: 20, type: !2158)
!3323 = !DILocalVariable(name: "__base", arg: 2, scope: !3316, file: !3317, line: 20, type: !2158)
!3324 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !3316, file: !3317, line: 20, type: !1997)
!3325 = !DILocalVariable(name: "__size", arg: 4, scope: !3316, file: !3317, line: 20, type: !1997)
!3326 = !DILocalVariable(name: "__compar", arg: 5, scope: !3316, file: !3317, line: 21, type: !3320)
!3327 = !DILocalVariable(name: "__l", scope: !3316, file: !3317, line: 23, type: !1997)
!3328 = !DILocalVariable(name: "__u", scope: !3316, file: !3317, line: 23, type: !1997)
!3329 = !DILocalVariable(name: "__idx", scope: !3316, file: !3317, line: 23, type: !1997)
!3330 = !DILocalVariable(name: "__p", scope: !3316, file: !3317, line: 24, type: !2158)
!3331 = !DILocalVariable(name: "__comparison", scope: !3316, file: !3317, line: 25, type: !1520)
!3332 = !DILocation(line: 0, scope: !3316)
!3333 = !DILocation(line: 29, column: 3, scope: !3316)
!3334 = !DILocation(line: 27, column: 7, scope: !3316)
!3335 = !DILocation(line: 29, column: 14, scope: !3316)
!3336 = !DILocation(line: 31, column: 20, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3316, file: !3317, line: 30, column: 5)
!3338 = !DILocation(line: 31, column: 27, scope: !3337)
!3339 = !DILocation(line: 32, column: 56, scope: !3337)
!3340 = !DILocation(line: 32, column: 47, scope: !3337)
!3341 = !DILocation(line: 33, column: 22, scope: !3337)
!3342 = !DILocation(line: 34, column: 24, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3337, file: !3317, line: 34, column: 11)
!3344 = !DILocation(line: 34, column: 11, scope: !3337)
!3345 = !DILocation(line: 36, column: 29, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3343, file: !3317, line: 36, column: 16)
!3347 = !DILocation(line: 36, column: 16, scope: !3343)
!3348 = !DILocation(line: 37, column: 14, scope: !3346)
!3349 = distinct !{!3349, !3333, !3350}
!3350 = !DILocation(line: 40, column: 5, scope: !3316)
!3351 = !DILocation(line: 43, column: 1, scope: !3316)
!3352 = distinct !DISubprogram(name: "atof", scope: !3353, file: !3353, line: 25, type: !3354, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3357)
!3353 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!3356, !1525}
!3356 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3357 = !{!3358}
!3358 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3352, file: !3353, line: 25, type: !1525)
!3359 = !DILocation(line: 0, scope: !3352)
!3360 = !DILocation(line: 27, column: 10, scope: !3352)
!3361 = !DILocation(line: 27, column: 3, scope: !3352)
!3362 = distinct !DISubprogram(name: "strtoimax", scope: !3363, file: !3363, line: 324, type: !3364, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3370)
!3363 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!3366, !3124, !3369, !1520}
!3366 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !3367, line: 101, baseType: !3368)
!3367 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !3176, line: 72, baseType: !1582)
!3369 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1521)
!3370 = !{!3371, !3372, !3373}
!3371 = !DILocalVariable(name: "nptr", arg: 1, scope: !3362, file: !3363, line: 324, type: !3124)
!3372 = !DILocalVariable(name: "endptr", arg: 2, scope: !3362, file: !3363, line: 324, type: !3369)
!3373 = !DILocalVariable(name: "base", arg: 3, scope: !3362, file: !3363, line: 324, type: !1520)
!3374 = !DILocation(line: 0, scope: !3362)
!3375 = !DILocation(line: 327, column: 10, scope: !3362)
!3376 = !DILocation(line: 327, column: 3, scope: !3362)
!3377 = distinct !DISubprogram(name: "strtoumax", scope: !3363, file: !3363, line: 336, type: !3378, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3382)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!3380, !3124, !3369, !1520}
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !3367, line: 102, baseType: !3381)
!3381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !3176, line: 73, baseType: !1580)
!3382 = !{!3383, !3384, !3385}
!3383 = !DILocalVariable(name: "nptr", arg: 1, scope: !3377, file: !3363, line: 336, type: !3124)
!3384 = !DILocalVariable(name: "endptr", arg: 2, scope: !3377, file: !3363, line: 336, type: !3369)
!3385 = !DILocalVariable(name: "base", arg: 3, scope: !3377, file: !3363, line: 336, type: !1520)
!3386 = !DILocation(line: 0, scope: !3377)
!3387 = !DILocation(line: 339, column: 10, scope: !3377)
!3388 = !DILocation(line: 339, column: 3, scope: !3377)
!3389 = distinct !DISubprogram(name: "wcstoimax", scope: !3363, file: !3363, line: 348, type: !3390, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3399)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{!3366, !3392, !3396, !1520}
!3392 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3393)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3395)
!3395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !3363, line: 34, baseType: !1520)
!3396 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3397)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3399 = !{!3400, !3401, !3402}
!3400 = !DILocalVariable(name: "nptr", arg: 1, scope: !3389, file: !3363, line: 348, type: !3392)
!3401 = !DILocalVariable(name: "endptr", arg: 2, scope: !3389, file: !3363, line: 348, type: !3396)
!3402 = !DILocalVariable(name: "base", arg: 3, scope: !3389, file: !3363, line: 348, type: !1520)
!3403 = !DILocation(line: 0, scope: !3389)
!3404 = !DILocation(line: 351, column: 10, scope: !3389)
!3405 = !DILocation(line: 351, column: 3, scope: !3389)
!3406 = distinct !DISubprogram(name: "wcstoumax", scope: !3363, file: !3363, line: 362, type: !3407, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3409)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!3380, !3392, !3396, !1520}
!3409 = !{!3410, !3411, !3412}
!3410 = !DILocalVariable(name: "nptr", arg: 1, scope: !3406, file: !3363, line: 362, type: !3392)
!3411 = !DILocalVariable(name: "endptr", arg: 2, scope: !3406, file: !3363, line: 362, type: !3396)
!3412 = !DILocalVariable(name: "base", arg: 3, scope: !3406, file: !3363, line: 362, type: !1520)
!3413 = !DILocation(line: 0, scope: !3406)
!3414 = !DILocation(line: 365, column: 10, scope: !3406)
!3415 = !DILocation(line: 365, column: 3, scope: !3406)
!3416 = distinct !DISubprogram(name: "stat", scope: !3417, file: !3417, line: 453, type: !3418, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3455)
!3417 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!1520, !1525, !3420}
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !3422, line: 46, size: 1152, elements: !3423)
!3422 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!3423 = !{!3424, !3426, !3428, !3430, !3432, !3434, !3436, !3437, !3438, !3439, !3441, !3443, !3451, !3452, !3453}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3421, file: !3422, line: 48, baseType: !3425, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !3176, line: 145, baseType: !1580)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3421, file: !3422, line: 53, baseType: !3427, size: 64, offset: 64)
!3427 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !3176, line: 148, baseType: !1580)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3421, file: !3422, line: 61, baseType: !3429, size: 64, offset: 128)
!3429 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !3176, line: 151, baseType: !1580)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3421, file: !3422, line: 62, baseType: !3431, size: 32, offset: 192)
!3431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !3176, line: 150, baseType: !7)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3421, file: !3422, line: 64, baseType: !3433, size: 32, offset: 224)
!3433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !3176, line: 146, baseType: !7)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3421, file: !3422, line: 65, baseType: !3435, size: 32, offset: 256)
!3435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !3176, line: 147, baseType: !7)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3421, file: !3422, line: 67, baseType: !1520, size: 32, offset: 288)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3421, file: !3422, line: 69, baseType: !3425, size: 64, offset: 320)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3421, file: !3422, line: 74, baseType: !3175, size: 64, offset: 384)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3421, file: !3422, line: 78, baseType: !3440, size: 64, offset: 448)
!3440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !3176, line: 174, baseType: !1582)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3421, file: !3422, line: 80, baseType: !3442, size: 64, offset: 512)
!3442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !3176, line: 179, baseType: !1582)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3421, file: !3422, line: 91, baseType: !3444, size: 128, offset: 576)
!3444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !3445, line: 10, size: 128, elements: !3446)
!3445 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!3446 = !{!3447, !3449}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3444, file: !3445, line: 12, baseType: !3448, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !3176, line: 160, baseType: !1582)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3444, file: !3445, line: 16, baseType: !3450, size: 64, offset: 64)
!3450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !3176, line: 196, baseType: !1582)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3421, file: !3422, line: 92, baseType: !3444, size: 128, offset: 704)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3421, file: !3422, line: 93, baseType: !3444, size: 128, offset: 832)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3421, file: !3422, line: 106, baseType: !3454, size: 192, offset: 960)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3450, size: 192, elements: !1600)
!3455 = !{!3456, !3457}
!3456 = !DILocalVariable(name: "__path", arg: 1, scope: !3416, file: !3417, line: 453, type: !1525)
!3457 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3416, file: !3417, line: 453, type: !3420)
!3458 = !DILocation(line: 0, scope: !3416)
!3459 = !DILocation(line: 455, column: 10, scope: !3416)
!3460 = !DILocation(line: 455, column: 3, scope: !3416)
!3461 = distinct !DISubprogram(name: "lstat", scope: !3417, file: !3417, line: 460, type: !3418, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3462)
!3462 = !{!3463, !3464}
!3463 = !DILocalVariable(name: "__path", arg: 1, scope: !3461, file: !3417, line: 460, type: !1525)
!3464 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3461, file: !3417, line: 460, type: !3420)
!3465 = !DILocation(line: 0, scope: !3461)
!3466 = !DILocation(line: 462, column: 10, scope: !3461)
!3467 = !DILocation(line: 462, column: 3, scope: !3461)
!3468 = distinct !DISubprogram(name: "fstat", scope: !3417, file: !3417, line: 467, type: !3469, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3471)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!1520, !1520, !3420}
!3471 = !{!3472, !3473}
!3472 = !DILocalVariable(name: "__fd", arg: 1, scope: !3468, file: !3417, line: 467, type: !1520)
!3473 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3468, file: !3417, line: 467, type: !3420)
!3474 = !DILocation(line: 0, scope: !3468)
!3475 = !DILocation(line: 469, column: 10, scope: !3468)
!3476 = !DILocation(line: 469, column: 3, scope: !3468)
!3477 = distinct !DISubprogram(name: "fstatat", scope: !3417, file: !3417, line: 474, type: !3478, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3480)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!1520, !1520, !1525, !3420, !1520}
!3480 = !{!3481, !3482, !3483, !3484}
!3481 = !DILocalVariable(name: "__fd", arg: 1, scope: !3477, file: !3417, line: 474, type: !1520)
!3482 = !DILocalVariable(name: "__filename", arg: 2, scope: !3477, file: !3417, line: 474, type: !1525)
!3483 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3477, file: !3417, line: 474, type: !3420)
!3484 = !DILocalVariable(name: "__flag", arg: 4, scope: !3477, file: !3417, line: 474, type: !1520)
!3485 = !DILocation(line: 0, scope: !3477)
!3486 = !DILocation(line: 477, column: 10, scope: !3477)
!3487 = !DILocation(line: 477, column: 3, scope: !3477)
!3488 = distinct !DISubprogram(name: "mknod", scope: !3417, file: !3417, line: 483, type: !3489, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3491)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!1520, !1525, !3431, !3425}
!3491 = !{!3492, !3493, !3494}
!3492 = !DILocalVariable(name: "__path", arg: 1, scope: !3488, file: !3417, line: 483, type: !1525)
!3493 = !DILocalVariable(name: "__mode", arg: 2, scope: !3488, file: !3417, line: 483, type: !3431)
!3494 = !DILocalVariable(name: "__dev", arg: 3, scope: !3488, file: !3417, line: 483, type: !3425)
!3495 = !DILocation(line: 0, scope: !3488)
!3496 = !DILocation(line: 485, column: 10, scope: !3488)
!3497 = !DILocation(line: 485, column: 3, scope: !3488)
!3498 = distinct !DISubprogram(name: "mknodat", scope: !3417, file: !3417, line: 491, type: !3499, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3501)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{!1520, !1520, !1525, !3431, !3425}
!3501 = !{!3502, !3503, !3504, !3505}
!3502 = !DILocalVariable(name: "__fd", arg: 1, scope: !3498, file: !3417, line: 491, type: !1520)
!3503 = !DILocalVariable(name: "__path", arg: 2, scope: !3498, file: !3417, line: 491, type: !1525)
!3504 = !DILocalVariable(name: "__mode", arg: 3, scope: !3498, file: !3417, line: 491, type: !3431)
!3505 = !DILocalVariable(name: "__dev", arg: 4, scope: !3498, file: !3417, line: 491, type: !3425)
!3506 = !DILocation(line: 0, scope: !3498)
!3507 = !DILocation(line: 494, column: 10, scope: !3498)
!3508 = !DILocation(line: 494, column: 3, scope: !3498)
!3509 = distinct !DISubprogram(name: "stat64", scope: !3417, file: !3417, line: 502, type: !3510, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3532)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!1520, !1525, !3512}
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !3422, line: 119, size: 1152, elements: !3514)
!3514 = !{!3515, !3516, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3528, !3529, !3530, !3531}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3513, file: !3422, line: 121, baseType: !3425, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3513, file: !3422, line: 123, baseType: !3517, size: 64, offset: 64)
!3517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !3176, line: 149, baseType: !1580)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3513, file: !3422, line: 124, baseType: !3429, size: 64, offset: 128)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3513, file: !3422, line: 125, baseType: !3431, size: 32, offset: 192)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3513, file: !3422, line: 132, baseType: !3433, size: 32, offset: 224)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3513, file: !3422, line: 133, baseType: !3435, size: 32, offset: 256)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3513, file: !3422, line: 135, baseType: !1520, size: 32, offset: 288)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3513, file: !3422, line: 136, baseType: !3425, size: 64, offset: 320)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3513, file: !3422, line: 137, baseType: !3175, size: 64, offset: 384)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3513, file: !3422, line: 143, baseType: !3440, size: 64, offset: 448)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3513, file: !3422, line: 144, baseType: !3527, size: 64, offset: 512)
!3527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !3176, line: 180, baseType: !1582)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3513, file: !3422, line: 152, baseType: !3444, size: 128, offset: 576)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3513, file: !3422, line: 153, baseType: !3444, size: 128, offset: 704)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3513, file: !3422, line: 154, baseType: !3444, size: 128, offset: 832)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3513, file: !3422, line: 164, baseType: !3454, size: 192, offset: 960)
!3532 = !{!3533, !3534}
!3533 = !DILocalVariable(name: "__path", arg: 1, scope: !3509, file: !3417, line: 502, type: !1525)
!3534 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3509, file: !3417, line: 502, type: !3512)
!3535 = !DILocation(line: 0, scope: !3509)
!3536 = !DILocation(line: 504, column: 10, scope: !3509)
!3537 = !DILocation(line: 504, column: 3, scope: !3509)
!3538 = distinct !DISubprogram(name: "lstat64", scope: !3417, file: !3417, line: 509, type: !3510, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3539)
!3539 = !{!3540, !3541}
!3540 = !DILocalVariable(name: "__path", arg: 1, scope: !3538, file: !3417, line: 509, type: !1525)
!3541 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3538, file: !3417, line: 509, type: !3512)
!3542 = !DILocation(line: 0, scope: !3538)
!3543 = !DILocation(line: 511, column: 10, scope: !3538)
!3544 = !DILocation(line: 511, column: 3, scope: !3538)
!3545 = distinct !DISubprogram(name: "fstat64", scope: !3417, file: !3417, line: 516, type: !3546, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3548)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!1520, !1520, !3512}
!3548 = !{!3549, !3550}
!3549 = !DILocalVariable(name: "__fd", arg: 1, scope: !3545, file: !3417, line: 516, type: !1520)
!3550 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3545, file: !3417, line: 516, type: !3512)
!3551 = !DILocation(line: 0, scope: !3545)
!3552 = !DILocation(line: 518, column: 10, scope: !3545)
!3553 = !DILocation(line: 518, column: 3, scope: !3545)
!3554 = distinct !DISubprogram(name: "fstatat64", scope: !3417, file: !3417, line: 523, type: !3555, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3557)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{!1520, !1520, !1525, !3512, !1520}
!3557 = !{!3558, !3559, !3560, !3561}
!3558 = !DILocalVariable(name: "__fd", arg: 1, scope: !3554, file: !3417, line: 523, type: !1520)
!3559 = !DILocalVariable(name: "__filename", arg: 2, scope: !3554, file: !3417, line: 523, type: !1525)
!3560 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3554, file: !3417, line: 523, type: !3512)
!3561 = !DILocalVariable(name: "__flag", arg: 4, scope: !3554, file: !3417, line: 523, type: !1520)
!3562 = !DILocation(line: 0, scope: !3554)
!3563 = !DILocation(line: 526, column: 10, scope: !3554)
!3564 = !DILocation(line: 526, column: 3, scope: !3554)
!3565 = distinct !DISubprogram(name: "handle_packed_attribute", scope: !3, file: !3, line: 5815, type: !2951, scopeLine: 5817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3566)
!3566 = !{!3567, !3568, !3569, !3570, !3571}
!3567 = !DILocalVariable(name: "node", arg: 1, scope: !3565, file: !3, line: 5815, type: !1886)
!3568 = !DILocalVariable(name: "name", arg: 2, scope: !3565, file: !3, line: 5815, type: !1527)
!3569 = !DILocalVariable(name: "args", arg: 3, scope: !3565, file: !3, line: 5815, type: !1527)
!3570 = !DILocalVariable(name: "flags", arg: 4, scope: !3565, file: !3, line: 5816, type: !1520)
!3571 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3565, file: !3, line: 5816, type: !1518)
!3572 = !DILocation(line: 0, scope: !3565)
!3573 = !DILocation(line: 5818, column: 7, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3565, file: !3, line: 5818, column: 7)
!3575 = !DILocation(line: 5818, column: 7, scope: !3565)
!3576 = !DILocation(line: 5820, column: 19, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 5820, column: 11)
!3578 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 5819, column: 5)
!3579 = !DILocation(line: 5820, column: 11, scope: !3578)
!3580 = !DILocation(line: 5821, column: 10, scope: !3577)
!3581 = !DILocation(line: 5821, column: 8, scope: !3577)
!3582 = !DILocation(line: 5821, column: 2, scope: !3577)
!3583 = !DILocation(line: 0, scope: !3578)
!3584 = !DILocation(line: 5822, column: 27, scope: !3578)
!3585 = !DILocation(line: 5822, column: 7, scope: !3578)
!3586 = !DILocation(line: 5823, column: 5, scope: !3578)
!3587 = !DILocation(line: 5824, column: 30, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 5824, column: 12)
!3589 = !DILocation(line: 5824, column: 12, scope: !3574)
!3590 = !DILocation(line: 5826, column: 11, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 5826, column: 11)
!3592 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 5825, column: 5)
!3593 = !DILocation(line: 5826, column: 42, scope: !3591)
!3594 = !DILocation(line: 5828, column: 4, scope: !3591)
!3595 = !DILocation(line: 5828, column: 9, scope: !3591)
!3596 = !DILocation(line: 5826, column: 11, scope: !3592)
!3597 = !DILocation(line: 5829, column: 2, scope: !3591)
!3598 = !DILocation(line: 5833, column: 22, scope: !3591)
!3599 = !DILocation(line: 5841, column: 7, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 5840, column: 5)
!3601 = !DILocation(line: 5842, column: 21, scope: !3600)
!3602 = !DILocation(line: 5845, column: 3, scope: !3565)
!3603 = distinct !DISubprogram(name: "handle_nocommon_attribute", scope: !3, file: !3, line: 5852, type: !2951, scopeLine: 5855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3604)
!3604 = !{!3605, !3606, !3607, !3608, !3609}
!3605 = !DILocalVariable(name: "node", arg: 1, scope: !3603, file: !3, line: 5852, type: !1886)
!3606 = !DILocalVariable(name: "name", arg: 2, scope: !3603, file: !3, line: 5852, type: !1527)
!3607 = !DILocalVariable(name: "args", arg: 3, scope: !3603, file: !3, line: 5853, type: !1527)
!3608 = !DILocalVariable(name: "flags", arg: 4, scope: !3603, file: !3, line: 5854, type: !1520)
!3609 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3603, file: !3, line: 5854, type: !1518)
!3610 = !DILocation(line: 0, scope: !3603)
!3611 = !DILocation(line: 5856, column: 7, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 5856, column: 7)
!3613 = !DILocation(line: 5856, column: 25, scope: !3612)
!3614 = !DILocation(line: 5856, column: 7, scope: !3603)
!3615 = !DILocation(line: 5857, column: 5, scope: !3612)
!3616 = !DILocation(line: 5857, column: 25, scope: !3612)
!3617 = !DILocation(line: 5860, column: 7, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 5859, column: 5)
!3619 = !DILocation(line: 5861, column: 21, scope: !3618)
!3620 = !DILocation(line: 5864, column: 3, scope: !3603)
!3621 = distinct !DISubprogram(name: "handle_common_attribute", scope: !3, file: !3, line: 5871, type: !2951, scopeLine: 5873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3622)
!3622 = !{!3623, !3624, !3625, !3626, !3627}
!3623 = !DILocalVariable(name: "node", arg: 1, scope: !3621, file: !3, line: 5871, type: !1886)
!3624 = !DILocalVariable(name: "name", arg: 2, scope: !3621, file: !3, line: 5871, type: !1527)
!3625 = !DILocalVariable(name: "args", arg: 3, scope: !3621, file: !3, line: 5871, type: !1527)
!3626 = !DILocalVariable(name: "flags", arg: 4, scope: !3621, file: !3, line: 5872, type: !1520)
!3627 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3621, file: !3, line: 5872, type: !1518)
!3628 = !DILocation(line: 0, scope: !3621)
!3629 = !DILocation(line: 5874, column: 7, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 5874, column: 7)
!3631 = !DILocation(line: 5874, column: 25, scope: !3630)
!3632 = !DILocation(line: 5874, column: 7, scope: !3621)
!3633 = !DILocation(line: 5875, column: 5, scope: !3630)
!3634 = !DILocation(line: 5875, column: 25, scope: !3630)
!3635 = !DILocation(line: 5878, column: 7, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 5877, column: 5)
!3637 = !DILocation(line: 5879, column: 21, scope: !3636)
!3638 = !DILocation(line: 5882, column: 3, scope: !3621)
!3639 = distinct !DISubprogram(name: "handle_noreturn_attribute", scope: !3, file: !3, line: 5889, type: !2951, scopeLine: 5891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3640)
!3640 = !{!3641, !3642, !3643, !3644, !3645, !3646}
!3641 = !DILocalVariable(name: "node", arg: 1, scope: !3639, file: !3, line: 5889, type: !1886)
!3642 = !DILocalVariable(name: "name", arg: 2, scope: !3639, file: !3, line: 5889, type: !1527)
!3643 = !DILocalVariable(name: "args", arg: 3, scope: !3639, file: !3, line: 5889, type: !1527)
!3644 = !DILocalVariable(name: "flags", arg: 4, scope: !3639, file: !3, line: 5890, type: !1520)
!3645 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3639, file: !3, line: 5890, type: !1518)
!3646 = !DILocalVariable(name: "type", scope: !3639, file: !3, line: 5892, type: !1527)
!3647 = !DILocation(line: 0, scope: !3639)
!3648 = !DILocation(line: 5892, column: 15, scope: !3639)
!3649 = !DILocation(line: 5895, column: 7, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 5895, column: 7)
!3651 = !DILocation(line: 5895, column: 25, scope: !3650)
!3652 = !DILocation(line: 5895, column: 7, scope: !3639)
!3653 = !DILocation(line: 5896, column: 32, scope: !3650)
!3654 = !DILocation(line: 5896, column: 5, scope: !3650)
!3655 = !DILocation(line: 5897, column: 12, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 5897, column: 12)
!3657 = !DILocation(line: 5897, column: 29, scope: !3656)
!3658 = !DILocation(line: 5898, column: 5, scope: !3656)
!3659 = !DILocation(line: 5898, column: 8, scope: !3656)
!3660 = !DILocation(line: 5898, column: 37, scope: !3656)
!3661 = !DILocation(line: 5897, column: 12, scope: !3650)
!3662 = !DILocation(line: 5901, column: 3, scope: !3656)
!3663 = !DILocation(line: 5900, column: 9, scope: !3656)
!3664 = !DILocation(line: 5899, column: 5, scope: !3656)
!3665 = !DILocation(line: 5900, column: 7, scope: !3656)
!3666 = !DILocation(line: 5905, column: 7, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3656, file: !3, line: 5904, column: 5)
!3668 = !DILocation(line: 5906, column: 21, scope: !3667)
!3669 = !DILocation(line: 5909, column: 3, scope: !3639)
!3670 = distinct !DISubprogram(name: "handle_noinline_attribute", scope: !3, file: !3, line: 5969, type: !2951, scopeLine: 5972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3671)
!3671 = !{!3672, !3673, !3674, !3675, !3676}
!3672 = !DILocalVariable(name: "node", arg: 1, scope: !3670, file: !3, line: 5969, type: !1886)
!3673 = !DILocalVariable(name: "name", arg: 2, scope: !3670, file: !3, line: 5969, type: !1527)
!3674 = !DILocalVariable(name: "args", arg: 3, scope: !3670, file: !3, line: 5970, type: !1527)
!3675 = !DILocalVariable(name: "flags", arg: 4, scope: !3670, file: !3, line: 5971, type: !1520)
!3676 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3670, file: !3, line: 5971, type: !1518)
!3677 = !DILocation(line: 0, scope: !3670)
!3678 = !DILocation(line: 5973, column: 7, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 5973, column: 7)
!3680 = !DILocation(line: 5973, column: 25, scope: !3679)
!3681 = !DILocation(line: 5973, column: 7, scope: !3670)
!3682 = !DILocation(line: 5974, column: 5, scope: !3679)
!3683 = !DILocation(line: 5974, column: 30, scope: !3679)
!3684 = !DILocation(line: 5977, column: 7, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 5976, column: 5)
!3686 = !DILocation(line: 5978, column: 21, scope: !3685)
!3687 = !DILocation(line: 5981, column: 3, scope: !3670)
!3688 = distinct !DISubprogram(name: "handle_noclone_attribute", scope: !3, file: !3, line: 5988, type: !2951, scopeLine: 5991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3689)
!3689 = !{!3690, !3691, !3692, !3693, !3694}
!3690 = !DILocalVariable(name: "node", arg: 1, scope: !3688, file: !3, line: 5988, type: !1886)
!3691 = !DILocalVariable(name: "name", arg: 2, scope: !3688, file: !3, line: 5988, type: !1527)
!3692 = !DILocalVariable(name: "args", arg: 3, scope: !3688, file: !3, line: 5989, type: !1527)
!3693 = !DILocalVariable(name: "flags", arg: 4, scope: !3688, file: !3, line: 5990, type: !1520)
!3694 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3688, file: !3, line: 5990, type: !1518)
!3695 = !DILocation(line: 0, scope: !3688)
!3696 = !DILocation(line: 5992, column: 7, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 5992, column: 7)
!3698 = !DILocation(line: 5992, column: 25, scope: !3697)
!3699 = !DILocation(line: 5992, column: 7, scope: !3688)
!3700 = !DILocation(line: 5994, column: 7, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 5993, column: 5)
!3702 = !DILocation(line: 5995, column: 21, scope: !3701)
!3703 = !DILocation(line: 5996, column: 5, scope: !3701)
!3704 = !DILocation(line: 5998, column: 3, scope: !3688)
!3705 = distinct !DISubprogram(name: "handle_always_inline_attribute", scope: !3, file: !3, line: 6005, type: !2951, scopeLine: 6009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3706)
!3706 = !{!3707, !3708, !3709, !3710, !3711}
!3707 = !DILocalVariable(name: "node", arg: 1, scope: !3705, file: !3, line: 6005, type: !1886)
!3708 = !DILocalVariable(name: "name", arg: 2, scope: !3705, file: !3, line: 6005, type: !1527)
!3709 = !DILocalVariable(name: "args", arg: 3, scope: !3705, file: !3, line: 6006, type: !1527)
!3710 = !DILocalVariable(name: "flags", arg: 4, scope: !3705, file: !3, line: 6007, type: !1520)
!3711 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3705, file: !3, line: 6008, type: !1518)
!3712 = !DILocation(line: 0, scope: !3705)
!3713 = !DILocation(line: 6010, column: 7, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 6010, column: 7)
!3715 = !DILocation(line: 6010, column: 25, scope: !3714)
!3716 = !DILocation(line: 6010, column: 7, scope: !3705)
!3717 = !DILocation(line: 6014, column: 7, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 6011, column: 5)
!3719 = !DILocation(line: 6014, column: 44, scope: !3718)
!3720 = !DILocation(line: 6015, column: 5, scope: !3718)
!3721 = !DILocation(line: 6018, column: 7, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 6017, column: 5)
!3723 = !DILocation(line: 6019, column: 21, scope: !3722)
!3724 = !DILocation(line: 6022, column: 3, scope: !3705)
!3725 = distinct !DISubprogram(name: "handle_gnu_inline_attribute", scope: !3, file: !3, line: 6029, type: !2951, scopeLine: 6033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3726)
!3726 = !{!3727, !3728, !3729, !3730, !3731}
!3727 = !DILocalVariable(name: "node", arg: 1, scope: !3725, file: !3, line: 6029, type: !1886)
!3728 = !DILocalVariable(name: "name", arg: 2, scope: !3725, file: !3, line: 6029, type: !1527)
!3729 = !DILocalVariable(name: "args", arg: 3, scope: !3725, file: !3, line: 6030, type: !1527)
!3730 = !DILocalVariable(name: "flags", arg: 4, scope: !3725, file: !3, line: 6031, type: !1520)
!3731 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3725, file: !3, line: 6032, type: !1518)
!3732 = !DILocation(line: 0, scope: !3725)
!3733 = !DILocation(line: 6034, column: 7, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 6034, column: 7)
!3735 = !DILocation(line: 6034, column: 25, scope: !3734)
!3736 = !DILocation(line: 6034, column: 42, scope: !3734)
!3737 = !DILocation(line: 6034, column: 45, scope: !3734)
!3738 = !DILocation(line: 6034, column: 7, scope: !3725)
!3739 = !DILocation(line: 6041, column: 7, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 6040, column: 5)
!3741 = !DILocation(line: 6042, column: 21, scope: !3740)
!3742 = !DILocation(line: 6045, column: 3, scope: !3725)
!3743 = distinct !DISubprogram(name: "handle_artificial_attribute", scope: !3, file: !3, line: 6052, type: !2951, scopeLine: 6056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3744)
!3744 = !{!3745, !3746, !3747, !3748, !3749}
!3745 = !DILocalVariable(name: "node", arg: 1, scope: !3743, file: !3, line: 6052, type: !1886)
!3746 = !DILocalVariable(name: "name", arg: 2, scope: !3743, file: !3, line: 6052, type: !1527)
!3747 = !DILocalVariable(name: "args", arg: 3, scope: !3743, file: !3, line: 6053, type: !1527)
!3748 = !DILocalVariable(name: "flags", arg: 4, scope: !3743, file: !3, line: 6054, type: !1520)
!3749 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3743, file: !3, line: 6055, type: !1518)
!3750 = !DILocation(line: 0, scope: !3743)
!3751 = !DILocation(line: 6057, column: 7, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 6057, column: 7)
!3753 = !DILocation(line: 6057, column: 25, scope: !3752)
!3754 = !DILocation(line: 6057, column: 42, scope: !3752)
!3755 = !DILocation(line: 6057, column: 45, scope: !3752)
!3756 = !DILocation(line: 6057, column: 7, scope: !3743)
!3757 = !DILocation(line: 6064, column: 7, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 6063, column: 5)
!3759 = !DILocation(line: 6065, column: 21, scope: !3758)
!3760 = !DILocation(line: 6068, column: 3, scope: !3743)
!3761 = distinct !DISubprogram(name: "handle_flatten_attribute", scope: !3, file: !3, line: 6075, type: !2951, scopeLine: 6078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3762)
!3762 = !{!3763, !3764, !3765, !3766, !3767}
!3763 = !DILocalVariable(name: "node", arg: 1, scope: !3761, file: !3, line: 6075, type: !1886)
!3764 = !DILocalVariable(name: "name", arg: 2, scope: !3761, file: !3, line: 6075, type: !1527)
!3765 = !DILocalVariable(name: "args", arg: 3, scope: !3761, file: !3, line: 6076, type: !1527)
!3766 = !DILocalVariable(name: "flags", arg: 4, scope: !3761, file: !3, line: 6077, type: !1520)
!3767 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3761, file: !3, line: 6077, type: !1518)
!3768 = !DILocation(line: 0, scope: !3761)
!3769 = !DILocation(line: 6079, column: 7, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3761, file: !3, line: 6079, column: 7)
!3771 = !DILocation(line: 6079, column: 25, scope: !3770)
!3772 = !DILocation(line: 6079, column: 7, scope: !3761)
!3773 = !DILocation(line: 6085, column: 7, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 6084, column: 5)
!3775 = !DILocation(line: 6086, column: 21, scope: !3774)
!3776 = !DILocation(line: 6089, column: 3, scope: !3761)
!3777 = distinct !DISubprogram(name: "handle_used_attribute", scope: !3, file: !3, line: 6117, type: !2951, scopeLine: 6119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3778)
!3778 = !{!3779, !3780, !3781, !3782, !3783, !3784}
!3779 = !DILocalVariable(name: "pnode", arg: 1, scope: !3777, file: !3, line: 6117, type: !1886)
!3780 = !DILocalVariable(name: "name", arg: 2, scope: !3777, file: !3, line: 6117, type: !1527)
!3781 = !DILocalVariable(name: "args", arg: 3, scope: !3777, file: !3, line: 6117, type: !1527)
!3782 = !DILocalVariable(name: "flags", arg: 4, scope: !3777, file: !3, line: 6118, type: !1520)
!3783 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3777, file: !3, line: 6118, type: !1518)
!3784 = !DILocalVariable(name: "node", scope: !3777, file: !3, line: 6120, type: !1527)
!3785 = !DILocation(line: 0, scope: !3777)
!3786 = !DILocation(line: 6120, column: 15, scope: !3777)
!3787 = !DILocation(line: 6122, column: 7, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 6122, column: 7)
!3789 = !DILocation(line: 6122, column: 24, scope: !3788)
!3790 = !DILocation(line: 6123, column: 7, scope: !3788)
!3791 = !DILocation(line: 6123, column: 28, scope: !3788)
!3792 = !DILocation(line: 6123, column: 40, scope: !3788)
!3793 = !DILocation(line: 6123, column: 43, scope: !3788)
!3794 = !DILocation(line: 6122, column: 7, scope: !3777)
!3795 = !DILocation(line: 6125, column: 24, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 6124, column: 5)
!3797 = !DILocation(line: 6126, column: 7, scope: !3796)
!3798 = !DILocation(line: 6126, column: 30, scope: !3796)
!3799 = !DILocation(line: 6127, column: 5, scope: !3796)
!3800 = !DILocation(line: 6130, column: 7, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 6129, column: 5)
!3802 = !DILocation(line: 6131, column: 21, scope: !3801)
!3803 = !DILocation(line: 6134, column: 3, scope: !3777)
!3804 = distinct !DISubprogram(name: "handle_unused_attribute", scope: !3, file: !3, line: 6141, type: !2951, scopeLine: 6143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3805)
!3805 = !{!3806, !3807, !3808, !3809, !3810, !3811}
!3806 = !DILocalVariable(name: "node", arg: 1, scope: !3804, file: !3, line: 6141, type: !1886)
!3807 = !DILocalVariable(name: "name", arg: 2, scope: !3804, file: !3, line: 6141, type: !1527)
!3808 = !DILocalVariable(name: "args", arg: 3, scope: !3804, file: !3, line: 6141, type: !1527)
!3809 = !DILocalVariable(name: "flags", arg: 4, scope: !3804, file: !3, line: 6142, type: !1520)
!3810 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3804, file: !3, line: 6142, type: !1518)
!3811 = !DILocalVariable(name: "decl", scope: !3812, file: !3, line: 6146, type: !1527)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 6145, column: 5)
!3813 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 6144, column: 7)
!3814 = !DILocation(line: 0, scope: !3804)
!3815 = !DILocation(line: 6144, column: 7, scope: !3813)
!3816 = !DILocation(line: 6144, column: 7, scope: !3804)
!3817 = !DILocation(line: 0, scope: !3812)
!3818 = !DILocation(line: 6148, column: 28, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 6148, column: 11)
!3820 = !DILocation(line: 6149, column: 4, scope: !3819)
!3821 = !DILocation(line: 6149, column: 24, scope: !3819)
!3822 = !DILocation(line: 6150, column: 4, scope: !3819)
!3823 = !DILocation(line: 6150, column: 24, scope: !3819)
!3824 = !DILocation(line: 6151, column: 4, scope: !3819)
!3825 = !DILocation(line: 6151, column: 24, scope: !3819)
!3826 = !DILocation(line: 6152, column: 4, scope: !3819)
!3827 = !DILocation(line: 6152, column: 24, scope: !3819)
!3828 = !DILocation(line: 6148, column: 11, scope: !3812)
!3829 = !DILocation(line: 6153, column: 19, scope: !3819)
!3830 = !DILocation(line: 6153, column: 2, scope: !3819)
!3831 = !DILocation(line: 6156, column: 4, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 6155, column: 2)
!3833 = !DILocation(line: 6157, column: 18, scope: !3832)
!3834 = !DILocation(line: 6162, column: 19, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 6162, column: 11)
!3836 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 6161, column: 5)
!3837 = !DILocation(line: 6162, column: 11, scope: !3836)
!3838 = !DILocation(line: 6163, column: 10, scope: !3835)
!3839 = !DILocation(line: 6163, column: 8, scope: !3835)
!3840 = !DILocation(line: 6163, column: 2, scope: !3835)
!3841 = !DILocation(line: 6164, column: 25, scope: !3836)
!3842 = !DILocation(line: 6164, column: 7, scope: !3836)
!3843 = !DILocation(line: 6167, column: 3, scope: !3804)
!3844 = distinct !DISubprogram(name: "handle_externally_visible_attribute", scope: !3, file: !3, line: 6174, type: !2951, scopeLine: 6178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3845)
!3845 = !{!3846, !3847, !3848, !3849, !3850, !3851}
!3846 = !DILocalVariable(name: "pnode", arg: 1, scope: !3844, file: !3, line: 6174, type: !1886)
!3847 = !DILocalVariable(name: "name", arg: 2, scope: !3844, file: !3, line: 6174, type: !1527)
!3848 = !DILocalVariable(name: "args", arg: 3, scope: !3844, file: !3, line: 6175, type: !1527)
!3849 = !DILocalVariable(name: "flags", arg: 4, scope: !3844, file: !3, line: 6176, type: !1520)
!3850 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3844, file: !3, line: 6177, type: !1518)
!3851 = !DILocalVariable(name: "node", scope: !3844, file: !3, line: 6179, type: !1527)
!3852 = !DILocation(line: 0, scope: !3844)
!3853 = !DILocation(line: 6179, column: 15, scope: !3844)
!3854 = !DILocation(line: 6181, column: 7, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 6181, column: 7)
!3856 = !DILocation(line: 6181, column: 24, scope: !3855)
!3857 = !DILocation(line: 6181, column: 41, scope: !3855)
!3858 = !DILocation(line: 6181, column: 61, scope: !3855)
!3859 = !DILocation(line: 6181, column: 7, scope: !3844)
!3860 = !DILocation(line: 6183, column: 13, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 6183, column: 11)
!3862 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 6182, column: 5)
!3863 = !DILocation(line: 6183, column: 32, scope: !3861)
!3864 = !DILocation(line: 6184, column: 5, scope: !3861)
!3865 = !DILocation(line: 6184, column: 9, scope: !3861)
!3866 = !DILocation(line: 6184, column: 31, scope: !3861)
!3867 = !DILocation(line: 6184, column: 35, scope: !3861)
!3868 = !DILocation(line: 6183, column: 11, scope: !3862)
!3869 = !DILocation(line: 6186, column: 4, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 6185, column: 2)
!3871 = !DILocation(line: 6188, column: 18, scope: !3870)
!3872 = !DILocation(line: 6189, column: 2, scope: !3870)
!3873 = !DILocation(line: 6193, column: 7, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 6192, column: 5)
!3875 = !DILocation(line: 6194, column: 21, scope: !3874)
!3876 = !DILocation(line: 6197, column: 3, scope: !3844)
!3877 = distinct !DISubprogram(name: "handle_const_attribute", scope: !3, file: !3, line: 6204, type: !2951, scopeLine: 6206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3878)
!3878 = !{!3879, !3880, !3881, !3882, !3883, !3884}
!3879 = !DILocalVariable(name: "node", arg: 1, scope: !3877, file: !3, line: 6204, type: !1886)
!3880 = !DILocalVariable(name: "name", arg: 2, scope: !3877, file: !3, line: 6204, type: !1527)
!3881 = !DILocalVariable(name: "args", arg: 3, scope: !3877, file: !3, line: 6204, type: !1527)
!3882 = !DILocalVariable(name: "flags", arg: 4, scope: !3877, file: !3, line: 6205, type: !1520)
!3883 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3877, file: !3, line: 6205, type: !1518)
!3884 = !DILocalVariable(name: "type", scope: !3877, file: !3, line: 6207, type: !1527)
!3885 = !DILocation(line: 0, scope: !3877)
!3886 = !DILocation(line: 6207, column: 15, scope: !3877)
!3887 = !DILocation(line: 6210, column: 7, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 6210, column: 7)
!3889 = !DILocation(line: 6210, column: 25, scope: !3888)
!3890 = !DILocation(line: 6210, column: 7, scope: !3877)
!3891 = !DILocation(line: 6211, column: 27, scope: !3888)
!3892 = !DILocation(line: 6211, column: 5, scope: !3888)
!3893 = !DILocation(line: 6212, column: 12, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 6212, column: 12)
!3895 = !DILocation(line: 6212, column: 29, scope: !3894)
!3896 = !DILocation(line: 6213, column: 5, scope: !3894)
!3897 = !DILocation(line: 6213, column: 8, scope: !3894)
!3898 = !DILocation(line: 6213, column: 37, scope: !3894)
!3899 = !DILocation(line: 6212, column: 12, scope: !3888)
!3900 = !DILocation(line: 6216, column: 3, scope: !3894)
!3901 = !DILocation(line: 6215, column: 9, scope: !3894)
!3902 = !DILocation(line: 6214, column: 5, scope: !3894)
!3903 = !DILocation(line: 6215, column: 7, scope: !3894)
!3904 = !DILocation(line: 6220, column: 7, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 6219, column: 5)
!3906 = !DILocation(line: 6221, column: 21, scope: !3905)
!3907 = !DILocation(line: 6224, column: 3, scope: !3877)
!3908 = distinct !DISubprogram(name: "handle_transparent_union_attribute", scope: !3, file: !3, line: 6231, type: !2951, scopeLine: 6234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3909)
!3909 = !{!3910, !3911, !3912, !3913, !3914, !3915, !3916}
!3910 = !DILocalVariable(name: "node", arg: 1, scope: !3908, file: !3, line: 6231, type: !1886)
!3911 = !DILocalVariable(name: "name", arg: 2, scope: !3908, file: !3, line: 6231, type: !1527)
!3912 = !DILocalVariable(name: "args", arg: 3, scope: !3908, file: !3, line: 6232, type: !1527)
!3913 = !DILocalVariable(name: "flags", arg: 4, scope: !3908, file: !3, line: 6232, type: !1520)
!3914 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3908, file: !3, line: 6233, type: !1518)
!3915 = !DILocalVariable(name: "type", scope: !3908, file: !3, line: 6235, type: !1527)
!3916 = !DILabel(scope: !3908, name: "ignored", file: !3, line: 6262)
!3917 = !DILocation(line: 0, scope: !3908)
!3918 = !DILocation(line: 6237, column: 17, scope: !3908)
!3919 = !DILocation(line: 6239, column: 7, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 6239, column: 7)
!3921 = !DILocation(line: 6239, column: 25, scope: !3920)
!3922 = !DILocation(line: 6239, column: 7, scope: !3908)
!3923 = !DILocation(line: 6240, column: 13, scope: !3920)
!3924 = !DILocation(line: 6241, column: 10, scope: !3908)
!3925 = !DILocation(line: 6240, column: 5, scope: !3920)
!3926 = !DILocation(line: 6243, column: 7, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 6243, column: 7)
!3928 = !DILocation(line: 6243, column: 24, scope: !3927)
!3929 = !DILocation(line: 6243, column: 7, scope: !3908)
!3930 = !DILocation(line: 6247, column: 19, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 6247, column: 11)
!3932 = distinct !DILexicalBlock(scope: !3927, file: !3, line: 6244, column: 5)
!3933 = !DILocation(line: 6247, column: 11, scope: !3932)
!3934 = !DILocation(line: 6249, column: 8, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 6249, column: 8)
!3936 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 6248, column: 2)
!3937 = !DILocation(line: 6249, column: 27, scope: !3935)
!3938 = !DILocation(line: 6250, column: 8, scope: !3935)
!3939 = !DILocation(line: 6250, column: 11, scope: !3935)
!3940 = !DILocation(line: 0, scope: !3935)
!3941 = !DILocation(line: 6250, column: 31, scope: !3935)
!3942 = !DILocation(line: 6250, column: 28, scope: !3935)
!3943 = !DILocation(line: 6249, column: 8, scope: !3936)
!3944 = !DILocation(line: 6255, column: 19, scope: !3936)
!3945 = !DILocation(line: 6255, column: 10, scope: !3936)
!3946 = !DILocation(line: 6256, column: 2, scope: !3936)
!3947 = !DILocation(line: 6258, column: 7, scope: !3932)
!3948 = !DILocation(line: 6258, column: 36, scope: !3932)
!3949 = !DILocation(line: 6259, column: 7, scope: !3932)
!3950 = !DILocation(line: 6262, column: 2, scope: !3908)
!3951 = !DILocation(line: 6263, column: 3, scope: !3908)
!3952 = !DILocation(line: 6264, column: 3, scope: !3908)
!3953 = !DILocation(line: 6265, column: 1, scope: !3908)
!3954 = distinct !DISubprogram(name: "handle_constructor_attribute", scope: !3, file: !3, line: 6328, type: !2951, scopeLine: 6331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3955)
!3955 = !{!3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963}
!3956 = !DILocalVariable(name: "node", arg: 1, scope: !3954, file: !3, line: 6328, type: !1886)
!3957 = !DILocalVariable(name: "name", arg: 2, scope: !3954, file: !3, line: 6328, type: !1527)
!3958 = !DILocalVariable(name: "args", arg: 3, scope: !3954, file: !3, line: 6328, type: !1527)
!3959 = !DILocalVariable(name: "flags", arg: 4, scope: !3954, file: !3, line: 6329, type: !1520)
!3960 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3954, file: !3, line: 6330, type: !1518)
!3961 = !DILocalVariable(name: "decl", scope: !3954, file: !3, line: 6332, type: !1527)
!3962 = !DILocalVariable(name: "type", scope: !3954, file: !3, line: 6333, type: !1527)
!3963 = !DILocalVariable(name: "priority", scope: !3964, file: !3, line: 6339, type: !3966)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 6338, column: 5)
!3965 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 6335, column: 7)
!3966 = !DIDerivedType(tag: DW_TAG_typedef, name: "priority_type", file: !140, line: 3039, baseType: !2816)
!3967 = !DILocation(line: 0, scope: !3954)
!3968 = !DILocation(line: 6332, column: 15, scope: !3954)
!3969 = !DILocation(line: 6335, column: 7, scope: !3965)
!3970 = !DILocation(line: 6335, column: 24, scope: !3965)
!3971 = !DILocation(line: 6336, column: 7, scope: !3965)
!3972 = !DILocation(line: 6333, column: 15, scope: !3954)
!3973 = !DILocation(line: 6336, column: 10, scope: !3965)
!3974 = !DILocation(line: 6336, column: 27, scope: !3965)
!3975 = !DILocation(line: 6337, column: 7, scope: !3965)
!3976 = !DILocation(line: 6337, column: 10, scope: !3965)
!3977 = !DILocation(line: 6337, column: 39, scope: !3965)
!3978 = !DILocation(line: 6335, column: 7, scope: !3954)
!3979 = !DILocation(line: 6340, column: 7, scope: !3964)
!3980 = !DILocation(line: 6340, column: 38, scope: !3964)
!3981 = !DILocation(line: 6341, column: 18, scope: !3964)
!3982 = !DILocation(line: 0, scope: !3964)
!3983 = !DILocation(line: 6342, column: 7, scope: !3964)
!3984 = !DILocation(line: 6343, column: 24, scope: !3964)
!3985 = !DILocation(line: 6344, column: 5, scope: !3964)
!3986 = !DILocation(line: 6347, column: 7, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 6346, column: 5)
!3988 = !DILocation(line: 6348, column: 21, scope: !3987)
!3989 = !DILocation(line: 6351, column: 3, scope: !3954)
!3990 = distinct !DISubprogram(name: "handle_destructor_attribute", scope: !3, file: !3, line: 6358, type: !2951, scopeLine: 6361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3991)
!3991 = !{!3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999}
!3992 = !DILocalVariable(name: "node", arg: 1, scope: !3990, file: !3, line: 6358, type: !1886)
!3993 = !DILocalVariable(name: "name", arg: 2, scope: !3990, file: !3, line: 6358, type: !1527)
!3994 = !DILocalVariable(name: "args", arg: 3, scope: !3990, file: !3, line: 6358, type: !1527)
!3995 = !DILocalVariable(name: "flags", arg: 4, scope: !3990, file: !3, line: 6359, type: !1520)
!3996 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !3990, file: !3, line: 6360, type: !1518)
!3997 = !DILocalVariable(name: "decl", scope: !3990, file: !3, line: 6362, type: !1527)
!3998 = !DILocalVariable(name: "type", scope: !3990, file: !3, line: 6363, type: !1527)
!3999 = !DILocalVariable(name: "priority", scope: !4000, file: !3, line: 6369, type: !3966)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 6368, column: 5)
!4001 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 6365, column: 7)
!4002 = !DILocation(line: 0, scope: !3990)
!4003 = !DILocation(line: 6362, column: 15, scope: !3990)
!4004 = !DILocation(line: 6365, column: 7, scope: !4001)
!4005 = !DILocation(line: 6365, column: 24, scope: !4001)
!4006 = !DILocation(line: 6366, column: 7, scope: !4001)
!4007 = !DILocation(line: 6363, column: 15, scope: !3990)
!4008 = !DILocation(line: 6366, column: 10, scope: !4001)
!4009 = !DILocation(line: 6366, column: 27, scope: !4001)
!4010 = !DILocation(line: 6367, column: 7, scope: !4001)
!4011 = !DILocation(line: 6367, column: 10, scope: !4001)
!4012 = !DILocation(line: 6367, column: 39, scope: !4001)
!4013 = !DILocation(line: 6365, column: 7, scope: !3990)
!4014 = !DILocation(line: 6370, column: 7, scope: !4000)
!4015 = !DILocation(line: 6370, column: 37, scope: !4000)
!4016 = !DILocation(line: 6371, column: 18, scope: !4000)
!4017 = !DILocation(line: 0, scope: !4000)
!4018 = !DILocation(line: 6372, column: 7, scope: !4000)
!4019 = !DILocation(line: 6373, column: 24, scope: !4000)
!4020 = !DILocation(line: 6374, column: 5, scope: !4000)
!4021 = !DILocation(line: 6377, column: 7, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 6376, column: 5)
!4023 = !DILocation(line: 6378, column: 21, scope: !4022)
!4024 = !DILocation(line: 6381, column: 3, scope: !3990)
!4025 = distinct !DISubprogram(name: "handle_mode_attribute", scope: !3, file: !3, line: 6388, type: !2951, scopeLine: 6390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4026)
!4026 = !{!4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4037, !4038, !4039, !4040, !4041, !4042, !4045, !4049}
!4027 = !DILocalVariable(name: "node", arg: 1, scope: !4025, file: !3, line: 6388, type: !1886)
!4028 = !DILocalVariable(name: "name", arg: 2, scope: !4025, file: !3, line: 6388, type: !1527)
!4029 = !DILocalVariable(name: "args", arg: 3, scope: !4025, file: !3, line: 6388, type: !1527)
!4030 = !DILocalVariable(name: "flags", arg: 4, scope: !4025, file: !3, line: 6389, type: !1520)
!4031 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4025, file: !3, line: 6389, type: !1518)
!4032 = !DILocalVariable(name: "type", scope: !4025, file: !3, line: 6391, type: !1527)
!4033 = !DILocalVariable(name: "ident", scope: !4025, file: !3, line: 6392, type: !1527)
!4034 = !DILocalVariable(name: "j", scope: !4035, file: !3, line: 6400, type: !1520)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 6399, column: 5)
!4036 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 6396, column: 7)
!4037 = !DILocalVariable(name: "p", scope: !4035, file: !3, line: 6401, type: !1525)
!4038 = !DILocalVariable(name: "len", scope: !4035, file: !3, line: 6402, type: !1520)
!4039 = !DILocalVariable(name: "mode", scope: !4035, file: !3, line: 6403, type: !11)
!4040 = !DILocalVariable(name: "typefm", scope: !4035, file: !3, line: 6404, type: !1527)
!4041 = !DILocalVariable(name: "valid_mode", scope: !4035, file: !3, line: 6405, type: !1519)
!4042 = !DILocalVariable(name: "newp", scope: !4043, file: !3, line: 6410, type: !1522)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 6409, column: 2)
!4044 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 6407, column: 11)
!4045 = !DILocalVariable(name: "as", scope: !4046, file: !3, line: 6488, type: !4048)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 6487, column: 2)
!4047 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 6486, column: 11)
!4048 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !1508, line: 73, baseType: !1519)
!4049 = !DILocalVariable(name: "fn", scope: !4046, file: !3, line: 6489, type: !4050)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!1527, !1527, !11, !1519}
!4053 = !DILocation(line: 0, scope: !4025)
!4054 = !DILocation(line: 6391, column: 15, scope: !4025)
!4055 = !DILocation(line: 6392, column: 16, scope: !4025)
!4056 = !DILocation(line: 6394, column: 17, scope: !4025)
!4057 = !DILocation(line: 6396, column: 7, scope: !4036)
!4058 = !DILocation(line: 6396, column: 25, scope: !4036)
!4059 = !DILocation(line: 6396, column: 7, scope: !4025)
!4060 = !DILocation(line: 6397, column: 5, scope: !4036)
!4061 = !DILocation(line: 6566, column: 1, scope: !4025)
!4062 = !DILocation(line: 6401, column: 23, scope: !4035)
!4063 = !DILocation(line: 0, scope: !4035)
!4064 = !DILocation(line: 6402, column: 17, scope: !4035)
!4065 = !DILocation(line: 6407, column: 15, scope: !4044)
!4066 = !DILocation(line: 6407, column: 19, scope: !4044)
!4067 = !DILocation(line: 6407, column: 22, scope: !4044)
!4068 = !DILocation(line: 6407, column: 27, scope: !4044)
!4069 = !DILocation(line: 6407, column: 34, scope: !4044)
!4070 = !DILocation(line: 6407, column: 37, scope: !4044)
!4071 = !DILocation(line: 6407, column: 42, scope: !4044)
!4072 = !DILocation(line: 6408, column: 4, scope: !4044)
!4073 = !DILocation(line: 6408, column: 7, scope: !4044)
!4074 = !DILocation(line: 6408, column: 18, scope: !4044)
!4075 = !DILocation(line: 6408, column: 25, scope: !4044)
!4076 = !DILocation(line: 6408, column: 28, scope: !4044)
!4077 = !DILocation(line: 6408, column: 39, scope: !4044)
!4078 = !DILocation(line: 6407, column: 11, scope: !4035)
!4079 = !DILocation(line: 6410, column: 26, scope: !4043)
!4080 = !DILocation(line: 0, scope: !4043)
!4081 = !DILocation(line: 6412, column: 19, scope: !4043)
!4082 = !DILocation(line: 6412, column: 4, scope: !4043)
!4083 = !DILocation(line: 6413, column: 4, scope: !4043)
!4084 = !DILocation(line: 6413, column: 18, scope: !4043)
!4085 = !DILocation(line: 6415, column: 2, scope: !4043)
!4086 = !DILocation(line: 6419, column: 12, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 6419, column: 11)
!4088 = !DILocation(line: 6419, column: 11, scope: !4035)
!4089 = !DILocation(line: 6420, column: 9, scope: !4087)
!4090 = !DILocation(line: 6420, column: 2, scope: !4087)
!4091 = !DILocation(line: 6421, column: 17, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 6421, column: 16)
!4093 = !DILocation(line: 6421, column: 16, scope: !4087)
!4094 = !DILocation(line: 6422, column: 9, scope: !4092)
!4095 = !DILocation(line: 6422, column: 2, scope: !4092)
!4096 = !DILocation(line: 6423, column: 17, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 6423, column: 16)
!4098 = !DILocation(line: 6423, column: 16, scope: !4092)
!4099 = !DILocation(line: 6424, column: 9, scope: !4097)
!4100 = !DILocation(line: 6424, column: 2, scope: !4097)
!4101 = !DILocation(line: 6425, column: 17, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 6425, column: 16)
!4103 = !DILocation(line: 6425, column: 16, scope: !4097)
!4104 = !DILocation(line: 6426, column: 17, scope: !4102)
!4105 = !DILocation(line: 6426, column: 9, scope: !4102)
!4106 = !DILocation(line: 6426, column: 2, scope: !4102)
!4107 = !DILocation(line: 6427, column: 17, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4102, file: !3, line: 6427, column: 16)
!4109 = !DILocation(line: 6427, column: 16, scope: !4102)
!4110 = !DILocation(line: 6428, column: 17, scope: !4108)
!4111 = !DILocation(line: 6428, column: 9, scope: !4108)
!4112 = !DILocation(line: 6428, column: 2, scope: !4108)
!4113 = !DILocation(line: 6429, column: 17, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 6429, column: 16)
!4115 = !DILocation(line: 6429, column: 16, scope: !4108)
!4116 = !DILocation(line: 6432, column: 2, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 6432, column: 2)
!4118 = !DILocation(line: 6430, column: 17, scope: !4114)
!4119 = !DILocation(line: 6430, column: 9, scope: !4114)
!4120 = !DILocation(line: 6430, column: 2, scope: !4114)
!4121 = !DILocation(line: 0, scope: !4117)
!4122 = !DILocation(line: 6432, column: 16, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 6432, column: 2)
!4124 = !DILocation(line: 6433, column: 20, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4123, file: !3, line: 6433, column: 8)
!4126 = !DILocation(line: 6433, column: 9, scope: !4125)
!4127 = !DILocation(line: 6433, column: 8, scope: !4123)
!4128 = !DILocation(line: 6432, column: 38, scope: !4123)
!4129 = !DILocation(line: 6432, column: 2, scope: !4123)
!4130 = distinct !{!4130, !4116, !4131}
!4131 = !DILocation(line: 6437, column: 6, scope: !4117)
!4132 = !DILocation(line: 6439, column: 16, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 6439, column: 11)
!4134 = !DILocation(line: 0, scope: !4087)
!4135 = !DILocation(line: 6439, column: 11, scope: !4035)
!4136 = !DILocation(line: 6441, column: 4, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 6440, column: 2)
!4138 = !DILocation(line: 6442, column: 4, scope: !4137)
!4139 = !DILocation(line: 6446, column: 15, scope: !4035)
!4140 = !DILocation(line: 6446, column: 7, scope: !4035)
!4141 = !DILocation(line: 6456, column: 25, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 6447, column: 2)
!4143 = !DILocation(line: 6456, column: 17, scope: !4142)
!4144 = !DILocation(line: 6457, column: 4, scope: !4142)
!4145 = !DILocation(line: 6461, column: 25, scope: !4142)
!4146 = !DILocation(line: 6461, column: 50, scope: !4142)
!4147 = !DILocation(line: 6461, column: 17, scope: !4142)
!4148 = !DILocation(line: 6462, column: 4, scope: !4142)
!4149 = !DILocation(line: 6470, column: 4, scope: !4142)
!4150 = !DILocation(line: 6472, column: 4, scope: !4142)
!4151 = !DILocation(line: 6474, column: 17, scope: !4142)
!4152 = !DILocation(line: 6475, column: 4, scope: !4142)
!4153 = !DILocation(line: 6480, column: 12, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 6480, column: 11)
!4155 = !DILocation(line: 6480, column: 11, scope: !4035)
!4156 = !DILocation(line: 6482, column: 4, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 6481, column: 2)
!4158 = !DILocation(line: 6483, column: 4, scope: !4157)
!4159 = !DILocation(line: 6486, column: 11, scope: !4047)
!4160 = !DILocation(line: 6486, column: 11, scope: !4035)
!4161 = !DILocation(line: 6488, column: 22, scope: !4046)
!4162 = !DILocation(line: 0, scope: !4046)
!4163 = !DILocation(line: 6491, column: 28, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 6491, column: 8)
!4165 = !DILocation(line: 6491, column: 9, scope: !4164)
!4166 = !DILocation(line: 6491, column: 8, scope: !4046)
!4167 = !DILocation(line: 6493, column: 8, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4164, file: !3, line: 6492, column: 6)
!4169 = !DILocation(line: 6494, column: 8, scope: !4168)
!4170 = !DILocation(line: 6497, column: 8, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 6497, column: 8)
!4172 = !DILocation(line: 6497, column: 25, scope: !4171)
!4173 = !DILocation(line: 6501, column: 17, scope: !4046)
!4174 = !DILocation(line: 6501, column: 13, scope: !4046)
!4175 = !DILocation(line: 6502, column: 2, scope: !4047)
!4176 = !DILocation(line: 6507, column: 8, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 6507, column: 8)
!4178 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 6504, column: 2)
!4179 = !DILocation(line: 6508, column: 8, scope: !4177)
!4180 = !DILocation(line: 6508, column: 35, scope: !4177)
!4181 = !DILocation(line: 6508, column: 32, scope: !4177)
!4182 = !DILocation(line: 6507, column: 8, scope: !4178)
!4183 = !DILocation(line: 6510, column: 8, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 6509, column: 6)
!4185 = !DILocation(line: 6511, column: 8, scope: !4184)
!4186 = !DILocation(line: 6514, column: 30, scope: !4178)
!4187 = !DILocation(line: 6515, column: 4, scope: !4178)
!4188 = !DILocation(line: 6515, column: 36, scope: !4178)
!4189 = !DILocation(line: 6516, column: 15, scope: !4178)
!4190 = !DILocation(line: 0, scope: !4178)
!4191 = !DILocation(line: 6514, column: 13, scope: !4178)
!4192 = !DILocation(line: 0, scope: !4047)
!4193 = !DILocation(line: 6519, column: 18, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 6519, column: 11)
!4195 = !DILocation(line: 6519, column: 11, scope: !4035)
!4196 = !DILocation(line: 6521, column: 4, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 6520, column: 2)
!4198 = !DILocation(line: 6522, column: 4, scope: !4197)
!4199 = !DILocation(line: 6524, column: 16, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 6524, column: 16)
!4201 = !DILocation(line: 6524, column: 33, scope: !4200)
!4202 = !DILocation(line: 6524, column: 16, scope: !4194)
!4203 = !DILocation(line: 6529, column: 8, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 6529, column: 8)
!4205 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 6525, column: 2)
!4206 = !DILocation(line: 6529, column: 27, scope: !4204)
!4207 = !DILocation(line: 6529, column: 8, scope: !4205)
!4208 = !DILocation(line: 6531, column: 8, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 6530, column: 6)
!4210 = !DILocation(line: 6532, column: 8, scope: !4209)
!4211 = !DILocation(line: 6535, column: 14, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 6535, column: 8)
!4213 = !DILocation(line: 6535, column: 8, scope: !4205)
!4214 = !DILocation(line: 6537, column: 32, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 6536, column: 6)
!4216 = !DILocation(line: 6537, column: 8, scope: !4215)
!4217 = !DILocation(line: 6537, column: 30, scope: !4215)
!4218 = !DILocation(line: 6539, column: 6, scope: !4215)
!4219 = !DILocation(line: 6547, column: 12, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 6547, column: 12)
!4221 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 6541, column: 6)
!4222 = !DILocation(line: 0, scope: !4220)
!4223 = !DILocation(line: 6547, column: 12, scope: !4221)
!4224 = !DILocation(line: 6548, column: 12, scope: !4220)
!4225 = !DILocation(line: 6548, column: 3, scope: !4220)
!4226 = !DILocation(line: 6550, column: 12, scope: !4220)
!4227 = !DILocation(line: 6551, column: 8, scope: !4221)
!4228 = !DILocation(line: 6551, column: 27, scope: !4221)
!4229 = !DILocation(line: 6554, column: 16, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 6554, column: 16)
!4231 = !DILocation(line: 6554, column: 16, scope: !4200)
!4232 = !DILocation(line: 6555, column: 31, scope: !4230)
!4233 = !DILocation(line: 6555, column: 28, scope: !4230)
!4234 = !DILocation(line: 6556, column: 31, scope: !4230)
!4235 = !DILocation(line: 6556, column: 28, scope: !4230)
!4236 = !DILocation(line: 6558, column: 4, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 6557, column: 2)
!4238 = !DILocation(line: 6559, column: 4, scope: !4237)
!4239 = !DILocation(line: 6562, column: 13, scope: !4035)
!4240 = !DILocation(line: 6563, column: 5, scope: !4036)
!4241 = distinct !DISubprogram(name: "handle_section_attribute", scope: !3, file: !3, line: 6572, type: !2951, scopeLine: 6574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4242)
!4242 = !{!4243, !4244, !4245, !4246, !4247, !4248}
!4243 = !DILocalVariable(name: "node", arg: 1, scope: !4241, file: !3, line: 6572, type: !1886)
!4244 = !DILocalVariable(name: "name", arg: 2, scope: !4241, file: !3, line: 6572, type: !1527)
!4245 = !DILocalVariable(name: "args", arg: 3, scope: !4241, file: !3, line: 6572, type: !1527)
!4246 = !DILocalVariable(name: "flags", arg: 4, scope: !4241, file: !3, line: 6573, type: !1520)
!4247 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4241, file: !3, line: 6573, type: !1518)
!4248 = !DILocalVariable(name: "decl", scope: !4241, file: !3, line: 6575, type: !1527)
!4249 = !DILocation(line: 0, scope: !4241)
!4250 = !DILocation(line: 6575, column: 15, scope: !4241)
!4251 = !DILocation(line: 6577, column: 15, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 6577, column: 7)
!4253 = !DILocation(line: 6577, column: 7, scope: !4252)
!4254 = !DILocation(line: 6577, column: 7, scope: !4241)
!4255 = !DILocation(line: 6579, column: 38, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 6578, column: 5)
!4257 = !DILocation(line: 6581, column: 12, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 6581, column: 11)
!4259 = !DILocation(line: 6581, column: 29, scope: !4258)
!4260 = !DILocation(line: 6582, column: 5, scope: !4258)
!4261 = !DILocation(line: 6582, column: 25, scope: !4258)
!4262 = !DILocation(line: 6583, column: 4, scope: !4258)
!4263 = !DILocation(line: 6583, column: 7, scope: !4258)
!4264 = !DILocation(line: 6583, column: 37, scope: !4258)
!4265 = !DILocation(line: 6581, column: 11, scope: !4256)
!4266 = !DILocation(line: 6585, column: 25, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 6585, column: 8)
!4268 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 6584, column: 2)
!4269 = !DILocation(line: 6586, column: 11, scope: !4267)
!4270 = !DILocation(line: 6586, column: 33, scope: !4267)
!4271 = !DILocation(line: 6586, column: 8, scope: !4267)
!4272 = !DILocation(line: 6587, column: 12, scope: !4267)
!4273 = !DILocation(line: 6585, column: 8, scope: !4268)
!4274 = !DILocation(line: 6589, column: 18, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 6588, column: 6)
!4276 = !DILocation(line: 6589, column: 8, scope: !4275)
!4277 = !DILocation(line: 6592, column: 22, scope: !4275)
!4278 = !DILocation(line: 6593, column: 6, scope: !4275)
!4279 = !DILocation(line: 6597, column: 13, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 6597, column: 13)
!4281 = !DILocation(line: 6597, column: 38, scope: !4280)
!4282 = !DILocation(line: 6598, column: 6, scope: !4280)
!4283 = !DILocation(line: 6598, column: 17, scope: !4280)
!4284 = !DILocation(line: 6599, column: 10, scope: !4280)
!4285 = !DILocation(line: 6598, column: 9, scope: !4280)
!4286 = !DILocation(line: 6599, column: 51, scope: !4280)
!4287 = !DILocation(line: 6597, column: 13, scope: !4267)
!4288 = !DILocation(line: 6605, column: 13, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 6605, column: 13)
!4290 = !DILocation(line: 6602, column: 8, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 6600, column: 6)
!4292 = !DILocation(line: 6601, column: 8, scope: !4291)
!4293 = !DILocation(line: 6603, column: 22, scope: !4291)
!4294 = !DILocation(line: 6604, column: 6, scope: !4291)
!4295 = !DILocation(line: 6605, column: 30, scope: !4289)
!4296 = !DILocation(line: 6606, column: 18, scope: !4289)
!4297 = !DILocation(line: 6606, column: 10, scope: !4289)
!4298 = !DILocation(line: 6606, column: 6, scope: !4289)
!4299 = !DILocation(line: 6606, column: 45, scope: !4289)
!4300 = !DILocation(line: 6606, column: 30, scope: !4289)
!4301 = !DILocation(line: 6607, column: 9, scope: !4289)
!4302 = !DILocation(line: 6605, column: 13, scope: !4280)
!4303 = !DILocation(line: 6609, column: 55, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 6608, column: 6)
!4305 = !DILocation(line: 6609, column: 8, scope: !4304)
!4306 = !DILocation(line: 6610, column: 22, scope: !4304)
!4307 = !DILocation(line: 6611, column: 6, scope: !4304)
!4308 = !DILocation(line: 6613, column: 33, scope: !4289)
!4309 = !DILocation(line: 6613, column: 31, scope: !4289)
!4310 = !DILocation(line: 6617, column: 53, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 6616, column: 2)
!4312 = !DILocation(line: 6617, column: 4, scope: !4311)
!4313 = !DILocation(line: 6618, column: 18, scope: !4311)
!4314 = !DILocation(line: 6623, column: 17, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 6622, column: 5)
!4316 = !DILocation(line: 6623, column: 7, scope: !4315)
!4317 = !DILocation(line: 6625, column: 21, scope: !4315)
!4318 = !DILocation(line: 6628, column: 3, scope: !4241)
!4319 = distinct !DISubprogram(name: "handle_aligned_attribute", scope: !3, file: !3, line: 6635, type: !2951, scopeLine: 6637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4320)
!4320 = !{!4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331}
!4321 = !DILocalVariable(name: "node", arg: 1, scope: !4319, file: !3, line: 6635, type: !1886)
!4322 = !DILocalVariable(name: "name", arg: 2, scope: !4319, file: !3, line: 6635, type: !1527)
!4323 = !DILocalVariable(name: "args", arg: 3, scope: !4319, file: !3, line: 6635, type: !1527)
!4324 = !DILocalVariable(name: "flags", arg: 4, scope: !4319, file: !3, line: 6636, type: !1520)
!4325 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4319, file: !3, line: 6636, type: !1518)
!4326 = !DILocalVariable(name: "decl", scope: !4319, file: !3, line: 6638, type: !1527)
!4327 = !DILocalVariable(name: "type", scope: !4319, file: !3, line: 6639, type: !1886)
!4328 = !DILocalVariable(name: "is_type", scope: !4319, file: !3, line: 6640, type: !1520)
!4329 = !DILocalVariable(name: "align_expr", scope: !4319, file: !3, line: 6641, type: !1527)
!4330 = !DILocalVariable(name: "i", scope: !4319, file: !3, line: 6643, type: !1520)
!4331 = !DILocalVariable(name: "tt", scope: !4332, file: !3, line: 6676, type: !1527)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !3, line: 6675, column: 2)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 6673, column: 11)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 6670, column: 5)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 6669, column: 12)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 6664, column: 12)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 6659, column: 12)
!4338 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 6654, column: 7)
!4339 = !DILocation(line: 0, scope: !4319)
!4340 = !DILocation(line: 6641, column: 22, scope: !4319)
!4341 = !DILocation(line: 6641, column: 29, scope: !4319)
!4342 = !DILocation(line: 6642, column: 10, scope: !4319)
!4343 = !DILocation(line: 6645, column: 7, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 6645, column: 7)
!4345 = !DILocation(line: 6645, column: 7, scope: !4319)
!4346 = !DILocation(line: 0, scope: !4344)
!4347 = !DILocation(line: 6648, column: 15, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 6646, column: 5)
!4349 = !DILocation(line: 6649, column: 35, scope: !4348)
!4350 = !DILocation(line: 6650, column: 5, scope: !4348)
!4351 = !DILocation(line: 6651, column: 12, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 6651, column: 12)
!4353 = !DILocation(line: 6651, column: 12, scope: !4344)
!4354 = !DILocation(line: 6654, column: 7, scope: !4338)
!4355 = !DILocation(line: 6654, column: 30, scope: !4338)
!4356 = !DILocation(line: 6654, column: 7, scope: !4319)
!4357 = !DILocation(line: 6656, column: 7, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 6655, column: 5)
!4359 = !DILocation(line: 6657, column: 21, scope: !4358)
!4360 = !DILocation(line: 6658, column: 5, scope: !4358)
!4361 = !DILocation(line: 6659, column: 17, scope: !4337)
!4362 = !DILocation(line: 6659, column: 41, scope: !4337)
!4363 = !DILocation(line: 6659, column: 12, scope: !4338)
!4364 = !DILocation(line: 6661, column: 7, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 6660, column: 5)
!4366 = !DILocation(line: 6662, column: 21, scope: !4365)
!4367 = !DILocation(line: 6663, column: 5, scope: !4365)
!4368 = !DILocation(line: 6664, column: 14, scope: !4336)
!4369 = !DILocation(line: 6664, column: 12, scope: !4337)
!4370 = !DILocation(line: 6666, column: 7, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 6665, column: 5)
!4372 = !DILocation(line: 6667, column: 21, scope: !4371)
!4373 = !DILocation(line: 6668, column: 5, scope: !4371)
!4374 = !DILocation(line: 6669, column: 12, scope: !4336)
!4375 = !DILocation(line: 6673, column: 11, scope: !4333)
!4376 = !DILocation(line: 6673, column: 16, scope: !4333)
!4377 = !DILocation(line: 6673, column: 19, scope: !4333)
!4378 = !DILocation(line: 6673, column: 39, scope: !4333)
!4379 = !DILocation(line: 6673, column: 36, scope: !4333)
!4380 = !DILocation(line: 6674, column: 4, scope: !4333)
!4381 = !DILocation(line: 6674, column: 7, scope: !4333)
!4382 = !DILocation(line: 6674, column: 33, scope: !4333)
!4383 = !DILocation(line: 6673, column: 11, scope: !4334)
!4384 = !DILocation(line: 6676, column: 14, scope: !4332)
!4385 = !DILocation(line: 6677, column: 37, scope: !4332)
!4386 = !DILocation(line: 6677, column: 12, scope: !4332)
!4387 = !DILocation(line: 6677, column: 10, scope: !4332)
!4388 = !DILocation(line: 6678, column: 30, scope: !4332)
!4389 = !DILocation(line: 6679, column: 4, scope: !4332)
!4390 = !DILocation(line: 6679, column: 22, scope: !4332)
!4391 = !DILocation(line: 6680, column: 24, scope: !4332)
!4392 = !DILocation(line: 6680, column: 4, scope: !4332)
!4393 = !DILocation(line: 6680, column: 22, scope: !4332)
!4394 = !DILocation(line: 6681, column: 23, scope: !4332)
!4395 = !DILocation(line: 6681, column: 21, scope: !4332)
!4396 = !DILocation(line: 6682, column: 2, scope: !4332)
!4397 = !DILocation(line: 6683, column: 24, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4333, file: !3, line: 6683, column: 16)
!4399 = !DILocation(line: 6683, column: 16, scope: !4333)
!4400 = !DILocation(line: 6684, column: 35, scope: !4398)
!4401 = !DILocation(line: 6684, column: 10, scope: !4398)
!4402 = !DILocation(line: 6684, column: 8, scope: !4398)
!4403 = !DILocation(line: 6684, column: 2, scope: !4398)
!4404 = !DILocation(line: 6686, column: 38, scope: !4334)
!4405 = !DILocation(line: 6686, column: 7, scope: !4334)
!4406 = !DILocation(line: 6686, column: 26, scope: !4334)
!4407 = !DILocation(line: 6687, column: 7, scope: !4334)
!4408 = !DILocation(line: 6687, column: 31, scope: !4334)
!4409 = !DILocation(line: 6688, column: 5, scope: !4334)
!4410 = !DILocation(line: 6689, column: 14, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 6689, column: 12)
!4412 = !DILocation(line: 6690, column: 5, scope: !4411)
!4413 = !DILocation(line: 6690, column: 25, scope: !4411)
!4414 = !DILocation(line: 6689, column: 12, scope: !4335)
!4415 = !DILocation(line: 6692, column: 7, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 6691, column: 5)
!4417 = !DILocation(line: 6693, column: 21, scope: !4416)
!4418 = !DILocation(line: 6694, column: 5, scope: !4416)
!4419 = !DILocation(line: 6695, column: 29, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 6695, column: 12)
!4421 = !DILocation(line: 6696, column: 5, scope: !4420)
!4422 = !DILocation(line: 6709, column: 37, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 6708, column: 5)
!4424 = !DILocation(line: 6696, column: 8, scope: !4420)
!4425 = !DILocation(line: 6696, column: 38, scope: !4420)
!4426 = !DILocation(line: 6696, column: 26, scope: !4420)
!4427 = !DILocation(line: 6695, column: 12, scope: !4411)
!4428 = !DILocation(line: 6698, column: 11, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 6698, column: 11)
!4430 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 6697, column: 5)
!4431 = !DILocation(line: 0, scope: !4429)
!4432 = !DILocation(line: 6698, column: 11, scope: !4430)
!4433 = !DILocation(line: 6699, column: 2, scope: !4429)
!4434 = !DILocation(line: 6703, column: 2, scope: !4429)
!4435 = !DILocation(line: 6705, column: 21, scope: !4430)
!4436 = !DILocation(line: 6706, column: 5, scope: !4430)
!4437 = !DILocation(line: 6709, column: 7, scope: !4423)
!4438 = !DILocation(line: 6709, column: 25, scope: !4423)
!4439 = !DILocation(line: 6710, column: 30, scope: !4423)
!4440 = !DILocation(line: 6713, column: 3, scope: !4319)
!4441 = distinct !DISubprogram(name: "handle_weak_attribute", scope: !3, file: !3, line: 6720, type: !2951, scopeLine: 6724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4442)
!4442 = !{!4443, !4444, !4445, !4446, !4447}
!4443 = !DILocalVariable(name: "node", arg: 1, scope: !4441, file: !3, line: 6720, type: !1886)
!4444 = !DILocalVariable(name: "name", arg: 2, scope: !4441, file: !3, line: 6720, type: !1527)
!4445 = !DILocalVariable(name: "args", arg: 3, scope: !4441, file: !3, line: 6721, type: !1527)
!4446 = !DILocalVariable(name: "flags", arg: 4, scope: !4441, file: !3, line: 6722, type: !1520)
!4447 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4441, file: !3, line: 6723, type: !1518)
!4448 = !DILocation(line: 0, scope: !4441)
!4449 = !DILocation(line: 6725, column: 7, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 6725, column: 7)
!4451 = !DILocation(line: 6725, column: 25, scope: !4450)
!4452 = !DILocation(line: 6726, column: 7, scope: !4450)
!4453 = !DILocation(line: 6726, column: 10, scope: !4450)
!4454 = !DILocation(line: 6725, column: 7, scope: !4441)
!4455 = !DILocation(line: 6728, column: 7, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 6727, column: 5)
!4457 = !DILocation(line: 6729, column: 21, scope: !4456)
!4458 = !DILocation(line: 6730, column: 5, scope: !4456)
!4459 = !DILocation(line: 6732, column: 5, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 6731, column: 12)
!4461 = !DILocation(line: 6732, column: 26, scope: !4460)
!4462 = !DILocation(line: 6731, column: 12, scope: !4450)
!4463 = !DILocation(line: 6733, column: 5, scope: !4460)
!4464 = !DILocation(line: 6735, column: 5, scope: !4460)
!4465 = !DILocation(line: 6737, column: 3, scope: !4441)
!4466 = distinct !DISubprogram(name: "handle_alias_attribute", scope: !3, file: !3, line: 6744, type: !2951, scopeLine: 6746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4467)
!4467 = !{!4468, !4469, !4470, !4471, !4472, !4473, !4474}
!4468 = !DILocalVariable(name: "node", arg: 1, scope: !4466, file: !3, line: 6744, type: !1886)
!4469 = !DILocalVariable(name: "name", arg: 2, scope: !4466, file: !3, line: 6744, type: !1527)
!4470 = !DILocalVariable(name: "args", arg: 3, scope: !4466, file: !3, line: 6744, type: !1527)
!4471 = !DILocalVariable(name: "flags", arg: 4, scope: !4466, file: !3, line: 6745, type: !1520)
!4472 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4466, file: !3, line: 6745, type: !1518)
!4473 = !DILocalVariable(name: "decl", scope: !4466, file: !3, line: 6747, type: !1527)
!4474 = !DILocalVariable(name: "id", scope: !4475, file: !3, line: 6773, type: !1527)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 6772, column: 5)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 6771, column: 12)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 6754, column: 12)
!4478 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 6749, column: 7)
!4479 = !DILocation(line: 0, scope: !4466)
!4480 = !DILocation(line: 6747, column: 15, scope: !4466)
!4481 = !DILocation(line: 6749, column: 7, scope: !4478)
!4482 = !DILocation(line: 6749, column: 24, scope: !4478)
!4483 = !DILocation(line: 6749, column: 41, scope: !4478)
!4484 = !DILocation(line: 6749, column: 61, scope: !4478)
!4485 = !DILocation(line: 6749, column: 7, scope: !4466)
!4486 = !DILocation(line: 6751, column: 7, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 6750, column: 5)
!4488 = !DILocation(line: 6752, column: 21, scope: !4487)
!4489 = !DILocation(line: 6753, column: 5, scope: !4487)
!4490 = !DILocation(line: 6754, column: 47, scope: !4477)
!4491 = !DILocation(line: 6754, column: 50, scope: !4477)
!4492 = !DILocation(line: 6755, column: 7, scope: !4477)
!4493 = !DILocation(line: 6756, column: 4, scope: !4477)
!4494 = !DILocation(line: 6756, column: 7, scope: !4477)
!4495 = !DILocation(line: 6756, column: 26, scope: !4477)
!4496 = !DILocation(line: 6756, column: 30, scope: !4477)
!4497 = !DILocation(line: 6759, column: 7, scope: !4477)
!4498 = !DILocation(line: 6760, column: 4, scope: !4477)
!4499 = !DILocation(line: 6760, column: 9, scope: !4477)
!4500 = !DILocation(line: 6760, column: 28, scope: !4477)
!4501 = !DILocation(line: 6760, column: 31, scope: !4477)
!4502 = !DILocation(line: 6754, column: 12, scope: !4478)
!4503 = !DILocation(line: 6762, column: 7, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 6761, column: 5)
!4505 = !DILocation(line: 6763, column: 21, scope: !4504)
!4506 = !DILocation(line: 6764, column: 5, scope: !4504)
!4507 = !DILocation(line: 6771, column: 12, scope: !4476)
!4508 = !DILocation(line: 6771, column: 41, scope: !4476)
!4509 = !DILocation(line: 6771, column: 49, scope: !4476)
!4510 = !DILocation(line: 6771, column: 71, scope: !4476)
!4511 = !DILocation(line: 6771, column: 46, scope: !4476)
!4512 = !DILocation(line: 6775, column: 12, scope: !4475)
!4513 = !DILocation(line: 0, scope: !4475)
!4514 = !DILocation(line: 6776, column: 11, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4475, file: !3, line: 6776, column: 11)
!4516 = !DILocation(line: 6776, column: 26, scope: !4515)
!4517 = !DILocation(line: 6776, column: 11, scope: !4475)
!4518 = !DILocation(line: 6778, column: 4, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 6777, column: 2)
!4520 = !DILocation(line: 6779, column: 18, scope: !4519)
!4521 = !DILocation(line: 6780, column: 4, scope: !4519)
!4522 = !DILocation(line: 6782, column: 28, scope: !4475)
!4523 = !DILocation(line: 6782, column: 12, scope: !4475)
!4524 = !DILocation(line: 6784, column: 7, scope: !4475)
!4525 = !DILocation(line: 6784, column: 22, scope: !4475)
!4526 = !DILocation(line: 6786, column: 11, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4475, file: !3, line: 6786, column: 11)
!4528 = !DILocation(line: 6786, column: 28, scope: !4527)
!4529 = !DILocation(line: 6786, column: 11, scope: !4475)
!4530 = !DILocation(line: 6787, column: 24, scope: !4527)
!4531 = !DILocation(line: 6787, column: 2, scope: !4527)
!4532 = !DILocation(line: 6787, column: 22, scope: !4527)
!4533 = !DILocation(line: 6790, column: 37, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 6790, column: 8)
!4535 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 6789, column: 2)
!4536 = !DILocation(line: 6790, column: 8, scope: !4534)
!4537 = !DILocation(line: 0, scope: !4534)
!4538 = !DILocation(line: 6790, column: 8, scope: !4535)
!4539 = !DILocation(line: 6791, column: 27, scope: !4534)
!4540 = !DILocation(line: 6791, column: 6, scope: !4534)
!4541 = !DILocation(line: 6794, column: 23, scope: !4535)
!4542 = !DILocation(line: 6799, column: 7, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 6798, column: 5)
!4544 = !DILocation(line: 6800, column: 21, scope: !4543)
!4545 = !DILocation(line: 6804, column: 1, scope: !4466)
!4546 = distinct !DISubprogram(name: "handle_weakref_attribute", scope: !3, file: !3, line: 6810, type: !2951, scopeLine: 6812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4547)
!4547 = !{!4548, !4549, !4550, !4551, !4552, !4553}
!4548 = !DILocalVariable(name: "node", arg: 1, scope: !4546, file: !3, line: 6810, type: !1886)
!4549 = !DILocalVariable(name: "name", arg: 2, scope: !4546, file: !3, line: 6810, type: !1527)
!4550 = !DILocalVariable(name: "args", arg: 3, scope: !4546, file: !3, line: 6810, type: !1527)
!4551 = !DILocalVariable(name: "flags", arg: 4, scope: !4546, file: !3, line: 6811, type: !1520)
!4552 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4546, file: !3, line: 6811, type: !1518)
!4553 = !DILocalVariable(name: "attr", scope: !4546, file: !3, line: 6813, type: !1527)
!4554 = !DILocation(line: 0, scope: !4546)
!4555 = !DILocation(line: 6818, column: 30, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 6818, column: 7)
!4557 = !DILocation(line: 6818, column: 7, scope: !4556)
!4558 = !DILocation(line: 6819, column: 10, scope: !4556)
!4559 = !DILocation(line: 6819, column: 7, scope: !4556)
!4560 = !DILocation(line: 6820, column: 11, scope: !4556)
!4561 = !DILocation(line: 6820, column: 29, scope: !4556)
!4562 = !DILocation(line: 6820, column: 41, scope: !4556)
!4563 = !DILocation(line: 6820, column: 62, scope: !4556)
!4564 = !DILocation(line: 6818, column: 7, scope: !4546)
!4565 = !DILocation(line: 6822, column: 7, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 6821, column: 5)
!4567 = !DILocation(line: 6823, column: 21, scope: !4566)
!4568 = !DILocation(line: 6824, column: 7, scope: !4566)
!4569 = !DILocation(line: 6831, column: 7, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 6831, column: 7)
!4571 = !DILocation(line: 6831, column: 7, scope: !4546)
!4572 = !DILocation(line: 6833, column: 14, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 6832, column: 5)
!4574 = !DILocation(line: 6834, column: 14, scope: !4573)
!4575 = !DILocation(line: 6836, column: 21, scope: !4573)
!4576 = !DILocation(line: 6838, column: 7, scope: !4573)
!4577 = !DILocation(line: 6839, column: 5, scope: !4573)
!4578 = !DILocation(line: 6842, column: 38, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 6842, column: 11)
!4580 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 6841, column: 5)
!4581 = !DILocation(line: 6842, column: 11, scope: !4579)
!4582 = !DILocation(line: 6842, column: 11, scope: !4580)
!4583 = !DILocation(line: 6843, column: 12, scope: !4579)
!4584 = !DILocation(line: 6843, column: 2, scope: !4579)
!4585 = !DILocation(line: 6849, column: 7, scope: !4580)
!4586 = !DILocation(line: 6849, column: 25, scope: !4580)
!4587 = !DILocation(line: 6853, column: 1, scope: !4546)
!4588 = distinct !DISubprogram(name: "handle_no_instrument_function_attribute", scope: !3, file: !3, line: 7045, type: !2951, scopeLine: 7049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4589)
!4589 = !{!4590, !4591, !4592, !4593, !4594, !4595}
!4590 = !DILocalVariable(name: "node", arg: 1, scope: !4588, file: !3, line: 7045, type: !1886)
!4591 = !DILocalVariable(name: "name", arg: 2, scope: !4588, file: !3, line: 7045, type: !1527)
!4592 = !DILocalVariable(name: "args", arg: 3, scope: !4588, file: !3, line: 7046, type: !1527)
!4593 = !DILocalVariable(name: "flags", arg: 4, scope: !4588, file: !3, line: 7047, type: !1520)
!4594 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4588, file: !3, line: 7048, type: !1518)
!4595 = !DILocalVariable(name: "decl", scope: !4588, file: !3, line: 7050, type: !1527)
!4596 = !DILocation(line: 0, scope: !4588)
!4597 = !DILocation(line: 7050, column: 15, scope: !4588)
!4598 = !DILocation(line: 7052, column: 7, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 7052, column: 7)
!4600 = !DILocation(line: 7052, column: 24, scope: !4599)
!4601 = !DILocation(line: 7052, column: 7, scope: !4588)
!4602 = !DILocation(line: 7054, column: 17, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 7053, column: 5)
!4604 = !DILocation(line: 7054, column: 7, scope: !4603)
!4605 = !DILocation(line: 7056, column: 21, scope: !4603)
!4606 = !DILocation(line: 7057, column: 5, scope: !4603)
!4607 = !DILocation(line: 7058, column: 12, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 7058, column: 12)
!4609 = !DILocation(line: 7058, column: 12, scope: !4599)
!4610 = !DILocation(line: 7060, column: 17, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 7059, column: 5)
!4612 = !DILocation(line: 7060, column: 7, scope: !4611)
!4613 = !DILocation(line: 7062, column: 21, scope: !4611)
!4614 = !DILocation(line: 7063, column: 5, scope: !4611)
!4615 = !DILocation(line: 7065, column: 5, scope: !4608)
!4616 = !DILocation(line: 7065, column: 51, scope: !4608)
!4617 = !DILocation(line: 7067, column: 3, scope: !4588)
!4618 = distinct !DISubprogram(name: "handle_malloc_attribute", scope: !3, file: !3, line: 7074, type: !2951, scopeLine: 7076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4619)
!4619 = !{!4620, !4621, !4622, !4623, !4624}
!4620 = !DILocalVariable(name: "node", arg: 1, scope: !4618, file: !3, line: 7074, type: !1886)
!4621 = !DILocalVariable(name: "name", arg: 2, scope: !4618, file: !3, line: 7074, type: !1527)
!4622 = !DILocalVariable(name: "args", arg: 3, scope: !4618, file: !3, line: 7074, type: !1527)
!4623 = !DILocalVariable(name: "flags", arg: 4, scope: !4618, file: !3, line: 7075, type: !1520)
!4624 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4618, file: !3, line: 7075, type: !1518)
!4625 = !DILocation(line: 0, scope: !4618)
!4626 = !DILocation(line: 7077, column: 7, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 7077, column: 7)
!4628 = !DILocation(line: 7077, column: 25, scope: !4627)
!4629 = !DILocation(line: 7078, column: 7, scope: !4627)
!4630 = !DILocation(line: 7078, column: 10, scope: !4627)
!4631 = !DILocation(line: 7077, column: 7, scope: !4618)
!4632 = !DILocation(line: 7079, column: 5, scope: !4627)
!4633 = !DILocation(line: 7079, column: 28, scope: !4627)
!4634 = !DILocation(line: 7082, column: 7, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 7081, column: 5)
!4636 = !DILocation(line: 7083, column: 21, scope: !4635)
!4637 = !DILocation(line: 7086, column: 3, scope: !4618)
!4638 = distinct !DISubprogram(name: "handle_returns_twice_attribute", scope: !3, file: !3, line: 7119, type: !2951, scopeLine: 7121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4639)
!4639 = !{!4640, !4641, !4642, !4643, !4644}
!4640 = !DILocalVariable(name: "node", arg: 1, scope: !4638, file: !3, line: 7119, type: !1886)
!4641 = !DILocalVariable(name: "name", arg: 2, scope: !4638, file: !3, line: 7119, type: !1527)
!4642 = !DILocalVariable(name: "args", arg: 3, scope: !4638, file: !3, line: 7119, type: !1527)
!4643 = !DILocalVariable(name: "flags", arg: 4, scope: !4638, file: !3, line: 7120, type: !1520)
!4644 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4638, file: !3, line: 7120, type: !1518)
!4645 = !DILocation(line: 0, scope: !4638)
!4646 = !DILocation(line: 7122, column: 7, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 7122, column: 7)
!4648 = !DILocation(line: 7122, column: 25, scope: !4647)
!4649 = !DILocation(line: 7122, column: 7, scope: !4638)
!4650 = !DILocation(line: 7123, column: 5, scope: !4647)
!4651 = !DILocation(line: 7123, column: 35, scope: !4647)
!4652 = !DILocation(line: 7126, column: 7, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 7125, column: 5)
!4654 = !DILocation(line: 7127, column: 21, scope: !4653)
!4655 = !DILocation(line: 7130, column: 3, scope: !4638)
!4656 = distinct !DISubprogram(name: "handle_no_limit_stack_attribute", scope: !3, file: !3, line: 7137, type: !2951, scopeLine: 7141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4657)
!4657 = !{!4658, !4659, !4660, !4661, !4662, !4663}
!4658 = !DILocalVariable(name: "node", arg: 1, scope: !4656, file: !3, line: 7137, type: !1886)
!4659 = !DILocalVariable(name: "name", arg: 2, scope: !4656, file: !3, line: 7137, type: !1527)
!4660 = !DILocalVariable(name: "args", arg: 3, scope: !4656, file: !3, line: 7138, type: !1527)
!4661 = !DILocalVariable(name: "flags", arg: 4, scope: !4656, file: !3, line: 7139, type: !1520)
!4662 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4656, file: !3, line: 7140, type: !1518)
!4663 = !DILocalVariable(name: "decl", scope: !4656, file: !3, line: 7142, type: !1527)
!4664 = !DILocation(line: 0, scope: !4656)
!4665 = !DILocation(line: 7142, column: 15, scope: !4656)
!4666 = !DILocation(line: 7144, column: 7, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 7144, column: 7)
!4668 = !DILocation(line: 7144, column: 24, scope: !4667)
!4669 = !DILocation(line: 7144, column: 7, scope: !4656)
!4670 = !DILocation(line: 7146, column: 17, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 7145, column: 5)
!4672 = !DILocation(line: 7146, column: 7, scope: !4671)
!4673 = !DILocation(line: 7148, column: 21, scope: !4671)
!4674 = !DILocation(line: 7149, column: 5, scope: !4671)
!4675 = !DILocation(line: 7150, column: 12, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 7150, column: 12)
!4677 = !DILocation(line: 7150, column: 12, scope: !4667)
!4678 = !DILocation(line: 7152, column: 17, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 7151, column: 5)
!4680 = !DILocation(line: 7152, column: 7, scope: !4679)
!4681 = !DILocation(line: 7154, column: 21, scope: !4679)
!4682 = !DILocation(line: 7155, column: 5, scope: !4679)
!4683 = !DILocation(line: 7157, column: 5, scope: !4676)
!4684 = !DILocation(line: 7157, column: 32, scope: !4676)
!4685 = !DILocation(line: 7159, column: 3, scope: !4656)
!4686 = distinct !DISubprogram(name: "handle_pure_attribute", scope: !3, file: !3, line: 7166, type: !2951, scopeLine: 7168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4687)
!4687 = !{!4688, !4689, !4690, !4691, !4692}
!4688 = !DILocalVariable(name: "node", arg: 1, scope: !4686, file: !3, line: 7166, type: !1886)
!4689 = !DILocalVariable(name: "name", arg: 2, scope: !4686, file: !3, line: 7166, type: !1527)
!4690 = !DILocalVariable(name: "args", arg: 3, scope: !4686, file: !3, line: 7166, type: !1527)
!4691 = !DILocalVariable(name: "flags", arg: 4, scope: !4686, file: !3, line: 7167, type: !1520)
!4692 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4686, file: !3, line: 7167, type: !1518)
!4693 = !DILocation(line: 0, scope: !4686)
!4694 = !DILocation(line: 7169, column: 7, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 7169, column: 7)
!4696 = !DILocation(line: 7169, column: 25, scope: !4695)
!4697 = !DILocation(line: 7169, column: 7, scope: !4686)
!4698 = !DILocation(line: 7170, column: 5, scope: !4695)
!4699 = !DILocation(line: 7170, column: 25, scope: !4695)
!4700 = !DILocation(line: 7174, column: 7, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 7173, column: 5)
!4702 = !DILocation(line: 7175, column: 21, scope: !4701)
!4703 = !DILocation(line: 7178, column: 3, scope: !4686)
!4704 = distinct !DISubprogram(name: "handle_novops_attribute", scope: !3, file: !3, line: 7185, type: !2951, scopeLine: 7188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4705)
!4705 = !{!4706, !4707, !4708, !4709, !4710}
!4706 = !DILocalVariable(name: "node", arg: 1, scope: !4704, file: !3, line: 7185, type: !1886)
!4707 = !DILocalVariable(name: "name", arg: 2, scope: !4704, file: !3, line: 7185, type: !1527)
!4708 = !DILocalVariable(name: "args", arg: 3, scope: !4704, file: !3, line: 7186, type: !1527)
!4709 = !DILocalVariable(name: "flags", arg: 4, scope: !4704, file: !3, line: 7186, type: !1520)
!4710 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4704, file: !3, line: 7187, type: !1518)
!4711 = !DILocation(line: 0, scope: !4704)
!4712 = !DILocation(line: 7189, column: 3, scope: !4704)
!4713 = !DILocation(line: 7190, column: 3, scope: !4704)
!4714 = !DILocation(line: 7190, column: 26, scope: !4704)
!4715 = !DILocation(line: 7191, column: 3, scope: !4704)
!4716 = distinct !DISubprogram(name: "handle_deprecated_attribute", scope: !3, file: !3, line: 7198, type: !2951, scopeLine: 7201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4717)
!4717 = !{!4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726}
!4718 = !DILocalVariable(name: "node", arg: 1, scope: !4716, file: !3, line: 7198, type: !1886)
!4719 = !DILocalVariable(name: "name", arg: 2, scope: !4716, file: !3, line: 7198, type: !1527)
!4720 = !DILocalVariable(name: "args", arg: 3, scope: !4716, file: !3, line: 7199, type: !1527)
!4721 = !DILocalVariable(name: "flags", arg: 4, scope: !4716, file: !3, line: 7199, type: !1520)
!4722 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4716, file: !3, line: 7200, type: !1518)
!4723 = !DILocalVariable(name: "type", scope: !4716, file: !3, line: 7202, type: !1527)
!4724 = !DILocalVariable(name: "warn", scope: !4716, file: !3, line: 7203, type: !1520)
!4725 = !DILocalVariable(name: "what", scope: !4716, file: !3, line: 7204, type: !1527)
!4726 = !DILocalVariable(name: "decl", scope: !4727, file: !3, line: 7216, type: !1527)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 7215, column: 5)
!4728 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 7214, column: 7)
!4729 = !DILocation(line: 0, scope: !4716)
!4730 = !DILocation(line: 7206, column: 8, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 7206, column: 7)
!4732 = !DILocation(line: 7206, column: 7, scope: !4716)
!4733 = !DILocation(line: 7207, column: 19, scope: !4731)
!4734 = !DILocation(line: 7207, column: 5, scope: !4731)
!4735 = !DILocation(line: 7208, column: 12, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 7208, column: 12)
!4737 = !DILocation(line: 7208, column: 42, scope: !4736)
!4738 = !DILocation(line: 7208, column: 12, scope: !4731)
!4739 = !DILocation(line: 7210, column: 7, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 7209, column: 5)
!4741 = !DILocation(line: 7211, column: 21, scope: !4740)
!4742 = !DILocation(line: 7212, column: 5, scope: !4740)
!4743 = !DILocation(line: 7214, column: 7, scope: !4728)
!4744 = !DILocation(line: 7214, column: 7, scope: !4716)
!4745 = !DILocation(line: 0, scope: !4727)
!4746 = !DILocation(line: 7217, column: 14, scope: !4727)
!4747 = !DILocation(line: 7219, column: 28, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 7219, column: 11)
!4749 = !DILocation(line: 7220, column: 4, scope: !4748)
!4750 = !DILocation(line: 7220, column: 24, scope: !4748)
!4751 = !DILocation(line: 7221, column: 4, scope: !4748)
!4752 = !DILocation(line: 7221, column: 24, scope: !4748)
!4753 = !DILocation(line: 7222, column: 4, scope: !4748)
!4754 = !DILocation(line: 7222, column: 24, scope: !4748)
!4755 = !DILocation(line: 7223, column: 4, scope: !4748)
!4756 = !DILocation(line: 7223, column: 24, scope: !4748)
!4757 = !DILocation(line: 7219, column: 11, scope: !4727)
!4758 = !DILocation(line: 7224, column: 25, scope: !4748)
!4759 = !DILocation(line: 7224, column: 2, scope: !4748)
!4760 = !DILocation(line: 7228, column: 12, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 7228, column: 12)
!4762 = !DILocation(line: 7228, column: 12, scope: !4728)
!4763 = !DILocation(line: 7230, column: 19, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 7230, column: 11)
!4765 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 7229, column: 5)
!4766 = !DILocation(line: 7230, column: 11, scope: !4765)
!4767 = !DILocation(line: 7231, column: 10, scope: !4764)
!4768 = !DILocation(line: 7231, column: 8, scope: !4764)
!4769 = !DILocation(line: 7231, column: 2, scope: !4764)
!4770 = !DILocation(line: 7232, column: 31, scope: !4765)
!4771 = !DILocation(line: 7232, column: 7, scope: !4765)
!4772 = !DILocation(line: 7233, column: 14, scope: !4765)
!4773 = !DILocation(line: 7234, column: 5, scope: !4765)
!4774 = !DILocation(line: 0, scope: !4728)
!4775 = !DILocation(line: 7238, column: 7, scope: !4716)
!4776 = !DILocation(line: 7240, column: 21, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 7239, column: 5)
!4778 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 7238, column: 7)
!4779 = !DILocation(line: 7241, column: 11, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 7241, column: 11)
!4781 = !DILocation(line: 7241, column: 16, scope: !4780)
!4782 = !DILocation(line: 7241, column: 19, scope: !4780)
!4783 = !DILocation(line: 7241, column: 11, scope: !4777)
!4784 = !DILocation(line: 7243, column: 8, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 7243, column: 8)
!4786 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 7242, column: 2)
!4787 = !DILocation(line: 7243, column: 37, scope: !4785)
!4788 = !DILocation(line: 7243, column: 8, scope: !4786)
!4789 = !DILocation(line: 7244, column: 13, scope: !4785)
!4790 = !DILocation(line: 7244, column: 6, scope: !4785)
!4791 = !DILocation(line: 7245, column: 42, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 7245, column: 13)
!4793 = !DILocation(line: 7246, column: 6, scope: !4792)
!4794 = !DILocation(line: 7246, column: 9, scope: !4792)
!4795 = !DILocation(line: 7245, column: 13, scope: !4785)
!4796 = !DILocation(line: 7247, column: 6, scope: !4792)
!4797 = !DILocation(line: 7249, column: 11, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 7249, column: 11)
!4799 = !DILocation(line: 7249, column: 11, scope: !4777)
!4800 = !DILocation(line: 7250, column: 2, scope: !4798)
!4801 = !DILocation(line: 7252, column: 2, scope: !4798)
!4802 = !DILocation(line: 7255, column: 3, scope: !4716)
!4803 = distinct !DISubprogram(name: "handle_vector_size_attribute", scope: !3, file: !3, line: 7262, type: !2951, scopeLine: 7265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4804)
!4804 = !{!4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815}
!4805 = !DILocalVariable(name: "node", arg: 1, scope: !4803, file: !3, line: 7262, type: !1886)
!4806 = !DILocalVariable(name: "name", arg: 2, scope: !4803, file: !3, line: 7262, type: !1527)
!4807 = !DILocalVariable(name: "args", arg: 3, scope: !4803, file: !3, line: 7262, type: !1527)
!4808 = !DILocalVariable(name: "flags", arg: 4, scope: !4803, file: !3, line: 7263, type: !1520)
!4809 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4803, file: !3, line: 7264, type: !1518)
!4810 = !DILocalVariable(name: "vecsize", scope: !4803, file: !3, line: 7266, type: !1580)
!4811 = !DILocalVariable(name: "nunits", scope: !4803, file: !3, line: 7266, type: !1580)
!4812 = !DILocalVariable(name: "orig_mode", scope: !4803, file: !3, line: 7267, type: !11)
!4813 = !DILocalVariable(name: "type", scope: !4803, file: !3, line: 7268, type: !1527)
!4814 = !DILocalVariable(name: "new_type", scope: !4803, file: !3, line: 7268, type: !1527)
!4815 = !DILocalVariable(name: "size", scope: !4803, file: !3, line: 7268, type: !1527)
!4816 = !DILocation(line: 0, scope: !4803)
!4817 = !DILocation(line: 7268, column: 15, scope: !4803)
!4818 = !DILocation(line: 7270, column: 17, scope: !4803)
!4819 = !DILocation(line: 7272, column: 10, scope: !4803)
!4820 = !DILocation(line: 7274, column: 8, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 7274, column: 7)
!4822 = !DILocation(line: 7274, column: 7, scope: !4803)
!4823 = !DILocation(line: 7276, column: 7, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 7275, column: 5)
!4825 = !DILocation(line: 7277, column: 7, scope: !4824)
!4826 = !DILocation(line: 7281, column: 13, scope: !4803)
!4827 = !DILocation(line: 7291, column: 3, scope: !4803)
!4828 = !DILocation(line: 7291, column: 10, scope: !4803)
!4829 = !DILocation(line: 7292, column: 3, scope: !4803)
!4830 = !DILocation(line: 7292, column: 23, scope: !4803)
!4831 = !DILocation(line: 7293, column: 3, scope: !4803)
!4832 = !DILocation(line: 7293, column: 23, scope: !4803)
!4833 = !DILocation(line: 7294, column: 3, scope: !4803)
!4834 = !DILocation(line: 7294, column: 23, scope: !4803)
!4835 = !DILocation(line: 7295, column: 23, scope: !4803)
!4836 = !DILocation(line: 7295, column: 3, scope: !4803)
!4837 = !DILocation(line: 7296, column: 12, scope: !4803)
!4838 = distinct !{!4838, !4827, !4837}
!4839 = !DILocation(line: 7299, column: 15, scope: !4803)
!4840 = !DILocation(line: 7301, column: 9, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 7301, column: 7)
!4842 = !DILocation(line: 7302, column: 8, scope: !4841)
!4843 = !DILocation(line: 7302, column: 12, scope: !4841)
!4844 = !DILocation(line: 7303, column: 8, scope: !4841)
!4845 = !DILocation(line: 7303, column: 12, scope: !4841)
!4846 = !DILocation(line: 7304, column: 7, scope: !4841)
!4847 = !DILocation(line: 7304, column: 12, scope: !4841)
!4848 = !DILocation(line: 7305, column: 4, scope: !4841)
!4849 = !DILocation(line: 7305, column: 34, scope: !4841)
!4850 = !DILocation(line: 7306, column: 4, scope: !4841)
!4851 = !DILocation(line: 7306, column: 8, scope: !4841)
!4852 = !DILocation(line: 7307, column: 7, scope: !4841)
!4853 = !DILocation(line: 7307, column: 26, scope: !4841)
!4854 = !DILocation(line: 7307, column: 11, scope: !4841)
!4855 = !DILocation(line: 7308, column: 7, scope: !4841)
!4856 = !DILocation(line: 7308, column: 10, scope: !4841)
!4857 = !DILocation(line: 7308, column: 27, scope: !4841)
!4858 = !DILocation(line: 7301, column: 7, scope: !4803)
!4859 = !DILocation(line: 7310, column: 7, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 7309, column: 5)
!4861 = !DILocation(line: 7311, column: 7, scope: !4860)
!4862 = !DILocation(line: 7314, column: 31, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 7314, column: 7)
!4864 = !DILocation(line: 7314, column: 17, scope: !4863)
!4865 = !DILocation(line: 7314, column: 15, scope: !4863)
!4866 = !DILocation(line: 7314, column: 7, scope: !4803)
!4867 = !DILocation(line: 7316, column: 7, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 7315, column: 5)
!4869 = !DILocation(line: 7317, column: 7, scope: !4868)
!4870 = !DILocation(line: 7320, column: 15, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 7320, column: 7)
!4872 = !DILocation(line: 7320, column: 7, scope: !4803)
!4873 = !DILocation(line: 7322, column: 7, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 7321, column: 5)
!4875 = !DILocation(line: 7323, column: 7, scope: !4874)
!4876 = !DILocation(line: 7327, column: 36, scope: !4803)
!4877 = !DILocation(line: 7327, column: 22, scope: !4803)
!4878 = !DILocation(line: 7327, column: 20, scope: !4803)
!4879 = !DILocation(line: 7328, column: 14, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 7328, column: 7)
!4881 = !{i64 0, i64 65}
!4882 = !DILocation(line: 7328, column: 7, scope: !4803)
!4883 = !DILocation(line: 7330, column: 7, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 7329, column: 5)
!4885 = !DILocation(line: 7331, column: 7, scope: !4884)
!4886 = !DILocation(line: 7334, column: 39, scope: !4803)
!4887 = !DILocation(line: 7334, column: 14, scope: !4803)
!4888 = !DILocation(line: 7337, column: 28, scope: !4803)
!4889 = !DILocation(line: 7337, column: 54, scope: !4803)
!4890 = !DILocation(line: 7337, column: 11, scope: !4803)
!4891 = !DILocation(line: 7337, column: 9, scope: !4803)
!4892 = !DILocation(line: 7339, column: 3, scope: !4803)
!4893 = !DILocation(line: 7340, column: 1, scope: !4803)
!4894 = distinct !DISubprogram(name: "handle_visibility_attribute", scope: !3, file: !3, line: 6859, type: !2951, scopeLine: 6862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4895)
!4895 = !{!4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904}
!4896 = !DILocalVariable(name: "node", arg: 1, scope: !4894, file: !3, line: 6859, type: !1886)
!4897 = !DILocalVariable(name: "name", arg: 2, scope: !4894, file: !3, line: 6859, type: !1527)
!4898 = !DILocalVariable(name: "args", arg: 3, scope: !4894, file: !3, line: 6859, type: !1527)
!4899 = !DILocalVariable(name: "flags", arg: 4, scope: !4894, file: !3, line: 6860, type: !1520)
!4900 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4894, file: !3, line: 6861, type: !1518)
!4901 = !DILocalVariable(name: "decl", scope: !4894, file: !3, line: 6863, type: !1527)
!4902 = !DILocalVariable(name: "id", scope: !4894, file: !3, line: 6864, type: !1527)
!4903 = !DILocalVariable(name: "vis", scope: !4894, file: !3, line: 6865, type: !1501)
!4904 = !DILocalVariable(name: "attributes", scope: !4905, file: !3, line: 6927, type: !1527)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 6926, column: 5)
!4906 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 6924, column: 7)
!4907 = !DILocation(line: 0, scope: !4894)
!4908 = !DILocation(line: 6863, column: 15, scope: !4894)
!4909 = !DILocation(line: 6864, column: 13, scope: !4894)
!4910 = !DILocation(line: 6867, column: 7, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 6867, column: 7)
!4912 = !DILocation(line: 6867, column: 7, scope: !4894)
!4913 = !DILocation(line: 6869, column: 29, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 6869, column: 11)
!4915 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 6868, column: 5)
!4916 = !DILocation(line: 6869, column: 11, scope: !4915)
!4917 = !DILocation(line: 6871, column: 34, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 6871, column: 16)
!4919 = !DILocation(line: 6871, column: 49, scope: !4918)
!4920 = !DILocation(line: 6871, column: 70, scope: !4918)
!4921 = !DILocation(line: 6871, column: 16, scope: !4914)
!4922 = !DILocation(line: 6873, column: 4, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 6872, column: 2)
!4924 = !DILocation(line: 6875, column: 4, scope: !4923)
!4925 = !DILocation(line: 6877, column: 16, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 6877, column: 16)
!4927 = !DILocation(line: 6877, column: 16, scope: !4918)
!4928 = !DILocation(line: 6879, column: 4, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 6878, column: 2)
!4930 = !DILocation(line: 6881, column: 4, scope: !4929)
!4931 = !DILocation(line: 6884, column: 12, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 6884, column: 12)
!4933 = !DILocation(line: 6884, column: 41, scope: !4932)
!4934 = !DILocation(line: 6884, column: 46, scope: !4932)
!4935 = !DILocation(line: 6884, column: 50, scope: !4932)
!4936 = !DILocation(line: 6884, column: 12, scope: !4911)
!4937 = !DILocation(line: 6886, column: 7, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 6885, column: 5)
!4939 = !DILocation(line: 6887, column: 7, scope: !4938)
!4940 = !DILocation(line: 6890, column: 7, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 6890, column: 7)
!4942 = !DILocation(line: 6890, column: 22, scope: !4941)
!4943 = !DILocation(line: 6890, column: 7, scope: !4894)
!4944 = !DILocation(line: 6892, column: 7, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 6891, column: 5)
!4946 = !DILocation(line: 6893, column: 7, scope: !4945)
!4947 = !DILocation(line: 6897, column: 7, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 6897, column: 7)
!4949 = !DILocation(line: 6897, column: 7, scope: !4894)
!4950 = !DILocation(line: 6899, column: 14, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 6898, column: 5)
!4952 = !DILocation(line: 6900, column: 12, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 6900, column: 11)
!4954 = !DILocation(line: 6900, column: 11, scope: !4951)
!4955 = !DILocation(line: 6902, column: 11, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 6902, column: 11)
!4957 = !DILocation(line: 6902, column: 28, scope: !4956)
!4958 = !DILocation(line: 6902, column: 11, scope: !4951)
!4959 = !DILocation(line: 6904, column: 5, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 6903, column: 2)
!4961 = !DILocation(line: 6906, column: 5, scope: !4960)
!4962 = !DILocation(line: 6910, column: 15, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 6910, column: 7)
!4964 = !DILocation(line: 6910, column: 7, scope: !4963)
!4965 = !DILocation(line: 6910, column: 52, scope: !4963)
!4966 = !DILocation(line: 6910, column: 7, scope: !4894)
!4967 = !DILocation(line: 6912, column: 12, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 6912, column: 12)
!4969 = !DILocation(line: 6912, column: 58, scope: !4968)
!4970 = !DILocation(line: 6912, column: 12, scope: !4963)
!4971 = !DILocation(line: 6914, column: 12, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 6914, column: 12)
!4973 = !DILocation(line: 6914, column: 56, scope: !4972)
!4974 = !DILocation(line: 6914, column: 12, scope: !4968)
!4975 = !DILocation(line: 6916, column: 12, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 6916, column: 12)
!4977 = !DILocation(line: 6916, column: 59, scope: !4976)
!4978 = !DILocation(line: 6916, column: 12, scope: !4972)
!4979 = !DILocation(line: 6920, column: 7, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 6919, column: 5)
!4981 = !DILocation(line: 0, scope: !4963)
!4982 = !DILocation(line: 6924, column: 7, scope: !4906)
!4983 = !DILocation(line: 6925, column: 7, scope: !4906)
!4984 = !DILocation(line: 6925, column: 17, scope: !4906)
!4985 = !DILocation(line: 6925, column: 14, scope: !4906)
!4986 = !DILocation(line: 6924, column: 7, scope: !4894)
!4987 = !DILocation(line: 6927, column: 26, scope: !4905)
!4988 = !DILocation(line: 6928, column: 7, scope: !4905)
!4989 = !DILocation(line: 6929, column: 7, scope: !4905)
!4990 = !DILocation(line: 0, scope: !4905)
!4991 = !DILocation(line: 6930, column: 11, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 6930, column: 11)
!4993 = !DILocation(line: 6930, column: 11, scope: !4905)
!4994 = !DILocation(line: 6931, column: 2, scope: !4992)
!4995 = !DILocation(line: 6942, column: 26, scope: !4894)
!4996 = !DILocation(line: 6943, column: 36, scope: !4894)
!4997 = !DILocation(line: 6950, column: 3, scope: !4894)
!4998 = !DILocation(line: 6951, column: 1, scope: !4894)
!4999 = distinct !DISubprogram(name: "handle_tls_model_attribute", scope: !3, file: !3, line: 7003, type: !2951, scopeLine: 7005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5000)
!5000 = !{!5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008}
!5001 = !DILocalVariable(name: "node", arg: 1, scope: !4999, file: !3, line: 7003, type: !1886)
!5002 = !DILocalVariable(name: "name", arg: 2, scope: !4999, file: !3, line: 7003, type: !1527)
!5003 = !DILocalVariable(name: "args", arg: 3, scope: !4999, file: !3, line: 7003, type: !1527)
!5004 = !DILocalVariable(name: "flags", arg: 4, scope: !4999, file: !3, line: 7004, type: !1520)
!5005 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !4999, file: !3, line: 7004, type: !1518)
!5006 = !DILocalVariable(name: "id", scope: !4999, file: !3, line: 7006, type: !1527)
!5007 = !DILocalVariable(name: "decl", scope: !4999, file: !3, line: 7007, type: !1527)
!5008 = !DILocalVariable(name: "kind", scope: !4999, file: !3, line: 7008, type: !1507)
!5009 = !DILocation(line: 0, scope: !4999)
!5010 = !DILocation(line: 7007, column: 15, scope: !4999)
!5011 = !DILocation(line: 7010, column: 17, scope: !4999)
!5012 = !DILocation(line: 7012, column: 7, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 7012, column: 7)
!5014 = !DILocation(line: 7012, column: 24, scope: !5013)
!5015 = !DILocation(line: 7012, column: 36, scope: !5013)
!5016 = !DILocation(line: 7012, column: 40, scope: !5013)
!5017 = !DILocation(line: 7012, column: 7, scope: !4999)
!5018 = !DILocation(line: 7014, column: 7, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5013, file: !3, line: 7013, column: 5)
!5020 = !DILocation(line: 7015, column: 7, scope: !5019)
!5021 = !DILocation(line: 7018, column: 10, scope: !4999)
!5022 = !DILocation(line: 7019, column: 8, scope: !4999)
!5023 = !DILocation(line: 7020, column: 7, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 7020, column: 7)
!5025 = !DILocation(line: 7020, column: 22, scope: !5024)
!5026 = !DILocation(line: 7020, column: 7, scope: !4999)
!5027 = !DILocation(line: 7022, column: 7, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 7021, column: 5)
!5029 = !DILocation(line: 7023, column: 7, scope: !5028)
!5030 = !DILocation(line: 7026, column: 16, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 7026, column: 7)
!5032 = !DILocation(line: 7026, column: 8, scope: !5031)
!5033 = !DILocation(line: 7026, column: 7, scope: !4999)
!5034 = !DILocation(line: 7028, column: 13, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 7028, column: 12)
!5036 = !DILocation(line: 7028, column: 12, scope: !5031)
!5037 = !DILocation(line: 7030, column: 13, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 7030, column: 12)
!5039 = !DILocation(line: 7030, column: 12, scope: !5035)
!5040 = !DILocation(line: 7031, column: 12, scope: !5038)
!5041 = !DILocation(line: 7031, column: 5, scope: !5038)
!5042 = !DILocation(line: 7032, column: 13, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 7032, column: 12)
!5044 = !DILocation(line: 7032, column: 12, scope: !5038)
!5045 = !DILocation(line: 7035, column: 5, scope: !5043)
!5046 = !DILocation(line: 7037, column: 25, scope: !4999)
!5047 = !DILocation(line: 7038, column: 3, scope: !4999)
!5048 = !DILocation(line: 7039, column: 1, scope: !4999)
!5049 = distinct !DISubprogram(name: "handle_nonnull_attribute", scope: !3, file: !3, line: 7344, type: !2951, scopeLine: 7347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5050)
!5050 = !{!5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5062, !5063}
!5051 = !DILocalVariable(name: "node", arg: 1, scope: !5049, file: !3, line: 7344, type: !1886)
!5052 = !DILocalVariable(name: "name", arg: 2, scope: !5049, file: !3, line: 7344, type: !1527)
!5053 = !DILocalVariable(name: "args", arg: 3, scope: !5049, file: !3, line: 7345, type: !1527)
!5054 = !DILocalVariable(name: "flags", arg: 4, scope: !5049, file: !3, line: 7345, type: !1520)
!5055 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5049, file: !3, line: 7346, type: !1518)
!5056 = !DILocalVariable(name: "type", scope: !5049, file: !3, line: 7348, type: !1527)
!5057 = !DILocalVariable(name: "attr_arg_num", scope: !5049, file: !3, line: 7349, type: !1580)
!5058 = !DILocalVariable(name: "argument", scope: !5059, file: !3, line: 7368, type: !1527)
!5059 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 7367, column: 5)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 7366, column: 3)
!5061 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 7366, column: 3)
!5062 = !DILocalVariable(name: "arg_num", scope: !5059, file: !3, line: 7369, type: !1580)
!5063 = !DILocalVariable(name: "ck_num", scope: !5059, file: !3, line: 7369, type: !1580)
!5064 = !DILocation(line: 0, scope: !5049)
!5065 = !DILocation(line: 7348, column: 15, scope: !5049)
!5066 = !DILocation(line: 7354, column: 8, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 7354, column: 7)
!5068 = !DILocation(line: 7354, column: 7, scope: !5049)
!5069 = !DILocation(line: 0, scope: !5059)
!5070 = !DILocation(line: 7366, column: 3, scope: !5061)
!5071 = !DILocation(line: 7356, column: 12, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 7356, column: 11)
!5073 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 7355, column: 5)
!5074 = !DILocation(line: 7356, column: 11, scope: !5073)
!5075 = !DILocation(line: 7358, column: 4, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 7357, column: 2)
!5077 = !DILocation(line: 7359, column: 18, scope: !5076)
!5078 = !DILocation(line: 7360, column: 2, scope: !5076)
!5079 = !DILocation(line: 7369, column: 7, scope: !5059)
!5080 = !DILocation(line: 7369, column: 30, scope: !5059)
!5081 = !DILocation(line: 7371, column: 33, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 7371, column: 11)
!5083 = !DILocation(line: 7371, column: 12, scope: !5082)
!5084 = !DILocation(line: 7371, column: 11, scope: !5059)
!5085 = !DILocation(line: 7373, column: 4, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 7372, column: 2)
!5087 = !DILocation(line: 7375, column: 18, scope: !5086)
!5088 = !DILocation(line: 7376, column: 4, scope: !5086)
!5089 = !DILocation(line: 7379, column: 18, scope: !5059)
!5090 = !DILocation(line: 7380, column: 11, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 7380, column: 11)
!5092 = !DILocation(line: 7380, column: 11, scope: !5059)
!5093 = !DILocation(line: 0, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 7384, column: 12)
!5095 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 7383, column: 6)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 7382, column: 4)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 7382, column: 4)
!5098 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 7381, column: 2)
!5099 = !DILocation(line: 7382, column: 4, scope: !5097)
!5100 = !DILocation(line: 0, scope: !5097)
!5101 = !DILocation(line: 7384, column: 13, scope: !5094)
!5102 = !DILocation(line: 7384, column: 32, scope: !5094)
!5103 = !DILocation(line: 7384, column: 22, scope: !5094)
!5104 = !DILocation(line: 7386, column: 19, scope: !5095)
!5105 = !DILocation(line: 7382, column: 29, scope: !5096)
!5106 = !DILocation(line: 7382, column: 4, scope: !5096)
!5107 = distinct !{!5107, !5099, !5108}
!5108 = !DILocation(line: 7387, column: 6, scope: !5097)
!5109 = !DILocation(line: 7390, column: 8, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 7389, column: 8)
!5111 = !DILocation(line: 7390, column: 11, scope: !5110)
!5112 = !DILocation(line: 7390, column: 45, scope: !5110)
!5113 = !DILocation(line: 7389, column: 8, scope: !5098)
!5114 = !DILocation(line: 7392, column: 8, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 7391, column: 6)
!5116 = !DILocation(line: 7394, column: 22, scope: !5115)
!5117 = !DILocation(line: 7395, column: 8, scope: !5115)
!5118 = !DILocation(line: 7398, column: 42, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 7398, column: 8)
!5120 = !DILocation(line: 7398, column: 8, scope: !5098)
!5121 = !DILocation(line: 7400, column: 8, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 7399, column: 6)
!5123 = !DILocation(line: 7402, column: 22, scope: !5122)
!5124 = !DILocation(line: 7403, column: 8, scope: !5122)
!5125 = !DILocation(line: 7406, column: 5, scope: !5060)
!5126 = !DILocation(line: 7366, column: 39, scope: !5060)
!5127 = !DILocation(line: 7366, column: 3, scope: !5060)
!5128 = distinct !{!5128, !5070, !5129}
!5129 = !DILocation(line: 7406, column: 5, scope: !5061)
!5130 = !DILocation(line: 7409, column: 1, scope: !5049)
!5131 = distinct !DISubprogram(name: "handle_nothrow_attribute", scope: !3, file: !3, line: 7554, type: !2951, scopeLine: 7556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5132)
!5132 = !{!5133, !5134, !5135, !5136, !5137}
!5133 = !DILocalVariable(name: "node", arg: 1, scope: !5131, file: !3, line: 7554, type: !1886)
!5134 = !DILocalVariable(name: "name", arg: 2, scope: !5131, file: !3, line: 7554, type: !1527)
!5135 = !DILocalVariable(name: "args", arg: 3, scope: !5131, file: !3, line: 7554, type: !1527)
!5136 = !DILocalVariable(name: "flags", arg: 4, scope: !5131, file: !3, line: 7555, type: !1520)
!5137 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5131, file: !3, line: 7555, type: !1518)
!5138 = !DILocation(line: 0, scope: !5131)
!5139 = !DILocation(line: 7557, column: 7, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 7557, column: 7)
!5141 = !DILocation(line: 7557, column: 25, scope: !5140)
!5142 = !DILocation(line: 7557, column: 7, scope: !5131)
!5143 = !DILocation(line: 7558, column: 26, scope: !5140)
!5144 = !DILocation(line: 7558, column: 5, scope: !5140)
!5145 = !DILocation(line: 7562, column: 7, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 7561, column: 5)
!5147 = !DILocation(line: 7563, column: 21, scope: !5146)
!5148 = !DILocation(line: 7566, column: 3, scope: !5131)
!5149 = distinct !DISubprogram(name: "handle_cleanup_attribute", scope: !3, file: !3, line: 7573, type: !2951, scopeLine: 7575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5150)
!5150 = !{!5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158}
!5151 = !DILocalVariable(name: "node", arg: 1, scope: !5149, file: !3, line: 7573, type: !1886)
!5152 = !DILocalVariable(name: "name", arg: 2, scope: !5149, file: !3, line: 7573, type: !1527)
!5153 = !DILocalVariable(name: "args", arg: 3, scope: !5149, file: !3, line: 7573, type: !1527)
!5154 = !DILocalVariable(name: "flags", arg: 4, scope: !5149, file: !3, line: 7574, type: !1520)
!5155 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5149, file: !3, line: 7574, type: !1518)
!5156 = !DILocalVariable(name: "decl", scope: !5149, file: !3, line: 7576, type: !1527)
!5157 = !DILocalVariable(name: "cleanup_id", scope: !5149, file: !3, line: 7577, type: !1527)
!5158 = !DILocalVariable(name: "cleanup_decl", scope: !5149, file: !3, line: 7577, type: !1527)
!5159 = !DILocation(line: 0, scope: !5149)
!5160 = !DILocation(line: 7576, column: 15, scope: !5149)
!5161 = !DILocation(line: 7583, column: 7, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 7583, column: 7)
!5163 = !DILocation(line: 7583, column: 24, scope: !5162)
!5164 = !DILocation(line: 7583, column: 36, scope: !5162)
!5165 = !DILocation(line: 7583, column: 39, scope: !5162)
!5166 = !DILocation(line: 7583, column: 7, scope: !5149)
!5167 = !DILocation(line: 7585, column: 7, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 7584, column: 5)
!5169 = !DILocation(line: 7586, column: 21, scope: !5168)
!5170 = !DILocation(line: 7587, column: 7, scope: !5168)
!5171 = !DILocation(line: 7593, column: 16, scope: !5149)
!5172 = !DILocation(line: 7594, column: 7, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 7594, column: 7)
!5174 = !DILocation(line: 7594, column: 30, scope: !5173)
!5175 = !DILocation(line: 7594, column: 7, scope: !5149)
!5176 = !DILocation(line: 7596, column: 7, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 7595, column: 5)
!5178 = !DILocation(line: 7597, column: 21, scope: !5177)
!5179 = !DILocation(line: 7598, column: 7, scope: !5177)
!5180 = !DILocation(line: 7600, column: 18, scope: !5149)
!5181 = !DILocation(line: 7601, column: 8, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 7601, column: 7)
!5183 = !DILocation(line: 7601, column: 21, scope: !5182)
!5184 = !DILocation(line: 7601, column: 24, scope: !5182)
!5185 = !DILocation(line: 7601, column: 49, scope: !5182)
!5186 = !DILocation(line: 7601, column: 7, scope: !5149)
!5187 = !DILocation(line: 7603, column: 7, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 7602, column: 5)
!5189 = !DILocation(line: 7604, column: 21, scope: !5188)
!5190 = !DILocation(line: 7605, column: 7, scope: !5188)
!5191 = !DILocation(line: 7612, column: 1, scope: !5149)
!5192 = distinct !DISubprogram(name: "handle_warn_unused_result_attribute", scope: !3, file: !3, line: 7617, type: !2951, scopeLine: 7620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5193)
!5193 = !{!5194, !5195, !5196, !5197, !5198}
!5194 = !DILocalVariable(name: "node", arg: 1, scope: !5192, file: !3, line: 7617, type: !1886)
!5195 = !DILocalVariable(name: "name", arg: 2, scope: !5192, file: !3, line: 7617, type: !1527)
!5196 = !DILocalVariable(name: "args", arg: 3, scope: !5192, file: !3, line: 7618, type: !1527)
!5197 = !DILocalVariable(name: "flags", arg: 4, scope: !5192, file: !3, line: 7619, type: !1520)
!5198 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5192, file: !3, line: 7619, type: !1518)
!5199 = !DILocation(line: 0, scope: !5192)
!5200 = !DILocation(line: 7622, column: 7, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 7622, column: 7)
!5202 = !DILocation(line: 7622, column: 7, scope: !5192)
!5203 = !DILocation(line: 7624, column: 7, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 7623, column: 5)
!5205 = !DILocation(line: 7625, column: 21, scope: !5204)
!5206 = !DILocation(line: 7626, column: 5, scope: !5204)
!5207 = !DILocation(line: 7628, column: 3, scope: !5192)
!5208 = distinct !DISubprogram(name: "handle_sentinel_attribute", scope: !3, file: !3, line: 7634, type: !2951, scopeLine: 7636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5209)
!5209 = !{!5210, !5211, !5212, !5213, !5214, !5215, !5216}
!5210 = !DILocalVariable(name: "node", arg: 1, scope: !5208, file: !3, line: 7634, type: !1886)
!5211 = !DILocalVariable(name: "name", arg: 2, scope: !5208, file: !3, line: 7634, type: !1527)
!5212 = !DILocalVariable(name: "args", arg: 3, scope: !5208, file: !3, line: 7634, type: !1527)
!5213 = !DILocalVariable(name: "flags", arg: 4, scope: !5208, file: !3, line: 7635, type: !1520)
!5214 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5208, file: !3, line: 7635, type: !1518)
!5215 = !DILocalVariable(name: "params", scope: !5208, file: !3, line: 7637, type: !1527)
!5216 = !DILocalVariable(name: "position", scope: !5217, file: !3, line: 7660, type: !1527)
!5217 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 7659, column: 5)
!5218 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 7658, column: 7)
!5219 = !DILocation(line: 0, scope: !5208)
!5220 = !DILocation(line: 7637, column: 17, scope: !5208)
!5221 = !DILocation(line: 7639, column: 8, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 7639, column: 7)
!5223 = !DILocation(line: 7639, column: 7, scope: !5208)
!5224 = !DILocation(line: 7647, column: 7, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 7646, column: 5)
!5226 = !DILocation(line: 7641, column: 7, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 7640, column: 5)
!5228 = !DILocation(line: 7643, column: 21, scope: !5227)
!5229 = !DILocation(line: 7644, column: 5, scope: !5227)
!5230 = !DILocation(line: 7647, column: 14, scope: !5225)
!5231 = distinct !{!5231, !5224, !5232}
!5232 = !DILocation(line: 7648, column: 11, scope: !5225)
!5233 = !DILocation(line: 7650, column: 11, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 7650, column: 11)
!5235 = !DILocation(line: 7650, column: 11, scope: !5225)
!5236 = !DILocation(line: 7652, column: 4, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 7651, column: 2)
!5238 = !DILocation(line: 7654, column: 18, scope: !5237)
!5239 = !DILocation(line: 7655, column: 2, scope: !5237)
!5240 = !DILocation(line: 7658, column: 7, scope: !5218)
!5241 = !DILocation(line: 7658, column: 7, scope: !5208)
!5242 = !DILocation(line: 7660, column: 23, scope: !5217)
!5243 = !DILocation(line: 0, scope: !5217)
!5244 = !DILocation(line: 7662, column: 11, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 7662, column: 11)
!5246 = !DILocation(line: 7662, column: 32, scope: !5245)
!5247 = !DILocation(line: 7662, column: 11, scope: !5217)
!5248 = !DILocation(line: 7664, column: 4, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 7663, column: 2)
!5250 = !DILocation(line: 7666, column: 18, scope: !5249)
!5251 = !DILocation(line: 7667, column: 2, scope: !5249)
!5252 = !DILocation(line: 7670, column: 35, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 7670, column: 8)
!5254 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 7669, column: 2)
!5255 = !DILocation(line: 7670, column: 8, scope: !5253)
!5256 = !DILocation(line: 7670, column: 8, scope: !5254)
!5257 = !DILocation(line: 7672, column: 8, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 7671, column: 6)
!5259 = !DILocation(line: 7674, column: 22, scope: !5258)
!5260 = !DILocation(line: 7675, column: 6, scope: !5258)
!5261 = !DILocation(line: 7679, column: 3, scope: !5208)
!5262 = distinct !DISubprogram(name: "handle_type_generic_attribute", scope: !3, file: !3, line: 7685, type: !2951, scopeLine: 7688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5263)
!5263 = !{!5264, !5265, !5266, !5267, !5268, !5269}
!5264 = !DILocalVariable(name: "node", arg: 1, scope: !5262, file: !3, line: 7685, type: !1886)
!5265 = !DILocalVariable(name: "name", arg: 2, scope: !5262, file: !3, line: 7685, type: !1527)
!5266 = !DILocalVariable(name: "args", arg: 3, scope: !5262, file: !3, line: 7686, type: !1527)
!5267 = !DILocalVariable(name: "flags", arg: 4, scope: !5262, file: !3, line: 7686, type: !1520)
!5268 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5262, file: !3, line: 7687, type: !1518)
!5269 = !DILocalVariable(name: "params", scope: !5262, file: !3, line: 7689, type: !1527)
!5270 = !DILocation(line: 0, scope: !5262)
!5271 = !DILocation(line: 7692, column: 3, scope: !5262)
!5272 = !DILocation(line: 7694, column: 12, scope: !5262)
!5273 = !DILocation(line: 7695, column: 3, scope: !5262)
!5274 = !DILocation(line: 7695, column: 17, scope: !5262)
!5275 = !DILocation(line: 7695, column: 22, scope: !5262)
!5276 = !DILocation(line: 7696, column: 14, scope: !5262)
!5277 = distinct !{!5277, !5273, !5276}
!5278 = !DILocation(line: 7699, column: 3, scope: !5262)
!5279 = !DILocation(line: 7701, column: 3, scope: !5262)
!5280 = distinct !DISubprogram(name: "handle_alloc_size_attribute", scope: !3, file: !3, line: 7093, type: !2951, scopeLine: 7095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5281)
!5281 = !{!5282, !5283, !5284, !5285, !5286, !5287, !5288}
!5282 = !DILocalVariable(name: "node", arg: 1, scope: !5280, file: !3, line: 7093, type: !1886)
!5283 = !DILocalVariable(name: "name", arg: 2, scope: !5280, file: !3, line: 7093, type: !1527)
!5284 = !DILocalVariable(name: "args", arg: 3, scope: !5280, file: !3, line: 7093, type: !1527)
!5285 = !DILocalVariable(name: "flags", arg: 4, scope: !5280, file: !3, line: 7094, type: !1520)
!5286 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5280, file: !3, line: 7094, type: !1518)
!5287 = !DILocalVariable(name: "arg_count", scope: !5280, file: !3, line: 7096, type: !7)
!5288 = !DILocalVariable(name: "position", scope: !5289, file: !3, line: 7099, type: !1527)
!5289 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 7098, column: 5)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 7097, column: 3)
!5291 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 7097, column: 3)
!5292 = !DILocation(line: 0, scope: !5280)
!5293 = !DILocation(line: 7096, column: 44, scope: !5280)
!5294 = !DILocation(line: 7096, column: 24, scope: !5280)
!5295 = !DILocation(line: 0, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 7101, column: 11)
!5297 = !DILocation(line: 7097, column: 3, scope: !5280)
!5298 = !DILocation(line: 7097, column: 3, scope: !5291)
!5299 = !DILocation(line: 7099, column: 23, scope: !5289)
!5300 = !DILocation(line: 0, scope: !5289)
!5301 = !DILocation(line: 7101, column: 11, scope: !5296)
!5302 = !DILocation(line: 7101, column: 32, scope: !5296)
!5303 = !DILocation(line: 7102, column: 4, scope: !5296)
!5304 = !DILocation(line: 7102, column: 7, scope: !5296)
!5305 = !DILocation(line: 7103, column: 4, scope: !5296)
!5306 = !DILocation(line: 7103, column: 7, scope: !5296)
!5307 = !DILocation(line: 7103, column: 35, scope: !5296)
!5308 = !DILocation(line: 7104, column: 4, scope: !5296)
!5309 = !DILocation(line: 7104, column: 35, scope: !5296)
!5310 = !DILocation(line: 7101, column: 11, scope: !5289)
!5311 = !DILocation(line: 7106, column: 4, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 7105, column: 2)
!5313 = !DILocation(line: 7108, column: 18, scope: !5312)
!5314 = !DILocation(line: 7109, column: 4, scope: !5312)
!5315 = !DILocation(line: 7097, column: 23, scope: !5290)
!5316 = !DILocation(line: 7097, column: 3, scope: !5290)
!5317 = distinct !{!5317, !5298, !5318}
!5318 = !DILocation(line: 7111, column: 5, scope: !5291)
!5319 = !DILocation(line: 7113, column: 1, scope: !5280)
!5320 = distinct !DISubprogram(name: "handle_cold_attribute", scope: !3, file: !3, line: 5942, type: !2951, scopeLine: 5944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5321)
!5321 = !{!5322, !5323, !5324, !5325, !5326}
!5322 = !DILocalVariable(name: "node", arg: 1, scope: !5320, file: !3, line: 5942, type: !1886)
!5323 = !DILocalVariable(name: "name", arg: 2, scope: !5320, file: !3, line: 5942, type: !1527)
!5324 = !DILocalVariable(name: "args", arg: 3, scope: !5320, file: !3, line: 5942, type: !1527)
!5325 = !DILocalVariable(name: "flags", arg: 4, scope: !5320, file: !3, line: 5943, type: !1520)
!5326 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5320, file: !3, line: 5943, type: !1518)
!5327 = !DILocation(line: 0, scope: !5320)
!5328 = !DILocation(line: 5945, column: 7, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 5945, column: 7)
!5330 = !DILocation(line: 5945, column: 25, scope: !5329)
!5331 = !DILocation(line: 5945, column: 7, scope: !5320)
!5332 = !DILocation(line: 5947, column: 36, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 5947, column: 11)
!5334 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 5946, column: 5)
!5335 = !DILocation(line: 5947, column: 11, scope: !5333)
!5336 = !DILocation(line: 5947, column: 61, scope: !5333)
!5337 = !DILocation(line: 5947, column: 11, scope: !5334)
!5338 = !DILocation(line: 5949, column: 4, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 5948, column: 2)
!5340 = !DILocation(line: 5951, column: 18, scope: !5339)
!5341 = !DILocation(line: 5952, column: 2, scope: !5339)
!5342 = !DILocation(line: 5958, column: 7, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 5957, column: 5)
!5344 = !DILocation(line: 5959, column: 21, scope: !5343)
!5345 = !DILocation(line: 5962, column: 3, scope: !5320)
!5346 = distinct !DISubprogram(name: "handle_hot_attribute", scope: !3, file: !3, line: 5916, type: !2951, scopeLine: 5918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5347)
!5347 = !{!5348, !5349, !5350, !5351, !5352}
!5348 = !DILocalVariable(name: "node", arg: 1, scope: !5346, file: !3, line: 5916, type: !1886)
!5349 = !DILocalVariable(name: "name", arg: 2, scope: !5346, file: !3, line: 5916, type: !1527)
!5350 = !DILocalVariable(name: "args", arg: 3, scope: !5346, file: !3, line: 5916, type: !1527)
!5351 = !DILocalVariable(name: "flags", arg: 4, scope: !5346, file: !3, line: 5917, type: !1520)
!5352 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5346, file: !3, line: 5917, type: !1518)
!5353 = !DILocation(line: 0, scope: !5346)
!5354 = !DILocation(line: 5919, column: 7, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 5919, column: 7)
!5356 = !DILocation(line: 5919, column: 25, scope: !5355)
!5357 = !DILocation(line: 5919, column: 7, scope: !5346)
!5358 = !DILocation(line: 5921, column: 37, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 5921, column: 11)
!5360 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 5920, column: 5)
!5361 = !DILocation(line: 5921, column: 11, scope: !5359)
!5362 = !DILocation(line: 5921, column: 62, scope: !5359)
!5363 = !DILocation(line: 5921, column: 11, scope: !5360)
!5364 = !DILocation(line: 5923, column: 4, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 5922, column: 2)
!5366 = !DILocation(line: 5925, column: 18, scope: !5365)
!5367 = !DILocation(line: 5926, column: 2, scope: !5365)
!5368 = !DILocation(line: 5932, column: 7, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 5931, column: 5)
!5370 = !DILocation(line: 5933, column: 21, scope: !5369)
!5371 = !DILocation(line: 5936, column: 3, scope: !5346)
!5372 = distinct !DISubprogram(name: "handle_error_attribute", scope: !3, file: !3, line: 6096, type: !2951, scopeLine: 6098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5373)
!5373 = !{!5374, !5375, !5376, !5377, !5378}
!5374 = !DILocalVariable(name: "node", arg: 1, scope: !5372, file: !3, line: 6096, type: !1886)
!5375 = !DILocalVariable(name: "name", arg: 2, scope: !5372, file: !3, line: 6096, type: !1527)
!5376 = !DILocalVariable(name: "args", arg: 3, scope: !5372, file: !3, line: 6096, type: !1527)
!5377 = !DILocalVariable(name: "flags", arg: 4, scope: !5372, file: !3, line: 6097, type: !1520)
!5378 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5372, file: !3, line: 6097, type: !1518)
!5379 = !DILocation(line: 0, scope: !5372)
!5380 = !DILocation(line: 6099, column: 7, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 6099, column: 7)
!5382 = !DILocation(line: 6099, column: 25, scope: !5381)
!5383 = !DILocation(line: 6100, column: 7, scope: !5381)
!5384 = !DILocation(line: 6100, column: 10, scope: !5381)
!5385 = !DILocation(line: 6100, column: 40, scope: !5381)
!5386 = !DILocation(line: 6099, column: 7, scope: !5372)
!5387 = !DILocation(line: 6106, column: 7, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5381, file: !3, line: 6105, column: 5)
!5389 = !DILocation(line: 6107, column: 21, scope: !5388)
!5390 = !DILocation(line: 6110, column: 3, scope: !5372)
!5391 = distinct !DISubprogram(name: "handle_target_attribute", scope: !3, file: !3, line: 7707, type: !2951, scopeLine: 7709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5392)
!5392 = !{!5393, !5394, !5395, !5396, !5397}
!5393 = !DILocalVariable(name: "node", arg: 1, scope: !5391, file: !3, line: 7707, type: !1886)
!5394 = !DILocalVariable(name: "name", arg: 2, scope: !5391, file: !3, line: 7707, type: !1527)
!5395 = !DILocalVariable(name: "args", arg: 3, scope: !5391, file: !3, line: 7707, type: !1527)
!5396 = !DILocalVariable(name: "flags", arg: 4, scope: !5391, file: !3, line: 7707, type: !1520)
!5397 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5391, file: !3, line: 7708, type: !1518)
!5398 = !DILocation(line: 0, scope: !5391)
!5399 = !DILocation(line: 7711, column: 7, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 7711, column: 7)
!5401 = !DILocation(line: 7711, column: 25, scope: !5400)
!5402 = !DILocation(line: 7711, column: 7, scope: !5391)
!5403 = !DILocation(line: 7713, column: 7, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 7712, column: 5)
!5405 = !DILocation(line: 7714, column: 21, scope: !5404)
!5406 = !DILocation(line: 7715, column: 5, scope: !5404)
!5407 = !DILocation(line: 7716, column: 36, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 7716, column: 12)
!5409 = !DILocation(line: 7716, column: 14, scope: !5408)
!5410 = !DILocation(line: 7716, column: 12, scope: !5400)
!5411 = !DILocation(line: 7718, column: 19, scope: !5408)
!5412 = !DILocation(line: 7718, column: 5, scope: !5408)
!5413 = !DILocation(line: 7720, column: 3, scope: !5391)
!5414 = distinct !DISubprogram(name: "handle_optimize_attribute", scope: !3, file: !3, line: 7849, type: !2951, scopeLine: 7851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5415)
!5415 = !{!5416, !5417, !5418, !5419, !5420, !5421, !5424}
!5416 = !DILocalVariable(name: "node", arg: 1, scope: !5414, file: !3, line: 7849, type: !1886)
!5417 = !DILocalVariable(name: "name", arg: 2, scope: !5414, file: !3, line: 7849, type: !1527)
!5418 = !DILocalVariable(name: "args", arg: 3, scope: !5414, file: !3, line: 7849, type: !1527)
!5419 = !DILocalVariable(name: "flags", arg: 4, scope: !5414, file: !3, line: 7850, type: !1520)
!5420 = !DILocalVariable(name: "no_add_attrs", arg: 5, scope: !5414, file: !3, line: 7850, type: !1518)
!5421 = !DILocalVariable(name: "cur_opts", scope: !5422, file: !3, line: 7860, type: !2606)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 7859, column: 5)
!5423 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 7853, column: 7)
!5424 = !DILocalVariable(name: "old_opts", scope: !5422, file: !3, line: 7861, type: !1527)
!5425 = !DILocation(line: 0, scope: !5414)
!5426 = !DILocation(line: 7853, column: 7, scope: !5423)
!5427 = !DILocation(line: 7853, column: 25, scope: !5423)
!5428 = !DILocation(line: 7853, column: 7, scope: !5414)
!5429 = !DILocation(line: 7855, column: 7, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 7854, column: 5)
!5431 = !DILocation(line: 7856, column: 21, scope: !5430)
!5432 = !DILocation(line: 7857, column: 5, scope: !5430)
!5433 = !DILocation(line: 7860, column: 7, scope: !5422)
!5434 = !DILocation(line: 7861, column: 23, scope: !5422)
!5435 = !DILocation(line: 0, scope: !5422)
!5436 = !DILocation(line: 7864, column: 7, scope: !5422)
!5437 = !DILocation(line: 7868, column: 11, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 7868, column: 11)
!5439 = !DILocation(line: 7868, column: 11, scope: !5422)
!5440 = !DILocation(line: 7869, column: 27, scope: !5438)
!5441 = !DILocation(line: 7869, column: 2, scope: !5438)
!5442 = !DILocation(line: 7872, column: 7, scope: !5422)
!5443 = !DILocation(line: 7874, column: 4, scope: !5422)
!5444 = !DILocation(line: 7873, column: 7, scope: !5422)
!5445 = !DILocation(line: 7874, column: 2, scope: !5422)
!5446 = !DILocation(line: 7877, column: 7, scope: !5422)
!5447 = !DILocation(line: 7878, column: 5, scope: !5423)
!5448 = !DILocation(line: 7880, column: 3, scope: !5414)
!5449 = distinct !DISubprogram(name: "c_addr_space_name", scope: !3, file: !3, line: 850, type: !5450, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5452)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{!1525, !4048}
!5452 = !{!5453, !5454}
!5453 = !DILocalVariable(name: "as", arg: 1, scope: !5449, file: !3, line: 850, type: !4048)
!5454 = !DILocalVariable(name: "i", scope: !5449, file: !3, line: 852, type: !7)
!5455 = !DILocation(line: 0, scope: !5449)
!5456 = !DILocation(line: 0, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 855, column: 9)
!5458 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 854, column: 3)
!5459 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 854, column: 3)
!5460 = !DILocation(line: 854, column: 8, scope: !5459)
!5461 = !DILocation(line: 0, scope: !5459)
!5462 = !DILocation(line: 854, column: 17, scope: !5458)
!5463 = !DILocation(line: 854, column: 3, scope: !5459)
!5464 = !DILocation(line: 855, column: 30, scope: !5457)
!5465 = !DILocation(line: 855, column: 34, scope: !5457)
!5466 = !DILocation(line: 855, column: 9, scope: !5458)
!5467 = !DILocation(line: 855, column: 9, scope: !5457)
!5468 = !DILocation(line: 856, column: 35, scope: !5457)
!5469 = !DILocation(line: 856, column: 7, scope: !5457)
!5470 = !DILocation(line: 854, column: 43, scope: !5458)
!5471 = !DILocation(line: 854, column: 3, scope: !5458)
!5472 = distinct !{!5472, !5463, !5473}
!5473 = !DILocation(line: 856, column: 35, scope: !5459)
!5474 = !DILocation(line: 858, column: 3, scope: !5449)
!5475 = !DILocation(line: 860, column: 5, scope: !5449)
!5476 = !DILocation(line: 862, column: 1, scope: !5449)
!5477 = distinct !DISubprogram(name: "start_fname_decls", scope: !3, file: !3, line: 867, type: !5478, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5480)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{null}
!5480 = !{!5481, !5482, !5483}
!5481 = !DILocalVariable(name: "ix", scope: !5477, file: !3, line: 869, type: !7)
!5482 = !DILocalVariable(name: "saved", scope: !5477, file: !3, line: 870, type: !1527)
!5483 = !DILocalVariable(name: "decl", scope: !5484, file: !3, line: 874, type: !1527)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 873, column: 5)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 872, column: 3)
!5486 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 872, column: 3)
!5487 = !DILocation(line: 0, scope: !5477)
!5488 = !DILocation(line: 872, column: 8, scope: !5486)
!5489 = !DILocation(line: 0, scope: !5486)
!5490 = !DILocation(line: 872, column: 16, scope: !5485)
!5491 = !DILocation(line: 872, column: 31, scope: !5485)
!5492 = !DILocation(line: 872, column: 3, scope: !5486)
!5493 = !DILocation(line: 874, column: 19, scope: !5484)
!5494 = !DILocation(line: 0, scope: !5484)
!5495 = !DILocation(line: 876, column: 11, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 876, column: 11)
!5497 = !DILocation(line: 876, column: 11, scope: !5484)
!5498 = !DILocation(line: 878, column: 12, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 877, column: 2)
!5500 = !DILocation(line: 879, column: 25, scope: !5499)
!5501 = !DILocation(line: 880, column: 2, scope: !5499)
!5502 = !DILocation(line: 872, column: 39, scope: !5485)
!5503 = !DILocation(line: 872, column: 3, scope: !5485)
!5504 = distinct !{!5504, !5492, !5505}
!5505 = !DILocation(line: 881, column: 5, scope: !5486)
!5506 = !DILocation(line: 882, column: 7, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 882, column: 7)
!5508 = !DILocation(line: 882, column: 16, scope: !5507)
!5509 = !DILocation(line: 882, column: 13, scope: !5507)
!5510 = !DILocation(line: 885, column: 33, scope: !5507)
!5511 = !DILocation(line: 885, column: 31, scope: !5507)
!5512 = !DILocation(line: 885, column: 5, scope: !5507)
!5513 = !DILocation(line: 887, column: 1, scope: !5477)
!5514 = distinct !DISubprogram(name: "finish_fname_decls", scope: !3, file: !3, line: 895, type: !5478, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5515)
!5515 = !{!5516, !5517, !5518, !5519, !5522, !5525, !5529}
!5516 = !DILocalVariable(name: "ix", scope: !5514, file: !3, line: 897, type: !7)
!5517 = !DILocalVariable(name: "stmts", scope: !5514, file: !3, line: 898, type: !1527)
!5518 = !DILocalVariable(name: "stack", scope: !5514, file: !3, line: 899, type: !1527)
!5519 = !DILocalVariable(name: "bodyp", scope: !5520, file: !3, line: 906, type: !1886)
!5520 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 905, column: 5)
!5521 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 904, column: 7)
!5522 = !DILocalVariable(name: "saved", scope: !5523, file: !3, line: 921, type: !1527)
!5523 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 919, column: 5)
!5524 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 918, column: 7)
!5525 = !DILocalVariable(name: "decl", scope: !5526, file: !3, line: 925, type: !1527)
!5526 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 924, column: 2)
!5527 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 923, column: 7)
!5528 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 923, column: 7)
!5529 = !DILocalVariable(name: "ix", scope: !5526, file: !3, line: 926, type: !7)
!5530 = !DILocation(line: 898, column: 3, scope: !5514)
!5531 = !DILocation(line: 0, scope: !5514)
!5532 = !DILocation(line: 898, column: 8, scope: !5514)
!5533 = !DILocation(line: 901, column: 3, scope: !5514)
!5534 = !DILocation(line: 901, column: 10, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 901, column: 3)
!5536 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 901, column: 3)
!5537 = !DILocation(line: 901, column: 16, scope: !5535)
!5538 = !DILocation(line: 901, column: 19, scope: !5535)
!5539 = !DILocation(line: 901, column: 3, scope: !5536)
!5540 = !DILocation(line: 902, column: 5, scope: !5535)
!5541 = !DILocation(line: 901, column: 47, scope: !5535)
!5542 = !DILocation(line: 901, column: 3, scope: !5535)
!5543 = distinct !{!5543, !5539, !5544}
!5544 = !DILocation(line: 902, column: 57, scope: !5536)
!5545 = !DILocation(line: 904, column: 7, scope: !5521)
!5546 = !DILocation(line: 904, column: 7, scope: !5514)
!5547 = !DILocation(line: 906, column: 22, scope: !5520)
!5548 = !DILocation(line: 0, scope: !5520)
!5549 = !DILocation(line: 908, column: 11, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 908, column: 11)
!5551 = !DILocation(line: 908, column: 30, scope: !5550)
!5552 = !DILocation(line: 908, column: 11, scope: !5520)
!5553 = !DILocation(line: 909, column: 11, scope: !5550)
!5554 = !DILocation(line: 911, column: 39, scope: !5520)
!5555 = !DILocation(line: 909, column: 2, scope: !5550)
!5556 = !DILocation(line: 911, column: 7, scope: !5520)
!5557 = !DILocation(line: 912, column: 16, scope: !5520)
!5558 = !DILocation(line: 912, column: 14, scope: !5520)
!5559 = !DILocation(line: 913, column: 5, scope: !5520)
!5560 = !DILocation(line: 915, column: 8, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 915, column: 3)
!5562 = !DILocation(line: 0, scope: !5561)
!5563 = !DILocation(line: 915, column: 16, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 915, column: 3)
!5565 = !DILocation(line: 915, column: 31, scope: !5564)
!5566 = !DILocation(line: 915, column: 3, scope: !5561)
!5567 = !DILocation(line: 916, column: 26, scope: !5564)
!5568 = !DILocation(line: 915, column: 39, scope: !5564)
!5569 = !DILocation(line: 915, column: 3, scope: !5564)
!5570 = distinct !{!5570, !5566, !5571}
!5571 = !DILocation(line: 916, column: 28, scope: !5561)
!5572 = !DILocation(line: 918, column: 7, scope: !5514)
!5573 = !DILocation(line: 923, column: 20, scope: !5528)
!5574 = !DILocation(line: 923, column: 12, scope: !5528)
!5575 = !DILocation(line: 0, scope: !5528)
!5576 = !DILocation(line: 0, scope: !5523)
!5577 = !DILocation(line: 923, column: 7, scope: !5528)
!5578 = !DILocation(line: 925, column: 16, scope: !5526)
!5579 = !DILocation(line: 926, column: 18, scope: !5526)
!5580 = !DILocation(line: 928, column: 5, scope: !5526)
!5581 = !DILocation(line: 0, scope: !5526)
!5582 = !DILocation(line: 928, column: 20, scope: !5526)
!5583 = !DILocation(line: 928, column: 25, scope: !5526)
!5584 = !DILocation(line: 923, column: 57, scope: !5527)
!5585 = !DILocation(line: 923, column: 7, scope: !5527)
!5586 = distinct !{!5586, !5577, !5587}
!5587 = !DILocation(line: 929, column: 2, scope: !5528)
!5588 = !DILocation(line: 930, column: 15, scope: !5523)
!5589 = !DILocation(line: 931, column: 5, scope: !5523)
!5590 = !DILocation(line: 932, column: 29, scope: !5514)
!5591 = !DILocation(line: 933, column: 1, scope: !5514)
!5592 = distinct !DISubprogram(name: "fname_as_string", scope: !3, file: !3, line: 939, type: !5593, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5595)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{!1525, !1520}
!5595 = !{!5596, !5597, !5598, !5599, !5600, !5601, !5607}
!5596 = !DILocalVariable(name: "pretty_p", arg: 1, scope: !5592, file: !3, line: 939, type: !1520)
!5597 = !DILocalVariable(name: "name", scope: !5592, file: !3, line: 941, type: !1525)
!5598 = !DILocalVariable(name: "namep", scope: !5592, file: !3, line: 942, type: !1522)
!5599 = !DILocalVariable(name: "vrb", scope: !5592, file: !3, line: 943, type: !1520)
!5600 = !DILocalVariable(name: "len", scope: !5592, file: !3, line: 943, type: !1520)
!5601 = !DILocalVariable(name: "cstr", scope: !5592, file: !3, line: 944, type: !5602)
!5602 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpp_string", file: !405, line: 35, baseType: !5603)
!5603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpp_string", file: !405, line: 162, size: 128, elements: !5604)
!5604 = !{!5605, !5606}
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5603, file: !405, line: 163, baseType: !7, size: 32)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !5603, file: !405, line: 164, baseType: !1642, size: 64, offset: 64)
!5607 = !DILocalVariable(name: "strname", scope: !5592, file: !3, line: 944, type: !5602)
!5608 = !DILocation(line: 0, scope: !5592)
!5609 = !DILocation(line: 944, column: 3, scope: !5592)
!5610 = !DILocation(line: 944, column: 14, scope: !5592)
!5611 = !DILocation(line: 946, column: 8, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 946, column: 7)
!5613 = !DILocation(line: 946, column: 7, scope: !5592)
!5614 = !DILocation(line: 952, column: 7, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 952, column: 7)
!5616 = !DILocation(line: 952, column: 7, scope: !5592)
!5617 = !DILocation(line: 953, column: 23, scope: !5615)
!5618 = !DILocation(line: 953, column: 12, scope: !5615)
!5619 = !DILocation(line: 953, column: 5, scope: !5615)
!5620 = !DILocation(line: 955, column: 9, scope: !5592)
!5621 = !DILocation(line: 957, column: 11, scope: !5592)
!5622 = !DILocation(line: 958, column: 3, scope: !5592)
!5623 = !DILocation(line: 959, column: 11, scope: !5592)
!5624 = !DILocation(line: 959, column: 16, scope: !5592)
!5625 = !DILocation(line: 960, column: 21, scope: !5592)
!5626 = !DILocation(line: 960, column: 11, scope: !5592)
!5627 = !DILocation(line: 960, column: 15, scope: !5592)
!5628 = !DILocation(line: 962, column: 29, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 962, column: 7)
!5630 = !DILocation(line: 962, column: 7, scope: !5629)
!5631 = !DILocation(line: 962, column: 7, scope: !5592)
!5632 = !DILocation(line: 964, column: 7, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 963, column: 5)
!5634 = !DILocation(line: 965, column: 34, scope: !5633)
!5635 = !DILocation(line: 965, column: 7, scope: !5633)
!5636 = !DILocation(line: 969, column: 1, scope: !5592)
!5637 = distinct !DISubprogram(name: "fname_decl", scope: !3, file: !3, line: 980, type: !5638, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5640)
!5638 = !DISubroutineType(types: !5639)
!5639 = !{!1527, !1651, !7, !1527}
!5640 = !{!5641, !5642, !5643, !5644, !5645, !5646, !5649}
!5641 = !DILocalVariable(name: "loc", arg: 1, scope: !5637, file: !3, line: 980, type: !1651)
!5642 = !DILocalVariable(name: "rid", arg: 2, scope: !5637, file: !3, line: 980, type: !7)
!5643 = !DILocalVariable(name: "id", arg: 3, scope: !5637, file: !3, line: 980, type: !1527)
!5644 = !DILocalVariable(name: "ix", scope: !5637, file: !3, line: 982, type: !7)
!5645 = !DILocalVariable(name: "decl", scope: !5637, file: !3, line: 983, type: !1527)
!5646 = !DILocalVariable(name: "stmts", scope: !5647, file: !3, line: 997, type: !1527)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 991, column: 5)
!5648 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 990, column: 7)
!5649 = !DILocalVariable(name: "saved_location", scope: !5647, file: !3, line: 998, type: !1651)
!5650 = !DILocation(line: 0, scope: !5637)
!5651 = !DILocation(line: 985, column: 8, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 985, column: 3)
!5653 = !DILocation(line: 0, scope: !5652)
!5654 = !DILocation(line: 985, column: 16, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 985, column: 3)
!5656 = !DILocation(line: 985, column: 31, scope: !5655)
!5657 = !DILocation(line: 985, column: 3, scope: !5652)
!5658 = !DILocation(line: 986, column: 24, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 986, column: 9)
!5660 = !DILocation(line: 986, column: 28, scope: !5659)
!5661 = !DILocation(line: 986, column: 9, scope: !5655)
!5662 = !DILocation(line: 985, column: 39, scope: !5655)
!5663 = !DILocation(line: 985, column: 3, scope: !5655)
!5664 = distinct !{!5664, !5657, !5665}
!5665 = !DILocation(line: 987, column: 7, scope: !5652)
!5666 = !DILocation(line: 989, column: 10, scope: !5637)
!5667 = !DILocation(line: 990, column: 8, scope: !5648)
!5668 = !DILocation(line: 990, column: 7, scope: !5637)
!5669 = !DILocation(line: 998, column: 35, scope: !5647)
!5670 = !DILocation(line: 0, scope: !5647)
!5671 = !DILocation(line: 999, column: 22, scope: !5647)
!5672 = !DILocation(line: 1001, column: 15, scope: !5647)
!5673 = !DILocation(line: 1002, column: 16, scope: !5647)
!5674 = !DILocation(line: 1002, column: 58, scope: !5647)
!5675 = !DILocation(line: 1002, column: 14, scope: !5647)
!5676 = !DILocation(line: 1003, column: 15, scope: !5647)
!5677 = !DILocation(line: 1004, column: 12, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1004, column: 11)
!5679 = !DILocation(line: 1004, column: 11, scope: !5647)
!5680 = !DILocation(line: 1006, column: 6, scope: !5678)
!5681 = !DILocation(line: 1006, column: 4, scope: !5678)
!5682 = !DILocation(line: 1005, column: 2, scope: !5678)
!5683 = !DILocation(line: 1007, column: 28, scope: !5647)
!5684 = !DILocation(line: 1008, column: 22, scope: !5647)
!5685 = !DILocation(line: 1009, column: 5, scope: !5647)
!5686 = !DILocation(line: 1010, column: 8, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 1010, column: 7)
!5688 = !DILocation(line: 1010, column: 15, scope: !5687)
!5689 = !DILocation(line: 1010, column: 11, scope: !5687)
!5690 = !DILocation(line: 1011, column: 5, scope: !5687)
!5691 = !DILocation(line: 1013, column: 3, scope: !5637)
!5692 = distinct !DISubprogram(name: "fix_string_type", scope: !3, file: !3, line: 1019, type: !5693, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5695)
!5693 = !DISubroutineType(types: !5694)
!5694 = !{!1527, !1527}
!5695 = !{!5696, !5697, !5698, !5699, !5700, !5701, !5702, !5705}
!5696 = !DILocalVariable(name: "value", arg: 1, scope: !5692, file: !3, line: 1019, type: !1527)
!5697 = !DILocalVariable(name: "length", scope: !5692, file: !3, line: 1021, type: !1520)
!5698 = !DILocalVariable(name: "nchars", scope: !5692, file: !3, line: 1022, type: !1520)
!5699 = !DILocalVariable(name: "e_type", scope: !5692, file: !3, line: 1023, type: !1527)
!5700 = !DILocalVariable(name: "i_type", scope: !5692, file: !3, line: 1023, type: !1527)
!5701 = !DILocalVariable(name: "a_type", scope: !5692, file: !3, line: 1023, type: !1527)
!5702 = !DILocalVariable(name: "nchars_max", scope: !5703, file: !3, line: 1053, type: !2921)
!5703 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1052, column: 5)
!5704 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 1051, column: 7)
!5705 = !DILocalVariable(name: "relevant_std", scope: !5703, file: !3, line: 1054, type: !2921)
!5706 = !DILocation(line: 0, scope: !5692)
!5707 = !DILocation(line: 1021, column: 16, scope: !5692)
!5708 = !DILocation(line: 1026, column: 7, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 1026, column: 7)
!5710 = !DILocation(line: 1026, column: 28, scope: !5709)
!5711 = !DILocation(line: 1026, column: 25, scope: !5709)
!5712 = !DILocation(line: 1026, column: 49, scope: !5709)
!5713 = !DILocation(line: 1026, column: 53, scope: !5709)
!5714 = !DILocation(line: 1026, column: 7, scope: !5692)
!5715 = !DILocation(line: 0, scope: !5709)
!5716 = !DILocation(line: 1030, column: 5, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 1027, column: 5)
!5718 = !DILocation(line: 1031, column: 33, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 1031, column: 12)
!5720 = !DILocation(line: 1031, column: 30, scope: !5719)
!5721 = !DILocation(line: 1031, column: 12, scope: !5709)
!5722 = !DILocation(line: 1033, column: 26, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 1032, column: 5)
!5724 = !DILocation(line: 1033, column: 60, scope: !5723)
!5725 = !DILocation(line: 1033, column: 23, scope: !5723)
!5726 = !DILocation(line: 1035, column: 5, scope: !5723)
!5727 = !DILocation(line: 1036, column: 33, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 1036, column: 12)
!5729 = !DILocation(line: 1036, column: 30, scope: !5728)
!5730 = !DILocation(line: 1036, column: 12, scope: !5719)
!5731 = !DILocation(line: 1038, column: 26, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 1037, column: 5)
!5733 = !DILocation(line: 1038, column: 60, scope: !5732)
!5734 = !DILocation(line: 1038, column: 23, scope: !5732)
!5735 = !DILocation(line: 1040, column: 5, scope: !5732)
!5736 = !DILocation(line: 1043, column: 26, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 1042, column: 5)
!5738 = !DILocation(line: 1043, column: 59, scope: !5737)
!5739 = !DILocation(line: 1043, column: 23, scope: !5737)
!5740 = !DILocation(line: 1051, column: 7, scope: !5704)
!5741 = !DILocation(line: 1051, column: 7, scope: !5692)
!5742 = !DILocation(line: 1081, column: 63, scope: !5692)
!5743 = !DILocation(line: 1053, column: 30, scope: !5703)
!5744 = !DILocation(line: 0, scope: !5703)
!5745 = !DILocation(line: 1055, column: 18, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1055, column: 11)
!5747 = !DILocation(line: 1055, column: 22, scope: !5746)
!5748 = !DILocation(line: 1055, column: 11, scope: !5703)
!5749 = !DILocation(line: 1054, column: 32, scope: !5703)
!5750 = !DILocation(line: 1060, column: 11, scope: !5746)
!5751 = !DILocation(line: 1060, column: 2, scope: !5746)
!5752 = !DILocation(line: 1081, column: 56, scope: !5692)
!5753 = !DILocation(line: 1081, column: 30, scope: !5692)
!5754 = !DILocation(line: 1081, column: 12, scope: !5692)
!5755 = !DILocation(line: 1082, column: 12, scope: !5692)
!5756 = !DILocation(line: 1083, column: 7, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 1083, column: 7)
!5758 = !DILocation(line: 1083, column: 26, scope: !5757)
!5759 = !DILocation(line: 1083, column: 23, scope: !5757)
!5760 = !DILocation(line: 1084, column: 14, scope: !5757)
!5761 = !DILocation(line: 1084, column: 5, scope: !5757)
!5762 = !DILocation(line: 1086, column: 21, scope: !5692)
!5763 = !DILocation(line: 1087, column: 3, scope: !5692)
!5764 = !DILocation(line: 1087, column: 25, scope: !5692)
!5765 = !DILocation(line: 1089, column: 23, scope: !5692)
!5766 = !DILocation(line: 1090, column: 3, scope: !5692)
!5767 = distinct !DISubprogram(name: "c_fully_fold", scope: !3, file: !3, line: 1109, type: !5768, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5770)
!5768 = !DISubroutineType(types: !5769)
!5769 = !{!1527, !1527, !1519, !1518}
!5770 = !{!5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778}
!5771 = !DILocalVariable(name: "expr", arg: 1, scope: !5767, file: !3, line: 1109, type: !1527)
!5772 = !DILocalVariable(name: "in_init", arg: 2, scope: !5767, file: !3, line: 1109, type: !1519)
!5773 = !DILocalVariable(name: "maybe_const", arg: 3, scope: !5767, file: !3, line: 1109, type: !1518)
!5774 = !DILocalVariable(name: "ret", scope: !5767, file: !3, line: 1111, type: !1527)
!5775 = !DILocalVariable(name: "eptype", scope: !5767, file: !3, line: 1112, type: !1527)
!5776 = !DILocalVariable(name: "dummy", scope: !5767, file: !3, line: 1113, type: !1519)
!5777 = !DILocalVariable(name: "maybe_const_itself", scope: !5767, file: !3, line: 1114, type: !1519)
!5778 = !DILocalVariable(name: "loc", scope: !5767, file: !3, line: 1115, type: !1651)
!5779 = !DILocation(line: 0, scope: !5767)
!5780 = !DILocation(line: 1113, column: 3, scope: !5767)
!5781 = !DILocation(line: 1113, column: 8, scope: !5767)
!5782 = !DILocation(line: 1114, column: 3, scope: !5767)
!5783 = !DILocation(line: 1114, column: 8, scope: !5767)
!5784 = !DILocation(line: 1115, column: 20, scope: !5767)
!5785 = !DILocation(line: 1120, column: 7, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 1120, column: 7)
!5787 = !DILocation(line: 1120, column: 7, scope: !5767)
!5788 = !DILocation(line: 1121, column: 5, scope: !5786)
!5789 = !DILocation(line: 1125, column: 7, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 1125, column: 7)
!5791 = !DILocation(line: 1123, column: 8, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 1123, column: 7)
!5793 = !DILocation(line: 1123, column: 7, scope: !5767)
!5794 = !DILocation(line: 1125, column: 24, scope: !5790)
!5795 = !DILocation(line: 1125, column: 7, scope: !5767)
!5796 = !DILocation(line: 1127, column: 16, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 1126, column: 5)
!5798 = !DILocation(line: 1128, column: 14, scope: !5797)
!5799 = !DILocation(line: 1129, column: 5, scope: !5797)
!5800 = !DILocation(line: 1130, column: 9, scope: !5767)
!5801 = !DILocation(line: 1132, column: 7, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 1132, column: 7)
!5803 = !DILocation(line: 1132, column: 7, scope: !5767)
!5804 = !DILocation(line: 1133, column: 11, scope: !5802)
!5805 = !DILocation(line: 1133, column: 5, scope: !5802)
!5806 = !DILocation(line: 1134, column: 19, scope: !5767)
!5807 = !DILocation(line: 1134, column: 16, scope: !5767)
!5808 = !DILocation(line: 1136, column: 1, scope: !5767)
!5809 = !DILocation(line: 1135, column: 3, scope: !5767)
!5810 = distinct !DISubprogram(name: "c_fully_fold_internal", scope: !3, file: !3, line: 1147, type: !5811, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5813)
!5811 = !DISubroutineType(types: !5812)
!5812 = !{!1527, !1527, !1519, !1518, !1518}
!5813 = !{!5814, !5815, !5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836, !5837, !5840, !5841}
!5814 = !DILocalVariable(name: "expr", arg: 1, scope: !5810, file: !3, line: 1147, type: !1527)
!5815 = !DILocalVariable(name: "in_init", arg: 2, scope: !5810, file: !3, line: 1147, type: !1519)
!5816 = !DILocalVariable(name: "maybe_const_operands", arg: 3, scope: !5810, file: !3, line: 1147, type: !1518)
!5817 = !DILocalVariable(name: "maybe_const_itself", arg: 4, scope: !5810, file: !3, line: 1148, type: !1518)
!5818 = !DILocalVariable(name: "ret", scope: !5810, file: !3, line: 1150, type: !1527)
!5819 = !DILocalVariable(name: "code", scope: !5810, file: !3, line: 1151, type: !139)
!5820 = !DILocalVariable(name: "kind", scope: !5810, file: !3, line: 1152, type: !1228)
!5821 = !DILocalVariable(name: "loc", scope: !5810, file: !3, line: 1153, type: !1651)
!5822 = !DILocalVariable(name: "op0", scope: !5810, file: !3, line: 1154, type: !1527)
!5823 = !DILocalVariable(name: "op1", scope: !5810, file: !3, line: 1154, type: !1527)
!5824 = !DILocalVariable(name: "op2", scope: !5810, file: !3, line: 1154, type: !1527)
!5825 = !DILocalVariable(name: "op3", scope: !5810, file: !3, line: 1154, type: !1527)
!5826 = !DILocalVariable(name: "orig_op0", scope: !5810, file: !3, line: 1155, type: !1527)
!5827 = !DILocalVariable(name: "orig_op1", scope: !5810, file: !3, line: 1155, type: !1527)
!5828 = !DILocalVariable(name: "orig_op2", scope: !5810, file: !3, line: 1155, type: !1527)
!5829 = !DILocalVariable(name: "op0_const", scope: !5810, file: !3, line: 1156, type: !1519)
!5830 = !DILocalVariable(name: "op1_const", scope: !5810, file: !3, line: 1156, type: !1519)
!5831 = !DILocalVariable(name: "op2_const", scope: !5810, file: !3, line: 1156, type: !1519)
!5832 = !DILocalVariable(name: "op0_const_self", scope: !5810, file: !3, line: 1157, type: !1519)
!5833 = !DILocalVariable(name: "op1_const_self", scope: !5810, file: !3, line: 1157, type: !1519)
!5834 = !DILocalVariable(name: "op2_const_self", scope: !5810, file: !3, line: 1157, type: !1519)
!5835 = !DILocalVariable(name: "nowarning", scope: !5810, file: !3, line: 1158, type: !1519)
!5836 = !DILocalVariable(name: "unused_p", scope: !5810, file: !3, line: 1159, type: !1520)
!5837 = !DILocalVariable(name: "pre", scope: !5838, file: !3, line: 1187, type: !1527)
!5838 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 1186, column: 5)
!5839 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1185, column: 7)
!5840 = !DILocalVariable(name: "inner", scope: !5838, file: !3, line: 1188, type: !1527)
!5841 = !DILabel(scope: !5810, name: "out", file: !3, line: 1493)
!5842 = !DILocation(line: 0, scope: !5810)
!5843 = !DILocation(line: 1151, column: 25, scope: !5810)
!5844 = !DILocation(line: 1152, column: 31, scope: !5810)
!5845 = !DILocation(line: 1153, column: 20, scope: !5810)
!5846 = !DILocation(line: 1156, column: 3, scope: !5810)
!5847 = !DILocation(line: 1156, column: 8, scope: !5810)
!5848 = !DILocation(line: 1156, column: 26, scope: !5810)
!5849 = !DILocation(line: 1156, column: 44, scope: !5810)
!5850 = !DILocation(line: 1157, column: 3, scope: !5810)
!5851 = !DILocation(line: 1157, column: 8, scope: !5810)
!5852 = !DILocation(line: 1157, column: 31, scope: !5810)
!5853 = !DILocation(line: 1157, column: 54, scope: !5810)
!5854 = !DILocation(line: 1164, column: 7, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1164, column: 7)
!5856 = !DILocation(line: 1164, column: 7, scope: !5810)
!5857 = !DILocation(line: 1165, column: 5, scope: !5855)
!5858 = !DILocation(line: 1170, column: 8, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1170, column: 7)
!5860 = !DILocation(line: 1171, column: 15, scope: !5859)
!5861 = !DILocation(line: 1172, column: 15, scope: !5859)
!5862 = !DILocation(line: 1178, column: 12, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1178, column: 7)
!5864 = !DILocation(line: 1178, column: 7, scope: !5810)
!5865 = !DILocation(line: 1180, column: 29, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 1179, column: 5)
!5867 = !DILocation(line: 1181, column: 13, scope: !5866)
!5868 = !DILocation(line: 1182, column: 7, scope: !5866)
!5869 = !DILocation(line: 1185, column: 7, scope: !5810)
!5870 = !DILocation(line: 1187, column: 18, scope: !5838)
!5871 = !DILocation(line: 0, scope: !5838)
!5872 = !DILocation(line: 1188, column: 20, scope: !5838)
!5873 = !DILocation(line: 1189, column: 11, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1189, column: 11)
!5875 = !DILocation(line: 1189, column: 11, scope: !5838)
!5876 = !DILocation(line: 1190, column: 24, scope: !5874)
!5877 = !DILocation(line: 1191, column: 11, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1191, column: 11)
!5879 = !DILocation(line: 1190, column: 2, scope: !5874)
!5880 = !DILocation(line: 1191, column: 11, scope: !5838)
!5881 = !DILocation(line: 1192, column: 22, scope: !5878)
!5882 = !DILocation(line: 1192, column: 2, scope: !5878)
!5883 = !DILocation(line: 1193, column: 11, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1193, column: 11)
!5885 = !DILocation(line: 1193, column: 19, scope: !5884)
!5886 = !DILocation(line: 1193, column: 15, scope: !5884)
!5887 = !DILocation(line: 1194, column: 8, scope: !5884)
!5888 = !DILocation(line: 1194, column: 2, scope: !5884)
!5889 = !DILocation(line: 1214, column: 29, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1207, column: 5)
!5891 = !DILocation(line: 1215, column: 7, scope: !5890)
!5892 = !DILocation(line: 1221, column: 29, scope: !5890)
!5893 = !DILocation(line: 1222, column: 13, scope: !5890)
!5894 = !DILocation(line: 1223, column: 7, scope: !5890)
!5895 = !DILocation(line: 1230, column: 3, scope: !5810)
!5896 = !DILocation(line: 1238, column: 24, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1231, column: 5)
!5898 = !DILocation(line: 1239, column: 13, scope: !5897)
!5899 = !DILocation(line: 1240, column: 13, scope: !5897)
!5900 = !DILocation(line: 1241, column: 13, scope: !5897)
!5901 = !DILocation(line: 0, scope: !5897)
!5902 = !DILocation(line: 1243, column: 7, scope: !5897)
!5903 = distinct !{!5903, !5902, !5902}
!5904 = !DILocation(line: 1244, column: 15, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1244, column: 11)
!5906 = !DILocation(line: 1244, column: 11, scope: !5897)
!5907 = !DILocation(line: 1245, column: 8, scope: !5905)
!5908 = !DILocation(line: 1245, column: 2, scope: !5905)
!5909 = !DILocation(line: 1246, column: 15, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1246, column: 11)
!5911 = !DILocation(line: 1246, column: 11, scope: !5897)
!5912 = !DILocation(line: 1248, column: 26, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 1247, column: 2)
!5914 = !DILocation(line: 1248, column: 4, scope: !5913)
!5915 = !DILocation(line: 1248, column: 24, scope: !5913)
!5916 = !DILocation(line: 1249, column: 31, scope: !5913)
!5917 = !DILocation(line: 1249, column: 29, scope: !5913)
!5918 = !DILocation(line: 1250, column: 2, scope: !5913)
!5919 = !DILocation(line: 1254, column: 24, scope: !5897)
!5920 = !DILocation(line: 1255, column: 24, scope: !5897)
!5921 = !DILocation(line: 1256, column: 13, scope: !5897)
!5922 = !DILocation(line: 1257, column: 13, scope: !5897)
!5923 = !DILocation(line: 1258, column: 13, scope: !5897)
!5924 = !DILocation(line: 1260, column: 7, scope: !5897)
!5925 = distinct !{!5925, !5924, !5924}
!5926 = !DILocation(line: 1261, column: 13, scope: !5897)
!5927 = !DILocation(line: 1263, column: 7, scope: !5897)
!5928 = distinct !{!5928, !5927, !5927}
!5929 = !DILocation(line: 1264, column: 13, scope: !5897)
!5930 = !DILocation(line: 1265, column: 15, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1265, column: 11)
!5932 = !DILocation(line: 1265, column: 34, scope: !5931)
!5933 = !DILocation(line: 1265, column: 27, scope: !5931)
!5934 = !DILocation(line: 1266, column: 8, scope: !5931)
!5935 = !DILocation(line: 1266, column: 2, scope: !5931)
!5936 = !DILocation(line: 1267, column: 15, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1267, column: 11)
!5938 = !DILocation(line: 1267, column: 11, scope: !5897)
!5939 = !DILocation(line: 1269, column: 26, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1268, column: 2)
!5941 = !DILocation(line: 1269, column: 4, scope: !5940)
!5942 = !DILocation(line: 1269, column: 24, scope: !5940)
!5943 = !DILocation(line: 1270, column: 30, scope: !5940)
!5944 = !DILocation(line: 1270, column: 28, scope: !5940)
!5945 = !DILocation(line: 1271, column: 31, scope: !5940)
!5946 = !DILocation(line: 1271, column: 29, scope: !5940)
!5947 = !DILocation(line: 1272, column: 2, scope: !5940)
!5948 = !DILocation(line: 1273, column: 13, scope: !5897)
!5949 = !DILocation(line: 1274, column: 7, scope: !5897)
!5950 = !DILocation(line: 1316, column: 24, scope: !5897)
!5951 = !DILocation(line: 1317, column: 24, scope: !5897)
!5952 = !DILocation(line: 1318, column: 13, scope: !5897)
!5953 = !DILocation(line: 1320, column: 7, scope: !5897)
!5954 = distinct !{!5954, !5953, !5953}
!5955 = !DILocation(line: 1322, column: 4, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1321, column: 11)
!5957 = !DILocation(line: 1326, column: 8, scope: !5956)
!5958 = !DILocation(line: 1326, column: 2, scope: !5956)
!5959 = !DILocation(line: 1329, column: 16, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1329, column: 11)
!5961 = !DILocation(line: 1329, column: 11, scope: !5897)
!5962 = !DILocation(line: 1330, column: 8, scope: !5960)
!5963 = !DILocation(line: 1330, column: 2, scope: !5960)
!5964 = !DILocation(line: 1332, column: 7, scope: !5897)
!5965 = distinct !{!5965, !5964, !5964}
!5966 = !DILocation(line: 1333, column: 13, scope: !5897)
!5967 = !DILocation(line: 1334, column: 15, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1334, column: 11)
!5969 = !DILocation(line: 1334, column: 34, scope: !5968)
!5970 = !DILocation(line: 1334, column: 27, scope: !5968)
!5971 = !DILocation(line: 1334, column: 49, scope: !5968)
!5972 = !DILocation(line: 1335, column: 8, scope: !5968)
!5973 = !DILocation(line: 0, scope: !5968)
!5974 = !DILocation(line: 1336, column: 6, scope: !5968)
!5975 = !DILocation(line: 1337, column: 6, scope: !5968)
!5976 = !DILocation(line: 1339, column: 8, scope: !5968)
!5977 = !DILocation(line: 1340, column: 11, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1340, column: 11)
!5979 = !DILocation(line: 1341, column: 4, scope: !5978)
!5980 = !DILocation(line: 1341, column: 8, scope: !5978)
!5981 = !DILocation(line: 1342, column: 4, scope: !5978)
!5982 = !DILocation(line: 1342, column: 8, scope: !5978)
!5983 = !DILocation(line: 1340, column: 11, scope: !5897)
!5984 = !DILocation(line: 1343, column: 20, scope: !5978)
!5985 = !DILocation(line: 1343, column: 2, scope: !5978)
!5986 = !DILocation(line: 1359, column: 24, scope: !5897)
!5987 = !DILocation(line: 1360, column: 13, scope: !5897)
!5988 = !DILocation(line: 1362, column: 7, scope: !5897)
!5989 = distinct !{!5989, !5988, !5988}
!5990 = !DILocation(line: 1363, column: 29, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1363, column: 11)
!5992 = !DILocation(line: 1364, column: 8, scope: !5991)
!5993 = !DILocation(line: 1364, column: 2, scope: !5991)
!5994 = !DILocation(line: 1365, column: 15, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1365, column: 11)
!5996 = !DILocation(line: 1365, column: 30, scope: !5995)
!5997 = !DILocation(line: 1365, column: 27, scope: !5995)
!5998 = !DILocation(line: 1366, column: 8, scope: !5995)
!5999 = !DILocation(line: 0, scope: !5995)
!6000 = !DILocation(line: 1367, column: 6, scope: !5995)
!6001 = !DILocation(line: 1368, column: 6, scope: !5995)
!6002 = !DILocation(line: 1370, column: 8, scope: !5995)
!6003 = !DILocation(line: 1371, column: 16, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1371, column: 11)
!6005 = !DILocation(line: 1372, column: 11, scope: !6004)
!6006 = !DILocation(line: 1372, column: 4, scope: !6004)
!6007 = !DILocation(line: 1373, column: 7, scope: !6004)
!6008 = !DILocation(line: 1373, column: 23, scope: !6004)
!6009 = !DILocation(line: 1371, column: 11, scope: !5897)
!6010 = !DILocation(line: 1375, column: 26, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 1374, column: 2)
!6012 = !DILocation(line: 1375, column: 24, scope: !6011)
!6013 = !DILocation(line: 1376, column: 30, scope: !6011)
!6014 = !DILocation(line: 1376, column: 28, scope: !6011)
!6015 = !DILocation(line: 1377, column: 31, scope: !6011)
!6016 = !DILocation(line: 1377, column: 29, scope: !6011)
!6017 = !DILocation(line: 1378, column: 2, scope: !6011)
!6018 = !DILocation(line: 1379, column: 7, scope: !5897)
!6019 = !DILocation(line: 1389, column: 8, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 1389, column: 8)
!6021 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1380, column: 2)
!6022 = !DILocation(line: 1389, column: 30, scope: !6020)
!6023 = !DILocation(line: 1389, column: 34, scope: !6020)
!6024 = !DILocation(line: 1389, column: 8, scope: !6021)
!6025 = !DILocation(line: 1390, column: 24, scope: !6020)
!6026 = !DILocation(line: 1390, column: 6, scope: !6020)
!6027 = !DILocation(line: 1399, column: 24, scope: !5897)
!6028 = !DILocation(line: 1400, column: 24, scope: !5897)
!6029 = !DILocation(line: 1401, column: 13, scope: !5897)
!6030 = !DILocation(line: 1402, column: 7, scope: !5897)
!6031 = distinct !{!6031, !6030, !6030}
!6032 = !DILocation(line: 1404, column: 32, scope: !5897)
!6033 = !DILocation(line: 1404, column: 27, scope: !5897)
!6034 = !DILocation(line: 1404, column: 23, scope: !5897)
!6035 = !DILocation(line: 1407, column: 37, scope: !5897)
!6036 = !DILocation(line: 1408, column: 13, scope: !5897)
!6037 = !DILocation(line: 1409, column: 7, scope: !5897)
!6038 = distinct !{!6038, !6037, !6037}
!6039 = !DILocation(line: 1410, column: 37, scope: !5897)
!6040 = !DILocation(line: 1412, column: 15, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1412, column: 11)
!6042 = !DILocation(line: 1412, column: 34, scope: !6041)
!6043 = !DILocation(line: 1412, column: 27, scope: !6041)
!6044 = !DILocation(line: 1412, column: 49, scope: !6041)
!6045 = !DILocation(line: 1413, column: 8, scope: !6041)
!6046 = !DILocation(line: 0, scope: !6041)
!6047 = !DILocation(line: 1414, column: 6, scope: !6041)
!6048 = !DILocation(line: 1415, column: 6, scope: !6041)
!6049 = !DILocation(line: 1417, column: 8, scope: !6041)
!6050 = !DILocation(line: 1418, column: 32, scope: !5897)
!6051 = !DILocation(line: 1418, column: 29, scope: !5897)
!6052 = !DILocation(line: 1419, column: 30, scope: !5897)
!6053 = !DILocation(line: 1419, column: 27, scope: !5897)
!6054 = !DILocation(line: 1420, column: 13, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1420, column: 11)
!6056 = !DILocation(line: 1421, column: 6, scope: !6055)
!6057 = !DILocation(line: 1421, column: 9, scope: !6055)
!6058 = !DILocation(line: 1422, column: 6, scope: !6055)
!6059 = !DILocation(line: 1422, column: 9, scope: !6055)
!6060 = !DILocation(line: 1423, column: 6, scope: !6055)
!6061 = !DILocation(line: 1420, column: 11, scope: !5897)
!6062 = !DILocation(line: 1424, column: 12, scope: !6055)
!6063 = !DILocation(line: 1424, column: 9, scope: !6055)
!6064 = !DILocation(line: 1423, column: 10, scope: !6055)
!6065 = !DILocation(line: 1425, column: 12, scope: !6055)
!6066 = !DILocation(line: 1425, column: 9, scope: !6055)
!6067 = !DILocation(line: 1426, column: 27, scope: !6055)
!6068 = !DILocation(line: 1426, column: 24, scope: !6055)
!6069 = !DILocation(line: 1426, column: 2, scope: !6055)
!6070 = !DILocation(line: 1427, column: 13, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1427, column: 11)
!6072 = !DILocation(line: 1428, column: 6, scope: !6071)
!6073 = !DILocation(line: 1428, column: 9, scope: !6071)
!6074 = !DILocation(line: 1429, column: 6, scope: !6071)
!6075 = !DILocation(line: 1427, column: 11, scope: !5897)
!6076 = !DILocation(line: 1430, column: 12, scope: !6071)
!6077 = !DILocation(line: 1430, column: 9, scope: !6071)
!6078 = !DILocation(line: 1429, column: 10, scope: !6071)
!6079 = !DILocation(line: 1431, column: 12, scope: !6071)
!6080 = !DILocation(line: 1431, column: 9, scope: !6071)
!6081 = !DILocation(line: 1432, column: 25, scope: !6071)
!6082 = !DILocation(line: 1432, column: 22, scope: !6071)
!6083 = !DILocation(line: 1432, column: 2, scope: !6071)
!6084 = !DILocation(line: 1436, column: 24, scope: !5897)
!6085 = !DILocation(line: 1437, column: 24, scope: !5897)
!6086 = !DILocation(line: 1438, column: 24, scope: !5897)
!6087 = !DILocation(line: 1439, column: 13, scope: !5897)
!6088 = !DILocation(line: 1441, column: 7, scope: !5897)
!6089 = distinct !{!6089, !6088, !6088}
!6090 = !DILocation(line: 1442, column: 48, scope: !5897)
!6091 = !DILocation(line: 1442, column: 45, scope: !5897)
!6092 = !DILocation(line: 1442, column: 37, scope: !5897)
!6093 = !DILocation(line: 1443, column: 13, scope: !5897)
!6094 = !DILocation(line: 1444, column: 7, scope: !5897)
!6095 = distinct !{!6095, !6094, !6094}
!6096 = !DILocation(line: 1445, column: 48, scope: !5897)
!6097 = !DILocation(line: 1445, column: 45, scope: !5897)
!6098 = !DILocation(line: 1445, column: 37, scope: !5897)
!6099 = !DILocation(line: 1447, column: 48, scope: !5897)
!6100 = !DILocation(line: 1447, column: 45, scope: !5897)
!6101 = !DILocation(line: 1447, column: 37, scope: !5897)
!6102 = !DILocation(line: 1448, column: 13, scope: !5897)
!6103 = !DILocation(line: 1449, column: 7, scope: !5897)
!6104 = distinct !{!6104, !6103, !6103}
!6105 = !DILocation(line: 1450, column: 48, scope: !5897)
!6106 = !DILocation(line: 1450, column: 45, scope: !5897)
!6107 = !DILocation(line: 1450, column: 37, scope: !5897)
!6108 = !DILocation(line: 1452, column: 15, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1452, column: 11)
!6110 = !DILocation(line: 1452, column: 34, scope: !6109)
!6111 = !DILocation(line: 1452, column: 27, scope: !6109)
!6112 = !DILocation(line: 1452, column: 53, scope: !6109)
!6113 = !DILocation(line: 1453, column: 8, scope: !6109)
!6114 = !DILocation(line: 1453, column: 2, scope: !6109)
!6115 = !DILocation(line: 1455, column: 8, scope: !6109)
!6116 = !DILocation(line: 0, scope: !6109)
!6117 = !DILocation(line: 1456, column: 32, scope: !5897)
!6118 = !DILocation(line: 1456, column: 29, scope: !5897)
!6119 = !DILocation(line: 1457, column: 30, scope: !5897)
!6120 = !DILocation(line: 1457, column: 27, scope: !5897)
!6121 = !DILocation(line: 1458, column: 13, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1458, column: 11)
!6123 = !DILocation(line: 1459, column: 6, scope: !6122)
!6124 = !DILocation(line: 1459, column: 9, scope: !6122)
!6125 = !DILocation(line: 1460, column: 6, scope: !6122)
!6126 = !DILocation(line: 1460, column: 9, scope: !6122)
!6127 = !DILocation(line: 1461, column: 16, scope: !6122)
!6128 = !DILocation(line: 1461, column: 13, scope: !6122)
!6129 = !DILocation(line: 1461, column: 6, scope: !6122)
!6130 = !DILocation(line: 1462, column: 27, scope: !6122)
!6131 = !DILocation(line: 1462, column: 24, scope: !6122)
!6132 = !DILocation(line: 1462, column: 2, scope: !6122)
!6133 = !DILocation(line: 1463, column: 13, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1463, column: 11)
!6135 = !DILocation(line: 1464, column: 6, scope: !6134)
!6136 = !DILocation(line: 1464, column: 9, scope: !6134)
!6137 = !DILocation(line: 1465, column: 16, scope: !6134)
!6138 = !DILocation(line: 1465, column: 13, scope: !6134)
!6139 = !DILocation(line: 1465, column: 6, scope: !6134)
!6140 = !DILocation(line: 1466, column: 25, scope: !6134)
!6141 = !DILocation(line: 1466, column: 22, scope: !6134)
!6142 = !DILocation(line: 1466, column: 2, scope: !6134)
!6143 = !DILocation(line: 1467, column: 13, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1467, column: 11)
!6145 = !DILocation(line: 1468, column: 6, scope: !6144)
!6146 = !DILocation(line: 1469, column: 6, scope: !6144)
!6147 = !DILocation(line: 1469, column: 9, scope: !6144)
!6148 = !DILocation(line: 1470, column: 16, scope: !6144)
!6149 = !DILocation(line: 1470, column: 13, scope: !6144)
!6150 = !DILocation(line: 1470, column: 6, scope: !6144)
!6151 = !DILocation(line: 1471, column: 27, scope: !6144)
!6152 = !DILocation(line: 1471, column: 24, scope: !6144)
!6153 = !DILocation(line: 1471, column: 2, scope: !6144)
!6154 = !DILocation(line: 1473, column: 6, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1472, column: 11)
!6156 = !DILocation(line: 1473, column: 9, scope: !6155)
!6157 = !DILocation(line: 1474, column: 16, scope: !6155)
!6158 = !DILocation(line: 1474, column: 13, scope: !6155)
!6159 = !DILocation(line: 1474, column: 6, scope: !6155)
!6160 = !DILocation(line: 1475, column: 25, scope: !6155)
!6161 = !DILocation(line: 1475, column: 22, scope: !6155)
!6162 = !DILocation(line: 1475, column: 2, scope: !6155)
!6163 = !DILocation(line: 1485, column: 7, scope: !5897)
!6164 = !DILocation(line: 1493, column: 2, scope: !5810)
!6165 = !DILocation(line: 1496, column: 16, scope: !5810)
!6166 = !DILocation(line: 1496, column: 13, scope: !5810)
!6167 = !DILocation(line: 1497, column: 3, scope: !5810)
!6168 = distinct !{!6168, !6167, !6167}
!6169 = !DILocation(line: 1498, column: 7, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1498, column: 7)
!6171 = !DILocation(line: 1498, column: 17, scope: !6170)
!6172 = !DILocation(line: 1498, column: 21, scope: !6170)
!6173 = !DILocation(line: 1498, column: 7, scope: !5810)
!6174 = !DILocation(line: 1500, column: 12, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 1500, column: 11)
!6176 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1499, column: 5)
!6177 = !DILocation(line: 1500, column: 11, scope: !6176)
!6178 = !DILocation(line: 1501, column: 8, scope: !6175)
!6179 = !DILocation(line: 0, scope: !6176)
!6180 = !DILocation(line: 1502, column: 29, scope: !6176)
!6181 = !DILocation(line: 1501, column: 2, scope: !6175)
!6182 = !DILocation(line: 1502, column: 7, scope: !6176)
!6183 = !DILocation(line: 1503, column: 5, scope: !6176)
!6184 = !DILocation(line: 1181, column: 11, scope: !5866)
!6185 = !DILocation(line: 1504, column: 11, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1504, column: 7)
!6187 = !DILocation(line: 1504, column: 7, scope: !5810)
!6188 = !DILocation(line: 1505, column: 5, scope: !6186)
!6189 = !DILocation(line: 1507, column: 1, scope: !5810)
!6190 = distinct !DISubprogram(name: "decl_constant_value_for_optimization", scope: !3, file: !3, line: 1515, type: !5693, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6191)
!6191 = !{!6192, !6193}
!6192 = !DILocalVariable(name: "exp", arg: 1, scope: !6190, file: !3, line: 1515, type: !1527)
!6193 = !DILocalVariable(name: "ret", scope: !6190, file: !3, line: 1517, type: !1527)
!6194 = !DILocation(line: 0, scope: !6190)
!6195 = !DILocation(line: 1521, column: 7, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 1521, column: 7)
!6197 = !DILocation(line: 1521, column: 7, scope: !6190)
!6198 = !DILocation(line: 1522, column: 5, scope: !6196)
!6199 = !DILocation(line: 1524, column: 8, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 1524, column: 7)
!6201 = !DILocation(line: 1525, column: 7, scope: !6200)
!6202 = !DILocation(line: 1525, column: 10, scope: !6200)
!6203 = !DILocation(line: 1525, column: 26, scope: !6200)
!6204 = !DILocation(line: 1526, column: 7, scope: !6200)
!6205 = !DILocation(line: 1526, column: 10, scope: !6200)
!6206 = !DILocation(line: 1526, column: 38, scope: !6200)
!6207 = !DILocation(line: 1527, column: 7, scope: !6200)
!6208 = !DILocation(line: 1527, column: 10, scope: !6200)
!6209 = !DILocation(line: 1527, column: 26, scope: !6200)
!6210 = !DILocation(line: 1524, column: 7, scope: !6190)
!6211 = !DILocation(line: 1530, column: 9, scope: !6190)
!6212 = !DILocation(line: 1534, column: 11, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 1534, column: 7)
!6214 = !DILocation(line: 1534, column: 18, scope: !6213)
!6215 = !DILocation(line: 1534, column: 21, scope: !6213)
!6216 = !DILocation(line: 1534, column: 7, scope: !6190)
!6217 = !DILocation(line: 1535, column: 11, scope: !6213)
!6218 = !DILocation(line: 1535, column: 5, scope: !6213)
!6219 = !DILocation(line: 1537, column: 1, scope: !6190)
!6220 = distinct !DISubprogram(name: "constant_expression_warning", scope: !3, file: !3, line: 1546, type: !6221, scopeLine: 1547, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6223)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{null, !1527}
!6223 = !{!6224}
!6224 = !DILocalVariable(name: "value", arg: 1, scope: !6220, file: !3, line: 1546, type: !1527)
!6225 = !DILocation(line: 0, scope: !6220)
!6226 = !DILocation(line: 1548, column: 7, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1548, column: 7)
!6228 = !DILocation(line: 1548, column: 24, scope: !6227)
!6229 = !DILocation(line: 1548, column: 21, scope: !6227)
!6230 = !DILocation(line: 1549, column: 11, scope: !6227)
!6231 = !DILocation(line: 1549, column: 29, scope: !6227)
!6232 = !DILocation(line: 1549, column: 44, scope: !6227)
!6233 = !DILocation(line: 1549, column: 65, scope: !6227)
!6234 = !DILocation(line: 1550, column: 4, scope: !6227)
!6235 = !DILocation(line: 1550, column: 25, scope: !6227)
!6236 = !DILocation(line: 1551, column: 4, scope: !6227)
!6237 = !DILocation(line: 1551, column: 25, scope: !6227)
!6238 = !DILocation(line: 1552, column: 4, scope: !6227)
!6239 = !DILocation(line: 1552, column: 25, scope: !6227)
!6240 = !DILocation(line: 1553, column: 7, scope: !6227)
!6241 = !DILocation(line: 1553, column: 10, scope: !6227)
!6242 = !DILocation(line: 1548, column: 7, scope: !6220)
!6243 = !DILocation(line: 1554, column: 14, scope: !6227)
!6244 = !DILocation(line: 1554, column: 5, scope: !6227)
!6245 = !DILocation(line: 1555, column: 1, scope: !6220)
!6246 = distinct !DISubprogram(name: "constant_expression_error", scope: !3, file: !3, line: 1559, type: !6221, scopeLine: 1560, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6247)
!6247 = !{!6248}
!6248 = !DILocalVariable(name: "value", arg: 1, scope: !6246, file: !3, line: 1559, type: !1527)
!6249 = !DILocation(line: 0, scope: !6246)
!6250 = !DILocation(line: 1561, column: 8, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 1561, column: 7)
!6252 = !DILocation(line: 1561, column: 26, scope: !6251)
!6253 = !DILocation(line: 1561, column: 41, scope: !6251)
!6254 = !DILocation(line: 1561, column: 62, scope: !6251)
!6255 = !DILocation(line: 1562, column: 8, scope: !6251)
!6256 = !DILocation(line: 1562, column: 29, scope: !6251)
!6257 = !DILocation(line: 1563, column: 8, scope: !6251)
!6258 = !DILocation(line: 1563, column: 29, scope: !6251)
!6259 = !DILocation(line: 1564, column: 8, scope: !6251)
!6260 = !DILocation(line: 1564, column: 29, scope: !6251)
!6261 = !DILocation(line: 1565, column: 7, scope: !6251)
!6262 = !DILocation(line: 1565, column: 10, scope: !6251)
!6263 = !DILocation(line: 1561, column: 7, scope: !6246)
!6264 = !DILocation(line: 1566, column: 5, scope: !6251)
!6265 = !DILocation(line: 1567, column: 1, scope: !6246)
!6266 = distinct !DISubprogram(name: "overflow_warning", scope: !3, file: !3, line: 1581, type: !6267, scopeLine: 1582, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6269)
!6267 = !DISubroutineType(types: !6268)
!6268 = !{null, !1651, !1527}
!6269 = !{!6270, !6271}
!6270 = !DILocalVariable(name: "loc", arg: 1, scope: !6266, file: !3, line: 1581, type: !1651)
!6271 = !DILocalVariable(name: "value", arg: 2, scope: !6266, file: !3, line: 1581, type: !1527)
!6272 = !DILocation(line: 0, scope: !6266)
!6273 = !DILocation(line: 1583, column: 7, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1583, column: 7)
!6275 = !DILocation(line: 1583, column: 37, scope: !6274)
!6276 = !DILocation(line: 1583, column: 7, scope: !6266)
!6277 = !DILocation(line: 1586, column: 11, scope: !6266)
!6278 = !DILocation(line: 1586, column: 3, scope: !6266)
!6279 = !DILocation(line: 1589, column: 7, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1587, column: 5)
!6281 = !DILocation(line: 1590, column: 7, scope: !6280)
!6282 = !DILocation(line: 1593, column: 7, scope: !6280)
!6283 = !DILocation(line: 1595, column: 7, scope: !6280)
!6284 = !DILocation(line: 1598, column: 7, scope: !6280)
!6285 = !DILocation(line: 1599, column: 7, scope: !6280)
!6286 = !DILocation(line: 1602, column: 7, scope: !6280)
!6287 = !DILocation(line: 1603, column: 7, scope: !6280)
!6288 = !DILocation(line: 1606, column: 11, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1606, column: 11)
!6290 = !DILocation(line: 1606, column: 45, scope: !6289)
!6291 = !DILocation(line: 1606, column: 11, scope: !6280)
!6292 = !DILocation(line: 1607, column: 2, scope: !6289)
!6293 = !DILocation(line: 1609, column: 50, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 1609, column: 16)
!6295 = !DILocation(line: 1609, column: 16, scope: !6289)
!6296 = !DILocation(line: 1610, column: 2, scope: !6294)
!6297 = !DILocation(line: 1617, column: 1, scope: !6266)
!6298 = distinct !DISubprogram(name: "warn_logical_operator", scope: !3, file: !3, line: 1625, type: !6299, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6301)
!6299 = !DISubroutineType(types: !6300)
!6300 = !{null, !1651, !139, !1527, !139, !1527, !139, !1527}
!6301 = !{!6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315, !6316, !6317, !6318, !6319, !6320, !6321, !6322}
!6302 = !DILocalVariable(name: "location", arg: 1, scope: !6298, file: !3, line: 1625, type: !1651)
!6303 = !DILocalVariable(name: "code", arg: 2, scope: !6298, file: !3, line: 1625, type: !139)
!6304 = !DILocalVariable(name: "type", arg: 3, scope: !6298, file: !3, line: 1625, type: !1527)
!6305 = !DILocalVariable(name: "code_left", arg: 4, scope: !6298, file: !3, line: 1626, type: !139)
!6306 = !DILocalVariable(name: "op_left", arg: 5, scope: !6298, file: !3, line: 1626, type: !1527)
!6307 = !DILocalVariable(name: "code_right", arg: 6, scope: !6298, file: !3, line: 1627, type: !139)
!6308 = !DILocalVariable(name: "op_right", arg: 7, scope: !6298, file: !3, line: 1627, type: !1527)
!6309 = !DILocalVariable(name: "or_op", scope: !6298, file: !3, line: 1629, type: !1520)
!6310 = !DILocalVariable(name: "in0_p", scope: !6298, file: !3, line: 1630, type: !1520)
!6311 = !DILocalVariable(name: "in1_p", scope: !6298, file: !3, line: 1630, type: !1520)
!6312 = !DILocalVariable(name: "in_p", scope: !6298, file: !3, line: 1630, type: !1520)
!6313 = !DILocalVariable(name: "low0", scope: !6298, file: !3, line: 1631, type: !1527)
!6314 = !DILocalVariable(name: "low1", scope: !6298, file: !3, line: 1631, type: !1527)
!6315 = !DILocalVariable(name: "low", scope: !6298, file: !3, line: 1631, type: !1527)
!6316 = !DILocalVariable(name: "high0", scope: !6298, file: !3, line: 1631, type: !1527)
!6317 = !DILocalVariable(name: "high1", scope: !6298, file: !3, line: 1631, type: !1527)
!6318 = !DILocalVariable(name: "high", scope: !6298, file: !3, line: 1631, type: !1527)
!6319 = !DILocalVariable(name: "lhs", scope: !6298, file: !3, line: 1631, type: !1527)
!6320 = !DILocalVariable(name: "rhs", scope: !6298, file: !3, line: 1631, type: !1527)
!6321 = !DILocalVariable(name: "tem", scope: !6298, file: !3, line: 1631, type: !1527)
!6322 = !DILocalVariable(name: "strict_overflow_p", scope: !6298, file: !3, line: 1632, type: !1519)
!6323 = !DILocation(line: 0, scope: !6298)
!6324 = !DILocation(line: 1629, column: 40, scope: !6298)
!6325 = !DILocation(line: 1630, column: 3, scope: !6298)
!6326 = !DILocation(line: 1631, column: 3, scope: !6298)
!6327 = !DILocation(line: 1632, column: 3, scope: !6298)
!6328 = !DILocation(line: 1632, column: 8, scope: !6298)
!6329 = !DILocation(line: 1635, column: 7, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1634, column: 7)
!6331 = !DILocation(line: 1645, column: 8, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1645, column: 7)
!6333 = !DILocation(line: 1646, column: 7, scope: !6332)
!6334 = !DILocation(line: 1646, column: 10, scope: !6332)
!6335 = !DILocation(line: 1647, column: 7, scope: !6332)
!6336 = !DILocation(line: 1647, column: 11, scope: !6332)
!6337 = !DILocation(line: 1648, column: 7, scope: !6332)
!6338 = !DILocation(line: 1648, column: 11, scope: !6332)
!6339 = !DILocation(line: 1649, column: 7, scope: !6332)
!6340 = !DILocation(line: 1649, column: 10, scope: !6332)
!6341 = !DILocation(line: 1649, column: 31, scope: !6332)
!6342 = !DILocation(line: 1650, column: 7, scope: !6332)
!6343 = !DILocation(line: 1650, column: 11, scope: !6332)
!6344 = !DILocation(line: 1651, column: 7, scope: !6332)
!6345 = !DILocation(line: 1651, column: 11, scope: !6332)
!6346 = !DILocation(line: 1645, column: 7, scope: !6298)
!6347 = !DILocation(line: 1653, column: 11, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1652, column: 5)
!6349 = !DILocation(line: 1654, column: 2, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 1653, column: 11)
!6351 = !DILocation(line: 1657, column: 2, scope: !6350)
!6352 = !DILocation(line: 1659, column: 33, scope: !6348)
!6353 = !DILocation(line: 1660, column: 7, scope: !6348)
!6354 = !DILocation(line: 1665, column: 7, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1665, column: 7)
!6356 = !DILocation(line: 1665, column: 34, scope: !6355)
!6357 = !DILocation(line: 1665, column: 37, scope: !6355)
!6358 = !DILocation(line: 1665, column: 7, scope: !6298)
!6359 = !DILocation(line: 1669, column: 24, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1669, column: 7)
!6361 = !DILocation(line: 1669, column: 9, scope: !6360)
!6362 = !DILocation(line: 1670, column: 2, scope: !6360)
!6363 = !DILocation(line: 1670, column: 5, scope: !6360)
!6364 = !DILocation(line: 1671, column: 7, scope: !6360)
!6365 = !DILocation(line: 1671, column: 27, scope: !6360)
!6366 = !DILocation(line: 1671, column: 12, scope: !6360)
!6367 = !DILocation(line: 1672, column: 5, scope: !6360)
!6368 = !DILocation(line: 1672, column: 8, scope: !6360)
!6369 = !DILocation(line: 1669, column: 7, scope: !6298)
!6370 = !DILocation(line: 1675, column: 9, scope: !6298)
!6371 = !DILocation(line: 1676, column: 9, scope: !6298)
!6372 = !DILocation(line: 1678, column: 7, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1678, column: 7)
!6374 = !DILocation(line: 1678, column: 11, scope: !6373)
!6375 = !DILocation(line: 1678, column: 14, scope: !6373)
!6376 = !DILocation(line: 1678, column: 30, scope: !6373)
!6377 = !DILocation(line: 1678, column: 7, scope: !6298)
!6378 = !DILocation(line: 1679, column: 11, scope: !6373)
!6379 = !DILocation(line: 1679, column: 5, scope: !6373)
!6380 = !DILocation(line: 1681, column: 7, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1681, column: 7)
!6382 = !DILocation(line: 1681, column: 11, scope: !6381)
!6383 = !DILocation(line: 1681, column: 14, scope: !6381)
!6384 = !DILocation(line: 1681, column: 30, scope: !6381)
!6385 = !DILocation(line: 1681, column: 7, scope: !6298)
!6386 = !DILocation(line: 1682, column: 11, scope: !6381)
!6387 = !DILocation(line: 1682, column: 5, scope: !6381)
!6388 = !DILocation(line: 1686, column: 7, scope: !6298)
!6389 = !DILocation(line: 1687, column: 14, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1686, column: 7)
!6391 = !DILocation(line: 1687, column: 13, scope: !6390)
!6392 = !DILocation(line: 1687, column: 11, scope: !6390)
!6393 = !DILocation(line: 1687, column: 30, scope: !6390)
!6394 = !DILocation(line: 1687, column: 29, scope: !6390)
!6395 = !DILocation(line: 1687, column: 27, scope: !6390)
!6396 = !DILocation(line: 1687, column: 5, scope: !6390)
!6397 = !DILocation(line: 1691, column: 7, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1691, column: 7)
!6399 = !DILocation(line: 1691, column: 14, scope: !6398)
!6400 = !DILocation(line: 1691, column: 11, scope: !6398)
!6401 = !DILocation(line: 1691, column: 21, scope: !6398)
!6402 = !DILocation(line: 1692, column: 7, scope: !6398)
!6403 = !DILocation(line: 1692, column: 44, scope: !6398)
!6404 = !DILocation(line: 1692, column: 51, scope: !6398)
!6405 = !DILocation(line: 1692, column: 57, scope: !6398)
!6406 = !DILocation(line: 1693, column: 10, scope: !6398)
!6407 = !DILocation(line: 1693, column: 17, scope: !6398)
!6408 = !DILocation(line: 1693, column: 23, scope: !6398)
!6409 = !DILocation(line: 1692, column: 10, scope: !6398)
!6410 = !DILocation(line: 1694, column: 7, scope: !6398)
!6411 = !DILocation(line: 1695, column: 17, scope: !6398)
!6412 = !DILocation(line: 1695, column: 23, scope: !6398)
!6413 = !DILocation(line: 1695, column: 28, scope: !6398)
!6414 = !DILocation(line: 1694, column: 22, scope: !6398)
!6415 = !DILocation(line: 1694, column: 12, scope: !6398)
!6416 = !DILocation(line: 1691, column: 7, scope: !6298)
!6417 = !DILocation(line: 1697, column: 11, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 1697, column: 11)
!6419 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 1696, column: 5)
!6420 = !DILocation(line: 1697, column: 27, scope: !6418)
!6421 = !DILocation(line: 1697, column: 11, scope: !6419)
!6422 = !DILocation(line: 1700, column: 11, scope: !6419)
!6423 = !DILocation(line: 1701, column: 9, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 1700, column: 11)
!6425 = !DILocation(line: 1705, column: 9, scope: !6424)
!6426 = !DILocation(line: 1709, column: 1, scope: !6298)
!6427 = distinct !DISubprogram(name: "truth_value_p", scope: !140, file: !140, line: 4919, type: !6428, scopeLine: 4920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6430)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!1519, !139}
!6430 = !{!6431}
!6431 = !DILocalVariable(name: "code", arg: 1, scope: !6427, file: !140, line: 4919, type: !139)
!6432 = !DILocation(line: 0, scope: !6427)
!6433 = !DILocation(line: 4921, column: 11, scope: !6427)
!6434 = !DILocation(line: 4921, column: 34, scope: !6427)
!6435 = !DILocation(line: 4922, column: 12, scope: !6427)
!6436 = !DILocation(line: 4922, column: 4, scope: !6427)
!6437 = !DILocation(line: 4922, column: 38, scope: !6427)
!6438 = !DILocation(line: 4921, column: 10, scope: !6427)
!6439 = !DILocation(line: 4921, column: 3, scope: !6427)
!6440 = distinct !DISubprogram(name: "strict_aliasing_warning", scope: !3, file: !3, line: 1718, type: !6441, scopeLine: 1719, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6443)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{!1519, !1527, !1527, !1527}
!6443 = !{!6444, !6445, !6446, !6447, !6452, !6453, !6456}
!6444 = !DILocalVariable(name: "otype", arg: 1, scope: !6440, file: !3, line: 1718, type: !1527)
!6445 = !DILocalVariable(name: "type", arg: 2, scope: !6440, file: !3, line: 1718, type: !1527)
!6446 = !DILocalVariable(name: "expr", arg: 3, scope: !6440, file: !3, line: 1718, type: !1527)
!6447 = !DILocalVariable(name: "set1", scope: !6448, file: !3, line: 1749, type: !2108)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 1746, column: 9)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1739, column: 11)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1736, column: 5)
!6451 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 1733, column: 7)
!6452 = !DILocalVariable(name: "set2", scope: !6448, file: !3, line: 1751, type: !2108)
!6453 = !DILocalVariable(name: "set1", scope: !6454, file: !3, line: 1776, type: !2108)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 1771, column: 7)
!6455 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1770, column: 9)
!6456 = !DILocalVariable(name: "set2", scope: !6454, file: !3, line: 1777, type: !2108)
!6457 = !DILocation(line: 0, scope: !6440)
!6458 = !DILocation(line: 1721, column: 3, scope: !6440)
!6459 = !DILocation(line: 1722, column: 11, scope: !6440)
!6460 = !DILocation(line: 1724, column: 9, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 1724, column: 7)
!6462 = !DILocation(line: 1725, column: 2, scope: !6461)
!6463 = !DILocation(line: 1725, column: 5, scope: !6461)
!6464 = !DILocation(line: 1726, column: 2, scope: !6461)
!6465 = !DILocation(line: 1726, column: 5, scope: !6461)
!6466 = !DILocation(line: 1727, column: 2, scope: !6461)
!6467 = !DILocation(line: 1727, column: 6, scope: !6461)
!6468 = !DILocation(line: 1730, column: 7, scope: !6461)
!6469 = !DILocation(line: 1730, column: 10, scope: !6461)
!6470 = !DILocation(line: 1724, column: 7, scope: !6440)
!6471 = !DILocation(line: 1733, column: 8, scope: !6451)
!6472 = !DILocation(line: 1733, column: 29, scope: !6451)
!6473 = !DILocation(line: 1733, column: 34, scope: !6451)
!6474 = !DILocation(line: 1733, column: 37, scope: !6451)
!6475 = !DILocation(line: 1733, column: 54, scope: !6451)
!6476 = !DILocation(line: 1734, column: 7, scope: !6451)
!6477 = !DILocation(line: 1734, column: 11, scope: !6451)
!6478 = !DILocation(line: 1735, column: 11, scope: !6451)
!6479 = !DILocation(line: 1735, column: 14, scope: !6451)
!6480 = !DILocation(line: 1733, column: 7, scope: !6440)
!6481 = !DILocation(line: 0, scope: !6449)
!6482 = !DILocation(line: 1739, column: 12, scope: !6449)
!6483 = !DILocation(line: 1739, column: 50, scope: !6449)
!6484 = !DILocation(line: 1770, column: 10, scope: !6455)
!6485 = !DILocation(line: 1739, column: 71, scope: !6449)
!6486 = !DILocation(line: 1739, column: 47, scope: !6449)
!6487 = !DILocation(line: 1741, column: 4, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 1740, column: 2)
!6489 = !DILocation(line: 1743, column: 4, scope: !6488)
!6490 = !DILocation(line: 1750, column: 21, scope: !6448)
!6491 = !DILocation(line: 1750, column: 6, scope: !6448)
!6492 = !DILocation(line: 0, scope: !6448)
!6493 = !DILocation(line: 1751, column: 48, scope: !6448)
!6494 = !DILocation(line: 1751, column: 33, scope: !6448)
!6495 = !DILocation(line: 1753, column: 20, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 1753, column: 15)
!6497 = !DILocation(line: 1753, column: 36, scope: !6496)
!6498 = !DILocation(line: 1753, column: 28, scope: !6496)
!6499 = !DILocation(line: 1754, column: 17, scope: !6496)
!6500 = !DILocation(line: 1754, column: 22, scope: !6496)
!6501 = !DILocation(line: 1754, column: 26, scope: !6496)
!6502 = !DILocation(line: 1753, column: 15, scope: !6448)
!6503 = !DILocation(line: 1756, column: 8, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 1755, column: 6)
!6505 = !DILocation(line: 1758, column: 8, scope: !6504)
!6506 = !DILocation(line: 1760, column: 20, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 1760, column: 20)
!6508 = !DILocation(line: 1760, column: 41, scope: !6507)
!6509 = !DILocation(line: 1761, column: 6, scope: !6507)
!6510 = !DILocation(line: 1761, column: 10, scope: !6507)
!6511 = !DILocation(line: 1760, column: 20, scope: !6496)
!6512 = !DILocation(line: 1763, column: 8, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 1762, column: 6)
!6514 = !DILocation(line: 1765, column: 8, scope: !6513)
!6515 = !DILocation(line: 1770, column: 31, scope: !6455)
!6516 = !DILocation(line: 1770, column: 37, scope: !6455)
!6517 = !DILocation(line: 1770, column: 41, scope: !6455)
!6518 = !DILocation(line: 1770, column: 9, scope: !6451)
!6519 = !DILocation(line: 1776, column: 31, scope: !6454)
!6520 = !DILocation(line: 0, scope: !6454)
!6521 = !DILocation(line: 1777, column: 46, scope: !6454)
!6522 = !DILocation(line: 1777, column: 31, scope: !6454)
!6523 = !DILocation(line: 1778, column: 14, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 1778, column: 13)
!6525 = !DILocation(line: 1779, column: 13, scope: !6524)
!6526 = !DILocation(line: 1779, column: 17, scope: !6524)
!6527 = !DILocation(line: 1778, column: 13, scope: !6454)
!6528 = !DILocation(line: 1781, column: 13, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 1780, column: 4)
!6530 = !DILocation(line: 1783, column: 13, scope: !6529)
!6531 = !DILocation(line: 1787, column: 3, scope: !6440)
!6532 = !DILocation(line: 1788, column: 1, scope: !6440)
!6533 = distinct !DISubprogram(name: "handled_component_p", scope: !140, file: !140, line: 4551, type: !6534, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!1519, !2855}
!6536 = !{!6537}
!6537 = !DILocalVariable(name: "t", arg: 1, scope: !6533, file: !140, line: 4551, type: !2855)
!6538 = !DILocation(line: 0, scope: !6533)
!6539 = !DILocation(line: 4553, column: 11, scope: !6533)
!6540 = !DILocation(line: 4553, column: 3, scope: !6533)
!6541 = !DILocation(line: 4565, column: 7, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6533, file: !140, line: 4554, column: 5)
!6543 = !DILocation(line: 0, scope: !6542)
!6544 = !DILocation(line: 4567, column: 1, scope: !6533)
!6545 = distinct !DISubprogram(name: "check_main_parameter_types", scope: !3, file: !3, line: 1794, type: !6221, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6546)
!6546 = !{!6547, !6548, !6549, !6550}
!6547 = !DILocalVariable(name: "decl", arg: 1, scope: !6545, file: !3, line: 1794, type: !1527)
!6548 = !DILocalVariable(name: "args", scope: !6545, file: !3, line: 1796, type: !1527)
!6549 = !DILocalVariable(name: "argct", scope: !6545, file: !3, line: 1797, type: !1520)
!6550 = !DILocalVariable(name: "type", scope: !6551, file: !3, line: 1802, type: !1527)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 1801, column: 4)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1799, column: 3)
!6553 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1799, column: 3)
!6554 = !DILocation(line: 0, scope: !6545)
!6555 = !DILocation(line: 1799, column: 15, scope: !6553)
!6556 = !DILocation(line: 1799, column: 8, scope: !6553)
!6557 = !DILocation(line: 1797, column: 7, scope: !6545)
!6558 = !DILocation(line: 0, scope: !6553)
!6559 = !DILocation(line: 1799, column: 3, scope: !6553)
!6560 = !DILocation(line: 1802, column: 25, scope: !6551)
!6561 = !DILocation(line: 0, scope: !6551)
!6562 = !DILocation(line: 1804, column: 18, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 1804, column: 10)
!6564 = !DILocation(line: 1804, column: 15, scope: !6563)
!6565 = !DILocation(line: 1804, column: 44, scope: !6563)
!6566 = !DILocation(line: 1804, column: 41, scope: !6563)
!6567 = !DILocation(line: 1804, column: 33, scope: !6563)
!6568 = !DILocation(line: 1807, column: 6, scope: !6551)
!6569 = !DILocation(line: 1808, column: 6, scope: !6551)
!6570 = !DILocation(line: 1811, column: 14, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 1811, column: 14)
!6572 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 1809, column: 8)
!6573 = !DILocation(line: 1811, column: 42, scope: !6571)
!6574 = !DILocation(line: 1811, column: 39, scope: !6571)
!6575 = !DILocation(line: 1811, column: 14, scope: !6572)
!6576 = !DILocation(line: 1812, column: 21, scope: !6571)
!6577 = !DILocation(line: 1812, column: 12, scope: !6571)
!6578 = !DILocation(line: 1817, column: 14, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 1817, column: 14)
!6580 = !DILocation(line: 1817, column: 31, scope: !6579)
!6581 = !DILocation(line: 1818, column: 14, scope: !6579)
!6582 = !DILocation(line: 1818, column: 17, scope: !6579)
!6583 = !DILocation(line: 1818, column: 46, scope: !6579)
!6584 = !DILocation(line: 1819, column: 14, scope: !6579)
!6585 = !DILocation(line: 1819, column: 18, scope: !6579)
!6586 = !DILocation(line: 1820, column: 21, scope: !6579)
!6587 = !DILocation(line: 1820, column: 18, scope: !6579)
!6588 = !DILocation(line: 1817, column: 14, scope: !6572)
!6589 = !DILocation(line: 1821, column: 21, scope: !6579)
!6590 = !DILocation(line: 1821, column: 12, scope: !6579)
!6591 = !DILocation(line: 1826, column: 14, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 1826, column: 14)
!6593 = !DILocation(line: 1826, column: 31, scope: !6592)
!6594 = !DILocation(line: 1827, column: 14, scope: !6592)
!6595 = !DILocation(line: 1827, column: 17, scope: !6592)
!6596 = !DILocation(line: 1827, column: 46, scope: !6592)
!6597 = !DILocation(line: 1828, column: 14, scope: !6592)
!6598 = !DILocation(line: 1828, column: 18, scope: !6592)
!6599 = !DILocation(line: 1829, column: 21, scope: !6592)
!6600 = !DILocation(line: 1829, column: 18, scope: !6592)
!6601 = !DILocation(line: 1826, column: 14, scope: !6572)
!6602 = !DILocation(line: 1830, column: 14, scope: !6592)
!6603 = !DILocation(line: 1830, column: 5, scope: !6592)
!6604 = !DILocation(line: 1800, column: 14, scope: !6552)
!6605 = !DILocation(line: 1799, column: 3, scope: !6552)
!6606 = distinct !{!6606, !6559, !6607}
!6607 = !DILocation(line: 1834, column: 4, scope: !6553)
!6608 = !DILocation(line: 1839, column: 13, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1839, column: 7)
!6610 = !DILocation(line: 1839, column: 17, scope: !6609)
!6611 = !DILocation(line: 1839, column: 27, scope: !6609)
!6612 = !DILocation(line: 1839, column: 40, scope: !6609)
!6613 = !DILocation(line: 1839, column: 31, scope: !6609)
!6614 = !DILocation(line: 1840, column: 14, scope: !6609)
!6615 = !DILocation(line: 1840, column: 5, scope: !6609)
!6616 = !DILocation(line: 1841, column: 1, scope: !6545)
!6617 = distinct !DISubprogram(name: "vector_targets_convertible_p", scope: !3, file: !3, line: 1847, type: !6618, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6620)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{!1519, !2855, !2855}
!6620 = !{!6621, !6622}
!6621 = !DILocalVariable(name: "t1", arg: 1, scope: !6617, file: !3, line: 1847, type: !2855)
!6622 = !DILocalVariable(name: "t2", arg: 2, scope: !6617, file: !3, line: 1847, type: !2855)
!6623 = !DILocation(line: 0, scope: !6617)
!6624 = !DILocation(line: 1849, column: 7, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1849, column: 7)
!6626 = !DILocation(line: 1849, column: 22, scope: !6625)
!6627 = !DILocation(line: 1849, column: 37, scope: !6625)
!6628 = !DILocation(line: 1849, column: 40, scope: !6625)
!6629 = !DILocation(line: 1849, column: 55, scope: !6625)
!6630 = !DILocation(line: 1850, column: 7, scope: !6625)
!6631 = !DILocation(line: 1850, column: 11, scope: !6625)
!6632 = !DILocation(line: 1850, column: 35, scope: !6625)
!6633 = !DILocation(line: 1850, column: 38, scope: !6625)
!6634 = !DILocation(line: 1851, column: 7, scope: !6625)
!6635 = !DILocation(line: 1851, column: 30, scope: !6625)
!6636 = !DILocation(line: 1851, column: 46, scope: !6625)
!6637 = !DILocation(line: 1851, column: 10, scope: !6625)
!6638 = !DILocation(line: 1849, column: 7, scope: !6617)
!6639 = !DILocation(line: 1854, column: 3, scope: !6617)
!6640 = !DILocation(line: 1855, column: 1, scope: !6617)
!6641 = !DILocation(line: 0, scope: !2960)
!6642 = !DILocation(line: 1868, column: 8, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1868, column: 7)
!6644 = !DILocation(line: 1868, column: 32, scope: !6643)
!6645 = !DILocation(line: 1868, column: 35, scope: !6643)
!6646 = !DILocation(line: 1869, column: 7, scope: !6643)
!6647 = !DILocation(line: 1869, column: 30, scope: !6643)
!6648 = !DILocation(line: 1869, column: 46, scope: !6643)
!6649 = !DILocation(line: 1869, column: 10, scope: !6643)
!6650 = !DILocation(line: 1868, column: 7, scope: !2960)
!6651 = !DILocation(line: 1873, column: 26, scope: !2960)
!6652 = !DILocation(line: 1873, column: 42, scope: !2960)
!6653 = !DILocation(line: 1873, column: 6, scope: !2960)
!6654 = !DILocation(line: 1874, column: 6, scope: !2960)
!6655 = !DILocation(line: 1874, column: 10, scope: !2960)
!6656 = !DILocation(line: 1874, column: 37, scope: !2960)
!6657 = !DILocation(line: 1874, column: 50, scope: !2960)
!6658 = !DILocation(line: 1875, column: 3, scope: !2960)
!6659 = !DILocation(line: 1875, column: 26, scope: !2960)
!6660 = !DILocation(line: 1875, column: 23, scope: !2960)
!6661 = !DILocation(line: 1876, column: 6, scope: !2960)
!6662 = !DILocation(line: 1876, column: 10, scope: !2960)
!6663 = !DILocation(line: 1877, column: 6, scope: !2960)
!6664 = !DILocation(line: 1877, column: 3, scope: !2960)
!6665 = !DILocation(line: 1879, column: 8, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1879, column: 7)
!6667 = !DILocation(line: 1879, column: 27, scope: !6666)
!6668 = !DILocation(line: 1879, column: 24, scope: !6666)
!6669 = !DILocation(line: 1882, column: 7, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1882, column: 7)
!6671 = !DILocation(line: 1882, column: 36, scope: !6670)
!6672 = !DILocation(line: 1882, column: 33, scope: !6670)
!6673 = !DILocation(line: 1883, column: 7, scope: !6670)
!6674 = !DILocation(line: 1883, column: 21, scope: !6670)
!6675 = !DILocation(line: 1883, column: 41, scope: !6670)
!6676 = !DILocation(line: 1883, column: 57, scope: !6670)
!6677 = !DILocation(line: 1883, column: 10, scope: !6670)
!6678 = !DILocation(line: 1882, column: 7, scope: !2960)
!6679 = !DILocation(line: 1886, column: 7, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1886, column: 7)
!6681 = !DILocation(line: 1886, column: 25, scope: !6680)
!6682 = !DILocation(line: 1886, column: 21, scope: !6680)
!6683 = !DILocation(line: 1888, column: 24, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 1887, column: 5)
!6685 = !DILocation(line: 1889, column: 15, scope: !6684)
!6686 = !DILocation(line: 1889, column: 7, scope: !6684)
!6687 = !DILocation(line: 1892, column: 5, scope: !6684)
!6688 = !DILocation(line: 1895, column: 1, scope: !2960)
!6689 = distinct !DISubprogram(name: "shorten_binary_op", scope: !3, file: !3, line: 1909, type: !6690, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6692)
!6690 = !DISubroutineType(types: !6691)
!6691 = !{!1527, !1527, !1527, !1527, !1519}
!6692 = !{!6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700, !6701, !6702}
!6693 = !DILocalVariable(name: "result_type", arg: 1, scope: !6689, file: !3, line: 1909, type: !1527)
!6694 = !DILocalVariable(name: "op0", arg: 2, scope: !6689, file: !3, line: 1909, type: !1527)
!6695 = !DILocalVariable(name: "op1", arg: 3, scope: !6689, file: !3, line: 1909, type: !1527)
!6696 = !DILocalVariable(name: "bitwise", arg: 4, scope: !6689, file: !3, line: 1909, type: !1519)
!6697 = !DILocalVariable(name: "unsigned0", scope: !6689, file: !3, line: 1911, type: !1520)
!6698 = !DILocalVariable(name: "unsigned1", scope: !6689, file: !3, line: 1911, type: !1520)
!6699 = !DILocalVariable(name: "arg0", scope: !6689, file: !3, line: 1912, type: !1527)
!6700 = !DILocalVariable(name: "arg1", scope: !6689, file: !3, line: 1912, type: !1527)
!6701 = !DILocalVariable(name: "uns", scope: !6689, file: !3, line: 1913, type: !1520)
!6702 = !DILocalVariable(name: "type", scope: !6689, file: !3, line: 1914, type: !1527)
!6703 = !DILocation(line: 0, scope: !6689)
!6704 = !DILocation(line: 1911, column: 3, scope: !6689)
!6705 = !DILocation(line: 1932, column: 9, scope: !6689)
!6706 = !DILocation(line: 1933, column: 9, scope: !6689)
!6707 = !DILocation(line: 1935, column: 10, scope: !6689)
!6708 = !DILocation(line: 1936, column: 10, scope: !6689)
!6709 = !DILocation(line: 1939, column: 9, scope: !6689)
!6710 = !DILocation(line: 1944, column: 8, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1944, column: 7)
!6712 = !DILocation(line: 1945, column: 11, scope: !6711)
!6713 = !DILocation(line: 1945, column: 8, scope: !6711)
!6714 = !DILocation(line: 1946, column: 7, scope: !6711)
!6715 = !DILocation(line: 1946, column: 26, scope: !6711)
!6716 = !DILocation(line: 1944, column: 7, scope: !6689)
!6717 = !DILocation(line: 1947, column: 17, scope: !6711)
!6718 = !DILocation(line: 1947, column: 15, scope: !6711)
!6719 = !DILocation(line: 1947, column: 5, scope: !6711)
!6720 = !DILocation(line: 1948, column: 8, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1948, column: 7)
!6722 = !DILocation(line: 1949, column: 11, scope: !6721)
!6723 = !DILocation(line: 1949, column: 8, scope: !6721)
!6724 = !DILocation(line: 1950, column: 7, scope: !6721)
!6725 = !DILocation(line: 1950, column: 26, scope: !6721)
!6726 = !DILocation(line: 1948, column: 7, scope: !6689)
!6727 = !DILocation(line: 1951, column: 17, scope: !6721)
!6728 = !DILocation(line: 1951, column: 15, scope: !6721)
!6729 = !DILocation(line: 1951, column: 5, scope: !6721)
!6730 = !DILocation(line: 1957, column: 7, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1957, column: 7)
!6732 = !DILocation(line: 1958, column: 11, scope: !6731)
!6733 = !DILocation(line: 1957, column: 7, scope: !6689)
!6734 = !DILocation(line: 1967, column: 8, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1967, column: 7)
!6736 = !DILocation(line: 1968, column: 10, scope: !6735)
!6737 = !DILocation(line: 1968, column: 8, scope: !6735)
!6738 = !DILocation(line: 1969, column: 7, scope: !6735)
!6739 = !DILocation(line: 1970, column: 4, scope: !6735)
!6740 = !DILocation(line: 1971, column: 7, scope: !6735)
!6741 = !DILocation(line: 1971, column: 23, scope: !6735)
!6742 = !DILocation(line: 1971, column: 20, scope: !6735)
!6743 = !DILocation(line: 1972, column: 7, scope: !6735)
!6744 = !DILocation(line: 1972, column: 11, scope: !6735)
!6745 = !DILocation(line: 1972, column: 25, scope: !6735)
!6746 = !DILocation(line: 1972, column: 21, scope: !6735)
!6747 = !DILocation(line: 1974, column: 19, scope: !6735)
!6748 = !DILocation(line: 1973, column: 12, scope: !6735)
!6749 = !DILocation(line: 1973, column: 5, scope: !6735)
!6750 = !DILocation(line: 1976, column: 12, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 1976, column: 12)
!6752 = !DILocation(line: 1976, column: 29, scope: !6751)
!6753 = !DILocation(line: 1977, column: 5, scope: !6751)
!6754 = !DILocation(line: 1977, column: 9, scope: !6751)
!6755 = !DILocation(line: 1977, column: 23, scope: !6751)
!6756 = !DILocation(line: 1977, column: 19, scope: !6751)
!6757 = !DILocation(line: 1978, column: 9, scope: !6751)
!6758 = !DILocation(line: 1979, column: 9, scope: !6751)
!6759 = !DILocation(line: 1980, column: 5, scope: !6751)
!6760 = !DILocation(line: 1981, column: 11, scope: !6751)
!6761 = !DILocation(line: 1981, column: 9, scope: !6751)
!6762 = !DILocation(line: 1983, column: 5, scope: !6751)
!6763 = !DILocation(line: 1983, column: 9, scope: !6751)
!6764 = !DILocation(line: 1984, column: 5, scope: !6751)
!6765 = !DILocation(line: 1984, column: 8, scope: !6751)
!6766 = !DILocation(line: 1976, column: 12, scope: !6735)
!6767 = !DILocation(line: 1987, column: 12, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 1987, column: 12)
!6769 = !DILocation(line: 1987, column: 29, scope: !6768)
!6770 = !DILocation(line: 1988, column: 5, scope: !6768)
!6771 = !DILocation(line: 1988, column: 9, scope: !6768)
!6772 = !DILocation(line: 1988, column: 23, scope: !6768)
!6773 = !DILocation(line: 1988, column: 19, scope: !6768)
!6774 = !DILocation(line: 1989, column: 9, scope: !6768)
!6775 = !DILocation(line: 1990, column: 11, scope: !6768)
!6776 = !DILocation(line: 1990, column: 9, scope: !6768)
!6777 = !DILocation(line: 1991, column: 5, scope: !6768)
!6778 = !DILocation(line: 1992, column: 11, scope: !6768)
!6779 = !DILocation(line: 1992, column: 9, scope: !6768)
!6780 = !DILocation(line: 1994, column: 5, scope: !6768)
!6781 = !DILocation(line: 1994, column: 9, scope: !6768)
!6782 = !DILocation(line: 1995, column: 5, scope: !6768)
!6783 = !DILocation(line: 1995, column: 8, scope: !6768)
!6784 = !DILocation(line: 1987, column: 12, scope: !6751)
!6785 = !DILocation(line: 1998, column: 3, scope: !6689)
!6786 = !DILocation(line: 1999, column: 1, scope: !6689)
!6787 = distinct !DISubprogram(name: "c_common_signed_or_unsigned_type", scope: !3, file: !3, line: 3124, type: !6788, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6790)
!6788 = !DISubroutineType(types: !6789)
!6789 = !{!1527, !1520, !1527}
!6790 = !{!6791, !6792, !6793}
!6791 = !DILocalVariable(name: "unsignedp", arg: 1, scope: !6787, file: !3, line: 3124, type: !1520)
!6792 = !DILocalVariable(name: "type", arg: 2, scope: !6787, file: !3, line: 3124, type: !1527)
!6793 = !DILocalVariable(name: "type1", scope: !6787, file: !3, line: 3126, type: !1527)
!6794 = !DILocation(line: 0, scope: !6787)
!6795 = !DILocation(line: 3134, column: 11, scope: !6787)
!6796 = !DILocation(line: 3135, column: 16, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3135, column: 7)
!6798 = !DILocation(line: 3135, column: 13, scope: !6797)
!6799 = !DILocation(line: 3135, column: 50, scope: !6797)
!6800 = !DILocation(line: 3135, column: 47, scope: !6797)
!6801 = !DILocation(line: 3135, column: 38, scope: !6797)
!6802 = !DILocation(line: 3135, column: 77, scope: !6797)
!6803 = !DILocation(line: 3135, column: 74, scope: !6797)
!6804 = !DILocation(line: 3136, column: 12, scope: !6797)
!6805 = !DILocation(line: 3137, column: 16, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3137, column: 7)
!6807 = !DILocation(line: 3137, column: 13, scope: !6806)
!6808 = !DILocation(line: 3137, column: 46, scope: !6806)
!6809 = !DILocation(line: 3137, column: 43, scope: !6806)
!6810 = !DILocation(line: 3137, column: 34, scope: !6806)
!6811 = !DILocation(line: 3138, column: 12, scope: !6806)
!6812 = !DILocation(line: 3139, column: 16, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3139, column: 7)
!6814 = !DILocation(line: 3139, column: 13, scope: !6813)
!6815 = !DILocation(line: 3139, column: 52, scope: !6813)
!6816 = !DILocation(line: 3139, column: 49, scope: !6813)
!6817 = !DILocation(line: 3139, column: 40, scope: !6813)
!6818 = !DILocation(line: 3140, column: 12, scope: !6813)
!6819 = !DILocation(line: 3141, column: 16, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3141, column: 7)
!6821 = !DILocation(line: 3141, column: 13, scope: !6820)
!6822 = !DILocation(line: 3141, column: 51, scope: !6820)
!6823 = !DILocation(line: 3141, column: 48, scope: !6820)
!6824 = !DILocation(line: 3141, column: 39, scope: !6820)
!6825 = !DILocation(line: 3142, column: 12, scope: !6820)
!6826 = !DILocation(line: 3143, column: 16, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3143, column: 7)
!6828 = !DILocation(line: 3143, column: 13, scope: !6827)
!6829 = !DILocation(line: 3143, column: 56, scope: !6827)
!6830 = !DILocation(line: 3143, column: 53, scope: !6827)
!6831 = !DILocation(line: 3143, column: 44, scope: !6827)
!6832 = !DILocation(line: 3144, column: 12, scope: !6827)
!6833 = !DILocation(line: 3145, column: 16, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3145, column: 7)
!6835 = !DILocation(line: 3145, column: 13, scope: !6834)
!6836 = !DILocation(line: 3145, column: 61, scope: !6834)
!6837 = !DILocation(line: 3145, column: 58, scope: !6834)
!6838 = !DILocation(line: 3145, column: 49, scope: !6834)
!6839 = !DILocation(line: 3146, column: 12, scope: !6834)
!6840 = !DILocation(line: 3148, column: 16, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3148, column: 7)
!6842 = !DILocation(line: 3148, column: 13, scope: !6841)
!6843 = !DILocation(line: 3148, column: 44, scope: !6841)
!6844 = !DILocation(line: 3148, column: 41, scope: !6841)
!6845 = !DILocation(line: 3148, column: 32, scope: !6841)
!6846 = !DILocation(line: 3149, column: 12, scope: !6841)
!6847 = !DILocation(line: 3151, column: 16, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3151, column: 7)
!6849 = !DILocation(line: 3151, column: 13, scope: !6848)
!6850 = !DILocation(line: 3151, column: 44, scope: !6848)
!6851 = !DILocation(line: 3151, column: 41, scope: !6848)
!6852 = !DILocation(line: 3151, column: 32, scope: !6848)
!6853 = !DILocation(line: 3152, column: 12, scope: !6848)
!6854 = !DILocation(line: 3153, column: 16, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3153, column: 7)
!6856 = !DILocation(line: 3153, column: 13, scope: !6855)
!6857 = !DILocation(line: 3153, column: 44, scope: !6855)
!6858 = !DILocation(line: 3153, column: 41, scope: !6855)
!6859 = !DILocation(line: 3153, column: 32, scope: !6855)
!6860 = !DILocation(line: 3154, column: 12, scope: !6855)
!6861 = !DILocation(line: 3155, column: 16, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3155, column: 7)
!6863 = !DILocation(line: 3155, column: 13, scope: !6862)
!6864 = !DILocation(line: 3155, column: 44, scope: !6862)
!6865 = !DILocation(line: 3155, column: 41, scope: !6862)
!6866 = !DILocation(line: 3155, column: 32, scope: !6862)
!6867 = !DILocation(line: 3156, column: 12, scope: !6862)
!6868 = !DILocation(line: 3157, column: 16, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3157, column: 7)
!6870 = !DILocation(line: 3157, column: 13, scope: !6869)
!6871 = !DILocation(line: 3157, column: 44, scope: !6869)
!6872 = !DILocation(line: 3157, column: 41, scope: !6869)
!6873 = !DILocation(line: 3157, column: 32, scope: !6869)
!6874 = !DILocation(line: 3158, column: 12, scope: !6869)
!6875 = !DILocation(line: 3208, column: 3, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3208, column: 3)
!6877 = !DILocation(line: 3208, column: 3, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3208, column: 3)
!6879 = !DILocation(line: 3208, column: 3, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3208, column: 3)
!6881 = !DILocation(line: 3208, column: 3, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3208, column: 3)
!6883 = !DILocation(line: 3209, column: 3, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3209, column: 3)
!6885 = !DILocation(line: 3209, column: 3, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3209, column: 3)
!6887 = !DILocation(line: 3209, column: 3, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3209, column: 3)
!6889 = !DILocation(line: 3209, column: 3, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3209, column: 3)
!6891 = !DILocation(line: 3210, column: 3, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3210, column: 3)
!6893 = !DILocation(line: 3210, column: 3, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3210, column: 3)
!6895 = !DILocation(line: 3210, column: 3, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3210, column: 3)
!6897 = !DILocation(line: 3210, column: 3, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3210, column: 3)
!6899 = !DILocation(line: 3211, column: 3, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3211, column: 3)
!6901 = !DILocation(line: 3211, column: 3, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3211, column: 3)
!6903 = !DILocation(line: 3211, column: 3, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3211, column: 3)
!6905 = !DILocation(line: 3211, column: 3, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3211, column: 3)
!6907 = !DILocation(line: 3213, column: 3, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3213, column: 3)
!6909 = !DILocation(line: 3214, column: 3, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3214, column: 3)
!6911 = !DILocation(line: 3215, column: 3, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3215, column: 3)
!6913 = !DILocation(line: 3216, column: 3, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3216, column: 3)
!6915 = !DILocation(line: 3217, column: 3, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3217, column: 3)
!6917 = !DILocation(line: 3218, column: 3, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3218, column: 3)
!6919 = !DILocation(line: 3219, column: 3, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3219, column: 3)
!6921 = !DILocation(line: 3220, column: 3, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3220, column: 3)
!6923 = !DILocation(line: 3221, column: 3, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3221, column: 3)
!6925 = !DILocation(line: 3222, column: 3, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3222, column: 3)
!6927 = !DILocation(line: 3223, column: 3, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3223, column: 3)
!6929 = !DILocation(line: 3224, column: 3, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3224, column: 3)
!6931 = !DILocation(line: 3225, column: 3, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3225, column: 3)
!6933 = !DILocation(line: 3226, column: 3, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3226, column: 3)
!6935 = !DILocation(line: 3227, column: 3, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3227, column: 3)
!6937 = !DILocation(line: 3228, column: 3, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3228, column: 3)
!6939 = !DILocation(line: 3229, column: 3, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3229, column: 3)
!6941 = !DILocation(line: 3230, column: 3, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3230, column: 3)
!6943 = !DILocation(line: 3241, column: 8, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3241, column: 7)
!6945 = !DILocation(line: 3242, column: 7, scope: !6944)
!6946 = !DILocation(line: 3242, column: 10, scope: !6944)
!6947 = !DILocation(line: 3242, column: 31, scope: !6944)
!6948 = !DILocation(line: 3241, column: 7, scope: !6787)
!6949 = !DILocation(line: 3248, column: 7, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3248, column: 7)
!6951 = !DILocation(line: 3248, column: 7, scope: !6787)
!6952 = !DILocation(line: 3249, column: 12, scope: !6950)
!6953 = !DILocation(line: 3250, column: 7, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3250, column: 7)
!6955 = !DILocation(line: 3250, column: 7, scope: !6787)
!6956 = !DILocation(line: 3251, column: 12, scope: !6954)
!6957 = !DILocation(line: 3252, column: 7, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3252, column: 7)
!6959 = !DILocation(line: 3252, column: 7, scope: !6787)
!6960 = !DILocation(line: 3253, column: 12, scope: !6958)
!6961 = !DILocation(line: 3254, column: 7, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3254, column: 7)
!6963 = !DILocation(line: 3254, column: 7, scope: !6787)
!6964 = !DILocation(line: 3255, column: 12, scope: !6962)
!6965 = !DILocation(line: 3256, column: 7, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3256, column: 7)
!6967 = !DILocation(line: 3256, column: 7, scope: !6787)
!6968 = !DILocation(line: 3257, column: 13, scope: !6966)
!6969 = !DILocation(line: 3259, column: 7, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3259, column: 7)
!6971 = !DILocation(line: 3259, column: 7, scope: !6787)
!6972 = !DILocation(line: 3260, column: 13, scope: !6970)
!6973 = !DILocation(line: 3264, column: 7, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3264, column: 7)
!6975 = !DILocation(line: 3264, column: 7, scope: !6787)
!6976 = !DILocation(line: 3265, column: 12, scope: !6974)
!6977 = !DILocation(line: 3267, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3267, column: 7)
!6979 = !DILocation(line: 3267, column: 7, scope: !6787)
!6980 = !DILocation(line: 3268, column: 12, scope: !6978)
!6981 = !DILocation(line: 3269, column: 7, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3269, column: 7)
!6983 = !DILocation(line: 3269, column: 7, scope: !6787)
!6984 = !DILocation(line: 3270, column: 12, scope: !6982)
!6985 = !DILocation(line: 3271, column: 7, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3271, column: 7)
!6987 = !DILocation(line: 3271, column: 7, scope: !6787)
!6988 = !DILocation(line: 3272, column: 12, scope: !6986)
!6989 = !DILocation(line: 3273, column: 7, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3273, column: 7)
!6991 = !DILocation(line: 3277, column: 42, scope: !6787)
!6992 = !DILocation(line: 3273, column: 7, scope: !6787)
!6993 = !DILocation(line: 3274, column: 12, scope: !6990)
!6994 = !DILocation(line: 3277, column: 10, scope: !6787)
!6995 = !DILocation(line: 3277, column: 3, scope: !6787)
!6996 = !DILocation(line: 3278, column: 1, scope: !6787)
!6997 = distinct !DISubprogram(name: "warnings_for_convert_and_check", scope: !3, file: !3, line: 2234, type: !6998, scopeLine: 2235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7000)
!6998 = !DISubroutineType(types: !6999)
!6999 = !{null, !1527, !1527, !1527}
!7000 = !{!7001, !7002, !7003}
!7001 = !DILocalVariable(name: "type", arg: 1, scope: !6997, file: !3, line: 2234, type: !1527)
!7002 = !DILocalVariable(name: "expr", arg: 2, scope: !6997, file: !3, line: 2234, type: !1527)
!7003 = !DILocalVariable(name: "result", arg: 3, scope: !6997, file: !3, line: 2234, type: !1527)
!7004 = !DILocation(line: 0, scope: !6997)
!7005 = !DILocation(line: 2236, column: 7, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 2236, column: 7)
!7007 = !DILocation(line: 2236, column: 24, scope: !7006)
!7008 = !DILocation(line: 2237, column: 7, scope: !7006)
!7009 = !DILocation(line: 2237, column: 11, scope: !7006)
!7010 = !DILocation(line: 2237, column: 28, scope: !7006)
!7011 = !DILocation(line: 2238, column: 11, scope: !7006)
!7012 = !DILocation(line: 2238, column: 31, scope: !7006)
!7013 = !DILocation(line: 2239, column: 7, scope: !7006)
!7014 = !DILocation(line: 2239, column: 11, scope: !7006)
!7015 = !DILocation(line: 2236, column: 7, scope: !6997)
!7016 = !DILocation(line: 2243, column: 11, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 2243, column: 11)
!7018 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 2240, column: 5)
!7019 = !DILocation(line: 2243, column: 11, scope: !7018)
!7020 = !DILocation(line: 2244, column: 34, scope: !7017)
!7021 = !DILocation(line: 2244, column: 32, scope: !7017)
!7022 = !DILocation(line: 2244, column: 9, scope: !7017)
!7023 = !DILocation(line: 2246, column: 11, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 2246, column: 11)
!7025 = !DILocation(line: 2246, column: 11, scope: !7018)
!7026 = !DILocation(line: 2250, column: 39, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 2250, column: 15)
!7028 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 2247, column: 9)
!7029 = !DILocation(line: 2250, column: 16, scope: !7027)
!7030 = !DILocation(line: 2250, column: 15, scope: !7028)
!7031 = !DILocation(line: 2251, column: 13, scope: !7027)
!7032 = !DILocation(line: 2254, column: 13, scope: !7027)
!7033 = !DILocation(line: 2256, column: 40, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 2256, column: 16)
!7035 = !DILocation(line: 2256, column: 17, scope: !7034)
!7036 = !DILocation(line: 2256, column: 16, scope: !7024)
!7037 = !DILocation(line: 2257, column: 2, scope: !7034)
!7038 = !DILocation(line: 2260, column: 16, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2260, column: 16)
!7040 = !DILocation(line: 2261, column: 9, scope: !7039)
!7041 = !DILocation(line: 2261, column: 13, scope: !7039)
!7042 = !DILocation(line: 2261, column: 42, scope: !7039)
!7043 = !DILocation(line: 2262, column: 6, scope: !7039)
!7044 = !DILocation(line: 2262, column: 9, scope: !7039)
!7045 = !DILocation(line: 2263, column: 9, scope: !7039)
!7046 = !DILocation(line: 2263, column: 6, scope: !7039)
!7047 = !DILocation(line: 2260, column: 16, scope: !7034)
!7048 = !DILocation(line: 2264, column: 2, scope: !7039)
!7049 = !DILocation(line: 2268, column: 2, scope: !7039)
!7050 = !DILocation(line: 2270, column: 13, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 2270, column: 12)
!7052 = !DILocation(line: 2270, column: 32, scope: !7051)
!7053 = !DILocation(line: 2271, column: 6, scope: !7051)
!7054 = !DILocation(line: 2271, column: 28, scope: !7051)
!7055 = !DILocation(line: 2271, column: 42, scope: !7051)
!7056 = !DILocation(line: 2271, column: 45, scope: !7051)
!7057 = !DILocation(line: 2270, column: 12, scope: !7006)
!7058 = !DILocation(line: 2272, column: 5, scope: !7051)
!7059 = !DILocation(line: 2275, column: 5, scope: !7051)
!7060 = !DILocation(line: 2276, column: 1, scope: !6997)
!7061 = distinct !DISubprogram(name: "c_common_signed_type", scope: !3, file: !3, line: 3115, type: !5693, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7062)
!7062 = !{!7063}
!7063 = !DILocalVariable(name: "type", arg: 1, scope: !7061, file: !3, line: 3115, type: !1527)
!7064 = !DILocation(line: 0, scope: !7061)
!7065 = !DILocation(line: 3117, column: 10, scope: !7061)
!7066 = !DILocation(line: 3117, column: 3, scope: !7061)
!7067 = distinct !DISubprogram(name: "conversion_warning", scope: !3, file: !3, line: 2005, type: !7068, scopeLine: 2006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7070)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{null, !1527, !1527}
!7070 = !{!7071, !7072, !7073, !7074, !7075, !7076, !7077, !7081, !7089, !7092, !7094, !7095, !7103, !7104, !7105, !7106, !7109, !7110, !7111}
!7071 = !DILocalVariable(name: "type", arg: 1, scope: !7067, file: !3, line: 2005, type: !1527)
!7072 = !DILocalVariable(name: "expr", arg: 2, scope: !7067, file: !3, line: 2005, type: !1527)
!7073 = !DILocalVariable(name: "give_warning", scope: !7067, file: !3, line: 2007, type: !1519)
!7074 = !DILocalVariable(name: "i", scope: !7067, file: !3, line: 2009, type: !1520)
!7075 = !DILocalVariable(name: "expr_num_operands", scope: !7067, file: !3, line: 2010, type: !2921)
!7076 = !DILocalVariable(name: "expr_type", scope: !7067, file: !3, line: 2011, type: !1527)
!7077 = !DILocalVariable(name: "op", scope: !7078, file: !3, line: 2020, type: !1527)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 2019, column: 5)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 2018, column: 3)
!7080 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 2018, column: 3)
!7081 = !DILocalVariable(name: "a", scope: !7082, file: !3, line: 2078, type: !1589)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2077, column: 13)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 2076, column: 15)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 2074, column: 9)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 2073, column: 16)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 2059, column: 16)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2052, column: 11)
!7088 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 2026, column: 5)
!7089 = !DILocalVariable(name: "a", scope: !7090, file: !3, line: 2087, type: !1589)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 2086, column: 13)
!7091 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2084, column: 20)
!7092 = !DILocalVariable(name: "op1", scope: !7093, file: !3, line: 2105, type: !1527)
!7093 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2101, column: 7)
!7094 = !DILocalVariable(name: "op2", scope: !7093, file: !3, line: 2106, type: !1527)
!7095 = !DILocalVariable(name: "op0", scope: !7096, file: !3, line: 2148, type: !1527)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 2147, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 2146, column: 12)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2138, column: 6)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 2135, column: 8)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 2129, column: 9)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 2127, column: 16)
!7102 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2123, column: 11)
!7103 = !DILocalVariable(name: "op1", scope: !7096, file: !3, line: 2149, type: !1527)
!7104 = !DILocalVariable(name: "unsigned0", scope: !7096, file: !3, line: 2150, type: !1519)
!7105 = !DILocalVariable(name: "unsigned1", scope: !7096, file: !3, line: 2151, type: !1519)
!7106 = !DILocalVariable(name: "type_low_bound", scope: !7107, file: !3, line: 2198, type: !1527)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 2197, column: 9)
!7108 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 2195, column: 16)
!7109 = !DILocalVariable(name: "type_high_bound", scope: !7107, file: !3, line: 2198, type: !1527)
!7110 = !DILocalVariable(name: "real_low_bound", scope: !7107, file: !3, line: 2199, type: !1589)
!7111 = !DILocalVariable(name: "real_high_bound", scope: !7107, file: !3, line: 2199, type: !1589)
!7112 = !DILocation(line: 0, scope: !7067)
!7113 = !DILocation(line: 2010, column: 33, scope: !7067)
!7114 = !DILocation(line: 2011, column: 20, scope: !7067)
!7115 = !DILocation(line: 2013, column: 8, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 2013, column: 7)
!7117 = !DILocation(line: 2013, column: 28, scope: !7116)
!7118 = !DILocation(line: 2013, column: 24, scope: !7116)
!7119 = !DILocation(line: 0, scope: !7078)
!7120 = !DILocation(line: 2018, column: 3, scope: !7080)
!7121 = !DILocation(line: 0, scope: !7080)
!7122 = !DILocation(line: 2018, column: 17, scope: !7079)
!7123 = !DILocation(line: 2020, column: 17, scope: !7078)
!7124 = !DILocation(line: 2021, column: 11, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2021, column: 11)
!7126 = !DILocation(line: 2021, column: 14, scope: !7125)
!7127 = !DILocation(line: 2021, column: 17, scope: !7125)
!7128 = !DILocation(line: 2021, column: 29, scope: !7125)
!7129 = !DILocation(line: 2021, column: 32, scope: !7125)
!7130 = !DILocation(line: 2021, column: 11, scope: !7078)
!7131 = !DILocation(line: 2023, column: 5, scope: !7079)
!7132 = !DILocation(line: 2018, column: 39, scope: !7079)
!7133 = !DILocation(line: 2018, column: 3, scope: !7079)
!7134 = distinct !{!7134, !7120, !7135}
!7135 = !DILocation(line: 2023, column: 5, scope: !7080)
!7136 = !DILocation(line: 2025, column: 11, scope: !7067)
!7137 = !DILocation(line: 2025, column: 3, scope: !7067)
!7138 = !DILocation(line: 2042, column: 11, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2042, column: 11)
!7140 = !DILocation(line: 2042, column: 33, scope: !7139)
!7141 = !DILocation(line: 2042, column: 38, scope: !7139)
!7142 = !DILocation(line: 2042, column: 42, scope: !7139)
!7143 = !DILocation(line: 2042, column: 11, scope: !7088)
!7144 = !DILocation(line: 2043, column: 2, scope: !7139)
!7145 = !DILocation(line: 2052, column: 11, scope: !7087)
!7146 = !DILocation(line: 2052, column: 33, scope: !7087)
!7147 = !DILocation(line: 2053, column: 11, scope: !7087)
!7148 = !DILocation(line: 2053, column: 14, scope: !7087)
!7149 = !DILocation(line: 2053, column: 31, scope: !7087)
!7150 = !DILocation(line: 2052, column: 11, scope: !7088)
!7151 = !DILocation(line: 2055, column: 32, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 2055, column: 15)
!7153 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 2054, column: 9)
!7154 = !DILocation(line: 2055, column: 58, scope: !7152)
!7155 = !DILocation(line: 2055, column: 16, scope: !7152)
!7156 = !DILocation(line: 2057, column: 9, scope: !7153)
!7157 = !DILocation(line: 2059, column: 38, scope: !7086)
!7158 = !DILocation(line: 2060, column: 16, scope: !7086)
!7159 = !DILocation(line: 2060, column: 19, scope: !7086)
!7160 = !DILocation(line: 2060, column: 36, scope: !7086)
!7161 = !DILocation(line: 2061, column: 16, scope: !7086)
!7162 = !DILocation(line: 2061, column: 20, scope: !7086)
!7163 = !DILocation(line: 2059, column: 16, scope: !7087)
!7164 = !DILocation(line: 2063, column: 15, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 2063, column: 15)
!7166 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 2062, column: 9)
!7167 = !DILocation(line: 2063, column: 36, scope: !7165)
!7168 = !DILocation(line: 2063, column: 40, scope: !7165)
!7169 = !DILocation(line: 2064, column: 8, scope: !7165)
!7170 = !DILocation(line: 2064, column: 11, scope: !7165)
!7171 = !DILocation(line: 2064, column: 35, scope: !7165)
!7172 = !DILocation(line: 2063, column: 15, scope: !7166)
!7173 = !DILocation(line: 2067, column: 21, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 2067, column: 20)
!7175 = !DILocation(line: 2065, column: 6, scope: !7165)
!7176 = !DILocation(line: 2067, column: 42, scope: !7174)
!7177 = !DILocation(line: 2067, column: 45, scope: !7174)
!7178 = !DILocation(line: 2067, column: 20, scope: !7165)
!7179 = !DILocation(line: 2068, column: 6, scope: !7174)
!7180 = !DILocation(line: 2073, column: 16, scope: !7085)
!7181 = !DILocation(line: 2073, column: 33, scope: !7085)
!7182 = !DILocation(line: 2073, column: 16, scope: !7086)
!7183 = !DILocation(line: 2076, column: 15, scope: !7083)
!7184 = !DILocation(line: 2076, column: 37, scope: !7083)
!7185 = !DILocation(line: 2076, column: 15, scope: !7084)
!7186 = !DILocation(line: 2078, column: 15, scope: !7082)
!7187 = !DILocation(line: 0, scope: !7082)
!7188 = !DILocation(line: 2078, column: 35, scope: !7082)
!7189 = !DILocation(line: 2079, column: 41, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2079, column: 19)
!7191 = !DILocation(line: 2079, column: 20, scope: !7190)
!7192 = !DILocation(line: 2081, column: 13, scope: !7083)
!7193 = !DILocation(line: 2081, column: 13, scope: !7082)
!7194 = !DILocation(line: 2084, column: 42, scope: !7091)
!7195 = !DILocation(line: 2085, column: 20, scope: !7091)
!7196 = !DILocation(line: 2085, column: 23, scope: !7091)
!7197 = !DILocation(line: 2085, column: 47, scope: !7091)
!7198 = !DILocation(line: 2085, column: 45, scope: !7091)
!7199 = !DILocation(line: 2084, column: 20, scope: !7083)
!7200 = !DILocation(line: 2087, column: 15, scope: !7090)
!7201 = !DILocation(line: 2087, column: 35, scope: !7090)
!7202 = !DILocation(line: 2088, column: 41, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2088, column: 19)
!7204 = !DILocation(line: 0, scope: !7090)
!7205 = !DILocation(line: 2088, column: 20, scope: !7203)
!7206 = !DILocation(line: 2090, column: 13, scope: !7091)
!7207 = !DILocation(line: 2090, column: 13, scope: !7090)
!7208 = !DILocation(line: 2093, column: 11, scope: !7088)
!7209 = !DILocation(line: 2094, column: 9, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2093, column: 11)
!7211 = !DILocation(line: 2105, column: 13, scope: !7093)
!7212 = !DILocation(line: 0, scope: !7093)
!7213 = !DILocation(line: 2106, column: 13, scope: !7093)
!7214 = !DILocation(line: 2108, column: 7, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 2108, column: 6)
!7216 = !DILocation(line: 2108, column: 23, scope: !7215)
!7217 = !DILocation(line: 2108, column: 35, scope: !7215)
!7218 = !DILocation(line: 2108, column: 54, scope: !7215)
!7219 = !DILocation(line: 2109, column: 7, scope: !7215)
!7220 = !DILocation(line: 2109, column: 26, scope: !7215)
!7221 = !DILocation(line: 2110, column: 6, scope: !7215)
!7222 = !DILocation(line: 2110, column: 10, scope: !7215)
!7223 = !DILocation(line: 2110, column: 26, scope: !7215)
!7224 = !DILocation(line: 2110, column: 38, scope: !7215)
!7225 = !DILocation(line: 2110, column: 57, scope: !7215)
!7226 = !DILocation(line: 2111, column: 3, scope: !7215)
!7227 = !DILocation(line: 2111, column: 22, scope: !7215)
!7228 = !DILocation(line: 2108, column: 6, scope: !7093)
!7229 = !DILocation(line: 2113, column: 6, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 2112, column: 4)
!7231 = !DILocation(line: 2114, column: 6, scope: !7230)
!7232 = !DILocation(line: 2115, column: 6, scope: !7230)
!7233 = !DILocation(line: 2123, column: 11, scope: !7102)
!7234 = !DILocation(line: 2123, column: 33, scope: !7102)
!7235 = !DILocation(line: 2124, column: 11, scope: !7102)
!7236 = !DILocation(line: 2124, column: 14, scope: !7102)
!7237 = !DILocation(line: 2124, column: 31, scope: !7102)
!7238 = !DILocation(line: 2123, column: 11, scope: !7088)
!7239 = !DILocation(line: 2127, column: 38, scope: !7101)
!7240 = !DILocation(line: 2128, column: 16, scope: !7101)
!7241 = !DILocation(line: 2128, column: 19, scope: !7101)
!7242 = !DILocation(line: 2128, column: 36, scope: !7101)
!7243 = !DILocation(line: 2127, column: 16, scope: !7102)
!7244 = !DILocation(line: 2131, column: 11, scope: !7100)
!7245 = !DILocation(line: 2132, column: 16, scope: !7100)
!7246 = !DILocation(line: 2135, column: 8, scope: !7099)
!7247 = !DILocation(line: 2135, column: 25, scope: !7099)
!7248 = !DILocation(line: 2136, column: 3, scope: !7099)
!7249 = !DILocation(line: 2136, column: 23, scope: !7099)
!7250 = !DILocation(line: 2137, column: 8, scope: !7099)
!7251 = !DILocation(line: 2137, column: 28, scope: !7099)
!7252 = !DILocation(line: 2135, column: 8, scope: !7100)
!7253 = !DILocation(line: 2142, column: 11, scope: !7098)
!7254 = !DILocation(line: 2143, column: 11, scope: !7098)
!7255 = !DILocation(line: 2141, column: 20, scope: !7098)
!7256 = !DILocation(line: 2146, column: 12, scope: !7097)
!7257 = !DILocation(line: 2146, column: 29, scope: !7097)
!7258 = !DILocation(line: 2146, column: 12, scope: !7098)
!7259 = !DILocation(line: 2148, column: 16, scope: !7096)
!7260 = !DILocation(line: 0, scope: !7096)
!7261 = !DILocation(line: 2149, column: 16, scope: !7096)
!7262 = !DILocation(line: 2150, column: 22, scope: !7096)
!7263 = !DILocation(line: 2151, column: 22, scope: !7096)
!7264 = !DILocation(line: 2156, column: 10, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 2156, column: 9)
!7266 = !DILocation(line: 2156, column: 26, scope: !7265)
!7267 = !DILocation(line: 2157, column: 10, scope: !7265)
!7268 = !DILocation(line: 2157, column: 35, scope: !7265)
!7269 = !DILocation(line: 2157, column: 13, scope: !7265)
!7270 = !DILocation(line: 2158, column: 10, scope: !7265)
!7271 = !DILocation(line: 2158, column: 35, scope: !7265)
!7272 = !DILocation(line: 2158, column: 13, scope: !7265)
!7273 = !DILocation(line: 2159, column: 9, scope: !7265)
!7274 = !DILocation(line: 2159, column: 13, scope: !7265)
!7275 = !DILocation(line: 2159, column: 29, scope: !7265)
!7276 = !DILocation(line: 2160, column: 6, scope: !7265)
!7277 = !DILocation(line: 2160, column: 31, scope: !7265)
!7278 = !DILocation(line: 2160, column: 9, scope: !7265)
!7279 = !DILocation(line: 2161, column: 6, scope: !7265)
!7280 = !DILocation(line: 2162, column: 12, scope: !7265)
!7281 = !DILocation(line: 2161, column: 9, scope: !7265)
!7282 = !DILocation(line: 2156, column: 9, scope: !7096)
!7283 = !DILocation(line: 2166, column: 15, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 2166, column: 14)
!7285 = !DILocation(line: 2166, column: 31, scope: !7284)
!7286 = !DILocation(line: 2167, column: 11, scope: !7284)
!7287 = !DILocation(line: 2167, column: 8, scope: !7284)
!7288 = !DILocation(line: 2168, column: 11, scope: !7284)
!7289 = !DILocation(line: 2169, column: 7, scope: !7284)
!7290 = !DILocation(line: 2169, column: 11, scope: !7284)
!7291 = !DILocation(line: 2169, column: 27, scope: !7284)
!7292 = !DILocation(line: 2170, column: 14, scope: !7284)
!7293 = !DILocation(line: 2170, column: 11, scope: !7284)
!7294 = !DILocation(line: 2171, column: 14, scope: !7284)
!7295 = !DILocation(line: 2166, column: 14, scope: !7265)
!7296 = !DILocation(line: 2173, column: 3, scope: !7097)
!7297 = !DILocation(line: 0, scope: !7100)
!7298 = !DILocation(line: 2176, column: 8, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 2176, column: 8)
!7300 = !DILocation(line: 2176, column: 32, scope: !7299)
!7301 = !DILocation(line: 2176, column: 30, scope: !7299)
!7302 = !DILocation(line: 2176, column: 8, scope: !7100)
!7303 = !DILocation(line: 2181, column: 36, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2181, column: 13)
!7305 = !DILocation(line: 2182, column: 7, scope: !7304)
!7306 = !DILocation(line: 2186, column: 10, scope: !7304)
!7307 = !DILocation(line: 2182, column: 10, scope: !7304)
!7308 = !DILocation(line: 2182, column: 39, scope: !7304)
!7309 = !DILocation(line: 2182, column: 36, scope: !7304)
!7310 = !DILocation(line: 2186, column: 6, scope: !7304)
!7311 = !DILocation(line: 2186, column: 31, scope: !7304)
!7312 = !DILocation(line: 2186, column: 35, scope: !7304)
!7313 = !DILocation(line: 2181, column: 13, scope: !7299)
!7314 = !DILocation(line: 2187, column: 6, scope: !7304)
!7315 = !DILocation(line: 2196, column: 16, scope: !7108)
!7316 = !DILocation(line: 2196, column: 19, scope: !7108)
!7317 = !DILocation(line: 2196, column: 36, scope: !7108)
!7318 = !DILocation(line: 2195, column: 16, scope: !7101)
!7319 = !DILocation(line: 2199, column: 11, scope: !7107)
!7320 = !DILocation(line: 2202, column: 11, scope: !7107)
!7321 = !DILocation(line: 2203, column: 16, scope: !7107)
!7322 = !DILocation(line: 2205, column: 28, scope: !7107)
!7323 = !DILocation(line: 0, scope: !7107)
!7324 = !DILocation(line: 2206, column: 29, scope: !7107)
!7325 = !DILocation(line: 2207, column: 28, scope: !7107)
!7326 = !DILocation(line: 2208, column: 29, scope: !7107)
!7327 = !DILocation(line: 2210, column: 37, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 2210, column: 15)
!7329 = !DILocation(line: 2210, column: 16, scope: !7328)
!7330 = !DILocation(line: 2211, column: 15, scope: !7328)
!7331 = !DILocation(line: 2211, column: 40, scope: !7328)
!7332 = !DILocation(line: 2211, column: 19, scope: !7328)
!7333 = !DILocation(line: 2210, column: 15, scope: !7107)
!7334 = !DILocation(line: 2212, column: 13, scope: !7328)
!7335 = !DILocation(line: 2213, column: 9, scope: !7108)
!7336 = !DILocation(line: 2213, column: 9, scope: !7107)
!7337 = !DILocation(line: 2217, column: 16, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 2216, column: 16)
!7339 = !DILocation(line: 2217, column: 19, scope: !7338)
!7340 = !DILocation(line: 2217, column: 36, scope: !7338)
!7341 = !DILocation(line: 2218, column: 16, scope: !7338)
!7342 = !DILocation(line: 2218, column: 19, scope: !7338)
!7343 = !DILocation(line: 2218, column: 43, scope: !7338)
!7344 = !DILocation(line: 2218, column: 41, scope: !7338)
!7345 = !DILocation(line: 2216, column: 16, scope: !7108)
!7346 = !DILocation(line: 0, scope: !7102)
!7347 = !DILocation(line: 2222, column: 11, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2222, column: 11)
!7349 = !DILocation(line: 2222, column: 11, scope: !7088)
!7350 = !DILocation(line: 2223, column: 9, scope: !7348)
!7351 = !DILocation(line: 2227, column: 1, scope: !7067)
!7352 = distinct !DISubprogram(name: "c_common_unsigned_type", scope: !3, file: !3, line: 3107, type: !5693, scopeLine: 3108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7353)
!7353 = !{!7354}
!7354 = !DILocalVariable(name: "type", arg: 1, scope: !7352, file: !3, line: 3107, type: !1527)
!7355 = !DILocation(line: 0, scope: !7352)
!7356 = !DILocation(line: 3109, column: 10, scope: !7352)
!7357 = !DILocation(line: 3109, column: 3, scope: !7352)
!7358 = distinct !DISubprogram(name: "convert_and_check", scope: !3, file: !3, line: 2284, type: !7359, scopeLine: 2285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7361)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{!1527, !1527, !1527}
!7361 = !{!7362, !7363, !7364, !7365, !7366}
!7362 = !DILocalVariable(name: "type", arg: 1, scope: !7358, file: !3, line: 2284, type: !1527)
!7363 = !DILocalVariable(name: "expr", arg: 2, scope: !7358, file: !3, line: 2284, type: !1527)
!7364 = !DILocalVariable(name: "result", scope: !7358, file: !3, line: 2286, type: !1527)
!7365 = !DILocalVariable(name: "expr_for_warning", scope: !7358, file: !3, line: 2287, type: !1527)
!7366 = !DILocalVariable(name: "orig_type", scope: !7367, file: !3, line: 2294, type: !1527)
!7367 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 2293, column: 5)
!7368 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 2292, column: 7)
!7369 = !DILocation(line: 0, scope: !7358)
!7370 = !DILocation(line: 2292, column: 7, scope: !7368)
!7371 = !DILocation(line: 2292, column: 24, scope: !7368)
!7372 = !DILocation(line: 2292, column: 7, scope: !7358)
!7373 = !DILocation(line: 2294, column: 24, scope: !7367)
!7374 = !DILocation(line: 0, scope: !7367)
!7375 = !DILocation(line: 2295, column: 14, scope: !7367)
!7376 = !DILocation(line: 2296, column: 26, scope: !7367)
!7377 = !DILocation(line: 2297, column: 21, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 2297, column: 11)
!7379 = !DILocation(line: 0, scope: !7368)
!7380 = !DILocation(line: 2303, column: 7, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 2303, column: 7)
!7382 = !DILocation(line: 2303, column: 24, scope: !7381)
!7383 = !DILocation(line: 2303, column: 7, scope: !7358)
!7384 = !DILocation(line: 2306, column: 12, scope: !7358)
!7385 = !DILocation(line: 2308, column: 7, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 2308, column: 7)
!7387 = !DILocation(line: 2308, column: 37, scope: !7386)
!7388 = !DILocation(line: 2309, column: 7, scope: !7386)
!7389 = !DILocation(line: 2309, column: 11, scope: !7386)
!7390 = !DILocation(line: 2310, column: 7, scope: !7386)
!7391 = !DILocation(line: 2310, column: 20, scope: !7386)
!7392 = !DILocation(line: 2310, column: 17, scope: !7386)
!7393 = !DILocation(line: 2308, column: 7, scope: !7358)
!7394 = !DILocation(line: 2311, column: 5, scope: !7386)
!7395 = !DILocation(line: 2314, column: 1, scope: !7358)
!7396 = distinct !DISubprogram(name: "verify_sequence_points", scope: !3, file: !3, line: 2708, type: !6221, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7397)
!7397 = !{!7398, !7399, !7400}
!7398 = !DILocalVariable(name: "expr", arg: 1, scope: !7396, file: !3, line: 2708, type: !1527)
!7399 = !DILocalVariable(name: "before_sp", scope: !7396, file: !3, line: 2710, type: !2847)
!7400 = !DILocalVariable(name: "after_sp", scope: !7396, file: !3, line: 2710, type: !2847)
!7401 = !DILocation(line: 0, scope: !7396)
!7402 = !DILocation(line: 2710, column: 3, scope: !7396)
!7403 = !DILocation(line: 2710, column: 17, scope: !7396)
!7404 = !DILocation(line: 2710, column: 33, scope: !7396)
!7405 = !DILocation(line: 2712, column: 14, scope: !7396)
!7406 = !DILocation(line: 2713, column: 19, scope: !7396)
!7407 = !DILocation(line: 2714, column: 7, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 2714, column: 7)
!7409 = !DILocation(line: 2714, column: 22, scope: !7408)
!7410 = !DILocation(line: 2714, column: 7, scope: !7396)
!7411 = !DILocation(line: 2716, column: 7, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 2715, column: 5)
!7413 = !DILocation(line: 2717, column: 33, scope: !7412)
!7414 = !DILocation(line: 2717, column: 22, scope: !7412)
!7415 = !DILocation(line: 2718, column: 5, scope: !7412)
!7416 = !DILocation(line: 2720, column: 3, scope: !7396)
!7417 = !DILocation(line: 2721, column: 24, scope: !7396)
!7418 = !DILocation(line: 2721, column: 3, scope: !7396)
!7419 = !DILocation(line: 2722, column: 3, scope: !7396)
!7420 = !DILocation(line: 2723, column: 1, scope: !7396)
!7421 = distinct !DISubprogram(name: "verify_tree", scope: !3, file: !3, line: 2512, type: !7422, scopeLine: 2514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7425)
!7422 = !DISubroutineType(types: !7423)
!7423 = !{null, !1527, !7424, !7424, !1527}
!7424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!7425 = !{!7426, !7427, !7428, !7429, !7430, !7431, !7432, !7433, !7434, !7435, !7436, !7445, !7446, !7448, !7452, !7456, !7457}
!7426 = !DILocalVariable(name: "x", arg: 1, scope: !7421, file: !3, line: 2512, type: !1527)
!7427 = !DILocalVariable(name: "pbefore_sp", arg: 2, scope: !7421, file: !3, line: 2512, type: !7424)
!7428 = !DILocalVariable(name: "pno_sp", arg: 3, scope: !7421, file: !3, line: 2512, type: !7424)
!7429 = !DILocalVariable(name: "writer", arg: 4, scope: !7421, file: !3, line: 2513, type: !1527)
!7430 = !DILocalVariable(name: "tmp_before", scope: !7421, file: !3, line: 2515, type: !2847)
!7431 = !DILocalVariable(name: "tmp_nosp", scope: !7421, file: !3, line: 2515, type: !2847)
!7432 = !DILocalVariable(name: "tmp_list2", scope: !7421, file: !3, line: 2515, type: !2847)
!7433 = !DILocalVariable(name: "tmp_list3", scope: !7421, file: !3, line: 2515, type: !2847)
!7434 = !DILocalVariable(name: "code", scope: !7421, file: !3, line: 2516, type: !139)
!7435 = !DILocalVariable(name: "cl", scope: !7421, file: !3, line: 2517, type: !1228)
!7436 = !DILocalVariable(name: "iter", scope: !7437, file: !3, line: 2609, type: !7439)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 2608, column: 7)
!7438 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 2532, column: 5)
!7439 = !DIDerivedType(tag: DW_TAG_typedef, name: "call_expr_arg_iterator", file: !140, line: 5364, baseType: !7440)
!7440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "call_expr_arg_iterator_d", file: !140, line: 5360, size: 128, elements: !7441)
!7441 = !{!7442, !7443, !7444}
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !7440, file: !140, line: 5361, baseType: !1527, size: 64)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !7440, file: !140, line: 5362, baseType: !1520, size: 32, offset: 64)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !7440, file: !140, line: 5363, baseType: !1520, size: 32, offset: 96)
!7445 = !DILocalVariable(name: "arg", scope: !7437, file: !3, line: 2610, type: !1527)
!7446 = !DILocalVariable(name: "t", scope: !7447, file: !3, line: 2640, type: !2842)
!7447 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 2639, column: 7)
!7448 = !DILocalVariable(name: "t", scope: !7449, file: !3, line: 2659, type: !2847)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 2658, column: 8)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 2646, column: 4)
!7451 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 2645, column: 6)
!7452 = !DILocalVariable(name: "lp", scope: !7453, file: !3, line: 2690, type: !1520)
!7453 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 2689, column: 2)
!7454 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 2688, column: 16)
!7455 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 2682, column: 11)
!7456 = !DILocalVariable(name: "max", scope: !7453, file: !3, line: 2691, type: !1520)
!7457 = !DILabel(scope: !7421, name: "restart", file: !3, line: 2524)
!7458 = !DILocation(line: 0, scope: !7421)
!7459 = !DILocation(line: 2515, column: 3, scope: !7421)
!7460 = !DILocation(line: 2521, column: 9, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 2521, column: 7)
!7462 = !DILocation(line: 2521, column: 7, scope: !7421)
!7463 = !DILocation(line: 2528, column: 7, scope: !7421)
!7464 = !DILocation(line: 2524, column: 2, scope: !7421)
!7465 = !DILocation(line: 2525, column: 10, scope: !7421)
!7466 = !DILocation(line: 2526, column: 8, scope: !7421)
!7467 = !DILocation(line: 2528, column: 7, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 2528, column: 7)
!7469 = !DILocation(line: 2529, column: 26, scope: !7468)
!7470 = !DILocation(line: 2529, column: 15, scope: !7468)
!7471 = !DILocation(line: 2529, column: 13, scope: !7468)
!7472 = !DILocation(line: 2529, column: 5, scope: !7468)
!7473 = !DILocation(line: 2531, column: 3, scope: !7421)
!7474 = !DILocation(line: 2628, column: 7, scope: !7438)
!7475 = !DILocation(line: 2539, column: 41, scope: !7438)
!7476 = !DILocation(line: 2539, column: 29, scope: !7438)
!7477 = !DILocation(line: 2539, column: 18, scope: !7438)
!7478 = !DILocation(line: 2540, column: 20, scope: !7438)
!7479 = !DILocation(line: 2540, column: 7, scope: !7438)
!7480 = !DILocation(line: 2541, column: 28, scope: !7438)
!7481 = !DILocation(line: 2541, column: 7, scope: !7438)
!7482 = !DILocation(line: 2542, column: 32, scope: !7438)
!7483 = !DILocation(line: 2542, column: 7, scope: !7438)
!7484 = !DILocation(line: 2543, column: 32, scope: !7438)
!7485 = !DILocation(line: 2543, column: 7, scope: !7438)
!7486 = !DILocation(line: 2544, column: 20, scope: !7438)
!7487 = !DILocation(line: 2544, column: 7, scope: !7438)
!7488 = !DILocation(line: 2545, column: 32, scope: !7438)
!7489 = !DILocation(line: 2545, column: 7, scope: !7438)
!7490 = !DILocation(line: 2546, column: 7, scope: !7438)
!7491 = !DILocation(line: 2549, column: 30, scope: !7438)
!7492 = !DILocation(line: 2549, column: 18, scope: !7438)
!7493 = !DILocation(line: 2550, column: 20, scope: !7438)
!7494 = !DILocation(line: 2550, column: 7, scope: !7438)
!7495 = !DILocation(line: 2551, column: 28, scope: !7438)
!7496 = !DILocation(line: 2551, column: 7, scope: !7438)
!7497 = !DILocation(line: 2552, column: 32, scope: !7438)
!7498 = !DILocation(line: 2552, column: 7, scope: !7438)
!7499 = !DILocation(line: 2553, column: 32, scope: !7438)
!7500 = !DILocation(line: 2553, column: 7, scope: !7438)
!7501 = !DILocation(line: 2555, column: 28, scope: !7438)
!7502 = !DILocation(line: 2555, column: 17, scope: !7438)
!7503 = !DILocation(line: 2556, column: 20, scope: !7438)
!7504 = !DILocation(line: 2556, column: 7, scope: !7438)
!7505 = !DILocation(line: 2557, column: 28, scope: !7438)
!7506 = !DILocation(line: 2557, column: 7, scope: !7438)
!7507 = !DILocation(line: 2558, column: 32, scope: !7438)
!7508 = !DILocation(line: 2558, column: 7, scope: !7438)
!7509 = !DILocation(line: 2560, column: 29, scope: !7438)
!7510 = !DILocation(line: 2560, column: 17, scope: !7438)
!7511 = !DILocation(line: 2561, column: 20, scope: !7438)
!7512 = !DILocation(line: 2561, column: 7, scope: !7438)
!7513 = !DILocation(line: 2562, column: 28, scope: !7438)
!7514 = !DILocation(line: 2562, column: 7, scope: !7438)
!7515 = !DILocation(line: 2563, column: 32, scope: !7438)
!7516 = !DILocation(line: 2563, column: 7, scope: !7438)
!7517 = !DILocation(line: 2566, column: 31, scope: !7438)
!7518 = !DILocation(line: 2566, column: 7, scope: !7438)
!7519 = !DILocation(line: 2567, column: 26, scope: !7438)
!7520 = !DILocation(line: 2567, column: 7, scope: !7438)
!7521 = !DILocation(line: 2568, column: 7, scope: !7438)
!7522 = !DILocation(line: 2574, column: 20, scope: !7438)
!7523 = !DILocation(line: 2574, column: 7, scope: !7438)
!7524 = !DILocation(line: 2575, column: 7, scope: !7438)
!7525 = !DILocation(line: 2578, column: 41, scope: !7438)
!7526 = !DILocation(line: 2578, column: 29, scope: !7438)
!7527 = !DILocation(line: 2578, column: 18, scope: !7438)
!7528 = !DILocation(line: 2579, column: 20, scope: !7438)
!7529 = !DILocation(line: 2579, column: 7, scope: !7438)
!7530 = !DILocation(line: 2580, column: 20, scope: !7438)
!7531 = !DILocation(line: 2580, column: 7, scope: !7438)
!7532 = !DILocation(line: 2589, column: 31, scope: !7438)
!7533 = !DILocation(line: 2589, column: 7, scope: !7438)
!7534 = !DILocation(line: 2590, column: 28, scope: !7438)
!7535 = !DILocation(line: 2590, column: 7, scope: !7438)
!7536 = !DILocation(line: 2595, column: 26, scope: !7438)
!7537 = !DILocation(line: 2595, column: 7, scope: !7438)
!7538 = !DILocation(line: 2596, column: 30, scope: !7438)
!7539 = !DILocation(line: 2596, column: 54, scope: !7438)
!7540 = !DILocation(line: 2596, column: 7, scope: !7438)
!7541 = !DILocation(line: 2598, column: 32, scope: !7438)
!7542 = !DILocation(line: 2598, column: 7, scope: !7438)
!7543 = !DILocation(line: 2599, column: 32, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 2599, column: 11)
!7545 = !DILocation(line: 2599, column: 11, scope: !7544)
!7546 = !DILocation(line: 2599, column: 11, scope: !7438)
!7547 = !DILocation(line: 2600, column: 43, scope: !7544)
!7548 = !DILocation(line: 2600, column: 26, scope: !7544)
!7549 = !DILocation(line: 2600, column: 2, scope: !7544)
!7550 = !DILocation(line: 2601, column: 26, scope: !7438)
!7551 = !DILocation(line: 2601, column: 7, scope: !7438)
!7552 = !DILocation(line: 2602, column: 7, scope: !7438)
!7553 = !DILocation(line: 2609, column: 2, scope: !7437)
!7554 = !DILocation(line: 2611, column: 24, scope: !7437)
!7555 = !DILocation(line: 2611, column: 13, scope: !7437)
!7556 = !DILocation(line: 2612, column: 15, scope: !7437)
!7557 = !DILocation(line: 2612, column: 2, scope: !7437)
!7558 = !DILocation(line: 0, scope: !7437)
!7559 = !DILocation(line: 2613, column: 2, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 2613, column: 2)
!7561 = !DILocation(line: 0, scope: !7560)
!7562 = !DILocation(line: 2615, column: 28, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 2614, column: 4)
!7564 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2613, column: 2)
!7565 = !DILocation(line: 2615, column: 16, scope: !7563)
!7566 = !DILocation(line: 2616, column: 6, scope: !7563)
!7567 = !DILocation(line: 2617, column: 31, scope: !7563)
!7568 = !DILocation(line: 2617, column: 6, scope: !7563)
!7569 = !DILocation(line: 2618, column: 30, scope: !7563)
!7570 = !DILocation(line: 2618, column: 6, scope: !7563)
!7571 = !DILocation(line: 2613, column: 2, scope: !7564)
!7572 = distinct !{!7572, !7559, !7573}
!7573 = !DILocation(line: 2619, column: 4, scope: !7560)
!7574 = !DILocation(line: 2620, column: 26, scope: !7437)
!7575 = !DILocation(line: 2620, column: 2, scope: !7437)
!7576 = !DILocation(line: 2621, column: 23, scope: !7437)
!7577 = !DILocation(line: 2621, column: 2, scope: !7437)
!7578 = !DILocation(line: 2622, column: 25, scope: !7437)
!7579 = !DILocation(line: 2622, column: 2, scope: !7437)
!7580 = !DILocation(line: 2624, column: 7, scope: !7438)
!7581 = !DILocation(line: 2630, column: 26, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 2629, column: 2)
!7583 = !DILocation(line: 2630, column: 15, scope: !7582)
!7584 = !DILocation(line: 2631, column: 17, scope: !7582)
!7585 = !DILocation(line: 2631, column: 4, scope: !7582)
!7586 = !DILocation(line: 2632, column: 28, scope: !7582)
!7587 = !DILocation(line: 2632, column: 4, scope: !7582)
!7588 = !DILocation(line: 2633, column: 23, scope: !7582)
!7589 = !DILocation(line: 2633, column: 4, scope: !7582)
!7590 = !DILocation(line: 2634, column: 8, scope: !7582)
!7591 = distinct !{!7591, !7474, !7592}
!7592 = !DILocation(line: 2635, column: 2, scope: !7438)
!7593 = !DILocation(line: 2641, column: 7, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 2641, column: 2)
!7595 = !DILocation(line: 0, scope: !7594)
!7596 = !DILocation(line: 0, scope: !7447)
!7597 = !DILocation(line: 2641, column: 2, scope: !7594)
!7598 = !DILocation(line: 2642, column: 30, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 2642, column: 8)
!7600 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 2641, column: 2)
!7601 = !DILocation(line: 2642, column: 8, scope: !7599)
!7602 = !DILocation(line: 2642, column: 8, scope: !7600)
!7603 = !DILocation(line: 2641, column: 38, scope: !7600)
!7604 = !DILocation(line: 2641, column: 2, scope: !7600)
!7605 = distinct !{!7605, !7597, !7606}
!7606 = !DILocation(line: 2643, column: 6, scope: !7594)
!7607 = !DILocation(line: 2666, column: 30, scope: !7447)
!7608 = !DILocation(line: 2645, column: 6, scope: !7447)
!7609 = !DILocation(line: 2647, column: 10, scope: !7450)
!7610 = !DILocation(line: 2648, column: 16, scope: !7450)
!7611 = !DILocation(line: 2648, column: 14, scope: !7450)
!7612 = !DILocation(line: 2649, column: 9, scope: !7450)
!7613 = !DILocation(line: 2649, column: 14, scope: !7450)
!7614 = !DILocation(line: 2650, column: 22, scope: !7450)
!7615 = !DILocation(line: 2652, column: 28, scope: !7450)
!7616 = !DILocation(line: 2652, column: 17, scope: !7450)
!7617 = !DILocation(line: 2653, column: 19, scope: !7450)
!7618 = !DILocation(line: 2653, column: 6, scope: !7450)
!7619 = !DILocation(line: 2654, column: 27, scope: !7450)
!7620 = !DILocation(line: 2654, column: 6, scope: !7450)
!7621 = !DILocation(line: 2656, column: 16, scope: !7450)
!7622 = !DILocation(line: 0, scope: !7449)
!7623 = !DILocation(line: 2657, column: 6, scope: !7450)
!7624 = !DILocation(line: 2657, column: 13, scope: !7450)
!7625 = !DILocation(line: 2660, column: 17, scope: !7449)
!7626 = !DILocation(line: 2660, column: 12, scope: !7449)
!7627 = !DILocation(line: 2661, column: 3, scope: !7449)
!7628 = distinct !{!7628, !7623, !7629}
!7629 = !DILocation(line: 2662, column: 8, scope: !7450)
!7630 = !DILocation(line: 2663, column: 27, scope: !7450)
!7631 = !DILocation(line: 2663, column: 9, scope: !7450)
!7632 = !DILocation(line: 2663, column: 25, scope: !7450)
!7633 = !DILocation(line: 2664, column: 26, scope: !7450)
!7634 = !DILocation(line: 2664, column: 9, scope: !7450)
!7635 = !DILocation(line: 2664, column: 24, scope: !7450)
!7636 = !DILocation(line: 2665, column: 4, scope: !7450)
!7637 = !DILocation(line: 2666, column: 2, scope: !7447)
!7638 = !DILocation(line: 2667, column: 24, scope: !7447)
!7639 = !DILocation(line: 2667, column: 2, scope: !7447)
!7640 = !DILocation(line: 2672, column: 11, scope: !7438)
!7641 = !DILocation(line: 2673, column: 11, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 2673, column: 11)
!7643 = !DILocation(line: 2673, column: 11, scope: !7438)
!7644 = !DILocation(line: 2682, column: 14, scope: !7455)
!7645 = !DILocation(line: 2682, column: 11, scope: !7438)
!7646 = !DILocation(line: 2684, column: 8, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 2683, column: 2)
!7648 = !DILocation(line: 2686, column: 4, scope: !7647)
!7649 = !DILocation(line: 2688, column: 16, scope: !7454)
!7650 = !DILocation(line: 2691, column: 14, scope: !7453)
!7651 = !DILocation(line: 0, scope: !7453)
!7652 = !DILocation(line: 0, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2693, column: 6)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 2692, column: 4)
!7655 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 2692, column: 4)
!7656 = !DILocation(line: 2692, column: 9, scope: !7655)
!7657 = !DILocation(line: 0, scope: !7655)
!7658 = !DILocation(line: 2692, column: 20, scope: !7654)
!7659 = !DILocation(line: 2692, column: 4, scope: !7655)
!7660 = !DILocation(line: 2694, column: 30, scope: !7653)
!7661 = !DILocation(line: 2694, column: 19, scope: !7653)
!7662 = !DILocation(line: 2695, column: 21, scope: !7653)
!7663 = !DILocation(line: 2695, column: 8, scope: !7653)
!7664 = !DILocation(line: 2696, column: 32, scope: !7653)
!7665 = !DILocation(line: 2696, column: 8, scope: !7653)
!7666 = !DILocation(line: 2697, column: 27, scope: !7653)
!7667 = !DILocation(line: 2697, column: 8, scope: !7653)
!7668 = !DILocation(line: 2692, column: 29, scope: !7654)
!7669 = !DILocation(line: 2692, column: 4, scope: !7654)
!7670 = distinct !{!7670, !7659, !7671}
!7671 = !DILocation(line: 2698, column: 6, scope: !7655)
!7672 = !DILocation(line: 2702, column: 1, scope: !7421)
!7673 = distinct !DISubprogram(name: "warn_for_collisions", scope: !3, file: !3, line: 2457, type: !7674, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7676)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{null, !2847}
!7676 = !{!7677, !7678}
!7677 = !DILocalVariable(name: "list", arg: 1, scope: !7673, file: !3, line: 2457, type: !2847)
!7678 = !DILocalVariable(name: "tmp", scope: !7673, file: !3, line: 2459, type: !2847)
!7679 = !DILocation(line: 0, scope: !7673)
!7680 = !DILocation(line: 2461, column: 8, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 2461, column: 3)
!7682 = !DILocation(line: 0, scope: !7681)
!7683 = !DILocation(line: 2461, column: 3, scope: !7681)
!7684 = !DILocation(line: 2463, column: 16, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 2463, column: 11)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 2462, column: 5)
!7687 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 2461, column: 3)
!7688 = !DILocation(line: 2463, column: 11, scope: !7685)
!7689 = !DILocation(line: 2463, column: 11, scope: !7686)
!7690 = !DILocation(line: 2464, column: 30, scope: !7685)
!7691 = !DILocation(line: 2464, column: 2, scope: !7685)
!7692 = !DILocation(line: 2461, column: 36, scope: !7687)
!7693 = !DILocation(line: 2461, column: 3, scope: !7687)
!7694 = distinct !{!7694, !7683, !7695}
!7695 = !DILocation(line: 2465, column: 5, scope: !7681)
!7696 = !DILocation(line: 2466, column: 1, scope: !7673)
!7697 = distinct !DISubprogram(name: "c_common_type_for_size", scope: !3, file: !3, line: 2836, type: !7698, scopeLine: 2837, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7700)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!1527, !7, !1520}
!7700 = !{!7701, !7702}
!7701 = !DILocalVariable(name: "bits", arg: 1, scope: !7697, file: !3, line: 2836, type: !7)
!7702 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !7697, file: !3, line: 2836, type: !1520)
!7703 = !DILocation(line: 0, scope: !7697)
!7704 = !DILocation(line: 2838, column: 15, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2838, column: 7)
!7706 = !DILocation(line: 2838, column: 12, scope: !7705)
!7707 = !DILocation(line: 2838, column: 7, scope: !7697)
!7708 = !DILocation(line: 2839, column: 12, scope: !7705)
!7709 = !DILocation(line: 2841, column: 15, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2841, column: 7)
!7711 = !DILocation(line: 2841, column: 12, scope: !7710)
!7712 = !DILocation(line: 2841, column: 7, scope: !7697)
!7713 = !DILocation(line: 2842, column: 12, scope: !7710)
!7714 = !DILocation(line: 2844, column: 15, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2844, column: 7)
!7716 = !DILocation(line: 2844, column: 12, scope: !7715)
!7717 = !DILocation(line: 2844, column: 7, scope: !7697)
!7718 = !DILocation(line: 2845, column: 12, scope: !7715)
!7719 = !DILocation(line: 2847, column: 15, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2847, column: 7)
!7721 = !DILocation(line: 2847, column: 12, scope: !7720)
!7722 = !DILocation(line: 2847, column: 7, scope: !7697)
!7723 = !DILocation(line: 2848, column: 12, scope: !7720)
!7724 = !DILocation(line: 2850, column: 15, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2850, column: 7)
!7726 = !DILocation(line: 2850, column: 12, scope: !7725)
!7727 = !DILocation(line: 2850, column: 7, scope: !7697)
!7728 = !DILocation(line: 2851, column: 13, scope: !7725)
!7729 = !DILocation(line: 2854, column: 15, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2854, column: 7)
!7731 = !DILocation(line: 2854, column: 12, scope: !7730)
!7732 = !DILocation(line: 2854, column: 7, scope: !7697)
!7733 = !DILocation(line: 2855, column: 13, scope: !7730)
!7734 = !DILocation(line: 2858, column: 15, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2858, column: 7)
!7736 = !DILocation(line: 2858, column: 12, scope: !7735)
!7737 = !DILocation(line: 2858, column: 7, scope: !7697)
!7738 = !DILocation(line: 2859, column: 12, scope: !7735)
!7739 = !DILocation(line: 2861, column: 15, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2861, column: 7)
!7741 = !DILocation(line: 2861, column: 12, scope: !7740)
!7742 = !DILocation(line: 2861, column: 7, scope: !7697)
!7743 = !DILocation(line: 2862, column: 12, scope: !7740)
!7744 = !DILocation(line: 2864, column: 15, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2864, column: 7)
!7746 = !DILocation(line: 2864, column: 12, scope: !7745)
!7747 = !DILocation(line: 2864, column: 7, scope: !7697)
!7748 = !DILocation(line: 2865, column: 12, scope: !7745)
!7749 = !DILocation(line: 2867, column: 15, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2867, column: 7)
!7751 = !DILocation(line: 2867, column: 12, scope: !7750)
!7752 = !DILocation(line: 2867, column: 7, scope: !7697)
!7753 = !DILocation(line: 2868, column: 12, scope: !7750)
!7754 = !DILocation(line: 2871, column: 1, scope: !7697)
!7755 = distinct !DISubprogram(name: "c_common_fixed_point_type_for_size", scope: !3, file: !3, line: 2878, type: !7756, scopeLine: 2880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7758)
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!1527, !7, !7, !1520, !1520}
!7758 = !{!7759, !7760, !7761, !7762, !7763}
!7759 = !DILocalVariable(name: "ibit", arg: 1, scope: !7755, file: !3, line: 2878, type: !7)
!7760 = !DILocalVariable(name: "fbit", arg: 2, scope: !7755, file: !3, line: 2878, type: !7)
!7761 = !DILocalVariable(name: "unsignedp", arg: 3, scope: !7755, file: !3, line: 2879, type: !1520)
!7762 = !DILocalVariable(name: "satp", arg: 4, scope: !7755, file: !3, line: 2879, type: !1520)
!7763 = !DILocalVariable(name: "mode", scope: !7755, file: !3, line: 2881, type: !11)
!7764 = !DILocation(line: 0, scope: !7755)
!7765 = !DILocation(line: 2882, column: 12, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 2882, column: 7)
!7767 = !DILocation(line: 0, scope: !7766)
!7768 = !DILocation(line: 2882, column: 7, scope: !7755)
!7769 = !DILocation(line: 2887, column: 3, scope: !7755)
!7770 = !DILocation(line: 2887, column: 3, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 2887, column: 3)
!7772 = !DILocation(line: 2888, column: 9, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 2888, column: 9)
!7774 = distinct !DILexicalBlock(scope: !7771, file: !3, line: 2887, column: 3)
!7775 = !DILocation(line: 2888, column: 30, scope: !7773)
!7776 = !DILocation(line: 2888, column: 38, scope: !7773)
!7777 = !DILocation(line: 2888, column: 41, scope: !7773)
!7778 = !DILocation(line: 2888, column: 62, scope: !7773)
!7779 = !DILocation(line: 2888, column: 9, scope: !7774)
!7780 = !DILocation(line: 2887, column: 35, scope: !7774)
!7781 = !DILocation(line: 2887, column: 3, scope: !7774)
!7782 = distinct !{!7782, !7770, !7783}
!7783 = !DILocation(line: 2889, column: 7, scope: !7771)
!7784 = !DILocation(line: 2891, column: 24, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 2891, column: 7)
!7786 = !DILocation(line: 2891, column: 36, scope: !7785)
!7787 = !DILocation(line: 2891, column: 28, scope: !7785)
!7788 = !DILocation(line: 2891, column: 7, scope: !7755)
!7789 = !DILocation(line: 2893, column: 7, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2892, column: 5)
!7791 = !DILocation(line: 2896, column: 7, scope: !7790)
!7792 = !DILocation(line: 2899, column: 10, scope: !7755)
!7793 = !DILocation(line: 2899, column: 3, scope: !7755)
!7794 = !DILocation(line: 2900, column: 1, scope: !7755)
!7795 = distinct !DISubprogram(name: "c_common_type_for_mode", scope: !3, file: !3, line: 2913, type: !7796, scopeLine: 2914, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7798)
!7796 = !DISubroutineType(types: !7797)
!7797 = !{!1527, !11, !1520}
!7798 = !{!7799, !7800, !7801, !7802, !7805, !7806, !7809}
!7799 = !DILocalVariable(name: "mode", arg: 1, scope: !7795, file: !3, line: 2913, type: !11)
!7800 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !7795, file: !3, line: 2913, type: !1520)
!7801 = !DILocalVariable(name: "t", scope: !7795, file: !3, line: 2915, type: !1527)
!7802 = !DILocalVariable(name: "inner_mode", scope: !7803, file: !3, line: 2977, type: !11)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 2976, column: 5)
!7804 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2975, column: 7)
!7805 = !DILocalVariable(name: "inner_type", scope: !7803, file: !3, line: 2978, type: !1527)
!7806 = !DILocalVariable(name: "inner_mode", scope: !7807, file: !3, line: 2997, type: !11)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 2996, column: 5)
!7808 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 2995, column: 12)
!7809 = !DILocalVariable(name: "inner_type", scope: !7807, file: !3, line: 2998, type: !1527)
!7810 = !DILocation(line: 0, scope: !7795)
!7811 = !DILocation(line: 2917, column: 15, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2917, column: 7)
!7813 = !DILocation(line: 2917, column: 12, scope: !7812)
!7814 = !DILocation(line: 2917, column: 7, scope: !7795)
!7815 = !DILocation(line: 2918, column: 12, scope: !7812)
!7816 = !DILocation(line: 2920, column: 15, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2920, column: 7)
!7818 = !DILocation(line: 2920, column: 12, scope: !7817)
!7819 = !DILocation(line: 2920, column: 7, scope: !7795)
!7820 = !DILocation(line: 2921, column: 12, scope: !7817)
!7821 = !DILocation(line: 2923, column: 15, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2923, column: 7)
!7823 = !DILocation(line: 2923, column: 12, scope: !7822)
!7824 = !DILocation(line: 2923, column: 7, scope: !7795)
!7825 = !DILocation(line: 2924, column: 12, scope: !7822)
!7826 = !DILocation(line: 2926, column: 15, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2926, column: 7)
!7828 = !DILocation(line: 2926, column: 12, scope: !7827)
!7829 = !DILocation(line: 2926, column: 7, scope: !7795)
!7830 = !DILocation(line: 2927, column: 12, scope: !7827)
!7831 = !DILocation(line: 2929, column: 15, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2929, column: 7)
!7833 = !DILocation(line: 2929, column: 12, scope: !7832)
!7834 = !DILocation(line: 2929, column: 7, scope: !7795)
!7835 = !DILocation(line: 2930, column: 12, scope: !7832)
!7836 = !DILocation(line: 2932, column: 15, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2932, column: 7)
!7838 = !DILocation(line: 2932, column: 12, scope: !7837)
!7839 = !DILocation(line: 2932, column: 7, scope: !7795)
!7840 = !DILocation(line: 2933, column: 12, scope: !7837)
!7841 = !DILocation(line: 2936, column: 7, scope: !7795)
!7842 = !DILocation(line: 2937, column: 12, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2936, column: 7)
!7844 = !DILocation(line: 2940, column: 12, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2939, column: 7)
!7846 = !DILocation(line: 2943, column: 12, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2942, column: 7)
!7848 = !DILocation(line: 2946, column: 12, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2945, column: 7)
!7850 = !DILocation(line: 2949, column: 15, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2949, column: 7)
!7852 = !DILocation(line: 2949, column: 12, scope: !7851)
!7853 = !DILocation(line: 2949, column: 7, scope: !7795)
!7854 = !DILocation(line: 2950, column: 12, scope: !7851)
!7855 = !DILocation(line: 2953, column: 15, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2953, column: 7)
!7857 = !DILocation(line: 2953, column: 12, scope: !7856)
!7858 = !DILocation(line: 2953, column: 7, scope: !7795)
!7859 = !DILocation(line: 2954, column: 12, scope: !7856)
!7860 = !DILocation(line: 2954, column: 5, scope: !7856)
!7861 = !DILocation(line: 2956, column: 15, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2956, column: 7)
!7863 = !DILocation(line: 2956, column: 12, scope: !7862)
!7864 = !DILocation(line: 2956, column: 7, scope: !7795)
!7865 = !DILocation(line: 2957, column: 12, scope: !7862)
!7866 = !DILocation(line: 2957, column: 5, scope: !7862)
!7867 = !DILocation(line: 2959, column: 15, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2959, column: 7)
!7869 = !DILocation(line: 2959, column: 12, scope: !7868)
!7870 = !DILocation(line: 2959, column: 7, scope: !7795)
!7871 = !DILocation(line: 2960, column: 12, scope: !7868)
!7872 = !DILocation(line: 2960, column: 5, scope: !7868)
!7873 = !DILocation(line: 2962, column: 15, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2962, column: 7)
!7875 = !DILocation(line: 2962, column: 12, scope: !7874)
!7876 = !DILocation(line: 2962, column: 7, scope: !7795)
!7877 = !DILocation(line: 2963, column: 12, scope: !7874)
!7878 = !DILocation(line: 2963, column: 5, scope: !7874)
!7879 = !DILocation(line: 2965, column: 15, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2965, column: 7)
!7881 = !DILocation(line: 2965, column: 12, scope: !7880)
!7882 = !DILocation(line: 2965, column: 7, scope: !7795)
!7883 = !DILocation(line: 2966, column: 13, scope: !7880)
!7884 = !DILocation(line: 0, scope: !7880)
!7885 = !DILocation(line: 2967, column: 8, scope: !7880)
!7886 = !DILocation(line: 2968, column: 8, scope: !7880)
!7887 = !DILocation(line: 2970, column: 15, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2970, column: 7)
!7889 = !DILocation(line: 2970, column: 12, scope: !7888)
!7890 = !DILocation(line: 2970, column: 7, scope: !7795)
!7891 = !DILocation(line: 2971, column: 13, scope: !7888)
!7892 = !DILocation(line: 0, scope: !7888)
!7893 = !DILocation(line: 2972, column: 8, scope: !7888)
!7894 = !DILocation(line: 2973, column: 8, scope: !7888)
!7895 = !DILocation(line: 2975, column: 7, scope: !7804)
!7896 = !DILocation(line: 2975, column: 7, scope: !7795)
!7897 = !DILocation(line: 2980, column: 19, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2980, column: 11)
!7899 = !DILocation(line: 2980, column: 16, scope: !7898)
!7900 = !DILocation(line: 2980, column: 11, scope: !7803)
!7901 = !DILocation(line: 2981, column: 9, scope: !7898)
!7902 = !DILocation(line: 2981, column: 2, scope: !7898)
!7903 = !DILocation(line: 2982, column: 19, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2982, column: 11)
!7905 = !DILocation(line: 2982, column: 16, scope: !7904)
!7906 = !DILocation(line: 2982, column: 11, scope: !7803)
!7907 = !DILocation(line: 2983, column: 9, scope: !7904)
!7908 = !DILocation(line: 2983, column: 2, scope: !7904)
!7909 = !DILocation(line: 2984, column: 19, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2984, column: 11)
!7911 = !DILocation(line: 2984, column: 16, scope: !7910)
!7912 = !DILocation(line: 2984, column: 11, scope: !7803)
!7913 = !DILocation(line: 2985, column: 9, scope: !7910)
!7914 = !DILocation(line: 2985, column: 2, scope: !7910)
!7915 = !DILocation(line: 2987, column: 19, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2987, column: 11)
!7917 = !DILocation(line: 2987, column: 16, scope: !7916)
!7918 = !DILocation(line: 2987, column: 61, scope: !7916)
!7919 = !DILocation(line: 2987, column: 57, scope: !7916)
!7920 = !DILocation(line: 2988, column: 9, scope: !7916)
!7921 = !DILocation(line: 2988, column: 2, scope: !7916)
!7922 = !DILocation(line: 2990, column: 20, scope: !7803)
!7923 = !DILocation(line: 0, scope: !7803)
!7924 = !DILocation(line: 2991, column: 20, scope: !7803)
!7925 = !DILocation(line: 2992, column: 22, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2992, column: 11)
!7927 = !DILocation(line: 2992, column: 11, scope: !7803)
!7928 = !DILocation(line: 2993, column: 9, scope: !7926)
!7929 = !DILocation(line: 2993, column: 2, scope: !7926)
!7930 = !DILocation(line: 2995, column: 12, scope: !7808)
!7931 = !DILocation(line: 2995, column: 12, scope: !7804)
!7932 = !DILocation(line: 2997, column: 38, scope: !7807)
!7933 = !DILocation(line: 0, scope: !7807)
!7934 = !DILocation(line: 2998, column: 25, scope: !7807)
!7935 = !DILocation(line: 2999, column: 22, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 2999, column: 11)
!7937 = !DILocation(line: 2999, column: 11, scope: !7807)
!7938 = !DILocation(line: 3000, column: 9, scope: !7936)
!7939 = !DILocation(line: 3000, column: 2, scope: !7936)
!7940 = !DILocation(line: 3003, column: 15, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 3003, column: 7)
!7942 = !DILocation(line: 3003, column: 12, scope: !7941)
!7943 = !DILocation(line: 3003, column: 7, scope: !7795)
!7944 = !DILocation(line: 3004, column: 12, scope: !7941)
!7945 = !DILocation(line: 3004, column: 5, scope: !7941)
!7946 = !DILocation(line: 3005, column: 15, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 3005, column: 7)
!7948 = !DILocation(line: 3005, column: 12, scope: !7947)
!7949 = !DILocation(line: 3005, column: 7, scope: !7795)
!7950 = !DILocation(line: 3006, column: 12, scope: !7947)
!7951 = !DILocation(line: 3006, column: 5, scope: !7947)
!7952 = !DILocation(line: 3007, column: 15, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 3007, column: 7)
!7954 = !DILocation(line: 3007, column: 12, scope: !7953)
!7955 = !DILocation(line: 3007, column: 7, scope: !7795)
!7956 = !DILocation(line: 3008, column: 12, scope: !7953)
!7957 = !DILocation(line: 3008, column: 5, scope: !7953)
!7958 = !DILocation(line: 3010, column: 7, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 3010, column: 7)
!7960 = !DILocation(line: 3010, column: 7, scope: !7795)
!7961 = !DILocation(line: 3012, column: 19, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3012, column: 11)
!7963 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 3011, column: 5)
!7964 = !DILocation(line: 3012, column: 16, scope: !7962)
!7965 = !DILocation(line: 3012, column: 11, scope: !7963)
!7966 = !DILocation(line: 3013, column: 9, scope: !7962)
!7967 = !DILocation(line: 3014, column: 19, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3014, column: 11)
!7969 = !DILocation(line: 3014, column: 16, scope: !7968)
!7970 = !DILocation(line: 3014, column: 11, scope: !7963)
!7971 = !DILocation(line: 3015, column: 9, scope: !7968)
!7972 = !DILocation(line: 3016, column: 19, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3016, column: 11)
!7974 = !DILocation(line: 3016, column: 16, scope: !7973)
!7975 = !DILocation(line: 3016, column: 11, scope: !7963)
!7976 = !DILocation(line: 3017, column: 9, scope: !7973)
!7977 = !DILocation(line: 3018, column: 19, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3018, column: 11)
!7979 = !DILocation(line: 3018, column: 16, scope: !7978)
!7980 = !DILocation(line: 3018, column: 11, scope: !7963)
!7981 = !DILocation(line: 3019, column: 9, scope: !7978)
!7982 = !DILocation(line: 3022, column: 19, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3022, column: 11)
!7984 = !DILocation(line: 3022, column: 16, scope: !7983)
!7985 = !DILocation(line: 3022, column: 11, scope: !7963)
!7986 = !DILocation(line: 3023, column: 9, scope: !7983)
!7987 = !DILocation(line: 3025, column: 19, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3025, column: 11)
!7989 = !DILocation(line: 3025, column: 16, scope: !7988)
!7990 = !DILocation(line: 3025, column: 11, scope: !7963)
!7991 = !DILocation(line: 3026, column: 9, scope: !7988)
!7992 = !DILocation(line: 3028, column: 19, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3028, column: 11)
!7994 = !DILocation(line: 3028, column: 16, scope: !7993)
!7995 = !DILocation(line: 3028, column: 11, scope: !7963)
!7996 = !DILocation(line: 3029, column: 9, scope: !7993)
!7997 = !DILocation(line: 3031, column: 19, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3031, column: 11)
!7999 = !DILocation(line: 3031, column: 16, scope: !7998)
!8000 = !DILocation(line: 3031, column: 11, scope: !7963)
!8001 = !DILocation(line: 3032, column: 9, scope: !7998)
!8002 = !DILocation(line: 3035, column: 19, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3035, column: 11)
!8004 = !DILocation(line: 3035, column: 16, scope: !8003)
!8005 = !DILocation(line: 3035, column: 11, scope: !7963)
!8006 = !DILocation(line: 3036, column: 9, scope: !8003)
!8007 = !DILocation(line: 3037, column: 19, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3037, column: 11)
!8009 = !DILocation(line: 3037, column: 16, scope: !8008)
!8010 = !DILocation(line: 3037, column: 11, scope: !7963)
!8011 = !DILocation(line: 3038, column: 9, scope: !8008)
!8012 = !DILocation(line: 3039, column: 19, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3039, column: 11)
!8014 = !DILocation(line: 3039, column: 16, scope: !8013)
!8015 = !DILocation(line: 3039, column: 11, scope: !7963)
!8016 = !DILocation(line: 3040, column: 9, scope: !8013)
!8017 = !DILocation(line: 3041, column: 19, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3041, column: 11)
!8019 = !DILocation(line: 3041, column: 16, scope: !8018)
!8020 = !DILocation(line: 3041, column: 11, scope: !7963)
!8021 = !DILocation(line: 3042, column: 9, scope: !8018)
!8022 = !DILocation(line: 3045, column: 19, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3045, column: 11)
!8024 = !DILocation(line: 3045, column: 16, scope: !8023)
!8025 = !DILocation(line: 3045, column: 11, scope: !7963)
!8026 = !DILocation(line: 3046, column: 9, scope: !8023)
!8027 = !DILocation(line: 3048, column: 19, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3048, column: 11)
!8029 = !DILocation(line: 3048, column: 16, scope: !8028)
!8030 = !DILocation(line: 3048, column: 11, scope: !7963)
!8031 = !DILocation(line: 3049, column: 9, scope: !8028)
!8032 = !DILocation(line: 3051, column: 19, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3051, column: 11)
!8034 = !DILocation(line: 3051, column: 16, scope: !8033)
!8035 = !DILocation(line: 3051, column: 11, scope: !7963)
!8036 = !DILocation(line: 3052, column: 9, scope: !8033)
!8037 = !DILocation(line: 3054, column: 19, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3054, column: 11)
!8039 = !DILocation(line: 3054, column: 16, scope: !8038)
!8040 = !DILocation(line: 3054, column: 11, scope: !7963)
!8041 = !DILocation(line: 3055, column: 9, scope: !8038)
!8042 = !DILocation(line: 3058, column: 11, scope: !7963)
!8043 = !DILocation(line: 3059, column: 9, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3058, column: 11)
!8045 = !DILocation(line: 3061, column: 9, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3060, column: 11)
!8047 = !DILocation(line: 3063, column: 9, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3062, column: 11)
!8049 = !DILocation(line: 3065, column: 9, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3064, column: 11)
!8051 = !DILocation(line: 3067, column: 9, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3066, column: 11)
!8053 = !DILocation(line: 3070, column: 9, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3069, column: 11)
!8055 = !DILocation(line: 3072, column: 9, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3071, column: 11)
!8057 = !DILocation(line: 3074, column: 9, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3073, column: 11)
!8059 = !DILocation(line: 3076, column: 9, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3075, column: 11)
!8061 = !DILocation(line: 3078, column: 9, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3077, column: 11)
!8063 = !DILocation(line: 3081, column: 9, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3080, column: 11)
!8065 = !DILocation(line: 3083, column: 9, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3082, column: 11)
!8067 = !DILocation(line: 3085, column: 9, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3084, column: 11)
!8069 = !DILocation(line: 3087, column: 9, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3086, column: 11)
!8071 = !DILocation(line: 3090, column: 9, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3089, column: 11)
!8073 = !DILocation(line: 3092, column: 9, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3091, column: 11)
!8075 = !DILocation(line: 3094, column: 9, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3093, column: 11)
!8077 = !DILocation(line: 3096, column: 9, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3095, column: 11)
!8079 = !DILocation(line: 3099, column: 8, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 3099, column: 3)
!8081 = !DILocation(line: 0, scope: !8080)
!8082 = !DILocation(line: 3099, column: 3, scope: !8080)
!8083 = !DILocation(line: 3100, column: 9, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 3100, column: 9)
!8085 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 3099, column: 3)
!8086 = !DILocation(line: 3100, column: 36, scope: !8084)
!8087 = !DILocation(line: 3100, column: 9, scope: !8085)
!8088 = !DILocation(line: 3101, column: 14, scope: !8084)
!8089 = !DILocation(line: 3101, column: 7, scope: !8084)
!8090 = !DILocation(line: 3099, column: 45, scope: !8085)
!8091 = !DILocation(line: 3099, column: 3, scope: !8085)
!8092 = distinct !{!8092, !8082, !8093}
!8093 = !DILocation(line: 3101, column: 14, scope: !8080)
!8094 = !DILocation(line: 3104, column: 1, scope: !7795)
!8095 = distinct !DISubprogram(name: "c_build_bitfield_integer_type", scope: !3, file: !3, line: 3283, type: !8096, scopeLine: 3284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8098)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{!1527, !1580, !1520}
!8098 = !{!8099, !8100}
!8099 = !DILocalVariable(name: "width", arg: 1, scope: !8095, file: !3, line: 3283, type: !1580)
!8100 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !8095, file: !3, line: 3283, type: !1520)
!8101 = !DILocation(line: 0, scope: !8095)
!8102 = !DILocation(line: 3291, column: 16, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3291, column: 7)
!8104 = !DILocation(line: 3291, column: 13, scope: !8103)
!8105 = !DILocation(line: 3291, column: 7, scope: !8095)
!8106 = !DILocation(line: 3292, column: 12, scope: !8103)
!8107 = !DILocation(line: 3293, column: 16, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3293, column: 7)
!8109 = !DILocation(line: 3293, column: 13, scope: !8108)
!8110 = !DILocation(line: 3293, column: 7, scope: !8095)
!8111 = !DILocation(line: 3294, column: 12, scope: !8108)
!8112 = !DILocation(line: 3295, column: 16, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3295, column: 7)
!8114 = !DILocation(line: 3295, column: 13, scope: !8113)
!8115 = !DILocation(line: 3295, column: 7, scope: !8095)
!8116 = !DILocation(line: 3296, column: 12, scope: !8113)
!8117 = !DILocation(line: 3297, column: 16, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3297, column: 7)
!8119 = !DILocation(line: 3297, column: 13, scope: !8118)
!8120 = !DILocation(line: 3297, column: 7, scope: !8095)
!8121 = !DILocation(line: 3298, column: 12, scope: !8118)
!8122 = !DILocation(line: 3299, column: 16, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3299, column: 7)
!8124 = !DILocation(line: 3299, column: 13, scope: !8123)
!8125 = !DILocation(line: 3299, column: 7, scope: !8095)
!8126 = !DILocation(line: 3300, column: 13, scope: !8123)
!8127 = !DILocation(line: 3302, column: 10, scope: !8095)
!8128 = !DILocation(line: 3302, column: 3, scope: !8095)
!8129 = !DILocation(line: 3303, column: 1, scope: !8095)
!8130 = distinct !DISubprogram(name: "c_register_builtin_type", scope: !3, file: !3, line: 3308, type: !8131, scopeLine: 3309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8133)
!8131 = !DISubroutineType(types: !8132)
!8132 = !{null, !1527, !1525}
!8133 = !{!8134, !8135, !8136}
!8134 = !DILocalVariable(name: "type", arg: 1, scope: !8130, file: !3, line: 3308, type: !1527)
!8135 = !DILocalVariable(name: "name", arg: 2, scope: !8130, file: !3, line: 3308, type: !1525)
!8136 = !DILocalVariable(name: "decl", scope: !8130, file: !3, line: 3310, type: !1527)
!8137 = !DILocation(line: 0, scope: !8130)
!8138 = !DILocation(line: 3312, column: 10, scope: !8130)
!8139 = !DILocation(line: 3314, column: 3, scope: !8130)
!8140 = !DILocation(line: 3314, column: 26, scope: !8130)
!8141 = !DILocation(line: 3315, column: 8, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 3315, column: 7)
!8143 = !DILocation(line: 3315, column: 7, scope: !8130)
!8144 = !DILocation(line: 3316, column: 22, scope: !8142)
!8145 = !DILocation(line: 3316, column: 5, scope: !8142)
!8146 = !DILocation(line: 3317, column: 3, scope: !8130)
!8147 = !DILocation(line: 3319, column: 30, scope: !8130)
!8148 = !DILocation(line: 3319, column: 28, scope: !8130)
!8149 = !DILocation(line: 3320, column: 1, scope: !8130)
!8150 = distinct !DISubprogram(name: "binary_op_error", scope: !3, file: !3, line: 3327, type: !8151, scopeLine: 3329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8153)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{null, !1651, !139, !1527, !1527}
!8153 = !{!8154, !8155, !8156, !8157, !8158}
!8154 = !DILocalVariable(name: "location", arg: 1, scope: !8150, file: !3, line: 3327, type: !1651)
!8155 = !DILocalVariable(name: "code", arg: 2, scope: !8150, file: !3, line: 3327, type: !139)
!8156 = !DILocalVariable(name: "type0", arg: 3, scope: !8150, file: !3, line: 3328, type: !1527)
!8157 = !DILocalVariable(name: "type1", arg: 4, scope: !8150, file: !3, line: 3328, type: !1527)
!8158 = !DILocalVariable(name: "opname", scope: !8150, file: !3, line: 3330, type: !1525)
!8159 = !DILocation(line: 0, scope: !8150)
!8160 = !DILocation(line: 3332, column: 3, scope: !8150)
!8161 = !DILocation(line: 3337, column: 21, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 3333, column: 5)
!8163 = !DILocation(line: 3339, column: 21, scope: !8162)
!8164 = !DILocation(line: 3341, column: 23, scope: !8162)
!8165 = !DILocation(line: 3343, column: 23, scope: !8162)
!8166 = !DILocation(line: 3345, column: 22, scope: !8162)
!8167 = !DILocation(line: 3347, column: 22, scope: !8162)
!8168 = !DILocation(line: 3349, column: 22, scope: !8162)
!8169 = !DILocation(line: 3351, column: 22, scope: !8162)
!8170 = !DILocation(line: 3353, column: 21, scope: !8162)
!8171 = !DILocation(line: 3355, column: 21, scope: !8162)
!8172 = !DILocation(line: 3357, column: 22, scope: !8162)
!8173 = !DILocation(line: 3359, column: 22, scope: !8162)
!8174 = !DILocation(line: 3362, column: 21, scope: !8162)
!8175 = !DILocation(line: 3365, column: 21, scope: !8162)
!8176 = !DILocation(line: 3367, column: 21, scope: !8162)
!8177 = !DILocation(line: 3369, column: 21, scope: !8162)
!8178 = !DILocation(line: 3371, column: 22, scope: !8162)
!8179 = !DILocation(line: 3373, column: 22, scope: !8162)
!8180 = !DILocation(line: 3375, column: 21, scope: !8162)
!8181 = !DILocation(line: 3377, column: 7, scope: !8162)
!8182 = !DILocation(line: 3378, column: 5, scope: !8162)
!8183 = !DILocation(line: 3379, column: 3, scope: !8150)
!8184 = !DILocation(line: 3382, column: 1, scope: !8150)
!8185 = distinct !DISubprogram(name: "shorten_compare", scope: !3, file: !3, line: 3399, type: !8186, scopeLine: 3401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8189)
!8186 = !DISubroutineType(types: !8187)
!8187 = !{!1527, !1886, !1886, !1886, !8188}
!8188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!8189 = !{!8190, !8191, !8192, !8193, !8194, !8195, !8196, !8197, !8198, !8199, !8200, !8201, !8202, !8203, !8204, !8207, !8208, !8211, !8212, !8213, !8214, !8215, !8216, !8217, !8218}
!8190 = !DILocalVariable(name: "op0_ptr", arg: 1, scope: !8185, file: !3, line: 3399, type: !1886)
!8191 = !DILocalVariable(name: "op1_ptr", arg: 2, scope: !8185, file: !3, line: 3399, type: !1886)
!8192 = !DILocalVariable(name: "restype_ptr", arg: 3, scope: !8185, file: !3, line: 3399, type: !1886)
!8193 = !DILocalVariable(name: "rescode_ptr", arg: 4, scope: !8185, file: !3, line: 3400, type: !8188)
!8194 = !DILocalVariable(name: "type", scope: !8185, file: !3, line: 3402, type: !1527)
!8195 = !DILocalVariable(name: "op0", scope: !8185, file: !3, line: 3403, type: !1527)
!8196 = !DILocalVariable(name: "op1", scope: !8185, file: !3, line: 3404, type: !1527)
!8197 = !DILocalVariable(name: "unsignedp0", scope: !8185, file: !3, line: 3405, type: !1520)
!8198 = !DILocalVariable(name: "unsignedp1", scope: !8185, file: !3, line: 3405, type: !1520)
!8199 = !DILocalVariable(name: "real1", scope: !8185, file: !3, line: 3406, type: !1520)
!8200 = !DILocalVariable(name: "real2", scope: !8185, file: !3, line: 3406, type: !1520)
!8201 = !DILocalVariable(name: "primop0", scope: !8185, file: !3, line: 3407, type: !1527)
!8202 = !DILocalVariable(name: "primop1", scope: !8185, file: !3, line: 3407, type: !1527)
!8203 = !DILocalVariable(name: "code", scope: !8185, file: !3, line: 3408, type: !139)
!8204 = !DILocalVariable(name: "tem", scope: !8205, file: !3, line: 3436, type: !1527)
!8205 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 3435, column: 5)
!8206 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3432, column: 7)
!8207 = !DILocalVariable(name: "temi", scope: !8205, file: !3, line: 3437, type: !1520)
!8208 = !DILocalVariable(name: "min_gt", scope: !8209, file: !3, line: 3493, type: !1520)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 3492, column: 5)
!8210 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3488, column: 7)
!8211 = !DILocalVariable(name: "max_gt", scope: !8209, file: !3, line: 3493, type: !1520)
!8212 = !DILocalVariable(name: "min_lt", scope: !8209, file: !3, line: 3493, type: !1520)
!8213 = !DILocalVariable(name: "max_lt", scope: !8209, file: !3, line: 3493, type: !1520)
!8214 = !DILocalVariable(name: "maxval", scope: !8209, file: !3, line: 3494, type: !1527)
!8215 = !DILocalVariable(name: "minval", scope: !8209, file: !3, line: 3494, type: !1527)
!8216 = !DILocalVariable(name: "unsignedp", scope: !8209, file: !3, line: 3496, type: !1520)
!8217 = !DILocalVariable(name: "val", scope: !8209, file: !3, line: 3497, type: !1527)
!8218 = !DILocalVariable(name: "value", scope: !8219, file: !3, line: 3684, type: !1527)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 3683, column: 2)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 3681, column: 11)
!8221 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 3674, column: 5)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 3654, column: 12)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 3641, column: 12)
!8224 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 3636, column: 12)
!8225 = !DILocation(line: 0, scope: !8185)
!8226 = !DILocation(line: 3403, column: 14, scope: !8185)
!8227 = !DILocation(line: 3404, column: 14, scope: !8185)
!8228 = !DILocation(line: 3405, column: 3, scope: !8185)
!8229 = !DILocation(line: 3408, column: 25, scope: !8185)
!8230 = !DILocation(line: 3413, column: 13, scope: !8185)
!8231 = !DILocation(line: 3414, column: 13, scope: !8185)
!8232 = !DILocation(line: 3419, column: 11, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3419, column: 7)
!8234 = !DILocation(line: 3419, column: 22, scope: !8233)
!8235 = !DILocation(line: 3419, column: 25, scope: !8233)
!8236 = !DILocation(line: 3419, column: 44, scope: !8233)
!8237 = !DILocation(line: 3419, column: 41, scope: !8233)
!8238 = !DILocation(line: 3419, column: 7, scope: !8185)
!8239 = !DILocation(line: 3420, column: 18, scope: !8233)
!8240 = !DILocation(line: 3420, column: 16, scope: !8233)
!8241 = !DILocation(line: 3420, column: 5, scope: !8233)
!8242 = !DILocation(line: 3421, column: 11, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3421, column: 7)
!8244 = !DILocation(line: 3421, column: 22, scope: !8243)
!8245 = !DILocation(line: 3421, column: 25, scope: !8243)
!8246 = !DILocation(line: 3421, column: 44, scope: !8243)
!8247 = !DILocation(line: 3421, column: 41, scope: !8243)
!8248 = !DILocation(line: 3421, column: 7, scope: !8185)
!8249 = !DILocation(line: 3422, column: 18, scope: !8243)
!8250 = !DILocation(line: 3422, column: 16, scope: !8243)
!8251 = !DILocation(line: 3422, column: 5, scope: !8243)
!8252 = !DILocation(line: 3425, column: 11, scope: !8185)
!8253 = !DILocation(line: 3425, column: 43, scope: !8185)
!8254 = !DILocation(line: 3426, column: 11, scope: !8185)
!8255 = !DILocation(line: 3426, column: 43, scope: !8185)
!8256 = !DILocation(line: 3432, column: 7, scope: !8206)
!8257 = !DILocation(line: 3433, column: 7, scope: !8206)
!8258 = !DILocation(line: 3433, column: 11, scope: !8206)
!8259 = !DILocation(line: 3433, column: 35, scope: !8206)
!8260 = !DILocation(line: 3433, column: 39, scope: !8206)
!8261 = !DILocation(line: 3434, column: 7, scope: !8206)
!8262 = !DILocation(line: 3434, column: 11, scope: !8206)
!8263 = !DILocation(line: 3432, column: 7, scope: !8185)
!8264 = !DILocation(line: 0, scope: !8205)
!8265 = !DILocation(line: 3437, column: 18, scope: !8205)
!8266 = !DILocation(line: 3443, column: 16, scope: !8205)
!8267 = !DILocation(line: 3444, column: 16, scope: !8205)
!8268 = !DILocation(line: 3445, column: 20, scope: !8205)
!8269 = !DILocation(line: 3445, column: 18, scope: !8205)
!8270 = !DILocation(line: 3446, column: 18, scope: !8205)
!8271 = !DILocation(line: 3451, column: 7, scope: !8205)
!8272 = !DILocation(line: 3458, column: 4, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 3452, column: 2)
!8274 = !DILocation(line: 3461, column: 4, scope: !8273)
!8275 = !DILocation(line: 3464, column: 4, scope: !8273)
!8276 = !DILocation(line: 3466, column: 4, scope: !8273)
!8277 = !DILocation(line: 3468, column: 20, scope: !8205)
!8278 = !DILocation(line: 3469, column: 5, scope: !8205)
!8279 = !DILocation(line: 3408, column: 18, scope: !8185)
!8280 = !DILocation(line: 3488, column: 14, scope: !8210)
!8281 = !DILocation(line: 3489, column: 10, scope: !8210)
!8282 = !DILocation(line: 3489, column: 42, scope: !8210)
!8283 = !DILocation(line: 3490, column: 7, scope: !8210)
!8284 = !DILocation(line: 3490, column: 10, scope: !8210)
!8285 = !DILocation(line: 3490, column: 30, scope: !8210)
!8286 = !DILocation(line: 3491, column: 7, scope: !8210)
!8287 = !DILocation(line: 3491, column: 10, scope: !8210)
!8288 = !DILocation(line: 3491, column: 49, scope: !8210)
!8289 = !DILocation(line: 3491, column: 47, scope: !8210)
!8290 = !DILocation(line: 3488, column: 7, scope: !8185)
!8291 = !DILocation(line: 3496, column: 23, scope: !8209)
!8292 = !DILocation(line: 0, scope: !8209)
!8293 = !DILocation(line: 3499, column: 48, scope: !8209)
!8294 = !DILocation(line: 3499, column: 14, scope: !8209)
!8295 = !DILocation(line: 3502, column: 16, scope: !8209)
!8296 = !DILocation(line: 3503, column: 16, scope: !8209)
!8297 = !DILocation(line: 3505, column: 11, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3505, column: 11)
!8299 = !DILocation(line: 3505, column: 25, scope: !8298)
!8300 = !DILocation(line: 3505, column: 21, scope: !8298)
!8301 = !DILocation(line: 3508, column: 34, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3508, column: 11)
!8303 = !DILocation(line: 3506, column: 39, scope: !8298)
!8304 = !DILocation(line: 3506, column: 17, scope: !8298)
!8305 = !DILocation(line: 3506, column: 15, scope: !8298)
!8306 = !DILocation(line: 3506, column: 2, scope: !8298)
!8307 = !DILocation(line: 3508, column: 11, scope: !8302)
!8308 = !DILocation(line: 3508, column: 31, scope: !8302)
!8309 = !DILocation(line: 3508, column: 11, scope: !8209)
!8310 = !DILocation(line: 3513, column: 9, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3509, column: 2)
!8312 = !DILocation(line: 3514, column: 9, scope: !8311)
!8313 = !DILocation(line: 3515, column: 9, scope: !8311)
!8314 = !DILocation(line: 3512, column: 14, scope: !8311)
!8315 = !DILocation(line: 3517, column: 19, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3517, column: 11)
!8317 = !DILocation(line: 3516, column: 2, scope: !8311)
!8318 = !DILocation(line: 3517, column: 16, scope: !8316)
!8319 = !DILocation(line: 3517, column: 11, scope: !8209)
!8320 = !DILocation(line: 3519, column: 13, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 3518, column: 2)
!8322 = !DILocation(line: 3520, column: 22, scope: !8321)
!8323 = !DILocation(line: 3520, column: 13, scope: !8321)
!8324 = !DILocation(line: 3521, column: 2, scope: !8321)
!8325 = !DILocation(line: 3523, column: 11, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3523, column: 11)
!8327 = !DILocation(line: 3523, column: 24, scope: !8326)
!8328 = !DILocation(line: 3523, column: 21, scope: !8326)
!8329 = !DILocation(line: 0, scope: !8326)
!8330 = !DILocation(line: 3525, column: 13, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 3524, column: 2)
!8332 = !DILocation(line: 3526, column: 13, scope: !8331)
!8333 = !DILocation(line: 3527, column: 13, scope: !8331)
!8334 = !DILocation(line: 3528, column: 13, scope: !8331)
!8335 = !DILocation(line: 3529, column: 2, scope: !8331)
!8336 = !DILocation(line: 3532, column: 13, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 3531, column: 2)
!8338 = !DILocation(line: 3533, column: 13, scope: !8337)
!8339 = !DILocation(line: 3534, column: 13, scope: !8337)
!8340 = !DILocation(line: 3535, column: 13, scope: !8337)
!8341 = !DILocation(line: 3540, column: 11, scope: !8209)
!8342 = !DILocation(line: 3542, column: 8, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 3542, column: 8)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 3541, column: 2)
!8345 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3540, column: 11)
!8346 = !DILocation(line: 3542, column: 15, scope: !8343)
!8347 = !DILocation(line: 3547, column: 8, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 3547, column: 8)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 3546, column: 2)
!8350 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 3545, column: 16)
!8351 = !DILocation(line: 3547, column: 15, scope: !8348)
!8352 = !DILocation(line: 3552, column: 8, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 3552, column: 8)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 3551, column: 2)
!8355 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 3550, column: 16)
!8356 = !DILocation(line: 3553, column: 12, scope: !8353)
!8357 = !DILocation(line: 3552, column: 8, scope: !8354)
!8358 = !DILocation(line: 3554, column: 9, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 3554, column: 8)
!8360 = !DILocation(line: 3554, column: 8, scope: !8354)
!8361 = !DILocation(line: 3560, column: 12, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 3559, column: 8)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 3558, column: 2)
!8364 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 3557, column: 16)
!8365 = !DILocation(line: 3559, column: 8, scope: !8363)
!8366 = !DILocation(line: 3561, column: 9, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 3561, column: 8)
!8368 = !DILocation(line: 3561, column: 8, scope: !8363)
!8369 = !DILocation(line: 3566, column: 9, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 3566, column: 8)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 3565, column: 2)
!8372 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 3564, column: 16)
!8373 = !DILocation(line: 3567, column: 12, scope: !8370)
!8374 = !DILocation(line: 3566, column: 8, scope: !8371)
!8375 = !DILocation(line: 3568, column: 8, scope: !8371)
!8376 = !DILocation(line: 3573, column: 9, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 3573, column: 8)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3572, column: 2)
!8379 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 3571, column: 16)
!8380 = !DILocation(line: 3574, column: 12, scope: !8377)
!8381 = !DILocation(line: 3573, column: 8, scope: !8378)
!8382 = !DILocation(line: 3575, column: 8, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 3575, column: 8)
!8384 = !DILocation(line: 3575, column: 8, scope: !8378)
!8385 = !DILocation(line: 0, scope: !8345)
!8386 = !DILocation(line: 3590, column: 21, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3590, column: 11)
!8388 = !DILocation(line: 3592, column: 12, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 3592, column: 8)
!8390 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 3591, column: 2)
!8391 = !DILocation(line: 3592, column: 8, scope: !8390)
!8392 = !DILocation(line: 3593, column: 6, scope: !8389)
!8393 = !DILocation(line: 3597, column: 13, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 3594, column: 8)
!8395 = !DILocation(line: 3599, column: 3, scope: !8394)
!8396 = !DILocation(line: 3603, column: 13, scope: !8394)
!8397 = !DILocation(line: 3605, column: 3, scope: !8394)
!8398 = !DILocation(line: 3512, column: 12, scope: !8311)
!8399 = !DILocation(line: 3543, column: 10, scope: !8343)
!8400 = !DILocation(line: 3610, column: 11, scope: !8390)
!8401 = !DILocation(line: 3611, column: 2, scope: !8390)
!8402 = !DILocation(line: 3613, column: 11, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3613, column: 11)
!8404 = !DILocation(line: 3613, column: 31, scope: !8403)
!8405 = !DILocation(line: 3613, column: 11, scope: !8209)
!8406 = !DILocation(line: 3615, column: 15, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 3615, column: 8)
!8408 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3614, column: 2)
!8409 = !DILocation(line: 3615, column: 12, scope: !8407)
!8410 = !DILocation(line: 3615, column: 8, scope: !8408)
!8411 = !DILocation(line: 3616, column: 6, scope: !8407)
!8412 = !DILocation(line: 3617, column: 15, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 3617, column: 8)
!8414 = !DILocation(line: 3617, column: 12, scope: !8413)
!8415 = !DILocation(line: 3617, column: 8, scope: !8408)
!8416 = !DILocation(line: 3618, column: 6, scope: !8413)
!8417 = !DILocation(line: 3621, column: 15, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3621, column: 11)
!8419 = !DILocation(line: 3621, column: 11, scope: !8209)
!8420 = !DILocation(line: 3624, column: 8, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3624, column: 8)
!8422 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 3622, column: 2)
!8423 = !DILocation(line: 3624, column: 8, scope: !8422)
!8424 = !DILocation(line: 3625, column: 13, scope: !8421)
!8425 = !DILocation(line: 3625, column: 6, scope: !8421)
!8426 = !DILocation(line: 3636, column: 12, scope: !8224)
!8427 = !DILocation(line: 3636, column: 21, scope: !8224)
!8428 = !DILocation(line: 3636, column: 18, scope: !8224)
!8429 = !DILocation(line: 3637, column: 9, scope: !8224)
!8430 = !DILocation(line: 3638, column: 9, scope: !8224)
!8431 = !DILocation(line: 3638, column: 12, scope: !8224)
!8432 = !DILocation(line: 3636, column: 12, scope: !8210)
!8433 = !DILocation(line: 3639, column: 25, scope: !8224)
!8434 = !DILocation(line: 3639, column: 46, scope: !8224)
!8435 = !DILocation(line: 3639, column: 12, scope: !8224)
!8436 = !DILocation(line: 3639, column: 5, scope: !8224)
!8437 = !DILocation(line: 3641, column: 18, scope: !8223)
!8438 = !DILocation(line: 3642, column: 9, scope: !8223)
!8439 = !DILocation(line: 3643, column: 12, scope: !8223)
!8440 = !DILocation(line: 3643, column: 9, scope: !8223)
!8441 = !DILocation(line: 3641, column: 12, scope: !8224)
!8442 = !DILocation(line: 3644, column: 5, scope: !8223)
!8443 = !DILocation(line: 3654, column: 12, scope: !8222)
!8444 = !DILocation(line: 3654, column: 26, scope: !8222)
!8445 = !DILocation(line: 3654, column: 23, scope: !8222)
!8446 = !DILocation(line: 3654, column: 46, scope: !8222)
!8447 = !DILocation(line: 3654, column: 37, scope: !8222)
!8448 = !DILocation(line: 3677, column: 14, scope: !8221)
!8449 = !DILocation(line: 3655, column: 8, scope: !8222)
!8450 = !DILocation(line: 3655, column: 47, scope: !8222)
!8451 = !DILocation(line: 3655, column: 45, scope: !8222)
!8452 = !DILocation(line: 3656, column: 5, scope: !8222)
!8453 = !DILocation(line: 3656, column: 8, scope: !8222)
!8454 = !DILocation(line: 3656, column: 45, scope: !8222)
!8455 = !DILocation(line: 3654, column: 12, scope: !8223)
!8456 = !DILocation(line: 3658, column: 14, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 3657, column: 5)
!8458 = !DILocation(line: 3659, column: 48, scope: !8457)
!8459 = !DILocation(line: 3660, column: 13, scope: !8457)
!8460 = !DILocation(line: 3660, column: 16, scope: !8457)
!8461 = !DILocation(line: 3659, column: 14, scope: !8457)
!8462 = !DILocation(line: 3665, column: 47, scope: !8457)
!8463 = !DILocation(line: 3666, column: 12, scope: !8457)
!8464 = !DILocation(line: 3665, column: 13, scope: !8457)
!8465 = !DILocation(line: 3665, column: 4, scope: !8457)
!8466 = !DILocation(line: 3669, column: 47, scope: !8457)
!8467 = !DILocation(line: 3670, column: 12, scope: !8457)
!8468 = !DILocation(line: 3669, column: 13, scope: !8457)
!8469 = !DILocation(line: 3669, column: 4, scope: !8457)
!8470 = !DILocation(line: 3672, column: 5, scope: !8457)
!8471 = !DILocation(line: 3681, column: 18, scope: !8220)
!8472 = !DILocation(line: 3681, column: 31, scope: !8220)
!8473 = !DILocation(line: 3682, column: 4, scope: !8220)
!8474 = !DILocation(line: 3682, column: 7, scope: !8220)
!8475 = !DILocation(line: 3681, column: 11, scope: !8221)
!8476 = !DILocation(line: 0, scope: !8219)
!8477 = !DILocation(line: 3685, column: 4, scope: !8219)
!8478 = !DILocation(line: 3692, column: 12, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 3692, column: 12)
!8480 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 3686, column: 6)
!8481 = !DILocation(line: 3692, column: 29, scope: !8479)
!8482 = !DILocation(line: 3692, column: 33, scope: !8479)
!8483 = !DILocation(line: 3693, column: 5, scope: !8479)
!8484 = !DILocation(line: 3693, column: 10, scope: !8479)
!8485 = !DILocation(line: 3693, column: 30, scope: !8479)
!8486 = !DILocation(line: 3694, column: 10, scope: !8479)
!8487 = !DILocation(line: 3694, column: 14, scope: !8479)
!8488 = !DILocation(line: 3692, column: 12, scope: !8480)
!8489 = !DILocation(line: 3696, column: 3, scope: !8479)
!8490 = !DILocation(line: 3698, column: 16, scope: !8480)
!8491 = !DILocation(line: 3699, column: 8, scope: !8480)
!8492 = !DILocation(line: 3702, column: 12, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 3702, column: 12)
!8494 = !DILocation(line: 3702, column: 29, scope: !8493)
!8495 = !DILocation(line: 3702, column: 33, scope: !8493)
!8496 = !DILocation(line: 3703, column: 5, scope: !8493)
!8497 = !DILocation(line: 3703, column: 10, scope: !8493)
!8498 = !DILocation(line: 3703, column: 30, scope: !8493)
!8499 = !DILocation(line: 3704, column: 10, scope: !8493)
!8500 = !DILocation(line: 3704, column: 14, scope: !8493)
!8501 = !DILocation(line: 3702, column: 12, scope: !8480)
!8502 = !DILocation(line: 3706, column: 3, scope: !8493)
!8503 = !DILocation(line: 3708, column: 16, scope: !8480)
!8504 = !DILocation(line: 3709, column: 8, scope: !8480)
!8505 = !DILocation(line: 3715, column: 14, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 3715, column: 8)
!8507 = !DILocation(line: 3715, column: 8, scope: !8219)
!8508 = !DILocation(line: 3718, column: 12, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 3718, column: 12)
!8510 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 3716, column: 6)
!8511 = !DILocation(line: 3718, column: 12, scope: !8510)
!8512 = !DILocation(line: 3719, column: 10, scope: !8509)
!8513 = !DILocation(line: 3719, column: 3, scope: !8509)
!8514 = !DILocation(line: 3413, column: 11, scope: !8185)
!8515 = !DILocation(line: 0, scope: !8210)
!8516 = !DILocation(line: 3726, column: 14, scope: !8185)
!8517 = !DILocation(line: 3726, column: 12, scope: !8185)
!8518 = !DILocation(line: 3727, column: 14, scope: !8185)
!8519 = !DILocation(line: 3727, column: 12, scope: !8185)
!8520 = !DILocation(line: 3729, column: 18, scope: !8185)
!8521 = !DILocation(line: 3729, column: 16, scope: !8185)
!8522 = !DILocation(line: 3731, column: 3, scope: !8185)
!8523 = !DILocation(line: 3732, column: 1, scope: !8185)
!8524 = distinct !DISubprogram(name: "pointer_int_sum", scope: !3, file: !3, line: 3738, type: !8525, scopeLine: 3740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8527)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{!1527, !1651, !139, !1527, !1527}
!8527 = !{!8528, !8529, !8530, !8531, !8532, !8533, !8534, !8535, !8538}
!8528 = !DILocalVariable(name: "loc", arg: 1, scope: !8524, file: !3, line: 3738, type: !1651)
!8529 = !DILocalVariable(name: "resultcode", arg: 2, scope: !8524, file: !3, line: 3738, type: !139)
!8530 = !DILocalVariable(name: "ptrop", arg: 3, scope: !8524, file: !3, line: 3739, type: !1527)
!8531 = !DILocalVariable(name: "intop", arg: 4, scope: !8524, file: !3, line: 3739, type: !1527)
!8532 = !DILocalVariable(name: "size_exp", scope: !8524, file: !3, line: 3741, type: !1527)
!8533 = !DILocalVariable(name: "ret", scope: !8524, file: !3, line: 3741, type: !1527)
!8534 = !DILocalVariable(name: "result_type", scope: !8524, file: !3, line: 3744, type: !1527)
!8535 = !DILocalVariable(name: "subcode", scope: !8536, file: !3, line: 3791, type: !139)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 3790, column: 5)
!8537 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 3777, column: 7)
!8538 = !DILocalVariable(name: "int_type", scope: !8536, file: !3, line: 3792, type: !1527)
!8539 = !DILocation(line: 0, scope: !8524)
!8540 = !DILocation(line: 3744, column: 22, scope: !8524)
!8541 = !DILocation(line: 3746, column: 7, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 3746, column: 7)
!8543 = !DILocation(line: 3746, column: 43, scope: !8542)
!8544 = !DILocation(line: 3746, column: 7, scope: !8524)
!8545 = !DILocation(line: 3748, column: 21, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 3747, column: 5)
!8547 = !DILocation(line: 3748, column: 7, scope: !8546)
!8548 = !DILocation(line: 3750, column: 18, scope: !8546)
!8549 = !DILocation(line: 3751, column: 5, scope: !8546)
!8550 = !DILocation(line: 3752, column: 48, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 3752, column: 12)
!8552 = !DILocation(line: 3752, column: 12, scope: !8542)
!8553 = !DILocation(line: 3754, column: 21, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 3753, column: 5)
!8555 = !DILocation(line: 3754, column: 7, scope: !8554)
!8556 = !DILocation(line: 3756, column: 18, scope: !8554)
!8557 = !DILocation(line: 3757, column: 5, scope: !8554)
!8558 = !DILocation(line: 3758, column: 48, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 3758, column: 12)
!8560 = !DILocation(line: 3758, column: 12, scope: !8551)
!8561 = !DILocation(line: 3760, column: 21, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 3759, column: 5)
!8563 = !DILocation(line: 3760, column: 7, scope: !8562)
!8564 = !DILocation(line: 3762, column: 18, scope: !8562)
!8565 = !DILocation(line: 3763, column: 5, scope: !8562)
!8566 = !DILocation(line: 3765, column: 16, scope: !8559)
!8567 = !DILocation(line: 0, scope: !8542)
!8568 = !DILocation(line: 3771, column: 3, scope: !8524)
!8569 = !DILocation(line: 3777, column: 8, scope: !8537)
!8570 = !DILocation(line: 3777, column: 26, scope: !8537)
!8571 = !DILocation(line: 3777, column: 39, scope: !8537)
!8572 = !DILocation(line: 3777, column: 60, scope: !8537)
!8573 = !DILocation(line: 3778, column: 7, scope: !8537)
!8574 = !DILocation(line: 3778, column: 11, scope: !8537)
!8575 = !DILocation(line: 3779, column: 7, scope: !8537)
!8576 = !DILocation(line: 3779, column: 10, scope: !8537)
!8577 = !DILocation(line: 3780, column: 7, scope: !8537)
!8578 = !DILocation(line: 3780, column: 10, scope: !8537)
!8579 = !DILocation(line: 3783, column: 7, scope: !8537)
!8580 = !DILocation(line: 3783, column: 10, scope: !8537)
!8581 = !DILocation(line: 3783, column: 58, scope: !8537)
!8582 = !DILocation(line: 3787, column: 7, scope: !8537)
!8583 = !DILocation(line: 3787, column: 12, scope: !8537)
!8584 = !DILocation(line: 3788, column: 4, scope: !8537)
!8585 = !DILocation(line: 3788, column: 8, scope: !8537)
!8586 = !DILocation(line: 3789, column: 11, scope: !8537)
!8587 = !DILocation(line: 3789, column: 8, scope: !8537)
!8588 = !DILocation(line: 3777, column: 7, scope: !8524)
!8589 = !DILocation(line: 0, scope: !8536)
!8590 = !DILocation(line: 3793, column: 29, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 3793, column: 11)
!8592 = !DILocation(line: 3793, column: 11, scope: !8536)
!8593 = !DILocation(line: 3794, column: 21, scope: !8591)
!8594 = !DILocation(line: 3794, column: 13, scope: !8591)
!8595 = !DILocation(line: 3794, column: 2, scope: !8591)
!8596 = !DILocation(line: 3798, column: 32, scope: !8536)
!8597 = !DILocation(line: 3800, column: 11, scope: !8536)
!8598 = !DILocation(line: 3798, column: 15, scope: !8536)
!8599 = !DILocation(line: 3801, column: 34, scope: !8536)
!8600 = !DILocation(line: 3801, column: 15, scope: !8536)
!8601 = !DILocation(line: 3802, column: 5, scope: !8536)
!8602 = !DILocation(line: 3806, column: 7, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 3806, column: 7)
!8604 = !DILocation(line: 3806, column: 45, scope: !8603)
!8605 = !DILocation(line: 3806, column: 42, scope: !8603)
!8606 = !DILocation(line: 3807, column: 7, scope: !8603)
!8607 = !DILocation(line: 0, scope: !8603)
!8608 = !DILocation(line: 3809, column: 11, scope: !8603)
!8609 = !DILocation(line: 3807, column: 10, scope: !8603)
!8610 = !DILocation(line: 3807, column: 47, scope: !8603)
!8611 = !DILocation(line: 3807, column: 44, scope: !8603)
!8612 = !DILocation(line: 3806, column: 7, scope: !8524)
!8613 = !DILocation(line: 3808, column: 46, scope: !8603)
!8614 = !DILocation(line: 3808, column: 22, scope: !8603)
!8615 = !DILocation(line: 3808, column: 13, scope: !8603)
!8616 = !DILocation(line: 3814, column: 20, scope: !8524)
!8617 = !DILocation(line: 3817, column: 18, scope: !8524)
!8618 = !DILocation(line: 3808, column: 5, scope: !8603)
!8619 = !DILocation(line: 3817, column: 9, scope: !8524)
!8620 = !DILocation(line: 3815, column: 6, scope: !8524)
!8621 = !DILocation(line: 3814, column: 11, scope: !8524)
!8622 = !DILocation(line: 3820, column: 18, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 3820, column: 7)
!8624 = !DILocation(line: 3820, column: 7, scope: !8524)
!8625 = !DILocation(line: 3821, column: 13, scope: !8623)
!8626 = !DILocation(line: 3821, column: 5, scope: !8623)
!8627 = !DILocation(line: 3823, column: 9, scope: !8524)
!8628 = !DILocation(line: 3825, column: 3, scope: !8524)
!8629 = !DILocation(line: 3827, column: 3, scope: !8524)
!8630 = distinct !DISubprogram(name: "c_wrap_maybe_const", scope: !3, file: !3, line: 3835, type: !8631, scopeLine: 3836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8633)
!8631 = !DISubroutineType(types: !8632)
!8632 = !{!1527, !1527, !1519}
!8633 = !{!8634, !8635, !8636, !8637}
!8634 = !DILocalVariable(name: "expr", arg: 1, scope: !8630, file: !3, line: 3835, type: !1527)
!8635 = !DILocalVariable(name: "non_const", arg: 2, scope: !8630, file: !3, line: 3835, type: !1519)
!8636 = !DILocalVariable(name: "nowarning", scope: !8630, file: !3, line: 3837, type: !1519)
!8637 = !DILocalVariable(name: "loc", scope: !8630, file: !3, line: 3838, type: !1651)
!8638 = !DILocation(line: 0, scope: !8630)
!8639 = !DILocation(line: 3837, column: 20, scope: !8630)
!8640 = !DILocation(line: 3838, column: 20, scope: !8630)
!8641 = !DILocation(line: 3841, column: 7, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 3841, column: 7)
!8643 = !DILocation(line: 3841, column: 7, scope: !8630)
!8644 = !DILocation(line: 3842, column: 5, scope: !8642)
!8645 = !DILocation(line: 3845, column: 3, scope: !8630)
!8646 = distinct !{!8646, !8645, !8645}
!8647 = !DILocation(line: 3846, column: 10, scope: !8630)
!8648 = !DILocation(line: 3847, column: 3, scope: !8630)
!8649 = !DILocation(line: 3847, column: 39, scope: !8630)
!8650 = !DILocation(line: 3848, column: 7, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 3848, column: 7)
!8652 = !DILocation(line: 3848, column: 7, scope: !8630)
!8653 = !DILocation(line: 3849, column: 28, scope: !8651)
!8654 = !DILocation(line: 3849, column: 5, scope: !8651)
!8655 = !DILocation(line: 3850, column: 3, scope: !8630)
!8656 = !DILocation(line: 3852, column: 3, scope: !8630)
!8657 = distinct !DISubprogram(name: "c_save_expr", scope: !3, file: !3, line: 3861, type: !5693, scopeLine: 3862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8658)
!8658 = !{!8659, !8660}
!8659 = !DILocalVariable(name: "expr", arg: 1, scope: !8657, file: !3, line: 3861, type: !1527)
!8660 = !DILocalVariable(name: "maybe_const", scope: !8657, file: !3, line: 3863, type: !1519)
!8661 = !DILocation(line: 0, scope: !8657)
!8662 = !DILocation(line: 3863, column: 3, scope: !8657)
!8663 = !DILocation(line: 3863, column: 8, scope: !8657)
!8664 = !DILocation(line: 3864, column: 7, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 3864, column: 7)
!8666 = !DILocation(line: 3864, column: 7, scope: !8657)
!8667 = !DILocation(line: 3865, column: 12, scope: !8665)
!8668 = !DILocation(line: 3865, column: 5, scope: !8665)
!8669 = !DILocation(line: 3866, column: 10, scope: !8657)
!8670 = !DILocation(line: 3867, column: 10, scope: !8657)
!8671 = !DILocation(line: 3868, column: 8, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 3868, column: 7)
!8673 = !DILocation(line: 3868, column: 7, scope: !8657)
!8674 = !DILocation(line: 3869, column: 12, scope: !8672)
!8675 = !DILocation(line: 3869, column: 5, scope: !8672)
!8676 = !DILocation(line: 3871, column: 1, scope: !8657)
!8677 = distinct !DISubprogram(name: "decl_with_nonnull_addr_p", scope: !3, file: !3, line: 3877, type: !6534, scopeLine: 3878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8678)
!8678 = !{!8679}
!8679 = !DILocalVariable(name: "expr", arg: 1, scope: !8677, file: !3, line: 3877, type: !2855)
!8680 = !DILocation(line: 0, scope: !8677)
!8681 = !DILocation(line: 3879, column: 11, scope: !8677)
!8682 = !DILocation(line: 3880, column: 4, scope: !8677)
!8683 = !DILocation(line: 3880, column: 25, scope: !8677)
!8684 = !DILocation(line: 3881, column: 8, scope: !8677)
!8685 = !DILocation(line: 3881, column: 28, scope: !8677)
!8686 = !DILocation(line: 3882, column: 8, scope: !8677)
!8687 = !DILocation(line: 3882, column: 12, scope: !8677)
!8688 = !DILocation(line: 3882, column: 11, scope: !8677)
!8689 = !DILocation(line: 3879, column: 3, scope: !8677)
!8690 = distinct !DISubprogram(name: "c_common_truthvalue_conversion", scope: !3, file: !3, line: 3901, type: !8691, scopeLine: 3902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8693)
!8691 = !DISubroutineType(types: !8692)
!8692 = !{!1527, !1651, !1527}
!8693 = !{!8694, !8695, !8696, !8699, !8702, !8705}
!8694 = !DILocalVariable(name: "location", arg: 1, scope: !8690, file: !3, line: 3901, type: !1651)
!8695 = !DILocalVariable(name: "expr", arg: 2, scope: !8690, file: !3, line: 3901, type: !1527)
!8696 = !DILocalVariable(name: "inner", scope: !8697, file: !3, line: 3961, type: !1527)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 3960, column: 7)
!8698 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 3904, column: 5)
!8699 = !DILocalVariable(name: "t", scope: !8700, file: !3, line: 4079, type: !1527)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 4078, column: 5)
!8701 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 4077, column: 7)
!8702 = !DILocalVariable(name: "fixed_zero_node", scope: !8703, file: !3, line: 4096, type: !1527)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 4095, column: 5)
!8704 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 4094, column: 7)
!8705 = !DILabel(scope: !8690, name: "ret", file: !3, line: 4104)
!8706 = !DILocation(line: 4006, column: 14, scope: !8698)
!8707 = !DILocation(line: 0, scope: !8690)
!8708 = !DILocation(line: 3903, column: 11, scope: !8690)
!8709 = !DILocation(line: 3903, column: 3, scope: !8690)
!8710 = !DILocation(line: 3909, column: 11, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 3909, column: 11)
!8712 = !DILocation(line: 3909, column: 31, scope: !8711)
!8713 = !DILocation(line: 3909, column: 28, scope: !8711)
!8714 = !DILocation(line: 3909, column: 11, scope: !8698)
!8715 = !DILocation(line: 3911, column: 14, scope: !8698)
!8716 = !DILocation(line: 3913, column: 7, scope: !8698)
!8717 = !DILocation(line: 3920, column: 11, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 3920, column: 11)
!8719 = !DILocation(line: 3920, column: 31, scope: !8718)
!8720 = !DILocation(line: 3920, column: 28, scope: !8718)
!8721 = !DILocation(line: 3920, column: 11, scope: !8698)
!8722 = !DILocation(line: 3922, column: 14, scope: !8698)
!8723 = !DILocation(line: 3927, column: 7, scope: !8698)
!8724 = !DILocation(line: 3930, column: 11, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 3930, column: 11)
!8726 = !DILocation(line: 3930, column: 31, scope: !8725)
!8727 = !DILocation(line: 3930, column: 28, scope: !8725)
!8728 = !DILocation(line: 3930, column: 11, scope: !8698)
!8729 = !DILocation(line: 3932, column: 14, scope: !8698)
!8730 = !DILocation(line: 3935, column: 7, scope: !8698)
!8731 = !DILocation(line: 3941, column: 14, scope: !8698)
!8732 = !DILocation(line: 3945, column: 38, scope: !8698)
!8733 = !DILocation(line: 3945, column: 14, scope: !8698)
!8734 = !DILocation(line: 3950, column: 39, scope: !8698)
!8735 = !DILocation(line: 3951, column: 9, scope: !8698)
!8736 = !DILocation(line: 3950, column: 14, scope: !8698)
!8737 = !DILocation(line: 3956, column: 14, scope: !8698)
!8738 = !DILocation(line: 3956, column: 7, scope: !8698)
!8739 = !DILocation(line: 3961, column: 16, scope: !8697)
!8740 = !DILocation(line: 0, scope: !8697)
!8741 = !DILocation(line: 3962, column: 6, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 3962, column: 6)
!8743 = !DILocation(line: 3962, column: 6, scope: !8697)
!8744 = !DILocation(line: 3965, column: 6, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 3963, column: 4)
!8746 = !DILocation(line: 3969, column: 13, scope: !8745)
!8747 = !DILocation(line: 3969, column: 6, scope: !8745)
!8748 = !DILocation(line: 3974, column: 6, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 3974, column: 6)
!8750 = !DILocation(line: 3974, column: 6, scope: !8697)
!8751 = !DILocation(line: 3976, column: 6, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 3975, column: 4)
!8753 = !DILocation(line: 3980, column: 6, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 3980, column: 6)
!8755 = !DILocation(line: 3980, column: 6, scope: !8697)
!8756 = !DILocation(line: 3982, column: 13, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 3981, column: 4)
!8758 = !DILocation(line: 3984, column: 6, scope: !8757)
!8759 = !DILocation(line: 3987, column: 11, scope: !8754)
!8760 = !DILocation(line: 3987, column: 4, scope: !8754)
!8761 = !DILocation(line: 3991, column: 31, scope: !8698)
!8762 = !DILocation(line: 3992, column: 11, scope: !8698)
!8763 = !DILocation(line: 3995, column: 7, scope: !8698)
!8764 = !DILocation(line: 3994, column: 3, scope: !8698)
!8765 = !DILocation(line: 3997, column: 7, scope: !8698)
!8766 = !DILocation(line: 3996, column: 3, scope: !8698)
!8767 = !DILocation(line: 3991, column: 14, scope: !8698)
!8768 = !DILocation(line: 3999, column: 7, scope: !8698)
!8769 = !DILocation(line: 0, scope: !8698)
!8770 = !DILocation(line: 4012, column: 11, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 4012, column: 11)
!8772 = !DILocation(line: 4012, column: 11, scope: !8698)
!8773 = !DILocation(line: 4014, column: 11, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 4013, column: 2)
!8775 = !DILocation(line: 4018, column: 4, scope: !8774)
!8776 = !DILocation(line: 4021, column: 9, scope: !8771)
!8777 = !DILocation(line: 4026, column: 11, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 4026, column: 11)
!8779 = !DILocation(line: 0, scope: !8778)
!8780 = !DILocation(line: 4026, column: 11, scope: !8698)
!8781 = !DILocation(line: 4028, column: 11, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 4027, column: 2)
!8783 = !DILocation(line: 4036, column: 4, scope: !8782)
!8784 = !DILocation(line: 4041, column: 11, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 4039, column: 2)
!8786 = !DILocation(line: 4047, column: 4, scope: !8785)
!8787 = !DILocation(line: 4053, column: 11, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 4053, column: 11)
!8789 = !DILocation(line: 4053, column: 40, scope: !8788)
!8790 = !DILocation(line: 4054, column: 4, scope: !8788)
!8791 = !DILocation(line: 4054, column: 7, scope: !8788)
!8792 = !DILocation(line: 4054, column: 54, scope: !8788)
!8793 = !DILocation(line: 4053, column: 11, scope: !8698)
!8794 = !DILocation(line: 4057, column: 11, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 4057, column: 11)
!8796 = !DILocation(line: 4058, column: 7, scope: !8795)
!8797 = !DILocation(line: 4058, column: 4, scope: !8795)
!8798 = !DILocation(line: 4057, column: 11, scope: !8698)
!8799 = !DILocation(line: 4059, column: 9, scope: !8795)
!8800 = !DILocation(line: 4064, column: 12, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 4064, column: 11)
!8802 = !DILocation(line: 4065, column: 7, scope: !8801)
!8803 = !DILocation(line: 4065, column: 4, scope: !8801)
!8804 = !DILocation(line: 4067, column: 4, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 4066, column: 2)
!8806 = !DILocation(line: 4069, column: 27, scope: !8805)
!8807 = !DILocation(line: 4070, column: 2, scope: !8805)
!8808 = !DILocation(line: 4077, column: 7, scope: !8701)
!8809 = !DILocation(line: 4077, column: 36, scope: !8701)
!8810 = !DILocation(line: 4077, column: 7, scope: !8690)
!8811 = !DILocation(line: 4079, column: 16, scope: !8700)
!8812 = !DILocation(line: 0, scope: !8700)
!8813 = !DILocation(line: 4081, column: 9, scope: !8700)
!8814 = !DILocation(line: 4082, column: 10, scope: !8700)
!8815 = !DILocation(line: 4086, column: 3, scope: !8700)
!8816 = !DILocation(line: 4084, column: 2, scope: !8700)
!8817 = !DILocation(line: 4089, column: 3, scope: !8700)
!8818 = !DILocation(line: 4087, column: 2, scope: !8700)
!8819 = !DILocation(line: 4080, column: 15, scope: !8700)
!8820 = !DILocation(line: 4094, column: 36, scope: !8704)
!8821 = !DILocation(line: 4094, column: 7, scope: !8690)
!8822 = !DILocation(line: 4097, column: 8, scope: !8703)
!8823 = !DILocation(line: 4096, column: 30, scope: !8703)
!8824 = !DILocation(line: 0, scope: !8703)
!8825 = !DILocation(line: 4099, column: 14, scope: !8703)
!8826 = !DILocation(line: 4102, column: 54, scope: !8704)
!8827 = !DILocation(line: 4102, column: 12, scope: !8704)
!8828 = !DILocation(line: 4102, column: 5, scope: !8704)
!8829 = !DILocation(line: 4104, column: 2, scope: !8690)
!8830 = !DILocation(line: 4105, column: 3, scope: !8690)
!8831 = !DILocation(line: 4106, column: 3, scope: !8690)
!8832 = !DILocation(line: 4107, column: 1, scope: !8690)
!8833 = distinct !DISubprogram(name: "c_apply_type_quals_to_decl", scope: !3, file: !3, line: 4120, type: !8834, scopeLine: 4121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8836)
!8834 = !DISubroutineType(types: !8835)
!8835 = !{null, !1520, !1527}
!8836 = !{!8837, !8838, !8839}
!8837 = !DILocalVariable(name: "type_quals", arg: 1, scope: !8833, file: !3, line: 4120, type: !1520)
!8838 = !DILocalVariable(name: "decl", arg: 2, scope: !8833, file: !3, line: 4120, type: !1527)
!8839 = !DILocalVariable(name: "type", scope: !8833, file: !3, line: 4122, type: !1527)
!8840 = !DILocation(line: 0, scope: !8833)
!8841 = !DILocation(line: 4122, column: 15, scope: !8833)
!8842 = !DILocation(line: 4124, column: 15, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 4124, column: 7)
!8844 = !DILocation(line: 4124, column: 12, scope: !8843)
!8845 = !DILocation(line: 4124, column: 7, scope: !8833)
!8846 = !DILocation(line: 4127, column: 20, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 4127, column: 7)
!8848 = !DILocation(line: 4128, column: 8, scope: !8847)
!8849 = !DILocation(line: 4128, column: 12, scope: !8847)
!8850 = !DILocation(line: 4128, column: 17, scope: !8847)
!8851 = !DILocation(line: 4128, column: 20, scope: !8847)
!8852 = !DILocation(line: 4128, column: 37, scope: !8847)
!8853 = !DILocation(line: 4134, column: 7, scope: !8847)
!8854 = !DILocation(line: 4134, column: 12, scope: !8847)
!8855 = !DILocation(line: 4134, column: 17, scope: !8847)
!8856 = !DILocation(line: 4134, column: 20, scope: !8847)
!8857 = !DILocation(line: 4127, column: 7, scope: !8833)
!8858 = !DILocation(line: 4135, column: 5, scope: !8847)
!8859 = !DILocation(line: 4135, column: 26, scope: !8847)
!8860 = !DILocation(line: 4136, column: 18, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 4136, column: 7)
!8862 = !DILocation(line: 4136, column: 7, scope: !8833)
!8863 = !DILocation(line: 4138, column: 7, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 4137, column: 5)
!8865 = !DILocation(line: 4138, column: 32, scope: !8864)
!8866 = !DILocation(line: 4139, column: 33, scope: !8864)
!8867 = !DILocation(line: 4140, column: 5, scope: !8864)
!8868 = !DILocation(line: 4141, column: 18, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 4141, column: 7)
!8870 = !DILocation(line: 4141, column: 7, scope: !8833)
!8871 = !DILocation(line: 4143, column: 7, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 4142, column: 5)
!8873 = !DILocation(line: 4143, column: 19, scope: !8872)
!8874 = !DILocation(line: 4143, column: 22, scope: !8872)
!8875 = !DILocation(line: 4143, column: 39, scope: !8872)
!8876 = !DILocation(line: 4146, column: 9, scope: !8872)
!8877 = distinct !{!8877, !8871, !8876}
!8878 = !DILocation(line: 4148, column: 8, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 4147, column: 11)
!8880 = !DILocation(line: 4149, column: 4, scope: !8879)
!8881 = !DILocation(line: 4149, column: 8, scope: !8879)
!8882 = !DILocation(line: 4147, column: 11, scope: !8872)
!8883 = !DILocation(line: 4150, column: 2, scope: !8879)
!8884 = !DILocation(line: 4152, column: 1, scope: !8833)
!8885 = distinct !DISubprogram(name: "c_common_get_alias_set", scope: !3, file: !3, line: 4207, type: !8886, scopeLine: 4208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8888)
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!2108, !1527}
!8888 = !{!8889, !8890, !8891, !8892, !8895, !8898}
!8889 = !DILocalVariable(name: "t", arg: 1, scope: !8885, file: !3, line: 4207, type: !1527)
!8890 = !DILocalVariable(name: "u", scope: !8885, file: !3, line: 4209, type: !1527)
!8891 = !DILocalVariable(name: "slot", scope: !8885, file: !3, line: 4210, type: !2332)
!8892 = !DILocalVariable(name: "t1", scope: !8893, file: !3, line: 4250, type: !1527)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 4249, column: 5)
!8894 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4248, column: 7)
!8895 = !DILocalVariable(name: "t1", scope: !8896, file: !3, line: 4258, type: !1527)
!8896 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 4257, column: 5)
!8897 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 4256, column: 12)
!8898 = !DILocalVariable(name: "t2", scope: !8899, file: !3, line: 4306, type: !1527)
!8899 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 4305, column: 5)
!8900 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4304, column: 7)
!8901 = !DILocation(line: 0, scope: !8885)
!8902 = !DILocation(line: 4214, column: 7, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4214, column: 7)
!8904 = !DILocation(line: 4214, column: 18, scope: !8903)
!8905 = !DILocation(line: 4214, column: 21, scope: !8903)
!8906 = !DILocation(line: 4214, column: 7, scope: !8885)
!8907 = !DILocation(line: 4216, column: 25, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 4216, column: 11)
!8909 = distinct !DILexicalBlock(scope: !8903, file: !3, line: 4215, column: 5)
!8910 = !DILocation(line: 4216, column: 11, scope: !8909)
!8911 = !DILocation(line: 4217, column: 24, scope: !8908)
!8912 = !DILocation(line: 4217, column: 9, scope: !8908)
!8913 = !DILocation(line: 4217, column: 2, scope: !8908)
!8914 = !DILocation(line: 4227, column: 8, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4227, column: 3)
!8916 = !DILocation(line: 4228, column: 8, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 4227, column: 3)
!8918 = !DILocation(line: 0, scope: !8915)
!8919 = !DILocation(line: 4228, column: 22, scope: !8917)
!8920 = !DILocation(line: 4228, column: 39, scope: !8917)
!8921 = !DILocation(line: 4228, column: 56, scope: !8917)
!8922 = !DILocation(line: 4227, column: 3, scope: !8915)
!8923 = !DILocation(line: 4231, column: 2, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 4230, column: 9)
!8925 = !DILocation(line: 0, scope: !8917)
!8926 = !DILocation(line: 4229, column: 12, scope: !8917)
!8927 = !DILocation(line: 4231, column: 5, scope: !8924)
!8928 = !DILocation(line: 4231, column: 49, scope: !8924)
!8929 = !DILocation(line: 4230, column: 9, scope: !8917)
!8930 = !DILocation(line: 4227, column: 3, scope: !8917)
!8931 = distinct !{!8931, !8922, !8932}
!8932 = !DILocation(line: 4232, column: 14, scope: !8915)
!8933 = !DILocation(line: 4235, column: 7, scope: !8885)
!8934 = !DILocation(line: 4240, column: 12, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4240, column: 7)
!8936 = !DILocation(line: 4240, column: 9, scope: !8935)
!8937 = !DILocation(line: 4241, column: 15, scope: !8935)
!8938 = !DILocation(line: 4241, column: 12, scope: !8935)
!8939 = !DILocation(line: 4241, column: 7, scope: !8935)
!8940 = !DILocation(line: 4242, column: 15, scope: !8935)
!8941 = !DILocation(line: 4242, column: 12, scope: !8935)
!8942 = !DILocation(line: 4248, column: 21, scope: !8894)
!8943 = !DILocation(line: 4248, column: 37, scope: !8894)
!8944 = !DILocation(line: 4248, column: 40, scope: !8894)
!8945 = !DILocation(line: 4248, column: 7, scope: !8885)
!8946 = !DILocation(line: 4250, column: 17, scope: !8893)
!8947 = !DILocation(line: 0, scope: !8893)
!8948 = !DILocation(line: 4253, column: 14, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 4253, column: 11)
!8950 = !DILocation(line: 4253, column: 11, scope: !8893)
!8951 = !DILocation(line: 4254, column: 9, scope: !8949)
!8952 = !DILocation(line: 4254, column: 2, scope: !8949)
!8953 = !DILocation(line: 4256, column: 12, scope: !8897)
!8954 = !DILocation(line: 4256, column: 12, scope: !8894)
!8955 = !DILocation(line: 4283, column: 12, scope: !8896)
!8956 = !DILocation(line: 0, scope: !8896)
!8957 = !DILocation(line: 4284, column: 14, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 4284, column: 11)
!8959 = !DILocation(line: 4284, column: 11, scope: !8896)
!8960 = !DILocation(line: 4285, column: 9, scope: !8958)
!8961 = !DILocation(line: 4285, column: 2, scope: !8958)
!8962 = !DILocation(line: 0, scope: !8894)
!8963 = !DILocation(line: 4295, column: 7, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4295, column: 7)
!8965 = !DILocation(line: 4295, column: 30, scope: !8964)
!8966 = !DILocation(line: 4295, column: 27, scope: !8964)
!8967 = !DILocation(line: 4299, column: 7, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4299, column: 7)
!8969 = !DILocation(line: 4299, column: 21, scope: !8968)
!8970 = !DILocation(line: 4304, column: 7, scope: !8900)
!8971 = !DILocation(line: 4304, column: 21, scope: !8900)
!8972 = !DILocation(line: 4304, column: 7, scope: !8885)
!8973 = !DILocation(line: 4308, column: 12, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 4308, column: 7)
!8975 = !DILocation(line: 0, scope: !8974)
!8976 = !DILocation(line: 0, scope: !8899)
!8977 = !DILocation(line: 4309, column: 5, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 4308, column: 7)
!8979 = !DILocation(line: 4309, column: 20, scope: !8978)
!8980 = !DILocation(line: 4308, column: 7, scope: !8974)
!8981 = !DILocation(line: 4308, column: 7, scope: !8978)
!8982 = distinct !{!8982, !8980, !8983}
!8983 = !DILocation(line: 4311, column: 2, scope: !8974)
!8984 = !DILocation(line: 4312, column: 26, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 4312, column: 11)
!8986 = !DILocation(line: 4313, column: 4, scope: !8985)
!8987 = !DILocation(line: 4313, column: 22, scope: !8985)
!8988 = !DILocation(line: 4314, column: 4, scope: !8985)
!8989 = !DILocation(line: 4314, column: 22, scope: !8985)
!8990 = !DILocation(line: 4315, column: 4, scope: !8985)
!8991 = !DILocation(line: 4315, column: 22, scope: !8985)
!8992 = !DILocation(line: 4312, column: 11, scope: !8899)
!8993 = !DILocation(line: 4317, column: 11, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 4317, column: 11)
!8995 = !DILocation(line: 4317, column: 26, scope: !8994)
!8996 = !DILocation(line: 0, scope: !8900)
!8997 = !DILocation(line: 4321, column: 21, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4321, column: 7)
!8999 = !DILocation(line: 4322, column: 7, scope: !8998)
!9000 = !DILocation(line: 4322, column: 24, scope: !8998)
!9001 = !DILocation(line: 4323, column: 7, scope: !8998)
!9002 = !DILocation(line: 4323, column: 24, scope: !8998)
!9003 = !DILocation(line: 4324, column: 7, scope: !8998)
!9004 = !DILocation(line: 4324, column: 24, scope: !8998)
!9005 = !DILocation(line: 4325, column: 7, scope: !8998)
!9006 = !DILocation(line: 4321, column: 7, scope: !8885)
!9007 = !DILocation(line: 4328, column: 7, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4328, column: 7)
!9009 = !DILocation(line: 4328, column: 21, scope: !9008)
!9010 = !DILocation(line: 4328, column: 7, scope: !8885)
!9011 = !DILocation(line: 4333, column: 8, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4333, column: 7)
!9013 = !DILocation(line: 4333, column: 7, scope: !8885)
!9014 = !DILocation(line: 4334, column: 23, scope: !9012)
!9015 = !DILocation(line: 4334, column: 21, scope: !9012)
!9016 = !DILocation(line: 4334, column: 5, scope: !9012)
!9017 = !DILocation(line: 4337, column: 26, scope: !8885)
!9018 = !DILocation(line: 4337, column: 43, scope: !8885)
!9019 = !DILocation(line: 4337, column: 10, scope: !8885)
!9020 = !DILocation(line: 4338, column: 7, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4338, column: 7)
!9022 = !DILocation(line: 4338, column: 13, scope: !9021)
!9023 = !DILocation(line: 4338, column: 7, scope: !8885)
!9024 = !DILocation(line: 4340, column: 28, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 4339, column: 5)
!9026 = !DILocation(line: 4340, column: 7, scope: !9025)
!9027 = !DILocation(line: 4340, column: 26, scope: !9025)
!9028 = !DILocation(line: 4341, column: 14, scope: !9025)
!9029 = !DILocation(line: 4341, column: 7, scope: !9025)
!9030 = !DILocation(line: 4346, column: 11, scope: !9021)
!9031 = !DILocation(line: 4348, column: 3, scope: !8885)
!9032 = !DILocation(line: 4349, column: 1, scope: !8885)
!9033 = distinct !DISubprogram(name: "c_type_hash", scope: !3, file: !3, line: 4160, type: !2318, scopeLine: 4161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9034)
!9034 = !{!9035, !9036, !9037, !9038, !9039, !9041}
!9035 = !DILocalVariable(name: "p", arg: 1, scope: !9033, file: !3, line: 4160, type: !2158)
!9036 = !DILocalVariable(name: "i", scope: !9033, file: !3, line: 4162, type: !1520)
!9037 = !DILocalVariable(name: "shift", scope: !9033, file: !3, line: 4163, type: !1520)
!9038 = !DILocalVariable(name: "size", scope: !9033, file: !3, line: 4163, type: !1520)
!9039 = !DILocalVariable(name: "t", scope: !9033, file: !3, line: 4164, type: !9040)
!9040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2855)
!9041 = !DILocalVariable(name: "t2", scope: !9033, file: !3, line: 4165, type: !1527)
!9042 = !DILocation(line: 0, scope: !9033)
!9043 = !DILocation(line: 4166, column: 11, scope: !9033)
!9044 = !DILocation(line: 4166, column: 3, scope: !9033)
!9045 = !DILocation(line: 4170, column: 27, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 4167, column: 5)
!9047 = !DILocation(line: 4170, column: 14, scope: !9046)
!9048 = !DILocation(line: 4170, column: 42, scope: !9046)
!9049 = !DILocation(line: 4199, column: 1, scope: !9033)
!9050 = !DILocation(line: 4174, column: 12, scope: !9046)
!9051 = !DILocation(line: 4175, column: 7, scope: !9046)
!9052 = !DILocation(line: 4178, column: 12, scope: !9046)
!9053 = !DILocation(line: 4179, column: 7, scope: !9046)
!9054 = !DILocation(line: 4182, column: 12, scope: !9046)
!9055 = !DILocation(line: 4183, column: 7, scope: !9046)
!9056 = !DILocation(line: 4186, column: 12, scope: !9046)
!9057 = !DILocation(line: 4187, column: 7, scope: !9046)
!9058 = !DILocation(line: 4189, column: 7, scope: !9046)
!9059 = !DILocation(line: 4190, column: 5, scope: !9046)
!9060 = !DILocation(line: 4191, column: 3, scope: !9033)
!9061 = !DILocation(line: 4191, column: 3, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 4191, column: 3)
!9063 = !DILocation(line: 4192, column: 6, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 4191, column: 3)
!9065 = !DILocation(line: 4191, column: 19, scope: !9064)
!9066 = !DILocation(line: 4191, column: 3, scope: !9064)
!9067 = distinct !{!9067, !9061, !9068}
!9068 = !DILocation(line: 4192, column: 6, scope: !9062)
!9069 = !DILocation(line: 4194, column: 7, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 4194, column: 7)
!9071 = !DILocation(line: 4194, column: 33, scope: !9070)
!9072 = !DILocation(line: 4194, column: 7, scope: !9033)
!9073 = !DILocation(line: 4197, column: 12, scope: !9070)
!9074 = !DILocation(line: 4198, column: 29, scope: !9033)
!9075 = !DILocation(line: 4198, column: 24, scope: !9033)
!9076 = distinct !DISubprogram(name: "c_sizeof_or_alignof_type", scope: !3, file: !3, line: 4358, type: !9077, scopeLine: 4360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9079)
!9077 = !DISubroutineType(types: !9078)
!9078 = !{!1527, !1651, !1527, !1519, !1520}
!9079 = !{!9080, !9081, !9082, !9083, !9084, !9085, !9086}
!9080 = !DILocalVariable(name: "loc", arg: 1, scope: !9076, file: !3, line: 4358, type: !1651)
!9081 = !DILocalVariable(name: "type", arg: 2, scope: !9076, file: !3, line: 4359, type: !1527)
!9082 = !DILocalVariable(name: "is_sizeof", arg: 3, scope: !9076, file: !3, line: 4359, type: !1519)
!9083 = !DILocalVariable(name: "complain", arg: 4, scope: !9076, file: !3, line: 4359, type: !1520)
!9084 = !DILocalVariable(name: "op_name", scope: !9076, file: !3, line: 4361, type: !1525)
!9085 = !DILocalVariable(name: "value", scope: !9076, file: !3, line: 4362, type: !1527)
!9086 = !DILocalVariable(name: "type_code", scope: !9076, file: !3, line: 4363, type: !139)
!9087 = !DILocation(line: 0, scope: !9076)
!9088 = !DILocation(line: 4363, column: 30, scope: !9076)
!9089 = !DILocation(line: 4365, column: 13, scope: !9076)
!9090 = !DILocation(line: 4367, column: 7, scope: !9076)
!9091 = !DILocation(line: 4369, column: 11, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 4368, column: 5)
!9093 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 4367, column: 7)
!9094 = !DILocation(line: 4371, column: 17, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 4371, column: 8)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 4370, column: 2)
!9097 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 4369, column: 11)
!9098 = !DILocation(line: 4371, column: 21, scope: !9095)
!9099 = !DILocation(line: 4371, column: 33, scope: !9095)
!9100 = !DILocation(line: 4371, column: 30, scope: !9095)
!9101 = !DILocation(line: 4372, column: 20, scope: !9095)
!9102 = !DILocation(line: 4372, column: 6, scope: !9095)
!9103 = !DILocation(line: 4374, column: 20, scope: !9095)
!9104 = !DILocation(line: 4375, column: 20, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 4374, column: 20)
!9106 = !DILocation(line: 4375, column: 13, scope: !9105)
!9107 = !DILocation(line: 4376, column: 12, scope: !9096)
!9108 = !DILocation(line: 4377, column: 2, scope: !9096)
!9109 = !DILocation(line: 4379, column: 10, scope: !9097)
!9110 = !DILocation(line: 4384, column: 16, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 4383, column: 11)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !3, line: 4382, column: 5)
!9113 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 4381, column: 12)
!9114 = !DILocation(line: 4384, column: 20, scope: !9111)
!9115 = !DILocation(line: 4384, column: 32, scope: !9111)
!9116 = !DILocation(line: 4384, column: 29, scope: !9111)
!9117 = !DILocation(line: 4385, column: 16, scope: !9111)
!9118 = !DILocation(line: 4385, column: 2, scope: !9111)
!9119 = !DILocation(line: 4387, column: 17, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 4387, column: 16)
!9121 = !DILocation(line: 4387, column: 16, scope: !9111)
!9122 = !DILocation(line: 4388, column: 16, scope: !9120)
!9123 = !DILocation(line: 4388, column: 9, scope: !9120)
!9124 = !DILocation(line: 4389, column: 15, scope: !9112)
!9125 = !DILocation(line: 4390, column: 5, scope: !9112)
!9126 = !DILocation(line: 4391, column: 13, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9113, file: !3, line: 4391, column: 12)
!9128 = !DILocation(line: 4391, column: 12, scope: !9113)
!9129 = !DILocation(line: 4393, column: 11, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 4393, column: 11)
!9131 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 4392, column: 5)
!9132 = !DILocation(line: 4393, column: 11, scope: !9131)
!9133 = !DILocation(line: 4394, column: 2, scope: !9130)
!9134 = !DILocation(line: 4396, column: 15, scope: !9131)
!9135 = !DILocation(line: 4397, column: 5, scope: !9131)
!9136 = !DILocation(line: 4400, column: 11, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 4399, column: 5)
!9138 = !DILocation(line: 4402, column: 46, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 4400, column: 11)
!9140 = !DILocation(line: 4403, column: 5, scope: !9139)
!9141 = !DILocation(line: 4402, column: 10, scope: !9139)
!9142 = !DILocation(line: 4402, column: 2, scope: !9139)
!9143 = !DILocation(line: 4406, column: 10, scope: !9139)
!9144 = !DILocation(line: 0, scope: !9093)
!9145 = !DILocation(line: 4413, column: 34, scope: !9076)
!9146 = !DILocation(line: 4413, column: 11, scope: !9076)
!9147 = !DILocation(line: 4414, column: 3, scope: !9076)
!9148 = !DILocation(line: 4417, column: 1, scope: !9076)
!9149 = distinct !DISubprogram(name: "c_alignof_expr", scope: !3, file: !3, line: 4426, type: !8691, scopeLine: 4427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9150)
!9150 = !{!9151, !9152, !9153, !9154, !9160, !9161, !9162}
!9151 = !DILocalVariable(name: "loc", arg: 1, scope: !9149, file: !3, line: 4426, type: !1651)
!9152 = !DILocalVariable(name: "expr", arg: 2, scope: !9149, file: !3, line: 4426, type: !1527)
!9153 = !DILocalVariable(name: "t", scope: !9149, file: !3, line: 4428, type: !1527)
!9154 = !DILocalVariable(name: "t", scope: !9155, file: !3, line: 4445, type: !1527)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 4444, column: 5)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 4443, column: 12)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 4439, column: 12)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 4433, column: 12)
!9159 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4430, column: 7)
!9160 = !DILocalVariable(name: "best", scope: !9155, file: !3, line: 4446, type: !1527)
!9161 = !DILocalVariable(name: "bestalign", scope: !9155, file: !3, line: 4447, type: !1520)
!9162 = !DILocalVariable(name: "thisalign", scope: !9163, file: !3, line: 4452, type: !1520)
!9163 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 4451, column: 2)
!9164 = !DILocation(line: 0, scope: !9149)
!9165 = !DILocation(line: 4430, column: 7, scope: !9159)
!9166 = !DILocation(line: 4430, column: 7, scope: !9149)
!9167 = !DILocation(line: 4431, column: 9, scope: !9159)
!9168 = !DILocation(line: 4431, column: 5, scope: !9159)
!9169 = !DILocation(line: 4433, column: 29, scope: !9158)
!9170 = !DILocation(line: 4434, column: 5, scope: !9158)
!9171 = !DILocation(line: 4434, column: 8, scope: !9158)
!9172 = !DILocation(line: 4433, column: 12, scope: !9159)
!9173 = !DILocation(line: 4436, column: 7, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 4435, column: 5)
!9175 = !DILocation(line: 4437, column: 11, scope: !9174)
!9176 = !DILocation(line: 4438, column: 5, scope: !9174)
!9177 = !DILocation(line: 4440, column: 5, scope: !9157)
!9178 = !DILocation(line: 4440, column: 8, scope: !9157)
!9179 = !DILocation(line: 4440, column: 43, scope: !9157)
!9180 = !DILocation(line: 4439, column: 12, scope: !9158)
!9181 = !DILocation(line: 4441, column: 9, scope: !9157)
!9182 = !DILocation(line: 4443, column: 29, scope: !9156)
!9183 = !DILocation(line: 4443, column: 12, scope: !9157)
!9184 = !DILocation(line: 4445, column: 16, scope: !9155)
!9185 = !DILocation(line: 0, scope: !9155)
!9186 = !DILocation(line: 4447, column: 23, scope: !9155)
!9187 = !DILocation(line: 4449, column: 7, scope: !9155)
!9188 = !DILocation(line: 4449, column: 14, scope: !9155)
!9189 = !DILocation(line: 4450, column: 10, scope: !9155)
!9190 = !DILocation(line: 4450, column: 54, scope: !9155)
!9191 = !DILocation(line: 4455, column: 16, scope: !9163)
!9192 = !DILocation(line: 0, scope: !9163)
!9193 = !DILocation(line: 4456, column: 18, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 4456, column: 8)
!9195 = !DILocation(line: 4456, column: 8, scope: !9163)
!9196 = distinct !{!9196, !9187, !9197}
!9197 = !DILocation(line: 4458, column: 2, scope: !9155)
!9198 = !DILocation(line: 4459, column: 14, scope: !9155)
!9199 = !DILocation(line: 4462, column: 12, scope: !9156)
!9200 = !DILocation(line: 4462, column: 5, scope: !9156)
!9201 = !DILocation(line: 0, scope: !9159)
!9202 = !DILocation(line: 4464, column: 33, scope: !9149)
!9203 = !DILocation(line: 4464, column: 10, scope: !9149)
!9204 = !DILocation(line: 4464, column: 3, scope: !9149)
!9205 = !DILocation(line: 4465, column: 1, scope: !9149)
!9206 = distinct !DISubprogram(name: "c_common_nodes_and_builtins", scope: !3, file: !3, line: 4666, type: !5478, scopeLine: 4667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9207)
!9207 = !{!9208, !9209, !9210, !9211, !9212, !9213, !9214, !9216, !9218, !9219}
!9208 = !DILocalVariable(name: "char16_type_size", scope: !9206, file: !3, line: 4668, type: !1520)
!9209 = !DILocalVariable(name: "char32_type_size", scope: !9206, file: !3, line: 4669, type: !1520)
!9210 = !DILocalVariable(name: "wchar_type_size", scope: !9206, file: !3, line: 4670, type: !1520)
!9211 = !DILocalVariable(name: "array_domain_type", scope: !9206, file: !3, line: 4671, type: !1527)
!9212 = !DILocalVariable(name: "va_list_ref_type_node", scope: !9206, file: !3, line: 4672, type: !1527)
!9213 = !DILocalVariable(name: "va_list_arg_type_node", scope: !9206, file: !3, line: 4673, type: !1527)
!9214 = !DILocalVariable(name: "void_name", scope: !9215, file: !3, line: 4878, type: !1527)
!9215 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4877, column: 3)
!9216 = !DILocalVariable(name: "l", scope: !9217, file: !3, line: 5064, type: !1520)
!9217 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5063, column: 3)
!9218 = !DILocalVariable(name: "pname", scope: !9217, file: !3, line: 5065, type: !1525)
!9219 = !DILocalVariable(name: "ptype", scope: !9217, file: !3, line: 5066, type: !1527)
!9220 = !DILocation(line: 4676, column: 39, scope: !9206)
!9221 = !DILocation(line: 4676, column: 3, scope: !9206)
!9222 = !DILocation(line: 4677, column: 42, scope: !9206)
!9223 = !DILocation(line: 4677, column: 3, scope: !9206)
!9224 = !DILocation(line: 4682, column: 7, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4682, column: 7)
!9226 = !DILocation(line: 4682, column: 7, scope: !9206)
!9227 = !DILocation(line: 4683, column: 44, scope: !9225)
!9228 = !DILocation(line: 4683, column: 5, scope: !9225)
!9229 = !DILocation(line: 4684, column: 46, scope: !9206)
!9230 = !DILocation(line: 4684, column: 3, scope: !9206)
!9231 = !DILocation(line: 4685, column: 54, scope: !9206)
!9232 = !DILocation(line: 4685, column: 3, scope: !9206)
!9233 = !DILocation(line: 4687, column: 10, scope: !9206)
!9234 = !DILocation(line: 4686, column: 3, scope: !9206)
!9235 = !DILocation(line: 4688, column: 7, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4688, column: 7)
!9237 = !DILocation(line: 4688, column: 7, scope: !9206)
!9238 = !DILocation(line: 4689, column: 52, scope: !9236)
!9239 = !DILocation(line: 4689, column: 5, scope: !9236)
!9240 = !DILocation(line: 4691, column: 10, scope: !9206)
!9241 = !DILocation(line: 4690, column: 3, scope: !9206)
!9242 = !DILocation(line: 4693, column: 10, scope: !9206)
!9243 = !DILocation(line: 4692, column: 3, scope: !9206)
!9244 = !DILocation(line: 4694, column: 7, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4694, column: 7)
!9246 = !DILocation(line: 4694, column: 7, scope: !9206)
!9247 = !DILocation(line: 4696, column: 5, scope: !9245)
!9248 = !DILocation(line: 4695, column: 5, scope: !9245)
!9249 = !DILocation(line: 4697, column: 48, scope: !9206)
!9250 = !DILocation(line: 4697, column: 3, scope: !9206)
!9251 = !DILocation(line: 4699, column: 10, scope: !9206)
!9252 = !DILocation(line: 4698, column: 3, scope: !9206)
!9253 = !DILocation(line: 4700, column: 7, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4700, column: 7)
!9255 = !DILocation(line: 4700, column: 7, scope: !9206)
!9256 = !DILocation(line: 4702, column: 5, scope: !9254)
!9257 = !DILocation(line: 4701, column: 5, scope: !9254)
!9258 = !DILocation(line: 4705, column: 48, scope: !9206)
!9259 = !DILocation(line: 4705, column: 3, scope: !9206)
!9260 = !DILocation(line: 4706, column: 50, scope: !9206)
!9261 = !DILocation(line: 4706, column: 3, scope: !9206)
!9262 = !DILocation(line: 4710, column: 20, scope: !9206)
!9263 = !DILocation(line: 4710, column: 30, scope: !9206)
!9264 = !DILocation(line: 4710, column: 3, scope: !9206)
!9265 = !DILocation(line: 4713, column: 20, scope: !9206)
!9266 = !DILocation(line: 4713, column: 30, scope: !9206)
!9267 = !DILocation(line: 4713, column: 3, scope: !9206)
!9268 = !DILocation(line: 4716, column: 20, scope: !9206)
!9269 = !DILocation(line: 4716, column: 30, scope: !9206)
!9270 = !DILocation(line: 4716, column: 3, scope: !9206)
!9271 = !DILocation(line: 4719, column: 20, scope: !9206)
!9272 = !DILocation(line: 4719, column: 30, scope: !9206)
!9273 = !DILocation(line: 4719, column: 3, scope: !9206)
!9274 = !DILocation(line: 4723, column: 15, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4723, column: 7)
!9276 = !DILocation(line: 4723, column: 7, scope: !9275)
!9277 = !DILocation(line: 4723, column: 7, scope: !9206)
!9278 = !DILocation(line: 4724, column: 22, scope: !9275)
!9279 = !DILocation(line: 4724, column: 32, scope: !9275)
!9280 = !DILocation(line: 4724, column: 5, scope: !9275)
!9281 = !DILocation(line: 4729, column: 20, scope: !9206)
!9282 = !DILocation(line: 4729, column: 30, scope: !9206)
!9283 = !DILocation(line: 4729, column: 3, scope: !9206)
!9284 = !DILocation(line: 4732, column: 20, scope: !9206)
!9285 = !DILocation(line: 4732, column: 30, scope: !9206)
!9286 = !DILocation(line: 4732, column: 3, scope: !9206)
!9287 = !DILocation(line: 4735, column: 20, scope: !9206)
!9288 = !DILocation(line: 4735, column: 30, scope: !9206)
!9289 = !DILocation(line: 4735, column: 3, scope: !9206)
!9290 = !DILocation(line: 4738, column: 20, scope: !9206)
!9291 = !DILocation(line: 4738, column: 30, scope: !9206)
!9292 = !DILocation(line: 4738, column: 3, scope: !9206)
!9293 = !DILocation(line: 4742, column: 15, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4742, column: 7)
!9295 = !DILocation(line: 4742, column: 7, scope: !9294)
!9296 = !DILocation(line: 4742, column: 7, scope: !9206)
!9297 = !DILocation(line: 4743, column: 22, scope: !9294)
!9298 = !DILocation(line: 4743, column: 32, scope: !9294)
!9299 = !DILocation(line: 4743, column: 5, scope: !9294)
!9300 = !DILocation(line: 4751, column: 7, scope: !9206)
!9301 = !DILocation(line: 4751, column: 5, scope: !9206)
!9302 = !DILocation(line: 4752, column: 20, scope: !9206)
!9303 = !DILocation(line: 4752, column: 30, scope: !9206)
!9304 = !DILocation(line: 4752, column: 3, scope: !9206)
!9305 = !DILocation(line: 4757, column: 7, scope: !9206)
!9306 = !DILocation(line: 4757, column: 5, scope: !9206)
!9307 = !DILocation(line: 4758, column: 20, scope: !9206)
!9308 = !DILocation(line: 4758, column: 30, scope: !9206)
!9309 = !DILocation(line: 4758, column: 3, scope: !9206)
!9310 = !DILocation(line: 4766, column: 5, scope: !9206)
!9311 = !DILocation(line: 4765, column: 18, scope: !9206)
!9312 = !DILocation(line: 4767, column: 49, scope: !9206)
!9313 = !DILocation(line: 4767, column: 27, scope: !9206)
!9314 = !DILocation(line: 4767, column: 25, scope: !9206)
!9315 = !DILocation(line: 4768, column: 17, scope: !9206)
!9316 = !DILocation(line: 4768, column: 3, scope: !9206)
!9317 = !DILocation(line: 4771, column: 5, scope: !9206)
!9318 = !DILocation(line: 4770, column: 17, scope: !9206)
!9319 = !DILocation(line: 4773, column: 30, scope: !9206)
!9320 = !DILocation(line: 4773, column: 3, scope: !9206)
!9321 = !DILocation(line: 4775, column: 41, scope: !9206)
!9322 = !DILocation(line: 4775, column: 3, scope: !9206)
!9323 = !DILocation(line: 4776, column: 42, scope: !9206)
!9324 = !DILocation(line: 4776, column: 3, scope: !9206)
!9325 = !DILocation(line: 4777, column: 48, scope: !9206)
!9326 = !DILocation(line: 4777, column: 3, scope: !9206)
!9327 = !DILocation(line: 4781, column: 15, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4781, column: 7)
!9329 = !DILocation(line: 4781, column: 7, scope: !9328)
!9330 = !DILocation(line: 4782, column: 7, scope: !9328)
!9331 = !DILocation(line: 4782, column: 18, scope: !9328)
!9332 = !DILocation(line: 4782, column: 10, scope: !9328)
!9333 = !DILocation(line: 4783, column: 7, scope: !9328)
!9334 = !DILocation(line: 4783, column: 18, scope: !9328)
!9335 = !DILocation(line: 4783, column: 10, scope: !9328)
!9336 = !DILocation(line: 4781, column: 7, scope: !9206)
!9337 = !DILocation(line: 4785, column: 48, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 4784, column: 5)
!9339 = !DILocation(line: 4785, column: 7, scope: !9338)
!9340 = !DILocation(line: 4786, column: 48, scope: !9338)
!9341 = !DILocation(line: 4786, column: 7, scope: !9338)
!9342 = !DILocation(line: 4787, column: 49, scope: !9338)
!9343 = !DILocation(line: 4787, column: 7, scope: !9338)
!9344 = !DILocation(line: 4788, column: 5, scope: !9338)
!9345 = !DILocation(line: 4790, column: 15, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4790, column: 7)
!9347 = !DILocation(line: 4790, column: 7, scope: !9346)
!9348 = !DILocation(line: 4790, column: 7, scope: !9206)
!9349 = !DILocation(line: 4792, column: 53, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 4791, column: 5)
!9351 = !DILocation(line: 4792, column: 7, scope: !9350)
!9352 = !DILocation(line: 4793, column: 45, scope: !9350)
!9353 = !DILocation(line: 4793, column: 7, scope: !9350)
!9354 = !DILocation(line: 4794, column: 52, scope: !9350)
!9355 = !DILocation(line: 4794, column: 7, scope: !9350)
!9356 = !DILocation(line: 4796, column: 7, scope: !9350)
!9357 = !DILocation(line: 4795, column: 7, scope: !9350)
!9358 = !DILocation(line: 4798, column: 7, scope: !9350)
!9359 = !DILocation(line: 4797, column: 7, scope: !9350)
!9360 = !DILocation(line: 4800, column: 7, scope: !9350)
!9361 = !DILocation(line: 4799, column: 7, scope: !9350)
!9362 = !DILocation(line: 4802, column: 7, scope: !9350)
!9363 = !DILocation(line: 4801, column: 7, scope: !9350)
!9364 = !DILocation(line: 4804, column: 7, scope: !9350)
!9365 = !DILocation(line: 4803, column: 7, scope: !9350)
!9366 = !DILocation(line: 4806, column: 7, scope: !9350)
!9367 = !DILocation(line: 4805, column: 7, scope: !9350)
!9368 = !DILocation(line: 4807, column: 52, scope: !9350)
!9369 = !DILocation(line: 4807, column: 7, scope: !9350)
!9370 = !DILocation(line: 4809, column: 7, scope: !9350)
!9371 = !DILocation(line: 4808, column: 7, scope: !9350)
!9372 = !DILocation(line: 4811, column: 7, scope: !9350)
!9373 = !DILocation(line: 4810, column: 7, scope: !9350)
!9374 = !DILocation(line: 4813, column: 7, scope: !9350)
!9375 = !DILocation(line: 4812, column: 7, scope: !9350)
!9376 = !DILocation(line: 4815, column: 7, scope: !9350)
!9377 = !DILocation(line: 4814, column: 7, scope: !9350)
!9378 = !DILocation(line: 4817, column: 7, scope: !9350)
!9379 = !DILocation(line: 4816, column: 7, scope: !9350)
!9380 = !DILocation(line: 4819, column: 7, scope: !9350)
!9381 = !DILocation(line: 4818, column: 7, scope: !9350)
!9382 = !DILocation(line: 4820, column: 53, scope: !9350)
!9383 = !DILocation(line: 4820, column: 7, scope: !9350)
!9384 = !DILocation(line: 4821, column: 45, scope: !9350)
!9385 = !DILocation(line: 4821, column: 7, scope: !9350)
!9386 = !DILocation(line: 4822, column: 52, scope: !9350)
!9387 = !DILocation(line: 4822, column: 7, scope: !9350)
!9388 = !DILocation(line: 4824, column: 7, scope: !9350)
!9389 = !DILocation(line: 4823, column: 7, scope: !9350)
!9390 = !DILocation(line: 4826, column: 7, scope: !9350)
!9391 = !DILocation(line: 4825, column: 7, scope: !9350)
!9392 = !DILocation(line: 4828, column: 7, scope: !9350)
!9393 = !DILocation(line: 4827, column: 7, scope: !9350)
!9394 = !DILocation(line: 4830, column: 7, scope: !9350)
!9395 = !DILocation(line: 4829, column: 7, scope: !9350)
!9396 = !DILocation(line: 4832, column: 7, scope: !9350)
!9397 = !DILocation(line: 4831, column: 7, scope: !9350)
!9398 = !DILocation(line: 4834, column: 7, scope: !9350)
!9399 = !DILocation(line: 4833, column: 7, scope: !9350)
!9400 = !DILocation(line: 4835, column: 52, scope: !9350)
!9401 = !DILocation(line: 4835, column: 7, scope: !9350)
!9402 = !DILocation(line: 4837, column: 7, scope: !9350)
!9403 = !DILocation(line: 4836, column: 7, scope: !9350)
!9404 = !DILocation(line: 4839, column: 6, scope: !9350)
!9405 = !DILocation(line: 4838, column: 7, scope: !9350)
!9406 = !DILocation(line: 4841, column: 7, scope: !9350)
!9407 = !DILocation(line: 4840, column: 7, scope: !9350)
!9408 = !DILocation(line: 4843, column: 7, scope: !9350)
!9409 = !DILocation(line: 4842, column: 7, scope: !9350)
!9410 = !DILocation(line: 4845, column: 7, scope: !9350)
!9411 = !DILocation(line: 4844, column: 7, scope: !9350)
!9412 = !DILocation(line: 4847, column: 7, scope: !9350)
!9413 = !DILocation(line: 4846, column: 7, scope: !9350)
!9414 = !DILocation(line: 4849, column: 5, scope: !9350)
!9415 = !DILocation(line: 4851, column: 20, scope: !9206)
!9416 = !DILocation(line: 4851, column: 30, scope: !9206)
!9417 = !DILocation(line: 4851, column: 3, scope: !9206)
!9418 = !DILocation(line: 4855, column: 20, scope: !9206)
!9419 = !DILocation(line: 4855, column: 30, scope: !9206)
!9420 = !DILocation(line: 4855, column: 3, scope: !9206)
!9421 = !DILocation(line: 4859, column: 20, scope: !9206)
!9422 = !DILocation(line: 4859, column: 30, scope: !9206)
!9423 = !DILocation(line: 4859, column: 3, scope: !9206)
!9424 = !DILocation(line: 4863, column: 20, scope: !9206)
!9425 = !DILocation(line: 4864, column: 6, scope: !9206)
!9426 = !DILocation(line: 4863, column: 3, scope: !9206)
!9427 = !DILocation(line: 4868, column: 7, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4868, column: 7)
!9429 = !DILocation(line: 4868, column: 7, scope: !9206)
!9430 = !DILocation(line: 4871, column: 50, scope: !9428)
!9431 = !DILocation(line: 4871, column: 25, scope: !9428)
!9432 = !DILocation(line: 4871, column: 23, scope: !9428)
!9433 = !DILocation(line: 4871, column: 5, scope: !9428)
!9434 = !DILocation(line: 4873, column: 40, scope: !9206)
!9435 = !DILocation(line: 4873, column: 3, scope: !9206)
!9436 = !DILocation(line: 4878, column: 22, scope: !9215)
!9437 = !DILocation(line: 4879, column: 32, scope: !9215)
!9438 = !DILocation(line: 4880, column: 5, scope: !9215)
!9439 = !DILocation(line: 4881, column: 7, scope: !9215)
!9440 = !DILocation(line: 4882, column: 5, scope: !9215)
!9441 = !DILocation(line: 4882, column: 32, scope: !9215)
!9442 = !DILocation(line: 4886, column: 20, scope: !9206)
!9443 = !DILocation(line: 4886, column: 18, scope: !9206)
!9444 = !DILocation(line: 4887, column: 32, scope: !9206)
!9445 = !DILocation(line: 4887, column: 3, scope: !9206)
!9446 = !DILocation(line: 4887, column: 30, scope: !9206)
!9447 = !DILocation(line: 4889, column: 20, scope: !9206)
!9448 = !DILocation(line: 4889, column: 18, scope: !9206)
!9449 = !DILocation(line: 4896, column: 41, scope: !9206)
!9450 = !DILocation(line: 4896, column: 23, scope: !9206)
!9451 = !DILocation(line: 0, scope: !9206)
!9452 = !DILocation(line: 4902, column: 25, scope: !9206)
!9453 = !DILocation(line: 4902, column: 7, scope: !9206)
!9454 = !DILocation(line: 4902, column: 5, scope: !9206)
!9455 = !DILocation(line: 4906, column: 25, scope: !9206)
!9456 = !DILocation(line: 4906, column: 7, scope: !9206)
!9457 = !DILocation(line: 4906, column: 5, scope: !9206)
!9458 = !DILocation(line: 4908, column: 42, scope: !9206)
!9459 = !DILocation(line: 4908, column: 22, scope: !9206)
!9460 = !DILocation(line: 4908, column: 20, scope: !9206)
!9461 = !DILocation(line: 4911, column: 7, scope: !9206)
!9462 = !DILocation(line: 4910, column: 27, scope: !9206)
!9463 = !DILocation(line: 4910, column: 7, scope: !9206)
!9464 = !DILocation(line: 4910, column: 5, scope: !9206)
!9465 = !DILocation(line: 4914, column: 37, scope: !9206)
!9466 = !DILocation(line: 4914, column: 21, scope: !9206)
!9467 = !DILocation(line: 4914, column: 19, scope: !9206)
!9468 = !DILocation(line: 4915, column: 21, scope: !9206)
!9469 = !DILocation(line: 4915, column: 19, scope: !9206)
!9470 = !DILocation(line: 4916, column: 21, scope: !9206)
!9471 = !DILocation(line: 4917, column: 30, scope: !9206)
!9472 = !DILocation(line: 4918, column: 7, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4918, column: 7)
!9474 = !DILocation(line: 4918, column: 7, scope: !9206)
!9475 = !DILocation(line: 4920, column: 11, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 4920, column: 11)
!9477 = distinct !DILexicalBlock(scope: !9473, file: !3, line: 4919, column: 5)
!9478 = !DILocation(line: 4920, column: 11, scope: !9477)
!9479 = !DILocation(line: 4921, column: 20, scope: !9476)
!9480 = !DILocation(line: 4921, column: 2, scope: !9476)
!9481 = !DILocation(line: 4923, column: 20, scope: !9476)
!9482 = !DILocation(line: 0, scope: !9476)
!9483 = !DILocation(line: 4924, column: 7, scope: !9477)
!9484 = !DILocation(line: 4929, column: 25, scope: !9206)
!9485 = !DILocation(line: 4925, column: 5, scope: !9477)
!9486 = !DILocation(line: 4929, column: 7, scope: !9206)
!9487 = !DILocation(line: 4929, column: 5, scope: !9206)
!9488 = !DILocation(line: 4932, column: 22, scope: !9206)
!9489 = !DILocation(line: 4932, column: 20, scope: !9206)
!9490 = !DILocation(line: 4933, column: 22, scope: !9206)
!9491 = !DILocation(line: 4933, column: 20, scope: !9206)
!9492 = !DILocation(line: 4935, column: 7, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4935, column: 7)
!9494 = !DILocation(line: 4935, column: 7, scope: !9206)
!9495 = !DILocation(line: 4934, column: 22, scope: !9206)
!9496 = !DILocation(line: 4937, column: 26, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !3, line: 4936, column: 5)
!9498 = !DILocation(line: 4937, column: 24, scope: !9497)
!9499 = !DILocation(line: 4939, column: 11, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 4939, column: 11)
!9501 = !DILocation(line: 4939, column: 23, scope: !9500)
!9502 = !DILocation(line: 4939, column: 11, scope: !9497)
!9503 = !DILocation(line: 4940, column: 2, scope: !9500)
!9504 = !DILocation(line: 4945, column: 25, scope: !9206)
!9505 = !DILocation(line: 4945, column: 7, scope: !9206)
!9506 = !DILocation(line: 4945, column: 5, scope: !9206)
!9507 = !DILocation(line: 4948, column: 22, scope: !9206)
!9508 = !DILocation(line: 4948, column: 20, scope: !9206)
!9509 = !DILocation(line: 4949, column: 22, scope: !9206)
!9510 = !DILocation(line: 4949, column: 20, scope: !9206)
!9511 = !DILocation(line: 4951, column: 7, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4951, column: 7)
!9513 = !DILocation(line: 4951, column: 7, scope: !9206)
!9514 = !DILocation(line: 4950, column: 22, scope: !9206)
!9515 = !DILocation(line: 4953, column: 26, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 4952, column: 5)
!9517 = !DILocation(line: 4953, column: 24, scope: !9516)
!9518 = !DILocation(line: 4955, column: 11, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 4955, column: 11)
!9520 = !DILocation(line: 4955, column: 23, scope: !9519)
!9521 = !DILocation(line: 4955, column: 11, scope: !9516)
!9522 = !DILocation(line: 4956, column: 2, scope: !9519)
!9523 = !DILocation(line: 4961, column: 25, scope: !9206)
!9524 = !DILocation(line: 4961, column: 7, scope: !9206)
!9525 = !DILocation(line: 4961, column: 5, scope: !9206)
!9526 = !DILocation(line: 4964, column: 5, scope: !9206)
!9527 = !DILocation(line: 4963, column: 18, scope: !9206)
!9528 = !DILocation(line: 4967, column: 5, scope: !9206)
!9529 = !DILocation(line: 4966, column: 20, scope: !9206)
!9530 = !DILocation(line: 4969, column: 5, scope: !9206)
!9531 = !DILocation(line: 4968, column: 21, scope: !9206)
!9532 = !DILocation(line: 4973, column: 7, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4971, column: 7)
!9534 = !DILocation(line: 4972, column: 26, scope: !9533)
!9535 = !DILocation(line: 4976, column: 7, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4974, column: 7)
!9537 = !DILocation(line: 4975, column: 20, scope: !9536)
!9538 = !DILocation(line: 4979, column: 7, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4977, column: 7)
!9540 = !DILocation(line: 4978, column: 21, scope: !9539)
!9541 = !DILocation(line: 4982, column: 7, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4980, column: 7)
!9543 = !DILocation(line: 4981, column: 21, scope: !9542)
!9544 = !DILocation(line: 4985, column: 7, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4983, column: 7)
!9546 = !DILocation(line: 4984, column: 21, scope: !9545)
!9547 = !DILocation(line: 4988, column: 7, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4986, column: 7)
!9549 = !DILocation(line: 4987, column: 21, scope: !9548)
!9550 = !DILocation(line: 4991, column: 7, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4989, column: 7)
!9552 = !DILocation(line: 4990, column: 22, scope: !9551)
!9553 = !DILocation(line: 4994, column: 7, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4992, column: 7)
!9555 = !DILocation(line: 4993, column: 24, scope: !9554)
!9556 = !DILocation(line: 4997, column: 7, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4995, column: 7)
!9558 = !DILocation(line: 4996, column: 24, scope: !9557)
!9559 = !DILocation(line: 5000, column: 7, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 4998, column: 7)
!9561 = !DILocation(line: 4999, column: 26, scope: !9560)
!9562 = !DILocation(line: 5003, column: 7, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5001, column: 7)
!9564 = !DILocation(line: 5002, column: 27, scope: !9563)
!9565 = !DILocation(line: 5006, column: 7, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5004, column: 7)
!9567 = !DILocation(line: 5005, column: 27, scope: !9566)
!9568 = !DILocation(line: 5009, column: 7, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5007, column: 7)
!9570 = !DILocation(line: 5008, column: 27, scope: !9569)
!9571 = !DILocation(line: 5012, column: 7, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5010, column: 7)
!9573 = !DILocation(line: 5011, column: 27, scope: !9572)
!9574 = !DILocation(line: 5015, column: 7, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5013, column: 7)
!9576 = !DILocation(line: 5014, column: 28, scope: !9575)
!9577 = !DILocation(line: 5018, column: 7, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5016, column: 7)
!9579 = !DILocation(line: 5017, column: 28, scope: !9578)
!9580 = !DILocation(line: 5021, column: 7, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5019, column: 7)
!9582 = !DILocation(line: 5020, column: 28, scope: !9581)
!9583 = !DILocation(line: 5024, column: 7, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5022, column: 7)
!9585 = !DILocation(line: 5023, column: 25, scope: !9584)
!9586 = !DILocation(line: 5027, column: 7, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5025, column: 7)
!9588 = !DILocation(line: 5026, column: 26, scope: !9587)
!9589 = !DILocation(line: 5030, column: 7, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5028, column: 7)
!9591 = !DILocation(line: 5029, column: 26, scope: !9590)
!9592 = !DILocation(line: 5033, column: 7, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5031, column: 7)
!9594 = !DILocation(line: 5032, column: 26, scope: !9593)
!9595 = !DILocation(line: 5036, column: 7, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5034, column: 7)
!9597 = !DILocation(line: 5035, column: 26, scope: !9596)
!9598 = !DILocation(line: 5039, column: 7, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5037, column: 7)
!9600 = !DILocation(line: 5038, column: 27, scope: !9599)
!9601 = !DILocation(line: 5042, column: 7, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5040, column: 7)
!9603 = !DILocation(line: 5041, column: 27, scope: !9602)
!9604 = !DILocation(line: 5045, column: 7, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5043, column: 7)
!9606 = !DILocation(line: 5044, column: 27, scope: !9605)
!9607 = !DILocation(line: 5048, column: 7, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5046, column: 7)
!9609 = !DILocation(line: 5047, column: 22, scope: !9608)
!9610 = !DILocation(line: 5051, column: 7, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5049, column: 7)
!9612 = !DILocation(line: 5050, column: 23, scope: !9611)
!9613 = !DILocation(line: 5053, column: 48, scope: !9206)
!9614 = !DILocation(line: 5053, column: 27, scope: !9206)
!9615 = !DILocation(line: 5053, column: 25, scope: !9206)
!9616 = !DILocation(line: 5055, column: 7, scope: !9206)
!9617 = !DILocation(line: 5055, column: 5, scope: !9206)
!9618 = !DILocation(line: 5056, column: 56, scope: !9206)
!9619 = !DILocation(line: 5056, column: 32, scope: !9206)
!9620 = !DILocation(line: 5056, column: 30, scope: !9206)
!9621 = !DILocation(line: 5058, column: 20, scope: !9206)
!9622 = !DILocation(line: 5059, column: 6, scope: !9206)
!9623 = !DILocation(line: 5058, column: 3, scope: !9206)
!9624 = !DILocation(line: 5078, column: 7, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5078, column: 7)
!9626 = !DILocation(line: 5078, column: 37, scope: !9625)
!9627 = !DILocation(line: 5078, column: 7, scope: !9206)
!9628 = !DILocation(line: 5081, column: 22, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 5079, column: 5)
!9630 = !DILocation(line: 5081, column: 2, scope: !9629)
!9631 = !DILocation(line: 5082, column: 5, scope: !9629)
!9632 = !DILocation(line: 5086, column: 31, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 5084, column: 5)
!9634 = !DILocation(line: 0, scope: !9625)
!9635 = !DILocation(line: 5089, column: 8, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 5089, column: 7)
!9637 = !DILocation(line: 5089, column: 7, scope: !9206)
!9638 = !DILocation(line: 5090, column: 5, scope: !9636)
!9639 = !DILocation(line: 5092, column: 26, scope: !9206)
!9640 = !DILocation(line: 5092, column: 24, scope: !9206)
!9641 = !DILocation(line: 5096, column: 15, scope: !9206)
!9642 = !DILocation(line: 5096, column: 13, scope: !9206)
!9643 = !DILocation(line: 5097, column: 27, scope: !9206)
!9644 = !DILocation(line: 5097, column: 3, scope: !9206)
!9645 = !DILocation(line: 5097, column: 25, scope: !9206)
!9646 = !DILocation(line: 5100, column: 3, scope: !9206)
!9647 = !DILocation(line: 5101, column: 1, scope: !9206)
!9648 = distinct !DISubprogram(name: "c_get_ident", scope: !3, file: !3, line: 4657, type: !9649, scopeLine: 4658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9651)
!9649 = !DISubroutineType(types: !9650)
!9650 = !{!1527, !1525}
!9651 = !{!9652}
!9652 = !DILocalVariable(name: "id", arg: 1, scope: !9648, file: !3, line: 4657, type: !1525)
!9653 = !DILocation(line: 0, scope: !9648)
!9654 = !DILocation(line: 4659, column: 10, scope: !9648)
!9655 = !DILocation(line: 4659, column: 3, scope: !9648)
!9656 = distinct !DISubprogram(name: "c_define_builtins", scope: !3, file: !3, line: 4576, type: !7068, scopeLine: 4577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9657)
!9657 = !{!9658, !9659}
!9658 = !DILocalVariable(name: "va_list_ref_type_node", arg: 1, scope: !9656, file: !3, line: 4576, type: !1527)
!9659 = !DILocalVariable(name: "va_list_arg_type_node", arg: 2, scope: !9656, file: !3, line: 4576, type: !1527)
!9660 = !DILocation(line: 0, scope: !9656)
!9661 = !DILocation(line: 67, column: 1, scope: !9662)
!9662 = !DILexicalBlockFile(scope: !9656, file: !9663, discriminator: 0)
!9663 = !DIFile(filename: "./builtin-types.def", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!9664 = !DILocation(line: 68, column: 1, scope: !9662)
!9665 = !DILocation(line: 69, column: 1, scope: !9662)
!9666 = !DILocation(line: 70, column: 1, scope: !9662)
!9667 = !DILocation(line: 71, column: 1, scope: !9662)
!9668 = !DILocation(line: 72, column: 1, scope: !9662)
!9669 = !DILocation(line: 73, column: 1, scope: !9662)
!9670 = !DILocation(line: 74, column: 1, scope: !9662)
!9671 = !DILocation(line: 75, column: 1, scope: !9662)
!9672 = !DILocation(line: 76, column: 1, scope: !9662)
!9673 = !DILocation(line: 77, column: 1, scope: !9662)
!9674 = !DILocation(line: 78, column: 1, scope: !9662)
!9675 = !DILocation(line: 79, column: 1, scope: !9662)
!9676 = !DILocation(line: 80, column: 1, scope: !9662)
!9677 = !DILocation(line: 82, column: 1, scope: !9662)
!9678 = !DILocation(line: 83, column: 1, scope: !9662)
!9679 = !DILocation(line: 84, column: 1, scope: !9662)
!9680 = !DILocation(line: 85, column: 1, scope: !9662)
!9681 = !DILocation(line: 86, column: 1, scope: !9662)
!9682 = !DILocation(line: 87, column: 1, scope: !9662)
!9683 = !DILocation(line: 89, column: 1, scope: !9662)
!9684 = !DILocation(line: 90, column: 1, scope: !9662)
!9685 = !DILocation(line: 91, column: 1, scope: !9662)
!9686 = !DILocation(line: 92, column: 1, scope: !9662)
!9687 = !DILocation(line: 96, column: 1, scope: !9662)
!9688 = !DILocation(line: 97, column: 1, scope: !9662)
!9689 = !DILocation(line: 98, column: 1, scope: !9662)
!9690 = !DILocation(line: 99, column: 1, scope: !9662)
!9691 = !DILocation(line: 100, column: 1, scope: !9662)
!9692 = !DILocation(line: 101, column: 1, scope: !9662)
!9693 = !DILocation(line: 102, column: 1, scope: !9662)
!9694 = !DILocation(line: 103, column: 1, scope: !9662)
!9695 = !DILocation(line: 104, column: 1, scope: !9662)
!9696 = !DILocation(line: 105, column: 1, scope: !9662)
!9697 = !DILocation(line: 106, column: 1, scope: !9662)
!9698 = !DILocation(line: 108, column: 1, scope: !9662)
!9699 = !DILocation(line: 109, column: 1, scope: !9662)
!9700 = !DILocation(line: 110, column: 1, scope: !9662)
!9701 = !DILocation(line: 111, column: 1, scope: !9662)
!9702 = !DILocation(line: 112, column: 1, scope: !9662)
!9703 = !DILocation(line: 113, column: 1, scope: !9662)
!9704 = !DILocation(line: 115, column: 1, scope: !9662)
!9705 = !DILocation(line: 116, column: 1, scope: !9662)
!9706 = !DILocation(line: 118, column: 1, scope: !9662)
!9707 = !DILocation(line: 119, column: 1, scope: !9662)
!9708 = !DILocation(line: 120, column: 1, scope: !9662)
!9709 = !DILocation(line: 121, column: 1, scope: !9662)
!9710 = !DILocation(line: 122, column: 1, scope: !9662)
!9711 = !DILocation(line: 124, column: 1, scope: !9662)
!9712 = !DILocation(line: 125, column: 1, scope: !9662)
!9713 = !DILocation(line: 126, column: 1, scope: !9662)
!9714 = !DILocation(line: 127, column: 1, scope: !9662)
!9715 = !DILocation(line: 129, column: 1, scope: !9662)
!9716 = !DILocation(line: 130, column: 1, scope: !9662)
!9717 = !DILocation(line: 131, column: 1, scope: !9662)
!9718 = !DILocation(line: 132, column: 1, scope: !9662)
!9719 = !DILocation(line: 133, column: 1, scope: !9662)
!9720 = !DILocation(line: 134, column: 1, scope: !9662)
!9721 = !DILocation(line: 135, column: 1, scope: !9662)
!9722 = !DILocation(line: 136, column: 1, scope: !9662)
!9723 = !DILocation(line: 140, column: 1, scope: !9662)
!9724 = !DILocation(line: 141, column: 1, scope: !9662)
!9725 = !DILocation(line: 142, column: 1, scope: !9662)
!9726 = !DILocation(line: 143, column: 1, scope: !9662)
!9727 = !DILocation(line: 145, column: 1, scope: !9662)
!9728 = !DILocation(line: 146, column: 1, scope: !9662)
!9729 = !DILocation(line: 147, column: 1, scope: !9662)
!9730 = !DILocation(line: 148, column: 1, scope: !9662)
!9731 = !DILocation(line: 149, column: 1, scope: !9662)
!9732 = !DILocation(line: 150, column: 1, scope: !9662)
!9733 = !DILocation(line: 152, column: 1, scope: !9662)
!9734 = !DILocation(line: 154, column: 1, scope: !9662)
!9735 = !DILocation(line: 156, column: 1, scope: !9662)
!9736 = !DILocation(line: 158, column: 1, scope: !9662)
!9737 = !DILocation(line: 160, column: 1, scope: !9662)
!9738 = !DILocation(line: 162, column: 1, scope: !9662)
!9739 = !DILocation(line: 164, column: 1, scope: !9662)
!9740 = !DILocation(line: 166, column: 1, scope: !9662)
!9741 = !DILocation(line: 168, column: 1, scope: !9662)
!9742 = !DILocation(line: 170, column: 1, scope: !9662)
!9743 = !DILocation(line: 171, column: 1, scope: !9662)
!9744 = !DILocation(line: 172, column: 1, scope: !9662)
!9745 = !DILocation(line: 173, column: 1, scope: !9662)
!9746 = !DILocation(line: 174, column: 1, scope: !9662)
!9747 = !DILocation(line: 175, column: 1, scope: !9662)
!9748 = !DILocation(line: 176, column: 1, scope: !9662)
!9749 = !DILocation(line: 177, column: 1, scope: !9662)
!9750 = !DILocation(line: 178, column: 1, scope: !9662)
!9751 = !DILocation(line: 179, column: 1, scope: !9662)
!9752 = !DILocation(line: 180, column: 1, scope: !9662)
!9753 = !DILocation(line: 181, column: 1, scope: !9662)
!9754 = !DILocation(line: 182, column: 1, scope: !9662)
!9755 = !DILocation(line: 183, column: 1, scope: !9662)
!9756 = !DILocation(line: 184, column: 1, scope: !9662)
!9757 = !DILocation(line: 185, column: 1, scope: !9662)
!9758 = !DILocation(line: 186, column: 1, scope: !9662)
!9759 = !DILocation(line: 187, column: 1, scope: !9662)
!9760 = !DILocation(line: 188, column: 1, scope: !9662)
!9761 = !DILocation(line: 189, column: 1, scope: !9662)
!9762 = !DILocation(line: 190, column: 1, scope: !9662)
!9763 = !DILocation(line: 191, column: 1, scope: !9662)
!9764 = !DILocation(line: 192, column: 1, scope: !9662)
!9765 = !DILocation(line: 193, column: 1, scope: !9662)
!9766 = !DILocation(line: 194, column: 1, scope: !9662)
!9767 = !DILocation(line: 195, column: 1, scope: !9662)
!9768 = !DILocation(line: 196, column: 1, scope: !9662)
!9769 = !DILocation(line: 197, column: 1, scope: !9662)
!9770 = !DILocation(line: 198, column: 1, scope: !9662)
!9771 = !DILocation(line: 199, column: 1, scope: !9662)
!9772 = !DILocation(line: 200, column: 1, scope: !9662)
!9773 = !DILocation(line: 201, column: 1, scope: !9662)
!9774 = !DILocation(line: 203, column: 1, scope: !9662)
!9775 = !DILocation(line: 204, column: 1, scope: !9662)
!9776 = !DILocation(line: 205, column: 1, scope: !9662)
!9777 = !DILocation(line: 207, column: 1, scope: !9662)
!9778 = !DILocation(line: 208, column: 1, scope: !9662)
!9779 = !DILocation(line: 209, column: 1, scope: !9662)
!9780 = !DILocation(line: 210, column: 1, scope: !9662)
!9781 = !DILocation(line: 211, column: 1, scope: !9662)
!9782 = !DILocation(line: 212, column: 1, scope: !9662)
!9783 = !DILocation(line: 213, column: 1, scope: !9662)
!9784 = !DILocation(line: 214, column: 1, scope: !9662)
!9785 = !DILocation(line: 215, column: 1, scope: !9662)
!9786 = !DILocation(line: 216, column: 1, scope: !9662)
!9787 = !DILocation(line: 217, column: 1, scope: !9662)
!9788 = !DILocation(line: 218, column: 1, scope: !9662)
!9789 = !DILocation(line: 219, column: 1, scope: !9662)
!9790 = !DILocation(line: 220, column: 1, scope: !9662)
!9791 = !DILocation(line: 222, column: 1, scope: !9662)
!9792 = !DILocation(line: 224, column: 1, scope: !9662)
!9793 = !DILocation(line: 225, column: 1, scope: !9662)
!9794 = !DILocation(line: 227, column: 1, scope: !9662)
!9795 = !DILocation(line: 229, column: 1, scope: !9662)
!9796 = !DILocation(line: 231, column: 1, scope: !9662)
!9797 = !DILocation(line: 233, column: 1, scope: !9662)
!9798 = !DILocation(line: 235, column: 1, scope: !9662)
!9799 = !DILocation(line: 237, column: 1, scope: !9662)
!9800 = !DILocation(line: 239, column: 1, scope: !9662)
!9801 = !DILocation(line: 241, column: 1, scope: !9662)
!9802 = !DILocation(line: 243, column: 1, scope: !9662)
!9803 = !DILocation(line: 245, column: 1, scope: !9662)
!9804 = !DILocation(line: 247, column: 1, scope: !9662)
!9805 = !DILocation(line: 249, column: 1, scope: !9662)
!9806 = !DILocation(line: 251, column: 1, scope: !9662)
!9807 = !DILocation(line: 253, column: 1, scope: !9662)
!9808 = !DILocation(line: 255, column: 1, scope: !9662)
!9809 = !DILocation(line: 257, column: 1, scope: !9662)
!9810 = !DILocation(line: 259, column: 1, scope: !9662)
!9811 = !DILocation(line: 261, column: 1, scope: !9662)
!9812 = !DILocation(line: 263, column: 1, scope: !9662)
!9813 = !DILocation(line: 265, column: 1, scope: !9662)
!9814 = !DILocation(line: 267, column: 1, scope: !9662)
!9815 = !DILocation(line: 269, column: 1, scope: !9662)
!9816 = !DILocation(line: 271, column: 1, scope: !9662)
!9817 = !DILocation(line: 273, column: 1, scope: !9662)
!9818 = !DILocation(line: 275, column: 1, scope: !9662)
!9819 = !DILocation(line: 277, column: 1, scope: !9662)
!9820 = !DILocation(line: 279, column: 1, scope: !9662)
!9821 = !DILocation(line: 281, column: 1, scope: !9662)
!9822 = !DILocation(line: 283, column: 1, scope: !9662)
!9823 = !DILocation(line: 285, column: 1, scope: !9662)
!9824 = !DILocation(line: 287, column: 1, scope: !9662)
!9825 = !DILocation(line: 289, column: 1, scope: !9662)
!9826 = !DILocation(line: 291, column: 1, scope: !9662)
!9827 = !DILocation(line: 293, column: 1, scope: !9662)
!9828 = !DILocation(line: 295, column: 1, scope: !9662)
!9829 = !DILocation(line: 297, column: 1, scope: !9662)
!9830 = !DILocation(line: 299, column: 1, scope: !9662)
!9831 = !DILocation(line: 301, column: 1, scope: !9662)
!9832 = !DILocation(line: 303, column: 1, scope: !9662)
!9833 = !DILocation(line: 304, column: 1, scope: !9662)
!9834 = !DILocation(line: 306, column: 1, scope: !9662)
!9835 = !DILocation(line: 307, column: 1, scope: !9662)
!9836 = !DILocation(line: 308, column: 1, scope: !9662)
!9837 = !DILocation(line: 309, column: 1, scope: !9662)
!9838 = !DILocation(line: 310, column: 1, scope: !9662)
!9839 = !DILocation(line: 311, column: 1, scope: !9662)
!9840 = !DILocation(line: 312, column: 1, scope: !9662)
!9841 = !DILocation(line: 314, column: 1, scope: !9662)
!9842 = !DILocation(line: 317, column: 1, scope: !9662)
!9843 = !DILocation(line: 319, column: 1, scope: !9662)
!9844 = !DILocation(line: 321, column: 1, scope: !9662)
!9845 = !DILocation(line: 323, column: 1, scope: !9662)
!9846 = !DILocation(line: 325, column: 1, scope: !9662)
!9847 = !DILocation(line: 327, column: 1, scope: !9662)
!9848 = !DILocation(line: 329, column: 1, scope: !9662)
!9849 = !DILocation(line: 331, column: 1, scope: !9662)
!9850 = !DILocation(line: 333, column: 1, scope: !9662)
!9851 = !DILocation(line: 335, column: 1, scope: !9662)
!9852 = !DILocation(line: 337, column: 1, scope: !9662)
!9853 = !DILocation(line: 339, column: 1, scope: !9662)
!9854 = !DILocation(line: 341, column: 1, scope: !9662)
!9855 = !DILocation(line: 343, column: 1, scope: !9662)
!9856 = !DILocation(line: 345, column: 1, scope: !9662)
!9857 = !DILocation(line: 347, column: 1, scope: !9662)
!9858 = !DILocation(line: 349, column: 1, scope: !9662)
!9859 = !DILocation(line: 351, column: 1, scope: !9662)
!9860 = !DILocation(line: 353, column: 1, scope: !9662)
!9861 = !DILocation(line: 355, column: 1, scope: !9662)
!9862 = !DILocation(line: 357, column: 1, scope: !9662)
!9863 = !DILocation(line: 359, column: 1, scope: !9662)
!9864 = !DILocation(line: 360, column: 1, scope: !9662)
!9865 = !DILocation(line: 362, column: 1, scope: !9662)
!9866 = !DILocation(line: 364, column: 1, scope: !9662)
!9867 = !DILocation(line: 366, column: 1, scope: !9662)
!9868 = !DILocation(line: 368, column: 1, scope: !9662)
!9869 = !DILocation(line: 370, column: 1, scope: !9662)
!9870 = !DILocation(line: 372, column: 1, scope: !9662)
!9871 = !DILocation(line: 374, column: 1, scope: !9662)
!9872 = !DILocation(line: 375, column: 1, scope: !9662)
!9873 = !DILocation(line: 376, column: 1, scope: !9662)
!9874 = !DILocation(line: 377, column: 1, scope: !9662)
!9875 = !DILocation(line: 378, column: 1, scope: !9662)
!9876 = !DILocation(line: 380, column: 1, scope: !9662)
!9877 = !DILocation(line: 382, column: 1, scope: !9662)
!9878 = !DILocation(line: 385, column: 1, scope: !9662)
!9879 = !DILocation(line: 387, column: 1, scope: !9662)
!9880 = !DILocation(line: 389, column: 1, scope: !9662)
!9881 = !DILocation(line: 391, column: 1, scope: !9662)
!9882 = !DILocation(line: 393, column: 1, scope: !9662)
!9883 = !DILocation(line: 395, column: 1, scope: !9662)
!9884 = !DILocation(line: 397, column: 1, scope: !9662)
!9885 = !DILocation(line: 399, column: 1, scope: !9662)
!9886 = !DILocation(line: 401, column: 1, scope: !9662)
!9887 = !DILocation(line: 404, column: 1, scope: !9662)
!9888 = !DILocation(line: 407, column: 1, scope: !9662)
!9889 = !DILocation(line: 411, column: 1, scope: !9662)
!9890 = !DILocation(line: 414, column: 1, scope: !9662)
!9891 = !DILocation(line: 417, column: 1, scope: !9662)
!9892 = !DILocation(line: 420, column: 1, scope: !9662)
!9893 = !DILocation(line: 424, column: 1, scope: !9662)
!9894 = !DILocation(line: 427, column: 1, scope: !9662)
!9895 = !DILocation(line: 431, column: 1, scope: !9662)
!9896 = !DILocation(line: 436, column: 1, scope: !9662)
!9897 = !DILocation(line: 437, column: 1, scope: !9662)
!9898 = !DILocation(line: 438, column: 1, scope: !9662)
!9899 = !DILocation(line: 440, column: 1, scope: !9662)
!9900 = !DILocation(line: 442, column: 1, scope: !9662)
!9901 = !DILocation(line: 444, column: 1, scope: !9662)
!9902 = !DILocation(line: 447, column: 1, scope: !9662)
!9903 = !DILocation(line: 449, column: 1, scope: !9662)
!9904 = !DILocation(line: 451, column: 1, scope: !9662)
!9905 = !DILocation(line: 453, column: 1, scope: !9662)
!9906 = !DILocation(line: 456, column: 1, scope: !9662)
!9907 = !DILocation(line: 458, column: 1, scope: !9662)
!9908 = !DILocation(line: 460, column: 1, scope: !9662)
!9909 = !DILocation(line: 463, column: 1, scope: !9662)
!9910 = !DILocation(line: 466, column: 1, scope: !9662)
!9911 = !DILocation(line: 470, column: 1, scope: !9662)
!9912 = !DILocation(line: 473, column: 1, scope: !9662)
!9913 = !DILocation(line: 474, column: 1, scope: !9662)
!9914 = !DILocation(line: 4629, column: 32, scope: !9915)
!9915 = !DILexicalBlockFile(scope: !9656, file: !3, discriminator: 0)
!9916 = !DILocation(line: 4631, column: 3, scope: !9915)
!9917 = !DILocation(line: 179, column: 1, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 179, column: 1)
!9919 = !DIFile(filename: "./builtins.def", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!9920 = !DILexicalBlockFile(scope: !9656, file: !9919, discriminator: 0)
!9921 = !DILocation(line: 180, column: 1, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 180, column: 1)
!9923 = !DILocation(line: 181, column: 1, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 181, column: 1)
!9925 = !DILocation(line: 182, column: 1, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 182, column: 1)
!9927 = !DILocation(line: 183, column: 1, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 183, column: 1)
!9929 = !DILocation(line: 184, column: 1, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 184, column: 1)
!9931 = !DILocation(line: 185, column: 1, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 185, column: 1)
!9933 = !DILocation(line: 186, column: 1, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 186, column: 1)
!9935 = !DILocation(line: 187, column: 1, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 187, column: 1)
!9937 = !DILocation(line: 188, column: 1, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 188, column: 1)
!9939 = !DILocation(line: 189, column: 1, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 189, column: 1)
!9941 = !DILocation(line: 190, column: 1, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 190, column: 1)
!9943 = !DILocation(line: 191, column: 1, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 191, column: 1)
!9945 = !DILocation(line: 192, column: 1, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 192, column: 1)
!9947 = !DILocation(line: 193, column: 1, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 193, column: 1)
!9949 = !DILocation(line: 194, column: 1, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 194, column: 1)
!9951 = !DILocation(line: 195, column: 1, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 195, column: 1)
!9953 = !DILocation(line: 196, column: 1, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 196, column: 1)
!9955 = !DILocation(line: 197, column: 1, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 197, column: 1)
!9957 = !DILocation(line: 198, column: 1, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 198, column: 1)
!9959 = !DILocation(line: 199, column: 1, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 199, column: 1)
!9961 = !DILocation(line: 200, column: 1, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 200, column: 1)
!9963 = !DILocation(line: 201, column: 1, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 201, column: 1)
!9965 = !DILocation(line: 202, column: 1, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 202, column: 1)
!9967 = !DILocation(line: 203, column: 1, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 203, column: 1)
!9969 = !DILocation(line: 204, column: 1, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 204, column: 1)
!9971 = !DILocation(line: 205, column: 1, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 205, column: 1)
!9973 = !DILocation(line: 206, column: 1, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 206, column: 1)
!9975 = !DILocation(line: 207, column: 1, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 207, column: 1)
!9977 = !DILocation(line: 208, column: 1, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 208, column: 1)
!9979 = !DILocation(line: 209, column: 1, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 209, column: 1)
!9981 = !DILocation(line: 210, column: 1, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 210, column: 1)
!9983 = !DILocation(line: 211, column: 1, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 211, column: 1)
!9985 = !DILocation(line: 212, column: 1, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 212, column: 1)
!9987 = !DILocation(line: 213, column: 1, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 213, column: 1)
!9989 = !DILocation(line: 214, column: 1, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 214, column: 1)
!9991 = !DILocation(line: 215, column: 1, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 215, column: 1)
!9993 = !DILocation(line: 216, column: 1, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 216, column: 1)
!9995 = !DILocation(line: 217, column: 1, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 217, column: 1)
!9997 = !DILocation(line: 218, column: 1, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 218, column: 1)
!9999 = !DILocation(line: 219, column: 1, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 219, column: 1)
!10001 = !DILocation(line: 220, column: 1, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 220, column: 1)
!10003 = !DILocation(line: 221, column: 1, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 221, column: 1)
!10005 = !DILocation(line: 222, column: 1, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 222, column: 1)
!10007 = !DILocation(line: 223, column: 1, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 223, column: 1)
!10009 = !DILocation(line: 224, column: 1, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 224, column: 1)
!10011 = !DILocation(line: 225, column: 1, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 225, column: 1)
!10013 = !DILocation(line: 226, column: 1, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 226, column: 1)
!10015 = !DILocation(line: 227, column: 1, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 227, column: 1)
!10017 = !DILocation(line: 228, column: 1, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 228, column: 1)
!10019 = !DILocation(line: 229, column: 1, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 229, column: 1)
!10021 = !DILocation(line: 230, column: 1, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 230, column: 1)
!10023 = !DILocation(line: 231, column: 1, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 231, column: 1)
!10025 = !DILocation(line: 232, column: 1, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 232, column: 1)
!10027 = !DILocation(line: 233, column: 1, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 233, column: 1)
!10029 = !DILocation(line: 234, column: 1, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 234, column: 1)
!10031 = !DILocation(line: 235, column: 1, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 235, column: 1)
!10033 = !DILocation(line: 236, column: 1, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 236, column: 1)
!10035 = !DILocation(line: 237, column: 1, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 237, column: 1)
!10037 = !DILocation(line: 238, column: 1, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 238, column: 1)
!10039 = !DILocation(line: 239, column: 1, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 239, column: 1)
!10041 = !DILocation(line: 240, column: 1, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 240, column: 1)
!10043 = !DILocation(line: 241, column: 1, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 241, column: 1)
!10045 = !DILocation(line: 242, column: 1, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 242, column: 1)
!10047 = !DILocation(line: 243, column: 1, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 243, column: 1)
!10049 = !DILocation(line: 244, column: 1, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 244, column: 1)
!10051 = !DILocation(line: 245, column: 1, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 245, column: 1)
!10053 = !DILocation(line: 246, column: 1, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 246, column: 1)
!10055 = !DILocation(line: 247, column: 1, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 247, column: 1)
!10057 = !DILocation(line: 248, column: 1, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 248, column: 1)
!10059 = !DILocation(line: 249, column: 1, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 249, column: 1)
!10061 = !DILocation(line: 250, column: 1, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 250, column: 1)
!10063 = !DILocation(line: 251, column: 1, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 251, column: 1)
!10065 = !DILocation(line: 252, column: 1, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 252, column: 1)
!10067 = !DILocation(line: 253, column: 1, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 253, column: 1)
!10069 = !DILocation(line: 254, column: 1, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 254, column: 1)
!10071 = !DILocation(line: 255, column: 1, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 255, column: 1)
!10073 = !DILocation(line: 256, column: 1, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 256, column: 1)
!10075 = !DILocation(line: 257, column: 1, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 257, column: 1)
!10077 = !DILocation(line: 258, column: 1, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 258, column: 1)
!10079 = !DILocation(line: 259, column: 1, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 259, column: 1)
!10081 = !DILocation(line: 260, column: 1, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 260, column: 1)
!10083 = !DILocation(line: 261, column: 1, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 261, column: 1)
!10085 = !DILocation(line: 262, column: 1, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 262, column: 1)
!10087 = !DILocation(line: 263, column: 1, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 263, column: 1)
!10089 = !DILocation(line: 264, column: 1, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 264, column: 1)
!10091 = !DILocation(line: 265, column: 1, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 265, column: 1)
!10093 = !DILocation(line: 266, column: 1, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 266, column: 1)
!10095 = !DILocation(line: 267, column: 1, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 267, column: 1)
!10097 = !DILocation(line: 268, column: 1, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 268, column: 1)
!10099 = !DILocation(line: 269, column: 1, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 269, column: 1)
!10101 = !DILocation(line: 270, column: 1, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 270, column: 1)
!10103 = !DILocation(line: 271, column: 1, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 271, column: 1)
!10105 = !DILocation(line: 272, column: 1, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 272, column: 1)
!10107 = !DILocation(line: 273, column: 1, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 273, column: 1)
!10109 = !DILocation(line: 274, column: 1, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 274, column: 1)
!10111 = !DILocation(line: 275, column: 1, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 275, column: 1)
!10113 = !DILocation(line: 276, column: 1, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 276, column: 1)
!10115 = !DILocation(line: 277, column: 1, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 277, column: 1)
!10117 = !DILocation(line: 278, column: 1, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 278, column: 1)
!10119 = !DILocation(line: 279, column: 1, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 279, column: 1)
!10121 = !DILocation(line: 280, column: 1, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 280, column: 1)
!10123 = !DILocation(line: 281, column: 1, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 281, column: 1)
!10125 = !DILocation(line: 282, column: 1, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 282, column: 1)
!10127 = !DILocation(line: 283, column: 1, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 283, column: 1)
!10129 = !DILocation(line: 284, column: 1, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 284, column: 1)
!10131 = !DILocation(line: 285, column: 1, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 285, column: 1)
!10133 = !DILocation(line: 286, column: 1, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 286, column: 1)
!10135 = !DILocation(line: 287, column: 1, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 287, column: 1)
!10137 = !DILocation(line: 288, column: 1, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 288, column: 1)
!10139 = !DILocation(line: 289, column: 1, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 289, column: 1)
!10141 = !DILocation(line: 290, column: 1, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 290, column: 1)
!10143 = !DILocation(line: 291, column: 1, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 291, column: 1)
!10145 = !DILocation(line: 292, column: 1, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 292, column: 1)
!10147 = !DILocation(line: 293, column: 1, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 293, column: 1)
!10149 = !DILocation(line: 294, column: 1, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 294, column: 1)
!10151 = !DILocation(line: 295, column: 1, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 295, column: 1)
!10153 = !DILocation(line: 296, column: 1, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 296, column: 1)
!10155 = !DILocation(line: 297, column: 1, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 297, column: 1)
!10157 = !DILocation(line: 298, column: 1, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 298, column: 1)
!10159 = !DILocation(line: 299, column: 1, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 299, column: 1)
!10161 = !DILocation(line: 300, column: 1, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 300, column: 1)
!10163 = !DILocation(line: 301, column: 1, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 301, column: 1)
!10165 = !DILocation(line: 302, column: 1, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 302, column: 1)
!10167 = !DILocation(line: 303, column: 1, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 303, column: 1)
!10169 = !DILocation(line: 304, column: 1, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 304, column: 1)
!10171 = !DILocation(line: 305, column: 1, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 305, column: 1)
!10173 = !DILocation(line: 306, column: 1, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 306, column: 1)
!10175 = !DILocation(line: 307, column: 1, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 307, column: 1)
!10177 = !DILocation(line: 308, column: 1, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 308, column: 1)
!10179 = !DILocation(line: 309, column: 1, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 309, column: 1)
!10181 = !DILocation(line: 310, column: 1, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 310, column: 1)
!10183 = !DILocation(line: 311, column: 1, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 311, column: 1)
!10185 = !DILocation(line: 312, column: 1, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 312, column: 1)
!10187 = !DILocation(line: 313, column: 1, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 313, column: 1)
!10189 = !DILocation(line: 314, column: 1, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 314, column: 1)
!10191 = !DILocation(line: 315, column: 1, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 315, column: 1)
!10193 = !DILocation(line: 316, column: 1, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 316, column: 1)
!10195 = !DILocation(line: 317, column: 1, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 317, column: 1)
!10197 = !DILocation(line: 318, column: 1, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 318, column: 1)
!10199 = !DILocation(line: 319, column: 1, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 319, column: 1)
!10201 = !DILocation(line: 320, column: 1, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 320, column: 1)
!10203 = !DILocation(line: 321, column: 1, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 321, column: 1)
!10205 = !DILocation(line: 322, column: 1, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 322, column: 1)
!10207 = !DILocation(line: 323, column: 1, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 323, column: 1)
!10209 = !DILocation(line: 324, column: 1, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 324, column: 1)
!10211 = !DILocation(line: 325, column: 1, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 325, column: 1)
!10213 = !DILocation(line: 326, column: 1, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 326, column: 1)
!10215 = !DILocation(line: 327, column: 1, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 327, column: 1)
!10217 = !DILocation(line: 328, column: 1, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 328, column: 1)
!10219 = !DILocation(line: 329, column: 1, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 329, column: 1)
!10221 = !DILocation(line: 330, column: 1, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 330, column: 1)
!10223 = !DILocation(line: 331, column: 1, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 331, column: 1)
!10225 = !DILocation(line: 332, column: 1, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 332, column: 1)
!10227 = !DILocation(line: 333, column: 1, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 333, column: 1)
!10229 = !DILocation(line: 334, column: 1, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 334, column: 1)
!10231 = !DILocation(line: 335, column: 1, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 335, column: 1)
!10233 = !DILocation(line: 336, column: 1, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 336, column: 1)
!10235 = !DILocation(line: 337, column: 1, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 337, column: 1)
!10237 = !DILocation(line: 338, column: 1, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 338, column: 1)
!10239 = !DILocation(line: 339, column: 1, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 339, column: 1)
!10241 = !DILocation(line: 340, column: 1, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 340, column: 1)
!10243 = !DILocation(line: 341, column: 1, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 341, column: 1)
!10245 = !DILocation(line: 342, column: 1, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 342, column: 1)
!10247 = !DILocation(line: 343, column: 1, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 343, column: 1)
!10249 = !DILocation(line: 344, column: 1, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 344, column: 1)
!10251 = !DILocation(line: 345, column: 1, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 345, column: 1)
!10253 = !DILocation(line: 346, column: 1, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 346, column: 1)
!10255 = !DILocation(line: 347, column: 1, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 347, column: 1)
!10257 = !DILocation(line: 348, column: 1, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 348, column: 1)
!10259 = !DILocation(line: 349, column: 1, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 349, column: 1)
!10261 = !DILocation(line: 350, column: 1, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 350, column: 1)
!10263 = !DILocation(line: 351, column: 1, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 351, column: 1)
!10265 = !DILocation(line: 352, column: 1, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 352, column: 1)
!10267 = !DILocation(line: 353, column: 1, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 353, column: 1)
!10269 = !DILocation(line: 354, column: 1, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 354, column: 1)
!10271 = !DILocation(line: 355, column: 1, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 355, column: 1)
!10273 = !DILocation(line: 356, column: 1, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 356, column: 1)
!10275 = !DILocation(line: 357, column: 1, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 357, column: 1)
!10277 = !DILocation(line: 358, column: 1, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 358, column: 1)
!10279 = !DILocation(line: 359, column: 1, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 359, column: 1)
!10281 = !DILocation(line: 360, column: 1, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 360, column: 1)
!10283 = !DILocation(line: 361, column: 1, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 361, column: 1)
!10285 = !DILocation(line: 362, column: 1, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 362, column: 1)
!10287 = !DILocation(line: 363, column: 1, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 363, column: 1)
!10289 = !DILocation(line: 364, column: 1, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 364, column: 1)
!10291 = !DILocation(line: 365, column: 1, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 365, column: 1)
!10293 = !DILocation(line: 366, column: 1, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 366, column: 1)
!10295 = !DILocation(line: 367, column: 1, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 367, column: 1)
!10297 = !DILocation(line: 368, column: 1, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 368, column: 1)
!10299 = !DILocation(line: 369, column: 1, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 369, column: 1)
!10301 = !DILocation(line: 370, column: 1, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 370, column: 1)
!10303 = !DILocation(line: 371, column: 1, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 371, column: 1)
!10305 = !DILocation(line: 372, column: 1, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 372, column: 1)
!10307 = !DILocation(line: 373, column: 1, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 373, column: 1)
!10309 = !DILocation(line: 374, column: 1, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 374, column: 1)
!10311 = !DILocation(line: 375, column: 1, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 375, column: 1)
!10313 = !DILocation(line: 376, column: 1, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 376, column: 1)
!10315 = !DILocation(line: 377, column: 1, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 377, column: 1)
!10317 = !DILocation(line: 378, column: 1, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 378, column: 1)
!10319 = !DILocation(line: 379, column: 1, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 379, column: 1)
!10321 = !DILocation(line: 380, column: 1, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 380, column: 1)
!10323 = !DILocation(line: 381, column: 1, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 381, column: 1)
!10325 = !DILocation(line: 382, column: 1, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 382, column: 1)
!10327 = !DILocation(line: 383, column: 1, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 383, column: 1)
!10329 = !DILocation(line: 384, column: 1, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 384, column: 1)
!10331 = !DILocation(line: 385, column: 1, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 385, column: 1)
!10333 = !DILocation(line: 386, column: 1, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 386, column: 1)
!10335 = !DILocation(line: 387, column: 1, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 387, column: 1)
!10337 = !DILocation(line: 388, column: 1, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 388, column: 1)
!10339 = !DILocation(line: 389, column: 1, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 389, column: 1)
!10341 = !DILocation(line: 390, column: 1, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 390, column: 1)
!10343 = !DILocation(line: 391, column: 1, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 391, column: 1)
!10345 = !DILocation(line: 392, column: 1, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 392, column: 1)
!10347 = !DILocation(line: 393, column: 1, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 393, column: 1)
!10349 = !DILocation(line: 394, column: 1, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 394, column: 1)
!10351 = !DILocation(line: 395, column: 1, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 395, column: 1)
!10353 = !DILocation(line: 396, column: 1, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 396, column: 1)
!10355 = !DILocation(line: 397, column: 1, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 397, column: 1)
!10357 = !DILocation(line: 398, column: 1, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 398, column: 1)
!10359 = !DILocation(line: 399, column: 1, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 399, column: 1)
!10361 = !DILocation(line: 400, column: 1, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 400, column: 1)
!10363 = !DILocation(line: 401, column: 1, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 401, column: 1)
!10365 = !DILocation(line: 402, column: 1, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 402, column: 1)
!10367 = !DILocation(line: 403, column: 1, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 403, column: 1)
!10369 = !DILocation(line: 404, column: 1, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 404, column: 1)
!10371 = !DILocation(line: 405, column: 1, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 405, column: 1)
!10373 = !DILocation(line: 406, column: 1, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 406, column: 1)
!10375 = !DILocation(line: 407, column: 1, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 407, column: 1)
!10377 = !DILocation(line: 408, column: 1, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 408, column: 1)
!10379 = !DILocation(line: 409, column: 1, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 409, column: 1)
!10381 = !DILocation(line: 410, column: 1, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 410, column: 1)
!10383 = !DILocation(line: 411, column: 1, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 411, column: 1)
!10385 = !DILocation(line: 412, column: 1, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 412, column: 1)
!10387 = !DILocation(line: 413, column: 1, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 413, column: 1)
!10389 = !DILocation(line: 414, column: 1, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 414, column: 1)
!10391 = !DILocation(line: 415, column: 1, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 415, column: 1)
!10393 = !DILocation(line: 416, column: 1, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 416, column: 1)
!10395 = !DILocation(line: 417, column: 1, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 417, column: 1)
!10397 = !DILocation(line: 418, column: 1, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 418, column: 1)
!10399 = !DILocation(line: 419, column: 1, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 419, column: 1)
!10401 = !DILocation(line: 420, column: 1, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 420, column: 1)
!10403 = !DILocation(line: 421, column: 1, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 421, column: 1)
!10405 = !DILocation(line: 422, column: 1, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 422, column: 1)
!10407 = !DILocation(line: 423, column: 1, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 423, column: 1)
!10409 = !DILocation(line: 424, column: 1, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 424, column: 1)
!10411 = !DILocation(line: 425, column: 1, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 425, column: 1)
!10413 = !DILocation(line: 426, column: 1, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 426, column: 1)
!10415 = !DILocation(line: 427, column: 1, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 427, column: 1)
!10417 = !DILocation(line: 428, column: 1, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 428, column: 1)
!10419 = !DILocation(line: 429, column: 1, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 429, column: 1)
!10421 = !DILocation(line: 430, column: 1, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 430, column: 1)
!10423 = !DILocation(line: 433, column: 1, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 433, column: 1)
!10425 = !DILocation(line: 434, column: 1, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 434, column: 1)
!10427 = !DILocation(line: 435, column: 1, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 435, column: 1)
!10429 = !DILocation(line: 436, column: 1, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 436, column: 1)
!10431 = !DILocation(line: 437, column: 1, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 437, column: 1)
!10433 = !DILocation(line: 438, column: 1, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 438, column: 1)
!10435 = !DILocation(line: 439, column: 1, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 439, column: 1)
!10437 = !DILocation(line: 440, column: 1, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 440, column: 1)
!10439 = !DILocation(line: 441, column: 1, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 441, column: 1)
!10441 = !DILocation(line: 442, column: 1, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 442, column: 1)
!10443 = !DILocation(line: 443, column: 1, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 443, column: 1)
!10445 = !DILocation(line: 444, column: 1, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 444, column: 1)
!10447 = !DILocation(line: 445, column: 1, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 445, column: 1)
!10449 = !DILocation(line: 446, column: 1, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 446, column: 1)
!10451 = !DILocation(line: 447, column: 1, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 447, column: 1)
!10453 = !DILocation(line: 448, column: 1, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 448, column: 1)
!10455 = !DILocation(line: 449, column: 1, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 449, column: 1)
!10457 = !DILocation(line: 450, column: 1, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 450, column: 1)
!10459 = !DILocation(line: 451, column: 1, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 451, column: 1)
!10461 = !DILocation(line: 452, column: 1, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 452, column: 1)
!10463 = !DILocation(line: 453, column: 1, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 453, column: 1)
!10465 = !DILocation(line: 454, column: 1, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 454, column: 1)
!10467 = !DILocation(line: 455, column: 1, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 455, column: 1)
!10469 = !DILocation(line: 456, column: 1, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 456, column: 1)
!10471 = !DILocation(line: 457, column: 1, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 457, column: 1)
!10473 = !DILocation(line: 458, column: 1, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 458, column: 1)
!10475 = !DILocation(line: 459, column: 1, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 459, column: 1)
!10477 = !DILocation(line: 460, column: 1, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 460, column: 1)
!10479 = !DILocation(line: 461, column: 1, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 461, column: 1)
!10481 = !DILocation(line: 462, column: 1, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 462, column: 1)
!10483 = !DILocation(line: 463, column: 1, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 463, column: 1)
!10485 = !DILocation(line: 464, column: 1, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 464, column: 1)
!10487 = !DILocation(line: 465, column: 1, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 465, column: 1)
!10489 = !DILocation(line: 466, column: 1, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 466, column: 1)
!10491 = !DILocation(line: 467, column: 1, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 467, column: 1)
!10493 = !DILocation(line: 468, column: 1, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 468, column: 1)
!10495 = !DILocation(line: 469, column: 1, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 469, column: 1)
!10497 = !DILocation(line: 470, column: 1, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 470, column: 1)
!10499 = !DILocation(line: 471, column: 1, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 471, column: 1)
!10501 = !DILocation(line: 472, column: 1, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 472, column: 1)
!10503 = !DILocation(line: 473, column: 1, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 473, column: 1)
!10505 = !DILocation(line: 474, column: 1, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 474, column: 1)
!10507 = !DILocation(line: 475, column: 1, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 475, column: 1)
!10509 = !DILocation(line: 476, column: 1, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 476, column: 1)
!10511 = !DILocation(line: 477, column: 1, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 477, column: 1)
!10513 = !DILocation(line: 478, column: 1, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 478, column: 1)
!10515 = !DILocation(line: 479, column: 1, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 479, column: 1)
!10517 = !DILocation(line: 480, column: 1, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 480, column: 1)
!10519 = !DILocation(line: 481, column: 1, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 481, column: 1)
!10521 = !DILocation(line: 482, column: 1, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 482, column: 1)
!10523 = !DILocation(line: 483, column: 1, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 483, column: 1)
!10525 = !DILocation(line: 484, column: 1, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 484, column: 1)
!10527 = !DILocation(line: 485, column: 1, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 485, column: 1)
!10529 = !DILocation(line: 486, column: 1, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 486, column: 1)
!10531 = !DILocation(line: 487, column: 1, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 487, column: 1)
!10533 = !DILocation(line: 488, column: 1, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 488, column: 1)
!10535 = !DILocation(line: 489, column: 1, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 489, column: 1)
!10537 = !DILocation(line: 490, column: 1, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 490, column: 1)
!10539 = !DILocation(line: 491, column: 1, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 491, column: 1)
!10541 = !DILocation(line: 492, column: 1, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 492, column: 1)
!10543 = !DILocation(line: 493, column: 1, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 493, column: 1)
!10545 = !DILocation(line: 494, column: 1, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 494, column: 1)
!10547 = !DILocation(line: 495, column: 1, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 495, column: 1)
!10549 = !DILocation(line: 496, column: 1, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 496, column: 1)
!10551 = !DILocation(line: 497, column: 1, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 497, column: 1)
!10553 = !DILocation(line: 498, column: 1, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 498, column: 1)
!10555 = !DILocation(line: 499, column: 1, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 499, column: 1)
!10557 = !DILocation(line: 500, column: 1, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 500, column: 1)
!10559 = !DILocation(line: 501, column: 1, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 501, column: 1)
!10561 = !DILocation(line: 502, column: 1, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 502, column: 1)
!10563 = !DILocation(line: 503, column: 1, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 503, column: 1)
!10565 = !DILocation(line: 504, column: 1, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 504, column: 1)
!10567 = !DILocation(line: 509, column: 1, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 509, column: 1)
!10569 = !DILocation(line: 510, column: 1, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 510, column: 1)
!10571 = !DILocation(line: 511, column: 1, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 511, column: 1)
!10573 = !DILocation(line: 512, column: 1, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 512, column: 1)
!10575 = !DILocation(line: 513, column: 1, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 513, column: 1)
!10577 = !DILocation(line: 514, column: 1, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 514, column: 1)
!10579 = !DILocation(line: 515, column: 1, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 515, column: 1)
!10581 = !DILocation(line: 516, column: 1, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 516, column: 1)
!10583 = !DILocation(line: 517, column: 1, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 517, column: 1)
!10585 = !DILocation(line: 518, column: 1, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 518, column: 1)
!10587 = !DILocation(line: 519, column: 1, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 519, column: 1)
!10589 = !DILocation(line: 520, column: 1, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 520, column: 1)
!10591 = !DILocation(line: 521, column: 1, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 521, column: 1)
!10593 = !DILocation(line: 522, column: 1, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 522, column: 1)
!10595 = !DILocation(line: 523, column: 1, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 523, column: 1)
!10597 = !DILocation(line: 524, column: 1, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 524, column: 1)
!10599 = !DILocation(line: 525, column: 1, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 525, column: 1)
!10601 = !DILocation(line: 526, column: 1, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 526, column: 1)
!10603 = !DILocation(line: 527, column: 1, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 527, column: 1)
!10605 = !DILocation(line: 528, column: 1, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 528, column: 1)
!10607 = !DILocation(line: 529, column: 1, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 529, column: 1)
!10609 = !DILocation(line: 530, column: 1, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 530, column: 1)
!10611 = !DILocation(line: 531, column: 1, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 531, column: 1)
!10613 = !DILocation(line: 532, column: 1, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 532, column: 1)
!10615 = !DILocation(line: 533, column: 1, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 533, column: 1)
!10617 = !DILocation(line: 534, column: 1, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 534, column: 1)
!10619 = !DILocation(line: 535, column: 1, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 535, column: 1)
!10621 = !DILocation(line: 536, column: 1, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 536, column: 1)
!10623 = !DILocation(line: 537, column: 1, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 537, column: 1)
!10625 = !DILocation(line: 538, column: 1, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 538, column: 1)
!10627 = !DILocation(line: 541, column: 1, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 541, column: 1)
!10629 = !DILocation(line: 542, column: 1, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 542, column: 1)
!10631 = !DILocation(line: 543, column: 1, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 543, column: 1)
!10633 = !DILocation(line: 544, column: 1, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 544, column: 1)
!10635 = !DILocation(line: 545, column: 1, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 545, column: 1)
!10637 = !DILocation(line: 546, column: 1, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 546, column: 1)
!10639 = !DILocation(line: 547, column: 1, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 547, column: 1)
!10641 = !DILocation(line: 548, column: 1, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 548, column: 1)
!10643 = !DILocation(line: 549, column: 1, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 549, column: 1)
!10645 = !DILocation(line: 550, column: 1, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 550, column: 1)
!10647 = !DILocation(line: 551, column: 1, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 551, column: 1)
!10649 = !DILocation(line: 552, column: 1, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 552, column: 1)
!10651 = !DILocation(line: 553, column: 1, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 553, column: 1)
!10653 = !DILocation(line: 554, column: 1, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 554, column: 1)
!10655 = !DILocation(line: 555, column: 1, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 555, column: 1)
!10657 = !DILocation(line: 556, column: 1, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 556, column: 1)
!10659 = !DILocation(line: 557, column: 1, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 557, column: 1)
!10661 = !DILocation(line: 558, column: 1, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 558, column: 1)
!10663 = !DILocation(line: 559, column: 1, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 559, column: 1)
!10665 = !DILocation(line: 560, column: 1, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 560, column: 1)
!10667 = !DILocation(line: 561, column: 1, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 561, column: 1)
!10669 = !DILocation(line: 562, column: 1, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 562, column: 1)
!10671 = !DILocation(line: 563, column: 1, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 563, column: 1)
!10673 = !DILocation(line: 564, column: 1, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 564, column: 1)
!10675 = !DILocation(line: 565, column: 1, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 565, column: 1)
!10677 = !DILocation(line: 566, column: 1, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 566, column: 1)
!10679 = !DILocation(line: 567, column: 1, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 567, column: 1)
!10681 = !DILocation(line: 568, column: 1, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 568, column: 1)
!10683 = !DILocation(line: 571, column: 1, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 571, column: 1)
!10685 = !DILocation(line: 572, column: 1, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 572, column: 1)
!10687 = !DILocation(line: 573, column: 1, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 573, column: 1)
!10689 = !DILocation(line: 574, column: 1, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 574, column: 1)
!10691 = !DILocation(line: 575, column: 1, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 575, column: 1)
!10693 = !DILocation(line: 576, column: 1, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 576, column: 1)
!10695 = !DILocation(line: 577, column: 1, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 577, column: 1)
!10697 = !DILocation(line: 578, column: 1, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 578, column: 1)
!10699 = !DILocation(line: 579, column: 1, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 579, column: 1)
!10701 = !DILocation(line: 580, column: 1, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 580, column: 1)
!10703 = !DILocation(line: 581, column: 1, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 581, column: 1)
!10705 = !DILocation(line: 582, column: 1, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 582, column: 1)
!10707 = !DILocation(line: 583, column: 1, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 583, column: 1)
!10709 = !DILocation(line: 584, column: 1, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 584, column: 1)
!10711 = !DILocation(line: 585, column: 1, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 585, column: 1)
!10713 = !DILocation(line: 586, column: 1, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 586, column: 1)
!10715 = !DILocation(line: 589, column: 1, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 589, column: 1)
!10717 = !DILocation(line: 590, column: 1, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 590, column: 1)
!10719 = !DILocation(line: 591, column: 1, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 591, column: 1)
!10721 = !DILocation(line: 592, column: 1, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 592, column: 1)
!10723 = !DILocation(line: 593, column: 1, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 593, column: 1)
!10725 = !DILocation(line: 594, column: 1, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 594, column: 1)
!10727 = !DILocation(line: 595, column: 1, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 595, column: 1)
!10729 = !DILocation(line: 596, column: 1, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 596, column: 1)
!10731 = !DILocation(line: 597, column: 1, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 597, column: 1)
!10733 = !DILocation(line: 598, column: 1, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 598, column: 1)
!10735 = !DILocation(line: 599, column: 1, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 599, column: 1)
!10737 = !DILocation(line: 600, column: 1, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 600, column: 1)
!10739 = !DILocation(line: 601, column: 1, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 601, column: 1)
!10741 = !DILocation(line: 602, column: 1, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 602, column: 1)
!10743 = !DILocation(line: 605, column: 1, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 605, column: 1)
!10745 = !DILocation(line: 606, column: 1, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 606, column: 1)
!10747 = !DILocation(line: 607, column: 1, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 607, column: 1)
!10749 = !DILocation(line: 608, column: 1, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 608, column: 1)
!10751 = !DILocation(line: 609, column: 1, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 609, column: 1)
!10753 = !DILocation(line: 610, column: 1, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 610, column: 1)
!10755 = !DILocation(line: 611, column: 1, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 611, column: 1)
!10757 = !DILocation(line: 612, column: 1, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 612, column: 1)
!10759 = !DILocation(line: 613, column: 1, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 613, column: 1)
!10761 = !DILocation(line: 614, column: 1, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 614, column: 1)
!10763 = !DILocation(line: 615, column: 1, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 615, column: 1)
!10765 = !DILocation(line: 616, column: 1, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 616, column: 1)
!10767 = !DILocation(line: 617, column: 1, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 617, column: 1)
!10769 = !DILocation(line: 618, column: 1, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 618, column: 1)
!10771 = !DILocation(line: 619, column: 1, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 619, column: 1)
!10773 = !DILocation(line: 620, column: 1, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 620, column: 1)
!10775 = !DILocation(line: 621, column: 1, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 621, column: 1)
!10777 = !DILocation(line: 622, column: 1, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 622, column: 1)
!10779 = !DILocation(line: 623, column: 1, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 623, column: 1)
!10781 = !DILocation(line: 624, column: 1, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 624, column: 1)
!10783 = !DILocation(line: 625, column: 1, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 625, column: 1)
!10785 = !DILocation(line: 626, column: 1, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 626, column: 1)
!10787 = !DILocation(line: 627, column: 1, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 627, column: 1)
!10789 = !DILocation(line: 628, column: 1, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 628, column: 1)
!10791 = !DILocation(line: 629, column: 1, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 629, column: 1)
!10793 = !DILocation(line: 630, column: 1, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 630, column: 1)
!10795 = !DILocation(line: 631, column: 1, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 631, column: 1)
!10797 = !DILocation(line: 632, column: 1, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 632, column: 1)
!10799 = !DILocation(line: 633, column: 1, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 633, column: 1)
!10801 = !DILocation(line: 634, column: 1, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 634, column: 1)
!10803 = !DILocation(line: 635, column: 1, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 635, column: 1)
!10805 = !DILocation(line: 636, column: 1, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 636, column: 1)
!10807 = !DILocation(line: 637, column: 1, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 637, column: 1)
!10809 = !DILocation(line: 638, column: 1, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 638, column: 1)
!10811 = !DILocation(line: 639, column: 1, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 639, column: 1)
!10813 = !DILocation(line: 640, column: 1, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 640, column: 1)
!10815 = !DILocation(line: 641, column: 1, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 641, column: 1)
!10817 = !DILocation(line: 642, column: 1, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 642, column: 1)
!10819 = !DILocation(line: 643, column: 1, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 643, column: 1)
!10821 = !DILocation(line: 644, column: 1, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 644, column: 1)
!10823 = !DILocation(line: 645, column: 1, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 645, column: 1)
!10825 = !DILocation(line: 646, column: 1, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 646, column: 1)
!10827 = !DILocation(line: 647, column: 1, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 647, column: 1)
!10829 = !DILocation(line: 648, column: 1, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 648, column: 1)
!10831 = !DILocation(line: 649, column: 1, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 649, column: 1)
!10833 = !DILocation(line: 650, column: 1, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 650, column: 1)
!10835 = !DILocation(line: 651, column: 1, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 651, column: 1)
!10837 = !DILocation(line: 652, column: 1, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 652, column: 1)
!10839 = !DILocation(line: 653, column: 1, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 653, column: 1)
!10841 = !DILocation(line: 654, column: 1, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 654, column: 1)
!10843 = !DILocation(line: 655, column: 1, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 655, column: 1)
!10845 = !DILocation(line: 656, column: 1, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 656, column: 1)
!10847 = !DILocation(line: 657, column: 1, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 657, column: 1)
!10849 = !DILocation(line: 658, column: 1, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 658, column: 1)
!10851 = !DILocation(line: 659, column: 1, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 659, column: 1)
!10853 = !DILocation(line: 660, column: 1, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 660, column: 1)
!10855 = !DILocation(line: 661, column: 1, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 661, column: 1)
!10857 = !DILocation(line: 662, column: 1, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 662, column: 1)
!10859 = !DILocation(line: 663, column: 1, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 663, column: 1)
!10861 = !DILocation(line: 664, column: 1, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 664, column: 1)
!10863 = !DILocation(line: 665, column: 1, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 665, column: 1)
!10865 = !DILocation(line: 666, column: 1, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 666, column: 1)
!10867 = !DILocation(line: 667, column: 1, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 667, column: 1)
!10869 = !DILocation(line: 668, column: 1, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 668, column: 1)
!10871 = !DILocation(line: 669, column: 1, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 669, column: 1)
!10873 = !DILocation(line: 670, column: 1, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 670, column: 1)
!10875 = !DILocation(line: 671, column: 1, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 671, column: 1)
!10877 = !DILocation(line: 672, column: 1, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 672, column: 1)
!10879 = !DILocation(line: 673, column: 1, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 673, column: 1)
!10881 = !DILocation(line: 674, column: 1, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 674, column: 1)
!10883 = !DILocation(line: 675, column: 1, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 675, column: 1)
!10885 = !DILocation(line: 676, column: 1, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 676, column: 1)
!10887 = !DILocation(line: 677, column: 1, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 677, column: 1)
!10889 = !DILocation(line: 678, column: 1, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 678, column: 1)
!10891 = !DILocation(line: 679, column: 1, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 679, column: 1)
!10893 = !DILocation(line: 680, column: 1, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 680, column: 1)
!10895 = !DILocation(line: 681, column: 1, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 681, column: 1)
!10897 = !DILocation(line: 682, column: 1, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 682, column: 1)
!10899 = !DILocation(line: 683, column: 1, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 683, column: 1)
!10901 = !DILocation(line: 684, column: 1, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 684, column: 1)
!10903 = !DILocation(line: 685, column: 1, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 685, column: 1)
!10905 = !DILocation(line: 686, column: 1, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 686, column: 1)
!10907 = !DILocation(line: 687, column: 1, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 687, column: 1)
!10909 = !DILocation(line: 688, column: 1, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 688, column: 1)
!10911 = !DILocation(line: 689, column: 1, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 689, column: 1)
!10913 = !DILocation(line: 690, column: 1, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 690, column: 1)
!10915 = !DILocation(line: 691, column: 1, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 691, column: 1)
!10917 = !DILocation(line: 692, column: 1, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 692, column: 1)
!10919 = !DILocation(line: 693, column: 1, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 693, column: 1)
!10921 = !DILocation(line: 694, column: 1, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 694, column: 1)
!10923 = !DILocation(line: 695, column: 1, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 695, column: 1)
!10925 = !DILocation(line: 696, column: 1, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 696, column: 1)
!10927 = !DILocation(line: 697, column: 1, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 697, column: 1)
!10929 = !DILocation(line: 698, column: 1, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 698, column: 1)
!10931 = !DILocation(line: 699, column: 1, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 699, column: 1)
!10933 = !DILocation(line: 700, column: 1, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 700, column: 1)
!10935 = !DILocation(line: 701, column: 1, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 701, column: 1)
!10937 = !DILocation(line: 702, column: 1, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 702, column: 1)
!10939 = !DILocation(line: 703, column: 1, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 703, column: 1)
!10941 = !DILocation(line: 704, column: 1, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 704, column: 1)
!10943 = !DILocation(line: 705, column: 1, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 705, column: 1)
!10945 = !DILocation(line: 706, column: 1, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 706, column: 1)
!10947 = !DILocation(line: 707, column: 1, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 707, column: 1)
!10949 = !DILocation(line: 708, column: 1, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 708, column: 1)
!10951 = !DILocation(line: 709, column: 1, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 709, column: 1)
!10953 = !DILocation(line: 710, column: 1, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 710, column: 1)
!10955 = !DILocation(line: 711, column: 1, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 711, column: 1)
!10957 = !DILocation(line: 712, column: 1, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 712, column: 1)
!10959 = !DILocation(line: 729, column: 1, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 729, column: 1)
!10961 = !DILocation(line: 730, column: 1, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 730, column: 1)
!10963 = !DILocation(line: 731, column: 1, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 731, column: 1)
!10965 = !DILocation(line: 732, column: 1, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 732, column: 1)
!10967 = !DILocation(line: 733, column: 1, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 733, column: 1)
!10969 = !DILocation(line: 734, column: 1, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 734, column: 1)
!10971 = !DILocation(line: 735, column: 1, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 735, column: 1)
!10973 = !DILocation(line: 736, column: 1, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 736, column: 1)
!10975 = !DILocation(line: 737, column: 1, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 737, column: 1)
!10977 = !DILocation(line: 738, column: 1, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 738, column: 1)
!10979 = !DILocation(line: 739, column: 1, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 739, column: 1)
!10981 = !DILocation(line: 740, column: 1, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 740, column: 1)
!10983 = !DILocation(line: 741, column: 1, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 741, column: 1)
!10985 = !DILocation(line: 742, column: 1, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 742, column: 1)
!10987 = !DILocation(line: 743, column: 1, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 743, column: 1)
!10989 = !DILocation(line: 744, column: 1, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 744, column: 1)
!10991 = !DILocation(line: 745, column: 1, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 745, column: 1)
!10993 = !DILocation(line: 746, column: 1, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 746, column: 1)
!10995 = !DILocation(line: 753, column: 1, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 753, column: 1)
!10997 = !DILocation(line: 758, column: 1, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !9920, file: !9919, line: 758, column: 1)
!10999 = !DILocation(line: 31, column: 1, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 31, column: 1)
!11001 = !DIFile(filename: "./sync-builtins.def", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!11002 = !DILexicalBlockFile(scope: !9656, file: !11001, discriminator: 0)
!11003 = !DILocation(line: 33, column: 1, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 33, column: 1)
!11005 = !DILocation(line: 35, column: 1, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 35, column: 1)
!11007 = !DILocation(line: 37, column: 1, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 37, column: 1)
!11009 = !DILocation(line: 39, column: 1, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 39, column: 1)
!11011 = !DILocation(line: 41, column: 1, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 41, column: 1)
!11013 = !DILocation(line: 44, column: 1, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 44, column: 1)
!11015 = !DILocation(line: 46, column: 1, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 46, column: 1)
!11017 = !DILocation(line: 48, column: 1, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 48, column: 1)
!11019 = !DILocation(line: 50, column: 1, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 50, column: 1)
!11021 = !DILocation(line: 52, column: 1, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 52, column: 1)
!11023 = !DILocation(line: 54, column: 1, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 54, column: 1)
!11025 = !DILocation(line: 57, column: 1, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 57, column: 1)
!11027 = !DILocation(line: 59, column: 1, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 59, column: 1)
!11029 = !DILocation(line: 61, column: 1, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 61, column: 1)
!11031 = !DILocation(line: 63, column: 1, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 63, column: 1)
!11033 = !DILocation(line: 65, column: 1, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 65, column: 1)
!11035 = !DILocation(line: 67, column: 1, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 67, column: 1)
!11037 = !DILocation(line: 70, column: 1, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 70, column: 1)
!11039 = !DILocation(line: 72, column: 1, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 72, column: 1)
!11041 = !DILocation(line: 74, column: 1, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 74, column: 1)
!11043 = !DILocation(line: 76, column: 1, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 76, column: 1)
!11045 = !DILocation(line: 78, column: 1, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 78, column: 1)
!11047 = !DILocation(line: 80, column: 1, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 80, column: 1)
!11049 = !DILocation(line: 83, column: 1, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 83, column: 1)
!11051 = !DILocation(line: 85, column: 1, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 85, column: 1)
!11053 = !DILocation(line: 87, column: 1, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 87, column: 1)
!11055 = !DILocation(line: 89, column: 1, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 89, column: 1)
!11057 = !DILocation(line: 91, column: 1, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 91, column: 1)
!11059 = !DILocation(line: 93, column: 1, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 93, column: 1)
!11061 = !DILocation(line: 96, column: 1, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 96, column: 1)
!11063 = !DILocation(line: 98, column: 1, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 98, column: 1)
!11065 = !DILocation(line: 100, column: 1, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 100, column: 1)
!11067 = !DILocation(line: 102, column: 1, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 102, column: 1)
!11069 = !DILocation(line: 104, column: 1, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 104, column: 1)
!11071 = !DILocation(line: 106, column: 1, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 106, column: 1)
!11073 = !DILocation(line: 109, column: 1, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 109, column: 1)
!11075 = !DILocation(line: 111, column: 1, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 111, column: 1)
!11077 = !DILocation(line: 113, column: 1, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 113, column: 1)
!11079 = !DILocation(line: 115, column: 1, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 115, column: 1)
!11081 = !DILocation(line: 117, column: 1, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 117, column: 1)
!11083 = !DILocation(line: 119, column: 1, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 119, column: 1)
!11085 = !DILocation(line: 122, column: 1, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 122, column: 1)
!11087 = !DILocation(line: 124, column: 1, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 124, column: 1)
!11089 = !DILocation(line: 126, column: 1, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 126, column: 1)
!11091 = !DILocation(line: 128, column: 1, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 128, column: 1)
!11093 = !DILocation(line: 130, column: 1, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 130, column: 1)
!11095 = !DILocation(line: 132, column: 1, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 132, column: 1)
!11097 = !DILocation(line: 135, column: 1, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 135, column: 1)
!11099 = !DILocation(line: 137, column: 1, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 137, column: 1)
!11101 = !DILocation(line: 139, column: 1, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 139, column: 1)
!11103 = !DILocation(line: 141, column: 1, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 141, column: 1)
!11105 = !DILocation(line: 143, column: 1, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 143, column: 1)
!11107 = !DILocation(line: 145, column: 1, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 145, column: 1)
!11109 = !DILocation(line: 148, column: 1, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 148, column: 1)
!11111 = !DILocation(line: 150, column: 1, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 150, column: 1)
!11113 = !DILocation(line: 152, column: 1, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 152, column: 1)
!11115 = !DILocation(line: 154, column: 1, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 154, column: 1)
!11117 = !DILocation(line: 156, column: 1, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 156, column: 1)
!11119 = !DILocation(line: 158, column: 1, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 158, column: 1)
!11121 = !DILocation(line: 161, column: 1, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 161, column: 1)
!11123 = !DILocation(line: 163, column: 1, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 163, column: 1)
!11125 = !DILocation(line: 165, column: 1, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 165, column: 1)
!11127 = !DILocation(line: 167, column: 1, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 167, column: 1)
!11129 = !DILocation(line: 169, column: 1, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 169, column: 1)
!11131 = !DILocation(line: 171, column: 1, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 171, column: 1)
!11133 = !DILocation(line: 174, column: 1, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 174, column: 1)
!11135 = !DILocation(line: 176, column: 1, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 176, column: 1)
!11137 = !DILocation(line: 178, column: 1, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 178, column: 1)
!11139 = !DILocation(line: 180, column: 1, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 180, column: 1)
!11141 = !DILocation(line: 182, column: 1, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 182, column: 1)
!11143 = !DILocation(line: 184, column: 1, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 184, column: 1)
!11145 = !DILocation(line: 187, column: 1, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 187, column: 1)
!11147 = !DILocation(line: 190, column: 1, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 190, column: 1)
!11149 = !DILocation(line: 193, column: 1, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 193, column: 1)
!11151 = !DILocation(line: 196, column: 1, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 196, column: 1)
!11153 = !DILocation(line: 199, column: 1, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 199, column: 1)
!11155 = !DILocation(line: 202, column: 1, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 202, column: 1)
!11157 = !DILocation(line: 206, column: 1, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 206, column: 1)
!11159 = !DILocation(line: 209, column: 1, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 209, column: 1)
!11161 = !DILocation(line: 212, column: 1, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 212, column: 1)
!11163 = !DILocation(line: 215, column: 1, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 215, column: 1)
!11165 = !DILocation(line: 218, column: 1, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 218, column: 1)
!11167 = !DILocation(line: 221, column: 1, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 221, column: 1)
!11169 = !DILocation(line: 225, column: 1, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 225, column: 1)
!11171 = !DILocation(line: 227, column: 1, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 227, column: 1)
!11173 = !DILocation(line: 229, column: 1, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 229, column: 1)
!11175 = !DILocation(line: 231, column: 1, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 231, column: 1)
!11177 = !DILocation(line: 233, column: 1, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 233, column: 1)
!11179 = !DILocation(line: 235, column: 1, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 235, column: 1)
!11181 = !DILocation(line: 238, column: 1, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 238, column: 1)
!11183 = !DILocation(line: 240, column: 1, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 240, column: 1)
!11185 = !DILocation(line: 242, column: 1, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 242, column: 1)
!11187 = !DILocation(line: 244, column: 1, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 244, column: 1)
!11189 = !DILocation(line: 246, column: 1, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 246, column: 1)
!11191 = !DILocation(line: 248, column: 1, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 248, column: 1)
!11193 = !DILocation(line: 251, column: 1, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11002, file: !11001, line: 251, column: 1)
!11195 = !DILocation(line: 27, column: 1, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 27, column: 1)
!11197 = !DIFile(filename: "./omp-builtins.def", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!11198 = !DILexicalBlockFile(scope: !9656, file: !11197, discriminator: 0)
!11199 = !DILocation(line: 29, column: 1, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 29, column: 1)
!11201 = !DILocation(line: 32, column: 1, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 32, column: 1)
!11203 = !DILocation(line: 34, column: 1, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 34, column: 1)
!11205 = !DILocation(line: 36, column: 1, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 36, column: 1)
!11207 = !DILocation(line: 38, column: 1, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 38, column: 1)
!11209 = !DILocation(line: 40, column: 1, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 40, column: 1)
!11211 = !DILocation(line: 42, column: 1, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 42, column: 1)
!11213 = !DILocation(line: 44, column: 1, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 44, column: 1)
!11215 = !DILocation(line: 47, column: 1, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 47, column: 1)
!11217 = !DILocation(line: 53, column: 1, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 53, column: 1)
!11219 = !DILocation(line: 57, column: 1, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 57, column: 1)
!11221 = !DILocation(line: 61, column: 1, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 61, column: 1)
!11223 = !DILocation(line: 65, column: 1, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 65, column: 1)
!11225 = !DILocation(line: 69, column: 1, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 69, column: 1)
!11227 = !DILocation(line: 73, column: 1, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 73, column: 1)
!11229 = !DILocation(line: 77, column: 1, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 77, column: 1)
!11231 = !DILocation(line: 81, column: 1, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 81, column: 1)
!11233 = !DILocation(line: 85, column: 1, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 85, column: 1)
!11235 = !DILocation(line: 87, column: 1, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 87, column: 1)
!11237 = !DILocation(line: 89, column: 1, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 89, column: 1)
!11239 = !DILocation(line: 91, column: 1, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 91, column: 1)
!11241 = !DILocation(line: 93, column: 1, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 93, column: 1)
!11243 = !DILocation(line: 96, column: 1, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 96, column: 1)
!11245 = !DILocation(line: 99, column: 1, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 99, column: 1)
!11247 = !DILocation(line: 102, column: 1, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 102, column: 1)
!11249 = !DILocation(line: 105, column: 1, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 105, column: 1)
!11251 = !DILocation(line: 109, column: 1, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 109, column: 1)
!11253 = !DILocation(line: 113, column: 1, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 113, column: 1)
!11255 = !DILocation(line: 117, column: 1, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 117, column: 1)
!11257 = !DILocation(line: 121, column: 1, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 121, column: 1)
!11259 = !DILocation(line: 125, column: 1, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 125, column: 1)
!11261 = !DILocation(line: 129, column: 1, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 129, column: 1)
!11263 = !DILocation(line: 133, column: 1, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 133, column: 1)
!11265 = !DILocation(line: 137, column: 1, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 137, column: 1)
!11267 = !DILocation(line: 139, column: 1, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 139, column: 1)
!11269 = !DILocation(line: 141, column: 1, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 141, column: 1)
!11271 = !DILocation(line: 143, column: 1, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 143, column: 1)
!11273 = !DILocation(line: 145, column: 1, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 145, column: 1)
!11275 = !DILocation(line: 148, column: 1, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 148, column: 1)
!11277 = !DILocation(line: 151, column: 1, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 151, column: 1)
!11279 = !DILocation(line: 154, column: 1, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 154, column: 1)
!11281 = !DILocation(line: 160, column: 1, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 160, column: 1)
!11283 = !DILocation(line: 164, column: 1, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 164, column: 1)
!11285 = !DILocation(line: 168, column: 1, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 168, column: 1)
!11287 = !DILocation(line: 172, column: 1, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 172, column: 1)
!11289 = !DILocation(line: 176, column: 1, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 176, column: 1)
!11291 = !DILocation(line: 178, column: 1, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 178, column: 1)
!11293 = !DILocation(line: 180, column: 1, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 180, column: 1)
!11295 = !DILocation(line: 182, column: 1, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 182, column: 1)
!11297 = !DILocation(line: 184, column: 1, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 184, column: 1)
!11299 = !DILocation(line: 186, column: 1, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 186, column: 1)
!11301 = !DILocation(line: 188, column: 1, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 188, column: 1)
!11303 = !DILocation(line: 191, column: 1, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 191, column: 1)
!11305 = !DILocation(line: 193, column: 1, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 193, column: 1)
!11307 = !DILocation(line: 195, column: 1, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 195, column: 1)
!11309 = !DILocation(line: 198, column: 1, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 198, column: 1)
!11311 = !DILocation(line: 200, column: 1, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 200, column: 1)
!11313 = !DILocation(line: 203, column: 1, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 203, column: 1)
!11315 = !DILocation(line: 205, column: 1, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 205, column: 1)
!11317 = !DILocation(line: 207, column: 1, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11198, file: !11197, line: 207, column: 1)
!11319 = !DILocation(line: 4644, column: 11, scope: !9915)
!11320 = !DILocation(line: 4644, column: 3, scope: !9915)
!11321 = !DILocation(line: 4646, column: 3, scope: !9915)
!11322 = !DILocation(line: 4648, column: 7, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 4648, column: 7)
!11324 = !DILocation(line: 4648, column: 7, scope: !9915)
!11325 = !DILocation(line: 4649, column: 5, scope: !11323)
!11326 = !DILocation(line: 4650, column: 1, scope: !9915)
!11327 = distinct !DISubprogram(name: "set_compound_literal_name", scope: !3, file: !3, line: 5109, type: !6221, scopeLine: 5110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11328)
!11328 = !{!11329, !11330, !11331, !11333}
!11329 = !DILocalVariable(name: "decl", arg: 1, scope: !11327, file: !3, line: 5109, type: !1527)
!11330 = !DILocalVariable(name: "name", scope: !11327, file: !3, line: 5111, type: !1522)
!11331 = !DILocalVariable(name: "name_", scope: !11332, file: !3, line: 5112, type: !2929)
!11332 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 5112, column: 3)
!11333 = !DILocalVariable(name: "output_", scope: !11332, file: !3, line: 5112, type: !11334)
!11334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!11335 = !DILocation(line: 0, scope: !11327)
!11336 = !DILocation(line: 0, scope: !11332)
!11337 = !DILocation(line: 5112, column: 3, scope: !11332)
!11338 = !DILocation(line: 5114, column: 26, scope: !11327)
!11339 = !DILocation(line: 5115, column: 22, scope: !11327)
!11340 = !DILocation(line: 5115, column: 3, scope: !11327)
!11341 = !DILocation(line: 5115, column: 20, scope: !11327)
!11342 = !DILocation(line: 5116, column: 1, scope: !11327)
!11343 = distinct !DISubprogram(name: "build_va_arg", scope: !3, file: !3, line: 5119, type: !11344, scopeLine: 5120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11346)
!11344 = !DISubroutineType(types: !11345)
!11345 = !{!1527, !1651, !1527, !1527}
!11346 = !{!11347, !11348, !11349}
!11347 = !DILocalVariable(name: "loc", arg: 1, scope: !11343, file: !3, line: 5119, type: !1651)
!11348 = !DILocalVariable(name: "expr", arg: 2, scope: !11343, file: !3, line: 5119, type: !1527)
!11349 = !DILocalVariable(name: "type", arg: 3, scope: !11343, file: !3, line: 5119, type: !1527)
!11350 = !DILocation(line: 0, scope: !11343)
!11351 = !DILocation(line: 5121, column: 10, scope: !11343)
!11352 = !DILocation(line: 5122, column: 3, scope: !11343)
!11353 = !DILocation(line: 5123, column: 3, scope: !11343)
!11354 = distinct !DISubprogram(name: "disable_builtin_function", scope: !3, file: !3, line: 5142, type: !11355, scopeLine: 5143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11357)
!11355 = !DISubroutineType(types: !11356)
!11356 = !{null, !1525}
!11357 = !{!11358, !11359}
!11358 = !DILocalVariable(name: "name", arg: 1, scope: !11354, file: !3, line: 5142, type: !1525)
!11359 = !DILocalVariable(name: "new_disabled_builtin", scope: !11360, file: !3, line: 5148, type: !2797)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 5147, column: 5)
!11361 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 5144, column: 7)
!11362 = !DILocation(line: 0, scope: !11354)
!11363 = !DILocation(line: 5144, column: 36, scope: !11361)
!11364 = !DILocation(line: 5144, column: 7, scope: !11361)
!11365 = !DILocation(line: 5144, column: 59, scope: !11361)
!11366 = !DILocation(line: 5144, column: 7, scope: !11354)
!11367 = !DILocation(line: 5145, column: 5, scope: !11361)
!11368 = !DILocation(line: 5148, column: 48, scope: !11360)
!11369 = !DILocation(line: 0, scope: !11360)
!11370 = !DILocation(line: 5149, column: 29, scope: !11360)
!11371 = !DILocation(line: 5149, column: 34, scope: !11360)
!11372 = !DILocation(line: 5150, column: 36, scope: !11360)
!11373 = !DILocation(line: 5150, column: 29, scope: !11360)
!11374 = !DILocation(line: 5150, column: 34, scope: !11360)
!11375 = !DILocation(line: 5151, column: 25, scope: !11360)
!11376 = !DILocation(line: 5153, column: 1, scope: !11354)
!11377 = distinct !DISubprogram(name: "c_promoting_integer_type_p", scope: !3, file: !3, line: 5214, type: !6534, scopeLine: 5215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11378)
!11378 = !{!11379}
!11379 = !DILocalVariable(name: "t", arg: 1, scope: !11377, file: !3, line: 5214, type: !2855)
!11380 = !DILocation(line: 0, scope: !11377)
!11381 = !DILocation(line: 5216, column: 11, scope: !11377)
!11382 = !DILocation(line: 5216, column: 3, scope: !11377)
!11383 = !DILocation(line: 5219, column: 15, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 5217, column: 5)
!11385 = !DILocation(line: 5219, column: 40, scope: !11384)
!11386 = !DILocation(line: 5219, column: 37, scope: !11384)
!11387 = !DILocation(line: 5220, column: 8, scope: !11384)
!11388 = !DILocation(line: 5220, column: 36, scope: !11384)
!11389 = !DILocation(line: 5220, column: 33, scope: !11384)
!11390 = !DILocation(line: 5221, column: 8, scope: !11384)
!11391 = !DILocation(line: 5221, column: 36, scope: !11384)
!11392 = !DILocation(line: 5221, column: 33, scope: !11384)
!11393 = !DILocation(line: 5222, column: 8, scope: !11384)
!11394 = !DILocation(line: 5222, column: 36, scope: !11384)
!11395 = !DILocation(line: 5222, column: 33, scope: !11384)
!11396 = !DILocation(line: 5223, column: 8, scope: !11384)
!11397 = !DILocation(line: 5223, column: 36, scope: !11384)
!11398 = !DILocation(line: 5223, column: 33, scope: !11384)
!11399 = !DILocation(line: 5224, column: 8, scope: !11384)
!11400 = !DILocation(line: 5224, column: 11, scope: !11384)
!11401 = !DILocation(line: 5224, column: 32, scope: !11384)
!11402 = !DILocation(line: 5224, column: 30, scope: !11384)
!11403 = !DILocation(line: 5219, column: 7, scope: !11384)
!11404 = !DILocation(line: 5230, column: 14, scope: !11384)
!11405 = !DILocation(line: 5230, column: 35, scope: !11384)
!11406 = !DILocation(line: 5230, column: 33, scope: !11384)
!11407 = !DILocation(line: 5230, column: 7, scope: !11384)
!11408 = !DILocation(line: 5236, column: 7, scope: !11384)
!11409 = !DILocation(line: 0, scope: !11384)
!11410 = !DILocation(line: 5238, column: 1, scope: !11377)
!11411 = distinct !DISubprogram(name: "self_promoting_args_p", scope: !3, file: !3, line: 5244, type: !11412, scopeLine: 5245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11414)
!11412 = !DISubroutineType(types: !11413)
!11413 = !{!1520, !2855}
!11414 = !{!11415, !11416, !11417}
!11415 = !DILocalVariable(name: "parms", arg: 1, scope: !11411, file: !3, line: 5244, type: !2855)
!11416 = !DILocalVariable(name: "t", scope: !11411, file: !3, line: 5246, type: !2855)
!11417 = !DILocalVariable(name: "type", scope: !11418, file: !3, line: 5249, type: !1527)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !3, line: 5248, column: 5)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 5247, column: 3)
!11420 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 5247, column: 3)
!11421 = !DILocation(line: 0, scope: !11411)
!11422 = !DILocation(line: 5247, column: 8, scope: !11420)
!11423 = !DILocation(line: 0, scope: !11420)
!11424 = !DILocation(line: 5247, column: 3, scope: !11420)
!11425 = !DILocation(line: 5249, column: 19, scope: !11418)
!11426 = !DILocation(line: 0, scope: !11418)
!11427 = !DILocation(line: 5251, column: 19, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 5251, column: 11)
!11429 = !DILocation(line: 5251, column: 16, scope: !11428)
!11430 = !DILocation(line: 5251, column: 11, scope: !11418)
!11431 = !DILocation(line: 5254, column: 11, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 5254, column: 11)
!11433 = !DILocation(line: 5254, column: 26, scope: !11432)
!11434 = !DILocation(line: 5254, column: 42, scope: !11432)
!11435 = !DILocation(line: 5254, column: 39, scope: !11432)
!11436 = !DILocation(line: 5254, column: 31, scope: !11432)
!11437 = !DILocation(line: 5257, column: 16, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 5257, column: 11)
!11439 = !DILocation(line: 5260, column: 11, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 5260, column: 11)
!11441 = !DILocation(line: 5260, column: 39, scope: !11440)
!11442 = !DILocation(line: 5260, column: 36, scope: !11440)
!11443 = !DILocation(line: 5260, column: 11, scope: !11418)
!11444 = !DILocation(line: 5263, column: 11, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 5263, column: 11)
!11446 = !DILocation(line: 0, scope: !11419)
!11447 = !DILocation(line: 5247, column: 26, scope: !11419)
!11448 = !DILocation(line: 5247, column: 3, scope: !11419)
!11449 = distinct !{!11449, !11424, !11450}
!11450 = !DILocation(line: 5265, column: 5, scope: !11420)
!11451 = !DILocation(line: 5267, column: 1, scope: !11411)
!11452 = distinct !DISubprogram(name: "strip_pointer_operator", scope: !3, file: !3, line: 5271, type: !5693, scopeLine: 5272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11453)
!11453 = !{!11454}
!11454 = !DILocalVariable(name: "t", arg: 1, scope: !11452, file: !3, line: 5271, type: !1527)
!11455 = !DILocation(line: 0, scope: !11452)
!11456 = !DILocation(line: 5273, column: 3, scope: !11452)
!11457 = !DILocation(line: 5273, column: 10, scope: !11452)
!11458 = !DILocation(line: 5274, column: 9, scope: !11452)
!11459 = distinct !{!11459, !11456, !11458}
!11460 = !DILocation(line: 5275, column: 3, scope: !11452)
!11461 = distinct !DISubprogram(name: "strip_pointer_or_array_types", scope: !3, file: !3, line: 5280, type: !5693, scopeLine: 5281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11462)
!11462 = !{!11463}
!11463 = !DILocalVariable(name: "t", arg: 1, scope: !11461, file: !3, line: 5280, type: !1527)
!11464 = !DILocation(line: 0, scope: !11461)
!11465 = !DILocation(line: 5282, column: 3, scope: !11461)
!11466 = !DILocation(line: 5282, column: 10, scope: !11461)
!11467 = !DILocation(line: 5282, column: 24, scope: !11461)
!11468 = !DILocation(line: 5282, column: 38, scope: !11461)
!11469 = !DILocation(line: 5282, column: 41, scope: !11461)
!11470 = !DILocation(line: 5283, column: 9, scope: !11461)
!11471 = distinct !{!11471, !11465, !11470}
!11472 = !DILocation(line: 5284, column: 3, scope: !11461)
!11473 = distinct !DISubprogram(name: "case_compare", scope: !3, file: !3, line: 5293, type: !11474, scopeLine: 5294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11476)
!11474 = !DISubroutineType(types: !11475)
!11475 = !{!1520, !2804, !2804}
!11476 = !{!11477, !11478}
!11477 = !DILocalVariable(name: "k1", arg: 1, scope: !11473, file: !3, line: 5293, type: !2804)
!11478 = !DILocalVariable(name: "k2", arg: 2, scope: !11473, file: !3, line: 5293, type: !2804)
!11479 = !DILocation(line: 0, scope: !11473)
!11480 = !DILocation(line: 5297, column: 8, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 5297, column: 7)
!11482 = !DILocation(line: 0, scope: !11481)
!11483 = !DILocation(line: 5297, column: 7, scope: !11473)
!11484 = !DILocation(line: 5298, column: 12, scope: !11481)
!11485 = !DILocation(line: 5298, column: 5, scope: !11481)
!11486 = !DILocation(line: 5299, column: 12, scope: !11481)
!11487 = !DILocation(line: 5300, column: 5, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 5299, column: 12)
!11489 = !DILocation(line: 5302, column: 32, scope: !11473)
!11490 = !DILocation(line: 5302, column: 43, scope: !11473)
!11491 = !DILocation(line: 5302, column: 10, scope: !11473)
!11492 = !DILocation(line: 5302, column: 3, scope: !11473)
!11493 = !DILocation(line: 5303, column: 1, scope: !11473)
!11494 = distinct !DISubprogram(name: "c_add_case_label", scope: !3, file: !3, line: 5316, type: !11495, scopeLine: 5318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11531)
!11495 = !DISubroutineType(types: !11496)
!11496 = !{!1527, !1651, !11497, !1527, !1527, !1527, !1527}
!11497 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree", file: !2805, line: 128, baseType: !11498)
!11498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11499, size: 64)
!11499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_s", file: !2805, line: 109, size: 448, elements: !11500)
!11500 = !{!11501, !11510, !11513, !11518, !11523, !11528, !11530}
!11501 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !11499, file: !2805, line: 111, baseType: !11502, size: 64)
!11502 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_node", file: !2805, line: 66, baseType: !11503)
!11503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11504, size: 64)
!11504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_node_s", file: !2805, line: 96, size: 256, elements: !11505)
!11505 = !{!11506, !11507, !11508, !11509}
!11506 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11504, file: !2805, line: 98, baseType: !2804, size: 64)
!11507 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11504, file: !2805, line: 101, baseType: !2807, size: 64, offset: 64)
!11508 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !11504, file: !2805, line: 104, baseType: !11502, size: 64, offset: 128)
!11509 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !11504, file: !2805, line: 105, baseType: !11502, size: 64, offset: 192)
!11510 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !11499, file: !2805, line: 114, baseType: !11511, size: 64, offset: 64)
!11511 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_compare_fn", file: !2805, line: 70, baseType: !11512)
!11512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11474, size: 64)
!11513 = !DIDerivedType(tag: DW_TAG_member, name: "delete_key", scope: !11499, file: !2805, line: 117, baseType: !11514, size: 64, offset: 128)
!11514 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_key_fn", file: !2805, line: 74, baseType: !11515)
!11515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11516, size: 64)
!11516 = !DISubroutineType(types: !11517)
!11517 = !{null, !2804}
!11518 = !DIDerivedType(tag: DW_TAG_member, name: "delete_value", scope: !11499, file: !2805, line: 120, baseType: !11519, size: 64, offset: 192)
!11519 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_value_fn", file: !2805, line: 78, baseType: !11520)
!11520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11521, size: 64)
!11521 = !DISubroutineType(types: !11522)
!11522 = !{null, !2807}
!11523 = !DIDerivedType(tag: DW_TAG_member, name: "allocate", scope: !11499, file: !2805, line: 123, baseType: !11524, size: 64, offset: 256)
!11524 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_allocate_fn", file: !2805, line: 87, baseType: !11525)
!11525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11526, size: 64)
!11526 = !DISubroutineType(types: !11527)
!11527 = !{!1524, !1520, !1524}
!11528 = !DIDerivedType(tag: DW_TAG_member, name: "deallocate", scope: !11499, file: !2805, line: 124, baseType: !11529, size: 64, offset: 320)
!11529 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_deallocate_fn", file: !2805, line: 93, baseType: !2353)
!11530 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_data", scope: !11499, file: !2805, line: 125, baseType: !1524, size: 64, offset: 384)
!11531 = !{!11532, !11533, !11534, !11535, !11536, !11537, !11538, !11539, !11540, !11541, !11542, !11545, !11546, !11549, !11552}
!11532 = !DILocalVariable(name: "loc", arg: 1, scope: !11494, file: !3, line: 5316, type: !1651)
!11533 = !DILocalVariable(name: "cases", arg: 2, scope: !11494, file: !3, line: 5316, type: !11497)
!11534 = !DILocalVariable(name: "cond", arg: 3, scope: !11494, file: !3, line: 5316, type: !1527)
!11535 = !DILocalVariable(name: "orig_type", arg: 4, scope: !11494, file: !3, line: 5316, type: !1527)
!11536 = !DILocalVariable(name: "low_value", arg: 5, scope: !11494, file: !3, line: 5317, type: !1527)
!11537 = !DILocalVariable(name: "high_value", arg: 6, scope: !11494, file: !3, line: 5317, type: !1527)
!11538 = !DILocalVariable(name: "type", scope: !11494, file: !3, line: 5319, type: !1527)
!11539 = !DILocalVariable(name: "label", scope: !11494, file: !3, line: 5320, type: !1527)
!11540 = !DILocalVariable(name: "case_label", scope: !11494, file: !3, line: 5321, type: !1527)
!11541 = !DILocalVariable(name: "node", scope: !11494, file: !3, line: 5322, type: !11502)
!11542 = !DILocalVariable(name: "low_bound", scope: !11543, file: !3, line: 5389, type: !11502)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 5388, column: 5)
!11544 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5387, column: 7)
!11545 = !DILocalVariable(name: "high_bound", scope: !11543, file: !3, line: 5390, type: !11502)
!11546 = !DILocalVariable(name: "duplicate", scope: !11547, file: !3, line: 5426, type: !1527)
!11547 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 5425, column: 5)
!11548 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5424, column: 7)
!11549 = !DILocalVariable(name: "t", scope: !11550, file: !3, line: 5463, type: !1527)
!11550 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 5462, column: 5)
!11551 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5461, column: 7)
!11552 = !DILabel(scope: !11494, name: "error_out", file: !3, line: 5457)
!11553 = !DILocation(line: 0, scope: !11494)
!11554 = !DILocation(line: 5325, column: 11, scope: !11494)
!11555 = !DILocation(line: 5329, column: 8, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5329, column: 7)
!11557 = !DILocation(line: 5329, column: 24, scope: !11556)
!11558 = !DILocation(line: 5329, column: 21, scope: !11556)
!11559 = !DILocation(line: 5329, column: 13, scope: !11556)
!11560 = !DILocation(line: 5332, column: 8, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5332, column: 7)
!11562 = !DILocation(line: 5332, column: 18, scope: !11561)
!11563 = !DILocation(line: 5332, column: 21, scope: !11561)
!11564 = !DILocation(line: 5333, column: 8, scope: !11561)
!11565 = !DILocation(line: 5333, column: 11, scope: !11561)
!11566 = !DILocation(line: 5334, column: 7, scope: !11561)
!11567 = !DILocation(line: 5334, column: 11, scope: !11561)
!11568 = !DILocation(line: 5334, column: 22, scope: !11561)
!11569 = !DILocation(line: 5334, column: 25, scope: !11561)
!11570 = !DILocation(line: 5335, column: 4, scope: !11561)
!11571 = !DILocation(line: 5335, column: 7, scope: !11561)
!11572 = !DILocation(line: 5332, column: 7, scope: !11494)
!11573 = !DILocation(line: 5337, column: 7, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11561, file: !3, line: 5336, column: 5)
!11575 = !DILocation(line: 5338, column: 7, scope: !11574)
!11576 = !DILocation(line: 5342, column: 7, scope: !11494)
!11577 = !DILocation(line: 5343, column: 5, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5342, column: 7)
!11579 = !DILocation(line: 5346, column: 10, scope: !11494)
!11580 = !DILocation(line: 5347, column: 7, scope: !11494)
!11581 = !DILocation(line: 5349, column: 19, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 5348, column: 5)
!11583 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5347, column: 7)
!11584 = !DILocation(line: 5350, column: 19, scope: !11582)
!11585 = !DILocation(line: 5350, column: 17, scope: !11582)
!11586 = !DILocation(line: 5351, column: 24, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 5351, column: 11)
!11588 = !DILocation(line: 5351, column: 21, scope: !11587)
!11589 = !DILocation(line: 5351, column: 11, scope: !11582)
!11590 = !DILocation(line: 5354, column: 7, scope: !11494)
!11591 = !DILocation(line: 5356, column: 20, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11593, file: !3, line: 5355, column: 5)
!11593 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5354, column: 7)
!11594 = !DILocation(line: 5357, column: 20, scope: !11592)
!11595 = !DILocation(line: 5357, column: 18, scope: !11592)
!11596 = !DILocation(line: 5358, column: 25, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 5358, column: 11)
!11598 = !DILocation(line: 5358, column: 22, scope: !11597)
!11599 = !DILocation(line: 5358, column: 11, scope: !11592)
!11600 = !DILocation(line: 5362, column: 20, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5362, column: 7)
!11602 = !DILocation(line: 5362, column: 7, scope: !11601)
!11603 = !DILocation(line: 5362, column: 17, scope: !11601)
!11604 = !DILocation(line: 5367, column: 11, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 5367, column: 11)
!11606 = distinct !DILexicalBlock(scope: !11601, file: !3, line: 5363, column: 5)
!11607 = !DILocation(line: 5367, column: 11, scope: !11606)
!11608 = !DILocation(line: 5368, column: 13, scope: !11605)
!11609 = !DILocation(line: 5368, column: 2, scope: !11605)
!11610 = !DILocation(line: 5369, column: 17, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11605, file: !3, line: 5369, column: 16)
!11612 = !DILocation(line: 5369, column: 16, scope: !11605)
!11613 = !DILocation(line: 5370, column: 2, scope: !11611)
!11614 = !DILocation(line: 5376, column: 7, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 5376, column: 7)
!11616 = !DILocation(line: 5377, column: 7, scope: !11615)
!11617 = !DILocation(line: 5383, column: 53, scope: !11494)
!11618 = !DILocation(line: 5378, column: 21, scope: !11615)
!11619 = !DILocation(line: 5377, column: 11, scope: !11615)
!11620 = !DILocation(line: 5376, column: 7, scope: !11494)
!11621 = !DILocation(line: 5383, column: 10, scope: !11494)
!11622 = !DILocation(line: 5387, column: 8, scope: !11544)
!11623 = !DILocation(line: 5387, column: 13, scope: !11544)
!11624 = !DILocation(line: 5387, column: 17, scope: !11544)
!11625 = !DILocation(line: 5387, column: 30, scope: !11544)
!11626 = !DILocation(line: 5387, column: 27, scope: !11544)
!11627 = !DILocation(line: 5399, column: 19, scope: !11543)
!11628 = !DILocation(line: 0, scope: !11543)
!11629 = !DILocation(line: 5402, column: 24, scope: !11543)
!11630 = !DILocation(line: 5401, column: 20, scope: !11543)
!11631 = !DILocation(line: 5407, column: 11, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11543, file: !3, line: 5407, column: 11)
!11633 = !DILocation(line: 5408, column: 4, scope: !11632)
!11634 = !DILocation(line: 5408, column: 7, scope: !11632)
!11635 = !DILocation(line: 5409, column: 4, scope: !11632)
!11636 = !DILocation(line: 5410, column: 9, scope: !11632)
!11637 = !DILocation(line: 5409, column: 7, scope: !11632)
!11638 = !DILocation(line: 5410, column: 20, scope: !11632)
!11639 = !DILocation(line: 5407, column: 11, scope: !11543)
!11640 = !DILocation(line: 5416, column: 16, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 5416, column: 16)
!11642 = !DILocation(line: 5417, column: 12, scope: !11641)
!11643 = !DILocation(line: 5417, column: 9, scope: !11641)
!11644 = !DILocation(line: 5418, column: 54, scope: !11641)
!11645 = !DILocation(line: 5418, column: 13, scope: !11641)
!11646 = !DILocation(line: 5420, column: 6, scope: !11641)
!11647 = !DILocation(line: 5416, column: 16, scope: !11632)
!11648 = !DILocation(line: 5424, column: 7, scope: !11548)
!11649 = !DILocation(line: 5424, column: 7, scope: !11494)
!11650 = !DILocation(line: 5426, column: 24, scope: !11547)
!11651 = !DILocation(line: 0, scope: !11547)
!11652 = !DILocation(line: 5428, column: 11, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 5428, column: 11)
!11654 = !DILocation(line: 5428, column: 11, scope: !11547)
!11655 = !DILocation(line: 5430, column: 4, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 5429, column: 2)
!11657 = !DILocation(line: 5431, column: 14, scope: !11656)
!11658 = !DILocation(line: 5431, column: 4, scope: !11656)
!11659 = !DILocation(line: 5433, column: 2, scope: !11656)
!11660 = !DILocation(line: 5434, column: 16, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 5434, column: 16)
!11662 = !DILocation(line: 5434, column: 16, scope: !11653)
!11663 = !DILocation(line: 5436, column: 4, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 5435, column: 2)
!11665 = !DILocation(line: 5437, column: 14, scope: !11664)
!11666 = !DILocation(line: 5437, column: 4, scope: !11664)
!11667 = !DILocation(line: 5438, column: 2, scope: !11664)
!11668 = !DILocation(line: 5441, column: 4, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 5440, column: 2)
!11670 = !DILocation(line: 5442, column: 14, scope: !11669)
!11671 = !DILocation(line: 5442, column: 4, scope: !11669)
!11672 = !DILocation(line: 5449, column: 49, scope: !11494)
!11673 = !DILocation(line: 5449, column: 60, scope: !11494)
!11674 = !DILocation(line: 5449, column: 26, scope: !11494)
!11675 = !DILocation(line: 5449, column: 16, scope: !11494)
!11676 = !DILocation(line: 5452, column: 25, scope: !11494)
!11677 = !DILocation(line: 5453, column: 8, scope: !11494)
!11678 = !DILocation(line: 5451, column: 3, scope: !11494)
!11679 = !DILocation(line: 5455, column: 3, scope: !11494)
!11680 = !DILocation(line: 5457, column: 2, scope: !11494)
!11681 = !DILocation(line: 5461, column: 15, scope: !11551)
!11682 = !DILocation(line: 5461, column: 8, scope: !11551)
!11683 = !DILocation(line: 5461, column: 7, scope: !11494)
!11684 = !DILocation(line: 5463, column: 16, scope: !11550)
!11685 = !DILocation(line: 0, scope: !11550)
!11686 = !DILocation(line: 5464, column: 17, scope: !11550)
!11687 = !DILocation(line: 5464, column: 7, scope: !11550)
!11688 = !DILocation(line: 5465, column: 5, scope: !11550)
!11689 = !DILocation(line: 5466, column: 10, scope: !11494)
!11690 = !DILocation(line: 5466, column: 3, scope: !11494)
!11691 = !DILocation(line: 5467, column: 1, scope: !11494)
!11692 = distinct !DISubprogram(name: "check_case_value", scope: !3, file: !3, line: 2728, type: !5693, scopeLine: 2729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11693)
!11693 = !{!11694}
!11694 = !DILocalVariable(name: "value", arg: 1, scope: !11692, file: !3, line: 2728, type: !1527)
!11695 = !DILocation(line: 0, scope: !11692)
!11696 = !DILocation(line: 2730, column: 13, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 2730, column: 7)
!11698 = !DILocation(line: 2730, column: 7, scope: !11692)
!11699 = !DILocation(line: 2735, column: 3, scope: !11692)
!11700 = distinct !{!11700, !11699, !11699}
!11701 = !DILocation(line: 2742, column: 7, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 2742, column: 7)
!11703 = !DILocation(line: 2742, column: 7, scope: !11692)
!11704 = !DILocation(line: 2744, column: 15, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 2743, column: 5)
!11706 = !DILocation(line: 0, scope: !11705)
!11707 = !DILocation(line: 2745, column: 7, scope: !11705)
!11708 = distinct !{!11708, !11707, !11707}
!11709 = !DILocation(line: 2746, column: 15, scope: !11705)
!11710 = !DILocation(line: 0, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 2749, column: 7)
!11712 = !DILocation(line: 2749, column: 7, scope: !11711)
!11713 = !DILocation(line: 2747, column: 5, scope: !11705)
!11714 = !DILocation(line: 2749, column: 25, scope: !11711)
!11715 = !DILocation(line: 2749, column: 7, scope: !11692)
!11716 = !DILocation(line: 2751, column: 13, scope: !11711)
!11717 = !DILocation(line: 2751, column: 5, scope: !11711)
!11718 = !DILocation(line: 2752, column: 21, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 2752, column: 12)
!11720 = !DILocation(line: 2752, column: 18, scope: !11719)
!11721 = !DILocation(line: 2752, column: 12, scope: !11711)
!11722 = !DILocation(line: 2754, column: 7, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11719, file: !3, line: 2753, column: 5)
!11724 = !DILocation(line: 2755, column: 15, scope: !11723)
!11725 = !DILocation(line: 2756, column: 5, scope: !11723)
!11726 = !DILocation(line: 2758, column: 3, scope: !11692)
!11727 = !DILocation(line: 2760, column: 3, scope: !11692)
!11728 = !DILocation(line: 2761, column: 1, scope: !11692)
!11729 = distinct !DISubprogram(name: "check_case_bounds", scope: !3, file: !3, line: 2776, type: !11730, scopeLine: 2778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11732)
!11730 = !DISubroutineType(types: !11731)
!11731 = !{!1519, !1527, !1527, !1886, !1886}
!11732 = !{!11733, !11734, !11735, !11736, !11737, !11738, !11739, !11740}
!11733 = !DILocalVariable(name: "type", arg: 1, scope: !11729, file: !3, line: 2776, type: !1527)
!11734 = !DILocalVariable(name: "orig_type", arg: 2, scope: !11729, file: !3, line: 2776, type: !1527)
!11735 = !DILocalVariable(name: "case_low_p", arg: 3, scope: !11729, file: !3, line: 2777, type: !1886)
!11736 = !DILocalVariable(name: "case_high_p", arg: 4, scope: !11729, file: !3, line: 2777, type: !1886)
!11737 = !DILocalVariable(name: "min_value", scope: !11729, file: !3, line: 2779, type: !1527)
!11738 = !DILocalVariable(name: "max_value", scope: !11729, file: !3, line: 2779, type: !1527)
!11739 = !DILocalVariable(name: "case_low", scope: !11729, file: !3, line: 2780, type: !1527)
!11740 = !DILocalVariable(name: "case_high", scope: !11729, file: !3, line: 2781, type: !1527)
!11741 = !DILocation(line: 0, scope: !11729)
!11742 = !DILocation(line: 2780, column: 19, scope: !11729)
!11743 = !DILocation(line: 2781, column: 20, scope: !11729)
!11744 = !DILocation(line: 2781, column: 34, scope: !11729)
!11745 = !DILocation(line: 2784, column: 20, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2784, column: 7)
!11747 = !DILocation(line: 2784, column: 17, scope: !11746)
!11748 = !DILocation(line: 2784, column: 7, scope: !11729)
!11749 = !DILocation(line: 2787, column: 15, scope: !11729)
!11750 = !DILocation(line: 2788, column: 15, scope: !11729)
!11751 = !DILocation(line: 2791, column: 7, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2791, column: 7)
!11753 = !DILocation(line: 2791, column: 50, scope: !11752)
!11754 = !DILocation(line: 2792, column: 7, scope: !11752)
!11755 = !DILocation(line: 2792, column: 10, scope: !11752)
!11756 = !DILocation(line: 2792, column: 54, scope: !11752)
!11757 = !DILocation(line: 2791, column: 7, scope: !11729)
!11758 = !DILocation(line: 2794, column: 7, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11752, file: !3, line: 2793, column: 5)
!11760 = !DILocation(line: 2795, column: 7, scope: !11759)
!11761 = !DILocation(line: 2799, column: 7, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2799, column: 7)
!11763 = !DILocation(line: 2799, column: 50, scope: !11762)
!11764 = !DILocation(line: 2800, column: 7, scope: !11762)
!11765 = !DILocation(line: 2800, column: 10, scope: !11762)
!11766 = !DILocation(line: 2800, column: 54, scope: !11762)
!11767 = !DILocation(line: 2799, column: 7, scope: !11729)
!11768 = !DILocation(line: 2802, column: 7, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 2801, column: 5)
!11770 = !DILocation(line: 2803, column: 7, scope: !11769)
!11771 = !DILocation(line: 2807, column: 7, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2807, column: 7)
!11773 = !DILocation(line: 2807, column: 51, scope: !11772)
!11774 = !DILocation(line: 2808, column: 7, scope: !11772)
!11775 = !DILocation(line: 2808, column: 10, scope: !11772)
!11776 = !DILocation(line: 2808, column: 53, scope: !11772)
!11777 = !DILocation(line: 2807, column: 7, scope: !11729)
!11778 = !DILocation(line: 2810, column: 7, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11772, file: !3, line: 2809, column: 5)
!11780 = !DILocation(line: 2813, column: 5, scope: !11779)
!11781 = !DILocation(line: 2816, column: 7, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2816, column: 7)
!11783 = !DILocation(line: 2816, column: 50, scope: !11782)
!11784 = !DILocation(line: 2817, column: 7, scope: !11782)
!11785 = !DILocation(line: 2817, column: 10, scope: !11782)
!11786 = !DILocation(line: 2817, column: 54, scope: !11782)
!11787 = !DILocation(line: 2816, column: 7, scope: !11729)
!11788 = !DILocation(line: 2819, column: 7, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 2818, column: 5)
!11790 = !DILocation(line: 2822, column: 5, scope: !11789)
!11791 = !DILocation(line: 2824, column: 7, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2824, column: 7)
!11793 = !DILocation(line: 2824, column: 19, scope: !11792)
!11794 = !DILocation(line: 2824, column: 7, scope: !11729)
!11795 = !DILocation(line: 2825, column: 19, scope: !11792)
!11796 = !DILocation(line: 2825, column: 17, scope: !11792)
!11797 = !DILocation(line: 2825, column: 5, scope: !11792)
!11798 = !DILocation(line: 2826, column: 19, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2826, column: 7)
!11800 = !DILocation(line: 2826, column: 22, scope: !11799)
!11801 = !DILocation(line: 2826, column: 35, scope: !11799)
!11802 = !DILocation(line: 2826, column: 7, scope: !11729)
!11803 = !DILocation(line: 2827, column: 20, scope: !11799)
!11804 = !DILocation(line: 2827, column: 18, scope: !11799)
!11805 = !DILocation(line: 2827, column: 5, scope: !11799)
!11806 = !DILocation(line: 2830, column: 1, scope: !11729)
!11807 = distinct !DISubprogram(name: "c_do_switch_warnings", scope: !3, file: !3, line: 5546, type: !11808, scopeLine: 5548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11810)
!11808 = !DISubroutineType(types: !11809)
!11809 = !{null, !11497, !1651, !1527, !1527}
!11810 = !{!11811, !11812, !11813, !11814, !11815, !11816, !11817, !11818, !11822, !11825, !11828}
!11811 = !DILocalVariable(name: "cases", arg: 1, scope: !11807, file: !3, line: 5546, type: !11497)
!11812 = !DILocalVariable(name: "switch_location", arg: 2, scope: !11807, file: !3, line: 5546, type: !1651)
!11813 = !DILocalVariable(name: "type", arg: 3, scope: !11807, file: !3, line: 5547, type: !1527)
!11814 = !DILocalVariable(name: "cond", arg: 4, scope: !11807, file: !3, line: 5547, type: !1527)
!11815 = !DILocalVariable(name: "default_node", scope: !11807, file: !3, line: 5549, type: !11502)
!11816 = !DILocalVariable(name: "node", scope: !11807, file: !3, line: 5550, type: !11502)
!11817 = !DILocalVariable(name: "chain", scope: !11807, file: !3, line: 5551, type: !1527)
!11818 = !DILocalVariable(name: "value", scope: !11819, file: !3, line: 5586, type: !1527)
!11819 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 5585, column: 5)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 5584, column: 3)
!11821 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5584, column: 3)
!11822 = !DILocalVariable(name: "label", scope: !11823, file: !3, line: 5593, type: !1527)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !3, line: 5591, column: 2)
!11824 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 5590, column: 11)
!11825 = !DILocalVariable(name: "label", scope: !11826, file: !3, line: 5603, type: !1527)
!11826 = distinct !DILexicalBlock(scope: !11827, file: !3, line: 5602, column: 2)
!11827 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 5601, column: 11)
!11828 = !DILocalVariable(name: "cmp", scope: !11826, file: !3, line: 5604, type: !1520)
!11829 = !DILocation(line: 0, scope: !11807)
!11830 = !DILocation(line: 5553, column: 8, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5553, column: 7)
!11832 = !DILocation(line: 5553, column: 24, scope: !11831)
!11833 = !DILocation(line: 5553, column: 20, scope: !11831)
!11834 = !DILocation(line: 5553, column: 45, scope: !11831)
!11835 = !DILocation(line: 5556, column: 18, scope: !11807)
!11836 = !DILocation(line: 5557, column: 8, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5557, column: 7)
!11838 = !DILocation(line: 5557, column: 7, scope: !11807)
!11839 = !DILocation(line: 5558, column: 5, scope: !11837)
!11840 = !DILocation(line: 5562, column: 8, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5562, column: 7)
!11842 = !DILocation(line: 5562, column: 13, scope: !11841)
!11843 = !DILocation(line: 5562, column: 16, scope: !11841)
!11844 = !DILocation(line: 5562, column: 33, scope: !11841)
!11845 = !DILocation(line: 5562, column: 7, scope: !11807)
!11846 = !DILocation(line: 5566, column: 8, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5566, column: 7)
!11848 = !DILocation(line: 5566, column: 29, scope: !11847)
!11849 = !DILocation(line: 5566, column: 25, scope: !11847)
!11850 = !DILocation(line: 5576, column: 7, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5576, column: 7)
!11852 = !DILocation(line: 5576, column: 24, scope: !11851)
!11853 = !DILocation(line: 5584, column: 16, scope: !11821)
!11854 = !DILocation(line: 0, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 5620, column: 11)
!11856 = !DILocation(line: 5584, column: 8, scope: !11821)
!11857 = !DILocation(line: 0, scope: !11821)
!11858 = !DILocation(line: 5584, column: 3, scope: !11821)
!11859 = !DILocation(line: 5586, column: 20, scope: !11819)
!11860 = !DILocation(line: 0, scope: !11819)
!11861 = !DILocation(line: 5587, column: 11, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 5587, column: 11)
!11863 = !DILocation(line: 5587, column: 29, scope: !11862)
!11864 = !DILocation(line: 5587, column: 11, scope: !11819)
!11865 = !DILocation(line: 5588, column: 17, scope: !11862)
!11866 = !DILocation(line: 5588, column: 9, scope: !11862)
!11867 = !DILocation(line: 5589, column: 40, scope: !11819)
!11868 = !DILocation(line: 5589, column: 14, scope: !11819)
!11869 = !DILocation(line: 5590, column: 11, scope: !11824)
!11870 = !DILocation(line: 5590, column: 11, scope: !11819)
!11871 = !DILocation(line: 5593, column: 30, scope: !11823)
!11872 = !DILocation(line: 5594, column: 26, scope: !11823)
!11873 = !DILocation(line: 5600, column: 14, scope: !11819)
!11874 = !DILocation(line: 5601, column: 11, scope: !11827)
!11875 = !DILocation(line: 5601, column: 16, scope: !11827)
!11876 = !DILocation(line: 5601, column: 19, scope: !11827)
!11877 = !DILocation(line: 5601, column: 11, scope: !11819)
!11878 = !DILocation(line: 0, scope: !11826)
!11879 = !DILocation(line: 5604, column: 14, scope: !11826)
!11880 = !DILocation(line: 5605, column: 12, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11826, file: !3, line: 5605, column: 8)
!11882 = !DILocation(line: 5605, column: 8, scope: !11826)
!11883 = !DILocation(line: 5609, column: 16, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !3, line: 5609, column: 12)
!11885 = distinct !DILexicalBlock(scope: !11881, file: !3, line: 5606, column: 6)
!11886 = !DILocation(line: 5609, column: 12, scope: !11885)
!11887 = !DILocation(line: 5610, column: 3, scope: !11884)
!11888 = !DILocation(line: 5610, column: 26, scope: !11884)
!11889 = !DILocation(line: 5628, column: 19, scope: !11819)
!11890 = !DILocation(line: 5628, column: 23, scope: !11819)
!11891 = !DILocation(line: 5628, column: 22, scope: !11819)
!11892 = !DILocation(line: 5628, column: 6, scope: !11819)
!11893 = !DILocation(line: 5632, column: 5, scope: !11819)
!11894 = !DILocation(line: 5627, column: 7, scope: !11819)
!11895 = !DILocation(line: 5633, column: 5, scope: !11820)
!11896 = !DILocation(line: 5584, column: 51, scope: !11820)
!11897 = !DILocation(line: 5584, column: 3, scope: !11820)
!11898 = distinct !{!11898, !11858, !11899}
!11899 = !DILocation(line: 5633, column: 5, scope: !11821)
!11900 = !DILocation(line: 5644, column: 50, scope: !11807)
!11901 = !DILocation(line: 5620, column: 19, scope: !11855)
!11902 = !DILocation(line: 5620, column: 11, scope: !11819)
!11903 = !DILocation(line: 5644, column: 3, scope: !11807)
!11904 = !DILocation(line: 5645, column: 1, scope: !11807)
!11905 = distinct !DISubprogram(name: "match_case_to_enum", scope: !3, file: !3, line: 5508, type: !11906, scopeLine: 5509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11908)
!11906 = !DISubroutineType(types: !11907)
!11907 = !{!1520, !11502, !1524}
!11908 = !{!11909, !11910, !11911, !11912}
!11909 = !DILocalVariable(name: "node", arg: 1, scope: !11905, file: !3, line: 5508, type: !11502)
!11910 = !DILocalVariable(name: "data", arg: 2, scope: !11905, file: !3, line: 5508, type: !1524)
!11911 = !DILocalVariable(name: "label", scope: !11905, file: !3, line: 5510, type: !1527)
!11912 = !DILocalVariable(name: "type", scope: !11905, file: !3, line: 5511, type: !1527)
!11913 = !DILocation(line: 0, scope: !11905)
!11914 = !DILocation(line: 5510, column: 29, scope: !11905)
!11915 = !DILocation(line: 5511, column: 15, scope: !11905)
!11916 = !DILocation(line: 5514, column: 8, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 5514, column: 7)
!11918 = !DILocation(line: 5514, column: 7, scope: !11905)
!11919 = !DILocation(line: 5519, column: 8, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 5519, column: 7)
!11921 = !DILocation(line: 5519, column: 7, scope: !11905)
!11922 = !DILocation(line: 5520, column: 5, scope: !11920)
!11923 = !DILocation(line: 5522, column: 27, scope: !11920)
!11924 = !DILocation(line: 5527, column: 7, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 5527, column: 7)
!11926 = !DILocation(line: 5527, column: 7, scope: !11905)
!11927 = !DILocation(line: 5529, column: 12, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 5529, column: 11)
!11929 = distinct !DILexicalBlock(scope: !11925, file: !3, line: 5528, column: 5)
!11930 = !DILocation(line: 5529, column: 11, scope: !11929)
!11931 = !DILocation(line: 5530, column: 2, scope: !11928)
!11932 = !DILocation(line: 5532, column: 25, scope: !11928)
!11933 = !DILocation(line: 5536, column: 1, scope: !11905)
!11934 = distinct !DISubprogram(name: "finish_label_address_expr", scope: !3, file: !3, line: 5653, type: !11935, scopeLine: 5654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11937)
!11935 = !DISubroutineType(types: !11936)
!11936 = !{!1527, !1527, !1651}
!11937 = !{!11938, !11939, !11940}
!11938 = !DILocalVariable(name: "label", arg: 1, scope: !11934, file: !3, line: 5653, type: !1527)
!11939 = !DILocalVariable(name: "loc", arg: 2, scope: !11934, file: !3, line: 5653, type: !1651)
!11940 = !DILocalVariable(name: "result", scope: !11934, file: !3, line: 5655, type: !1527)
!11941 = !DILocation(line: 0, scope: !11934)
!11942 = !DILocation(line: 5657, column: 12, scope: !11934)
!11943 = !DILocation(line: 5657, column: 3, scope: !11934)
!11944 = !DILocation(line: 5659, column: 16, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 5659, column: 7)
!11946 = !DILocation(line: 5659, column: 13, scope: !11945)
!11947 = !DILocation(line: 5659, column: 7, scope: !11934)
!11948 = !DILocation(line: 5660, column: 5, scope: !11945)
!11949 = !DILocation(line: 5662, column: 11, scope: !11934)
!11950 = !DILocation(line: 5663, column: 13, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 5663, column: 7)
!11952 = !DILocation(line: 5663, column: 7, scope: !11934)
!11953 = !DILocation(line: 5664, column: 14, scope: !11951)
!11954 = !DILocation(line: 5664, column: 5, scope: !11951)
!11955 = !DILocation(line: 5667, column: 7, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 5666, column: 5)
!11957 = !DILocation(line: 5667, column: 25, scope: !11956)
!11958 = !DILocation(line: 5668, column: 16, scope: !11956)
!11959 = !DILocation(line: 5672, column: 7, scope: !11956)
!11960 = !DILocation(line: 5676, column: 1, scope: !11934)
!11961 = distinct !DISubprogram(name: "boolean_increment", scope: !3, file: !3, line: 5683, type: !11962, scopeLine: 5684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11964)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{!1527, !139, !1527}
!11964 = !{!11965, !11966, !11967, !11968}
!11965 = !DILocalVariable(name: "code", arg: 1, scope: !11961, file: !3, line: 5683, type: !139)
!11966 = !DILocalVariable(name: "arg", arg: 2, scope: !11961, file: !3, line: 5683, type: !1527)
!11967 = !DILocalVariable(name: "val", scope: !11961, file: !3, line: 5685, type: !1527)
!11968 = !DILocalVariable(name: "true_res", scope: !11961, file: !3, line: 5686, type: !1527)
!11969 = !DILocation(line: 0, scope: !11961)
!11970 = !DILocation(line: 5686, column: 34, scope: !11961)
!11971 = !DILocation(line: 5686, column: 19, scope: !11961)
!11972 = !DILocation(line: 5688, column: 9, scope: !11961)
!11973 = !DILocation(line: 5689, column: 3, scope: !11961)
!11974 = !DILocation(line: 5692, column: 13, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 5690, column: 5)
!11976 = !DILocation(line: 5693, column: 7, scope: !11975)
!11977 = !DILocation(line: 5695, column: 13, scope: !11975)
!11978 = !DILocation(line: 5696, column: 13, scope: !11975)
!11979 = !DILocation(line: 5697, column: 13, scope: !11975)
!11980 = !DILocation(line: 5698, column: 13, scope: !11975)
!11981 = !DILocation(line: 5699, column: 7, scope: !11975)
!11982 = !DILocation(line: 5701, column: 13, scope: !11975)
!11983 = !DILocation(line: 5703, column: 7, scope: !11975)
!11984 = !DILocation(line: 5705, column: 13, scope: !11975)
!11985 = !DILocation(line: 5707, column: 13, scope: !11975)
!11986 = !DILocation(line: 5708, column: 13, scope: !11975)
!11987 = !DILocation(line: 5709, column: 13, scope: !11975)
!11988 = !DILocation(line: 5710, column: 7, scope: !11975)
!11989 = !DILocation(line: 5712, column: 7, scope: !11975)
!11990 = !DILocation(line: 5713, column: 5, scope: !11975)
!11991 = !DILocation(line: 5714, column: 3, scope: !11961)
!11992 = !DILocation(line: 5714, column: 27, scope: !11961)
!11993 = !DILocation(line: 5715, column: 3, scope: !11961)
!11994 = distinct !DISubprogram(name: "c_stddef_cpp_builtins", scope: !3, file: !3, line: 5721, type: !5478, scopeLine: 5722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3142)
!11995 = !DILocation(line: 5723, column: 3, scope: !11994)
!11996 = !DILocation(line: 5724, column: 3, scope: !11994)
!11997 = !DILocation(line: 5725, column: 48, scope: !11994)
!11998 = !DILocation(line: 5725, column: 3, scope: !11994)
!11999 = !DILocation(line: 5726, column: 3, scope: !11994)
!12000 = !DILocation(line: 5727, column: 3, scope: !11994)
!12001 = !DILocation(line: 5728, column: 3, scope: !11994)
!12002 = !DILocation(line: 5729, column: 3, scope: !11994)
!12003 = !DILocation(line: 5730, column: 3, scope: !11994)
!12004 = !DILocation(line: 5732, column: 5, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5731, column: 7)
!12006 = !DILocation(line: 5734, column: 5, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5733, column: 7)
!12008 = !DILocation(line: 5736, column: 5, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5735, column: 7)
!12010 = !DILocation(line: 5738, column: 5, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5737, column: 7)
!12012 = !DILocation(line: 5740, column: 5, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5739, column: 7)
!12014 = !DILocation(line: 5742, column: 5, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5741, column: 7)
!12016 = !DILocation(line: 5744, column: 5, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5743, column: 7)
!12018 = !DILocation(line: 5746, column: 5, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5745, column: 7)
!12020 = !DILocation(line: 5748, column: 5, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5747, column: 7)
!12022 = !DILocation(line: 5750, column: 5, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5749, column: 7)
!12024 = !DILocation(line: 5752, column: 5, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5751, column: 7)
!12026 = !DILocation(line: 5754, column: 5, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5753, column: 7)
!12028 = !DILocation(line: 5756, column: 5, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5755, column: 7)
!12030 = !DILocation(line: 5758, column: 5, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5757, column: 7)
!12032 = !DILocation(line: 5760, column: 5, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5759, column: 7)
!12034 = !DILocation(line: 5762, column: 5, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5761, column: 7)
!12036 = !DILocation(line: 5764, column: 5, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5763, column: 7)
!12038 = !DILocation(line: 5766, column: 5, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5765, column: 7)
!12040 = !DILocation(line: 5768, column: 5, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5767, column: 7)
!12042 = !DILocation(line: 5770, column: 5, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5769, column: 7)
!12044 = !DILocation(line: 5772, column: 5, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5771, column: 7)
!12046 = !DILocation(line: 5774, column: 5, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5773, column: 7)
!12048 = !DILocation(line: 5776, column: 5, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5775, column: 7)
!12050 = !DILocation(line: 5778, column: 5, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5777, column: 7)
!12052 = !DILocation(line: 5780, column: 5, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5779, column: 7)
!12054 = !DILocation(line: 5782, column: 5, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5781, column: 7)
!12056 = !DILocation(line: 5784, column: 5, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 5783, column: 7)
!12058 = !DILocation(line: 5785, column: 1, scope: !11994)
!12059 = distinct !DISubprogram(name: "c_determine_visibility", scope: !3, file: !3, line: 6961, type: !12060, scopeLine: 6962, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12062)
!12060 = !DISubroutineType(types: !12061)
!12061 = !{!1519, !1527}
!12062 = !{!12063}
!12063 = !DILocalVariable(name: "decl", arg: 1, scope: !12059, file: !3, line: 6961, type: !1527)
!12064 = !DILocation(line: 0, scope: !12059)
!12065 = !DILocation(line: 6963, column: 3, scope: !12059)
!12066 = !DILocation(line: 6973, column: 39, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 6973, column: 7)
!12068 = !DILocation(line: 6973, column: 7, scope: !12067)
!12069 = !DILocation(line: 6973, column: 7, scope: !12059)
!12070 = !DILocation(line: 6981, column: 8, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 6981, column: 7)
!12072 = !DILocation(line: 6981, column: 7, scope: !12059)
!12073 = !DILocation(line: 6983, column: 30, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 6983, column: 11)
!12075 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 6982, column: 5)
!12076 = !DILocation(line: 6983, column: 11, scope: !12074)
!12077 = !DILocation(line: 6984, column: 4, scope: !12074)
!12078 = !DILocation(line: 6986, column: 29, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12074, file: !3, line: 6985, column: 2)
!12080 = !DILocation(line: 6984, column: 7, scope: !12074)
!12081 = !DILocation(line: 6984, column: 33, scope: !12074)
!12082 = !DILocation(line: 6984, column: 30, scope: !12074)
!12083 = !DILocation(line: 6983, column: 11, scope: !12075)
!12084 = !DILocation(line: 6986, column: 27, scope: !12079)
!12085 = !DILocation(line: 6987, column: 37, scope: !12079)
!12086 = !DILocation(line: 6990, column: 10, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12079, file: !3, line: 6990, column: 8)
!12088 = !DILocation(line: 6990, column: 27, scope: !12087)
!12089 = !DILocation(line: 6990, column: 39, scope: !12087)
!12090 = !DILocation(line: 6990, column: 42, scope: !12087)
!12091 = !DILocation(line: 6991, column: 9, scope: !12087)
!12092 = !DILocation(line: 6991, column: 29, scope: !12087)
!12093 = !DILocation(line: 6992, column: 8, scope: !12087)
!12094 = !DILocation(line: 6992, column: 11, scope: !12087)
!12095 = !DILocation(line: 6990, column: 8, scope: !12079)
!12096 = !DILocation(line: 6993, column: 6, scope: !12087)
!12097 = !DILocation(line: 6997, column: 1, scope: !12059)
!12098 = distinct !DISubprogram(name: "parse_optimize_options", scope: !3, file: !3, line: 7735, type: !12099, scopeLine: 7736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12101)
!12099 = !DISubroutineType(types: !12100)
!12100 = !{!1519, !1527, !1519}
!12101 = !{!12102, !12103, !12104, !12105, !12106, !12107, !12108, !12109, !12110, !12114, !12117, !12120, !12121, !12122, !12123, !12124, !12126, !12127}
!12102 = !DILocalVariable(name: "args", arg: 1, scope: !12098, file: !3, line: 7735, type: !1527)
!12103 = !DILocalVariable(name: "attr_p", arg: 2, scope: !12098, file: !3, line: 7735, type: !1519)
!12104 = !DILocalVariable(name: "ret", scope: !12098, file: !3, line: 7737, type: !1519)
!12105 = !DILocalVariable(name: "opt_argc", scope: !12098, file: !3, line: 7738, type: !7)
!12106 = !DILocalVariable(name: "i", scope: !12098, file: !3, line: 7739, type: !7)
!12107 = !DILocalVariable(name: "saved_flag_strict_aliasing", scope: !12098, file: !3, line: 7740, type: !1520)
!12108 = !DILocalVariable(name: "opt_argv", scope: !12098, file: !3, line: 7741, type: !2808)
!12109 = !DILocalVariable(name: "ap", scope: !12098, file: !3, line: 7742, type: !1527)
!12110 = !DILocalVariable(name: "value", scope: !12111, file: !3, line: 7751, type: !1527)
!12111 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 7750, column: 5)
!12112 = distinct !DILexicalBlock(scope: !12113, file: !3, line: 7749, column: 3)
!12113 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 7749, column: 3)
!12114 = !DILocalVariable(name: "buffer", scope: !12115, file: !3, line: 7755, type: !3196)
!12115 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 7754, column: 2)
!12116 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 7753, column: 11)
!12117 = !DILocalVariable(name: "len", scope: !12118, file: !3, line: 7763, type: !1997)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 7761, column: 2)
!12119 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 7760, column: 16)
!12120 = !DILocalVariable(name: "p", scope: !12118, file: !3, line: 7764, type: !1522)
!12121 = !DILocalVariable(name: "end", scope: !12118, file: !3, line: 7765, type: !1522)
!12122 = !DILocalVariable(name: "comma", scope: !12118, file: !3, line: 7766, type: !1522)
!12123 = !DILocalVariable(name: "next_p", scope: !12118, file: !3, line: 7767, type: !1522)
!12124 = !DILocalVariable(name: "len2", scope: !12125, file: !3, line: 7771, type: !1997)
!12125 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 7770, column: 6)
!12126 = !DILocalVariable(name: "q", scope: !12125, file: !3, line: 7772, type: !1522)
!12127 = !DILocalVariable(name: "r", scope: !12125, file: !3, line: 7772, type: !1522)
!12128 = !DILocation(line: 0, scope: !12098)
!12129 = !DILocation(line: 7746, column: 3, scope: !12098)
!12130 = !DILocation(line: 7747, column: 3, scope: !12098)
!12131 = !DILocation(line: 0, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 7795, column: 9)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 7793, column: 3)
!12134 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 7792, column: 12)
!12135 = !DILocation(line: 0, scope: !12115)
!12136 = !DILocation(line: 7749, column: 8, scope: !12113)
!12137 = !DILocation(line: 0, scope: !12113)
!12138 = !DILocation(line: 7737, column: 8, scope: !12098)
!12139 = !DILocation(line: 7749, column: 22, scope: !12112)
!12140 = !DILocation(line: 7749, column: 3, scope: !12113)
!12141 = !DILocation(line: 7751, column: 20, scope: !12111)
!12142 = !DILocation(line: 0, scope: !12111)
!12143 = !DILocation(line: 7753, column: 11, scope: !12116)
!12144 = !DILocation(line: 7753, column: 29, scope: !12116)
!12145 = !DILocation(line: 7753, column: 11, scope: !12111)
!12146 = !DILocation(line: 7755, column: 4, scope: !12115)
!12147 = !DILocation(line: 7755, column: 9, scope: !12115)
!12148 = !DILocation(line: 7756, column: 37, scope: !12115)
!12149 = !DILocation(line: 7756, column: 4, scope: !12115)
!12150 = !DILocation(line: 7757, column: 4, scope: !12115)
!12151 = !DILocation(line: 7758, column: 2, scope: !12116)
!12152 = !DILocation(line: 7758, column: 2, scope: !12115)
!12153 = !DILocation(line: 7760, column: 34, scope: !12119)
!12154 = !DILocation(line: 7760, column: 16, scope: !12116)
!12155 = !DILocation(line: 7763, column: 17, scope: !12118)
!12156 = !DILocation(line: 0, scope: !12118)
!12157 = !DILocation(line: 7764, column: 14, scope: !12118)
!12158 = !DILocation(line: 7765, column: 18, scope: !12118)
!12159 = !DILocation(line: 0, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 7783, column: 3)
!12161 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 7776, column: 12)
!12162 = !DILocation(line: 7769, column: 4, scope: !12118)
!12163 = !DILocation(line: 7769, column: 18, scope: !12118)
!12164 = !DILocation(line: 7775, column: 16, scope: !12125)
!12165 = !DILocation(line: 7776, column: 12, scope: !12161)
!12166 = !DILocation(line: 7776, column: 12, scope: !12125)
!12167 = !DILocation(line: 7778, column: 18, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 7777, column: 3)
!12169 = !DILocation(line: 0, scope: !12125)
!12170 = !DILocation(line: 7779, column: 12, scope: !12168)
!12171 = !DILocation(line: 7780, column: 19, scope: !12168)
!12172 = !DILocation(line: 7781, column: 3, scope: !12168)
!12173 = !DILocation(line: 7784, column: 16, scope: !12160)
!12174 = !DILocation(line: 0, scope: !12161)
!12175 = !DILocation(line: 7788, column: 25, scope: !12125)
!12176 = !DILocation(line: 7792, column: 12, scope: !12134)
!12177 = !DILocation(line: 7792, column: 15, scope: !12134)
!12178 = !DILocation(line: 7792, column: 22, scope: !12134)
!12179 = !DILocation(line: 7792, column: 25, scope: !12134)
!12180 = !DILocation(line: 7792, column: 30, scope: !12134)
!12181 = !DILocation(line: 7792, column: 37, scope: !12134)
!12182 = !DILocation(line: 7792, column: 45, scope: !12134)
!12183 = !DILocation(line: 7792, column: 12, scope: !12125)
!12184 = !DILocation(line: 7799, column: 7, scope: !12132)
!12185 = distinct !{!12185, !12162, !12186}
!12186 = !DILocation(line: 7820, column: 6, scope: !12118)
!12187 = !DILocation(line: 7804, column: 12, scope: !12125)
!12188 = !DILocation(line: 7806, column: 7, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !3, line: 7805, column: 3)
!12190 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 7804, column: 12)
!12191 = !DILocation(line: 7806, column: 10, scope: !12189)
!12192 = !DILocation(line: 7810, column: 10, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 7810, column: 9)
!12194 = !DILocation(line: 7810, column: 13, scope: !12193)
!12195 = !DILocation(line: 7810, column: 20, scope: !12193)
!12196 = !DILocation(line: 7810, column: 26, scope: !12193)
!12197 = !DILocation(line: 7811, column: 9, scope: !12193)
!12198 = !DILocation(line: 7811, column: 18, scope: !12193)
!12199 = !DILocation(line: 7811, column: 25, scope: !12193)
!12200 = !DILocation(line: 7811, column: 28, scope: !12193)
!12201 = !DILocation(line: 7811, column: 33, scope: !12193)
!12202 = !DILocation(line: 7810, column: 9, scope: !12189)
!12203 = !DILocation(line: 7813, column: 17, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12193, file: !3, line: 7813, column: 14)
!12205 = !DILocation(line: 7813, column: 14, scope: !12193)
!12206 = !DILocation(line: 7814, column: 9, scope: !12204)
!12207 = !DILocation(line: 7814, column: 12, scope: !12204)
!12208 = !DILocation(line: 7814, column: 7, scope: !12204)
!12209 = !DILocation(line: 7812, column: 9, scope: !12193)
!12210 = !DILocation(line: 7812, column: 12, scope: !12193)
!12211 = !DILocation(line: 7812, column: 7, scope: !12193)
!12212 = !DILocation(line: 7817, column: 8, scope: !12125)
!12213 = !DILocation(line: 7818, column: 8, scope: !12125)
!12214 = !DILocation(line: 7818, column: 16, scope: !12125)
!12215 = !DILocation(line: 7819, column: 8, scope: !12125)
!12216 = !DILocation(line: 7749, column: 41, scope: !12112)
!12217 = !DILocation(line: 7796, column: 7, scope: !12132)
!12218 = !DILocation(line: 7749, column: 3, scope: !12112)
!12219 = distinct !{!12219, !12140, !12220}
!12220 = !DILocation(line: 7823, column: 5, scope: !12113)
!12221 = !DILocation(line: 7825, column: 14, scope: !12098)
!12222 = !DILocation(line: 7826, column: 30, scope: !12098)
!12223 = !DILocation(line: 7828, column: 8, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 7828, column: 3)
!12225 = !DILocation(line: 0, scope: !12224)
!12226 = !DILocation(line: 7828, column: 17, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12224, file: !3, line: 7828, column: 3)
!12228 = !DILocation(line: 7828, column: 3, scope: !12224)
!12229 = !DILocation(line: 7829, column: 19, scope: !12227)
!12230 = !DILocation(line: 7829, column: 5, scope: !12227)
!12231 = !DILocation(line: 7829, column: 17, scope: !12227)
!12232 = !DILocation(line: 7828, column: 30, scope: !12227)
!12233 = !DILocation(line: 7828, column: 3, scope: !12227)
!12234 = distinct !{!12234, !12228, !12235}
!12235 = !DILocation(line: 7829, column: 19, scope: !12224)
!12236 = !DILocation(line: 7831, column: 32, scope: !12098)
!12237 = !DILocation(line: 7834, column: 3, scope: !12098)
!12238 = !DILocation(line: 7836, column: 11, scope: !12098)
!12239 = !DILocation(line: 7836, column: 3, scope: !12098)
!12240 = !DILocation(line: 7839, column: 24, scope: !12098)
!12241 = !DILocation(line: 7841, column: 3, scope: !12098)
!12242 = !DILocation(line: 7842, column: 3, scope: !12098)
!12243 = distinct !DISubprogram(name: "VEC_const_char_p_base_truncate", scope: !3, file: !3, line: 7725, type: !12244, scopeLine: 7725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12247)
!12244 = !DISubroutineType(types: !12245)
!12245 = !{null, !12246, !7}
!12246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!12247 = !{!12248, !12249}
!12248 = !DILocalVariable(name: "vec_", arg: 1, scope: !12243, file: !3, line: 7725, type: !12246)
!12249 = !DILocalVariable(name: "size_", arg: 2, scope: !12243, file: !3, line: 7725, type: !7)
!12250 = !DILocation(line: 0, scope: !12243)
!12251 = !DILocation(line: 7725, column: 1, scope: !12243)
!12252 = !DILocation(line: 7725, column: 1, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 7725, column: 1)
!12254 = distinct !DISubprogram(name: "VEC_const_char_p_gc_safe_push", scope: !3, file: !3, line: 7726, type: !12255, scopeLine: 7726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12259)
!12255 = !DISubroutineType(types: !12256)
!12256 = !{!12257, !12258, !2841}
!12257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!12258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!12259 = !{!12260, !12261}
!12260 = !DILocalVariable(name: "vec_", arg: 1, scope: !12254, file: !3, line: 7726, type: !12258)
!12261 = !DILocalVariable(name: "obj_", arg: 2, scope: !12254, file: !3, line: 7726, type: !2841)
!12262 = !DILocation(line: 0, scope: !12254)
!12263 = !DILocation(line: 7726, column: 1, scope: !12254)
!12264 = distinct !DISubprogram(name: "VEC_const_char_p_base_length", scope: !3, file: !3, line: 7725, type: !12265, scopeLine: 7725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12269)
!12265 = !DISubroutineType(types: !12266)
!12266 = !{!7, !12267}
!12267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12268, size: 64)
!12268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2834)
!12269 = !{!12270}
!12270 = !DILocalVariable(name: "vec_", arg: 1, scope: !12264, file: !3, line: 7725, type: !12267)
!12271 = !DILocation(line: 0, scope: !12264)
!12272 = !DILocation(line: 7725, column: 1, scope: !12264)
!12273 = distinct !DISubprogram(name: "VEC_const_char_p_base_index", scope: !3, file: !3, line: 7725, type: !12274, scopeLine: 7725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12276)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!2841, !12267, !7}
!12276 = !{!12277, !12278}
!12277 = !DILocalVariable(name: "vec_", arg: 1, scope: !12273, file: !3, line: 7725, type: !12267)
!12278 = !DILocalVariable(name: "ix_", arg: 2, scope: !12273, file: !3, line: 7725, type: !7)
!12279 = !DILocation(line: 0, scope: !12273)
!12280 = !DILocation(line: 7725, column: 1, scope: !12273)
!12281 = distinct !DISubprogram(name: "check_function_arguments", scope: !3, file: !3, line: 7888, type: !12282, scopeLine: 7889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12284)
!12282 = !DISubroutineType(types: !12283)
!12283 = !{null, !1527, !1520, !1886, !1527}
!12284 = !{!12285, !12286, !12287, !12288}
!12285 = !DILocalVariable(name: "attrs", arg: 1, scope: !12281, file: !3, line: 7888, type: !1527)
!12286 = !DILocalVariable(name: "nargs", arg: 2, scope: !12281, file: !3, line: 7888, type: !1520)
!12287 = !DILocalVariable(name: "argarray", arg: 3, scope: !12281, file: !3, line: 7888, type: !1886)
!12288 = !DILocalVariable(name: "typelist", arg: 4, scope: !12281, file: !3, line: 7888, type: !1527)
!12289 = !DILocation(line: 0, scope: !12281)
!12290 = !DILocation(line: 7893, column: 7, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12281, file: !3, line: 7893, column: 7)
!12292 = !DILocation(line: 7893, column: 7, scope: !12281)
!12293 = !DILocation(line: 7894, column: 5, scope: !12291)
!12294 = !DILocation(line: 7898, column: 7, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12281, file: !3, line: 7898, column: 7)
!12296 = !DILocation(line: 7898, column: 22, scope: !12295)
!12297 = !DILocation(line: 7898, column: 19, scope: !12295)
!12298 = !DILocation(line: 7899, column: 5, scope: !12295)
!12299 = !DILocation(line: 7901, column: 7, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12281, file: !3, line: 7901, column: 7)
!12301 = !DILocation(line: 7901, column: 7, scope: !12281)
!12302 = !DILocation(line: 7902, column: 5, scope: !12300)
!12303 = !DILocation(line: 7903, column: 1, scope: !12281)
!12304 = distinct !DISubprogram(name: "check_function_nonnull", scope: !3, file: !3, line: 7417, type: !12305, scopeLine: 7418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12307)
!12305 = !DISubroutineType(types: !12306)
!12306 = !{null, !1527, !1520, !1886}
!12307 = !{!12308, !12309, !12310, !12311, !12312, !12313}
!12308 = !DILocalVariable(name: "attrs", arg: 1, scope: !12304, file: !3, line: 7417, type: !1527)
!12309 = !DILocalVariable(name: "nargs", arg: 2, scope: !12304, file: !3, line: 7417, type: !1520)
!12310 = !DILocalVariable(name: "argarray", arg: 3, scope: !12304, file: !3, line: 7417, type: !1886)
!12311 = !DILocalVariable(name: "a", scope: !12304, file: !3, line: 7419, type: !1527)
!12312 = !DILocalVariable(name: "args", scope: !12304, file: !3, line: 7419, type: !1527)
!12313 = !DILocalVariable(name: "i", scope: !12304, file: !3, line: 7420, type: !1520)
!12314 = !DILocation(line: 0, scope: !12304)
!12315 = !DILocation(line: 7422, column: 8, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 7422, column: 3)
!12317 = !DILocation(line: 0, scope: !12316)
!12318 = !DILocation(line: 7422, column: 3, scope: !12316)
!12319 = !DILocation(line: 7424, column: 38, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 7424, column: 11)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 7423, column: 5)
!12322 = distinct !DILexicalBlock(scope: !12316, file: !3, line: 7422, column: 3)
!12323 = !DILocation(line: 7424, column: 11, scope: !12320)
!12324 = !DILocation(line: 7424, column: 11, scope: !12321)
!12325 = !DILocation(line: 7426, column: 11, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12320, file: !3, line: 7425, column: 2)
!12327 = !DILocation(line: 0, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 7434, column: 12)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !3, line: 7433, column: 6)
!12330 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 7432, column: 4)
!12331 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 7432, column: 4)
!12332 = !DILocation(line: 7432, column: 9, scope: !12331)
!12333 = !DILocation(line: 0, scope: !12331)
!12334 = !DILocation(line: 7432, column: 18, scope: !12330)
!12335 = !DILocation(line: 7432, column: 4, scope: !12331)
!12336 = !DILocation(line: 7436, column: 9, scope: !12328)
!12337 = !DILocation(line: 7437, column: 11, scope: !12328)
!12338 = !DILocation(line: 7435, column: 3, scope: !12328)
!12339 = !DILocation(line: 7432, column: 4, scope: !12330)
!12340 = distinct !{!12340, !12335, !12341}
!12341 = !DILocation(line: 7438, column: 6, scope: !12331)
!12342 = !DILocation(line: 7422, column: 26, scope: !12322)
!12343 = !DILocation(line: 7434, column: 46, scope: !12328)
!12344 = !DILocation(line: 7434, column: 21, scope: !12328)
!12345 = !DILocation(line: 7434, column: 12, scope: !12329)
!12346 = !DILocation(line: 7422, column: 3, scope: !12322)
!12347 = distinct !{!12347, !12318, !12348}
!12348 = !DILocation(line: 7440, column: 5, scope: !12316)
!12349 = !DILocation(line: 7441, column: 1, scope: !12304)
!12350 = distinct !DISubprogram(name: "check_function_sentinel", scope: !3, file: !3, line: 7448, type: !12282, scopeLine: 7449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12351)
!12351 = !{!12352, !12353, !12354, !12355, !12356, !12357, !12360, !12361, !12362}
!12352 = !DILocalVariable(name: "attrs", arg: 1, scope: !12350, file: !3, line: 7448, type: !1527)
!12353 = !DILocalVariable(name: "nargs", arg: 2, scope: !12350, file: !3, line: 7448, type: !1520)
!12354 = !DILocalVariable(name: "argarray", arg: 3, scope: !12350, file: !3, line: 7448, type: !1886)
!12355 = !DILocalVariable(name: "typelist", arg: 4, scope: !12350, file: !3, line: 7448, type: !1527)
!12356 = !DILocalVariable(name: "attr", scope: !12350, file: !3, line: 7450, type: !1527)
!12357 = !DILocalVariable(name: "len", scope: !12358, file: !3, line: 7454, type: !1520)
!12358 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 7453, column: 5)
!12359 = distinct !DILexicalBlock(scope: !12350, file: !3, line: 7452, column: 7)
!12360 = !DILocalVariable(name: "pos", scope: !12358, file: !3, line: 7455, type: !1520)
!12361 = !DILocalVariable(name: "sentinel", scope: !12358, file: !3, line: 7456, type: !1527)
!12362 = !DILocalVariable(name: "p", scope: !12363, file: !3, line: 7467, type: !1527)
!12363 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 7466, column: 2)
!12364 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 7465, column: 11)
!12365 = !DILocation(line: 0, scope: !12350)
!12366 = !DILocation(line: 7450, column: 15, scope: !12350)
!12367 = !DILocation(line: 7452, column: 7, scope: !12359)
!12368 = !DILocation(line: 7452, column: 7, scope: !12350)
!12369 = !DILocation(line: 7459, column: 7, scope: !12358)
!12370 = !DILocation(line: 0, scope: !12358)
!12371 = !DILocation(line: 7459, column: 14, scope: !12358)
!12372 = !DILocation(line: 7459, column: 30, scope: !12358)
!12373 = !DILocation(line: 7459, column: 23, scope: !12358)
!12374 = !DILocation(line: 7461, column: 15, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 7460, column: 2)
!12376 = !DILocation(line: 7462, column: 7, scope: !12375)
!12377 = distinct !{!12377, !12369, !12378}
!12378 = !DILocation(line: 7463, column: 2, scope: !12358)
!12379 = !DILocation(line: 7465, column: 11, scope: !12364)
!12380 = !DILocation(line: 7465, column: 11, scope: !12358)
!12381 = !DILocation(line: 7467, column: 13, scope: !12363)
!12382 = !DILocation(line: 7468, column: 10, scope: !12363)
!12383 = !DILocation(line: 7469, column: 2, scope: !12363)
!12384 = !DILocation(line: 7473, column: 22, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 7473, column: 11)
!12386 = !DILocation(line: 7473, column: 29, scope: !12385)
!12387 = !DILocation(line: 7473, column: 11, scope: !12358)
!12388 = !DILocation(line: 7475, column: 4, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 7474, column: 2)
!12390 = !DILocation(line: 7477, column: 4, scope: !12389)
!12391 = !DILocation(line: 7481, column: 18, scope: !12358)
!12392 = !DILocation(line: 7482, column: 13, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 7482, column: 11)
!12394 = !DILocation(line: 7483, column: 5, scope: !12393)
!12395 = !DILocation(line: 7483, column: 9, scope: !12393)
!12396 = !DILocation(line: 7489, column: 4, scope: !12393)
!12397 = !DILocation(line: 7489, column: 8, scope: !12393)
!12398 = !DILocation(line: 7489, column: 37, scope: !12393)
!12399 = !DILocation(line: 7489, column: 47, scope: !12393)
!12400 = !DILocation(line: 7489, column: 34, scope: !12393)
!12401 = !DILocation(line: 7490, column: 2, scope: !12393)
!12402 = !DILocation(line: 7492, column: 1, scope: !12350)
!12403 = distinct !DISubprogram(name: "check_function_arguments_recurse", scope: !3, file: !3, line: 7909, type: !12404, scopeLine: 7913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12409)
!12404 = !DISubroutineType(types: !12405)
!12405 = !{null, !12406, !1524, !1527, !1580}
!12406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12407, size: 64)
!12407 = !DISubroutineType(types: !12408)
!12408 = !{null, !1524, !1527, !1580}
!12409 = !{!12410, !12411, !12412, !12413, !12414, !12417, !12418, !12419, !12424, !12425, !12426, !12427}
!12410 = !DILocalVariable(name: "callback", arg: 1, scope: !12403, file: !3, line: 7909, type: !12406)
!12411 = !DILocalVariable(name: "ctx", arg: 2, scope: !12403, file: !3, line: 7911, type: !1524)
!12412 = !DILocalVariable(name: "param", arg: 3, scope: !12403, file: !3, line: 7911, type: !1527)
!12413 = !DILocalVariable(name: "param_num", arg: 4, scope: !12403, file: !3, line: 7912, type: !1580)
!12414 = !DILocalVariable(name: "type", scope: !12415, file: !3, line: 7926, type: !1527)
!12415 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 7925, column: 5)
!12416 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 7924, column: 7)
!12417 = !DILocalVariable(name: "attrs", scope: !12415, file: !3, line: 7927, type: !1527)
!12418 = !DILocalVariable(name: "found_format_arg", scope: !12415, file: !3, line: 7928, type: !1519)
!12419 = !DILocalVariable(name: "inner_arg", scope: !12420, file: !3, line: 7939, type: !1527)
!12420 = distinct !DILexicalBlock(scope: !12421, file: !3, line: 7938, column: 4)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 7937, column: 6)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !3, line: 7934, column: 7)
!12423 = distinct !DILexicalBlock(scope: !12415, file: !3, line: 7934, column: 7)
!12424 = !DILocalVariable(name: "format_num_expr", scope: !12420, file: !3, line: 7940, type: !1527)
!12425 = !DILocalVariable(name: "format_num", scope: !12420, file: !3, line: 7941, type: !1520)
!12426 = !DILocalVariable(name: "i", scope: !12420, file: !3, line: 7942, type: !1520)
!12427 = !DILocalVariable(name: "iter", scope: !12420, file: !3, line: 7943, type: !7439)
!12428 = !DILocation(line: 0, scope: !12403)
!12429 = !DILocation(line: 7914, column: 7, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 7914, column: 7)
!12431 = !DILocation(line: 7915, column: 7, scope: !12430)
!12432 = !DILocation(line: 7915, column: 11, scope: !12430)
!12433 = !DILocation(line: 7916, column: 7, scope: !12430)
!12434 = !DILocation(line: 7916, column: 4, scope: !12430)
!12435 = !DILocation(line: 7914, column: 7, scope: !12403)
!12436 = !DILocation(line: 7919, column: 7, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12430, file: !3, line: 7917, column: 5)
!12438 = !DILocation(line: 7921, column: 7, scope: !12437)
!12439 = !DILocation(line: 7924, column: 25, scope: !12416)
!12440 = !DILocation(line: 7924, column: 7, scope: !12403)
!12441 = !DILocation(line: 7926, column: 19, scope: !12415)
!12442 = !DILocation(line: 0, scope: !12415)
!12443 = !DILocation(line: 7934, column: 20, scope: !12423)
!12444 = !DILocation(line: 0, scope: !12420)
!12445 = !DILocation(line: 7934, column: 12, scope: !12423)
!12446 = !DILocation(line: 0, scope: !12423)
!12447 = !DILocation(line: 7934, column: 7, scope: !12423)
!12448 = !DILocation(line: 7937, column: 36, scope: !12421)
!12449 = !DILocation(line: 7937, column: 6, scope: !12421)
!12450 = !DILocation(line: 7937, column: 6, scope: !12422)
!12451 = !DILocation(line: 7943, column: 6, scope: !12420)
!12452 = !DILocation(line: 7947, column: 24, scope: !12420)
!12453 = !DILocation(line: 7949, column: 6, scope: !12420)
!12454 = !DILocation(line: 7952, column: 19, scope: !12420)
!12455 = !DILocation(line: 7954, column: 23, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12420, file: !3, line: 7954, column: 6)
!12457 = !DILocation(line: 7954, column: 11, scope: !12456)
!12458 = !DILocation(line: 0, scope: !12456)
!12459 = !DILocation(line: 7955, column: 14, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12456, file: !3, line: 7954, column: 6)
!12461 = !DILocation(line: 7954, column: 6, scope: !12456)
!12462 = !DILocation(line: 7957, column: 14, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 7957, column: 12)
!12464 = !DILocation(line: 7957, column: 12, scope: !12460)
!12465 = !DILocation(line: 7959, column: 5, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12463, file: !3, line: 7958, column: 3)
!12467 = !DILocation(line: 7962, column: 5, scope: !12466)
!12468 = !DILocation(line: 7956, column: 16, scope: !12460)
!12469 = !DILocation(line: 7956, column: 45, scope: !12460)
!12470 = !DILocation(line: 7954, column: 6, scope: !12460)
!12471 = distinct !{!12471, !12461, !12472}
!12472 = !DILocation(line: 7963, column: 3, scope: !12456)
!12473 = !DILocation(line: 7964, column: 4, scope: !12421)
!12474 = !DILocation(line: 7964, column: 4, scope: !12420)
!12475 = !DILocation(line: 7936, column: 13, scope: !12422)
!12476 = !DILocation(line: 7934, column: 7, scope: !12422)
!12477 = distinct !{!12477, !12447, !12478}
!12478 = !DILocation(line: 7964, column: 4, scope: !12423)
!12479 = !DILocation(line: 7969, column: 11, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12415, file: !3, line: 7969, column: 11)
!12481 = !DILocation(line: 7973, column: 7, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 7973, column: 7)
!12483 = !DILocation(line: 7973, column: 25, scope: !12482)
!12484 = !DILocation(line: 7973, column: 7, scope: !12403)
!12485 = !DILocation(line: 7977, column: 6, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 7974, column: 5)
!12487 = !DILocation(line: 7976, column: 7, scope: !12486)
!12488 = !DILocation(line: 7979, column: 6, scope: !12486)
!12489 = !DILocation(line: 7978, column: 7, scope: !12486)
!12490 = !DILocation(line: 7980, column: 7, scope: !12486)
!12491 = !DILocation(line: 7983, column: 3, scope: !12403)
!12492 = !DILocation(line: 7984, column: 1, scope: !12403)
!12493 = distinct !DISubprogram(name: "first_call_expr_arg", scope: !140, file: !140, line: 5419, type: !12494, scopeLine: 5420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12497)
!12494 = !DISubroutineType(types: !12495)
!12495 = !{!1527, !1527, !12496}
!12496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7439, size: 64)
!12497 = !{!12498, !12499}
!12498 = !DILocalVariable(name: "exp", arg: 1, scope: !12493, file: !140, line: 5419, type: !1527)
!12499 = !DILocalVariable(name: "iter", arg: 2, scope: !12493, file: !140, line: 5419, type: !12496)
!12500 = !DILocation(line: 0, scope: !12493)
!12501 = !DILocation(line: 5421, column: 3, scope: !12493)
!12502 = !DILocation(line: 5422, column: 10, scope: !12493)
!12503 = !DILocation(line: 5422, column: 3, scope: !12493)
!12504 = distinct !DISubprogram(name: "next_call_expr_arg", scope: !140, file: !140, line: 5393, type: !12505, scopeLine: 5394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12507)
!12505 = !DISubroutineType(types: !12506)
!12506 = !{!1527, !12496}
!12507 = !{!12508, !12509}
!12508 = !DILocalVariable(name: "iter", arg: 1, scope: !12504, file: !140, line: 5393, type: !12496)
!12509 = !DILocalVariable(name: "result", scope: !12504, file: !140, line: 5395, type: !1527)
!12510 = !DILocation(line: 0, scope: !12504)
!12511 = !DILocation(line: 5396, column: 13, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12504, file: !140, line: 5396, column: 7)
!12513 = !DILocation(line: 5396, column: 24, scope: !12512)
!12514 = !DILocation(line: 5396, column: 15, scope: !12512)
!12515 = !DILocation(line: 5396, column: 7, scope: !12504)
!12516 = !DILocation(line: 5398, column: 12, scope: !12504)
!12517 = !DILocation(line: 5399, column: 10, scope: !12504)
!12518 = !DILocation(line: 5400, column: 3, scope: !12504)
!12519 = !DILocation(line: 5401, column: 1, scope: !12504)
!12520 = distinct !DISubprogram(name: "check_builtin_function_arguments", scope: !3, file: !3, line: 8013, type: !12521, scopeLine: 8014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12523)
!12521 = !DISubroutineType(types: !12522)
!12522 = !{!1519, !1527, !1520, !1886}
!12523 = !{!12524, !12525, !12526, !12527, !12531, !12532}
!12524 = !DILocalVariable(name: "fndecl", arg: 1, scope: !12520, file: !3, line: 8013, type: !1527)
!12525 = !DILocalVariable(name: "nargs", arg: 2, scope: !12520, file: !3, line: 8013, type: !1520)
!12526 = !DILocalVariable(name: "args", arg: 3, scope: !12520, file: !3, line: 8013, type: !1886)
!12527 = !DILocalVariable(name: "code0", scope: !12528, file: !3, line: 8049, type: !139)
!12528 = distinct !DILexicalBlock(scope: !12529, file: !3, line: 8048, column: 2)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 8047, column: 11)
!12530 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 8020, column: 5)
!12531 = !DILocalVariable(name: "code1", scope: !12528, file: !3, line: 8049, type: !139)
!12532 = !DILocalVariable(name: "i", scope: !12533, file: !3, line: 8067, type: !7)
!12533 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 8066, column: 2)
!12534 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 8065, column: 11)
!12535 = !DILocation(line: 0, scope: !12520)
!12536 = !DILocation(line: 8015, column: 8, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 8015, column: 7)
!12538 = !DILocation(line: 8016, column: 7, scope: !12537)
!12539 = !DILocation(line: 8016, column: 39, scope: !12537)
!12540 = !DILocation(line: 8015, column: 7, scope: !12520)
!12541 = !DILocation(line: 8019, column: 11, scope: !12520)
!12542 = !DILocation(line: 8019, column: 3, scope: !12520)
!12543 = !DILocation(line: 8022, column: 14, scope: !12530)
!12544 = !DILocation(line: 8022, column: 7, scope: !12530)
!12545 = !DILocation(line: 8029, column: 11, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 8029, column: 11)
!12547 = !DILocation(line: 8029, column: 11, scope: !12530)
!12548 = !DILocation(line: 8031, column: 8, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12550, file: !3, line: 8031, column: 8)
!12550 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 8030, column: 2)
!12551 = !DILocation(line: 8031, column: 40, scope: !12549)
!12552 = !DILocation(line: 8031, column: 8, scope: !12550)
!12553 = !DILocation(line: 8033, column: 8, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12549, file: !3, line: 8032, column: 6)
!12555 = !DILocation(line: 8035, column: 8, scope: !12554)
!12556 = !DILocation(line: 8047, column: 11, scope: !12529)
!12557 = !DILocation(line: 8047, column: 11, scope: !12530)
!12558 = !DILocation(line: 8050, column: 12, scope: !12528)
!12559 = !DILocation(line: 0, scope: !12528)
!12560 = !DILocation(line: 8051, column: 12, scope: !12528)
!12561 = !DILocation(line: 8052, column: 17, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 8052, column: 8)
!12563 = !DILocation(line: 8052, column: 39, scope: !12562)
!12564 = !DILocation(line: 8052, column: 30, scope: !12562)
!12565 = !DILocation(line: 8053, column: 35, scope: !12562)
!12566 = !DILocation(line: 8053, column: 26, scope: !12562)
!12567 = !DILocation(line: 8054, column: 13, scope: !12562)
!12568 = !DILocation(line: 8054, column: 29, scope: !12562)
!12569 = !DILocation(line: 8056, column: 8, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 8055, column: 6)
!12571 = !DILocation(line: 8058, column: 8, scope: !12570)
!12572 = !DILocation(line: 8065, column: 11, scope: !12534)
!12573 = !DILocation(line: 8065, column: 11, scope: !12530)
!12574 = !DILocation(line: 8069, column: 4, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 8069, column: 4)
!12576 = !DILocation(line: 0, scope: !12575)
!12577 = !DILocation(line: 0, scope: !12533)
!12578 = !DILocation(line: 8069, column: 15, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 8069, column: 4)
!12580 = !DILocation(line: 8070, column: 10, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12579, file: !3, line: 8070, column: 10)
!12582 = !DILocation(line: 8070, column: 30, scope: !12581)
!12583 = !DILocation(line: 0, scope: !12579)
!12584 = !DILocation(line: 8070, column: 10, scope: !12579)
!12585 = distinct !{!12585, !12574, !12586}
!12586 = !DILocation(line: 8075, column: 8, scope: !12575)
!12587 = !DILocation(line: 8072, column: 3, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12581, file: !3, line: 8071, column: 8)
!12589 = !DILocation(line: 8074, column: 3, scope: !12588)
!12590 = !DILocation(line: 8077, column: 8, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 8077, column: 8)
!12592 = !DILocation(line: 8077, column: 40, scope: !12591)
!12593 = !DILocation(line: 8077, column: 8, scope: !12533)
!12594 = !DILocation(line: 8079, column: 8, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 8078, column: 6)
!12596 = !DILocation(line: 8081, column: 8, scope: !12595)
!12597 = !DILocation(line: 8090, column: 1, scope: !12520)
!12598 = distinct !DISubprogram(name: "builtin_function_validate_nargs", scope: !3, file: !3, line: 7992, type: !12599, scopeLine: 7993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12601)
!12599 = !DISubroutineType(types: !12600)
!12600 = !{!1519, !1527, !1520, !1520}
!12601 = !{!12602, !12603, !12604}
!12602 = !DILocalVariable(name: "fndecl", arg: 1, scope: !12598, file: !3, line: 7992, type: !1527)
!12603 = !DILocalVariable(name: "nargs", arg: 2, scope: !12598, file: !3, line: 7992, type: !1520)
!12604 = !DILocalVariable(name: "required", arg: 3, scope: !12598, file: !3, line: 7992, type: !1520)
!12605 = !DILocation(line: 0, scope: !12598)
!12606 = !DILocation(line: 7994, column: 13, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 7994, column: 7)
!12608 = !DILocation(line: 7994, column: 7, scope: !12598)
!12609 = !DILocation(line: 7996, column: 17, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 7995, column: 5)
!12611 = !DILocation(line: 7996, column: 7, scope: !12610)
!12612 = !DILocation(line: 7998, column: 7, scope: !12610)
!12613 = !DILocation(line: 8000, column: 18, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 8000, column: 12)
!12615 = !DILocation(line: 8000, column: 12, scope: !12607)
!12616 = !DILocation(line: 8002, column: 17, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 8001, column: 5)
!12618 = !DILocation(line: 8002, column: 7, scope: !12617)
!12619 = !DILocation(line: 8004, column: 7, scope: !12617)
!12620 = !DILocation(line: 8007, column: 1, scope: !12598)
!12621 = distinct !DISubprogram(name: "field_decl_cmp", scope: !3, file: !3, line: 8095, type: !2324, scopeLine: 8096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12622)
!12622 = !{!12623, !12624, !12625, !12627}
!12623 = !DILocalVariable(name: "x_p", arg: 1, scope: !12621, file: !3, line: 8095, type: !2158)
!12624 = !DILocalVariable(name: "y_p", arg: 2, scope: !12621, file: !3, line: 8095, type: !2158)
!12625 = !DILocalVariable(name: "x", scope: !12621, file: !3, line: 8097, type: !12626)
!12626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2809)
!12627 = !DILocalVariable(name: "y", scope: !12621, file: !3, line: 8098, type: !12626)
!12628 = !DILocation(line: 0, scope: !12621)
!12629 = !DILocation(line: 8100, column: 7, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 8100, column: 7)
!12631 = !DILocation(line: 8100, column: 25, scope: !12630)
!12632 = !DILocation(line: 8100, column: 22, scope: !12630)
!12633 = !DILocation(line: 8100, column: 7, scope: !12621)
!12634 = !DILocation(line: 8102, column: 13, scope: !12630)
!12635 = !DILocation(line: 8102, column: 28, scope: !12630)
!12636 = !DILocation(line: 8102, column: 45, scope: !12630)
!12637 = !DILocation(line: 8102, column: 60, scope: !12630)
!12638 = !DILocation(line: 8102, column: 42, scope: !12630)
!12639 = !DILocation(line: 8102, column: 5, scope: !12630)
!12640 = !DILocation(line: 8103, column: 22, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 8103, column: 7)
!12642 = !DILocation(line: 8103, column: 7, scope: !12621)
!12643 = !DILocation(line: 8105, column: 22, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 8105, column: 7)
!12645 = !DILocation(line: 8105, column: 7, scope: !12621)
!12646 = !DILocation(line: 8107, column: 22, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 8107, column: 7)
!12648 = !DILocation(line: 8110, column: 1, scope: !12621)
!12649 = distinct !DISubprogram(name: "resort_sorted_fields", scope: !3, file: !3, line: 8147, type: !12650, scopeLine: 8151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12652)
!12650 = !DISubroutineType(types: !12651)
!12651 = !{null, !1524, !1524, !3105, !1524}
!12652 = !{!12653, !12654, !12655, !12656, !12657}
!12653 = !DILocalVariable(name: "obj", arg: 1, scope: !12649, file: !3, line: 8147, type: !1524)
!12654 = !DILocalVariable(name: "orig_obj", arg: 2, scope: !12649, file: !3, line: 8148, type: !1524)
!12655 = !DILocalVariable(name: "new_value", arg: 3, scope: !12649, file: !3, line: 8149, type: !3105)
!12656 = !DILocalVariable(name: "cookie", arg: 4, scope: !12649, file: !3, line: 8150, type: !1524)
!12657 = !DILocalVariable(name: "sf", scope: !12649, file: !3, line: 8152, type: !2811)
!12658 = !DILocation(line: 0, scope: !12649)
!12659 = !DILocation(line: 8153, column: 25, scope: !12649)
!12660 = !DILocation(line: 8154, column: 22, scope: !12649)
!12661 = !DILocation(line: 8156, column: 20, scope: !12649)
!12662 = !DILocation(line: 8156, column: 33, scope: !12649)
!12663 = !DILocation(line: 8156, column: 29, scope: !12649)
!12664 = !DILocation(line: 8156, column: 3, scope: !12649)
!12665 = !DILocation(line: 8162, column: 1, scope: !12649)
!12666 = distinct !DISubprogram(name: "resort_field_decl_cmp", scope: !3, file: !3, line: 8121, type: !2324, scopeLine: 8122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12667)
!12667 = !{!12668, !12669, !12670, !12671, !12672, !12674}
!12668 = !DILocalVariable(name: "x_p", arg: 1, scope: !12666, file: !3, line: 8121, type: !2158)
!12669 = !DILocalVariable(name: "y_p", arg: 2, scope: !12666, file: !3, line: 8121, type: !2158)
!12670 = !DILocalVariable(name: "x", scope: !12666, file: !3, line: 8123, type: !12626)
!12671 = !DILocalVariable(name: "y", scope: !12666, file: !3, line: 8124, type: !12626)
!12672 = !DILocalVariable(name: "d1", scope: !12673, file: !3, line: 8134, type: !1527)
!12673 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 8133, column: 3)
!12674 = !DILocalVariable(name: "d2", scope: !12673, file: !3, line: 8135, type: !1527)
!12675 = !DILocation(line: 0, scope: !12666)
!12676 = !DILocation(line: 8126, column: 7, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 8126, column: 7)
!12678 = !DILocation(line: 8126, column: 25, scope: !12677)
!12679 = !DILocation(line: 8126, column: 22, scope: !12677)
!12680 = !DILocation(line: 8126, column: 7, scope: !12666)
!12681 = !DILocation(line: 8128, column: 13, scope: !12677)
!12682 = !DILocation(line: 8128, column: 28, scope: !12677)
!12683 = !DILocation(line: 8128, column: 45, scope: !12677)
!12684 = !DILocation(line: 8128, column: 60, scope: !12677)
!12685 = !DILocation(line: 8128, column: 42, scope: !12677)
!12686 = !DILocation(line: 8128, column: 5, scope: !12677)
!12687 = !DILocation(line: 8129, column: 22, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 8129, column: 7)
!12689 = !DILocation(line: 8129, column: 7, scope: !12666)
!12690 = !DILocation(line: 8131, column: 22, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 8131, column: 7)
!12692 = !DILocation(line: 8131, column: 7, scope: !12666)
!12693 = !DILocation(line: 8134, column: 5, scope: !12673)
!12694 = !DILocation(line: 8134, column: 10, scope: !12673)
!12695 = !DILocation(line: 8135, column: 5, scope: !12673)
!12696 = !DILocation(line: 8135, column: 10, scope: !12673)
!12697 = !DILocation(line: 8136, column: 17, scope: !12673)
!12698 = !DILocation(line: 8136, column: 45, scope: !12673)
!12699 = !DILocation(line: 8136, column: 5, scope: !12673)
!12700 = !DILocation(line: 8137, column: 17, scope: !12673)
!12701 = !DILocation(line: 8137, column: 45, scope: !12673)
!12702 = !DILocation(line: 8137, column: 5, scope: !12673)
!12703 = !DILocation(line: 8138, column: 9, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 8138, column: 9)
!12705 = !DILocation(line: 0, scope: !12673)
!12706 = !DILocation(line: 8138, column: 14, scope: !12704)
!12707 = !DILocation(line: 8138, column: 12, scope: !12704)
!12708 = !DILocation(line: 8140, column: 3, scope: !12666)
!12709 = !DILocation(line: 8142, column: 1, scope: !12666)
!12710 = distinct !DISubprogram(name: "c_parse_error", scope: !3, file: !3, line: 8185, type: !12711, scopeLine: 8187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12713)
!12711 = !DISubroutineType(types: !12712)
!12712 = !{null, !1525, !404, !1527, !1519}
!12713 = !{!12714, !12715, !12716, !12717, !12718, !12719, !12723}
!12714 = !DILocalVariable(name: "gmsgid", arg: 1, scope: !12710, file: !3, line: 8185, type: !1525)
!12715 = !DILocalVariable(name: "token_type", arg: 2, scope: !12710, file: !3, line: 8185, type: !404)
!12716 = !DILocalVariable(name: "value", arg: 3, scope: !12710, file: !3, line: 8186, type: !1527)
!12717 = !DILocalVariable(name: "token_flags", arg: 4, scope: !12710, file: !3, line: 8186, type: !1519)
!12718 = !DILocalVariable(name: "message", scope: !12710, file: !3, line: 8190, type: !1522)
!12719 = !DILocalVariable(name: "val", scope: !12720, file: !3, line: 8199, type: !7)
!12720 = distinct !DILexicalBlock(scope: !12721, file: !3, line: 8198, column: 5)
!12721 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 8194, column: 12)
!12722 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 8192, column: 7)
!12723 = !DILocalVariable(name: "prefix", scope: !12720, file: !3, line: 8200, type: !1525)
!12724 = !DILocation(line: 0, scope: !12710)
!12725 = !DILocation(line: 8192, column: 7, scope: !12710)
!12726 = !DILocation(line: 8193, column: 15, scope: !12722)
!12727 = !DILocation(line: 8193, column: 5, scope: !12722)
!12728 = !DILocation(line: 8199, column: 26, scope: !12720)
!12729 = !DILocation(line: 0, scope: !12720)
!12730 = !DILocation(line: 8202, column: 7, scope: !12720)
!12731 = !DILocation(line: 8209, column: 4, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 8203, column: 2)
!12733 = !DILocation(line: 8212, column: 4, scope: !12732)
!12734 = !DILocation(line: 8215, column: 4, scope: !12732)
!12735 = !DILocation(line: 0, scope: !12732)
!12736 = !DILocation(line: 8218, column: 15, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 8218, column: 11)
!12738 = !DILocation(line: 8218, column: 28, scope: !12737)
!12739 = !DILocation(line: 8218, column: 31, scope: !12737)
!12740 = !DILocation(line: 8218, column: 11, scope: !12720)
!12741 = !DILocation(line: 8219, column: 12, scope: !12737)
!12742 = !DILocation(line: 8219, column: 2, scope: !12737)
!12743 = !DILocation(line: 8221, column: 12, scope: !12737)
!12744 = !DILocation(line: 0, scope: !12737)
!12745 = !DILocation(line: 8223, column: 7, scope: !12720)
!12746 = !DILocation(line: 8224, column: 7, scope: !12720)
!12747 = !DILocation(line: 8226, column: 5, scope: !12720)
!12748 = !DILocation(line: 8232, column: 15, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12721, file: !3, line: 8227, column: 12)
!12750 = !DILocation(line: 8232, column: 5, scope: !12749)
!12751 = !DILocation(line: 8234, column: 15, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 8233, column: 12)
!12753 = !DILocation(line: 8234, column: 5, scope: !12752)
!12754 = !DILocation(line: 8237, column: 17, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !3, line: 8236, column: 5)
!12756 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 8235, column: 12)
!12757 = !DILocation(line: 8238, column: 7, scope: !12755)
!12758 = !DILocation(line: 8239, column: 7, scope: !12755)
!12759 = !DILocation(line: 8241, column: 5, scope: !12755)
!12760 = !DILocation(line: 8243, column: 15, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12756, file: !3, line: 8242, column: 12)
!12762 = !DILocation(line: 8243, column: 5, scope: !12761)
!12763 = !DILocation(line: 8245, column: 15, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12761, file: !3, line: 8244, column: 12)
!12765 = !DILocation(line: 8245, column: 5, scope: !12764)
!12766 = !DILocation(line: 8246, column: 23, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 8246, column: 12)
!12768 = !DILocation(line: 8246, column: 12, scope: !12764)
!12769 = !DILocation(line: 8248, column: 17, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12767, file: !3, line: 8247, column: 5)
!12771 = !DILocation(line: 8249, column: 23, scope: !12770)
!12772 = !DILocation(line: 8249, column: 7, scope: !12770)
!12773 = !DILocation(line: 8250, column: 7, scope: !12770)
!12774 = !DILocation(line: 8252, column: 5, scope: !12770)
!12775 = !DILocation(line: 8254, column: 5, scope: !12767)
!12776 = !DILocation(line: 0, scope: !12722)
!12777 = !DILocation(line: 8256, column: 7, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 8256, column: 7)
!12779 = !DILocation(line: 8256, column: 7, scope: !12710)
!12780 = !DILocation(line: 8258, column: 7, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 8257, column: 5)
!12782 = !DILocation(line: 8259, column: 7, scope: !12781)
!12783 = !DILocation(line: 8260, column: 5, scope: !12781)
!12784 = !DILocation(line: 8262, column: 1, scope: !12710)
!12785 = distinct !DISubprogram(name: "catenate_strings", scope: !3, file: !3, line: 8172, type: !12786, scopeLine: 8173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12788)
!12786 = !DISubroutineType(types: !12787)
!12787 = !{!1522, !1525, !1525, !1520}
!12788 = !{!12789, !12790, !12791, !12792, !12793}
!12789 = !DILocalVariable(name: "lhs", arg: 1, scope: !12785, file: !3, line: 8172, type: !1525)
!12790 = !DILocalVariable(name: "rhs_start", arg: 2, scope: !12785, file: !3, line: 8172, type: !1525)
!12791 = !DILocalVariable(name: "rhs_size", arg: 3, scope: !12785, file: !3, line: 8172, type: !1520)
!12792 = !DILocalVariable(name: "lhs_size", scope: !12785, file: !3, line: 8174, type: !2921)
!12793 = !DILocalVariable(name: "result", scope: !12785, file: !3, line: 8175, type: !1522)
!12794 = !DILocation(line: 0, scope: !12785)
!12795 = !DILocation(line: 8174, column: 24, scope: !12785)
!12796 = !DILocation(line: 8175, column: 18, scope: !12785)
!12797 = !DILocation(line: 8176, column: 25, scope: !12785)
!12798 = !DILocation(line: 8176, column: 3, scope: !12785)
!12799 = !DILocation(line: 8177, column: 19, scope: !12785)
!12800 = !DILocation(line: 8177, column: 42, scope: !12785)
!12801 = !DILocation(line: 8177, column: 3, scope: !12785)
!12802 = !DILocation(line: 8178, column: 3, scope: !12785)
!12803 = distinct !DISubprogram(name: "c_cpp_error", scope: !3, file: !3, line: 8273, type: !12804, scopeLine: 8276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12813)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{!1519, !3001, !1520, !1651, !7, !1525, !12806}
!12806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12807, size: 64)
!12807 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !12808, line: 52, baseType: !12809)
!12808 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!12809 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !12810, line: 32, baseType: !12811)
!12810 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stdarg.h", directory: "")
!12811 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 8262, baseType: !12812)
!12812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3126, size: 192, elements: !1625)
!12813 = !{!12814, !12815, !12816, !12817, !12818, !12819, !12820, !12841, !12842, !12843}
!12814 = !DILocalVariable(name: "pfile", arg: 1, scope: !12803, file: !3, line: 8273, type: !3001)
!12815 = !DILocalVariable(name: "level", arg: 2, scope: !12803, file: !3, line: 8273, type: !1520)
!12816 = !DILocalVariable(name: "location", arg: 3, scope: !12803, file: !3, line: 8274, type: !1651)
!12817 = !DILocalVariable(name: "column_override", arg: 4, scope: !12803, file: !3, line: 8274, type: !7)
!12818 = !DILocalVariable(name: "msg", arg: 5, scope: !12803, file: !3, line: 8275, type: !1525)
!12819 = !DILocalVariable(name: "ap", arg: 6, scope: !12803, file: !3, line: 8275, type: !12806)
!12820 = !DILocalVariable(name: "diagnostic", scope: !12803, file: !3, line: 8277, type: !12821)
!12821 = !DIDerivedType(tag: DW_TAG_typedef, name: "diagnostic_info", file: !486, line: 52, baseType: !12822)
!12822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "diagnostic_info", file: !486, line: 40, size: 512, elements: !12823)
!12823 = !{!12824, !12835, !12836, !12837, !12838, !12840}
!12824 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !12822, file: !486, line: 42, baseType: !12825, size: 320)
!12825 = !DIDerivedType(tag: DW_TAG_typedef, name: "text_info", file: !12826, line: 39, baseType: !12827)
!12826 = !DIFile(filename: "./pretty-print.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!12827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12826, line: 32, size: 320, elements: !12828)
!12828 = !{!12829, !12830, !12831, !12832, !12834}
!12829 = !DIDerivedType(tag: DW_TAG_member, name: "format_spec", scope: !12827, file: !12826, line: 34, baseType: !1525, size: 64)
!12830 = !DIDerivedType(tag: DW_TAG_member, name: "args_ptr", scope: !12827, file: !12826, line: 35, baseType: !12806, size: 64, offset: 64)
!12831 = !DIDerivedType(tag: DW_TAG_member, name: "err_no", scope: !12827, file: !12826, line: 36, baseType: !1520, size: 32, offset: 128)
!12832 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !12827, file: !12826, line: 37, baseType: !12833, size: 64, offset: 192)
!12833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!12834 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !12827, file: !12826, line: 38, baseType: !1886, size: 64, offset: 256)
!12835 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !12822, file: !486, line: 43, baseType: !1651, size: 32, offset: 320)
!12836 = !DIDerivedType(tag: DW_TAG_member, name: "override_column", scope: !12822, file: !486, line: 44, baseType: !7, size: 32, offset: 352)
!12837 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !12822, file: !486, line: 47, baseType: !1527, size: 64, offset: 384)
!12838 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !12822, file: !486, line: 49, baseType: !12839, size: 32, offset: 448)
!12839 = !DIDerivedType(tag: DW_TAG_typedef, name: "diagnostic_t", file: !486, line: 35, baseType: !485)
!12840 = !DIDerivedType(tag: DW_TAG_member, name: "option_index", scope: !12822, file: !486, line: 51, baseType: !1520, size: 32, offset: 480)
!12841 = !DILocalVariable(name: "dlevel", scope: !12803, file: !3, line: 8278, type: !12839)
!12842 = !DILocalVariable(name: "save_warn_system_headers", scope: !12803, file: !3, line: 8279, type: !1520)
!12843 = !DILocalVariable(name: "ret", scope: !12803, file: !3, line: 8280, type: !1519)
!12844 = !DILocation(line: 0, scope: !12803)
!12845 = !DILocation(line: 8277, column: 3, scope: !12803)
!12846 = !DILocation(line: 8279, column: 34, scope: !12803)
!12847 = !DILocation(line: 8282, column: 3, scope: !12803)
!12848 = !DILocation(line: 8290, column: 11, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 8290, column: 11)
!12850 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 8283, column: 5)
!12851 = !DILocation(line: 8285, column: 11, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 8285, column: 11)
!12853 = !DILocation(line: 8285, column: 11, scope: !12850)
!12854 = !DILocation(line: 8287, column: 27, scope: !12850)
!12855 = !DILocation(line: 8287, column: 7, scope: !12850)
!12856 = !DILocation(line: 8290, column: 11, scope: !12850)
!12857 = !DILocation(line: 8295, column: 11, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 8295, column: 11)
!12859 = !DILocation(line: 8295, column: 30, scope: !12858)
!12860 = !DILocation(line: 8295, column: 26, scope: !12858)
!12861 = !DILocation(line: 8304, column: 7, scope: !12850)
!12862 = !DILocation(line: 8307, column: 7, scope: !12850)
!12863 = !DILocation(line: 8310, column: 7, scope: !12850)
!12864 = !DILocation(line: 8312, column: 7, scope: !12850)
!12865 = !DILocation(line: 8313, column: 5, scope: !12850)
!12866 = !DILocation(line: 8314, column: 7, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 8314, column: 7)
!12868 = !DILocation(line: 8315, column: 16, scope: !12867)
!12869 = !DILocation(line: 8314, column: 7, scope: !12803)
!12870 = !DILocation(line: 8316, column: 3, scope: !12803)
!12871 = !DILocation(line: 8318, column: 7, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 8318, column: 7)
!12873 = !DILocation(line: 8318, column: 7, scope: !12803)
!12874 = !DILocation(line: 8319, column: 5, scope: !12872)
!12875 = !DILocation(line: 8320, column: 9, scope: !12803)
!12876 = !DILocation(line: 8321, column: 13, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 8321, column: 7)
!12878 = !DILocation(line: 8321, column: 7, scope: !12803)
!12879 = !DILocation(line: 8322, column: 25, scope: !12877)
!12880 = !DILocation(line: 8322, column: 5, scope: !12877)
!12881 = !DILocation(line: 8324, column: 1, scope: !12803)
!12882 = distinct !DISubprogram(name: "c_common_to_target_charset", scope: !3, file: !3, line: 8330, type: !12883, scopeLine: 8331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12885)
!12883 = !DISubroutineType(types: !12884)
!12884 = !{!1582, !1582}
!12885 = !{!12886, !12887}
!12886 = !DILocalVariable(name: "c", arg: 1, scope: !12882, file: !3, line: 8330, type: !1582)
!12887 = !DILocalVariable(name: "uc", scope: !12882, file: !3, line: 8336, type: !2817)
!12888 = !DILocation(line: 0, scope: !12882)
!12889 = !DILocation(line: 8336, column: 19, scope: !12882)
!12890 = !DILocation(line: 8336, column: 33, scope: !12882)
!12891 = !DILocation(line: 8338, column: 34, scope: !12882)
!12892 = !DILocation(line: 8338, column: 8, scope: !12882)
!12893 = !DILocation(line: 8340, column: 7, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12882, file: !3, line: 8340, column: 7)
!12895 = !DILocation(line: 0, scope: !12894)
!12896 = !DILocation(line: 8340, column: 7, scope: !12882)
!12897 = !DILocation(line: 8345, column: 1, scope: !12882)
!12898 = distinct !DISubprogram(name: "fold_offsetof", scope: !3, file: !3, line: 8473, type: !7359, scopeLine: 8474, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12899)
!12899 = !{!12900, !12901}
!12900 = !DILocalVariable(name: "expr", arg: 1, scope: !12898, file: !3, line: 8473, type: !1527)
!12901 = !DILocalVariable(name: "stop_ref", arg: 2, scope: !12898, file: !3, line: 8473, type: !1527)
!12902 = !DILocation(line: 0, scope: !12898)
!12903 = !DILocation(line: 8476, column: 19, scope: !12898)
!12904 = !DILocation(line: 8476, column: 35, scope: !12898)
!12905 = !DILocation(line: 8476, column: 10, scope: !12898)
!12906 = !DILocation(line: 8476, column: 3, scope: !12898)
!12907 = distinct !DISubprogram(name: "fold_offsetof_1", scope: !3, file: !3, line: 8353, type: !7359, scopeLine: 8354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12908)
!12908 = !{!12909, !12910, !12911, !12912, !12913, !12914, !12915, !12919, !12924}
!12909 = !DILocalVariable(name: "expr", arg: 1, scope: !12907, file: !3, line: 8353, type: !1527)
!12910 = !DILocalVariable(name: "stop_ref", arg: 2, scope: !12907, file: !3, line: 8353, type: !1527)
!12911 = !DILocalVariable(name: "code", scope: !12907, file: !3, line: 8355, type: !139)
!12912 = !DILocalVariable(name: "base", scope: !12907, file: !3, line: 8356, type: !1527)
!12913 = !DILocalVariable(name: "off", scope: !12907, file: !3, line: 8356, type: !1527)
!12914 = !DILocalVariable(name: "t", scope: !12907, file: !3, line: 8356, type: !1527)
!12915 = !DILocalVariable(name: "upbound", scope: !12916, file: !3, line: 8419, type: !1527)
!12916 = distinct !DILexicalBlock(scope: !12917, file: !3, line: 8418, column: 2)
!12917 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 8417, column: 11)
!12918 = distinct !DILexicalBlock(scope: !12907, file: !3, line: 8362, column: 5)
!12919 = !DILocalVariable(name: "v", scope: !12920, file: !3, line: 8429, type: !1527)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 8428, column: 3)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 8427, column: 12)
!12922 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 8424, column: 6)
!12923 = distinct !DILexicalBlock(scope: !12916, file: !3, line: 8420, column: 8)
!12924 = !DILocalVariable(name: "fld_chain", scope: !12925, file: !3, line: 8437, type: !1527)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 8436, column: 9)
!12926 = distinct !DILexicalBlock(scope: !12927, file: !3, line: 8434, column: 11)
!12927 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 8431, column: 5)
!12928 = distinct !DILexicalBlock(scope: !12920, file: !3, line: 8431, column: 5)
!12929 = !DILocation(line: 8463, column: 14, scope: !12918)
!12930 = !DILocation(line: 0, scope: !12907)
!12931 = !DILocation(line: 8358, column: 12, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12907, file: !3, line: 8358, column: 7)
!12933 = !DILocation(line: 8358, column: 24, scope: !12932)
!12934 = !DILocation(line: 8358, column: 27, scope: !12932)
!12935 = !DILocation(line: 8358, column: 44, scope: !12932)
!12936 = !DILocation(line: 8358, column: 7, scope: !12907)
!12937 = !DILocation(line: 8359, column: 12, scope: !12932)
!12938 = !DILocation(line: 8359, column: 5, scope: !12932)
!12939 = !DILocation(line: 8361, column: 11, scope: !12907)
!12940 = !DILocation(line: 8361, column: 3, scope: !12907)
!12941 = !DILocation(line: 8367, column: 7, scope: !12918)
!12942 = !DILocation(line: 8368, column: 14, scope: !12918)
!12943 = !DILocation(line: 8368, column: 7, scope: !12918)
!12944 = !DILocation(line: 8372, column: 7, scope: !12918)
!12945 = !DILocation(line: 8373, column: 14, scope: !12918)
!12946 = !DILocation(line: 8373, column: 7, scope: !12918)
!12947 = !DILocation(line: 8377, column: 27, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 8377, column: 11)
!12949 = !DILocation(line: 8377, column: 12, scope: !12948)
!12950 = !DILocation(line: 8377, column: 11, scope: !12918)
!12951 = !DILocation(line: 8379, column: 4, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 8378, column: 2)
!12953 = !DILocation(line: 8380, column: 11, scope: !12952)
!12954 = !DILocation(line: 8380, column: 4, scope: !12952)
!12955 = !DILocation(line: 8382, column: 14, scope: !12918)
!12956 = !DILocation(line: 8382, column: 7, scope: !12918)
!12957 = !DILocation(line: 8385, column: 31, scope: !12918)
!12958 = !DILocation(line: 8385, column: 14, scope: !12918)
!12959 = !DILocation(line: 8386, column: 19, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 8386, column: 11)
!12961 = !DILocation(line: 8386, column: 16, scope: !12960)
!12962 = !DILocation(line: 8386, column: 11, scope: !12918)
!12963 = !DILocation(line: 8389, column: 11, scope: !12918)
!12964 = !DILocation(line: 8390, column: 11, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 8390, column: 11)
!12966 = !DILocation(line: 8390, column: 11, scope: !12918)
!12967 = !DILocation(line: 8392, column: 4, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 8391, column: 2)
!12969 = !DILocation(line: 8394, column: 11, scope: !12968)
!12970 = !DILocation(line: 8394, column: 4, scope: !12968)
!12971 = !DILocation(line: 8396, column: 29, scope: !12918)
!12972 = !DILocation(line: 8396, column: 56, scope: !12918)
!12973 = !DILocation(line: 8397, column: 8, scope: !12918)
!12974 = !DILocation(line: 8396, column: 13, scope: !12918)
!12975 = !DILocation(line: 8400, column: 7, scope: !12918)
!12976 = !DILocation(line: 8403, column: 31, scope: !12918)
!12977 = !DILocation(line: 8403, column: 14, scope: !12918)
!12978 = !DILocation(line: 8404, column: 19, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 8404, column: 11)
!12980 = !DILocation(line: 8404, column: 16, scope: !12979)
!12981 = !DILocation(line: 8404, column: 11, scope: !12918)
!12982 = !DILocation(line: 8407, column: 11, scope: !12918)
!12983 = !DILocation(line: 8408, column: 11, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 8408, column: 11)
!12985 = !DILocation(line: 8408, column: 25, scope: !12984)
!12986 = !DILocation(line: 8408, column: 40, scope: !12984)
!12987 = !DILocation(line: 8408, column: 43, scope: !12984)
!12988 = !DILocation(line: 8408, column: 64, scope: !12984)
!12989 = !DILocation(line: 8408, column: 11, scope: !12918)
!12990 = !DILocation(line: 8411, column: 8, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12984, file: !3, line: 8409, column: 2)
!12992 = !DILocation(line: 8412, column: 2, scope: !12991)
!12993 = !DILocation(line: 0, scope: !12918)
!12994 = !DILocation(line: 8413, column: 20, scope: !12918)
!12995 = !DILocation(line: 8413, column: 11, scope: !12918)
!12996 = !DILocation(line: 8414, column: 13, scope: !12918)
!12997 = !DILocation(line: 8417, column: 16, scope: !12917)
!12998 = !DILocation(line: 8417, column: 29, scope: !12917)
!12999 = !DILocation(line: 8417, column: 32, scope: !12917)
!13000 = !DILocation(line: 8417, column: 46, scope: !12917)
!13001 = !DILocation(line: 8417, column: 11, scope: !12918)
!13002 = !DILocation(line: 8419, column: 19, scope: !12916)
!13003 = !DILocation(line: 0, scope: !12916)
!13004 = !DILocation(line: 8420, column: 16, scope: !12923)
!13005 = !DILocation(line: 8421, column: 8, scope: !12923)
!13006 = !DILocation(line: 8421, column: 11, scope: !12923)
!13007 = !DILocation(line: 8421, column: 31, scope: !12923)
!13008 = !DILocation(line: 8422, column: 8, scope: !12923)
!13009 = !DILocation(line: 8423, column: 11, scope: !12923)
!13010 = !DILocation(line: 8422, column: 12, scope: !12923)
!13011 = !DILocation(line: 8420, column: 8, scope: !12916)
!13012 = !DILocation(line: 8425, column: 18, scope: !12922)
!13013 = !DILocation(line: 8427, column: 12, scope: !12921)
!13014 = !DILocation(line: 8427, column: 12, scope: !12922)
!13015 = !DILocation(line: 0, scope: !12928)
!13016 = !DILocation(line: 8431, column: 10, scope: !12928)
!13017 = !DILocation(line: 0, scope: !12920)
!13018 = !DILocation(line: 8432, column: 10, scope: !12927)
!13019 = !DILocation(line: 8432, column: 24, scope: !12927)
!13020 = !DILocation(line: 8431, column: 5, scope: !12928)
!13021 = !DILocation(line: 8434, column: 11, scope: !12926)
!13022 = !DILocation(line: 8435, column: 4, scope: !12926)
!13023 = !DILocation(line: 8434, column: 11, scope: !12927)
!13024 = !DILocation(line: 8437, column: 21, scope: !12925)
!13025 = !DILocation(line: 8438, column: 4, scope: !12925)
!13026 = !DILocation(line: 0, scope: !12925)
!13027 = !DILocation(line: 8438, column: 4, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 8438, column: 4)
!13029 = !DILocation(line: 8439, column: 10, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !3, line: 8439, column: 10)
!13031 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 8438, column: 4)
!13032 = !DILocation(line: 8439, column: 32, scope: !13030)
!13033 = !DILocation(line: 8439, column: 10, scope: !13031)
!13034 = !DILocation(line: 8438, column: 34, scope: !13031)
!13035 = !DILocation(line: 8438, column: 4, scope: !13031)
!13036 = distinct !{!13036, !13027, !13037}
!13037 = !DILocation(line: 8440, column: 8, scope: !13028)
!13038 = !DILocation(line: 8442, column: 8, scope: !12925)
!13039 = !DILocation(line: 8444, column: 9, scope: !12926)
!13040 = !DILocation(line: 8431, column: 5, scope: !12927)
!13041 = distinct !{!13041, !13020, !13042}
!13042 = !DILocation(line: 8444, column: 9, scope: !12928)
!13043 = !DILocation(line: 8448, column: 23, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !12920, file: !3, line: 8448, column: 9)
!13045 = !DILocation(line: 8449, column: 9, scope: !13044)
!13046 = !DILocation(line: 8448, column: 9, scope: !12920)
!13047 = !DILocation(line: 8453, column: 12, scope: !13044)
!13048 = !DILocation(line: 8450, column: 7, scope: !13044)
!13049 = !DILocation(line: 8461, column: 11, scope: !12918)
!13050 = !DILocation(line: 8462, column: 7, scope: !12918)
!13051 = !DILocation(line: 8466, column: 7, scope: !12918)
!13052 = !DILocation(line: 8467, column: 5, scope: !12918)
!13053 = !DILocation(line: 8469, column: 10, scope: !12907)
!13054 = !DILocation(line: 8469, column: 3, scope: !12907)
!13055 = !DILocation(line: 8470, column: 1, scope: !12907)
!13056 = distinct !DISubprogram(name: "lvalue_error", scope: !3, file: !3, line: 8483, type: !13057, scopeLine: 8484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13059)
!13057 = !DISubroutineType(types: !13058)
!13058 = !{null, !501}
!13059 = !{!13060}
!13060 = !DILocalVariable(name: "use", arg: 1, scope: !13056, file: !3, line: 8483, type: !501)
!13061 = !DILocation(line: 0, scope: !13056)
!13062 = !DILocation(line: 8485, column: 3, scope: !13056)
!13063 = !DILocation(line: 8488, column: 7, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13056, file: !3, line: 8486, column: 5)
!13065 = !DILocation(line: 8489, column: 7, scope: !13064)
!13066 = !DILocation(line: 8491, column: 7, scope: !13064)
!13067 = !DILocation(line: 8492, column: 7, scope: !13064)
!13068 = !DILocation(line: 8494, column: 7, scope: !13064)
!13069 = !DILocation(line: 8495, column: 7, scope: !13064)
!13070 = !DILocation(line: 8497, column: 7, scope: !13064)
!13071 = !DILocation(line: 8498, column: 7, scope: !13064)
!13072 = !DILocation(line: 8500, column: 7, scope: !13064)
!13073 = !DILocation(line: 8501, column: 7, scope: !13064)
!13074 = !DILocation(line: 8503, column: 7, scope: !13064)
!13075 = !DILocation(line: 8504, column: 5, scope: !13064)
!13076 = !DILocation(line: 8505, column: 1, scope: !13056)
!13077 = distinct !DISubprogram(name: "complete_array_type", scope: !3, file: !3, line: 8513, type: !13078, scopeLine: 8514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13080)
!13078 = !DISubroutineType(types: !13079)
!13079 = !{!1520, !1886, !1527, !1519}
!13080 = !{!13081, !13082, !13083, !13084, !13085, !13086, !13087, !13088, !13089, !13090, !13091, !13092, !13097, !13100, !13103, !13104, !13106, !13107}
!13081 = !DILocalVariable(name: "ptype", arg: 1, scope: !13077, file: !3, line: 8513, type: !1886)
!13082 = !DILocalVariable(name: "initial_value", arg: 2, scope: !13077, file: !3, line: 8513, type: !1527)
!13083 = !DILocalVariable(name: "do_default", arg: 3, scope: !13077, file: !3, line: 8513, type: !1519)
!13084 = !DILocalVariable(name: "maxindex", scope: !13077, file: !3, line: 8515, type: !1527)
!13085 = !DILocalVariable(name: "type", scope: !13077, file: !3, line: 8515, type: !1527)
!13086 = !DILocalVariable(name: "main_type", scope: !13077, file: !3, line: 8515, type: !1527)
!13087 = !DILocalVariable(name: "elt", scope: !13077, file: !3, line: 8515, type: !1527)
!13088 = !DILocalVariable(name: "unqual_elt", scope: !13077, file: !3, line: 8515, type: !1527)
!13089 = !DILocalVariable(name: "failure", scope: !13077, file: !3, line: 8516, type: !1520)
!13090 = !DILocalVariable(name: "quals", scope: !13077, file: !3, line: 8516, type: !1520)
!13091 = !DILocalVariable(name: "hashcode", scope: !13077, file: !3, line: 8517, type: !2320)
!13092 = !DILocalVariable(name: "eltsize", scope: !13093, file: !3, line: 8524, type: !1520)
!13093 = distinct !DILexicalBlock(scope: !13094, file: !3, line: 8523, column: 2)
!13094 = distinct !DILexicalBlock(scope: !13095, file: !3, line: 8522, column: 11)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 8521, column: 5)
!13096 = distinct !DILexicalBlock(scope: !13077, file: !3, line: 8520, column: 7)
!13097 = !DILocalVariable(name: "v", scope: !13098, file: !3, line: 8530, type: !2569)
!13098 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 8529, column: 2)
!13099 = distinct !DILexicalBlock(scope: !13094, file: !3, line: 8528, column: 16)
!13100 = !DILocalVariable(name: "curindex", scope: !13101, file: !3, line: 8540, type: !1527)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 8539, column: 6)
!13102 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 8532, column: 8)
!13103 = !DILocalVariable(name: "cnt", scope: !13101, file: !3, line: 8541, type: !1580)
!13104 = !DILocalVariable(name: "ce", scope: !13101, file: !3, line: 8542, type: !13105)
!13105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!13106 = !DILocalVariable(name: "fold_p", scope: !13101, file: !3, line: 8543, type: !1519)
!13107 = !DILocalVariable(name: "curfold_p", scope: !13108, file: !3, line: 8555, type: !1519)
!13108 = distinct !DILexicalBlock(scope: !13109, file: !3, line: 8554, column: 3)
!13109 = distinct !DILexicalBlock(scope: !13110, file: !3, line: 8551, column: 8)
!13110 = distinct !DILexicalBlock(scope: !13101, file: !3, line: 8551, column: 8)
!13111 = !DILocation(line: 0, scope: !13077)
!13112 = !DILocation(line: 8519, column: 14, scope: !13077)
!13113 = !DILocation(line: 8520, column: 7, scope: !13096)
!13114 = !DILocation(line: 8520, column: 7, scope: !13077)
!13115 = !DILocation(line: 8522, column: 11, scope: !13094)
!13116 = !DILocation(line: 8522, column: 37, scope: !13094)
!13117 = !DILocation(line: 8522, column: 11, scope: !13095)
!13118 = !DILocation(line: 8525, column: 27, scope: !13093)
!13119 = !DILocation(line: 8525, column: 8, scope: !13093)
!13120 = !DILocation(line: 0, scope: !13093)
!13121 = !DILocation(line: 8526, column: 15, scope: !13093)
!13122 = !DILocation(line: 8527, column: 2, scope: !13093)
!13123 = !DILocation(line: 8528, column: 42, scope: !13099)
!13124 = !DILocation(line: 8528, column: 16, scope: !13094)
!13125 = !DILocation(line: 8530, column: 33, scope: !13098)
!13126 = !DILocation(line: 0, scope: !13098)
!13127 = !DILocation(line: 8532, column: 8, scope: !13102)
!13128 = !DILocation(line: 8532, column: 8, scope: !13098)
!13129 = !DILocation(line: 8534, column: 12, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 8534, column: 12)
!13131 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 8533, column: 6)
!13132 = !DILocation(line: 8534, column: 12, scope: !13131)
!13133 = !DILocation(line: 8536, column: 19, scope: !13131)
!13134 = !DILocation(line: 8537, column: 6, scope: !13131)
!13135 = !DILocation(line: 8542, column: 8, scope: !13101)
!13136 = !DILocation(line: 0, scope: !13101)
!13137 = !DILocation(line: 8545, column: 12, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13101, file: !3, line: 8545, column: 12)
!13139 = !DILocation(line: 8545, column: 47, scope: !13138)
!13140 = !DILocation(line: 8545, column: 12, scope: !13101)
!13141 = !DILocation(line: 8546, column: 32, scope: !13138)
!13142 = !DILocation(line: 8546, column: 48, scope: !13138)
!13143 = !DILocation(line: 8547, column: 11, scope: !13138)
!13144 = !DILocation(line: 8548, column: 15, scope: !13138)
!13145 = !DILocation(line: 8546, column: 14, scope: !13138)
!13146 = !DILocation(line: 8546, column: 3, scope: !13138)
!13147 = !DILocation(line: 8551, column: 13, scope: !13110)
!13148 = !DILocation(line: 0, scope: !13110)
!13149 = !DILocation(line: 8552, column: 6, scope: !13109)
!13150 = !DILocation(line: 8551, column: 8, scope: !13110)
!13151 = !DILocation(line: 0, scope: !13108)
!13152 = !DILocation(line: 8556, column: 9, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13108, file: !3, line: 8556, column: 9)
!13154 = !DILocation(line: 8556, column: 13, scope: !13153)
!13155 = !DILocation(line: 8556, column: 9, scope: !13108)
!13156 = !DILocation(line: 8557, column: 7, scope: !13153)
!13157 = !DILocation(line: 8560, column: 13, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 8560, column: 13)
!13159 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 8559, column: 7)
!13160 = !DILocation(line: 8560, column: 13, scope: !13159)
!13161 = !DILocation(line: 8561, column: 22, scope: !13158)
!13162 = !DILocation(line: 8561, column: 11, scope: !13158)
!13163 = !DILocation(line: 8562, column: 20, scope: !13159)
!13164 = !DILocation(line: 0, scope: !13153)
!13165 = !DILocation(line: 8565, column: 9, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13108, file: !3, line: 8565, column: 9)
!13167 = !DILocation(line: 8565, column: 9, scope: !13108)
!13168 = !DILocation(line: 8553, column: 9, scope: !13109)
!13169 = !DILocation(line: 8551, column: 8, scope: !13109)
!13170 = distinct !{!13170, !13150, !13171}
!13171 = !DILocation(line: 8567, column: 3, scope: !13110)
!13172 = !DILocation(line: 8568, column: 13, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13101, file: !3, line: 8568, column: 13)
!13174 = !DILocation(line: 8568, column: 13, scope: !13101)
!13175 = !DILocation(line: 8569, column: 22, scope: !13173)
!13176 = !DILocation(line: 8569, column: 11, scope: !13173)
!13177 = !DILocation(line: 8570, column: 6, scope: !13102)
!13178 = !DILocation(line: 8575, column: 25, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !3, line: 8575, column: 8)
!13180 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 8573, column: 2)
!13181 = !DILocation(line: 8575, column: 22, scope: !13179)
!13182 = !DILocation(line: 8575, column: 8, scope: !13180)
!13183 = !DILocation(line: 8582, column: 12, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !3, line: 8582, column: 11)
!13185 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 8580, column: 5)
!13186 = !DILocation(line: 8582, column: 11, scope: !13185)
!13187 = !DILocation(line: 8586, column: 10, scope: !13077)
!13188 = !DILocation(line: 8587, column: 9, scope: !13077)
!13189 = !DILocation(line: 8588, column: 11, scope: !13077)
!13190 = !DILocation(line: 8589, column: 13, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13077, file: !3, line: 8589, column: 7)
!13192 = !DILocation(line: 8589, column: 7, scope: !13077)
!13193 = !DILocation(line: 8592, column: 18, scope: !13191)
!13194 = !DILocation(line: 0, scope: !13191)
!13195 = !DILocation(line: 8597, column: 41, scope: !13077)
!13196 = !DILocation(line: 8597, column: 15, scope: !13077)
!13197 = !DILocation(line: 8598, column: 3, scope: !13077)
!13198 = !DILocation(line: 8598, column: 25, scope: !13077)
!13199 = !DILocation(line: 8599, column: 29, scope: !13077)
!13200 = !DILocation(line: 8599, column: 3, scope: !13077)
!13201 = !DILocation(line: 8599, column: 27, scope: !13077)
!13202 = !DILocation(line: 8600, column: 3, scope: !13077)
!13203 = !DILocation(line: 8603, column: 14, scope: !13077)
!13204 = !DILocation(line: 8604, column: 14, scope: !13077)
!13205 = !DILocation(line: 8606, column: 15, scope: !13077)
!13206 = !DILocation(line: 8609, column: 7, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13077, file: !3, line: 8609, column: 7)
!13208 = !DILocation(line: 8610, column: 7, scope: !13207)
!13209 = !DILocation(line: 8610, column: 10, scope: !13207)
!13210 = !DILocation(line: 8609, column: 7, scope: !13077)
!13211 = !DILocation(line: 8611, column: 5, scope: !13207)
!13212 = !DILocation(line: 8612, column: 54, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 8612, column: 12)
!13214 = !DILocation(line: 8612, column: 51, scope: !13213)
!13215 = !DILocation(line: 8613, column: 5, scope: !13213)
!13216 = !DILocation(line: 8614, column: 12, scope: !13213)
!13217 = !DILocation(line: 8614, column: 9, scope: !13213)
!13218 = !DILocation(line: 8612, column: 12, scope: !13207)
!13219 = !DILocation(line: 8616, column: 9, scope: !13213)
!13220 = !DILocation(line: 8615, column: 5, scope: !13213)
!13221 = !DILocation(line: 8616, column: 7, scope: !13213)
!13222 = !DILocation(line: 8619, column: 5, scope: !13213)
!13223 = !DILocation(line: 8619, column: 32, scope: !13213)
!13224 = !DILocation(line: 8621, column: 7, scope: !13077)
!13225 = !DILocation(line: 8624, column: 12, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13077, file: !3, line: 8621, column: 7)
!13227 = !DILocation(line: 0, scope: !13226)
!13228 = !DILocation(line: 8626, column: 7, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13077, file: !3, line: 8626, column: 7)
!13230 = !DILocation(line: 8627, column: 7, scope: !13229)
!13231 = !DILocation(line: 8627, column: 10, scope: !13229)
!13232 = !DILocation(line: 8627, column: 44, scope: !13229)
!13233 = !DILocation(line: 8628, column: 7, scope: !13229)
!13234 = !DILocation(line: 8628, column: 10, scope: !13229)
!13235 = !DILocation(line: 8626, column: 7, scope: !13077)
!13236 = !DILocation(line: 8630, column: 7, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13229, file: !3, line: 8629, column: 5)
!13238 = !DILocation(line: 8633, column: 14, scope: !13237)
!13239 = !DILocation(line: 8634, column: 5, scope: !13237)
!13240 = !DILocation(line: 8636, column: 10, scope: !13077)
!13241 = !DILocation(line: 8637, column: 3, scope: !13077)
!13242 = !DILocation(line: 8638, column: 1, scope: !13077)
!13243 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !140, file: !140, line: 1537, type: !13244, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13248)
!13244 = !DISubroutineType(types: !13245)
!13245 = !{!7, !13246}
!13246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13247, size: 64)
!13247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2574)
!13248 = !{!13249}
!13249 = !DILocalVariable(name: "vec_", arg: 1, scope: !13243, file: !140, line: 1537, type: !13246)
!13250 = !DILocation(line: 0, scope: !13243)
!13251 = !DILocation(line: 1537, column: 1, scope: !13243)
!13252 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !140, file: !140, line: 1537, type: !13253, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13256)
!13253 = !DISubroutineType(types: !13254)
!13254 = !{!13105, !13255, !7}
!13255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!13256 = !{!13257, !13258}
!13257 = !DILocalVariable(name: "vec_", arg: 1, scope: !13252, file: !140, line: 1537, type: !13255)
!13258 = !DILocalVariable(name: "ix_", arg: 2, scope: !13252, file: !140, line: 1537, type: !7)
!13259 = !DILocation(line: 0, scope: !13252)
!13260 = !DILocation(line: 1537, column: 1, scope: !13252)
!13261 = distinct !DISubprogram(name: "VEC_constructor_elt_base_iterate", scope: !140, file: !140, line: 1537, type: !13262, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13265)
!13262 = !DISubroutineType(types: !13263)
!13263 = !{!1520, !13255, !7, !13264}
!13264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13105, size: 64)
!13265 = !{!13266, !13267, !13268}
!13266 = !DILocalVariable(name: "vec_", arg: 1, scope: !13261, file: !140, line: 1537, type: !13255)
!13267 = !DILocalVariable(name: "ix_", arg: 2, scope: !13261, file: !140, line: 1537, type: !7)
!13268 = !DILocalVariable(name: "ptr", arg: 3, scope: !13261, file: !140, line: 1537, type: !13264)
!13269 = !DILocation(line: 0, scope: !13261)
!13270 = !DILocation(line: 1537, column: 1, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13261, file: !140, line: 1537, column: 1)
!13272 = !DILocation(line: 1537, column: 1, scope: !13261)
!13273 = !DILocation(line: 1537, column: 1, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13271, file: !140, line: 1537, column: 1)
!13275 = !DILocation(line: 1537, column: 1, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13271, file: !140, line: 1537, column: 1)
!13277 = !DILocation(line: 0, scope: !13271)
!13278 = distinct !DISubprogram(name: "builtin_type_for_size", scope: !3, file: !3, line: 8647, type: !13279, scopeLine: 8648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13281)
!13279 = !DISubroutineType(types: !13280)
!13280 = !{!1527, !1520, !1519}
!13281 = !{!13282, !13283, !13284}
!13282 = !DILocalVariable(name: "size", arg: 1, scope: !13278, file: !3, line: 8647, type: !1520)
!13283 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !13278, file: !3, line: 8647, type: !1519)
!13284 = !DILocalVariable(name: "type", scope: !13278, file: !3, line: 8649, type: !1527)
!13285 = !DILocation(line: 0, scope: !13278)
!13286 = !DILocation(line: 8649, column: 32, scope: !13278)
!13287 = !DILocation(line: 8649, column: 53, scope: !13278)
!13288 = !DILocation(line: 8649, column: 15, scope: !13278)
!13289 = !DILocation(line: 8650, column: 10, scope: !13278)
!13290 = !DILocation(line: 8650, column: 3, scope: !13278)
!13291 = distinct !DISubprogram(name: "resolve_overloaded_builtin", scope: !3, file: !3, line: 8766, type: !13292, scopeLine: 8767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13294)
!13292 = !DISubroutineType(types: !13293)
!13293 = !{!1527, !1651, !1527, !2519}
!13294 = !{!13295, !13296, !13297, !13298, !13299, !13302, !13303, !13304}
!13295 = !DILocalVariable(name: "loc", arg: 1, scope: !13291, file: !3, line: 8766, type: !1651)
!13296 = !DILocalVariable(name: "function", arg: 2, scope: !13291, file: !3, line: 8766, type: !1527)
!13297 = !DILocalVariable(name: "params", arg: 3, scope: !13291, file: !3, line: 8766, type: !2519)
!13298 = !DILocalVariable(name: "orig_code", scope: !13291, file: !3, line: 8768, type: !508)
!13299 = !DILocalVariable(name: "n", scope: !13300, file: !3, line: 8802, type: !1520)
!13300 = distinct !DILexicalBlock(scope: !13301, file: !3, line: 8801, column: 7)
!13301 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 8784, column: 5)
!13302 = !DILocalVariable(name: "new_function", scope: !13300, file: !3, line: 8803, type: !1527)
!13303 = !DILocalVariable(name: "first_param", scope: !13300, file: !3, line: 8803, type: !1527)
!13304 = !DILocalVariable(name: "result", scope: !13300, file: !3, line: 8803, type: !1527)
!13305 = !DILocation(line: 0, scope: !13291)
!13306 = !DILocation(line: 8768, column: 38, scope: !13291)
!13307 = !DILocation(line: 8769, column: 11, scope: !13291)
!13308 = !DILocation(line: 8769, column: 3, scope: !13291)
!13309 = !DILocation(line: 8774, column: 19, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13311, file: !3, line: 8774, column: 11)
!13311 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 8770, column: 5)
!13312 = !DILocation(line: 8774, column: 11, scope: !13310)
!13313 = !DILocation(line: 8774, column: 11, scope: !13311)
!13314 = !DILocation(line: 8775, column: 60, scope: !13310)
!13315 = !DILocation(line: 8775, column: 9, scope: !13310)
!13316 = !DILocation(line: 8775, column: 2, scope: !13310)
!13317 = !DILocation(line: 8783, column: 3, scope: !13291)
!13318 = !DILocation(line: 8802, column: 10, scope: !13300)
!13319 = !DILocation(line: 0, scope: !13300)
!13320 = !DILocation(line: 8805, column: 8, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13300, file: !3, line: 8805, column: 6)
!13322 = !DILocation(line: 8805, column: 6, scope: !13300)
!13323 = !DILocation(line: 8806, column: 11, scope: !13321)
!13324 = !DILocation(line: 8806, column: 4, scope: !13321)
!13325 = !DILocation(line: 8808, column: 56, scope: !13300)
!13326 = !DILocation(line: 8808, column: 44, scope: !13300)
!13327 = !DILocation(line: 8808, column: 42, scope: !13300)
!13328 = !DILocation(line: 8808, column: 59, scope: !13300)
!13329 = !DILocation(line: 8808, column: 17, scope: !13300)
!13330 = !DILocation(line: 8809, column: 7, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13300, file: !3, line: 8809, column: 6)
!13332 = !DILocation(line: 8809, column: 6, scope: !13300)
!13333 = !DILocation(line: 8810, column: 11, scope: !13331)
!13334 = !DILocation(line: 8810, column: 4, scope: !13331)
!13335 = !DILocation(line: 8812, column: 16, scope: !13300)
!13336 = !DILocation(line: 8813, column: 11, scope: !13300)
!13337 = !DILocation(line: 8815, column: 6, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13300, file: !3, line: 8814, column: 6)
!13339 = !DILocation(line: 8816, column: 13, scope: !13338)
!13340 = !DILocation(line: 8816, column: 4, scope: !13338)
!13341 = !DILocation(line: 8824, column: 1, scope: !13291)
!13342 = distinct !DISubprogram(name: "sync_resolve_size", scope: !3, file: !3, line: 8659, type: !13343, scopeLine: 8660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13345)
!13343 = !DISubroutineType(types: !13344)
!13344 = !{!1520, !1527, !2519}
!13345 = !{!13346, !13347, !13348, !13349, !13350}
!13346 = !DILocalVariable(name: "function", arg: 1, scope: !13342, file: !3, line: 8659, type: !1527)
!13347 = !DILocalVariable(name: "params", arg: 2, scope: !13342, file: !3, line: 8659, type: !2519)
!13348 = !DILocalVariable(name: "type", scope: !13342, file: !3, line: 8661, type: !1527)
!13349 = !DILocalVariable(name: "size", scope: !13342, file: !3, line: 8662, type: !1520)
!13350 = !DILabel(scope: !13342, name: "incompatible", file: !3, line: 8682)
!13351 = !DILocation(line: 0, scope: !13342)
!13352 = !DILocation(line: 8664, column: 7, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13342, file: !3, line: 8664, column: 7)
!13354 = !DILocation(line: 8664, column: 7, scope: !13342)
!13355 = !DILocation(line: 8666, column: 7, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 8665, column: 5)
!13357 = !DILocation(line: 8667, column: 7, scope: !13356)
!13358 = !DILocation(line: 8670, column: 10, scope: !13342)
!13359 = !DILocation(line: 8671, column: 7, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13342, file: !3, line: 8671, column: 7)
!13361 = !DILocation(line: 8671, column: 24, scope: !13360)
!13362 = !DILocation(line: 8671, column: 7, scope: !13342)
!13363 = !DILocation(line: 8674, column: 10, scope: !13342)
!13364 = !DILocation(line: 8675, column: 8, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13342, file: !3, line: 8675, column: 7)
!13366 = !DILocation(line: 8675, column: 31, scope: !13365)
!13367 = !DILocation(line: 8675, column: 35, scope: !13365)
!13368 = !DILocation(line: 8675, column: 7, scope: !13342)
!13369 = !DILocation(line: 8678, column: 24, scope: !13342)
!13370 = !DILocation(line: 8678, column: 10, scope: !13342)
!13371 = !DILocation(line: 8679, column: 17, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13342, file: !3, line: 8679, column: 7)
!13373 = !DILocation(line: 8682, column: 2, scope: !13342)
!13374 = !DILocation(line: 8683, column: 3, scope: !13342)
!13375 = !DILocation(line: 8684, column: 3, scope: !13342)
!13376 = !DILocation(line: 8685, column: 1, scope: !13342)
!13377 = distinct !DISubprogram(name: "sync_resolve_params", scope: !3, file: !3, line: 8693, type: !13378, scopeLine: 8694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13380)
!13378 = !DISubroutineType(types: !13379)
!13379 = !{!1519, !1527, !1527, !2519}
!13380 = !{!13381, !13382, !13383, !13384, !13385, !13386, !13387, !13388}
!13381 = !DILocalVariable(name: "orig_function", arg: 1, scope: !13377, file: !3, line: 8693, type: !1527)
!13382 = !DILocalVariable(name: "function", arg: 2, scope: !13377, file: !3, line: 8693, type: !1527)
!13383 = !DILocalVariable(name: "params", arg: 3, scope: !13377, file: !3, line: 8693, type: !2519)
!13384 = !DILocalVariable(name: "arg_types", scope: !13377, file: !3, line: 8695, type: !1527)
!13385 = !DILocalVariable(name: "ptype", scope: !13377, file: !3, line: 8696, type: !1527)
!13386 = !DILocalVariable(name: "number", scope: !13377, file: !3, line: 8697, type: !1520)
!13387 = !DILocalVariable(name: "parmnum", scope: !13377, file: !3, line: 8698, type: !7)
!13388 = !DILocalVariable(name: "val", scope: !13389, file: !3, line: 8712, type: !1527)
!13389 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 8711, column: 5)
!13390 = !DILocation(line: 0, scope: !13377)
!13391 = !DILocation(line: 8695, column: 20, scope: !13377)
!13392 = !DILocation(line: 8703, column: 15, scope: !13377)
!13393 = !DILocation(line: 8704, column: 11, scope: !13377)
!13394 = !DILocation(line: 8710, column: 3, scope: !13377)
!13395 = !DILocation(line: 8703, column: 13, scope: !13377)
!13396 = !DILocation(line: 8710, column: 23, scope: !13377)
!13397 = !DILocation(line: 8710, column: 20, scope: !13377)
!13398 = !DILocation(line: 8714, column: 7, scope: !13389)
!13399 = !DILocation(line: 8715, column: 11, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 8715, column: 11)
!13401 = !DILocation(line: 8715, column: 37, scope: !13400)
!13402 = !DILocation(line: 8715, column: 11, scope: !13389)
!13403 = !DILocation(line: 8717, column: 4, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 8716, column: 2)
!13405 = !DILocation(line: 8718, column: 4, scope: !13404)
!13406 = !DILocation(line: 8724, column: 13, scope: !13389)
!13407 = !DILocation(line: 0, scope: !13389)
!13408 = !DILocation(line: 8725, column: 13, scope: !13389)
!13409 = !DILocation(line: 8726, column: 22, scope: !13389)
!13410 = !DILocation(line: 8726, column: 13, scope: !13389)
!13411 = !DILocation(line: 8727, column: 7, scope: !13389)
!13412 = !DILocation(line: 8729, column: 19, scope: !13389)
!13413 = !DILocation(line: 8731, column: 5, scope: !13377)
!13414 = distinct !{!13414, !13394, !13413}
!13415 = !DILocation(line: 8737, column: 3, scope: !13377)
!13416 = !DILocation(line: 8739, column: 3, scope: !13377)
!13417 = !DILocation(line: 8740, column: 1, scope: !13377)
!13418 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !140, file: !140, line: 182, type: !13419, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13423)
!13419 = !DISubroutineType(types: !13420)
!13420 = !{!1527, !13421, !7}
!13421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13422, size: 64)
!13422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2524)
!13423 = !{!13424, !13425}
!13424 = !DILocalVariable(name: "vec_", arg: 1, scope: !13418, file: !140, line: 182, type: !13421)
!13425 = !DILocalVariable(name: "ix_", arg: 2, scope: !13418, file: !140, line: 182, type: !7)
!13426 = !DILocation(line: 0, scope: !13418)
!13427 = !DILocation(line: 182, column: 1, scope: !13418)
!13428 = distinct !DISubprogram(name: "sync_resolve_return", scope: !3, file: !3, line: 8747, type: !7359, scopeLine: 8748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13429)
!13429 = !{!13430, !13431, !13432}
!13430 = !DILocalVariable(name: "first_param", arg: 1, scope: !13428, file: !3, line: 8747, type: !1527)
!13431 = !DILocalVariable(name: "result", arg: 2, scope: !13428, file: !3, line: 8747, type: !1527)
!13432 = !DILocalVariable(name: "ptype", scope: !13428, file: !3, line: 8749, type: !1527)
!13433 = !DILocation(line: 0, scope: !13428)
!13434 = !DILocation(line: 8749, column: 16, scope: !13428)
!13435 = !DILocation(line: 8750, column: 11, scope: !13428)
!13436 = !DILocation(line: 8751, column: 10, scope: !13428)
!13437 = !DILocation(line: 8751, column: 3, scope: !13428)
!13438 = distinct !DISubprogram(name: "same_scalar_type_ignoring_signedness", scope: !3, file: !3, line: 8828, type: !13439, scopeLine: 8829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13441)
!13439 = !DISubroutineType(types: !13440)
!13440 = !{!1519, !1527, !1527}
!13441 = !{!13442, !13443, !13444, !13445}
!13442 = !DILocalVariable(name: "t1", arg: 1, scope: !13438, file: !3, line: 8828, type: !1527)
!13443 = !DILocalVariable(name: "t2", arg: 2, scope: !13438, file: !3, line: 8828, type: !1527)
!13444 = !DILocalVariable(name: "c1", scope: !13438, file: !3, line: 8830, type: !139)
!13445 = !DILocalVariable(name: "c2", scope: !13438, file: !3, line: 8830, type: !139)
!13446 = !DILocation(line: 0, scope: !13438)
!13447 = !DILocation(line: 8830, column: 23, scope: !13438)
!13448 = !DILocation(line: 8832, column: 3, scope: !13438)
!13449 = !DILocation(line: 8830, column: 44, scope: !13438)
!13450 = !DILocation(line: 8838, column: 10, scope: !13438)
!13451 = !DILocation(line: 8839, column: 8, scope: !13438)
!13452 = !DILocation(line: 8839, column: 5, scope: !13438)
!13453 = !DILocation(line: 8838, column: 3, scope: !13438)
!13454 = distinct !DISubprogram(name: "check_missing_format_attribute", scope: !3, file: !3, line: 8848, type: !13439, scopeLine: 8849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13455)
!13455 = !{!13456, !13457, !13458, !13459, !13460, !13461}
!13456 = !DILocalVariable(name: "ltype", arg: 1, scope: !13454, file: !3, line: 8848, type: !1527)
!13457 = !DILocalVariable(name: "rtype", arg: 2, scope: !13454, file: !3, line: 8848, type: !1527)
!13458 = !DILocalVariable(name: "ttr", scope: !13454, file: !3, line: 8850, type: !2810)
!13459 = !DILocalVariable(name: "ttl", scope: !13454, file: !3, line: 8850, type: !2810)
!13460 = !DILocalVariable(name: "ra", scope: !13454, file: !3, line: 8851, type: !1527)
!13461 = !DILocalVariable(name: "la", scope: !13462, file: !3, line: 8858, type: !1527)
!13462 = distinct !DILexicalBlock(scope: !13463, file: !3, line: 8857, column: 5)
!13463 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 8856, column: 7)
!13464 = !DILocation(line: 0, scope: !13454)
!13465 = !DILocation(line: 8850, column: 20, scope: !13454)
!13466 = !DILocation(line: 8850, column: 45, scope: !13454)
!13467 = !DILocation(line: 8853, column: 13, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 8853, column: 3)
!13469 = !DILocation(line: 8853, column: 8, scope: !13468)
!13470 = !DILocation(line: 0, scope: !13468)
!13471 = !DILocation(line: 8853, column: 3, scope: !13468)
!13472 = !DILocation(line: 8854, column: 35, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !3, line: 8854, column: 9)
!13474 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 8853, column: 3)
!13475 = !DILocation(line: 8854, column: 9, scope: !13473)
!13476 = !DILocation(line: 8854, column: 9, scope: !13474)
!13477 = !DILocation(line: 8853, column: 45, scope: !13474)
!13478 = !DILocation(line: 8853, column: 3, scope: !13474)
!13479 = distinct !{!13479, !13471, !13480}
!13480 = !DILocation(line: 8855, column: 7, scope: !13468)
!13481 = !DILocation(line: 8859, column: 17, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13462, file: !3, line: 8859, column: 7)
!13483 = !DILocation(line: 8859, column: 12, scope: !13482)
!13484 = !DILocation(line: 0, scope: !13482)
!13485 = !DILocation(line: 0, scope: !13462)
!13486 = !DILocation(line: 8859, column: 7, scope: !13482)
!13487 = !DILocation(line: 8860, column: 32, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !3, line: 8860, column: 6)
!13489 = distinct !DILexicalBlock(scope: !13482, file: !3, line: 8859, column: 7)
!13490 = !DILocation(line: 8860, column: 6, scope: !13488)
!13491 = !DILocation(line: 8860, column: 6, scope: !13489)
!13492 = !DILocation(line: 8859, column: 49, scope: !13489)
!13493 = !DILocation(line: 8859, column: 7, scope: !13489)
!13494 = distinct !{!13494, !13486, !13495}
!13495 = !DILocation(line: 8861, column: 4, scope: !13482)
!13496 = !DILocation(line: 8862, column: 14, scope: !13462)
!13497 = !DILocation(line: 8866, column: 1, scope: !13454)
!13498 = !DILocation(line: 0, scope: !13463)
!13499 = distinct !DISubprogram(name: "warn_array_subscript_with_type_char", scope: !3, file: !3, line: 8876, type: !6221, scopeLine: 8877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13500)
!13500 = !{!13501}
!13501 = !DILocalVariable(name: "index", arg: 1, scope: !13499, file: !3, line: 8876, type: !1527)
!13502 = !DILocation(line: 0, scope: !13499)
!13503 = !DILocation(line: 8878, column: 7, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13499, file: !3, line: 8878, column: 7)
!13505 = !DILocation(line: 8878, column: 48, scope: !13504)
!13506 = !DILocation(line: 8878, column: 45, scope: !13504)
!13507 = !DILocation(line: 8879, column: 7, scope: !13504)
!13508 = !DILocation(line: 8879, column: 10, scope: !13504)
!13509 = !DILocation(line: 8879, column: 28, scope: !13504)
!13510 = !DILocation(line: 8878, column: 7, scope: !13499)
!13511 = !DILocation(line: 8880, column: 5, scope: !13504)
!13512 = !DILocation(line: 8881, column: 1, scope: !13499)
!13513 = distinct !DISubprogram(name: "warn_about_parentheses", scope: !3, file: !3, line: 8893, type: !13514, scopeLine: 8896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13516)
!13514 = !DISubroutineType(types: !13515)
!13515 = !{null, !139, !139, !1527, !139, !1527}
!13516 = !{!13517, !13518, !13519, !13520, !13521}
!13517 = !DILocalVariable(name: "code", arg: 1, scope: !13513, file: !3, line: 8893, type: !139)
!13518 = !DILocalVariable(name: "code_left", arg: 2, scope: !13513, file: !3, line: 8894, type: !139)
!13519 = !DILocalVariable(name: "arg_left", arg: 3, scope: !13513, file: !3, line: 8894, type: !1527)
!13520 = !DILocalVariable(name: "code_right", arg: 4, scope: !13513, file: !3, line: 8895, type: !139)
!13521 = !DILocalVariable(name: "arg_right", arg: 5, scope: !13513, file: !3, line: 8895, type: !1527)
!13522 = !DILocation(line: 0, scope: !13513)
!13523 = !DILocation(line: 8897, column: 8, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 8897, column: 7)
!13525 = !DILocation(line: 8897, column: 7, scope: !13513)
!13526 = !DILocation(line: 8910, column: 3, scope: !13513)
!13527 = !DILocation(line: 8913, column: 21, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 8913, column: 11)
!13529 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 8911, column: 5)
!13530 = !DILocation(line: 8913, column: 48, scope: !13528)
!13531 = !DILocation(line: 8913, column: 34, scope: !13528)
!13532 = !DILocation(line: 8914, column: 2, scope: !13528)
!13533 = !DILocation(line: 8916, column: 26, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13528, file: !3, line: 8916, column: 16)
!13535 = !DILocation(line: 8916, column: 54, scope: !13534)
!13536 = !DILocation(line: 8916, column: 40, scope: !13534)
!13537 = !DILocation(line: 8917, column: 2, scope: !13534)
!13538 = !DILocation(line: 8922, column: 21, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 8922, column: 11)
!13540 = !DILocation(line: 8922, column: 48, scope: !13539)
!13541 = !DILocation(line: 8922, column: 34, scope: !13539)
!13542 = !DILocation(line: 8923, column: 2, scope: !13539)
!13543 = !DILocation(line: 8925, column: 26, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13539, file: !3, line: 8925, column: 16)
!13545 = !DILocation(line: 8925, column: 54, scope: !13544)
!13546 = !DILocation(line: 8925, column: 40, scope: !13544)
!13547 = !DILocation(line: 8926, column: 2, scope: !13544)
!13548 = !DILocation(line: 8931, column: 21, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 8931, column: 11)
!13550 = !DILocation(line: 8931, column: 55, scope: !13549)
!13551 = !DILocation(line: 8931, column: 41, scope: !13549)
!13552 = !DILocation(line: 8932, column: 2, scope: !13549)
!13553 = !DILocation(line: 8937, column: 37, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 8937, column: 11)
!13555 = !DILocation(line: 8939, column: 34, scope: !13554)
!13556 = !DILocation(line: 8941, column: 2, scope: !13554)
!13557 = !DILocation(line: 8944, column: 16, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13554, file: !3, line: 8944, column: 16)
!13559 = !DILocation(line: 8944, column: 44, scope: !13558)
!13560 = !DILocation(line: 8945, column: 9, scope: !13558)
!13561 = !DILocation(line: 8945, column: 12, scope: !13558)
!13562 = !DILocation(line: 8945, column: 41, scope: !13558)
!13563 = !DILocation(line: 8944, column: 16, scope: !13554)
!13564 = !DILocation(line: 8946, column: 2, scope: !13558)
!13565 = !DILocation(line: 8949, column: 26, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 8949, column: 16)
!13567 = !DILocation(line: 8950, column: 9, scope: !13566)
!13568 = !DILocation(line: 8950, column: 13, scope: !13566)
!13569 = !DILocation(line: 8949, column: 16, scope: !13558)
!13570 = !DILocation(line: 8951, column: 2, scope: !13566)
!13571 = !DILocation(line: 8957, column: 4, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 8956, column: 11)
!13573 = !DILocation(line: 8959, column: 4, scope: !13572)
!13574 = !DILocation(line: 8960, column: 2, scope: !13572)
!13575 = !DILocation(line: 8963, column: 16, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13572, file: !3, line: 8963, column: 16)
!13577 = !DILocation(line: 8963, column: 44, scope: !13576)
!13578 = !DILocation(line: 8964, column: 9, scope: !13576)
!13579 = !DILocation(line: 8964, column: 12, scope: !13576)
!13580 = !DILocation(line: 8964, column: 41, scope: !13576)
!13581 = !DILocation(line: 8963, column: 16, scope: !13572)
!13582 = !DILocation(line: 8965, column: 2, scope: !13576)
!13583 = !DILocation(line: 8970, column: 21, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 8970, column: 11)
!13585 = !DILocation(line: 8970, column: 48, scope: !13584)
!13586 = !DILocation(line: 8970, column: 34, scope: !13584)
!13587 = !DILocation(line: 8971, column: 2, scope: !13584)
!13588 = !DILocation(line: 8973, column: 26, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 8973, column: 16)
!13590 = !DILocation(line: 8973, column: 54, scope: !13589)
!13591 = !DILocation(line: 8973, column: 40, scope: !13589)
!13592 = !DILocation(line: 8974, column: 2, scope: !13589)
!13593 = !DILocation(line: 8977, column: 16, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13589, file: !3, line: 8977, column: 16)
!13595 = !DILocation(line: 8977, column: 44, scope: !13594)
!13596 = !DILocation(line: 8978, column: 9, scope: !13594)
!13597 = !DILocation(line: 8978, column: 12, scope: !13594)
!13598 = !DILocation(line: 8978, column: 41, scope: !13594)
!13599 = !DILocation(line: 8977, column: 16, scope: !13589)
!13600 = !DILocation(line: 8979, column: 2, scope: !13594)
!13601 = !DILocation(line: 8982, column: 26, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 8982, column: 16)
!13603 = !DILocation(line: 8983, column: 9, scope: !13602)
!13604 = !DILocation(line: 8983, column: 13, scope: !13602)
!13605 = !DILocation(line: 8982, column: 16, scope: !13594)
!13606 = !DILocation(line: 8984, column: 2, scope: !13602)
!13607 = !DILocation(line: 8989, column: 11, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 8989, column: 11)
!13609 = !DILocation(line: 8989, column: 39, scope: !13608)
!13610 = !DILocation(line: 8990, column: 11, scope: !13608)
!13611 = !DILocation(line: 8990, column: 14, scope: !13608)
!13612 = !DILocation(line: 8990, column: 43, scope: !13608)
!13613 = !DILocation(line: 8989, column: 11, scope: !13529)
!13614 = !DILocation(line: 8991, column: 2, scope: !13608)
!13615 = !DILocation(line: 8995, column: 11, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 8995, column: 11)
!13617 = !DILocation(line: 8995, column: 39, scope: !13616)
!13618 = !DILocation(line: 8996, column: 11, scope: !13616)
!13619 = !DILocation(line: 8996, column: 14, scope: !13616)
!13620 = !DILocation(line: 8996, column: 43, scope: !13616)
!13621 = !DILocation(line: 8995, column: 11, scope: !13529)
!13622 = !DILocation(line: 8997, column: 2, scope: !13616)
!13623 = !DILocation(line: 9002, column: 11, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 9002, column: 11)
!13625 = !DILocation(line: 9002, column: 34, scope: !13624)
!13626 = !DILocation(line: 9003, column: 5, scope: !13624)
!13627 = !DILocation(line: 9003, column: 10, scope: !13624)
!13628 = !DILocation(line: 9003, column: 38, scope: !13624)
!13629 = !DILocation(line: 9004, column: 3, scope: !13624)
!13630 = !DILocation(line: 9005, column: 6, scope: !13624)
!13631 = !DILocation(line: 9006, column: 9, scope: !13624)
!13632 = !DILocation(line: 9006, column: 13, scope: !13624)
!13633 = !DILocation(line: 9006, column: 42, scope: !13624)
!13634 = !DILocation(line: 9007, column: 6, scope: !13624)
!13635 = !DILocation(line: 9008, column: 9, scope: !13624)
!13636 = !DILocation(line: 9002, column: 11, scope: !13529)
!13637 = !DILocation(line: 9009, column: 2, scope: !13624)
!13638 = !DILocation(line: 9014, column: 1, scope: !13513)
!13639 = distinct !DISubprogram(name: "warn_for_unused_label", scope: !3, file: !3, line: 9019, type: !6221, scopeLine: 9020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13640)
!13640 = !{!13641}
!13641 = !DILocalVariable(name: "label", arg: 1, scope: !13639, file: !3, line: 9019, type: !1527)
!13642 = !DILocation(line: 0, scope: !13639)
!13643 = !DILocation(line: 9021, column: 8, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13639, file: !3, line: 9021, column: 7)
!13645 = !DILocation(line: 9021, column: 7, scope: !13639)
!13646 = !DILocation(line: 9023, column: 11, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13648, file: !3, line: 9023, column: 11)
!13648 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 9022, column: 5)
!13649 = !DILocation(line: 9023, column: 11, scope: !13648)
!13650 = !DILocation(line: 9024, column: 2, scope: !13647)
!13651 = !DILocation(line: 9026, column: 9, scope: !13647)
!13652 = !DILocation(line: 9028, column: 1, scope: !13639)
!13653 = distinct !DISubprogram(name: "warn_for_div_by_zero", scope: !3, file: !3, line: 9038, type: !6267, scopeLine: 9039, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13654)
!13654 = !{!13655, !13656}
!13655 = !DILocalVariable(name: "loc", arg: 1, scope: !13653, file: !3, line: 9038, type: !1651)
!13656 = !DILocalVariable(name: "divisor", arg: 2, scope: !13653, file: !3, line: 9038, type: !1527)
!13657 = !DILocation(line: 0, scope: !13653)
!13658 = !DILocation(line: 9044, column: 7, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13653, file: !3, line: 9044, column: 7)
!13660 = !DILocation(line: 9044, column: 37, scope: !13659)
!13661 = !DILocation(line: 9045, column: 7, scope: !13659)
!13662 = !DILocation(line: 9045, column: 11, scope: !13659)
!13663 = !DILocation(line: 9045, column: 35, scope: !13659)
!13664 = !DILocation(line: 9045, column: 38, scope: !13659)
!13665 = !DILocation(line: 9044, column: 7, scope: !13653)
!13666 = !DILocation(line: 9046, column: 5, scope: !13659)
!13667 = !DILocation(line: 9047, column: 1, scope: !13653)
!13668 = distinct !DISubprogram(name: "warn_for_sign_compare", scope: !3, file: !3, line: 9061, type: !13669, scopeLine: 9065, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13671)
!13669 = !DISubroutineType(types: !13670)
!13670 = !{null, !1651, !1527, !1527, !1527, !1527, !1527, !139}
!13671 = !{!13672, !13673, !13674, !13675, !13676, !13677, !13678, !13679, !13680, !13681, !13682, !13683, !13687, !13688, !13689, !13690, !13695, !13696, !13697, !13698}
!13672 = !DILocalVariable(name: "location", arg: 1, scope: !13668, file: !3, line: 9061, type: !1651)
!13673 = !DILocalVariable(name: "orig_op0", arg: 2, scope: !13668, file: !3, line: 9062, type: !1527)
!13674 = !DILocalVariable(name: "orig_op1", arg: 3, scope: !13668, file: !3, line: 9062, type: !1527)
!13675 = !DILocalVariable(name: "op0", arg: 4, scope: !13668, file: !3, line: 9063, type: !1527)
!13676 = !DILocalVariable(name: "op1", arg: 5, scope: !13668, file: !3, line: 9063, type: !1527)
!13677 = !DILocalVariable(name: "result_type", arg: 6, scope: !13668, file: !3, line: 9064, type: !1527)
!13678 = !DILocalVariable(name: "resultcode", arg: 7, scope: !13668, file: !3, line: 9064, type: !139)
!13679 = !DILocalVariable(name: "op0_signed", scope: !13668, file: !3, line: 9066, type: !1520)
!13680 = !DILocalVariable(name: "op1_signed", scope: !13668, file: !3, line: 9067, type: !1520)
!13681 = !DILocalVariable(name: "unsignedp0", scope: !13668, file: !3, line: 9068, type: !1520)
!13682 = !DILocalVariable(name: "unsignedp1", scope: !13668, file: !3, line: 9068, type: !1520)
!13683 = !DILocalVariable(name: "sop", scope: !13684, file: !3, line: 9092, type: !1527)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !3, line: 9091, column: 5)
!13685 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 9088, column: 12)
!13686 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 9085, column: 7)
!13687 = !DILocalVariable(name: "uop", scope: !13684, file: !3, line: 9092, type: !1527)
!13688 = !DILocalVariable(name: "base_type", scope: !13684, file: !3, line: 9092, type: !1527)
!13689 = !DILocalVariable(name: "ovf", scope: !13684, file: !3, line: 9093, type: !1519)
!13690 = !DILocalVariable(name: "primop", scope: !13691, file: !3, line: 9153, type: !1527)
!13691 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 9152, column: 9)
!13692 = distinct !DILexicalBlock(scope: !13693, file: !3, line: 9151, column: 11)
!13693 = distinct !DILexicalBlock(scope: !13694, file: !3, line: 9145, column: 5)
!13694 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 9143, column: 7)
!13695 = !DILocalVariable(name: "constant", scope: !13691, file: !3, line: 9154, type: !1582)
!13696 = !DILocalVariable(name: "mask", scope: !13691, file: !3, line: 9154, type: !1582)
!13697 = !DILocalVariable(name: "unsignedp", scope: !13691, file: !3, line: 9155, type: !1520)
!13698 = !DILocalVariable(name: "bits", scope: !13691, file: !3, line: 9156, type: !7)
!13699 = !DILocation(line: 0, scope: !13668)
!13700 = !DILocation(line: 9066, column: 21, scope: !13668)
!13701 = !DILocation(line: 9066, column: 20, scope: !13668)
!13702 = !DILocation(line: 9067, column: 21, scope: !13668)
!13703 = !DILocation(line: 9067, column: 20, scope: !13668)
!13704 = !DILocation(line: 9068, column: 3, scope: !13668)
!13705 = !DILocation(line: 9071, column: 7, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 9071, column: 7)
!13707 = !DILocation(line: 9072, column: 7, scope: !13706)
!13708 = !DILocation(line: 9072, column: 43, scope: !13706)
!13709 = !DILocation(line: 9073, column: 7, scope: !13706)
!13710 = !DILocation(line: 9073, column: 43, scope: !13706)
!13711 = !DILocation(line: 9074, column: 7, scope: !13706)
!13712 = !DILocation(line: 9074, column: 10, scope: !13706)
!13713 = !DILocation(line: 9075, column: 6, scope: !13706)
!13714 = !DILocation(line: 9075, column: 3, scope: !13706)
!13715 = !DILocation(line: 9071, column: 7, scope: !13668)
!13716 = !DILocation(line: 9077, column: 7, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 9076, column: 5)
!13718 = !DILocation(line: 9080, column: 5, scope: !13717)
!13719 = !DILocation(line: 9085, column: 8, scope: !13686)
!13720 = !DILocation(line: 9088, column: 23, scope: !13685)
!13721 = !DILocation(line: 9085, column: 7, scope: !13668)
!13722 = !DILocation(line: 0, scope: !13684)
!13723 = !DILocation(line: 9093, column: 7, scope: !13684)
!13724 = !DILocation(line: 9095, column: 11, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13684, file: !3, line: 9095, column: 11)
!13726 = !DILocation(line: 9100, column: 7, scope: !13684)
!13727 = distinct !{!13727, !13726, !13726}
!13728 = !DILocation(line: 9101, column: 7, scope: !13684)
!13729 = distinct !{!13729, !13728, !13728}
!13730 = !DILocation(line: 9102, column: 44, scope: !13684)
!13731 = !DILocation(line: 9102, column: 20, scope: !13684)
!13732 = !DILocation(line: 9103, column: 8, scope: !13684)
!13733 = !DILocation(line: 9109, column: 11, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13684, file: !3, line: 9109, column: 11)
!13735 = !DILocation(line: 9109, column: 11, scope: !13684)
!13736 = !DILocation(line: 9114, column: 16, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13734, file: !3, line: 9114, column: 16)
!13738 = !DILocation(line: 9114, column: 32, scope: !13737)
!13739 = !DILocation(line: 9115, column: 42, scope: !13737)
!13740 = !DILocation(line: 9115, column: 16, scope: !13737)
!13741 = !DILocation(line: 9116, column: 34, scope: !13737)
!13742 = !DILocation(line: 9116, column: 12, scope: !13737)
!13743 = !DILocation(line: 9114, column: 16, scope: !13734)
!13744 = !DILocation(line: 9121, column: 17, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13737, file: !3, line: 9121, column: 16)
!13746 = !DILocation(line: 9121, column: 33, scope: !13745)
!13747 = !DILocation(line: 9121, column: 36, scope: !13745)
!13748 = !DILocation(line: 9121, column: 52, scope: !13745)
!13749 = !DILocation(line: 9122, column: 16, scope: !13745)
!13750 = !DILocation(line: 9122, column: 19, scope: !13745)
!13751 = !DILocation(line: 9122, column: 47, scope: !13745)
!13752 = !DILocation(line: 9123, column: 16, scope: !13745)
!13753 = !DILocation(line: 9123, column: 36, scope: !13745)
!13754 = !DILocation(line: 9124, column: 8, scope: !13745)
!13755 = !DILocation(line: 9123, column: 19, scope: !13745)
!13756 = !DILocation(line: 9121, column: 16, scope: !13737)
!13757 = !DILocation(line: 9127, column: 9, scope: !13745)
!13758 = !DILocation(line: 9130, column: 5, scope: !13685)
!13759 = !DILocation(line: 9140, column: 9, scope: !13668)
!13760 = !DILocation(line: 9141, column: 9, scope: !13668)
!13761 = !DILocation(line: 9143, column: 8, scope: !13694)
!13762 = !DILocation(line: 9143, column: 24, scope: !13694)
!13763 = !DILocation(line: 9144, column: 10, scope: !13694)
!13764 = !DILocation(line: 9144, column: 26, scope: !13694)
!13765 = !DILocation(line: 9144, column: 7, scope: !13694)
!13766 = !DILocation(line: 9143, column: 7, scope: !13668)
!13767 = !DILocation(line: 9146, column: 11, scope: !13693)
!13768 = !DILocation(line: 9147, column: 22, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13693, file: !3, line: 9146, column: 11)
!13770 = !DILocation(line: 9147, column: 8, scope: !13769)
!13771 = !DILocation(line: 9148, column: 11, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13693, file: !3, line: 9148, column: 11)
!13773 = !DILocation(line: 9147, column: 2, scope: !13769)
!13774 = !DILocation(line: 9148, column: 27, scope: !13772)
!13775 = !DILocation(line: 9148, column: 11, scope: !13693)
!13776 = !DILocation(line: 9149, column: 22, scope: !13772)
!13777 = !DILocation(line: 9149, column: 8, scope: !13772)
!13778 = !DILocation(line: 9149, column: 2, scope: !13772)
!13779 = !DILocation(line: 9151, column: 11, scope: !13692)
!13780 = !DILocation(line: 9151, column: 34, scope: !13692)
!13781 = !DILocation(line: 9151, column: 37, scope: !13692)
!13782 = !DILocation(line: 9151, column: 11, scope: !13693)
!13783 = !DILocation(line: 9158, column: 15, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13691, file: !3, line: 9158, column: 15)
!13785 = !DILocation(line: 9158, column: 15, scope: !13691)
!13786 = !DILocation(line: 0, scope: !13691)
!13787 = !DILocation(line: 9161, column: 27, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13784, file: !3, line: 9159, column: 13)
!13789 = !DILocation(line: 9162, column: 26, scope: !13788)
!13790 = !DILocation(line: 9163, column: 13, scope: !13788)
!13791 = !DILocation(line: 9167, column: 27, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13784, file: !3, line: 9165, column: 13)
!13793 = !DILocation(line: 9168, column: 26, scope: !13792)
!13794 = !DILocation(line: 0, scope: !13784)
!13795 = !DILocation(line: 9171, column: 18, scope: !13691)
!13796 = !DILocation(line: 9172, column: 22, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13691, file: !3, line: 9172, column: 15)
!13798 = !DILocation(line: 9172, column: 20, scope: !13797)
!13799 = !DILocation(line: 9173, column: 23, scope: !13797)
!13800 = !DILocation(line: 9173, column: 15, scope: !13797)
!13801 = !DILocation(line: 9173, column: 47, scope: !13797)
!13802 = !DILocation(line: 9175, column: 44, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13797, file: !3, line: 9174, column: 13)
!13804 = !DILocation(line: 9176, column: 25, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13803, file: !3, line: 9176, column: 19)
!13806 = !DILocation(line: 9176, column: 37, scope: !13805)
!13807 = !DILocation(line: 9176, column: 19, scope: !13803)
!13808 = !DILocation(line: 9178, column: 18, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 9178, column: 9)
!13810 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 9177, column: 3)
!13811 = !DILocation(line: 9178, column: 9, scope: !13810)
!13812 = !DILocation(line: 9179, column: 7, scope: !13809)
!13813 = !DILocation(line: 9182, column: 7, scope: !13809)
!13814 = !DILocation(line: 9187, column: 16, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 9187, column: 16)
!13816 = !DILocation(line: 9187, column: 30, scope: !13815)
!13817 = !DILocation(line: 9187, column: 27, scope: !13815)
!13818 = !DILocation(line: 9188, column: 20, scope: !13815)
!13819 = !DILocation(line: 9189, column: 22, scope: !13815)
!13820 = !DILocation(line: 9189, column: 20, scope: !13815)
!13821 = !DILocation(line: 9190, column: 16, scope: !13815)
!13822 = !DILocation(line: 9190, column: 20, scope: !13815)
!13823 = !DILocation(line: 9191, column: 20, scope: !13815)
!13824 = !DILocation(line: 9187, column: 16, scope: !13692)
!13825 = !DILocation(line: 9192, column: 9, scope: !13815)
!13826 = !DILocation(line: 9195, column: 1, scope: !13668)
!13827 = distinct !DISubprogram(name: "set_underlying_type", scope: !3, file: !3, line: 9238, type: !6221, scopeLine: 9239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13828)
!13828 = !{!13829, !13830}
!13829 = !DILocalVariable(name: "x", arg: 1, scope: !13827, file: !3, line: 9238, type: !1527)
!13830 = !DILocalVariable(name: "tt", scope: !13831, file: !3, line: 9250, type: !1527)
!13831 = distinct !DILexicalBlock(scope: !13832, file: !3, line: 9249, column: 5)
!13832 = distinct !DILexicalBlock(scope: !13833, file: !3, line: 9247, column: 12)
!13833 = distinct !DILexicalBlock(scope: !13827, file: !3, line: 9242, column: 7)
!13834 = !DILocation(line: 0, scope: !13827)
!13835 = !DILocation(line: 9240, column: 12, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13827, file: !3, line: 9240, column: 7)
!13837 = !DILocation(line: 9240, column: 9, scope: !13836)
!13838 = !DILocation(line: 9240, column: 7, scope: !13827)
!13839 = !DILocation(line: 9242, column: 7, scope: !13833)
!13840 = !DILocation(line: 0, scope: !13833)
!13841 = !DILocation(line: 9242, column: 7, scope: !13827)
!13842 = !DILocation(line: 9244, column: 11, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 9244, column: 11)
!13844 = distinct !DILexicalBlock(scope: !13833, file: !3, line: 9243, column: 5)
!13845 = !DILocation(line: 9244, column: 37, scope: !13843)
!13846 = !DILocation(line: 9244, column: 11, scope: !13844)
!13847 = !DILocation(line: 9245, column: 2, scope: !13843)
!13848 = !DILocation(line: 9245, column: 28, scope: !13843)
!13849 = !DILocation(line: 9247, column: 26, scope: !13832)
!13850 = !DILocation(line: 9248, column: 5, scope: !13832)
!13851 = !DILocation(line: 9248, column: 8, scope: !13832)
!13852 = !DILocation(line: 9248, column: 31, scope: !13832)
!13853 = !DILocation(line: 9247, column: 12, scope: !13833)
!13854 = !DILocation(line: 0, scope: !13831)
!13855 = !DILocation(line: 9251, column: 30, scope: !13831)
!13856 = !DILocation(line: 9252, column: 12, scope: !13831)
!13857 = !DILocation(line: 9253, column: 29, scope: !13831)
!13858 = !DILocation(line: 9253, column: 7, scope: !13831)
!13859 = !DILocation(line: 9253, column: 27, scope: !13831)
!13860 = !DILocation(line: 9254, column: 7, scope: !13831)
!13861 = !DILocation(line: 9254, column: 22, scope: !13831)
!13862 = !DILocation(line: 9255, column: 24, scope: !13831)
!13863 = !DILocation(line: 9255, column: 7, scope: !13831)
!13864 = !DILocation(line: 9255, column: 22, scope: !13831)
!13865 = !DILocation(line: 9256, column: 21, scope: !13831)
!13866 = !DILocation(line: 9257, column: 5, scope: !13831)
!13867 = !DILocation(line: 9258, column: 1, scope: !13827)
!13868 = distinct !DISubprogram(name: "is_typedef_decl", scope: !3, file: !3, line: 9263, type: !12060, scopeLine: 9264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13869)
!13869 = !{!13870}
!13870 = !DILocalVariable(name: "x", arg: 1, scope: !13868, file: !3, line: 9263, type: !1527)
!13871 = !DILocation(line: 0, scope: !13868)
!13872 = !DILocation(line: 9265, column: 11, scope: !13868)
!13873 = !DILocation(line: 9265, column: 13, scope: !13868)
!13874 = !DILocation(line: 9265, column: 16, scope: !13868)
!13875 = !DILocation(line: 9265, column: 30, scope: !13868)
!13876 = !DILocation(line: 9266, column: 11, scope: !13868)
!13877 = !DILocation(line: 9266, column: 14, scope: !13868)
!13878 = !DILocation(line: 9266, column: 37, scope: !13868)
!13879 = !DILocation(line: 9265, column: 3, scope: !13868)
!13880 = distinct !DISubprogram(name: "record_types_used_by_current_var_decl", scope: !3, file: !3, line: 9276, type: !6221, scopeLine: 9277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13881)
!13881 = !{!13882, !13883, !13886}
!13882 = !DILocalVariable(name: "decl", arg: 1, scope: !13880, file: !3, line: 9276, type: !1527)
!13883 = !DILocalVariable(name: "node", scope: !13884, file: !3, line: 9282, type: !1527)
!13884 = distinct !DILexicalBlock(scope: !13885, file: !3, line: 9281, column: 5)
!13885 = distinct !DILexicalBlock(scope: !13880, file: !3, line: 9280, column: 7)
!13886 = !DILocalVariable(name: "type", scope: !13887, file: !3, line: 9287, type: !1527)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 9286, column: 7)
!13888 = distinct !DILexicalBlock(scope: !13889, file: !3, line: 9283, column: 7)
!13889 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 9283, column: 7)
!13890 = !DILocation(line: 0, scope: !13880)
!13891 = !DILocation(line: 9278, column: 3, scope: !13880)
!13892 = !DILocation(line: 9280, column: 7, scope: !13885)
!13893 = !DILocation(line: 9280, column: 7, scope: !13880)
!13894 = !DILocation(line: 9283, column: 12, scope: !13889)
!13895 = !DILocation(line: 0, scope: !13889)
!13896 = !DILocation(line: 0, scope: !13884)
!13897 = !DILocation(line: 9283, column: 7, scope: !13889)
!13898 = !DILocation(line: 9287, column: 14, scope: !13887)
!13899 = !DILocation(line: 0, scope: !13887)
!13900 = !DILocation(line: 9288, column: 2, scope: !13887)
!13901 = !DILocation(line: 9285, column: 12, scope: !13888)
!13902 = !DILocation(line: 9283, column: 7, scope: !13888)
!13903 = distinct !{!13903, !13897, !13904}
!13904 = !DILocation(line: 9289, column: 7, scope: !13889)
!13905 = !DILocation(line: 9290, column: 34, scope: !13884)
!13906 = !DILocation(line: 9291, column: 5, scope: !13884)
!13907 = !DILocation(line: 9292, column: 1, scope: !13880)
!13908 = distinct !DISubprogram(name: "make_tree_vector", scope: !3, file: !3, line: 9308, type: !13909, scopeLine: 9309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3142)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{!2519}
!13911 = !DILocation(line: 9310, column: 8, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13908, file: !3, line: 9310, column: 7)
!13913 = !DILocation(line: 9310, column: 7, scope: !13908)
!13914 = !DILocation(line: 9311, column: 12, scope: !13912)
!13915 = !DILocation(line: 9311, column: 5, scope: !13912)
!13916 = !DILocation(line: 9317, column: 14, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13912, file: !3, line: 9313, column: 5)
!13918 = !DILocation(line: 9317, column: 7, scope: !13917)
!13919 = !DILocation(line: 0, scope: !13912)
!13920 = !DILocation(line: 9319, column: 1, scope: !13908)
!13921 = distinct !DISubprogram(name: "VEC_tree_gc_vec_base_length", scope: !3, file: !3, line: 9299, type: !13922, scopeLine: 9299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13926)
!13922 = !DISubroutineType(types: !13923)
!13923 = !{!7, !13924}
!13924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13925, size: 64)
!13925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!13926 = !{!13927}
!13927 = !DILocalVariable(name: "vec_", arg: 1, scope: !13921, file: !3, line: 9299, type: !13924)
!13928 = !DILocation(line: 0, scope: !13921)
!13929 = !DILocation(line: 9299, column: 1, scope: !13921)
!13930 = distinct !DISubprogram(name: "VEC_tree_gc_vec_base_pop", scope: !3, file: !3, line: 9299, type: !13931, scopeLine: 9299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13934)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{!2829, !13933}
!13933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!13934 = !{!13935, !13936}
!13935 = !DILocalVariable(name: "vec_", arg: 1, scope: !13930, file: !3, line: 9299, type: !13933)
!13936 = !DILocalVariable(name: "obj_", scope: !13930, file: !3, line: 9299, type: !2829)
!13937 = !DILocation(line: 0, scope: !13930)
!13938 = !DILocation(line: 9299, column: 1, scope: !13930)
!13939 = distinct !DISubprogram(name: "VEC_tree_gc_alloc", scope: !140, file: !140, line: 183, type: !13940, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{!2519, !1520}
!13942 = !{!13943}
!13943 = !DILocalVariable(name: "alloc_", arg: 1, scope: !13939, file: !140, line: 183, type: !1520)
!13944 = !DILocation(line: 0, scope: !13939)
!13945 = !DILocation(line: 183, column: 1, scope: !13939)
!13946 = distinct !DISubprogram(name: "release_tree_vector", scope: !3, file: !3, line: 9324, type: !13947, scopeLine: 9325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13949)
!13947 = !DISubroutineType(types: !13948)
!13948 = !{null, !2519}
!13949 = !{!13950}
!13950 = !DILocalVariable(name: "vec", arg: 1, scope: !13946, file: !3, line: 9324, type: !2519)
!13951 = !DILocation(line: 0, scope: !13946)
!13952 = !DILocation(line: 9326, column: 11, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13946, file: !3, line: 9326, column: 7)
!13954 = !DILocation(line: 9326, column: 7, scope: !13946)
!13955 = !DILocation(line: 9328, column: 7, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13953, file: !3, line: 9327, column: 5)
!13957 = !DILocation(line: 9329, column: 7, scope: !13956)
!13958 = !DILocation(line: 9330, column: 5, scope: !13956)
!13959 = !DILocation(line: 9331, column: 1, scope: !13946)
!13960 = distinct !DISubprogram(name: "VEC_tree_base_truncate", scope: !140, file: !140, line: 182, type: !13961, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13964)
!13961 = !DISubroutineType(types: !13962)
!13962 = !{null, !13963, !7}
!13963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!13964 = !{!13965, !13966}
!13965 = !DILocalVariable(name: "vec_", arg: 1, scope: !13960, file: !140, line: 182, type: !13963)
!13966 = !DILocalVariable(name: "size_", arg: 2, scope: !13960, file: !140, line: 182, type: !7)
!13967 = !DILocation(line: 0, scope: !13960)
!13968 = !DILocation(line: 182, column: 1, scope: !13960)
!13969 = !DILocation(line: 182, column: 1, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13960, file: !140, line: 182, column: 1)
!13971 = distinct !DISubprogram(name: "VEC_tree_gc_vec_gc_safe_push", scope: !3, file: !3, line: 9300, type: !13972, scopeLine: 9300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13976)
!13972 = !DISubroutineType(types: !13973)
!13973 = !{!13974, !13975, !2829}
!13974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!13975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!13976 = !{!13977, !13978}
!13977 = !DILocalVariable(name: "vec_", arg: 1, scope: !13971, file: !3, line: 9300, type: !13975)
!13978 = !DILocalVariable(name: "obj_", arg: 2, scope: !13971, file: !3, line: 9300, type: !2829)
!13979 = !DILocation(line: 0, scope: !13971)
!13980 = !DILocation(line: 9300, column: 1, scope: !13971)
!13981 = distinct !DISubprogram(name: "make_tree_vector_single", scope: !3, file: !3, line: 9336, type: !13982, scopeLine: 9337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13984)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{!2519, !1527}
!13984 = !{!13985, !13986}
!13985 = !DILocalVariable(name: "t", arg: 1, scope: !13981, file: !3, line: 9336, type: !1527)
!13986 = !DILocalVariable(name: "ret", scope: !13981, file: !3, line: 9338, type: !2519)
!13987 = !DILocation(line: 0, scope: !13981)
!13988 = !DILocation(line: 9338, column: 23, scope: !13981)
!13989 = !DILocation(line: 9339, column: 3, scope: !13981)
!13990 = !DILocation(line: 9340, column: 3, scope: !13981)
!13991 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !140, file: !140, line: 182, type: !13992, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13994)
!13992 = !DISubroutineType(types: !13993)
!13993 = !{!1886, !13963, !1527}
!13994 = !{!13995, !13996, !13997}
!13995 = !DILocalVariable(name: "vec_", arg: 1, scope: !13991, file: !140, line: 182, type: !13963)
!13996 = !DILocalVariable(name: "obj_", arg: 2, scope: !13991, file: !140, line: 182, type: !1527)
!13997 = !DILocalVariable(name: "slot_", scope: !13991, file: !140, line: 182, type: !1886)
!13998 = !DILocation(line: 0, scope: !13991)
!13999 = !DILocation(line: 182, column: 1, scope: !13991)
!14000 = distinct !DISubprogram(name: "make_tree_vector_copy", scope: !3, file: !3, line: 9346, type: !14001, scopeLine: 9347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14005)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!2519, !14003}
!14003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14004, size: 64)
!14004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2520)
!14005 = !{!14006, !14007, !14008, !14009}
!14006 = !DILocalVariable(name: "orig", arg: 1, scope: !14000, file: !3, line: 9346, type: !14003)
!14007 = !DILocalVariable(name: "ret", scope: !14000, file: !3, line: 9348, type: !2519)
!14008 = !DILocalVariable(name: "ix", scope: !14000, file: !3, line: 9349, type: !7)
!14009 = !DILocalVariable(name: "t", scope: !14000, file: !3, line: 9350, type: !1527)
!14010 = !DILocation(line: 0, scope: !14000)
!14011 = !DILocation(line: 9348, column: 3, scope: !14000)
!14012 = !DILocation(line: 9350, column: 3, scope: !14000)
!14013 = !DILocation(line: 9352, column: 9, scope: !14000)
!14014 = !DILocation(line: 9352, column: 7, scope: !14000)
!14015 = !DILocation(line: 9353, column: 3, scope: !14000)
!14016 = !DILocation(line: 9354, column: 8, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14000, file: !3, line: 9354, column: 3)
!14018 = !DILocation(line: 0, scope: !14017)
!14019 = !DILocation(line: 9354, column: 16, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !14017, file: !3, line: 9354, column: 3)
!14021 = !DILocation(line: 9354, column: 3, scope: !14017)
!14022 = !DILocation(line: 9355, column: 5, scope: !14020)
!14023 = !DILocation(line: 9354, column: 49, scope: !14020)
!14024 = !DILocation(line: 9354, column: 3, scope: !14020)
!14025 = distinct !{!14025, !14021, !14026}
!14026 = !DILocation(line: 9355, column: 5, scope: !14017)
!14027 = !DILocation(line: 9357, column: 1, scope: !14000)
!14028 = !DILocation(line: 9356, column: 3, scope: !14000)
!14029 = distinct !DISubprogram(name: "VEC_tree_gc_reserve", scope: !140, file: !140, line: 183, type: !14030, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14033)
!14030 = !DISubroutineType(types: !14031)
!14031 = !{!1520, !14032, !1520}
!14032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!14033 = !{!14034, !14035, !14036}
!14034 = !DILocalVariable(name: "vec_", arg: 1, scope: !14029, file: !140, line: 183, type: !14032)
!14035 = !DILocalVariable(name: "alloc_", arg: 2, scope: !14029, file: !140, line: 183, type: !1520)
!14036 = !DILocalVariable(name: "extend", scope: !14029, file: !140, line: 183, type: !1520)
!14037 = !DILocation(line: 0, scope: !14029)
!14038 = !DILocation(line: 183, column: 1, scope: !14029)
!14039 = !DILocation(line: 183, column: 1, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14029, file: !140, line: 183, column: 1)
!14041 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !140, file: !140, line: 182, type: !14042, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14044)
!14042 = !DISubroutineType(types: !14043)
!14043 = !{!7, !13421}
!14044 = !{!14045}
!14045 = !DILocalVariable(name: "vec_", arg: 1, scope: !14041, file: !140, line: 182, type: !13421)
!14046 = !DILocation(line: 0, scope: !14041)
!14047 = !DILocation(line: 182, column: 1, scope: !14041)
!14048 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !140, file: !140, line: 182, type: !14049, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14051)
!14049 = !DISubroutineType(types: !14050)
!14050 = !{!1520, !13421, !7, !1886}
!14051 = !{!14052, !14053, !14054}
!14052 = !DILocalVariable(name: "vec_", arg: 1, scope: !14048, file: !140, line: 182, type: !13421)
!14053 = !DILocalVariable(name: "ix_", arg: 2, scope: !14048, file: !140, line: 182, type: !7)
!14054 = !DILocalVariable(name: "ptr", arg: 3, scope: !14048, file: !140, line: 182, type: !1886)
!14055 = !DILocation(line: 0, scope: !14048)
!14056 = !DILocation(line: 182, column: 1, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14048, file: !140, line: 182, column: 1)
!14058 = !DILocation(line: 182, column: 1, scope: !14048)
!14059 = !DILocation(line: 182, column: 1, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14057, file: !140, line: 182, column: 1)
!14061 = !DILocation(line: 182, column: 1, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14057, file: !140, line: 182, column: 1)
!14063 = !DILocation(line: 0, scope: !14057)
!14064 = distinct !DISubprogram(name: "gt_ggc_mx_VEC_tree_gc_vec_gc", scope: !2979, file: !2979, line: 23, type: !2329, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14065)
!14065 = !{!14066, !14067, !14069, !14073}
!14066 = !DILocalVariable(name: "x_p", arg: 1, scope: !14064, file: !2979, line: 23, type: !1524)
!14067 = !DILocalVariable(name: "x", scope: !14064, file: !2979, line: 25, type: !14068)
!14068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2818)
!14069 = !DILocalVariable(name: "i0", scope: !14070, file: !2979, line: 29, type: !1997)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !2979, line: 28, column: 7)
!14071 = distinct !DILexicalBlock(scope: !14072, file: !2979, line: 27, column: 5)
!14072 = distinct !DILexicalBlock(scope: !14064, file: !2979, line: 26, column: 7)
!14073 = !DILocalVariable(name: "l0", scope: !14070, file: !2979, line: 30, type: !1997)
!14074 = !DILocation(line: 0, scope: !14064)
!14075 = !DILocation(line: 26, column: 7, scope: !14072)
!14076 = !DILocation(line: 26, column: 7, scope: !14064)
!14077 = !DILocation(line: 30, column: 42, scope: !14070)
!14078 = !DILocation(line: 30, column: 21, scope: !14070)
!14079 = !DILocation(line: 0, scope: !14070)
!14080 = !DILocation(line: 0, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14082, file: !2979, line: 32, column: 11)
!14082 = distinct !DILexicalBlock(scope: !14083, file: !2979, line: 32, column: 11)
!14083 = distinct !DILexicalBlock(scope: !14084, file: !2979, line: 31, column: 38)
!14084 = distinct !DILexicalBlock(scope: !14085, file: !2979, line: 31, column: 9)
!14085 = distinct !DILexicalBlock(scope: !14070, file: !2979, line: 31, column: 9)
!14086 = !DILocation(line: 31, column: 14, scope: !14085)
!14087 = !DILocation(line: 0, scope: !14085)
!14088 = !DILocation(line: 31, column: 25, scope: !14084)
!14089 = !DILocation(line: 31, column: 9, scope: !14085)
!14090 = !DILocation(line: 32, column: 11, scope: !14081)
!14091 = !DILocation(line: 32, column: 11, scope: !14082)
!14092 = !DILocation(line: 31, column: 34, scope: !14084)
!14093 = !DILocation(line: 31, column: 9, scope: !14084)
!14094 = distinct !{!14094, !14089, !14095}
!14095 = !DILocation(line: 33, column: 9, scope: !14085)
!14096 = !DILocation(line: 36, column: 1, scope: !14064)
!14097 = distinct !DISubprogram(name: "gt_ggc_mx_VEC_const_char_p_gc", scope: !2979, file: !2979, line: 39, type: !2329, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14098)
!14098 = !{!14099, !14100, !14102, !14106}
!14099 = !DILocalVariable(name: "x_p", arg: 1, scope: !14097, file: !2979, line: 39, type: !1524)
!14100 = !DILocalVariable(name: "x", scope: !14097, file: !2979, line: 41, type: !14101)
!14101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2830)
!14102 = !DILocalVariable(name: "i0", scope: !14103, file: !2979, line: 45, type: !1997)
!14103 = distinct !DILexicalBlock(scope: !14104, file: !2979, line: 44, column: 7)
!14104 = distinct !DILexicalBlock(scope: !14105, file: !2979, line: 43, column: 5)
!14105 = distinct !DILexicalBlock(scope: !14097, file: !2979, line: 42, column: 7)
!14106 = !DILocalVariable(name: "l0", scope: !14103, file: !2979, line: 46, type: !1997)
!14107 = !DILocation(line: 0, scope: !14097)
!14108 = !DILocation(line: 42, column: 7, scope: !14105)
!14109 = !DILocation(line: 42, column: 7, scope: !14097)
!14110 = !DILocation(line: 46, column: 42, scope: !14103)
!14111 = !DILocation(line: 46, column: 21, scope: !14103)
!14112 = !DILocation(line: 0, scope: !14103)
!14113 = !DILocation(line: 0, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !2979, line: 47, column: 38)
!14115 = distinct !DILexicalBlock(scope: !14116, file: !2979, line: 47, column: 9)
!14116 = distinct !DILexicalBlock(scope: !14103, file: !2979, line: 47, column: 9)
!14117 = !DILocation(line: 47, column: 14, scope: !14116)
!14118 = !DILocation(line: 0, scope: !14116)
!14119 = !DILocation(line: 47, column: 25, scope: !14115)
!14120 = !DILocation(line: 47, column: 9, scope: !14116)
!14121 = !DILocation(line: 48, column: 23, scope: !14114)
!14122 = !DILocation(line: 48, column: 11, scope: !14114)
!14123 = !DILocation(line: 47, column: 34, scope: !14115)
!14124 = !DILocation(line: 47, column: 9, scope: !14115)
!14125 = distinct !{!14125, !14120, !14126}
!14126 = !DILocation(line: 49, column: 9, scope: !14116)
!14127 = !DILocation(line: 52, column: 1, scope: !14097)
!14128 = distinct !DISubprogram(name: "gt_ggc_mx_sorted_fields_type", scope: !2979, file: !2979, line: 55, type: !2329, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14129)
!14129 = !{!14130, !14131, !14133, !14137}
!14130 = !DILocalVariable(name: "x_p", arg: 1, scope: !14128, file: !2979, line: 55, type: !1524)
!14131 = !DILocalVariable(name: "x", scope: !14128, file: !2979, line: 57, type: !14132)
!14132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2811)
!14133 = !DILocalVariable(name: "i0", scope: !14134, file: !2979, line: 61, type: !1997)
!14134 = distinct !DILexicalBlock(scope: !14135, file: !2979, line: 60, column: 7)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !2979, line: 59, column: 5)
!14136 = distinct !DILexicalBlock(scope: !14128, file: !2979, line: 58, column: 7)
!14137 = !DILocalVariable(name: "l0", scope: !14134, file: !2979, line: 62, type: !1997)
!14138 = !DILocation(line: 0, scope: !14128)
!14139 = !DILocation(line: 58, column: 7, scope: !14136)
!14140 = !DILocation(line: 58, column: 7, scope: !14128)
!14141 = !DILocation(line: 62, column: 37, scope: !14134)
!14142 = !DILocation(line: 62, column: 21, scope: !14134)
!14143 = !DILocation(line: 0, scope: !14134)
!14144 = !DILocation(line: 0, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14146, file: !2979, line: 64, column: 11)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !2979, line: 64, column: 11)
!14147 = distinct !DILexicalBlock(scope: !14148, file: !2979, line: 63, column: 38)
!14148 = distinct !DILexicalBlock(scope: !14149, file: !2979, line: 63, column: 9)
!14149 = distinct !DILexicalBlock(scope: !14134, file: !2979, line: 63, column: 9)
!14150 = !DILocation(line: 63, column: 14, scope: !14149)
!14151 = !DILocation(line: 0, scope: !14149)
!14152 = !DILocation(line: 63, column: 25, scope: !14148)
!14153 = !DILocation(line: 63, column: 9, scope: !14149)
!14154 = !DILocation(line: 64, column: 11, scope: !14145)
!14155 = !DILocation(line: 64, column: 11, scope: !14146)
!14156 = !DILocation(line: 63, column: 34, scope: !14148)
!14157 = !DILocation(line: 63, column: 9, scope: !14148)
!14158 = distinct !{!14158, !14153, !14159}
!14159 = !DILocation(line: 65, column: 9, scope: !14149)
!14160 = !DILocation(line: 68, column: 1, scope: !14128)
!14161 = distinct !DISubprogram(name: "gt_pch_nx_VEC_tree_gc_vec_gc", scope: !2979, file: !2979, line: 71, type: !2329, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14162)
!14162 = !{!14163, !14164, !14165, !14169}
!14163 = !DILocalVariable(name: "x_p", arg: 1, scope: !14161, file: !2979, line: 71, type: !1524)
!14164 = !DILocalVariable(name: "x", scope: !14161, file: !2979, line: 73, type: !14068)
!14165 = !DILocalVariable(name: "i0", scope: !14166, file: !2979, line: 77, type: !1997)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !2979, line: 76, column: 7)
!14167 = distinct !DILexicalBlock(scope: !14168, file: !2979, line: 75, column: 5)
!14168 = distinct !DILexicalBlock(scope: !14161, file: !2979, line: 74, column: 7)
!14169 = !DILocalVariable(name: "l0", scope: !14166, file: !2979, line: 78, type: !1997)
!14170 = !DILocation(line: 0, scope: !14161)
!14171 = !DILocation(line: 74, column: 7, scope: !14168)
!14172 = !DILocation(line: 74, column: 7, scope: !14161)
!14173 = !DILocation(line: 78, column: 42, scope: !14166)
!14174 = !DILocation(line: 78, column: 21, scope: !14166)
!14175 = !DILocation(line: 0, scope: !14166)
!14176 = !DILocation(line: 0, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !2979, line: 80, column: 11)
!14178 = distinct !DILexicalBlock(scope: !14179, file: !2979, line: 80, column: 11)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !2979, line: 79, column: 38)
!14180 = distinct !DILexicalBlock(scope: !14181, file: !2979, line: 79, column: 9)
!14181 = distinct !DILexicalBlock(scope: !14166, file: !2979, line: 79, column: 9)
!14182 = !DILocation(line: 79, column: 14, scope: !14181)
!14183 = !DILocation(line: 0, scope: !14181)
!14184 = !DILocation(line: 79, column: 25, scope: !14180)
!14185 = !DILocation(line: 79, column: 9, scope: !14181)
!14186 = !DILocation(line: 80, column: 11, scope: !14177)
!14187 = !DILocation(line: 80, column: 11, scope: !14178)
!14188 = !DILocation(line: 79, column: 34, scope: !14180)
!14189 = !DILocation(line: 79, column: 9, scope: !14180)
!14190 = distinct !{!14190, !14185, !14191}
!14191 = !DILocation(line: 81, column: 9, scope: !14181)
!14192 = !DILocation(line: 84, column: 1, scope: !14161)
!14193 = distinct !DISubprogram(name: "gt_pch_p_18VEC_tree_gc_vec_gc", scope: !2979, file: !2979, line: 119, type: !12650, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14194)
!14194 = !{!14195, !14196, !14197, !14198, !14199, !14200, !14202}
!14195 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14193, file: !2979, line: 119, type: !1524)
!14196 = !DILocalVariable(name: "x_p", arg: 2, scope: !14193, file: !2979, line: 120, type: !1524)
!14197 = !DILocalVariable(name: "op", arg: 3, scope: !14193, file: !2979, line: 121, type: !3105)
!14198 = !DILocalVariable(name: "cookie", arg: 4, scope: !14193, file: !2979, line: 122, type: !1524)
!14199 = !DILocalVariable(name: "x", scope: !14193, file: !2979, line: 124, type: !14068)
!14200 = !DILocalVariable(name: "i0", scope: !14201, file: !2979, line: 126, type: !1997)
!14201 = distinct !DILexicalBlock(scope: !14193, file: !2979, line: 125, column: 3)
!14202 = !DILocalVariable(name: "l0", scope: !14201, file: !2979, line: 127, type: !1997)
!14203 = !DILocation(line: 0, scope: !14193)
!14204 = !DILocation(line: 127, column: 38, scope: !14201)
!14205 = !DILocation(line: 127, column: 17, scope: !14201)
!14206 = !DILocation(line: 0, scope: !14201)
!14207 = !DILocation(line: 0, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14209, file: !2979, line: 129, column: 11)
!14209 = distinct !DILexicalBlock(scope: !14210, file: !2979, line: 128, column: 34)
!14210 = distinct !DILexicalBlock(scope: !14211, file: !2979, line: 128, column: 5)
!14211 = distinct !DILexicalBlock(scope: !14201, file: !2979, line: 128, column: 5)
!14212 = !DILocation(line: 128, column: 10, scope: !14211)
!14213 = !DILocation(line: 0, scope: !14211)
!14214 = !DILocation(line: 128, column: 21, scope: !14210)
!14215 = !DILocation(line: 128, column: 5, scope: !14211)
!14216 = !DILocation(line: 130, column: 15, scope: !14208)
!14217 = !DILocation(line: 130, column: 13, scope: !14208)
!14218 = !DILocation(line: 130, column: 9, scope: !14208)
!14219 = !DILocation(line: 128, column: 30, scope: !14210)
!14220 = !DILocation(line: 128, column: 5, scope: !14210)
!14221 = distinct !{!14221, !14215, !14222}
!14222 = !DILocation(line: 131, column: 5, scope: !14211)
!14223 = !DILocation(line: 133, column: 1, scope: !14193)
!14224 = distinct !DISubprogram(name: "gt_pch_nx_VEC_const_char_p_gc", scope: !2979, file: !2979, line: 87, type: !2329, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14225)
!14225 = !{!14226, !14227, !14228, !14232}
!14226 = !DILocalVariable(name: "x_p", arg: 1, scope: !14224, file: !2979, line: 87, type: !1524)
!14227 = !DILocalVariable(name: "x", scope: !14224, file: !2979, line: 89, type: !14101)
!14228 = !DILocalVariable(name: "i0", scope: !14229, file: !2979, line: 93, type: !1997)
!14229 = distinct !DILexicalBlock(scope: !14230, file: !2979, line: 92, column: 7)
!14230 = distinct !DILexicalBlock(scope: !14231, file: !2979, line: 91, column: 5)
!14231 = distinct !DILexicalBlock(scope: !14224, file: !2979, line: 90, column: 7)
!14232 = !DILocalVariable(name: "l0", scope: !14229, file: !2979, line: 94, type: !1997)
!14233 = !DILocation(line: 0, scope: !14224)
!14234 = !DILocation(line: 90, column: 7, scope: !14231)
!14235 = !DILocation(line: 90, column: 7, scope: !14224)
!14236 = !DILocation(line: 94, column: 42, scope: !14229)
!14237 = !DILocation(line: 94, column: 21, scope: !14229)
!14238 = !DILocation(line: 0, scope: !14229)
!14239 = !DILocation(line: 0, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !2979, line: 95, column: 38)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !2979, line: 95, column: 9)
!14242 = distinct !DILexicalBlock(scope: !14229, file: !2979, line: 95, column: 9)
!14243 = !DILocation(line: 95, column: 14, scope: !14242)
!14244 = !DILocation(line: 0, scope: !14242)
!14245 = !DILocation(line: 95, column: 25, scope: !14241)
!14246 = !DILocation(line: 95, column: 9, scope: !14242)
!14247 = !DILocation(line: 96, column: 23, scope: !14240)
!14248 = !DILocation(line: 96, column: 11, scope: !14240)
!14249 = !DILocation(line: 95, column: 34, scope: !14241)
!14250 = !DILocation(line: 95, column: 9, scope: !14241)
!14251 = distinct !{!14251, !14246, !14252}
!14252 = !DILocation(line: 97, column: 9, scope: !14242)
!14253 = !DILocation(line: 100, column: 1, scope: !14224)
!14254 = distinct !DISubprogram(name: "gt_pch_p_19VEC_const_char_p_gc", scope: !2979, file: !2979, line: 136, type: !12650, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14255)
!14255 = !{!14256, !14257, !14258, !14259, !14260, !14261, !14263}
!14256 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14254, file: !2979, line: 136, type: !1524)
!14257 = !DILocalVariable(name: "x_p", arg: 2, scope: !14254, file: !2979, line: 137, type: !1524)
!14258 = !DILocalVariable(name: "op", arg: 3, scope: !14254, file: !2979, line: 138, type: !3105)
!14259 = !DILocalVariable(name: "cookie", arg: 4, scope: !14254, file: !2979, line: 139, type: !1524)
!14260 = !DILocalVariable(name: "x", scope: !14254, file: !2979, line: 141, type: !14101)
!14261 = !DILocalVariable(name: "i0", scope: !14262, file: !2979, line: 143, type: !1997)
!14262 = distinct !DILexicalBlock(scope: !14254, file: !2979, line: 142, column: 3)
!14263 = !DILocalVariable(name: "l0", scope: !14262, file: !2979, line: 144, type: !1997)
!14264 = !DILocation(line: 0, scope: !14254)
!14265 = !DILocation(line: 144, column: 38, scope: !14262)
!14266 = !DILocation(line: 144, column: 17, scope: !14262)
!14267 = !DILocation(line: 0, scope: !14262)
!14268 = !DILocation(line: 0, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14270, file: !2979, line: 146, column: 11)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !2979, line: 145, column: 34)
!14271 = distinct !DILexicalBlock(scope: !14272, file: !2979, line: 145, column: 5)
!14272 = distinct !DILexicalBlock(scope: !14262, file: !2979, line: 145, column: 5)
!14273 = !DILocation(line: 145, column: 10, scope: !14272)
!14274 = !DILocation(line: 0, scope: !14272)
!14275 = !DILocation(line: 145, column: 21, scope: !14271)
!14276 = !DILocation(line: 145, column: 5, scope: !14272)
!14277 = !DILocation(line: 147, column: 15, scope: !14269)
!14278 = !DILocation(line: 147, column: 13, scope: !14269)
!14279 = !DILocation(line: 147, column: 9, scope: !14269)
!14280 = !DILocation(line: 145, column: 30, scope: !14271)
!14281 = !DILocation(line: 145, column: 5, scope: !14271)
!14282 = distinct !{!14282, !14276, !14283}
!14283 = !DILocation(line: 148, column: 5, scope: !14272)
!14284 = !DILocation(line: 150, column: 1, scope: !14254)
!14285 = distinct !DISubprogram(name: "gt_pch_nx_sorted_fields_type", scope: !2979, file: !2979, line: 103, type: !2329, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14286)
!14286 = !{!14287, !14288, !14289, !14293}
!14287 = !DILocalVariable(name: "x_p", arg: 1, scope: !14285, file: !2979, line: 103, type: !1524)
!14288 = !DILocalVariable(name: "x", scope: !14285, file: !2979, line: 105, type: !14132)
!14289 = !DILocalVariable(name: "i0", scope: !14290, file: !2979, line: 109, type: !1997)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !2979, line: 108, column: 7)
!14291 = distinct !DILexicalBlock(scope: !14292, file: !2979, line: 107, column: 5)
!14292 = distinct !DILexicalBlock(scope: !14285, file: !2979, line: 106, column: 7)
!14293 = !DILocalVariable(name: "l0", scope: !14290, file: !2979, line: 110, type: !1997)
!14294 = !DILocation(line: 0, scope: !14285)
!14295 = !DILocation(line: 106, column: 7, scope: !14292)
!14296 = !DILocation(line: 106, column: 7, scope: !14285)
!14297 = !DILocation(line: 110, column: 37, scope: !14290)
!14298 = !DILocation(line: 110, column: 21, scope: !14290)
!14299 = !DILocation(line: 0, scope: !14290)
!14300 = !DILocation(line: 0, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14302, file: !2979, line: 112, column: 11)
!14302 = distinct !DILexicalBlock(scope: !14303, file: !2979, line: 112, column: 11)
!14303 = distinct !DILexicalBlock(scope: !14304, file: !2979, line: 111, column: 38)
!14304 = distinct !DILexicalBlock(scope: !14305, file: !2979, line: 111, column: 9)
!14305 = distinct !DILexicalBlock(scope: !14290, file: !2979, line: 111, column: 9)
!14306 = !DILocation(line: 111, column: 14, scope: !14305)
!14307 = !DILocation(line: 0, scope: !14305)
!14308 = !DILocation(line: 111, column: 25, scope: !14304)
!14309 = !DILocation(line: 111, column: 9, scope: !14305)
!14310 = !DILocation(line: 112, column: 11, scope: !14301)
!14311 = !DILocation(line: 112, column: 11, scope: !14302)
!14312 = !DILocation(line: 111, column: 34, scope: !14304)
!14313 = !DILocation(line: 111, column: 9, scope: !14304)
!14314 = distinct !{!14314, !14309, !14315}
!14315 = !DILocation(line: 113, column: 9, scope: !14305)
!14316 = !DILocation(line: 116, column: 1, scope: !14285)
!14317 = distinct !DISubprogram(name: "gt_pch_p_18sorted_fields_type", scope: !2979, file: !2979, line: 153, type: !12650, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14318)
!14318 = !{!14319, !14320, !14321, !14322, !14323, !14324, !14326}
!14319 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14317, file: !2979, line: 153, type: !1524)
!14320 = !DILocalVariable(name: "x_p", arg: 2, scope: !14317, file: !2979, line: 154, type: !1524)
!14321 = !DILocalVariable(name: "op", arg: 3, scope: !14317, file: !2979, line: 155, type: !3105)
!14322 = !DILocalVariable(name: "cookie", arg: 4, scope: !14317, file: !2979, line: 156, type: !1524)
!14323 = !DILocalVariable(name: "x", scope: !14317, file: !2979, line: 158, type: !14132)
!14324 = !DILocalVariable(name: "i0", scope: !14325, file: !2979, line: 160, type: !1997)
!14325 = distinct !DILexicalBlock(scope: !14317, file: !2979, line: 159, column: 3)
!14326 = !DILocalVariable(name: "l0", scope: !14325, file: !2979, line: 161, type: !1997)
!14327 = !DILocation(line: 0, scope: !14317)
!14328 = !DILocation(line: 161, column: 33, scope: !14325)
!14329 = !DILocation(line: 161, column: 17, scope: !14325)
!14330 = !DILocation(line: 0, scope: !14325)
!14331 = !DILocation(line: 0, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14333, file: !2979, line: 163, column: 11)
!14333 = distinct !DILexicalBlock(scope: !14334, file: !2979, line: 162, column: 34)
!14334 = distinct !DILexicalBlock(scope: !14335, file: !2979, line: 162, column: 5)
!14335 = distinct !DILexicalBlock(scope: !14325, file: !2979, line: 162, column: 5)
!14336 = !DILocation(line: 162, column: 10, scope: !14335)
!14337 = !DILocation(line: 0, scope: !14335)
!14338 = !DILocation(line: 162, column: 21, scope: !14334)
!14339 = !DILocation(line: 162, column: 5, scope: !14335)
!14340 = !DILocation(line: 164, column: 15, scope: !14332)
!14341 = !DILocation(line: 164, column: 13, scope: !14332)
!14342 = !DILocation(line: 164, column: 9, scope: !14332)
!14343 = !DILocation(line: 162, column: 30, scope: !14334)
!14344 = !DILocation(line: 162, column: 5, scope: !14334)
!14345 = distinct !{!14345, !14339, !14346}
!14346 = !DILocation(line: 165, column: 5, scope: !14335)
!14347 = !DILocation(line: 167, column: 1, scope: !14317)
!14348 = distinct !DISubprogram(name: "gt_ggc_ma_ridpointers", scope: !2979, file: !2979, line: 173, type: !2329, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14349)
!14349 = !{!14350, !14351, !14354}
!14350 = !DILocalVariable(name: "x_p", arg: 1, scope: !14348, file: !2979, line: 173, type: !1524)
!14351 = !DILocalVariable(name: "i0", scope: !14352, file: !2979, line: 176, type: !1997)
!14352 = distinct !DILexicalBlock(scope: !14353, file: !2979, line: 175, column: 28)
!14353 = distinct !DILexicalBlock(scope: !14348, file: !2979, line: 175, column: 7)
!14354 = !DILocalVariable(name: "a__", scope: !14355, file: !2979, line: 180, type: !14356)
!14355 = distinct !DILexicalBlock(scope: !14352, file: !2979, line: 180, column: 5)
!14356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2158)
!14357 = !DILocation(line: 0, scope: !14348)
!14358 = !DILocation(line: 175, column: 7, scope: !14353)
!14359 = !DILocation(line: 175, column: 19, scope: !14353)
!14360 = !DILocation(line: 175, column: 7, scope: !14348)
!14361 = !DILocation(line: 177, column: 5, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14352, file: !2979, line: 177, column: 5)
!14363 = !DILocation(line: 0, scope: !14352)
!14364 = !DILocation(line: 0, scope: !14362)
!14365 = !DILocation(line: 177, column: 21, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14362, file: !2979, line: 177, column: 5)
!14367 = !DILocation(line: 178, column: 7, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14369, file: !2979, line: 178, column: 7)
!14369 = distinct !DILexicalBlock(scope: !14370, file: !2979, line: 178, column: 7)
!14370 = distinct !DILexicalBlock(scope: !14366, file: !2979, line: 177, column: 55)
!14371 = !DILocation(line: 178, column: 7, scope: !14369)
!14372 = !DILocation(line: 177, column: 51, scope: !14366)
!14373 = !DILocation(line: 177, column: 5, scope: !14366)
!14374 = distinct !{!14374, !14361, !14375}
!14375 = !DILocation(line: 179, column: 5, scope: !14362)
!14376 = !DILocation(line: 0, scope: !14355)
!14377 = !DILocation(line: 180, column: 5, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14355, file: !2979, line: 180, column: 5)
!14379 = !DILocation(line: 180, column: 5, scope: !14355)
!14380 = !DILocation(line: 182, column: 1, scope: !14348)
!14381 = distinct !DISubprogram(name: "gt_pch_na_ridpointers", scope: !2979, file: !2979, line: 204, type: !2329, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14382)
!14382 = !{!14383, !14384}
!14383 = !DILocalVariable(name: "x_p", arg: 1, scope: !14381, file: !2979, line: 204, type: !1524)
!14384 = !DILocalVariable(name: "i1", scope: !14385, file: !2979, line: 207, type: !1997)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !2979, line: 206, column: 28)
!14386 = distinct !DILexicalBlock(scope: !14381, file: !2979, line: 206, column: 7)
!14387 = !DILocation(line: 0, scope: !14381)
!14388 = !DILocation(line: 206, column: 7, scope: !14386)
!14389 = !DILocation(line: 206, column: 19, scope: !14386)
!14390 = !DILocation(line: 206, column: 7, scope: !14381)
!14391 = !DILocation(line: 208, column: 5, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14385, file: !2979, line: 208, column: 5)
!14393 = !DILocation(line: 0, scope: !14385)
!14394 = !DILocation(line: 0, scope: !14392)
!14395 = !DILocation(line: 208, column: 21, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14392, file: !2979, line: 208, column: 5)
!14397 = !DILocation(line: 209, column: 7, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14399, file: !2979, line: 209, column: 7)
!14399 = distinct !DILexicalBlock(scope: !14400, file: !2979, line: 209, column: 7)
!14400 = distinct !DILexicalBlock(scope: !14396, file: !2979, line: 208, column: 55)
!14401 = !DILocation(line: 209, column: 7, scope: !14399)
!14402 = !DILocation(line: 208, column: 51, scope: !14396)
!14403 = !DILocation(line: 208, column: 5, scope: !14396)
!14404 = distinct !{!14404, !14391, !14405}
!14405 = !DILocation(line: 210, column: 5, scope: !14392)
!14406 = !DILocation(line: 211, column: 25, scope: !14385)
!14407 = !DILocation(line: 211, column: 5, scope: !14385)
!14408 = !DILocation(line: 212, column: 3, scope: !14385)
!14409 = !DILocation(line: 213, column: 1, scope: !14381)
!14410 = distinct !DISubprogram(name: "tree_operand_length", scope: !140, file: !140, line: 5347, type: !11412, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14411)
!14411 = !{!14412}
!14412 = !DILocalVariable(name: "node", arg: 1, scope: !14410, file: !140, line: 5347, type: !2855)
!14413 = !DILocation(line: 0, scope: !14410)
!14414 = !DILocation(line: 5349, column: 7, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14410, file: !140, line: 5349, column: 7)
!14416 = !DILocation(line: 5349, column: 7, scope: !14410)
!14417 = !DILocation(line: 5350, column: 12, scope: !14415)
!14418 = !DILocation(line: 5350, column: 5, scope: !14415)
!14419 = !DILocation(line: 5352, column: 12, scope: !14415)
!14420 = !DILocation(line: 5352, column: 5, scope: !14415)
!14421 = !DILocation(line: 0, scope: !14415)
!14422 = !DILocation(line: 5353, column: 1, scope: !14410)
!14423 = distinct !DISubprogram(name: "warning_candidate_p", scope: !3, file: !3, line: 2471, type: !14424, scopeLine: 2472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14426)
!14424 = !DISubroutineType(types: !14425)
!14425 = !{!1520, !1527}
!14426 = !{!14427}
!14427 = !DILocalVariable(name: "x", arg: 1, scope: !14423, file: !3, line: 2471, type: !1527)
!14428 = !DILocation(line: 0, scope: !14423)
!14429 = !DILocation(line: 2475, column: 12, scope: !14423)
!14430 = !DILocation(line: 2475, column: 23, scope: !14423)
!14431 = !DILocation(line: 2475, column: 26, scope: !14423)
!14432 = !DILocation(line: 2476, column: 5, scope: !14423)
!14433 = !DILocation(line: 2476, column: 8, scope: !14423)
!14434 = !DILocation(line: 2476, column: 22, scope: !14423)
!14435 = !DILocation(line: 2476, column: 26, scope: !14423)
!14436 = !DILocation(line: 2476, column: 54, scope: !14423)
!14437 = !DILocation(line: 2476, column: 57, scope: !14423)
!14438 = !DILocation(line: 2475, column: 3, scope: !14423)
!14439 = distinct !DISubprogram(name: "new_tlist", scope: !3, file: !3, line: 2358, type: !14440, scopeLine: 2359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14442)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{!2847, !2847, !1527, !1527}
!14442 = !{!14443, !14444, !14445, !14446}
!14443 = !DILocalVariable(name: "next", arg: 1, scope: !14439, file: !3, line: 2358, type: !2847)
!14444 = !DILocalVariable(name: "t", arg: 2, scope: !14439, file: !3, line: 2358, type: !1527)
!14445 = !DILocalVariable(name: "writer", arg: 3, scope: !14439, file: !3, line: 2358, type: !1527)
!14446 = !DILocalVariable(name: "l", scope: !14439, file: !3, line: 2360, type: !2847)
!14447 = !DILocation(line: 0, scope: !14439)
!14448 = !DILocation(line: 2361, column: 7, scope: !14439)
!14449 = !DILocation(line: 2362, column: 6, scope: !14439)
!14450 = !DILocation(line: 2362, column: 11, scope: !14439)
!14451 = !DILocation(line: 2363, column: 6, scope: !14439)
!14452 = !DILocation(line: 2363, column: 11, scope: !14439)
!14453 = !DILocation(line: 2364, column: 6, scope: !14439)
!14454 = !DILocation(line: 2364, column: 13, scope: !14439)
!14455 = !DILocation(line: 2365, column: 3, scope: !14439)
!14456 = distinct !DISubprogram(name: "merge_tlist", scope: !3, file: !3, line: 2392, type: !14457, scopeLine: 2393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14459)
!14457 = !DISubroutineType(types: !14458)
!14458 = !{null, !7424, !2847, !1520}
!14459 = !{!14460, !14461, !14462, !14463, !14464, !14466, !14467}
!14460 = !DILocalVariable(name: "to", arg: 1, scope: !14456, file: !3, line: 2392, type: !7424)
!14461 = !DILocalVariable(name: "add", arg: 2, scope: !14456, file: !3, line: 2392, type: !2847)
!14462 = !DILocalVariable(name: "copy", arg: 3, scope: !14456, file: !3, line: 2392, type: !1520)
!14463 = !DILocalVariable(name: "end", scope: !14456, file: !3, line: 2394, type: !7424)
!14464 = !DILocalVariable(name: "found", scope: !14465, file: !3, line: 2401, type: !1520)
!14465 = distinct !DILexicalBlock(scope: !14456, file: !3, line: 2400, column: 5)
!14466 = !DILocalVariable(name: "tmp2", scope: !14465, file: !3, line: 2402, type: !2847)
!14467 = !DILocalVariable(name: "next", scope: !14465, file: !3, line: 2403, type: !2847)
!14468 = !DILocation(line: 0, scope: !14456)
!14469 = !DILocation(line: 2396, column: 3, scope: !14456)
!14470 = !DILocation(line: 2396, column: 10, scope: !14456)
!14471 = !DILocation(line: 0, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14473, file: !3, line: 2413, column: 2)
!14473 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 2412, column: 11)
!14474 = !DILocation(line: 2399, column: 3, scope: !14456)
!14475 = !DILocation(line: 2394, column: 18, scope: !14456)
!14476 = !DILocation(line: 0, scope: !14465)
!14477 = !DILocation(line: 2403, column: 33, scope: !14465)
!14478 = !DILocation(line: 0, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14480, file: !3, line: 2406, column: 6)
!14480 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 2405, column: 7)
!14481 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 2405, column: 7)
!14482 = !DILocation(line: 0, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14484, file: !3, line: 2409, column: 10)
!14484 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 2407, column: 4)
!14485 = !DILocation(line: 2405, column: 12, scope: !14481)
!14486 = !DILocation(line: 0, scope: !14481)
!14487 = !DILocation(line: 2405, column: 7, scope: !14481)
!14488 = !DILocation(line: 2406, column: 31, scope: !14479)
!14489 = !DILocation(line: 2406, column: 42, scope: !14479)
!14490 = !DILocation(line: 2406, column: 6, scope: !14479)
!14491 = !DILocation(line: 2406, column: 6, scope: !14480)
!14492 = !DILocation(line: 2409, column: 17, scope: !14483)
!14493 = !DILocation(line: 2409, column: 11, scope: !14483)
!14494 = !DILocation(line: 2409, column: 10, scope: !14484)
!14495 = !DILocation(line: 2410, column: 28, scope: !14483)
!14496 = !DILocation(line: 2410, column: 21, scope: !14483)
!14497 = !DILocation(line: 2410, column: 8, scope: !14483)
!14498 = !DILocation(line: 2405, column: 43, scope: !14480)
!14499 = !DILocation(line: 2405, column: 7, scope: !14480)
!14500 = distinct !{!14500, !14487, !14501}
!14501 = !DILocation(line: 2411, column: 4, scope: !14481)
!14502 = !DILocation(line: 2412, column: 12, scope: !14473)
!14503 = !DILocation(line: 2412, column: 11, scope: !14465)
!14504 = !DILocation(line: 2414, column: 46, scope: !14472)
!14505 = !DILocation(line: 2414, column: 57, scope: !14472)
!14506 = !DILocation(line: 2414, column: 24, scope: !14472)
!14507 = !DILocation(line: 2414, column: 9, scope: !14472)
!14508 = !DILocation(line: 2415, column: 19, scope: !14472)
!14509 = !DILocation(line: 2416, column: 9, scope: !14472)
!14510 = !DILocation(line: 2417, column: 2, scope: !14472)
!14511 = distinct !{!14511, !14474, !14512}
!14512 = !DILocation(line: 2419, column: 5, scope: !14456)
!14513 = !DILocation(line: 2420, column: 1, scope: !14456)
!14514 = !DILocation(line: 2397, column: 20, scope: !14456)
!14515 = distinct !{!14515, !14469, !14514}
!14516 = distinct !DISubprogram(name: "add_tlist", scope: !3, file: !3, line: 2372, type: !14517, scopeLine: 2373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14519)
!14517 = !DISubroutineType(types: !14518)
!14518 = !{null, !7424, !2847, !1527, !1520}
!14519 = !{!14520, !14521, !14522, !14523, !14524}
!14520 = !DILocalVariable(name: "to", arg: 1, scope: !14516, file: !3, line: 2372, type: !7424)
!14521 = !DILocalVariable(name: "add", arg: 2, scope: !14516, file: !3, line: 2372, type: !2847)
!14522 = !DILocalVariable(name: "exclude_writer", arg: 3, scope: !14516, file: !3, line: 2372, type: !1527)
!14523 = !DILocalVariable(name: "copy", arg: 4, scope: !14516, file: !3, line: 2372, type: !1520)
!14524 = !DILocalVariable(name: "next", scope: !14525, file: !3, line: 2376, type: !2847)
!14525 = distinct !DILexicalBlock(scope: !14516, file: !3, line: 2375, column: 5)
!14526 = !DILocation(line: 0, scope: !14516)
!14527 = !DILocation(line: 0, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 2377, column: 11)
!14529 = !DILocation(line: 0, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 2379, column: 11)
!14531 = !DILocation(line: 2374, column: 3, scope: !14516)
!14532 = !DILocation(line: 2376, column: 33, scope: !14525)
!14533 = !DILocation(line: 0, scope: !14525)
!14534 = !DILocation(line: 2378, column: 14, scope: !14528)
!14535 = !DILocation(line: 2378, column: 12, scope: !14528)
!14536 = !DILocation(line: 2379, column: 27, scope: !14530)
!14537 = !DILocation(line: 2379, column: 55, scope: !14530)
!14538 = !DILocation(line: 2379, column: 31, scope: !14530)
!14539 = !DILocation(line: 2379, column: 11, scope: !14525)
!14540 = !DILocation(line: 2380, column: 8, scope: !14530)
!14541 = !DILocation(line: 2380, column: 6, scope: !14530)
!14542 = !DILocation(line: 2380, column: 2, scope: !14530)
!14543 = distinct !{!14543, !14531, !14544}
!14544 = !DILocation(line: 2382, column: 5, scope: !14516)
!14545 = !DILocation(line: 2383, column: 1, scope: !14516)
!14546 = !DILocation(line: 2380, column: 26, scope: !14530)
!14547 = !DILocation(line: 2380, column: 36, scope: !14530)
!14548 = !DILocation(line: 2380, column: 47, scope: !14530)
!14549 = !DILocation(line: 2380, column: 15, scope: !14530)
!14550 = distinct !DISubprogram(name: "warn_for_collisions_1", scope: !3, file: !3, line: 2427, type: !14551, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14553)
!14551 = !DISubroutineType(types: !14552)
!14552 = !{null, !1527, !1527, !2847, !1520}
!14553 = !{!14554, !14555, !14556, !14557, !14558}
!14554 = !DILocalVariable(name: "written", arg: 1, scope: !14550, file: !3, line: 2427, type: !1527)
!14555 = !DILocalVariable(name: "writer", arg: 2, scope: !14550, file: !3, line: 2427, type: !1527)
!14556 = !DILocalVariable(name: "list", arg: 3, scope: !14550, file: !3, line: 2427, type: !2847)
!14557 = !DILocalVariable(name: "only_writes", arg: 4, scope: !14550, file: !3, line: 2428, type: !1520)
!14558 = !DILocalVariable(name: "tmp", scope: !14550, file: !3, line: 2430, type: !2847)
!14559 = !DILocation(line: 0, scope: !14550)
!14560 = !DILocation(line: 2433, column: 8, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 2433, column: 3)
!14562 = !DILocation(line: 0, scope: !14561)
!14563 = !DILocation(line: 2433, column: 3, scope: !14561)
!14564 = !DILocation(line: 0, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14566, file: !3, line: 2439, column: 11)
!14566 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 2438, column: 5)
!14567 = !DILocation(line: 0, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14565, file: !3, line: 2442, column: 2)
!14569 = !DILocation(line: 2437, column: 3, scope: !14550)
!14570 = !DILocation(line: 2439, column: 36, scope: !14565)
!14571 = !DILocation(line: 2439, column: 11, scope: !14565)
!14572 = !DILocation(line: 2440, column: 4, scope: !14565)
!14573 = !DILocation(line: 2440, column: 33, scope: !14565)
!14574 = !DILocation(line: 2440, column: 8, scope: !14565)
!14575 = !DILocation(line: 2441, column: 4, scope: !14565)
!14576 = !DILocation(line: 2443, column: 28, scope: !14568)
!14577 = !DILocation(line: 2443, column: 17, scope: !14568)
!14578 = !DILocation(line: 2443, column: 15, scope: !14568)
!14579 = !DILocation(line: 2444, column: 16, scope: !14568)
!14580 = !DILocation(line: 2445, column: 11, scope: !14568)
!14581 = !DILocation(line: 2445, column: 36, scope: !14568)
!14582 = !DILocation(line: 2447, column: 15, scope: !14568)
!14583 = !DILocation(line: 2444, column: 4, scope: !14568)
!14584 = !DILocation(line: 2448, column: 2, scope: !14568)
!14585 = !DILocation(line: 2449, column: 20, scope: !14566)
!14586 = distinct !{!14586, !14569, !14587}
!14587 = !DILocation(line: 2450, column: 5, scope: !14550)
!14588 = !DILocation(line: 2451, column: 1, scope: !14550)
!14589 = !DILocation(line: 2434, column: 33, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14591, file: !3, line: 2434, column: 9)
!14591 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 2433, column: 3)
!14592 = !DILocation(line: 2434, column: 9, scope: !14590)
!14593 = !DILocation(line: 2434, column: 9, scope: !14591)
!14594 = !DILocation(line: 2433, column: 42, scope: !14591)
!14595 = !DILocation(line: 2433, column: 3, scope: !14591)
!14596 = distinct !{!14596, !14563, !14597}
!14597 = !DILocation(line: 2435, column: 7, scope: !14561)
!14598 = !DILocation(line: 2441, column: 30, scope: !14565)
!14599 = !DILocation(line: 2441, column: 24, scope: !14565)
!14600 = !DILocation(line: 2439, column: 11, scope: !14566)
!14601 = distinct !DISubprogram(name: "candidate_equal_p", scope: !3, file: !3, line: 2481, type: !6618, scopeLine: 2482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14602)
!14602 = !{!14603, !14604}
!14603 = !DILocalVariable(name: "x", arg: 1, scope: !14601, file: !3, line: 2481, type: !2855)
!14604 = !DILocalVariable(name: "y", arg: 2, scope: !14601, file: !3, line: 2481, type: !2855)
!14605 = !DILocation(line: 0, scope: !14601)
!14606 = !DILocation(line: 2483, column: 13, scope: !14601)
!14607 = !DILocation(line: 2483, column: 19, scope: !14601)
!14608 = !DILocation(line: 2483, column: 23, scope: !14601)
!14609 = !DILocation(line: 2483, column: 28, scope: !14601)
!14610 = !DILocation(line: 2483, column: 25, scope: !14601)
!14611 = !DILocation(line: 2483, column: 33, scope: !14601)
!14612 = !DILocation(line: 2483, column: 30, scope: !14601)
!14613 = !DILocation(line: 2483, column: 3, scope: !14601)
!14614 = distinct !DISubprogram(name: "def_fn_type", scope: !3, file: !3, line: 4542, type: !14615, scopeLine: 4543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14617)
!14615 = !DISubroutineType(types: !14616)
!14616 = !{null, !2856, !2856, !1519, !1520, null}
!14617 = !{!14618, !14619, !14620, !14621, !14622, !14623, !14624, !14625, !14626, !14630}
!14618 = !DILocalVariable(name: "def", arg: 1, scope: !14614, file: !3, line: 4542, type: !2856)
!14619 = !DILocalVariable(name: "ret", arg: 2, scope: !14614, file: !3, line: 4542, type: !2856)
!14620 = !DILocalVariable(name: "var", arg: 3, scope: !14614, file: !3, line: 4542, type: !1519)
!14621 = !DILocalVariable(name: "n", arg: 4, scope: !14614, file: !3, line: 4542, type: !1520)
!14622 = !DILocalVariable(name: "args", scope: !14614, file: !3, line: 4544, type: !1527)
!14623 = !DILocalVariable(name: "t", scope: !14614, file: !3, line: 4544, type: !1527)
!14624 = !DILocalVariable(name: "list", scope: !14614, file: !3, line: 4545, type: !12807)
!14625 = !DILocalVariable(name: "i", scope: !14614, file: !3, line: 4546, type: !1520)
!14626 = !DILocalVariable(name: "a", scope: !14627, file: !3, line: 4551, type: !2856)
!14627 = distinct !DILexicalBlock(scope: !14628, file: !3, line: 4550, column: 5)
!14628 = distinct !DILexicalBlock(scope: !14629, file: !3, line: 4549, column: 3)
!14629 = distinct !DILexicalBlock(scope: !14614, file: !3, line: 4549, column: 3)
!14630 = !DILabel(scope: !14614, name: "egress", file: !3, line: 4568)
!14631 = !DILocation(line: 0, scope: !14614)
!14632 = !DILocation(line: 4545, column: 3, scope: !14614)
!14633 = !DILocation(line: 4545, column: 11, scope: !14614)
!14634 = !DILocation(line: 4548, column: 3, scope: !14614)
!14635 = !DILocation(line: 0, scope: !14627)
!14636 = !DILocation(line: 4549, column: 8, scope: !14629)
!14637 = !DILocation(line: 4544, column: 8, scope: !14614)
!14638 = !DILocation(line: 0, scope: !14629)
!14639 = !DILocation(line: 4549, column: 17, scope: !14628)
!14640 = !DILocation(line: 4549, column: 3, scope: !14629)
!14641 = !DILocation(line: 4551, column: 39, scope: !14627)
!14642 = !DILocation(line: 4552, column: 11, scope: !14627)
!14643 = !DILocation(line: 4553, column: 16, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14627, file: !3, line: 4553, column: 11)
!14645 = !DILocation(line: 4553, column: 13, scope: !14644)
!14646 = !DILocation(line: 4553, column: 11, scope: !14627)
!14647 = !DILocation(line: 4555, column: 14, scope: !14627)
!14648 = !DILocation(line: 4556, column: 5, scope: !14628)
!14649 = !DILocation(line: 4549, column: 22, scope: !14628)
!14650 = !DILocation(line: 4549, column: 3, scope: !14628)
!14651 = distinct !{!14651, !14640, !14652}
!14652 = !DILocation(line: 4556, column: 5, scope: !14629)
!14653 = !DILocation(line: 4557, column: 3, scope: !14614)
!14654 = !DILocation(line: 4559, column: 10, scope: !14614)
!14655 = !DILocation(line: 4560, column: 8, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14614, file: !3, line: 4560, column: 7)
!14657 = !DILocation(line: 4560, column: 7, scope: !14614)
!14658 = !DILocation(line: 4561, column: 27, scope: !14656)
!14659 = !DILocation(line: 4561, column: 12, scope: !14656)
!14660 = !DILocation(line: 4561, column: 5, scope: !14656)
!14661 = !DILocation(line: 4563, column: 7, scope: !14614)
!14662 = !DILocation(line: 4564, column: 12, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14614, file: !3, line: 4564, column: 7)
!14664 = !DILocation(line: 4564, column: 9, scope: !14663)
!14665 = !DILocation(line: 4564, column: 7, scope: !14614)
!14666 = !DILocation(line: 4566, column: 7, scope: !14614)
!14667 = !DILocation(line: 4566, column: 3, scope: !14614)
!14668 = !DILocation(line: 4569, column: 3, scope: !14614)
!14669 = !DILocation(line: 4568, column: 2, scope: !14614)
!14670 = !DILocation(line: 4569, column: 22, scope: !14614)
!14671 = !DILocation(line: 4570, column: 1, scope: !14614)
!14672 = distinct !DISubprogram(name: "c_init_attributes", scope: !3, file: !3, line: 5788, type: !5478, scopeLine: 5789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3142)
!14673 = !DILocation(line: 45, column: 1, scope: !14674)
!14674 = !DILexicalBlockFile(scope: !14672, file: !14675, discriminator: 0)
!14675 = !DIFile(filename: "./builtin-attrs.def", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!14676 = !DILocation(line: 52, column: 1, scope: !14674)
!14677 = !DILocation(line: 53, column: 1, scope: !14674)
!14678 = !DILocation(line: 54, column: 1, scope: !14674)
!14679 = !DILocation(line: 55, column: 1, scope: !14674)
!14680 = !DILocation(line: 56, column: 1, scope: !14674)
!14681 = !DILocation(line: 57, column: 1, scope: !14674)
!14682 = !DILocation(line: 58, column: 1, scope: !14674)
!14683 = !DILocation(line: 65, column: 1, scope: !14674)
!14684 = !DILocation(line: 66, column: 1, scope: !14674)
!14685 = !DILocation(line: 67, column: 1, scope: !14674)
!14686 = !DILocation(line: 68, column: 1, scope: !14674)
!14687 = !DILocation(line: 69, column: 1, scope: !14674)
!14688 = !DILocation(line: 70, column: 1, scope: !14674)
!14689 = !DILocation(line: 71, column: 1, scope: !14674)
!14690 = !DILocation(line: 72, column: 1, scope: !14674)
!14691 = !DILocation(line: 73, column: 1, scope: !14674)
!14692 = !DILocation(line: 74, column: 1, scope: !14674)
!14693 = !DILocation(line: 78, column: 1, scope: !14674)
!14694 = !DILocation(line: 79, column: 1, scope: !14674)
!14695 = !DILocation(line: 80, column: 1, scope: !14674)
!14696 = !DILocation(line: 81, column: 1, scope: !14674)
!14697 = !DILocation(line: 82, column: 1, scope: !14674)
!14698 = !DILocation(line: 83, column: 1, scope: !14674)
!14699 = !DILocation(line: 84, column: 1, scope: !14674)
!14700 = !DILocation(line: 85, column: 1, scope: !14674)
!14701 = !DILocation(line: 86, column: 1, scope: !14674)
!14702 = !DILocation(line: 87, column: 1, scope: !14674)
!14703 = !DILocation(line: 88, column: 1, scope: !14674)
!14704 = !DILocation(line: 89, column: 1, scope: !14674)
!14705 = !DILocation(line: 90, column: 1, scope: !14674)
!14706 = !DILocation(line: 91, column: 1, scope: !14674)
!14707 = !DILocation(line: 92, column: 1, scope: !14674)
!14708 = !DILocation(line: 93, column: 1, scope: !14674)
!14709 = !DILocation(line: 94, column: 1, scope: !14674)
!14710 = !DILocation(line: 95, column: 1, scope: !14674)
!14711 = !DILocation(line: 96, column: 1, scope: !14674)
!14712 = !DILocation(line: 98, column: 1, scope: !14674)
!14713 = !DILocation(line: 100, column: 1, scope: !14674)
!14714 = !DILocation(line: 102, column: 1, scope: !14674)
!14715 = !DILocation(line: 104, column: 1, scope: !14674)
!14716 = !DILocation(line: 106, column: 1, scope: !14674)
!14717 = !DILocation(line: 108, column: 1, scope: !14674)
!14718 = !DILocation(line: 110, column: 1, scope: !14674)
!14719 = !DILocation(line: 112, column: 1, scope: !14674)
!14720 = !DILocation(line: 116, column: 1, scope: !14674)
!14721 = !DILocation(line: 118, column: 1, scope: !14674)
!14722 = !DILocation(line: 120, column: 1, scope: !14674)
!14723 = !DILocation(line: 122, column: 1, scope: !14674)
!14724 = !DILocation(line: 124, column: 1, scope: !14674)
!14725 = !DILocation(line: 127, column: 1, scope: !14674)
!14726 = !DILocation(line: 130, column: 1, scope: !14674)
!14727 = !DILocation(line: 133, column: 1, scope: !14674)
!14728 = !DILocation(line: 136, column: 1, scope: !14674)
!14729 = !DILocation(line: 139, column: 1, scope: !14674)
!14730 = !DILocation(line: 142, column: 1, scope: !14674)
!14731 = !DILocation(line: 145, column: 1, scope: !14674)
!14732 = !DILocation(line: 148, column: 1, scope: !14674)
!14733 = !DILocation(line: 151, column: 1, scope: !14674)
!14734 = !DILocation(line: 154, column: 1, scope: !14674)
!14735 = !DILocation(line: 175, column: 1, scope: !14674)
!14736 = !DILocation(line: 176, column: 1, scope: !14674)
!14737 = !DILocation(line: 177, column: 1, scope: !14674)
!14738 = !DILocation(line: 178, column: 1, scope: !14674)
!14739 = !DILocation(line: 179, column: 1, scope: !14674)
!14740 = !DILocation(line: 180, column: 1, scope: !14674)
!14741 = !DILocation(line: 181, column: 1, scope: !14674)
!14742 = !DILocation(line: 182, column: 1, scope: !14674)
!14743 = !DILocation(line: 183, column: 1, scope: !14674)
!14744 = !DILocation(line: 184, column: 1, scope: !14674)
!14745 = !DILocation(line: 185, column: 1, scope: !14674)
!14746 = !DILocation(line: 186, column: 1, scope: !14674)
!14747 = !DILocation(line: 187, column: 1, scope: !14674)
!14748 = !DILocation(line: 188, column: 1, scope: !14674)
!14749 = !DILocation(line: 189, column: 1, scope: !14674)
!14750 = !DILocation(line: 190, column: 1, scope: !14674)
!14751 = !DILocation(line: 199, column: 1, scope: !14674)
!14752 = !DILocation(line: 200, column: 1, scope: !14674)
!14753 = !DILocation(line: 5807, column: 1, scope: !14754)
!14754 = !DILexicalBlockFile(scope: !14672, file: !3, discriminator: 0)
!14755 = distinct !DISubprogram(name: "def_builtin_1", scope: !3, file: !3, line: 5178, type: !14756, scopeLine: 5184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14758)
!14756 = !DISubroutineType(types: !14757)
!14757 = !{null, !508, !1525, !1495, !1527, !1527, !1519, !1519, !1519, !1527, !1519}
!14758 = !{!14759, !14760, !14761, !14762, !14763, !14764, !14765, !14766, !14767, !14768, !14769, !14770}
!14759 = !DILocalVariable(name: "fncode", arg: 1, scope: !14755, file: !3, line: 5178, type: !508)
!14760 = !DILocalVariable(name: "name", arg: 2, scope: !14755, file: !3, line: 5179, type: !1525)
!14761 = !DILocalVariable(name: "fnclass", arg: 3, scope: !14755, file: !3, line: 5180, type: !1495)
!14762 = !DILocalVariable(name: "fntype", arg: 4, scope: !14755, file: !3, line: 5181, type: !1527)
!14763 = !DILocalVariable(name: "libtype", arg: 5, scope: !14755, file: !3, line: 5181, type: !1527)
!14764 = !DILocalVariable(name: "both_p", arg: 6, scope: !14755, file: !3, line: 5182, type: !1519)
!14765 = !DILocalVariable(name: "fallback_p", arg: 7, scope: !14755, file: !3, line: 5182, type: !1519)
!14766 = !DILocalVariable(name: "nonansi_p", arg: 8, scope: !14755, file: !3, line: 5182, type: !1519)
!14767 = !DILocalVariable(name: "fnattrs", arg: 9, scope: !14755, file: !3, line: 5183, type: !1527)
!14768 = !DILocalVariable(name: "implicit_p", arg: 10, scope: !14755, file: !3, line: 5183, type: !1519)
!14769 = !DILocalVariable(name: "decl", scope: !14755, file: !3, line: 5185, type: !1527)
!14770 = !DILocalVariable(name: "libname", scope: !14755, file: !3, line: 5186, type: !1525)
!14771 = !DILocation(line: 0, scope: !14755)
!14772 = !DILocation(line: 5188, column: 17, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14755, file: !3, line: 5188, column: 7)
!14774 = !DILocation(line: 5188, column: 14, scope: !14773)
!14775 = !DILocation(line: 5188, column: 7, scope: !14755)
!14776 = !DILocation(line: 5191, column: 3, scope: !14755)
!14777 = !DILocation(line: 5195, column: 20, scope: !14755)
!14778 = !DILocation(line: 5195, column: 18, scope: !14755)
!14779 = !DILocation(line: 5197, column: 12, scope: !14755)
!14780 = !DILocation(line: 5196, column: 10, scope: !14755)
!14781 = !DILocation(line: 5199, column: 7, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14755, file: !3, line: 5199, column: 7)
!14783 = !DILocation(line: 5200, column: 11, scope: !14782)
!14784 = !DILocation(line: 5200, column: 7, scope: !14782)
!14785 = !DILocation(line: 5200, column: 31, scope: !14782)
!14786 = !DILocation(line: 5201, column: 7, scope: !14782)
!14787 = !DILocation(line: 5201, column: 12, scope: !14782)
!14788 = !DILocation(line: 5201, column: 25, scope: !14782)
!14789 = !DILocation(line: 5201, column: 22, scope: !14782)
!14790 = !DILocation(line: 5202, column: 5, scope: !14782)
!14791 = !DILocation(line: 5205, column: 3, scope: !14755)
!14792 = !DILocation(line: 5205, column: 32, scope: !14755)
!14793 = !DILocation(line: 5206, column: 7, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14755, file: !3, line: 5206, column: 7)
!14795 = !DILocation(line: 5206, column: 7, scope: !14755)
!14796 = !DILocation(line: 5207, column: 5, scope: !14794)
!14797 = !DILocation(line: 5207, column: 43, scope: !14794)
!14798 = !DILocation(line: 5208, column: 1, scope: !14755)
!14799 = distinct !DISubprogram(name: "builtin_function_disabled_p", scope: !3, file: !3, line: 5160, type: !14800, scopeLine: 5161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14802)
!14800 = !DISubroutineType(types: !14801)
!14801 = !{!1519, !1525}
!14802 = !{!14803, !14804}
!14803 = !DILocalVariable(name: "name", arg: 1, scope: !14799, file: !3, line: 5160, type: !1525)
!14804 = !DILocalVariable(name: "p", scope: !14799, file: !3, line: 5162, type: !2797)
!14805 = !DILocation(line: 0, scope: !14799)
!14806 = !DILocation(line: 5163, column: 8, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14799, file: !3, line: 5163, column: 3)
!14808 = !DILocation(line: 0, scope: !14807)
!14809 = !DILocation(line: 5163, column: 33, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 5163, column: 3)
!14811 = !DILocation(line: 5163, column: 3, scope: !14807)
!14812 = !DILocation(line: 5165, column: 28, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 5165, column: 11)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !3, line: 5164, column: 5)
!14815 = !DILocation(line: 5165, column: 11, scope: !14813)
!14816 = !DILocation(line: 5165, column: 34, scope: !14813)
!14817 = !DILocation(line: 5165, column: 11, scope: !14814)
!14818 = !DILocation(line: 5163, column: 49, scope: !14810)
!14819 = !DILocation(line: 5163, column: 3, scope: !14810)
!14820 = distinct !{!14820, !14811, !14821}
!14821 = !DILocation(line: 5167, column: 5, scope: !14807)
!14822 = !DILocation(line: 5169, column: 1, scope: !14799)
!14823 = distinct !DISubprogram(name: "match_case_to_enum_1", scope: !3, file: !3, line: 5473, type: !6998, scopeLine: 5474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14824)
!14824 = !{!14825, !14826, !14827, !14828}
!14825 = !DILocalVariable(name: "key", arg: 1, scope: !14823, file: !3, line: 5473, type: !1527)
!14826 = !DILocalVariable(name: "type", arg: 2, scope: !14823, file: !3, line: 5473, type: !1527)
!14827 = !DILocalVariable(name: "label", arg: 3, scope: !14823, file: !3, line: 5473, type: !1527)
!14828 = !DILocalVariable(name: "buf", scope: !14823, file: !3, line: 5475, type: !14829)
!14829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 280, elements: !14830)
!14830 = !{!14831}
!14831 = !DISubrange(count: 35)
!14832 = !DILocation(line: 0, scope: !14823)
!14833 = !DILocation(line: 5475, column: 3, scope: !14823)
!14834 = !DILocation(line: 5475, column: 8, scope: !14823)
!14835 = !DILocation(line: 5479, column: 7, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 5479, column: 7)
!14837 = !DILocation(line: 5479, column: 31, scope: !14836)
!14838 = !DILocation(line: 5479, column: 7, scope: !14823)
!14839 = !DILocation(line: 5481, column: 8, scope: !14836)
!14840 = !DILocation(line: 5480, column: 5, scope: !14836)
!14841 = !DILocation(line: 5482, column: 13, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14836, file: !3, line: 5482, column: 12)
!14843 = !DILocation(line: 5483, column: 5, scope: !14842)
!14844 = !DILocation(line: 5483, column: 32, scope: !14842)
!14845 = !DILocation(line: 5484, column: 5, scope: !14842)
!14846 = !DILocation(line: 5484, column: 8, scope: !14842)
!14847 = !DILocation(line: 5484, column: 31, scope: !14842)
!14848 = !DILocation(line: 5482, column: 12, scope: !14836)
!14849 = !DILocation(line: 5486, column: 8, scope: !14842)
!14850 = !DILocation(line: 5485, column: 5, scope: !14842)
!14851 = !DILocation(line: 5490, column: 33, scope: !14842)
!14852 = !DILocation(line: 5488, column: 5, scope: !14842)
!14853 = !DILocation(line: 5492, column: 7, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 5492, column: 7)
!14855 = !DILocation(line: 5492, column: 24, scope: !14854)
!14856 = !DILocation(line: 0, scope: !14854)
!14857 = !DILocation(line: 5492, column: 7, scope: !14823)
!14858 = !DILocation(line: 5493, column: 5, scope: !14854)
!14859 = !DILocation(line: 5498, column: 5, scope: !14854)
!14860 = !DILocation(line: 5502, column: 1, scope: !14823)
!14861 = distinct !DISubprogram(name: "get_priority", scope: !3, file: !3, line: 6273, type: !14862, scopeLine: 6274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14864)
!14862 = !DISubroutineType(types: !14863)
!14863 = !{!3966, !1527, !1519}
!14864 = !{!14865, !14866, !14867, !14868, !14869}
!14865 = !DILocalVariable(name: "args", arg: 1, scope: !14861, file: !3, line: 6273, type: !1527)
!14866 = !DILocalVariable(name: "is_destructor", arg: 2, scope: !14861, file: !3, line: 6273, type: !1519)
!14867 = !DILocalVariable(name: "pri", scope: !14861, file: !3, line: 6275, type: !1582)
!14868 = !DILocalVariable(name: "arg", scope: !14861, file: !3, line: 6276, type: !1527)
!14869 = !DILabel(scope: !14861, name: "invalid", file: !3, line: 6314)
!14870 = !DILocation(line: 0, scope: !14861)
!14871 = !DILocation(line: 6278, column: 8, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 6278, column: 7)
!14873 = !DILocation(line: 6278, column: 7, scope: !14861)
!14874 = !DILocation(line: 6290, column: 9, scope: !14861)
!14875 = !DILocation(line: 6291, column: 8, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 6291, column: 7)
!14877 = !DILocation(line: 6292, column: 7, scope: !14876)
!14878 = !DILocation(line: 6292, column: 11, scope: !14876)
!14879 = !DILocation(line: 6291, column: 7, scope: !14861)
!14880 = !DILocation(line: 6295, column: 23, scope: !14861)
!14881 = !DILocation(line: 6295, column: 9, scope: !14861)
!14882 = !DILocation(line: 6296, column: 15, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 6296, column: 7)
!14884 = !DILocation(line: 6299, column: 11, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 6299, column: 7)
!14886 = !DILocation(line: 6299, column: 7, scope: !14861)
!14887 = !DILocation(line: 6301, column: 11, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 6301, column: 11)
!14889 = distinct !DILexicalBlock(scope: !14885, file: !3, line: 6300, column: 5)
!14890 = !DILocation(line: 6301, column: 11, scope: !14889)
!14891 = !DILocation(line: 6302, column: 2, scope: !14888)
!14892 = !DILocation(line: 6307, column: 2, scope: !14888)
!14893 = !DILocation(line: 6312, column: 10, scope: !14861)
!14894 = !DILocation(line: 6312, column: 3, scope: !14861)
!14895 = !DILocation(line: 6314, column: 2, scope: !14861)
!14896 = !DILocation(line: 6315, column: 7, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 6315, column: 7)
!14898 = !DILocation(line: 6315, column: 7, scope: !14861)
!14899 = !DILocation(line: 6316, column: 5, scope: !14897)
!14900 = !DILocation(line: 6319, column: 5, scope: !14897)
!14901 = !DILocation(line: 6322, column: 1, scope: !14861)
!14902 = distinct !DISubprogram(name: "get_nonnull_operand", scope: !3, file: !3, line: 7539, type: !14903, scopeLine: 7540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14906)
!14903 = !DISubroutineType(types: !14904)
!14904 = !{!1519, !1527, !14905}
!14905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!14906 = !{!14907, !14908}
!14907 = !DILocalVariable(name: "arg_num_expr", arg: 1, scope: !14902, file: !3, line: 7539, type: !1527)
!14908 = !DILocalVariable(name: "valp", arg: 2, scope: !14902, file: !3, line: 7539, type: !14905)
!14909 = !DILocation(line: 0, scope: !14902)
!14910 = !DILocation(line: 7542, column: 7, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14902, file: !3, line: 7542, column: 7)
!14912 = !DILocation(line: 7542, column: 32, scope: !14911)
!14913 = !DILocation(line: 7543, column: 7, scope: !14911)
!14914 = !DILocation(line: 7543, column: 10, scope: !14911)
!14915 = !DILocation(line: 7543, column: 43, scope: !14911)
!14916 = !DILocation(line: 7542, column: 7, scope: !14902)
!14917 = !DILocation(line: 7546, column: 11, scope: !14902)
!14918 = !DILocation(line: 7546, column: 9, scope: !14902)
!14919 = !DILocation(line: 7547, column: 3, scope: !14902)
!14920 = !DILocation(line: 7548, column: 1, scope: !14902)
!14921 = distinct !DISubprogram(name: "VEC_const_char_p_gc_reserve", scope: !3, file: !3, line: 7726, type: !14922, scopeLine: 7726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14924)
!14922 = !DISubroutineType(types: !14923)
!14923 = !{!1520, !12258, !1520}
!14924 = !{!14925, !14926, !14927}
!14925 = !DILocalVariable(name: "vec_", arg: 1, scope: !14921, file: !3, line: 7726, type: !12258)
!14926 = !DILocalVariable(name: "alloc_", arg: 2, scope: !14921, file: !3, line: 7726, type: !1520)
!14927 = !DILocalVariable(name: "extend", scope: !14921, file: !3, line: 7726, type: !1520)
!14928 = !DILocation(line: 0, scope: !14921)
!14929 = !DILocation(line: 7726, column: 1, scope: !14921)
!14930 = !DILocation(line: 7726, column: 1, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14921, file: !3, line: 7726, column: 1)
!14932 = distinct !DISubprogram(name: "VEC_const_char_p_base_quick_push", scope: !3, file: !3, line: 7725, type: !14933, scopeLine: 7725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14935)
!14933 = !DISubroutineType(types: !14934)
!14934 = !{!12257, !12246, !2841}
!14935 = !{!14936, !14937, !14938}
!14936 = !DILocalVariable(name: "vec_", arg: 1, scope: !14932, file: !3, line: 7725, type: !12246)
!14937 = !DILocalVariable(name: "obj_", arg: 2, scope: !14932, file: !3, line: 7725, type: !2841)
!14938 = !DILocalVariable(name: "slot_", scope: !14932, file: !3, line: 7725, type: !12257)
!14939 = !DILocation(line: 0, scope: !14932)
!14940 = !DILocation(line: 7725, column: 1, scope: !14932)
!14941 = distinct !DISubprogram(name: "VEC_const_char_p_base_space", scope: !3, file: !3, line: 7725, type: !14942, scopeLine: 7725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14944)
!14942 = !DISubroutineType(types: !14943)
!14943 = !{!1520, !12246, !1520}
!14944 = !{!14945, !14946}
!14945 = !DILocalVariable(name: "vec_", arg: 1, scope: !14941, file: !3, line: 7725, type: !12246)
!14946 = !DILocalVariable(name: "alloc_", arg: 2, scope: !14941, file: !3, line: 7725, type: !1520)
!14947 = !DILocation(line: 0, scope: !14941)
!14948 = !DILocation(line: 7725, column: 1, scope: !14941)
!14949 = distinct !DISubprogram(name: "nonnull_check_p", scope: !3, file: !3, line: 7499, type: !14950, scopeLine: 7500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14952)
!14950 = !DISubroutineType(types: !14951)
!14951 = !{!1519, !1527, !1580}
!14952 = !{!14953, !14954, !14955, !14956}
!14953 = !DILocalVariable(name: "args", arg: 1, scope: !14949, file: !3, line: 7499, type: !1527)
!14954 = !DILocalVariable(name: "param_num", arg: 2, scope: !14949, file: !3, line: 7499, type: !1580)
!14955 = !DILocalVariable(name: "arg_num", scope: !14949, file: !3, line: 7501, type: !1580)
!14956 = !DILocalVariable(name: "found", scope: !14957, file: !3, line: 7505, type: !1519)
!14957 = distinct !DILexicalBlock(scope: !14958, file: !3, line: 7504, column: 5)
!14958 = distinct !DILexicalBlock(scope: !14959, file: !3, line: 7503, column: 3)
!14959 = distinct !DILexicalBlock(scope: !14949, file: !3, line: 7503, column: 3)
!14960 = !DILocation(line: 0, scope: !14949)
!14961 = !DILocation(line: 7501, column: 3, scope: !14949)
!14962 = !DILocation(line: 7501, column: 26, scope: !14949)
!14963 = !DILocation(line: 7503, column: 3, scope: !14949)
!14964 = !DILocation(line: 7503, column: 3, scope: !14959)
!14965 = !DILocation(line: 7505, column: 41, scope: !14957)
!14966 = !DILocation(line: 7505, column: 20, scope: !14957)
!14967 = !DILocation(line: 0, scope: !14957)
!14968 = !DILocation(line: 7507, column: 7, scope: !14957)
!14969 = !DILocation(line: 7509, column: 11, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14957, file: !3, line: 7509, column: 11)
!14971 = !DILocation(line: 7509, column: 19, scope: !14970)
!14972 = !DILocation(line: 7503, column: 23, scope: !14958)
!14973 = !DILocation(line: 7503, column: 3, scope: !14958)
!14974 = distinct !{!14974, !14964, !14975}
!14975 = !DILocation(line: 7511, column: 5, scope: !14959)
!14976 = !DILocation(line: 7513, column: 1, scope: !14949)
!14977 = distinct !DISubprogram(name: "check_nonnull_arg", scope: !3, file: !3, line: 7520, type: !12407, scopeLine: 7522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14978)
!14978 = !{!14979, !14980, !14981}
!14979 = !DILocalVariable(name: "ctx", arg: 1, scope: !14977, file: !3, line: 7520, type: !1524)
!14980 = !DILocalVariable(name: "param", arg: 2, scope: !14977, file: !3, line: 7520, type: !1527)
!14981 = !DILocalVariable(name: "param_num", arg: 3, scope: !14977, file: !3, line: 7521, type: !1580)
!14982 = !DILocation(line: 0, scope: !14977)
!14983 = !DILocation(line: 7527, column: 7, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14977, file: !3, line: 7527, column: 7)
!14985 = !DILocation(line: 7527, column: 37, scope: !14984)
!14986 = !DILocation(line: 7527, column: 7, scope: !14977)
!14987 = !DILocation(line: 7530, column: 7, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14977, file: !3, line: 7530, column: 7)
!14989 = !DILocation(line: 7530, column: 7, scope: !14977)
!14990 = !DILocation(line: 7531, column: 5, scope: !14988)
!14991 = !DILocation(line: 7533, column: 1, scope: !14977)
!14992 = distinct !DISubprogram(name: "init_call_expr_arg_iterator", scope: !140, file: !140, line: 5375, type: !14993, scopeLine: 5376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14995)
!14993 = !DISubroutineType(types: !14994)
!14994 = !{null, !1527, !12496}
!14995 = !{!14996, !14997}
!14996 = !DILocalVariable(name: "exp", arg: 1, scope: !14992, file: !140, line: 5375, type: !1527)
!14997 = !DILocalVariable(name: "iter", arg: 2, scope: !14992, file: !140, line: 5375, type: !12496)
!14998 = !DILocation(line: 0, scope: !14992)
!14999 = !DILocation(line: 5377, column: 9, scope: !14992)
!15000 = !DILocation(line: 5377, column: 11, scope: !14992)
!15001 = !DILocation(line: 5378, column: 13, scope: !14992)
!15002 = !DILocation(line: 5378, column: 9, scope: !14992)
!15003 = !DILocation(line: 5378, column: 11, scope: !14992)
!15004 = !DILocation(line: 5379, column: 9, scope: !14992)
!15005 = !DILocation(line: 5379, column: 11, scope: !14992)
!15006 = !DILocation(line: 5380, column: 1, scope: !14992)
!15007 = distinct !DISubprogram(name: "VEC_tree_base_replace", scope: !140, file: !140, line: 182, type: !15008, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15010)
!15008 = !DISubroutineType(types: !15009)
!15009 = !{!1527, !13963, !7, !1527}
!15010 = !{!15011, !15012, !15013, !15014}
!15011 = !DILocalVariable(name: "vec_", arg: 1, scope: !15007, file: !140, line: 182, type: !13963)
!15012 = !DILocalVariable(name: "ix_", arg: 2, scope: !15007, file: !140, line: 182, type: !7)
!15013 = !DILocalVariable(name: "obj_", arg: 3, scope: !15007, file: !140, line: 182, type: !1527)
!15014 = !DILocalVariable(name: "old_obj_", scope: !15007, file: !140, line: 182, type: !1527)
!15015 = !DILocation(line: 0, scope: !15007)
!15016 = !DILocation(line: 182, column: 1, scope: !15007)
!15017 = distinct !DISubprogram(name: "VEC_tree_gc_vec_gc_reserve", scope: !3, file: !3, line: 9300, type: !15018, scopeLine: 9300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15020)
!15018 = !DISubroutineType(types: !15019)
!15019 = !{!1520, !13975, !1520}
!15020 = !{!15021, !15022, !15023}
!15021 = !DILocalVariable(name: "vec_", arg: 1, scope: !15017, file: !3, line: 9300, type: !13975)
!15022 = !DILocalVariable(name: "alloc_", arg: 2, scope: !15017, file: !3, line: 9300, type: !1520)
!15023 = !DILocalVariable(name: "extend", scope: !15017, file: !3, line: 9300, type: !1520)
!15024 = !DILocation(line: 0, scope: !15017)
!15025 = !DILocation(line: 9300, column: 1, scope: !15017)
!15026 = !DILocation(line: 9300, column: 1, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15017, file: !3, line: 9300, column: 1)
!15028 = distinct !DISubprogram(name: "VEC_tree_gc_vec_base_quick_push", scope: !3, file: !3, line: 9299, type: !15029, scopeLine: 9299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15031)
!15029 = !DISubroutineType(types: !15030)
!15030 = !{!13974, !13933, !2829}
!15031 = !{!15032, !15033, !15034}
!15032 = !DILocalVariable(name: "vec_", arg: 1, scope: !15028, file: !3, line: 9299, type: !13933)
!15033 = !DILocalVariable(name: "obj_", arg: 2, scope: !15028, file: !3, line: 9299, type: !2829)
!15034 = !DILocalVariable(name: "slot_", scope: !15028, file: !3, line: 9299, type: !13974)
!15035 = !DILocation(line: 0, scope: !15028)
!15036 = !DILocation(line: 9299, column: 1, scope: !15028)
!15037 = distinct !DISubprogram(name: "VEC_tree_gc_vec_base_space", scope: !3, file: !3, line: 9299, type: !15038, scopeLine: 9299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15040)
!15038 = !DISubroutineType(types: !15039)
!15039 = !{!1520, !13933, !1520}
!15040 = !{!15041, !15042}
!15041 = !DILocalVariable(name: "vec_", arg: 1, scope: !15037, file: !3, line: 9299, type: !13933)
!15042 = !DILocalVariable(name: "alloc_", arg: 2, scope: !15037, file: !3, line: 9299, type: !1520)
!15043 = !DILocation(line: 0, scope: !15037)
!15044 = !DILocation(line: 9299, column: 1, scope: !15037)
!15045 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !140, file: !140, line: 182, type: !15046, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15048)
!15046 = !DISubroutineType(types: !15047)
!15047 = !{!1520, !13963, !1520}
!15048 = !{!15049, !15050}
!15049 = !DILocalVariable(name: "vec_", arg: 1, scope: !15045, file: !140, line: 182, type: !13963)
!15050 = !DILocalVariable(name: "alloc_", arg: 2, scope: !15045, file: !140, line: 182, type: !1520)
!15051 = !DILocation(line: 0, scope: !15045)
!15052 = !DILocation(line: 182, column: 1, scope: !15045)
!15053 = distinct !DISubprogram(name: "gt_pch_pa_ridpointers", scope: !2979, file: !2979, line: 186, type: !12650, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15054)
!15054 = !{!15055, !15056, !15057, !15058, !15059}
!15055 = !DILocalVariable(name: "this_obj", arg: 1, scope: !15053, file: !2979, line: 186, type: !1524)
!15056 = !DILocalVariable(name: "x_p", arg: 2, scope: !15053, file: !2979, line: 187, type: !1524)
!15057 = !DILocalVariable(name: "op", arg: 3, scope: !15053, file: !2979, line: 188, type: !3105)
!15058 = !DILocalVariable(name: "cookie", arg: 4, scope: !15053, file: !2979, line: 189, type: !1524)
!15059 = !DILocalVariable(name: "i0", scope: !15060, file: !2979, line: 192, type: !1997)
!15060 = distinct !DILexicalBlock(scope: !15061, file: !2979, line: 191, column: 28)
!15061 = distinct !DILexicalBlock(scope: !15053, file: !2979, line: 191, column: 7)
!15062 = !DILocation(line: 0, scope: !15053)
!15063 = !DILocation(line: 191, column: 7, scope: !15061)
!15064 = !DILocation(line: 191, column: 19, scope: !15061)
!15065 = !DILocation(line: 191, column: 7, scope: !15053)
!15066 = !DILocation(line: 193, column: 5, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15060, file: !2979, line: 193, column: 5)
!15068 = !DILocation(line: 0, scope: !15067)
!15069 = !DILocation(line: 0, scope: !15060)
!15070 = !DILocation(line: 193, column: 21, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15067, file: !2979, line: 193, column: 5)
!15072 = !DILocation(line: 194, column: 20, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15074, file: !2979, line: 194, column: 11)
!15074 = distinct !DILexicalBlock(scope: !15071, file: !2979, line: 193, column: 55)
!15075 = !DILocation(line: 194, column: 33, scope: !15073)
!15076 = !DILocation(line: 194, column: 11, scope: !15074)
!15077 = !DILocation(line: 195, column: 15, scope: !15073)
!15078 = !DILocation(line: 195, column: 13, scope: !15073)
!15079 = !DILocation(line: 195, column: 9, scope: !15073)
!15080 = !DILocation(line: 193, column: 51, scope: !15071)
!15081 = !DILocation(line: 193, column: 5, scope: !15071)
!15082 = distinct !{!15082, !15066, !15083}
!15083 = !DILocation(line: 196, column: 5, scope: !15067)
!15084 = !DILocation(line: 197, column: 32, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15060, file: !2979, line: 197, column: 9)
!15086 = !DILocation(line: 197, column: 9, scope: !15060)
!15087 = !DILocation(line: 198, column: 7, scope: !15085)
!15088 = !DILocation(line: 200, column: 1, scope: !15053)
